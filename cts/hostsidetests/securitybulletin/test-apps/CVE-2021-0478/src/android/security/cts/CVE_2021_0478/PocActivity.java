/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.cve_2021_0478;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.Manifest;
import android.os.Bundle;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;

public class PocActivity extends Activity {
    private WakeLock mScreenLock;
    private Context mContext;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        try {
            mContext = this.getApplicationContext();
            PowerManager pm = mContext.getSystemService(PowerManager.class);
            mScreenLock = pm.newWakeLock(
                    PowerManager.SCREEN_BRIGHT_WAKE_LOCK | PowerManager.ACQUIRE_CAUSES_WAKEUP,
                    "PocActivity");
            mScreenLock.acquire();
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_main);
            startServices();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    void startServices() {
        try {
            startForegroundService(new Intent(this, PocService.class));
            requestPermission();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void requestPermission() {
        try {
            this.requestPermissions(new String[] {Manifest.permission.ACCESS_FINE_LOCATION}, 12);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        mScreenLock.release();
    }
}
