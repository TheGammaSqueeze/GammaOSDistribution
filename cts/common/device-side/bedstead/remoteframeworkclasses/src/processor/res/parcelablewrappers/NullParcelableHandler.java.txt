/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.bedstead.remoteframeworkclasses;

import android.os.Handler;
import android.os.Parcel;
import android.os.Parcelable;

import com.google.android.enterprise.connectedapps.annotations.CustomParcelableWrapper;
import com.google.android.enterprise.connectedapps.internal.Bundler;
import com.google.android.enterprise.connectedapps.internal.BundlerType;

/**
 * This parcelable wrapper just passes null to callers.
 *
 * <p>It is not functional and only enables use of {@link Handler} for clients
 * which do not need to actually use the {@link Handler} param or return value.
 */
@CustomParcelableWrapper(originalType = Handler.class)
public final class NullParcelableHandler implements Parcelable {

    /**
     * Create a wrapper for a given {@link Handler}.
     */
    public static <F> NullParcelableHandler of(
            Bundler bundler, BundlerType type,
            Handler handler) {

        if (handler != null) {
            throw new IllegalArgumentException("handler can only be null");
        }

        return new NullParcelableHandler();
    }

    private NullParcelableHandler() {
    }

    public Handler get() {
        return null;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @SuppressWarnings("rawtypes")
    public static final Creator<NullParcelableHandler> CREATOR =
            new Creator<NullParcelableHandler>() {
                @Override
                public NullParcelableHandler createFromParcel(Parcel in) {
                    return new NullParcelableHandler();
                }

                @Override
                public NullParcelableHandler[] newArray(int size) {
                    return new NullParcelableHandler[size];
                }
            };
}