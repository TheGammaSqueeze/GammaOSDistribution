<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2018 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<resources>
    <attr name="icon" format="reference"/>
    <attr name="mute_icon" format="reference"/>
    <attr name="selectedIcon" format="reference"/>
    <attr name="intent" format="string"/>
    <attr name="longIntent" format="string"/>
    <attr name="selectedAlpha" format="float" />
    <attr name="unselectedAlpha" format="float" />

    <!-- Custom attributes to configure hvac values -->
    <declare-styleable name="AnimatedTemperatureView">
        <attr name="hvacAreaId" format="integer"/>
        <attr name="hvacPropertyId" format="integer"/>
        <attr name="hvacTempFormat" format="string"/>
        <!-- how far away the animations should center around -->
        <attr name="hvacPivotOffset" format="dimension"/>
        <attr name="hvacMinValue" format="float"/>
        <attr name="hvacMaxValue" format="float"/>
        <attr name="hvacMinText" format="string|reference"/>
        <attr name="hvacMaxText" format="string|reference"/>
        <attr name="android:gravity"/>
        <attr name="android:minEms"/>
        <attr name="android:textAppearance"/>
    </declare-styleable>

    <declare-styleable name="SeatTemperatureLevelButton">
        <attr name="seatTemperatureType">
            <enum name="heating" value="1"/>
            <enum name="cooling" value="-1"/>
        </attr>
        <!-- List of drawables that will be shown when the seat heat level button is clicked.
             This list should have exactly R.integer.hvac_seat_heat_level_count items.
             The first item should have the "off" drawable. -->
        <attr name="seatTemperatureIconDrawableList" format="reference"/>
    </declare-styleable>

    <!-- Allow for custom attribs to be added to a nav button -->
    <declare-styleable name="CarSystemBarButton">
        <!-- intent to start when button is click -->
        <attr name="intent" />
        <!-- intent to start when a long press has happened -->
        <attr name="longIntent" />
        <!-- start the intent as a broad cast instead of an activity if true-->
        <attr name="broadcast" format="boolean"/>
        <!-- Alpha value to used when in selected state.  Defaults 1f  -->
        <attr name="selectedAlpha" />
        <!-- Alpha value to used when in un-selected state.  Defaults 0.7f  -->
        <attr name="unselectedAlpha" />
        <!-- icon to be rendered when in selected state -->
        <attr name="selectedIcon" />
        <!-- icon to be rendered (drawable) -->
        <attr name="icon"/>
        <!-- categories that will be added as extras to the fired intents -->
        <attr name="categories" format="string"/>
        <!-- package names that will be added as extras to the fired intents -->
        <attr name="packages" format="string" />
        <!-- componentName names that will be used for detecting selected state -->
        <attr name="componentNames" format="string" />
        <!-- whether to highlight the button when selected. Defaults false -->
        <attr name="showMoreWhenSelected" format="boolean" />
        <!-- whether to highlight the button when selected. Defaults false -->
        <attr name="highlightWhenSelected" format="boolean" />
        <!-- whether to show the icon of the app currently associated this button's role. Only
             relevant for buttons associated to specific roles (e.g.: AssistantButton).
             Defaults false -->
        <attr name="useDefaultAppIconForRole" format="boolean"/>
        <!-- whether to clear the back stack when this button is pressed. Only relevant for buttons
             that have declared an intent that isn't used as a broadcast
             (i.e. CarSystemBarButton_intent is defined, CarSystemBarButton_broadcast is false).
             Defaults false. -->
        <attr name="clearBackStack" format="boolean"/>
        <!-- whether to toggle selected state when button is clicked. Defaults false -->
        <attr name="toggleSelected" format="boolean" />
    </declare-styleable>

    <!-- Custom attributes to configure HVAC values -->
    <declare-styleable name="HvacView">
        <attr name="hvacAreaId" format="integer"/>
        <attr name="hvacPropertyId" format="integer"/>
        <attr name="hvacTempFormat" format="string"/>
        <attr name="hvacToggleOnButtonDrawable" format="reference"/>
        <attr name="hvacToggleOffButtonDrawable" format="reference"/>
        <!-- Whether the given HvacView must be turned off if the HVAC power is off.
               Defaults to true. -->
        <attr name="hvacTurnOffIfPowerOff" format="boolean" />
        <!-- Whether the given HvacView must be turned off if the HVAC Auto mode is on.
               Defaults to false. -->
        <attr name="hvacTurnOffIfAutoOn" format="boolean" />
    </declare-styleable>

    <declare-styleable name="HvacIntegerToggleButton">
        <attr name="invalidValue" format="integer"/>
        <attr name="onValue" format="integer"/>
        <attr name="offValue" format="integer"/>
        <!-- Whether the given HvacView can be toggled off. This attribute can be useful when a
             group of HvacToggleButtons should be used in a radio button like manner (i.e. only one
             can be selected at a time, an option MUST be selected).
               Defaults to false. -->
        <attr name="preventToggleOff" format="boolean" />
    </declare-styleable>

    <declare-styleable name="carVolumeItems"/>
    <declare-styleable name="carVolumeItems_item">
        <!-- Align with AudioAttributes.USAGE_* -->
        <attr name="usage">
            <enum name="unknown" value="0"/>
            <enum name="media" value="1"/>
            <enum name="voice_communication" value="2"/>
            <enum name="voice_communication_signalling" value="3"/>
            <enum name="alarm" value="4"/>
            <enum name="notification" value="5"/>
            <enum name="notification_ringtone" value="6"/>
            <enum name="notification_communication_request" value="7"/>
            <enum name="notification_communication_instant" value="8"/>
            <enum name="notification_communication_delayed" value="9"/>
            <enum name="notification_event" value="10"/>
            <enum name="assistance_accessibility" value="11"/>
            <enum name="assistance_navigation_guidance" value="12"/>
            <enum name="assistance_sonification" value="13"/>
            <enum name="game" value="14"/>
            <!-- hidden, do not use -->
            <!-- enum name="virtual_source" value="15"/ -->
            <enum name="assistant" value="16"/>
            <enum name="call_assistant" value="17"/>
            <enum name="emergency" value="1000"/>
            <enum name="safety" value="1001"/>
            <enum name="vehicle_status" value="1002"/>
            <enum name="announcement" value="1003"/>
        </attr>

        <!-- Icon resource ids to render on UI -->
        <attr name="icon" />
        <attr name="mute_icon" />
    </declare-styleable>

    <declare-styleable name="SystemUIQCView">
        <attr name="remoteQCProvider" format="string"/>
        <attr name="localQCProvider" format="string"/>
    </declare-styleable>

    <declare-styleable name="QCFooterButton">
        <attr name="intent" format="string"/>
        <attr name="disableWhileDriving" format="boolean"/>
    </declare-styleable>
</resources>
