/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.internal.net.ipsec.test.ike.utils;

import static org.junit.Assert.assertArrayEquals;

import com.android.internal.util.HexDump;

import org.junit.Test;

import java.security.PrivateKey;
import java.security.cert.Certificate;

public class IkeCertUtilsTest {
    private static final String PRIVATE_KEY_HEX =
            "30820154020100300D06092A864886F70D01010105000482013E3082013A0201"
                    + "00024100A619747ECB62B7F5DC7A5917DA22A8A2C1AC676539AD4FA661647FF5"
                    + "124863EA91DCE62B05EAAAB5DBE33CEBB67CD8C712DB0EFFF74246F771556771"
                    + "DB40033D0203010001024029B1AC1783F064E3379412B7350F8C2B46D8831FDA"
                    + "C9917BDF68BDE203D3DE1885368F67225B0A9B258E8784648988D00A3151D131"
                    + "102DA1A05E5FCD033AA1F5022100D295A3EA422D1B6CD3C30D3DB2A73ACA64DC"
                    + "D5A92715A1AE5D963E44ED0C4C5F022100C9EBCB8A43C2D5EA569B5279E62CF5"
                    + "272187D53D8F174CDA6F9306B3793B95E302200F2EB4BBADFBBC8F73110C0257"
                    + "C010D008C7972BF3E26E5EB8E69D24B10682F70221009CF41A6CC92B239859E5"
                    + "B60066F8BF3EC183922F9D9060FED2079907DCCE823D022041021561129FE381"
                    + "BD6A0874F6EB676A2C35D450B046BD0C10AB1D8959A4C3EA";
    private static final String CERTIFICATE_HEX =
            "308203473082022FA003020102020865272245468451A9300D06092A864886F7"
                    + "0D01010B0500303D310B30090603550406130255533110300E060355040A1307"
                    + "416E64726F6964311C301A0603550403131363612E746573742E616E64726F69"
                    + "642E6E6574301E170D3139303731363137313833315A170D3234303731343137"
                    + "313833315A3041310B30090603550406130255533110300E060355040A130741"
                    + "6E64726F69643120301E060355040313177365727665722E746573742E616E64"
                    + "726F69642E6E657430820122300D06092A864886F70D01010105000382010F00"
                    + "3082010A0282010100E953933E73742049E8F935E09BA01E53E91D1768E0EAA3"
                    + "F8696459234D7B7992EDA5BEC8A82D4D310B7F0AF42CA6EE43D4D2418C025D69"
                    + "B5AB4C67653175EFEC0E22F2170620C7FFD39E20CD9F17435D863171935B7D5E"
                    + "0445CB8F9937B1ABDB7CE8C9DE564C67849F5D10125CAF682815A14879B09496"
                    + "3DC317CDBBFC94215A0579E0CF6DACF3863B2A11CB91EF1FE23138EB7C3D768B"
                    + "BF2490671A386C2EA6FAA7904190A0640C2F19A80517D2A3545C8AB7D640569F"
                    + "7BC108BBCA8F81CE6E48E780B81146D35E74D1213417A8528E51754660F0A1C2"
                    + "0653133FF6B3A5A1D424742E33454DA0CC96C5099146C69F6EE265CF749DDE70"
                    + "E9601761082C9979D30203010001A3473045301F0603551D2304183016801466"
                    + "14CEEBD951A54997C99CC5E8EE16250D19C4DF30220603551D11041B30198217"
                    + "7365727665722E746573742E616E64726F69642E6E6574300D06092A864886F7"
                    + "0D01010B05000382010100726A303370BACC7368230D2CD377EE7F55380B8682"
                    + "5F26E977160B14CD91DAF448915028553BDE1908B596A19C5E07489E8DA52AAC"
                    + "BCFFC4226A782DF06CD3FB2DE8E25B6AA0500A0974EBCDB431A2571D8FEF089D"
                    + "8974B8CB8F7E2183FE4F505558D36B23ECDC03270DDAE890944291E4A43770D5"
                    + "D51D9A2254EAE885E1F38BC7B349E60C8F96E127619BA4EC3DFF83E4681A279D"
                    + "036CF6C96393267691E62B8ABD71CDFE0F23D8227979E225C36E02360D680000"
                    + "A1A1CA5DA87D36081B0151171198CBA0AB5042A585CFDC0D13C017B087680F88"
                    + "0E781BB03504B29FE1660C9748FE6A407A76F3DEA6D356EAE5B531F24B27B4FA"
                    + "78653FB5D389FC846A75CC";

    @Test
    public void testCreateCertificateFromByteArray() throws Exception {
        byte[] certBytes = HexDump.hexStringToByteArray(CERTIFICATE_HEX);
        Certificate cert = IkeCertUtils.certificateFromByteArray(certBytes);

        assertArrayEquals(certBytes, cert.getEncoded());
    }

    @Test
    public void testCreatePrivateKeyFromByteArray() throws Exception {
        byte[] keyBytes = HexDump.hexStringToByteArray(PRIVATE_KEY_HEX);
        PrivateKey key = IkeCertUtils.privateKeyFromByteArray(keyBytes);

        assertArrayEquals(keyBytes, key.getEncoded());
    }
}
