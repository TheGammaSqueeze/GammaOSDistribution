/*
 * Copyright 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package {
    default_applicable_licenses: ["Android-Apache-2.0"],
}

cc_defaults {
    name: "NeuralNetworksSampleDriver_defaults",
    defaults: ["neuralnetworks_defaults"],
    // b/109953668, disable OpenMP
    // openmp: true,
    srcs: [
        "SampleDriver.cpp",
        "SampleDriverFull.cpp",
        "SampleDriverPartial.cpp",
        "SampleDriverUtils.cpp",
    ],
    header_libs: [
        "libneuralnetworks_headers",
    ],
    shared_libs: [
        "android.hardware.neuralnetworks-V1-ndk_platform",
        "android.hardware.neuralnetworks@1.0",
        "android.hardware.neuralnetworks@1.1",
        "android.hardware.neuralnetworks@1.2",
        "android.hardware.neuralnetworks@1.3",
        "android.hidl.allocator@1.0",
        "android.hidl.memory@1.0",
        "libbase",
        "libcutils",
        "libdl",
        "libfmq",
        "libhardware",
        "libhidlbase",
        "libhidlmemory",
        "liblog",
        "libnativewindow",
        "libtextclassifier_hash",
        "libutils",
    ],
    static_libs: [
        "libneuralnetworks_common",
    ],
}

cc_defaults {
    name: "NeuralNetworksSampleDriver_server_defaults",
    defaults: ["NeuralNetworksSampleDriver_defaults"],
    relative_install_path: "hw",
    proprietary: true,
}

cc_binary {
    name: "android.hardware.neuralnetworks@1.3-service-sample-all",
    srcs: ["SampleDriverAll.cpp"],
    defaults: ["NeuralNetworksSampleDriver_server_defaults"],
    init_rc: ["config/android.hardware.neuralnetworks@1.3-service-sample-all.rc"],
    vintf_fragments: ["config/android.hardware.neuralnetworks@1.3-service-sample-all.xml"],
}

cc_binary {
    name: "android.hardware.neuralnetworks@1.3-service-sample-float-fast",
    srcs: ["SampleDriverFloatFast.cpp"],
    defaults: ["NeuralNetworksSampleDriver_server_defaults"],
    init_rc: ["config/android.hardware.neuralnetworks@1.3-service-sample-float-fast.rc"],
    vintf_fragments: ["config/android.hardware.neuralnetworks@1.3-service-sample-float-fast.xml"],
}

cc_binary {
    name: "android.hardware.neuralnetworks@1.3-service-sample-float-xnnpack",
    srcs: ["SampleDriverFloatXNNPACK.cpp"],
    defaults: ["NeuralNetworksSampleDriver_server_defaults"],
    init_rc: ["config/android.hardware.neuralnetworks@1.3-service-sample-float-xnnpack.rc"],
    vintf_fragments: [
        "config/android.hardware.neuralnetworks@1.3-service-sample-float-xnnpack.xml",
    ],
    static_libs: [
        "libXNNPACK",
        "libpthreadpool",
    ],
    cflags: [
        "-Wno-unused-parameter",
    ],
}

cc_binary {
    name: "android.hardware.neuralnetworks@1.3-service-sample-float-slow",
    srcs: ["SampleDriverFloatSlow.cpp"],
    defaults: ["NeuralNetworksSampleDriver_server_defaults"],
    init_rc: ["config/android.hardware.neuralnetworks@1.3-service-sample-float-slow.rc"],
    vintf_fragments: ["config/android.hardware.neuralnetworks@1.3-service-sample-float-slow.xml"],
}

cc_binary {
    name: "android.hardware.neuralnetworks@1.3-service-sample-quant",
    srcs: ["SampleDriverQuant.cpp"],
    defaults: ["NeuralNetworksSampleDriver_server_defaults"],
    init_rc: ["config/android.hardware.neuralnetworks@1.3-service-sample-quant.rc"],
    vintf_fragments: ["config/android.hardware.neuralnetworks@1.3-service-sample-quant.xml"],
}

cc_binary {
    name: "android.hardware.neuralnetworks@1.3-service-sample-minimal",
    srcs: ["SampleDriverMinimal.cpp"],
    defaults: ["NeuralNetworksSampleDriver_server_defaults"],
    init_rc: ["config/android.hardware.neuralnetworks@1.3-service-sample-minimal.rc"],
    vintf_fragments: ["config/android.hardware.neuralnetworks@1.3-service-sample-minimal.xml"],
}

cc_library_static {
    name: "libSampleDriver",
    defaults: ["NeuralNetworksSampleDriver_defaults"],
    export_include_dirs: ["."],
}

cc_library_static {
    name: "neuralnetworks_canonical_sample_driver",
    defaults: ["neuralnetworks_defaults"],
    vendor_available: true,
    // b/109953668, disable OpenMP
    // openmp: true,
    srcs: [
        "Canonical*.cpp",
        "LimitedSupportDevice.cpp",
    ],
    header_libs: ["libneuralnetworks_headers"],
    export_include_dirs: ["."],
    static_libs: ["libneuralnetworks_common"],
    shared_libs: [
        "libbase",
        "libnativewindow",
    ],
}

cc_library_shared {
    name: "neuralnetworks_sample_sl_driver",
    defaults: ["neuralnetworks_defaults"],
    srcs: ["SampleDriverSL.cpp"],
    shared_libs: [
        "libbase",
        "libcutils",
        "liblog",
        "libnativewindow",
    ],
    // Change the soname, this library will be added as cc_prebuilt_library_shared
    // with different name to android.hardware.neuralnetworks-shim-service-sample
    ldflags: [
        "-Wl,-soname,neuralnetworks_sample_sl_driver_prebuilt.so",
    ],
    static_libs: [
        "libbase_ndk",
        "libcrypto_static",
        "libneuralnetworks_common_cl_cpu",
        "libtflite_static",
        "neuralnetworks_canonical_sample_driver",
        "neuralnetworks_types_cl",
    ],
    whole_static_libs: [
        "libneuralnetworks_cl",
    ],
}
