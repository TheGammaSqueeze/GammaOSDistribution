package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "prebuilts_sdk_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    //   SPDX-license-identifier-BSD
    //   SPDX-license-identifier-CPL-1.0
    //   SPDX-license-identifier-MIT
    //   SPDX-license-identifier-Unicode-DFS
    //   SPDX-license-identifier-W3C
    default_applicable_licenses: ["prebuilts_sdk_license"],
}

cc_prebuilt_library_shared {
    name: "libLLVM_android",
    vendor_available: true,
    host_supported: true,
    // TODO(ccross): this is necessary because the prebuilt module must have
    // all the variants that are in the source module.  Ideally Soong's
    // arch mutator should handle this.
    // TODO(b/153609531): remove when no longer needed.
    native_bridge_supported: true,
    target: {
        linux_glibc_x86_64: {
            srcs: ["linux/lib64/libLLVM_android.so"],
        },
        darwin_x86_64: {
            srcs: ["darwin/lib64/libLLVM_android.dylib"],
        },
        // TODO(ccross): this is necessary because the prebuilt module must have
        // all the variants that are in the source module.  Ideally Soong's
        // arch mutator should handle this.
        windows: {
            enabled: true,
        }
    },
}

cc_prebuilt_library_shared {
    name: "libclang_android",
    host_supported: true,
    // TODO(ccross): this is necessary because the prebuilt module must have
    // all the variants that are in the source module.  Ideally Soong's
    // arch mutator should handle this.
    // TODO(b/153609531): remove when no longer needed.
    native_bridge_supported: true,
    target: {
        linux_glibc_x86_64: {
            srcs: ["linux/lib64/libclang_android.so"],
        },
        darwin_x86_64: {
            srcs: ["darwin/lib64/libclang_android.dylib"],
        },
        // TODO(ccross): this is necessary because the prebuilt module must have
        // all the variants that are in the source module.  Ideally Soong's
        // arch mutator should handle this.
        windows: {
            enabled: true,
        }
    },
}

java_import {
    name: "sdk-core-lambda-stubs",
    jars: ["core-lambda-stubs.jar"],
}
