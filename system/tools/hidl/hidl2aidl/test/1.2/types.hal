/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package hidl2aidl.test@1.2;

import @1.1::OnlyIn11;
import @1.1::NameCollision;
import @1.1::Value;
import android.hidl.safe_union@1.0::Monostate;

struct NameCollision {
    @1.1::NameCollision reference;

    string c;
    int16_t d;
};

union UnionFoo {
    int64_t a;
    int8_t b;
    @1.1::OnlyIn11 c;
};

enum FooFlag : uint32_t {
    NONE = 0x0,
    FIRST = 0x1 << 0,
    SECOND = 0x1 << 1,
    THIRD = 0x1 << 2,
};

safe_union SafeUnionBar {
    Monostate noInit;
    int8_t a;
    uint64_t b;
    struct InnerStructBar {
      int8_t x;
      int8_t z;
    } innerStructBar;
    @1.1::OnlyIn11 c;
    string d;
    float e;
    double f;
    bitfield<FooFlag> g;
    @1.1::Value h;
    uint16_t i;
};

struct ArrayFoo {
    int8_t[12] a;
    uint32_t[12] b;
    @1.1::Value[12] c;
    string[2] d;
};

struct VectorFoo {
    vec<int8_t> a;
    vec<uint32_t> b;
    vec<@1.1::Value> c;
    vec<string> d;
};

