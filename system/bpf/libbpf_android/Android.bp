//
// Copyright (C) 2018 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    // http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // the below license kinds from "system_bpf_license":
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["system_bpf_license"],
}

cc_library_headers {
    name: "libbpf_android_headers",
    vendor_available: false,
    host_supported: false,
    native_bridge_supported: true,
    export_include_dirs: ["include"],
    target: {
        linux_bionic: {
            enabled: true,
        },
    },
    sdk_version: "30",
    header_libs: ["bpf_syscall_wrappers"],
    export_header_lib_headers: ["bpf_syscall_wrappers"],
}

cc_library {
    name: "libbpf_android",
    vendor_available: false,
    host_supported: false,
    native_bridge_supported: true,
    target: {
        android: {
            srcs: [
                "BpfUtils.cpp",
                "Loader.cpp",
            ],
            sanitize: {
                misc_undefined: ["integer"],
            },
        },
    },

    shared_libs: [
        "libbase",
        "libutils",
        "libprocessgroup",
        "liblog",
        "libbpf",
    ],
    header_libs: [
        "libbpf_android_headers"
    ],
    export_header_lib_headers: ["libbpf_android_headers"],
    export_shared_lib_headers: ["libbpf"],
    local_include_dirs: ["include"],

    defaults: ["bpf_defaults"],
    cflags: [
        "-Werror",
        "-Wall",
        "-Wextra",
    ],
}

cc_test {
    name: "libbpf_android_test",
    srcs: [
        "BpfMapTest.cpp",
    ],
    defaults: ["bpf_defaults"],
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-error=unused-variable",
    ],
    static_libs: ["libgmock"],
    shared_libs: [
        "libbpf_android",
        "libbase",
        "liblog",
        "libutils",
    ],
    require_root: true,
    test_suites: ["general-tests"],
}

cc_test {
    name: "libbpf_load_test",
    srcs: [
        "BpfLoadTest.cpp",
    ],
    defaults: ["bpf_defaults"],
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-error=unused-variable",
    ],
    static_libs: ["libgmock"],
    shared_libs: [
        "libbpf_android",
        "libbpf",
        "libbase",
        "liblog",
        "libutils",
    ],

    required: [
        "bpf_load_tp_prog.o",
    ],
    require_root: true,
}
