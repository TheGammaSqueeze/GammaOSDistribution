// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/power/android_energy_estimation_breakdown.proto

#include "protos/perfetto/trace/power/android_energy_estimation_breakdown.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2fcommon_2fandroid_5fenergy_5fconsumer_5fdescriptor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AndroidEnergyConsumerDescriptor_protos_2fperfetto_2fcommon_2fandroid_5fenergy_5fconsumer_5fdescriptor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto;
namespace perfetto {
namespace protos {
class AndroidEnergyEstimationBreakdown_EnergyUidBreakdownDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AndroidEnergyEstimationBreakdown_EnergyUidBreakdown> _instance;
} _AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_default_instance_;
class AndroidEnergyEstimationBreakdownDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AndroidEnergyEstimationBreakdown> _instance;
} _AndroidEnergyEstimationBreakdown_default_instance_;
}  // namespace protos
}  // namespace perfetto
static void InitDefaultsscc_info_AndroidEnergyEstimationBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_AndroidEnergyEstimationBreakdown_default_instance_;
    new (ptr) ::perfetto::protos::AndroidEnergyEstimationBreakdown();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::AndroidEnergyEstimationBreakdown::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AndroidEnergyEstimationBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_AndroidEnergyEstimationBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto}, {
      &scc_info_AndroidEnergyConsumerDescriptor_protos_2fperfetto_2fcommon_2fandroid_5fenergy_5fconsumer_5fdescriptor_2eproto.base,
      &scc_info_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto.base,}};

static void InitDefaultsscc_info_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_default_instance_;
    new (ptr) ::perfetto::protos::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::perfetto::protos::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto}, {}};

namespace perfetto {
namespace protos {

// ===================================================================

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::InitAsDefaultInstance() {
}
class AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidEnergyEstimationBreakdown_EnergyUidBreakdown>()._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_energy_uws(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
}
AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown(const AndroidEnergyEstimationBreakdown_EnergyUidBreakdown& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&energy_uws_, &from.energy_uws_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&energy_uws_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::SharedCtor() {
  ::memset(&energy_uws_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&energy_uws_)) + sizeof(uid_));
}

AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::~AndroidEnergyEstimationBreakdown_EnergyUidBreakdown() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  SharedDtor();
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::SharedDtor() {
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AndroidEnergyEstimationBreakdown_EnergyUidBreakdown& AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AndroidEnergyEstimationBreakdown_EnergyUidBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto.base);
  return *internal_default_instance();
}


void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&energy_uws_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&energy_uws_)) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 energy_uws = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_energy_uws(&has_bits);
          energy_uws_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 energy_uws = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_energy_uws(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &energy_uws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional int64 energy_uws = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->energy_uws(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
}

size_t AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 energy_uws = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->energy_uws());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const AndroidEnergyEstimationBreakdown_EnergyUidBreakdown*>(
      &from));
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::MergeFrom(const AndroidEnergyEstimationBreakdown_EnergyUidBreakdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      energy_uws_ = from.energy_uws_;
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::CopyFrom(const AndroidEnergyEstimationBreakdown_EnergyUidBreakdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::IsInitialized() const {
  return true;
}

void AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::InternalSwap(AndroidEnergyEstimationBreakdown_EnergyUidBreakdown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(energy_uws_, other->energy_uws_);
  swap(uid_, other->uid_);
}

std::string AndroidEnergyEstimationBreakdown_EnergyUidBreakdown::GetTypeName() const {
  return "perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown";
}


// ===================================================================

void AndroidEnergyEstimationBreakdown::InitAsDefaultInstance() {
  ::perfetto::protos::_AndroidEnergyEstimationBreakdown_default_instance_._instance.get_mutable()->energy_consumer_descriptor_ = const_cast< ::perfetto::protos::AndroidEnergyConsumerDescriptor*>(
      ::perfetto::protos::AndroidEnergyConsumerDescriptor::internal_default_instance());
}
class AndroidEnergyEstimationBreakdown::_Internal {
 public:
  using HasBits = decltype(std::declval<AndroidEnergyEstimationBreakdown>()._has_bits_);
  static const ::perfetto::protos::AndroidEnergyConsumerDescriptor& energy_consumer_descriptor(const AndroidEnergyEstimationBreakdown* msg);
  static void set_has_energy_consumer_descriptor(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_energy_consumer_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_energy_uws(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::perfetto::protos::AndroidEnergyConsumerDescriptor&
AndroidEnergyEstimationBreakdown::_Internal::energy_consumer_descriptor(const AndroidEnergyEstimationBreakdown* msg) {
  return *msg->energy_consumer_descriptor_;
}
void AndroidEnergyEstimationBreakdown::clear_energy_consumer_descriptor() {
  if (energy_consumer_descriptor_ != nullptr) energy_consumer_descriptor_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
AndroidEnergyEstimationBreakdown::AndroidEnergyEstimationBreakdown()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:perfetto.protos.AndroidEnergyEstimationBreakdown)
}
AndroidEnergyEstimationBreakdown::AndroidEnergyEstimationBreakdown(const AndroidEnergyEstimationBreakdown& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      per_uid_breakdown_(from.per_uid_breakdown_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_energy_consumer_descriptor()) {
    energy_consumer_descriptor_ = new ::perfetto::protos::AndroidEnergyConsumerDescriptor(*from.energy_consumer_descriptor_);
  } else {
    energy_consumer_descriptor_ = nullptr;
  }
  ::memcpy(&energy_uws_, &from.energy_uws_,
    static_cast<size_t>(reinterpret_cast<char*>(&energy_consumer_id_) -
    reinterpret_cast<char*>(&energy_uws_)) + sizeof(energy_consumer_id_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.AndroidEnergyEstimationBreakdown)
}

void AndroidEnergyEstimationBreakdown::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AndroidEnergyEstimationBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto.base);
  ::memset(&energy_consumer_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&energy_consumer_id_) -
      reinterpret_cast<char*>(&energy_consumer_descriptor_)) + sizeof(energy_consumer_id_));
}

AndroidEnergyEstimationBreakdown::~AndroidEnergyEstimationBreakdown() {
  // @@protoc_insertion_point(destructor:perfetto.protos.AndroidEnergyEstimationBreakdown)
  SharedDtor();
}

void AndroidEnergyEstimationBreakdown::SharedDtor() {
  if (this != internal_default_instance()) delete energy_consumer_descriptor_;
}

void AndroidEnergyEstimationBreakdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AndroidEnergyEstimationBreakdown& AndroidEnergyEstimationBreakdown::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AndroidEnergyEstimationBreakdown_protos_2fperfetto_2ftrace_2fpower_2fandroid_5fenergy_5festimation_5fbreakdown_2eproto.base);
  return *internal_default_instance();
}


void AndroidEnergyEstimationBreakdown::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.AndroidEnergyEstimationBreakdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  per_uid_breakdown_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(energy_consumer_descriptor_ != nullptr);
    energy_consumer_descriptor_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&energy_uws_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&energy_consumer_id_) -
        reinterpret_cast<char*>(&energy_uws_)) + sizeof(energy_consumer_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AndroidEnergyEstimationBreakdown::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .perfetto.protos.AndroidEnergyConsumerDescriptor energy_consumer_descriptor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_energy_consumer_descriptor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 energy_consumer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_energy_consumer_id(&has_bits);
          energy_consumer_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 energy_uws = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_energy_uws(&has_bits);
          energy_uws_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown per_uid_breakdown = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_per_uid_breakdown(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AndroidEnergyEstimationBreakdown::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:perfetto.protos.AndroidEnergyEstimationBreakdown)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .perfetto.protos.AndroidEnergyConsumerDescriptor energy_consumer_descriptor = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_energy_consumer_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 energy_consumer_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_energy_consumer_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &energy_consumer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 energy_uws = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_energy_uws(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &energy_uws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown per_uid_breakdown = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_per_uid_breakdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:perfetto.protos.AndroidEnergyEstimationBreakdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:perfetto.protos.AndroidEnergyEstimationBreakdown)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AndroidEnergyEstimationBreakdown::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:perfetto.protos.AndroidEnergyEstimationBreakdown)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.AndroidEnergyConsumerDescriptor energy_consumer_descriptor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::energy_consumer_descriptor(this), output);
  }

  // optional int32 energy_consumer_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->energy_consumer_id(), output);
  }

  // optional int64 energy_uws = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->energy_uws(), output);
  }

  // repeated .perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown per_uid_breakdown = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->per_uid_breakdown_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      4,
      this->per_uid_breakdown(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:perfetto.protos.AndroidEnergyEstimationBreakdown)
}

size_t AndroidEnergyEstimationBreakdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.AndroidEnergyEstimationBreakdown)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.AndroidEnergyEstimationBreakdown.EnergyUidBreakdown per_uid_breakdown = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->per_uid_breakdown_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->per_uid_breakdown(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .perfetto.protos.AndroidEnergyConsumerDescriptor energy_consumer_descriptor = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *energy_consumer_descriptor_);
    }

    // optional int64 energy_uws = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->energy_uws());
    }

    // optional int32 energy_consumer_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->energy_consumer_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AndroidEnergyEstimationBreakdown::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const AndroidEnergyEstimationBreakdown*>(
      &from));
}

void AndroidEnergyEstimationBreakdown::MergeFrom(const AndroidEnergyEstimationBreakdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.AndroidEnergyEstimationBreakdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  per_uid_breakdown_.MergeFrom(from.per_uid_breakdown_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_energy_consumer_descriptor()->::perfetto::protos::AndroidEnergyConsumerDescriptor::MergeFrom(from.energy_consumer_descriptor());
    }
    if (cached_has_bits & 0x00000002u) {
      energy_uws_ = from.energy_uws_;
    }
    if (cached_has_bits & 0x00000004u) {
      energy_consumer_id_ = from.energy_consumer_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AndroidEnergyEstimationBreakdown::CopyFrom(const AndroidEnergyEstimationBreakdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.AndroidEnergyEstimationBreakdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidEnergyEstimationBreakdown::IsInitialized() const {
  return true;
}

void AndroidEnergyEstimationBreakdown::InternalSwap(AndroidEnergyEstimationBreakdown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&per_uid_breakdown_)->InternalSwap(CastToBase(&other->per_uid_breakdown_));
  swap(energy_consumer_descriptor_, other->energy_consumer_descriptor_);
  swap(energy_uws_, other->energy_uws_);
  swap(energy_consumer_id_, other->energy_consumer_id_);
}

std::string AndroidEnergyEstimationBreakdown::GetTypeName() const {
  return "perfetto.protos.AndroidEnergyEstimationBreakdown";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown* Arena::CreateMaybeMessage< ::perfetto::protos::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::AndroidEnergyEstimationBreakdown_EnergyUidBreakdown >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::AndroidEnergyEstimationBreakdown* Arena::CreateMaybeMessage< ::perfetto::protos::AndroidEnergyEstimationBreakdown >(Arena* arena) {
  return Arena::CreateInternal< ::perfetto::protos::AndroidEnergyEstimationBreakdown >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
