// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system/apex/proto/apex_manifest.proto

#include "system/apex/proto/apex_manifest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_system_2fapex_2fproto_2fapex_5fmanifest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto;
namespace apex {
namespace proto {
class ApexManifest_CompressedApexMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApexManifest_CompressedApexMetadata> _instance;
} _ApexManifest_CompressedApexMetadata_default_instance_;
class ApexManifestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApexManifest> _instance;
} _ApexManifest_default_instance_;
}  // namespace proto
}  // namespace apex
static void InitDefaultsscc_info_ApexManifest_system_2fapex_2fproto_2fapex_5fmanifest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apex::proto::_ApexManifest_default_instance_;
    new (ptr) ::apex::proto::ApexManifest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apex::proto::ApexManifest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ApexManifest_system_2fapex_2fproto_2fapex_5fmanifest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ApexManifest_system_2fapex_2fproto_2fapex_5fmanifest_2eproto}, {
      &scc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base,}};

static void InitDefaultsscc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apex::proto::_ApexManifest_CompressedApexMetadata_default_instance_;
    new (ptr) ::apex::proto::ApexManifest_CompressedApexMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apex::proto::ApexManifest_CompressedApexMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_system_2fapex_2fproto_2fapex_5fmanifest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_system_2fapex_2fproto_2fapex_5fmanifest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_system_2fapex_2fproto_2fapex_5fmanifest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest_CompressedApexMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest_CompressedApexMetadata, originalapexdigest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, name_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, version_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, preinstallhook_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, postinstallhook_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, versionname_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, nocode_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, providenativelibs_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, requirenativelibs_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, jnilibs_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, requiresharedapexlibs_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, providesharedapexlibs_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, capexmetadata_),
  PROTOBUF_FIELD_OFFSET(::apex::proto::ApexManifest, supportsrebootlessupdate_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apex::proto::ApexManifest_CompressedApexMetadata)},
  { 6, -1, sizeof(::apex::proto::ApexManifest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apex::proto::_ApexManifest_CompressedApexMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apex::proto::_ApexManifest_default_instance_),
};

const char descriptor_table_protodef_system_2fapex_2fproto_2fapex_5fmanifest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%system/apex/proto/apex_manifest.proto\022"
  "\napex.proto\"\250\003\n\014ApexManifest\022\014\n\004name\030\001 \001"
  "(\t\022\017\n\007version\030\002 \001(\003\022\026\n\016preInstallHook\030\003 "
  "\001(\t\022\027\n\017postInstallHook\030\004 \001(\t\022\023\n\013versionN"
  "ame\030\005 \001(\t\022\016\n\006noCode\030\006 \001(\010\022\031\n\021provideNati"
  "veLibs\030\007 \003(\t\022\031\n\021requireNativeLibs\030\010 \003(\t\022"
  "\017\n\007jniLibs\030\t \003(\t\022\035\n\025requireSharedApexLib"
  "s\030\n \003(\t\022\035\n\025provideSharedApexLibs\030\013 \001(\010\022F"
  "\n\rcapexMetadata\030\014 \001(\0132/.apex.proto.ApexM"
  "anifest.CompressedApexMetadata\022 \n\030suppor"
  "tsRebootlessUpdate\030\r \001(\010\0324\n\026CompressedAp"
  "exMetadata\022\032\n\022originalApexDigest\030\001 \001(\tB\032"
  "\n\020com.android.apexB\006Protosb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_sccs[2] = {
  &scc_info_ApexManifest_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base,
  &scc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_once;
static bool descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto = {
  &descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_initialized, descriptor_table_protodef_system_2fapex_2fproto_2fapex_5fmanifest_2eproto, "system/apex/proto/apex_manifest.proto", 514,
  &descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_once, descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_sccs, descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_system_2fapex_2fproto_2fapex_5fmanifest_2eproto::offsets,
  file_level_metadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto, 2, file_level_enum_descriptors_system_2fapex_2fproto_2fapex_5fmanifest_2eproto, file_level_service_descriptors_system_2fapex_2fproto_2fapex_5fmanifest_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_system_2fapex_2fproto_2fapex_5fmanifest_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_system_2fapex_2fproto_2fapex_5fmanifest_2eproto), true);
namespace apex {
namespace proto {

// ===================================================================

void ApexManifest_CompressedApexMetadata::InitAsDefaultInstance() {
}
class ApexManifest_CompressedApexMetadata::_Internal {
 public:
};

ApexManifest_CompressedApexMetadata::ApexManifest_CompressedApexMetadata()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apex.proto.ApexManifest.CompressedApexMetadata)
}
ApexManifest_CompressedApexMetadata::ApexManifest_CompressedApexMetadata(const ApexManifest_CompressedApexMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  originalapexdigest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.originalapexdigest().empty()) {
    originalapexdigest_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.originalapexdigest_);
  }
  // @@protoc_insertion_point(copy_constructor:apex.proto.ApexManifest.CompressedApexMetadata)
}

void ApexManifest_CompressedApexMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base);
  originalapexdigest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ApexManifest_CompressedApexMetadata::~ApexManifest_CompressedApexMetadata() {
  // @@protoc_insertion_point(destructor:apex.proto.ApexManifest.CompressedApexMetadata)
  SharedDtor();
}

void ApexManifest_CompressedApexMetadata::SharedDtor() {
  originalapexdigest_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ApexManifest_CompressedApexMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApexManifest_CompressedApexMetadata& ApexManifest_CompressedApexMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApexManifest_CompressedApexMetadata_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base);
  return *internal_default_instance();
}


void ApexManifest_CompressedApexMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:apex.proto.ApexManifest.CompressedApexMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  originalapexdigest_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApexManifest_CompressedApexMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string originalApexDigest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_originalapexdigest(), ptr, ctx, "apex.proto.ApexManifest.CompressedApexMetadata.originalApexDigest");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApexManifest_CompressedApexMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:apex.proto.ApexManifest.CompressedApexMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string originalApexDigest = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_originalapexdigest()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->originalapexdigest().data(), static_cast<int>(this->originalapexdigest().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.CompressedApexMetadata.originalApexDigest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apex.proto.ApexManifest.CompressedApexMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apex.proto.ApexManifest.CompressedApexMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApexManifest_CompressedApexMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apex.proto.ApexManifest.CompressedApexMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string originalApexDigest = 1;
  if (this->originalapexdigest().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->originalapexdigest().data(), static_cast<int>(this->originalapexdigest().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.CompressedApexMetadata.originalApexDigest");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->originalapexdigest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apex.proto.ApexManifest.CompressedApexMetadata)
}

::PROTOBUF_NAMESPACE_ID::uint8* ApexManifest_CompressedApexMetadata::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apex.proto.ApexManifest.CompressedApexMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string originalApexDigest = 1;
  if (this->originalapexdigest().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->originalapexdigest().data(), static_cast<int>(this->originalapexdigest().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.CompressedApexMetadata.originalApexDigest");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->originalapexdigest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apex.proto.ApexManifest.CompressedApexMetadata)
  return target;
}

size_t ApexManifest_CompressedApexMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apex.proto.ApexManifest.CompressedApexMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string originalApexDigest = 1;
  if (this->originalapexdigest().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->originalapexdigest());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApexManifest_CompressedApexMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apex.proto.ApexManifest.CompressedApexMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ApexManifest_CompressedApexMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApexManifest_CompressedApexMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apex.proto.ApexManifest.CompressedApexMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apex.proto.ApexManifest.CompressedApexMetadata)
    MergeFrom(*source);
  }
}

void ApexManifest_CompressedApexMetadata::MergeFrom(const ApexManifest_CompressedApexMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apex.proto.ApexManifest.CompressedApexMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.originalapexdigest().size() > 0) {

    originalapexdigest_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.originalapexdigest_);
  }
}

void ApexManifest_CompressedApexMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apex.proto.ApexManifest.CompressedApexMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApexManifest_CompressedApexMetadata::CopyFrom(const ApexManifest_CompressedApexMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apex.proto.ApexManifest.CompressedApexMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApexManifest_CompressedApexMetadata::IsInitialized() const {
  return true;
}

void ApexManifest_CompressedApexMetadata::InternalSwap(ApexManifest_CompressedApexMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  originalapexdigest_.Swap(&other->originalapexdigest_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ApexManifest_CompressedApexMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApexManifest::InitAsDefaultInstance() {
  ::apex::proto::_ApexManifest_default_instance_._instance.get_mutable()->capexmetadata_ = const_cast< ::apex::proto::ApexManifest_CompressedApexMetadata*>(
      ::apex::proto::ApexManifest_CompressedApexMetadata::internal_default_instance());
}
class ApexManifest::_Internal {
 public:
  static const ::apex::proto::ApexManifest_CompressedApexMetadata& capexmetadata(const ApexManifest* msg);
};

const ::apex::proto::ApexManifest_CompressedApexMetadata&
ApexManifest::_Internal::capexmetadata(const ApexManifest* msg) {
  return *msg->capexmetadata_;
}
ApexManifest::ApexManifest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apex.proto.ApexManifest)
}
ApexManifest::ApexManifest(const ApexManifest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      providenativelibs_(from.providenativelibs_),
      requirenativelibs_(from.requirenativelibs_),
      jnilibs_(from.jnilibs_),
      requiresharedapexlibs_(from.requiresharedapexlibs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  preinstallhook_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.preinstallhook().empty()) {
    preinstallhook_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.preinstallhook_);
  }
  postinstallhook_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.postinstallhook().empty()) {
    postinstallhook_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.postinstallhook_);
  }
  versionname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.versionname().empty()) {
    versionname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.versionname_);
  }
  if (from.has_capexmetadata()) {
    capexmetadata_ = new ::apex::proto::ApexManifest_CompressedApexMetadata(*from.capexmetadata_);
  } else {
    capexmetadata_ = nullptr;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&supportsrebootlessupdate_) -
    reinterpret_cast<char*>(&version_)) + sizeof(supportsrebootlessupdate_));
  // @@protoc_insertion_point(copy_constructor:apex.proto.ApexManifest)
}

void ApexManifest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApexManifest_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preinstallhook_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postinstallhook_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  versionname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&capexmetadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&supportsrebootlessupdate_) -
      reinterpret_cast<char*>(&capexmetadata_)) + sizeof(supportsrebootlessupdate_));
}

ApexManifest::~ApexManifest() {
  // @@protoc_insertion_point(destructor:apex.proto.ApexManifest)
  SharedDtor();
}

void ApexManifest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preinstallhook_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postinstallhook_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  versionname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete capexmetadata_;
}

void ApexManifest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApexManifest& ApexManifest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApexManifest_system_2fapex_2fproto_2fapex_5fmanifest_2eproto.base);
  return *internal_default_instance();
}


void ApexManifest::Clear() {
// @@protoc_insertion_point(message_clear_start:apex.proto.ApexManifest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  providenativelibs_.Clear();
  requirenativelibs_.Clear();
  jnilibs_.Clear();
  requiresharedapexlibs_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preinstallhook_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postinstallhook_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  versionname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && capexmetadata_ != nullptr) {
    delete capexmetadata_;
  }
  capexmetadata_ = nullptr;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&supportsrebootlessupdate_) -
      reinterpret_cast<char*>(&version_)) + sizeof(supportsrebootlessupdate_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApexManifest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "apex.proto.ApexManifest.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string preInstallHook = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_preinstallhook(), ptr, ctx, "apex.proto.ApexManifest.preInstallHook");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string postInstallHook = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_postinstallhook(), ptr, ctx, "apex.proto.ApexManifest.postInstallHook");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string versionName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_versionname(), ptr, ctx, "apex.proto.ApexManifest.versionName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool noCode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          nocode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string provideNativeLibs = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_providenativelibs(), ptr, ctx, "apex.proto.ApexManifest.provideNativeLibs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // repeated string requireNativeLibs = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_requirenativelibs(), ptr, ctx, "apex.proto.ApexManifest.requireNativeLibs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // repeated string jniLibs = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_jnilibs(), ptr, ctx, "apex.proto.ApexManifest.jniLibs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      // repeated string requireSharedApexLibs = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_requiresharedapexlibs(), ptr, ctx, "apex.proto.ApexManifest.requireSharedApexLibs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // bool provideSharedApexLibs = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          providesharedapexlibs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_capexmetadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool supportsRebootlessUpdate = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          supportsrebootlessupdate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApexManifest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:apex.proto.ApexManifest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string preInstallHook = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_preinstallhook()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->preinstallhook().data(), static_cast<int>(this->preinstallhook().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.preInstallHook"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string postInstallHook = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_postinstallhook()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->postinstallhook().data(), static_cast<int>(this->postinstallhook().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.postInstallHook"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string versionName = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_versionname()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->versionname().data(), static_cast<int>(this->versionname().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.versionName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool noCode = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nocode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string provideNativeLibs = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_providenativelibs()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->providenativelibs(this->providenativelibs_size() - 1).data(),
            static_cast<int>(this->providenativelibs(this->providenativelibs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.provideNativeLibs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string requireNativeLibs = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_requirenativelibs()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->requirenativelibs(this->requirenativelibs_size() - 1).data(),
            static_cast<int>(this->requirenativelibs(this->requirenativelibs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.requireNativeLibs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jniLibs = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_jnilibs()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->jnilibs(this->jnilibs_size() - 1).data(),
            static_cast<int>(this->jnilibs(this->jnilibs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.jniLibs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string requireSharedApexLibs = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_requiresharedapexlibs()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->requiresharedapexlibs(this->requiresharedapexlibs_size() - 1).data(),
            static_cast<int>(this->requiresharedapexlibs(this->requiresharedapexlibs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "apex.proto.ApexManifest.requireSharedApexLibs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool provideSharedApexLibs = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &providesharedapexlibs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_capexmetadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool supportsRebootlessUpdate = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &supportsrebootlessupdate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apex.proto.ApexManifest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apex.proto.ApexManifest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApexManifest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apex.proto.ApexManifest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 version = 2;
  if (this->version() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->version(), output);
  }

  // string preInstallHook = 3;
  if (this->preinstallhook().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->preinstallhook().data(), static_cast<int>(this->preinstallhook().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.preInstallHook");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->preinstallhook(), output);
  }

  // string postInstallHook = 4;
  if (this->postinstallhook().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->postinstallhook().data(), static_cast<int>(this->postinstallhook().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.postInstallHook");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->postinstallhook(), output);
  }

  // string versionName = 5;
  if (this->versionname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->versionname().data(), static_cast<int>(this->versionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.versionName");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->versionname(), output);
  }

  // bool noCode = 6;
  if (this->nocode() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->nocode(), output);
  }

  // repeated string provideNativeLibs = 7;
  for (int i = 0, n = this->providenativelibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->providenativelibs(i).data(), static_cast<int>(this->providenativelibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.provideNativeLibs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      7, this->providenativelibs(i), output);
  }

  // repeated string requireNativeLibs = 8;
  for (int i = 0, n = this->requirenativelibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->requirenativelibs(i).data(), static_cast<int>(this->requirenativelibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.requireNativeLibs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      8, this->requirenativelibs(i), output);
  }

  // repeated string jniLibs = 9;
  for (int i = 0, n = this->jnilibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jnilibs(i).data(), static_cast<int>(this->jnilibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.jniLibs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      9, this->jnilibs(i), output);
  }

  // repeated string requireSharedApexLibs = 10;
  for (int i = 0, n = this->requiresharedapexlibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->requiresharedapexlibs(i).data(), static_cast<int>(this->requiresharedapexlibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.requireSharedApexLibs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      10, this->requiresharedapexlibs(i), output);
  }

  // bool provideSharedApexLibs = 11;
  if (this->providesharedapexlibs() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(11, this->providesharedapexlibs(), output);
  }

  // .apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;
  if (this->has_capexmetadata()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::capexmetadata(this), output);
  }

  // bool supportsRebootlessUpdate = 13;
  if (this->supportsrebootlessupdate() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(13, this->supportsrebootlessupdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apex.proto.ApexManifest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ApexManifest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apex.proto.ApexManifest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 version = 2;
  if (this->version() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->version(), target);
  }

  // string preInstallHook = 3;
  if (this->preinstallhook().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->preinstallhook().data(), static_cast<int>(this->preinstallhook().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.preInstallHook");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->preinstallhook(), target);
  }

  // string postInstallHook = 4;
  if (this->postinstallhook().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->postinstallhook().data(), static_cast<int>(this->postinstallhook().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.postInstallHook");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->postinstallhook(), target);
  }

  // string versionName = 5;
  if (this->versionname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->versionname().data(), static_cast<int>(this->versionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.versionName");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->versionname(), target);
  }

  // bool noCode = 6;
  if (this->nocode() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->nocode(), target);
  }

  // repeated string provideNativeLibs = 7;
  for (int i = 0, n = this->providenativelibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->providenativelibs(i).data(), static_cast<int>(this->providenativelibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.provideNativeLibs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(7, this->providenativelibs(i), target);
  }

  // repeated string requireNativeLibs = 8;
  for (int i = 0, n = this->requirenativelibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->requirenativelibs(i).data(), static_cast<int>(this->requirenativelibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.requireNativeLibs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(8, this->requirenativelibs(i), target);
  }

  // repeated string jniLibs = 9;
  for (int i = 0, n = this->jnilibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->jnilibs(i).data(), static_cast<int>(this->jnilibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.jniLibs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(9, this->jnilibs(i), target);
  }

  // repeated string requireSharedApexLibs = 10;
  for (int i = 0, n = this->requiresharedapexlibs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->requiresharedapexlibs(i).data(), static_cast<int>(this->requiresharedapexlibs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apex.proto.ApexManifest.requireSharedApexLibs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(10, this->requiresharedapexlibs(i), target);
  }

  // bool provideSharedApexLibs = 11;
  if (this->providesharedapexlibs() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->providesharedapexlibs(), target);
  }

  // .apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;
  if (this->has_capexmetadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::capexmetadata(this), target);
  }

  // bool supportsRebootlessUpdate = 13;
  if (this->supportsrebootlessupdate() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->supportsrebootlessupdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apex.proto.ApexManifest)
  return target;
}

size_t ApexManifest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apex.proto.ApexManifest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string provideNativeLibs = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->providenativelibs_size());
  for (int i = 0, n = this->providenativelibs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->providenativelibs(i));
  }

  // repeated string requireNativeLibs = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->requirenativelibs_size());
  for (int i = 0, n = this->requirenativelibs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->requirenativelibs(i));
  }

  // repeated string jniLibs = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->jnilibs_size());
  for (int i = 0, n = this->jnilibs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->jnilibs(i));
  }

  // repeated string requireSharedApexLibs = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->requiresharedapexlibs_size());
  for (int i = 0, n = this->requiresharedapexlibs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->requiresharedapexlibs(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string preInstallHook = 3;
  if (this->preinstallhook().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->preinstallhook());
  }

  // string postInstallHook = 4;
  if (this->postinstallhook().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->postinstallhook());
  }

  // string versionName = 5;
  if (this->versionname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->versionname());
  }

  // .apex.proto.ApexManifest.CompressedApexMetadata capexMetadata = 12;
  if (this->has_capexmetadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *capexmetadata_);
  }

  // int64 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // bool noCode = 6;
  if (this->nocode() != 0) {
    total_size += 1 + 1;
  }

  // bool provideSharedApexLibs = 11;
  if (this->providesharedapexlibs() != 0) {
    total_size += 1 + 1;
  }

  // bool supportsRebootlessUpdate = 13;
  if (this->supportsrebootlessupdate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApexManifest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apex.proto.ApexManifest)
  GOOGLE_DCHECK_NE(&from, this);
  const ApexManifest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApexManifest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apex.proto.ApexManifest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apex.proto.ApexManifest)
    MergeFrom(*source);
  }
}

void ApexManifest::MergeFrom(const ApexManifest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apex.proto.ApexManifest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  providenativelibs_.MergeFrom(from.providenativelibs_);
  requirenativelibs_.MergeFrom(from.requirenativelibs_);
  jnilibs_.MergeFrom(from.jnilibs_);
  requiresharedapexlibs_.MergeFrom(from.requiresharedapexlibs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.preinstallhook().size() > 0) {

    preinstallhook_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.preinstallhook_);
  }
  if (from.postinstallhook().size() > 0) {

    postinstallhook_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.postinstallhook_);
  }
  if (from.versionname().size() > 0) {

    versionname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.versionname_);
  }
  if (from.has_capexmetadata()) {
    mutable_capexmetadata()->::apex::proto::ApexManifest_CompressedApexMetadata::MergeFrom(from.capexmetadata());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.nocode() != 0) {
    set_nocode(from.nocode());
  }
  if (from.providesharedapexlibs() != 0) {
    set_providesharedapexlibs(from.providesharedapexlibs());
  }
  if (from.supportsrebootlessupdate() != 0) {
    set_supportsrebootlessupdate(from.supportsrebootlessupdate());
  }
}

void ApexManifest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apex.proto.ApexManifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApexManifest::CopyFrom(const ApexManifest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apex.proto.ApexManifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApexManifest::IsInitialized() const {
  return true;
}

void ApexManifest::InternalSwap(ApexManifest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  providenativelibs_.InternalSwap(CastToBase(&other->providenativelibs_));
  requirenativelibs_.InternalSwap(CastToBase(&other->requirenativelibs_));
  jnilibs_.InternalSwap(CastToBase(&other->jnilibs_));
  requiresharedapexlibs_.InternalSwap(CastToBase(&other->requiresharedapexlibs_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preinstallhook_.Swap(&other->preinstallhook_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  postinstallhook_.Swap(&other->postinstallhook_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  versionname_.Swap(&other->versionname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capexmetadata_, other->capexmetadata_);
  swap(version_, other->version_);
  swap(nocode_, other->nocode_);
  swap(providesharedapexlibs_, other->providesharedapexlibs_);
  swap(supportsrebootlessupdate_, other->supportsrebootlessupdate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApexManifest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace apex
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apex::proto::ApexManifest_CompressedApexMetadata* Arena::CreateMaybeMessage< ::apex::proto::ApexManifest_CompressedApexMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::apex::proto::ApexManifest_CompressedApexMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::apex::proto::ApexManifest* Arena::CreateMaybeMessage< ::apex::proto::ApexManifest >(Arena* arena) {
  return Arena::CreateInternal< ::apex::proto::ApexManifest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
