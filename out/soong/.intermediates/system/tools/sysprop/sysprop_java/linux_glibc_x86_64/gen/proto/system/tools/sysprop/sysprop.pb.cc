// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system/tools/sysprop/sysprop.proto

#include "system/tools/sysprop/sysprop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_system_2ftools_2fsysprop_2fsysprop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_system_2ftools_2fsysprop_2fsysprop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto;
namespace sysprop {
class PropertyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Property> _instance;
} _Property_default_instance_;
class PropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Properties> _instance;
} _Properties_default_instance_;
class SyspropLibraryApisDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyspropLibraryApis> _instance;
} _SyspropLibraryApis_default_instance_;
}  // namespace sysprop
static void InitDefaultsscc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sysprop::_Properties_default_instance_;
    new (ptr) ::sysprop::Properties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sysprop::Properties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto}, {
      &scc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto.base,}};

static void InitDefaultsscc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sysprop::_Property_default_instance_;
    new (ptr) ::sysprop::Property();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sysprop::Property::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto}, {}};

static void InitDefaultsscc_info_SyspropLibraryApis_system_2ftools_2fsysprop_2fsysprop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sysprop::_SyspropLibraryApis_default_instance_;
    new (ptr) ::sysprop::SyspropLibraryApis();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sysprop::SyspropLibraryApis::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SyspropLibraryApis_system_2ftools_2fsysprop_2fsysprop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SyspropLibraryApis_system_2ftools_2fsysprop_2fsysprop_2eproto}, {
      &scc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_system_2ftools_2fsysprop_2fsysprop_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_system_2ftools_2fsysprop_2fsysprop_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, api_name_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, type_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, access_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, scope_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, prop_name_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, enum_values_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, integer_as_bool_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, deprecated_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Property, legacy_prop_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sysprop::Properties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sysprop::Properties, owner_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Properties, module_),
  PROTOBUF_FIELD_OFFSET(::sysprop::Properties, prop_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sysprop::SyspropLibraryApis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sysprop::SyspropLibraryApis, props_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sysprop::Property)},
  { 14, -1, sizeof(::sysprop::Properties)},
  { 22, -1, sizeof(::sysprop::SyspropLibraryApis)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sysprop::_Property_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sysprop::_Properties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sysprop::_SyspropLibraryApis_default_instance_),
};

const char descriptor_table_protodef_system_2ftools_2fsysprop_2fsysprop_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"system/tools/sysprop/sysprop.proto\022\007sy"
  "sprop\"\350\001\n\010Property\022\020\n\010api_name\030\001 \001(\t\022\033\n\004"
  "type\030\002 \001(\0162\r.sysprop.Type\022\037\n\006access\030\003 \001("
  "\0162\017.sysprop.Access\022\035\n\005scope\030\004 \001(\0162\016.sysp"
  "rop.Scope\022\021\n\tprop_name\030\005 \001(\t\022\023\n\013enum_val"
  "ues\030\006 \001(\t\022\027\n\017integer_as_bool\030\007 \001(\010\022\022\n\nde"
  "precated\030\010 \001(\010\022\030\n\020legacy_prop_name\030\t \001(\t"
  "\"\\\n\nProperties\022\035\n\005owner\030\001 \001(\0162\016.sysprop."
  "Owner\022\016\n\006module\030\002 \001(\t\022\037\n\004prop\030\003 \003(\0132\021.sy"
  "sprop.Property\"8\n\022SyspropLibraryApis\022\"\n\005"
  "props\030\001 \003(\0132\023.sysprop.Properties*4\n\006Acce"
  "ss\022\014\n\010Readonly\020\000\022\r\n\tWriteonce\020\001\022\r\n\tReadW"
  "rite\020\002**\n\005Owner\022\014\n\010Platform\020\000\022\n\n\006Vendor\020"
  "\001\022\007\n\003Odm\020\002*1\n\005Scope\022\n\n\006Public\020\000\022\016\n\006Syste"
  "m\020\001\032\002\010\001\022\014\n\010Internal\020\002*\334\001\n\004Type\022\013\n\007Boolea"
  "n\020\000\022\013\n\007Integer\020\001\022\010\n\004Long\020\002\022\n\n\006Double\020\003\022\n"
  "\n\006String\020\004\022\010\n\004Enum\020\005\022\010\n\004UInt\020\006\022\t\n\005ULong\020"
  "\007\022\017\n\013BooleanList\020\024\022\017\n\013IntegerList\020\025\022\014\n\010L"
  "ongList\020\026\022\016\n\nDoubleList\020\027\022\016\n\nStringList\020"
  "\030\022\014\n\010EnumList\020\031\022\014\n\010UIntList\020\032\022\r\n\tULongLi"
  "st\020\033b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_sccs[3] = {
  &scc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto.base,
  &scc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto.base,
  &scc_info_SyspropLibraryApis_system_2ftools_2fsysprop_2fsysprop_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_once;
static bool descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto = {
  &descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_initialized, descriptor_table_protodef_system_2ftools_2fsysprop_2fsysprop_2eproto, "system/tools/sysprop/sysprop.proto", 812,
  &descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_once, descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_sccs, descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_system_2ftools_2fsysprop_2fsysprop_2eproto::offsets,
  file_level_metadata_system_2ftools_2fsysprop_2fsysprop_2eproto, 3, file_level_enum_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto, file_level_service_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_system_2ftools_2fsysprop_2fsysprop_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto), true);
namespace sysprop {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Access_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto);
  return file_level_enum_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto[0];
}
bool Access_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Owner_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto);
  return file_level_enum_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto[1];
}
bool Owner_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scope_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto);
  return file_level_enum_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto[2];
}
bool Scope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_system_2ftools_2fsysprop_2fsysprop_2eproto);
  return file_level_enum_descriptors_system_2ftools_2fsysprop_2fsysprop_2eproto[3];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Property::InitAsDefaultInstance() {
}
class Property::_Internal {
 public:
};

Property::Property()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sysprop.Property)
}
Property::Property(const Property& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  api_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.api_name().empty()) {
    api_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.api_name_);
  }
  prop_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.prop_name().empty()) {
    prop_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.prop_name_);
  }
  enum_values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.enum_values().empty()) {
    enum_values_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.enum_values_);
  }
  legacy_prop_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.legacy_prop_name().empty()) {
    legacy_prop_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.legacy_prop_name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&deprecated_) -
    reinterpret_cast<char*>(&type_)) + sizeof(deprecated_));
  // @@protoc_insertion_point(copy_constructor:sysprop.Property)
}

void Property::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto.base);
  api_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prop_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enum_values_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  legacy_prop_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_) -
      reinterpret_cast<char*>(&type_)) + sizeof(deprecated_));
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:sysprop.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  api_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prop_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enum_values_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  legacy_prop_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Property& Property::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Property_system_2ftools_2fsysprop_2fsysprop_2eproto.base);
  return *internal_default_instance();
}


void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:sysprop.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prop_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enum_values_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  legacy_prop_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_) -
      reinterpret_cast<char*>(&type_)) + sizeof(deprecated_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Property::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string api_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_api_name(), ptr, ctx, "sysprop.Property.api_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sysprop.Type type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::sysprop::Type>(val));
        } else goto handle_unusual;
        continue;
      // .sysprop.Access access = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_access(static_cast<::sysprop::Access>(val));
        } else goto handle_unusual;
        continue;
      // .sysprop.Scope scope = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_scope(static_cast<::sysprop::Scope>(val));
        } else goto handle_unusual;
        continue;
      // string prop_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_prop_name(), ptr, ctx, "sysprop.Property.prop_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string enum_values = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_enum_values(), ptr, ctx, "sysprop.Property.enum_values");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool integer_as_bool = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          integer_as_bool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool deprecated = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          deprecated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string legacy_prop_name = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_legacy_prop_name(), ptr, ctx, "sysprop.Property.legacy_prop_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Property::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sysprop.Property)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string api_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_api_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->api_name().data(), static_cast<int>(this->api_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sysprop.Property.api_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sysprop.Type type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::sysprop::Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sysprop.Access access = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_access(static_cast< ::sysprop::Access >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sysprop.Scope scope = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scope(static_cast< ::sysprop::Scope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prop_name = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_prop_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->prop_name().data(), static_cast<int>(this->prop_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sysprop.Property.prop_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string enum_values = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_enum_values()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->enum_values().data(), static_cast<int>(this->enum_values().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sysprop.Property.enum_values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool integer_as_bool = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &integer_as_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool deprecated = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deprecated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string legacy_prop_name = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_legacy_prop_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->legacy_prop_name().data(), static_cast<int>(this->legacy_prop_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sysprop.Property.legacy_prop_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sysprop.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sysprop.Property)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Property::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sysprop.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string api_name = 1;
  if (this->api_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->api_name().data(), static_cast<int>(this->api_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.api_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->api_name(), output);
  }

  // .sysprop.Type type = 2;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .sysprop.Access access = 3;
  if (this->access() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->access(), output);
  }

  // .sysprop.Scope scope = 4;
  if (this->scope() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->scope(), output);
  }

  // string prop_name = 5;
  if (this->prop_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->prop_name().data(), static_cast<int>(this->prop_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.prop_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->prop_name(), output);
  }

  // string enum_values = 6;
  if (this->enum_values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->enum_values().data(), static_cast<int>(this->enum_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.enum_values");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->enum_values(), output);
  }

  // bool integer_as_bool = 7;
  if (this->integer_as_bool() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->integer_as_bool(), output);
  }

  // bool deprecated = 8;
  if (this->deprecated() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->deprecated(), output);
  }

  // string legacy_prop_name = 9;
  if (this->legacy_prop_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->legacy_prop_name().data(), static_cast<int>(this->legacy_prop_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.legacy_prop_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->legacy_prop_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sysprop.Property)
}

::PROTOBUF_NAMESPACE_ID::uint8* Property::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sysprop.Property)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string api_name = 1;
  if (this->api_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->api_name().data(), static_cast<int>(this->api_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.api_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->api_name(), target);
  }

  // .sysprop.Type type = 2;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .sysprop.Access access = 3;
  if (this->access() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->access(), target);
  }

  // .sysprop.Scope scope = 4;
  if (this->scope() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->scope(), target);
  }

  // string prop_name = 5;
  if (this->prop_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->prop_name().data(), static_cast<int>(this->prop_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.prop_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->prop_name(), target);
  }

  // string enum_values = 6;
  if (this->enum_values().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->enum_values().data(), static_cast<int>(this->enum_values().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.enum_values");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->enum_values(), target);
  }

  // bool integer_as_bool = 7;
  if (this->integer_as_bool() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->integer_as_bool(), target);
  }

  // bool deprecated = 8;
  if (this->deprecated() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->deprecated(), target);
  }

  // string legacy_prop_name = 9;
  if (this->legacy_prop_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->legacy_prop_name().data(), static_cast<int>(this->legacy_prop_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Property.legacy_prop_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->legacy_prop_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sysprop.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sysprop.Property)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string api_name = 1;
  if (this->api_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->api_name());
  }

  // string prop_name = 5;
  if (this->prop_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->prop_name());
  }

  // string enum_values = 6;
  if (this->enum_values().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->enum_values());
  }

  // string legacy_prop_name = 9;
  if (this->legacy_prop_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->legacy_prop_name());
  }

  // .sysprop.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  // .sysprop.Access access = 3;
  if (this->access() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->access());
  }

  // .sysprop.Scope scope = 4;
  if (this->scope() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->scope());
  }

  // bool integer_as_bool = 7;
  if (this->integer_as_bool() != 0) {
    total_size += 1 + 1;
  }

  // bool deprecated = 8;
  if (this->deprecated() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Property::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sysprop.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Property>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sysprop.Property)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sysprop.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sysprop.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.api_name().size() > 0) {

    api_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.api_name_);
  }
  if (from.prop_name().size() > 0) {

    prop_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.prop_name_);
  }
  if (from.enum_values().size() > 0) {

    enum_values_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.enum_values_);
  }
  if (from.legacy_prop_name().size() > 0) {

    legacy_prop_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.legacy_prop_name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.access() != 0) {
    set_access(from.access());
  }
  if (from.scope() != 0) {
    set_scope(from.scope());
  }
  if (from.integer_as_bool() != 0) {
    set_integer_as_bool(from.integer_as_bool());
  }
  if (from.deprecated() != 0) {
    set_deprecated(from.deprecated());
  }
}

void Property::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sysprop.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sysprop.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::InternalSwap(Property* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  api_name_.Swap(&other->api_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prop_name_.Swap(&other->prop_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  enum_values_.Swap(&other->enum_values_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  legacy_prop_name_.Swap(&other->legacy_prop_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(access_, other->access_);
  swap(scope_, other->scope_);
  swap(integer_as_bool_, other->integer_as_bool_);
  swap(deprecated_, other->deprecated_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Property::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Properties::InitAsDefaultInstance() {
}
class Properties::_Internal {
 public:
};

Properties::Properties()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sysprop.Properties)
}
Properties::Properties(const Properties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      prop_(from.prop_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.module().empty()) {
    module_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.module_);
  }
  owner_ = from.owner_;
  // @@protoc_insertion_point(copy_constructor:sysprop.Properties)
}

void Properties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto.base);
  module_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_ = 0;
}

Properties::~Properties() {
  // @@protoc_insertion_point(destructor:sysprop.Properties)
  SharedDtor();
}

void Properties::SharedDtor() {
  module_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Properties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Properties& Properties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Properties_system_2ftools_2fsysprop_2fsysprop_2eproto.base);
  return *internal_default_instance();
}


void Properties::Clear() {
// @@protoc_insertion_point(message_clear_start:sysprop.Properties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_.Clear();
  module_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  owner_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Properties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sysprop.Owner owner = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_owner(static_cast<::sysprop::Owner>(val));
        } else goto handle_unusual;
        continue;
      // string module = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_module(), ptr, ctx, "sysprop.Properties.module");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .sysprop.Property prop = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_prop(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Properties::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sysprop.Properties)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sysprop.Owner owner = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_owner(static_cast< ::sysprop::Owner >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string module = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_module()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->module().data(), static_cast<int>(this->module().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "sysprop.Properties.module"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sysprop.Property prop = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_prop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sysprop.Properties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sysprop.Properties)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Properties::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sysprop.Properties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sysprop.Owner owner = 1;
  if (this->owner() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->owner(), output);
  }

  // string module = 2;
  if (this->module().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->module().data(), static_cast<int>(this->module().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Properties.module");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->module(), output);
  }

  // repeated .sysprop.Property prop = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prop_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->prop(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sysprop.Properties)
}

::PROTOBUF_NAMESPACE_ID::uint8* Properties::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sysprop.Properties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sysprop.Owner owner = 1;
  if (this->owner() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->owner(), target);
  }

  // string module = 2;
  if (this->module().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->module().data(), static_cast<int>(this->module().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sysprop.Properties.module");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->module(), target);
  }

  // repeated .sysprop.Property prop = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prop_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->prop(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sysprop.Properties)
  return target;
}

size_t Properties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sysprop.Properties)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sysprop.Property prop = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->prop_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->prop(static_cast<int>(i)));
    }
  }

  // string module = 2;
  if (this->module().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->module());
  }

  // .sysprop.Owner owner = 1;
  if (this->owner() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->owner());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Properties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sysprop.Properties)
  GOOGLE_DCHECK_NE(&from, this);
  const Properties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Properties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sysprop.Properties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sysprop.Properties)
    MergeFrom(*source);
  }
}

void Properties::MergeFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sysprop.Properties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_.MergeFrom(from.prop_);
  if (from.module().size() > 0) {

    module_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.module_);
  }
  if (from.owner() != 0) {
    set_owner(from.owner());
  }
}

void Properties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sysprop.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties::CopyFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sysprop.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties::IsInitialized() const {
  return true;
}

void Properties::InternalSwap(Properties* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&prop_)->InternalSwap(CastToBase(&other->prop_));
  module_.Swap(&other->module_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(owner_, other->owner_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Properties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyspropLibraryApis::InitAsDefaultInstance() {
}
class SyspropLibraryApis::_Internal {
 public:
};

SyspropLibraryApis::SyspropLibraryApis()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sysprop.SyspropLibraryApis)
}
SyspropLibraryApis::SyspropLibraryApis(const SyspropLibraryApis& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      props_(from.props_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sysprop.SyspropLibraryApis)
}

void SyspropLibraryApis::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyspropLibraryApis_system_2ftools_2fsysprop_2fsysprop_2eproto.base);
}

SyspropLibraryApis::~SyspropLibraryApis() {
  // @@protoc_insertion_point(destructor:sysprop.SyspropLibraryApis)
  SharedDtor();
}

void SyspropLibraryApis::SharedDtor() {
}

void SyspropLibraryApis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyspropLibraryApis& SyspropLibraryApis::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyspropLibraryApis_system_2ftools_2fsysprop_2fsysprop_2eproto.base);
  return *internal_default_instance();
}


void SyspropLibraryApis::Clear() {
// @@protoc_insertion_point(message_clear_start:sysprop.SyspropLibraryApis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  props_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyspropLibraryApis::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .sysprop.Properties props = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_props(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyspropLibraryApis::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:sysprop.SyspropLibraryApis)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sysprop.Properties props = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sysprop.SyspropLibraryApis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sysprop.SyspropLibraryApis)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyspropLibraryApis::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sysprop.SyspropLibraryApis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sysprop.Properties props = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->props(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sysprop.SyspropLibraryApis)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyspropLibraryApis::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sysprop.SyspropLibraryApis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sysprop.Properties props = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->props(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sysprop.SyspropLibraryApis)
  return target;
}

size_t SyspropLibraryApis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sysprop.SyspropLibraryApis)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sysprop.Properties props = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->props_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->props(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyspropLibraryApis::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sysprop.SyspropLibraryApis)
  GOOGLE_DCHECK_NE(&from, this);
  const SyspropLibraryApis* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyspropLibraryApis>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sysprop.SyspropLibraryApis)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sysprop.SyspropLibraryApis)
    MergeFrom(*source);
  }
}

void SyspropLibraryApis::MergeFrom(const SyspropLibraryApis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sysprop.SyspropLibraryApis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  props_.MergeFrom(from.props_);
}

void SyspropLibraryApis::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sysprop.SyspropLibraryApis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyspropLibraryApis::CopyFrom(const SyspropLibraryApis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sysprop.SyspropLibraryApis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyspropLibraryApis::IsInitialized() const {
  return true;
}

void SyspropLibraryApis::InternalSwap(SyspropLibraryApis* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&props_)->InternalSwap(CastToBase(&other->props_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyspropLibraryApis::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sysprop
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sysprop::Property* Arena::CreateMaybeMessage< ::sysprop::Property >(Arena* arena) {
  return Arena::CreateInternal< ::sysprop::Property >(arena);
}
template<> PROTOBUF_NOINLINE ::sysprop::Properties* Arena::CreateMaybeMessage< ::sysprop::Properties >(Arena* arena) {
  return Arena::CreateInternal< ::sysprop::Properties >(arena);
}
template<> PROTOBUF_NOINLINE ::sysprop::SyspropLibraryApis* Arena::CreateMaybeMessage< ::sysprop::SyspropLibraryApis >(Arena* arena) {
  return Arena::CreateInternal< ::sysprop::SyspropLibraryApis >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
