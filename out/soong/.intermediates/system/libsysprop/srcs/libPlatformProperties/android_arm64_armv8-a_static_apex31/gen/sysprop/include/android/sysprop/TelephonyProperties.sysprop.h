// Generated by the sysprop generator. DO NOT EDIT!

#pragma once

#include <cstdint>
#include <optional>
#include <string>
#include <vector>

namespace android::sysprop::TelephonyProperties {

std::optional<bool> airplane_mode_on();
bool airplane_mode_on(const std::optional<bool>& value);

std::vector<std::optional<std::string>> baseband_version();
bool baseband_version(const std::vector<std::optional<std::string>>& value);

std::optional<std::string> ril_impl();

std::vector<std::optional<std::string>> operator_alpha();
bool operator_alpha(const std::vector<std::optional<std::string>>& value);

std::vector<std::optional<std::string>> operator_numeric();
bool operator_numeric(const std::vector<std::optional<std::string>>& value);

std::optional<bool> operator_is_manual();

std::vector<std::optional<bool>> operator_is_roaming();
bool operator_is_roaming(const std::vector<std::optional<bool>>& value);

std::vector<std::optional<std::string>> operator_iso_country();
bool operator_iso_country(const std::vector<std::optional<std::string>>& value);

std::optional<std::string> lte_on_cdma_product_type();

std::optional<std::int32_t> lte_on_cdma_device();

std::vector<std::optional<std::int32_t>> current_active_phone();
bool current_active_phone(const std::vector<std::optional<std::int32_t>>& value);

std::vector<std::optional<std::string>> sim_state();
bool sim_state(const std::vector<std::optional<std::string>>& value);

std::vector<std::optional<std::string>> icc_operator_numeric();
bool icc_operator_numeric(const std::vector<std::optional<std::string>>& value);

std::vector<std::optional<std::string>> icc_operator_alpha();
bool icc_operator_alpha(const std::vector<std::optional<std::string>>& value);

std::vector<std::optional<std::string>> icc_operator_iso_country();
bool icc_operator_iso_country(const std::vector<std::optional<std::string>>& value);

std::vector<std::optional<std::string>> data_network_type();
bool data_network_type(const std::vector<std::optional<std::string>>& value);

std::optional<bool> in_ecm_mode();
bool in_ecm_mode(const std::optional<bool>& value);

std::optional<std::int64_t> ecm_exit_timer();

std::optional<std::string> operator_idp_string();
bool operator_idp_string(const std::optional<std::string>& value);

std::vector<std::optional<std::string>> otasp_num_schema();

std::optional<bool> disable_call();

std::optional<bool> ril_sends_multiple_call_ring();

std::optional<std::int32_t> call_ring_delay();

std::optional<std::int32_t> cdma_msg_id();
bool cdma_msg_id(const std::optional<std::int32_t>& value);

std::optional<std::int32_t> wake_lock_timeout();

std::optional<bool> reset_on_radio_tech_change();

std::vector<std::optional<bool>> sms_receive();

std::vector<std::optional<bool>> sms_send();

std::optional<bool> test_csim();

std::optional<bool> ignore_nitz();

std::optional<std::string> multi_sim_config();
bool multi_sim_config(const std::optional<std::string>& value);

std::optional<bool> reboot_on_modem_change();

std::optional<std::int32_t> videocall_audio_output();

std::optional<bool> enable_esim_ui_by_default();

std::vector<std::optional<std::int32_t>> default_network();

std::optional<bool> data_roaming();

std::optional<bool> mobile_data();

std::optional<std::int32_t> wps_info();

std::optional<std::int32_t> max_active_modems();

std::optional<std::int32_t> sim_slots_count();

}  // namespace android::sysprop::TelephonyProperties
