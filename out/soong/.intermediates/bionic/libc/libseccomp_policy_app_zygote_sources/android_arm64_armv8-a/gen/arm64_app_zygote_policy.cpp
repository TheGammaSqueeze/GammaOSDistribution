// File autogenerated by genseccomp.py - edit at your peril!!

#include <linux/filter.h>
#include <errno.h>

#include "seccomp/seccomp_bpfs.h"
const sock_filter arm64_app_zygote_filter[] = {
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 0, 0, 64),
BPF_JUMP(BPF_JMP|BPF_JEQ|BPF_K, 98, 62, 0), //futex
BPF_JUMP(BPF_JMP|BPF_JEQ|BPF_K, 29, 61, 0), //ioctl
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 172, 31, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 101, 15, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 43, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 30, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 19, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 18, 56, 55), //io_setup|io_destroy|io_submit|io_cancel|io_getevents|setxattr|lsetxattr|fsetxattr|getxattr|lgetxattr|fgetxattr|listxattr|llistxattr|flistxattr|removexattr|lremovexattr|fremovexattr|getcwd
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 29, 55, 54), //eventfd2|epoll_create1|epoll_ctl|epoll_pwait|dup|dup3|fcntl|inotify_init1|inotify_add_watch|inotify_rm_watch
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 41, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 39, 53, 52), //ioprio_set|ioprio_get|flock|mknodat|mkdirat|unlinkat|symlinkat|linkat|renameat
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 42, 52, 51), //pivot_root
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 59, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 52, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 51, 49, 48), //statfs|fstatfs|truncate|ftruncate|fallocate|faccessat|chdir|fchdir
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 58, 48, 47), //fchmod|fchmodat|fchownat|fchown|openat|close
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 90, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 89, 46, 45), //pipe2|quotactl|getdents64|lseek|read|write|readv|writev|pread64|pwrite64|preadv|pwritev|sendfile|pselect6|ppoll|signalfd4|vmsplice|splice|tee|readlinkat|newfstatat|fstat|sync|fsync|fdatasync|sync_file_range|timerfd_create|timerfd_settime|timerfd_gettime|utimensat
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 98, 45, 44), //capget|capset|personality|exit|exit_group|waitid|set_tid_address|unshare
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 147, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 113, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 107, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 104, 41, 40), //nanosleep|getitimer|setitimer
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 112, 40, 39), //timer_create|timer_gettime|timer_getoverrun|timer_settime|timer_delete
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 117, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 116, 38, 37), //clock_gettime|clock_getres|clock_nanosleep
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 142, 37, 36), //ptrace|sched_setparam|sched_setscheduler|sched_getscheduler|sched_getparam|sched_setaffinity|sched_getaffinity|sched_yield|sched_get_priority_max|sched_get_priority_min|sched_rr_get_interval|restart_syscall|kill|tkill|tgkill|sigaltstack|rt_sigsuspend|rt_sigaction|rt_sigprocmask|rt_sigpending|rt_sigtimedwait|rt_sigqueueinfo|rt_sigreturn|setpriority|getpriority
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 160, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 153, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 151, 34, 33), //setresuid|getresuid|setresgid|getresgid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 159, 33, 32), //times|setpgid|getpgid|getsid|setsid|getgroups
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 163, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 161, 31, 30), //uname
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 170, 30, 29), //getrlimit|setrlimit|getrusage|umask|prctl|getcpu|gettimeofday
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 274, 15, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 226, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 203, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 198, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 180, 25, 24), //getpid|getppid|getuid|geteuid|getgid|getegid|gettid|sysinfo
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 202, 24, 23), //socket|socketpair|bind|listen
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 220, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 217, 22, 21), //connect|getsockname|getpeername|sendto|recvfrom|setsockopt|getsockopt|shutdown|sendmsg|recvmsg|readahead|brk|munmap|mremap
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 224, 21, 20), //clone|execve|mmap|fadvise64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 260, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 240, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 234, 18, 17), //mprotect|msync|mlock|munlock|mlockall|munlockall|mincore|madvise
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 244, 17, 16), //rt_tgsigqueueinfo|perf_event_open|accept4|recvmmsg
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 267, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 262, 15, 14), //wait4|prlimit64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 272, 14, 13), //syncfs|setns|sendmmsg|process_vm_readv|process_vm_writev
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 434, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 291, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 281, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 280, 10, 9), //sched_setattr|sched_getattr|renameat2|seccomp|getrandom|memfd_create
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 288, 9, 8), //execveat|userfaultfd|membarrier|mlock2|copy_file_range|preadv2|pwritev2
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 424, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 292, 7, 6), //statx
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 425, 6, 5), //pidfd_send_signal
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 440, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 438, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 435, 3, 2), //pidfd_open
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 439, 2, 1), //pidfd_getfd
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 441, 1, 0), //process_madvise
BPF_STMT(BPF_RET|BPF_K, SECCOMP_RET_ALLOW),
};

const size_t arm64_app_zygote_filter_size = sizeof(arm64_app_zygote_filter) / sizeof(struct sock_filter);
