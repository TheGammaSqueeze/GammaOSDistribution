/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.dreams.phototable;

public final class R {
  public static final class anim {
    public static final int slideshow_in=0x7f010000;
    public static final int slideshow_out=0x7f010001;
  }
  public static final class bool {
    /**
     * Enable hardware layer optimization (interferes with dragging).
     * Enable hardware layer optimization (interferes with dragging).
     */
    public static final int enable_background_optimization=0x7f020000;
    /**
     * Enable flinging away photos.
     */
    public static final int enable_fling=0x7f020001;
    /**
     * Enable manual rotation of images.
     */
    public static final int enable_manual_image_rotation=0x7f020002;
    /**
     * Enable story mode.
     */
    public static final int enable_story_mode=0x7f020003;
    /**
     * Honor tap on table to exit.
     */
    public static final int enable_tap_to_exit=0x7f020004;
  }
  public static final class color {
    public static final int highlight_color=0x7f030000;
    public static final int tabletop_dark=0x7f030001;
    public static final int tabletop_light=0x7f030002;
    public static final int vignette_dark=0x7f030003;
    public static final int vignette_light=0x7f030004;
  }
  public static final class dimen {
    /**
     * DIPs per second for thrown images.
     */
    public static final int image_throw_speed=0x7f040000;
    /**
     * Amount photo is inset to account for the frame.
     */
    public static final int photo_inset=0x7f040001;
  }
  public static final class drawable {
    public static final int blank_photo=0x7f050001;
    public static final int frame=0x7f050002;
    public static final int ic_launcher_background=0x7f050003;
    public static final int ic_launcher_foreground=0x7f050004;
    public static final int table=0x7f050005;
    public static final int vignette_br=0x7f050006;
    public static final int vignette_tl=0x7f050007;
  }
  public static final class id {
    public static final int back=0x7f060000;
    public static final int background=0x7f060001;
    public static final int bummer=0x7f060002;
    public static final int carousel=0x7f060003;
    public static final int data_payload=0x7f060004;
    public static final int enabled=0x7f060005;
    public static final int front=0x7f060006;
    public static final int photo=0x7f060007;
    public static final int photo_height=0x7f060008;
    public static final int photo_orientation=0x7f060009;
    public static final int photo_width=0x7f06000a;
    public static final int photodream_menu_all=0x7f06000b;
    public static final int scrim=0x7f06000c;
    public static final int sorry=0x7f06000d;
    public static final int spinner=0x7f06000e;
    public static final int stageleft=0x7f06000f;
    public static final int table=0x7f060010;
    public static final int title=0x7f060011;
  }
  public static final class integer {
    /**
     * Number of unloadable images to skip before giving up.
     */
    public static final int bad_image_skip_limit=0x7f070000;
    /**
     * Milliseconds between drops.
     */
    public static final int carousel_drop_period=0x7f070001;
    /**
     * Drop animation exponent.
     */
    public static final int drop_deceleration_exponent=0x7f070002;
    /**
     * Milliseconds to wait before the next fast drop.
     * Milliseconds to wait before the next fast drop.
     */
    public static final int fast_drop=0x7f070003;
    /**
     * Length of flip animation in milliseconds.
     */
    public static final int flip_duration=0x7f070004;
    /**
     * Parts per million gain applied to generalized touch gestures.
     */
    public static final int generalized_touch_gain=0x7f070005;
    /**
     * Maximum number of image paths to load before shuffling.
     */
    public static final int image_queue_size=0x7f070006;
    /**
     * Parts per million ratio between image size and screen size.
     * Parts per million ratio between image size and screen size.
     * Parts per million ratio between image size and screen size.
     */
    public static final int image_ratio=0x7f070007;
    /**
     * starting angle in degrees for thrown images (always lands near zero).
     */
    public static final int image_throw_rotatioan=0x7f070008;
    /**
     * Parts per million maximum cropping allow to fit image to screen.
     */
    public static final int max_crop_ratio=0x7f070009;
    /**
     * Milliseconds that the focus will remain without user interaction.
     */
    public static final int max_focus_time=0x7f07000a;
    /**
     * The maximum allowed rotation of images thrown onto the table.
     */
    public static final int max_image_rotation=0x7f07000b;
    /**
     * Maximum number of albums to pull for "Photos from Posts".
     */
    public static final int max_post_albums=0x7f07000c;
    /**
     * Milliseconds that the selection will remain without user interaction.
     */
    public static final int max_selection_time=0x7f07000d;
    /**
     * Milliseconds to wait before the next immediate drop.
     */
    public static final int now_drop=0x7f07000e;
    /**
     * Number of images to pre-load.
     */
    public static final int num_images_to_preload=0x7f07000f;
    /**
     * Duration in milliseconds for the pickup animation.
     * Duration in milliseconds for the pickup animation.
     * Duration in milliseconds for the pickup animation.
     */
    public static final int photo_pickup_duration=0x7f070010;
    /**
     * Size of image recycling pool when on metered data.
     */
    public static final int recycle_image_pool_size=0x7f070011;
    /**
     * Number of images to discard at a time.
     * Number of images to discard at a time.
     */
    public static final int redeal_count=0x7f070012;
    /**
     * fraction of distance covered before landing, in parts per million from 0 to 1.
     */
    public static final int soft_landing_distance=0x7f070013;
    /**
     * time thrown image land, in parts per million from 0 to 1.
     */
    public static final int soft_landing_time=0x7f070014;
    /**
     * Maximum number of photos to leave on the table.
     * Maximum number of photos to leave on the table.
     * Maximum number of photos to leave on the table.
     */
    public static final int table_capacity=0x7f070015;
    /**
     * Parts per million damping coefficient of the table.
     */
    public static final int table_damping=0x7f070016;
    /**
     * Milliseconds between drops.
     * Milliseconds between drops.
     */
    public static final int table_drop_period=0x7f070017;
    /**
     * distance from edge to start a valid edge swipe as a fraction of
     * touch area width, in parts per million from 0 to 1.
     */
    public static final int table_edge_swipe_gutter=0x7f070018;
    /**
     * minimum length of a valid edge swipe as a fraction of
     * touch area width, in parts per million from 0 to 1.
     */
    public static final int table_edge_swipe_threshold=0x7f070019;
    /**
     * Parts per million ratio between image size on the table and screen size.
     * Parts per million ratio between image size on the table and screen size.
     * Parts per million ratio between image size on the table and screen size.
     */
    public static final int table_ratio=0x7f07001a;
  }
  public static final class layout {
    public static final int album=0x7f080000;
    public static final int bummer=0x7f080001;
    public static final int carousel=0x7f080002;
    public static final int header=0x7f080003;
    public static final int photo=0x7f080004;
    public static final int settingslist=0x7f080005;
    public static final int table=0x7f080006;
  }
  public static final class menu {
    public static final int photodream_settings_menu=0x7f090000;
  }
  public static final class mipmap {
    public static final int ic_launcher=0x7f0a0000;
  }
  public static final class string {
    /**
     * Name of the package of photo screensavers, shown in for Settings > Apps. [CHAR LIMIT=40]
     */
    public static final int app_name=0x7f0b0000;
    /**
     * Name of the Photo Frame screensaver, which cross-fades between images. [CHAR LIMIT=40]
     */
    public static final int flipper_screensaver_name=0x7f0b0001;
    /**
     * Name for photos that are stored on this device, copy from Gallery.
     */
    public static final int local_source_name=0x7f0b0002;
    /**
     * Instruct the user to configure the screensaver in settings to see photos.
     */
    public static final int need_to_configure=0x7f0b0003;
    /**
     * Text shown instead of a list of albums when there are no albums with photos. [CHAR LIMIT=50]
     */
    public static final int no_photos=0x7f0b0004;
    /**
     * Click to select all albums in the album selection activity. [CHAR LIMIT=15]
     */
    public static final int photodream_select_all=0x7f0b0005;
    /**
     * Click to clear selection in the album selection activity. [CHAR LIMIT=15]
     */
    public static final int photodream_select_none=0x7f0b0006;
    /**
     * Name of the album that contains all g+ post photos, copy from Gallery.
     */
    public static final int posts_album_name=0x7f0b0007;
    /**
     * Name for photos baked into the app.
     */
    public static final int stock_photo_album_name=0x7f0b0008;
    /**
     * Name of the Photo Table screensaver, which tosses photos onto a table. [CHAR LIMIT=40]
     */
    public static final int table_screensaver_name=0x7f0b0009;
    /**
     * Name for an album that doesn't seem to have any name at all.
     */
    public static final int unknown_album_name=0x7f0b000a;
  }
  public static final class xml {
    public static final int photo_flipper_dream=0x7f0c0000;
    public static final int photo_table_dream=0x7f0c0001;
  }
}