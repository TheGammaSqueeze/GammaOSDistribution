/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package androidx.customview;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int btn_checkbox_to_checked_box_inner_merged_animation=0x7f01000c;
    public static final int btn_checkbox_to_checked_box_outer_merged_animation=0x7f01000d;
    public static final int btn_checkbox_to_checked_icon_null_animation=0x7f01000e;
    public static final int btn_checkbox_to_unchecked_box_inner_merged_animation=0x7f01000f;
    public static final int btn_checkbox_to_unchecked_check_path_merged_animation=0x7f010010;
    public static final int btn_checkbox_to_unchecked_icon_null_animation=0x7f010011;
    public static final int btn_radio_to_off_mtrl_dot_group_animation=0x7f010012;
    public static final int btn_radio_to_off_mtrl_ring_outer_animation=0x7f010013;
    public static final int btn_radio_to_off_mtrl_ring_outer_path_animation=0x7f010014;
    public static final int btn_radio_to_on_mtrl_dot_group_animation=0x7f010015;
    public static final int btn_radio_to_on_mtrl_ring_outer_animation=0x7f010016;
    public static final int btn_radio_to_on_mtrl_ring_outer_path_animation=0x7f010017;
    public static final int dialpad_slide_in_bottom=0x7f010018;
    public static final int dialpad_slide_in_left=0x7f010019;
    public static final int dialpad_slide_in_right=0x7f01001a;
    public static final int dialpad_slide_out_bottom=0x7f01001b;
    public static final int dialpad_slide_out_left=0x7f01001c;
    public static final int dialpad_slide_out_right=0x7f01001d;
    public static final int fragment_fast_out_extra_slow_in=0x7f01001e;
  }
  public static final class animator {
    public static final int fragment_close_enter=0x7f020000;
    public static final int fragment_close_exit=0x7f020001;
    public static final int fragment_fade_enter=0x7f020002;
    public static final int fragment_fade_exit=0x7f020003;
    public static final int fragment_open_enter=0x7f020004;
    public static final int fragment_open_exit=0x7f020005;
  }
  public static final class array {
    /**
     * For incoming calls, this is a string we can get from a CDMA network instead of
     * the actual phone number, to indicate there's no number present.  DO NOT TRANSLATE.
     */
    public static final int absent_num=0x7f030000;
    public static final int cdma_subscription_choices=0x7f030001;
    public static final int cdma_subscription_values=0x7f030002;
    public static final int cdma_system_select_choices=0x7f030003;
    public static final int cdma_system_select_values=0x7f030004;
    /**
     * Phone settings: Caller ID preference values
     */
    public static final int clir_display_values=0x7f030005;
    /**
     * Phone settings: Internal keys used for Caller ID preference values.  DO NOT TRANSLATE.
     */
    public static final int clir_values=0x7f030006;
    /**
     * The country list that shortcut view can be enabled.
     */
    public static final int config_countries_to_enable_shortcut_view=0x7f030007;
    /**
     * Vibrator pattern to be used as the default for notifications
     * that specify DEFAULT_VIBRATE.
     */
    public static final int config_defaultNotificationVibePattern=0x7f030008;
    public static final int config_rcs_provision_error_on_publish_response=0x7f030009;
    /**
     * Array of countries that support sim-less emergency RTT calls. Values should be
     * ISO3166 country codes in lowercase.
     */
    public static final int config_simless_emergency_rtt_supported_countries=0x7f03000a;
    /**
     * Show enabled tdscdma option for device when connect roaming network
     * Show enabled tdscdma option for device when connect roaming network
     * Show enabled tdscdma option for device when connect roaming network
     */
    public static final int config_support_tdscdma_roaming_on_networks=0x7f03000b;
    public static final int config_volte_provision_error_on_publish_response=0x7f03000c;
    /**
     * Options displayed as part of DTMF Tones in Call Settings
     */
    public static final int dtmf_tone_entries=0x7f03000d;
    /**
     * Do not translate.
     */
    public static final int dtmf_tone_values=0x7f03000e;
    public static final int enabled_networks_4g_choices=0x7f03000f;
    public static final int enabled_networks_cdma_choices=0x7f030010;
    public static final int enabled_networks_cdma_no_lte_choices=0x7f030011;
    public static final int enabled_networks_cdma_no_lte_values=0x7f030012;
    public static final int enabled_networks_cdma_only_lte_choices=0x7f030013;
    public static final int enabled_networks_cdma_only_lte_values=0x7f030014;
    public static final int enabled_networks_cdma_values=0x7f030015;
    public static final int enabled_networks_choices=0x7f030016;
    public static final int enabled_networks_except_gsm_4g_choices=0x7f030017;
    public static final int enabled_networks_except_gsm_choices=0x7f030018;
    public static final int enabled_networks_except_gsm_lte_choices=0x7f030019;
    public static final int enabled_networks_except_gsm_lte_values=0x7f03001a;
    public static final int enabled_networks_except_gsm_values=0x7f03001b;
    public static final int enabled_networks_except_lte_choices=0x7f03001c;
    public static final int enabled_networks_except_lte_values=0x7f03001d;
    public static final int enabled_networks_tdscdma_choices=0x7f03001e;
    public static final int enabled_networks_tdscdma_values=0x7f03001f;
    public static final int enabled_networks_values=0x7f030020;
    /**
     * Carrier variant of Enhaced 4G LTE Mode summary.  [CHAR LIMIT=80]
     */
    public static final int enhanced_4g_lte_mode_sumary_variant=0x7f030021;
    /**
     * Carrier variant of Enhaced 4G LTE Mode title.  [CHAR LIMIT=50]
     */
    public static final int enhanced_4g_lte_mode_title_variant=0x7f030022;
    public static final int list_language_entries=0x7f030023;
    public static final int list_language_values=0x7f030024;
    /**
     * The preferred network modes in Mobile network settings
     */
    public static final int preferred_network_mode_choices=0x7f030025;
    /**
     * String arrays for World preferred netwrok modes
     */
    public static final int preferred_network_mode_choices_world_mode=0x7f030026;
    /**
     * The preferred network modes RIL constants, in order of the modes above,
     * e.g. the choice "GSM/WCDMA preferred" has the corresponding value "0"
     */
    public static final int preferred_network_mode_values=0x7f030027;
    public static final int preferred_network_mode_values_world_mode=0x7f030028;
    public static final int sip_call_options_entries=0x7f030029;
    public static final int sip_call_options_values=0x7f03002a;
    public static final int sip_call_options_wifi_only_entries=0x7f03002b;
    public static final int sip_send_keepalive_options=0x7f03002c;
    /**
     * The package names which can request thermal mitigation.
     */
    public static final int thermal_mitigation_allowlisted_packages=0x7f03002d;
    public static final int transport_types=0x7f03002e;
    /**
     * Service option entries.
     */
    public static final int tty_mode_entries=0x7f03002f;
    /**
     * Do not translate.
     */
    public static final int tty_mode_values=0x7f030030;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f04000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040011;
    /**
     * Content description to use for the close action mode button
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionModeCloseContentDescription=0x7f040012;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040013;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040014;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040015;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040016;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040017;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040018;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f040019;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f04001a;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001c;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeTheme=0x7f04001d;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f04001f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f040020;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f040021;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040022;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040023;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f040024;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040025;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040026;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f040027;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f040028;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f040029;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f04002a;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f04002b;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f04002c;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f04002d;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f04002e;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f04002f;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f040030;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f040031;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040032;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040033;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040034;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040035;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040036;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040037;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f040038;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f040039;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f04003a;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f04003b;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f04003c;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f04003d;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f04003e;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f04003f;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f040040;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040041;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040042;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonCompat=0x7f040043;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f040044;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f040045;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f040046;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f040047;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f040048;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f040049;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f04004a;
    /**
     * The change / update button text.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int changeNumButtonText=0x7f04004b;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f04004c;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f04004d;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f04004e;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f04004f;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f040050;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f040051;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f040052;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f040053;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f040054;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f040055;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f040056;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f040057;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f040058;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f040059;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f04005a;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f04005b;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f04005c;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f04005d;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f04005e;
    /**
     * The confirm button mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>activation</td><td>1</td><td>Two state "enable/disable" button.</td></tr>
     * <tr><td>confirm</td><td>0</td><td>Traditional single action "ok" button.</td></tr>
     * </table>
     */
    public static final int confirmMode=0x7f04005f;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f040060;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f040061;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f040062;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f040063;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f040064;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f040065;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f040066;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f040067;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f040068;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f040069;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f04006a;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f04006b;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f04006c;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f04006d;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f04006e;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f04006f;
    /**
     * Message when password is not in use, and call barring is disabled
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessageDisabledNoPwd=0x7f040070;
    /**
     * Message when password is not in use, and call barring is enabled
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessageEnabledNoPwd=0x7f040071;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f040072;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f040073;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f040074;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f040075;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialpadTheme=0x7f040076;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_background=0x7f040077;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_delete_padding=0x7f040078;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_icon_tint=0x7f040079;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_key_button_touch_tint=0x7f04007a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialpad_margin_style=0x7f04007b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_separator_color=0x7f04007c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_text_color=0x7f04007d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_text_color_primary=0x7f04007e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_text_color_secondary=0x7f04007f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_voicemail_tint=0x7f040080;
    /**
     * The disable button text.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int disableButtonText=0x7f040081;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f040082;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f040083;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f040084;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f040085;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f040086;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f040087;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableBottomCompat=0x7f040088;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableEndCompat=0x7f040089;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableLeftCompat=0x7f04008a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableRightCompat=0x7f04008b;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f04008c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableStartCompat=0x7f04008d;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int drawableTint=0x7f04008e;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int drawableTintMode=0x7f04008f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableTopCompat=0x7f040090;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f040091;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerLayoutStyle=0x7f040092;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f040093;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f040094;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f040095;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f040096;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f040097;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f040098;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f040099;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f04009a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int emergencyButtonBackgroundColor=0x7f04009b;
    /**
     * The enable button text.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int enableButtonText=0x7f04009c;
    /**
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enableCopying=0x7f04009d;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f04009e;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f04009f;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f0400a0;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f0400a1;
    /**
     * BA: Disable all, CommandsInterface.CB_FACILITY_BA_ALL
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int facility=0x7f0400a2;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0400a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0400a4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f0400a5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f0400a6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0400a7;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f0400a8;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0400a9;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0400aa;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0400ab;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0400ac;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0400ad;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0400ae;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0400af;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0400b0;
    /**
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderSystemFontFamily=0x7f0400b1;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f0400b2;
    /**
     * OpenType font variation settings, available after api 26.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f0400b3;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f0400b4;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f0400b5;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f0400b6;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f0400b7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f0400b8;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f0400b9;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f0400ba;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0400bb;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0400bc;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f0400bd;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0400be;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0400bf;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0400c0;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0400c1;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0400c2;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0400c3;
    /**
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int initialExpandedChildrenCount=0x7f0400c4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0400c5;
    /**
     * Whether the Preference is visible. By default, this is set to true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isPreferenceVisible=0x7f0400c6;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0400c7;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f0400c8;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f0400c9;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f0400ca;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f0400cb;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f0400cc;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f0400cd;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorMultipleAnimated=0x7f0400ce;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorSingleAnimated=0x7f0400cf;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f0400d0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f0400d1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f0400d2;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f0400d3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f0400d4;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f0400d5;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f0400d6;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f0400d7;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingEnd=0x7f0400d8;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f0400d9;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f0400da;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingStart=0x7f0400db;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f0400dc;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f0400dd;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f0400de;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f0400df;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f0400e0;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0400e1;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f0400e2;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f0400e3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f0400e4;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f0400e5;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f0400e6;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f0400e7;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f0400e8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int nestedScrollViewStyle=0x7f0400e9;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f0400ea;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f0400eb;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f0400ec;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f0400ed;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f0400ee;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f0400ef;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f0400f0;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f0400f1;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f0400f2;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f0400f3;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f0400f4;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f0400f5;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f0400f6;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f0400f7;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f0400f8;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f0400f9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preferenceBackgroundColor=0x7f0400fa;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f0400fb;
    /**
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryTitleTextAppearance=0x7f0400fc;
    /**
     * The preferred color for the title displayed in a PreferenceCategory.
     * If this is not specified by a developer, we use ?android:attr/colorAccent above
     * Lollipop, and ?attr/colorAccent below Lollipop (when using an AppCompat theme).
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preferenceCategoryTitleTextColor=0x7f0400fd;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f0400fe;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f0400ff;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f040100;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f040101;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f040102;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f040103;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f040104;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f040105;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f040106;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f040107;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f040108;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f040109;
    /**
     * Resource reference to the string array of query patterns for a custom capability.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryPatterns=0x7f04010a;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f04010b;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f04010c;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f04010d;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f04010e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>busy</td><td>1</td><td>busy</td></tr>
     * <tr><td>no_reply</td><td>2</td><td>no_reply</td></tr>
     * <tr><td>not_reachable</td><td>3</td><td>not_reachable</td></tr>
     * <tr><td>unconditional</td><td>0</td><td>unconditional</td></tr>
     * </table>
     */
    public static final int reason=0x7f04010f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int recyclerViewStyle=0x7f040110;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int resizing_text_min_size=0x7f040111;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f040112;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f040113;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f040114;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f040115;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f040116;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f040117;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f040118;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f040119;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f04011a;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f04011b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>data</td><td>2</td><td>data</td></tr>
     * <tr><td>voice</td><td>1</td><td>voice</td></tr>
     * </table>
     */
    public static final int serviceClass=0x7f04011c;
    /**
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shortcutMatchRequired=0x7f04011d;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f04011e;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f04011f;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f040120;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f040121;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f040122;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f040123;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f040124;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f040125;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f040126;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f040127;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f040128;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f040129;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f04012a;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f04012b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f04012c;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f04012d;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f04012e;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f04012f;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f040130;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f040131;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f040132;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f040133;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f040134;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f040135;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f040136;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f040137;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f040138;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f040139;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f04013a;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f04013b;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f04013c;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f04013d;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f04013e;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f04013f;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f040140;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f040141;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f040142;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f040143;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f040144;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f040145;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f040146;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f040147;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f040148;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f040149;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f04014a;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int textLocale=0x7f04014b;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f04014c;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f04014d;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f04014e;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f04014f;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f040150;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040151;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f040152;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f040153;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f040154;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f040155;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f040156;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f040157;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f040158;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f040159;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f04015a;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f04015b;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f04015c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f04015d;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f04015e;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f04015f;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f040160;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f040161;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f040162;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f040163;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f040164;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f040165;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f040166;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f040167;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f040168;
    /**
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int updatesContinuously=0x7f040169;
    /**
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useSimpleSummaryProvider=0x7f04016a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f04016b;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f04016c;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f04016d;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f04016e;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f04016f;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f040170;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f040171;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f040172;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f040173;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f040174;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f040175;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f040176;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f040177;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    public static final int abc_config_actionMenuItemAllCaps=0x7f050001;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_ALLOW_EMERGENCY_NUMBERS_IN_CALL_LOG_BOOL
     */
    public static final int allow_emergency_numbers_in_call_log=0x7f050002;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_ALLOW_LOCAL_DTMF_TONES_BOOL
     */
    public static final int allow_local_dtmf_tones=0x7f050003;
    /**
     * Flag indicating whether to allow visual voicemail if available on the device.[DO NOT TRANSLATE]
     */
    public static final int allow_visual_voicemail=0x7f050004;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_AUTO_RETRY_ENABLED_BOOL
     */
    public static final int auto_retry_enabled=0x7f050005;
    /**
     * Whether a device can have 5G connection in DSDS mode. It should be true by default, but
     * in some devices per modem limitation 5G network can't be connected if two or more SIMs
     * are active simultaneously. In that case, this value should be false.
     */
    public static final int config_5g_connection_in_dsds_mode=0x7f050006;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_ADDITIONAL_CALL_SETTING_BOOL
     */
    public static final int config_additional_call_setting=0x7f050007;
    /**
     * Whether the cellular radio is allowed to be power down when the Bluetooth can provide the data/call capabilities
     */
    public static final int config_allowRadioPowerDownOnBluetooth=0x7f050008;
    /**
     * Allows the telephony HFA logic to run even if we're not in setup wizard.
     */
    public static final int config_allow_hfa_outside_of_setup_wizard=0x7f050009;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_APN_EXPAND_BOOL
     */
    public static final int config_apn_expand=0x7f05000a;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_CARRIER_SETTINGS_ENABLE_BOOL
     */
    public static final int config_carrier_settings_enable=0x7f05000b;
    /**
     * Flag indicating if SIM state should be checked before making an outgoing call.
     */
    public static final int config_checkSimStateBeforeOutgoingCall=0x7f05000c;
    /**
     * Flag indicating whether the the emergency phone account should be emergency calls only
     */
    public static final int config_emergency_account_emergency_calls_only=0x7f05000d;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_ENABLE_DIALER_KEY_VIBRATION_BOOL
     */
    public static final int config_enable_dialer_key_vibration=0x7f05000e;
    /**
     * Show enabled lte option for lte device
     */
    public static final int config_enabled_lte=0x7f05000f;
    /**
     * When an emergency call is placed and the carrier supports network initiated SUPL requests
     * for location, this configuration dictates whether or not the modem supports SUPL requests
     * being handled on the logical slot that is not currently configured as the default data
     * slot. If true, telephony will always try to place the emergency call on the subscription
     * associated with default data first, instead of using the default voice configuration.
     */
    public static final int config_gnss_supl_requires_default_data_for_emergency=0x7f050010;
    public static final int config_materialPreferenceIconSpaceReserved=0x7f050011;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_OPERATOR_SELECTION_EXPAND_BOOL
     */
    public static final int config_operator_selection_expand=0x7f050012;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_PREFER_2G_BOOL
     */
    public static final int config_prefer_2g=0x7f050013;
    /**
     * Whether the emergency only account can make emergency calls
     */
    public static final int config_pstnCanPlaceEmergencyCalls=0x7f050014;
    /**
     * Flag indicating whether to allow pstn phone accounts [DO NOT TRANSLATE]
     */
    public static final int config_pstn_phone_accounts_enabled=0x7f050015;
    /**
     * Whether or not to support RCS User Capability Exchange
     */
    public static final int config_rcs_user_capability_exchange_enabled=0x7f050016;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_SHOW_APN_SETTING_CDMA_BOOL
     */
    public static final int config_show_apn_setting_cdma=0x7f050017;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_SHOW_CDMA_CHOICES_BOOL
     */
    public static final int config_show_cdma=0x7f050018;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_SHOW_ONSCREEN_DIAL_BUTTON_BOOL
     */
    public static final int config_show_onscreen_dial_button=0x7f050019;
    /**
     * Flag indicating whether the TelephonyConnectionService supports the handover of calls from
     * the TelephonyConnectionService to another ConnectionService defined in the system.
     * Telecom performs the handover by placing a call using the "to" ConnectionService, and then
     * disconnecting the ongoing Telephony call when the call goes active.
     */
    public static final int config_support_handover_from=0x7f05001a;
    /**
     * Flag indicating whether the device supports RTT (real-time text)
     */
    public static final int config_support_rtt=0x7f05001b;
    /**
     * Whether the device supports dialing emergency RTT calls when there's no SIM card installed
     */
    public static final int config_support_simless_emergency_rtt=0x7f05001c;
    /**
     * Show enabled tdscdma option for device
     * Show enabled tdscdma option for device
     * Show enabled tdscdma option for device
     * Show enabled tdscdma option for device
     * Show enabled tdscdma option for device
     */
    public static final int config_support_tdscdma=0x7f05001d;
    /**
     * Whether the device supports the AudioManager Telephony audio device and output onto this
     * device using {@link AudioDeviceInfo#TYPE_TELEPHONY}.
     * When this is true, the Telephony stack is able to add additional audio to the outgoing
     * audio stream which the remote party will be able to hear.
     */
    public static final int config_support_telephony_audio_device=0x7f05001e;
    /**
     * Flag indicating whether a system app can use video calling fallback if carrier video
     * calling is not available.
     */
    public static final int config_support_video_calling_fallback=0x7f05001f;
    /**
     * Whether or not to support device to device communication using RTP and DTMF communication
     * transports.
     */
    public static final int config_use_device_to_device_communication=0x7f050020;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_USE_HFA_FOR_PROVISIONING_BOOL
     */
    public static final int config_use_hfa_for_provisioning=0x7f050021;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_USE_OTASP_FOR_PROVISIONING_BOOL
     */
    public static final int config_use_otasp_for_provisioning=0x7f050022;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_VOICE_PRIVACY_DISABLE_UI_BOOL
     */
    public static final int config_voice_privacy_disable=0x7f050023;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_CSP_ENABLED_BOOL
     */
    public static final int csp_enabled=0x7f050024;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_DTMF_TYPE_ENABLED_BOOL
     */
    public static final int dtmf_type_enabled=0x7f050025;
    /**
     * Whether or not to show notifications for when bluetooth connection is bad during a call
     */
    public static final int enable_bluetooth_call_quality_notification=0x7f050026;
    /**
     * Flag indicating if hac is enabled
     */
    public static final int hac_enabled=0x7f050027;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_HAS_IN_CALL_NOISE_SUPPRESSION_BOOL
     */
    public static final int has_in_call_noise_suppression=0x7f050028;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_IGNORE_SIM_NETWORK_LOCKED_EVENTS_BOOL
     */
    public static final int ignore_sim_network_locked_events=0x7f050029;
    /**
     * Determine whether calls to mute the microphone in PhoneUtils
     * are routed through the android.media.AudioManager class (true) or through
     * the com.android.internal.telephony.Phone interface (false).
     */
    public static final int send_mic_mute_to_AudioManager=0x7f05002a;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_SIM_NETWORK_UNLOCK_ALLOW_DISMISS_BOOL
     */
    public static final int sim_network_unlock_allow_dismiss=0x7f05002b;
    /**
     * After a CDMA conference call is merged, the swap button should be displayed.
     */
    public static final int support_swap_after_merge=0x7f05002c;
    /**
     * Determine whether the voicemail notification is persistent in the notification bar.
     * If true, the voicemail notifications cannot be dismissed from the notification bar.
     */
    public static final int voicemail_notification_persistent=0x7f05002d;
    /**
     * DEPRECATED: Use CarrierConfigManager#KEY_WORLD_PHONE_BOOL
     */
    public static final int world_phone=0x7f05002e;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060001;
    public static final int abc_btn_colored_borderless_text_material=0x7f060002;
    public static final int abc_btn_colored_text_material=0x7f060003;
    public static final int abc_color_highlight_material=0x7f060004;
    public static final int abc_decor_view_status_guard=0x7f060005;
    public static final int abc_decor_view_status_guard_light=0x7f060006;
    public static final int abc_hint_foreground_material_dark=0x7f060007;
    public static final int abc_hint_foreground_material_light=0x7f060008;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060009;
    public static final int abc_primary_text_disable_only_material_light=0x7f06000a;
    public static final int abc_primary_text_material_dark=0x7f06000b;
    public static final int abc_primary_text_material_light=0x7f06000c;
    public static final int abc_search_url_text=0x7f06000d;
    public static final int abc_search_url_text_normal=0x7f06000e;
    public static final int abc_search_url_text_pressed=0x7f06000f;
    public static final int abc_search_url_text_selected=0x7f060010;
    public static final int abc_secondary_text_material_dark=0x7f060011;
    public static final int abc_secondary_text_material_light=0x7f060012;
    public static final int abc_tint_btn_checkable=0x7f060013;
    public static final int abc_tint_default=0x7f060014;
    public static final int abc_tint_edittext=0x7f060015;
    public static final int abc_tint_seek_thumb=0x7f060016;
    public static final int abc_tint_spinner=0x7f060017;
    public static final int abc_tint_switch_track=0x7f060018;
    public static final int accent_material_dark=0x7f060019;
    public static final int accent_material_light=0x7f06001a;
    /**
     * Background color of action bars.  Ensure this stays in sync with Dialer
     * actionbar_background_color.
     */
    public static final int actionbar_background_color=0x7f06001b;
    /**
     * Dark variant of the action bar color.  Ensure this stays in sync with Dialer version.
     */
    public static final int actionbar_background_color_dark=0x7f06001c;
    /**
     * Color for icons in the actionbar. Ensure this stays in sync with Dialer version.
     */
    public static final int actionbar_icon_color=0x7f06001d;
    public static final int androidx_core_ripple_material_light=0x7f06001e;
    public static final int androidx_core_secondary_text_default_material_light=0x7f06001f;
    public static final int background_dialpad=0x7f060020;
    public static final int background_dialpad_pressed=0x7f060021;
    public static final int background_floating_material_dark=0x7f060022;
    public static final int background_floating_material_light=0x7f060023;
    public static final int background_material_dark=0x7f060024;
    public static final int background_material_light=0x7f060025;
    public static final int bright_foreground_disabled_material_dark=0x7f060026;
    public static final int bright_foreground_disabled_material_light=0x7f060027;
    public static final int bright_foreground_inverse_material_dark=0x7f060028;
    public static final int bright_foreground_inverse_material_light=0x7f060029;
    public static final int bright_foreground_material_dark=0x7f06002a;
    public static final int bright_foreground_material_light=0x7f06002b;
    public static final int button_material_dark=0x7f06002c;
    public static final int button_material_light=0x7f06002d;
    public static final int default_sim_icon_tint_color=0x7f06002e;
    /**
     * Color matches dialer settings light M2 theme.
     */
    public static final int dialer_background_color=0x7f06002f;
    public static final int dialer_dialpad_touch_tint=0x7f060030;
    public static final int dialer_divider_color=0x7f060031;
    public static final int dialer_primary_text_color=0x7f060032;
    public static final int dialer_secondary_text_color=0x7f060033;
    /**
     * Colors for the dialpad
     */
    public static final int dialer_theme_color=0x7f060034;
    public static final int dialer_theme_color_dark=0x7f060035;
    public static final int dialpad_digits_text_color=0x7f060036;
    public static final int dialpad_icon_tint=0x7f060037;
    public static final int dialpad_icon_tint_dark=0x7f060038;
    public static final int dialpad_primary_text_color=0x7f060039;
    public static final int dialpad_secondary_text_color=0x7f06003a;
    public static final int dialpad_separator_line_color=0x7f06003b;
    public static final int dialpad_voicemail_tint=0x7f06003c;
    public static final int dim_foreground_disabled_material_dark=0x7f06003d;
    public static final int dim_foreground_disabled_material_light=0x7f06003e;
    public static final int dim_foreground_material_dark=0x7f06003f;
    public static final int dim_foreground_material_light=0x7f060040;
    /**
     * DTMF Dialer
     */
    public static final int dtmf_dialer_display_text=0x7f060041;
    public static final int emergency_call_icon_color=0x7f060042;
    public static final int emergency_dialpad_fab_tint_color=0x7f060043;
    public static final int emergency_info_btn_background_color=0x7f060044;
    /**
     * Colors for shortcut view
     * Colors for shortcut view
     */
    public static final int emergency_info_btn_bolder=0x7f060045;
    public static final int emergency_shortcut_button_background_color=0x7f060046;
    public static final int emergency_shortcut_confirm_button_background_color=0x7f060047;
    public static final int emergency_shortcut_confirm_phone_type_icon_color=0x7f060048;
    public static final int emergency_shortcut_phone_type_icon_color=0x7f060049;
    public static final int error_color_material_dark=0x7f06004a;
    public static final int error_color_material_light=0x7f06004b;
    public static final int floating_action_button_touch_tint=0x7f06004c;
    public static final int foreground_material_dark=0x7f06004d;
    public static final int foreground_material_light=0x7f06004e;
    public static final int highlighted_text_material_dark=0x7f06004f;
    public static final int highlighted_text_material_light=0x7f060050;
    /**
     * In-call UI
     */
    public static final int incall_callTypeSip=0x7f060051;
    /**
     * green
     */
    public static final int incall_call_banner_background=0x7f060052;
    /**
     * semitransparent blueish grey
     */
    public static final int incall_call_banner_text_color=0x7f060053;
    /**
     * semitransparent black
     */
    public static final int incall_secondary_info_background=0x7f060054;
    /**
     * Used with some smaller texts in manage conference screen.
     */
    public static final int manage_conference_secondary_text_color=0x7f060055;
    public static final int material_blue_grey_800=0x7f060056;
    public static final int material_blue_grey_900=0x7f060057;
    public static final int material_blue_grey_950=0x7f060058;
    public static final int material_deep_teal_200=0x7f060059;
    public static final int material_deep_teal_500=0x7f06005a;
    public static final int material_grey_100=0x7f06005b;
    public static final int material_grey_300=0x7f06005c;
    public static final int material_grey_50=0x7f06005d;
    public static final int material_grey_600=0x7f06005e;
    public static final int material_grey_800=0x7f06005f;
    public static final int material_grey_850=0x7f060060;
    public static final int material_grey_900=0x7f060061;
    public static final int notification_action_color_filter=0x7f060062;
    public static final int notification_icon_bg_color=0x7f060063;
    /**
     * Put on top of each photo, implying 80% darker than usual.
     */
    public static final int on_hold_dim_effect=0x7f060064;
    public static final int ota_title_color=0x7f060065;
    /**
     * Color of the theme of the People app
     */
    public static final int people_app_theme_color=0x7f060066;
    /**
     * Action bar text color.  Ensure this stays in sync with dialer_icon_color in action bar.
     */
    public static final int phone_settings_actionbar_text_color=0x7f060067;
    /**
     * Settings screen should use the same colors as the Dialer
     */
    public static final int phone_settings_background_color=0x7f060068;
    public static final int preference_fallback_accent_color=0x7f060069;
    public static final int primary_dark_material_dark=0x7f06006a;
    public static final int primary_dark_material_light=0x7f06006b;
    public static final int primary_material_dark=0x7f06006c;
    public static final int primary_material_light=0x7f06006d;
    public static final int primary_text_default_material_dark=0x7f06006e;
    public static final int primary_text_default_material_light=0x7f06006f;
    public static final int primary_text_disabled_material_dark=0x7f060070;
    public static final int primary_text_disabled_material_light=0x7f060071;
    public static final int ripple_material_dark=0x7f060072;
    public static final int ripple_material_light=0x7f060073;
    public static final int secondary_text_default_material_dark=0x7f060074;
    public static final int secondary_text_default_material_light=0x7f060075;
    public static final int secondary_text_disabled_material_dark=0x7f060076;
    public static final int secondary_text_disabled_material_light=0x7f060077;
    public static final int setting_disabled_color=0x7f060078;
    /**
     * Color for the setting text.
     */
    public static final int setting_primary_color=0x7f060079;
    /**
     * Color for the setting description text.
     */
    public static final int setting_secondary_color=0x7f06007a;
    public static final int settings_text_color_primary=0x7f06007b;
    public static final int settings_text_color_secondary=0x7f06007c;
    public static final int switch_thumb_disabled_material_dark=0x7f06007d;
    public static final int switch_thumb_disabled_material_light=0x7f06007e;
    public static final int switch_thumb_material_dark=0x7f06007f;
    public static final int switch_thumb_material_light=0x7f060080;
    public static final int switch_thumb_normal_material_dark=0x7f060081;
    public static final int switch_thumb_normal_material_light=0x7f060082;
    public static final int tooltip_background_dark=0x7f060083;
    public static final int tooltip_background_light=0x7f060084;
    public static final int white_70_percent=0x7f060085;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    public static final int abc_action_bar_default_height_material=0x7f070002;
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    public static final int abc_action_bar_stacked_max_height=0x7f070009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000c;
    public static final int abc_action_button_min_height_material=0x7f07000d;
    public static final int abc_action_button_min_width_material=0x7f07000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f07000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f070010;
    public static final int abc_alert_dialog_button_dimen=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    public static final int abc_button_padding_vertical_material=0x7f070015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    public static final int abc_config_prefDialogWidth=0x7f070017;
    public static final int abc_control_corner_material=0x7f070018;
    public static final int abc_control_inset_material=0x7f070019;
    public static final int abc_control_padding_material=0x7f07001a;
    public static final int abc_dialog_corner_radius_material=0x7f07001b;
    public static final int abc_dialog_fixed_height_major=0x7f07001c;
    public static final int abc_dialog_fixed_height_minor=0x7f07001d;
    public static final int abc_dialog_fixed_width_major=0x7f07001e;
    public static final int abc_dialog_fixed_width_minor=0x7f07001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f070020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070021;
    public static final int abc_dialog_min_width_major=0x7f070022;
    public static final int abc_dialog_min_width_minor=0x7f070023;
    public static final int abc_dialog_padding_material=0x7f070024;
    public static final int abc_dialog_padding_top_material=0x7f070025;
    public static final int abc_dialog_title_divider_material=0x7f070026;
    public static final int abc_disabled_alpha_material_dark=0x7f070027;
    public static final int abc_disabled_alpha_material_light=0x7f070028;
    public static final int abc_dropdownitem_icon_width=0x7f070029;
    public static final int abc_dropdownitem_text_padding_left=0x7f07002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002d;
    public static final int abc_edit_text_inset_top_material=0x7f07002e;
    public static final int abc_floating_window_z=0x7f07002f;
    public static final int abc_list_item_height_large_material=0x7f070030;
    public static final int abc_list_item_height_material=0x7f070031;
    public static final int abc_list_item_height_small_material=0x7f070032;
    public static final int abc_list_item_padding_horizontal_material=0x7f070033;
    public static final int abc_panel_menu_list_width=0x7f070034;
    public static final int abc_progress_bar_height_material=0x7f070035;
    public static final int abc_search_view_preferred_height=0x7f070036;
    public static final int abc_search_view_preferred_width=0x7f070037;
    public static final int abc_seekbar_track_background_height_material=0x7f070038;
    public static final int abc_seekbar_track_progress_height_material=0x7f070039;
    public static final int abc_select_dialog_padding_start_material=0x7f07003a;
    public static final int abc_star_big=0x7f07003b;
    public static final int abc_star_medium=0x7f07003c;
    public static final int abc_star_small=0x7f07003d;
    public static final int abc_switch_padding=0x7f07003e;
    public static final int abc_text_size_body_1_material=0x7f07003f;
    public static final int abc_text_size_body_2_material=0x7f070040;
    public static final int abc_text_size_button_material=0x7f070041;
    public static final int abc_text_size_caption_material=0x7f070042;
    public static final int abc_text_size_display_1_material=0x7f070043;
    public static final int abc_text_size_display_2_material=0x7f070044;
    public static final int abc_text_size_display_3_material=0x7f070045;
    public static final int abc_text_size_display_4_material=0x7f070046;
    public static final int abc_text_size_headline_material=0x7f070047;
    public static final int abc_text_size_large_material=0x7f070048;
    public static final int abc_text_size_medium_material=0x7f070049;
    public static final int abc_text_size_menu_header_material=0x7f07004a;
    public static final int abc_text_size_menu_material=0x7f07004b;
    public static final int abc_text_size_small_material=0x7f07004c;
    public static final int abc_text_size_subhead_material=0x7f07004d;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f07004e;
    public static final int abc_text_size_title_material=0x7f07004f;
    public static final int abc_text_size_title_material_toolbar=0x7f070050;
    public static final int action_bar_elevation=0x7f070051;
    /**
     * Action bar dimensions.  Keep in sync with same value in Dialer.
     */
    public static final int action_bar_height=0x7f070052;
    public static final int actionbar_contentInsetStart=0x7f070053;
    /**
     * Padding at the left and right edges of the incall_touch_ui button
     * cluster.  This padding is necessary because we can't allow the
     * buttons to be very close to the edges of the screen, due to the
     * risk of false touches (from your finger wrapping around while
     * holding the phone, *before* moving it up to your face and having
     * the prox sensor kick in.)
     */
    public static final int button_cluster_side_padding=0x7f070054;
    /**
     * Height of the "call banner" overlay on top of the upper part of
     * the call info area.
     */
    public static final int call_banner_height=0x7f070055;
    /**
     * Right padding for name and number fields in the call banner.
     * This padding is used to ensure that ultra-long names or
     * numbers won't overlap the elapsed time indication.
     */
    public static final int call_banner_name_number_right_padding=0x7f070056;
    /**
     * Padding at the left and right edges of the "call banner".
     */
    public static final int call_banner_side_padding=0x7f070057;
    /**
     * Padding at the top and bottom edges of the "call banner".
     */
    public static final int call_banner_top_bottom_padding=0x7f070058;
    public static final int compat_button_inset_horizontal_material=0x7f070059;
    public static final int compat_button_inset_vertical_material=0x7f07005a;
    public static final int compat_button_padding_horizontal_material=0x7f07005b;
    public static final int compat_button_padding_vertical_material=0x7f07005c;
    public static final int compat_control_corner_material=0x7f07005d;
    public static final int compat_notification_large_icon_max_height=0x7f07005e;
    public static final int compat_notification_large_icon_max_width=0x7f07005f;
    /**
     * The line height for confirmed emergency info.
     */
    public static final int confirmed_emergency_info_line_height=0x7f070060;
    public static final int def_drawer_elevation=0x7f070061;
    /**
     * The text size for titles in settings page.
     */
    public static final int dialer_head1_font_size=0x7f070062;
    /**
     * The text size for items in settings page.
     */
    public static final int dialer_primary2_font_size=0x7f070063;
    /**
     * The text size for description in settings page.
     */
    public static final int dialer_secondary_font_size=0x7f070064;
    public static final int dialpad_bottom_key_height=0x7f070065;
    public static final int dialpad_bottom_padding=0x7f070066;
    /**
     * The bottom space of the dialpad to account for the dial button
     * The bottom space of the dialpad to account for the dial button
     */
    public static final int dialpad_bottom_space_height=0x7f070067;
    /**
     * The height and width for the dialpad button
     * The height and width for the dialpad button
     * The height and width for the dialpad button
     * The height and width for the dialpad button
     */
    public static final int dialpad_button_height=0x7f070068;
    public static final int dialpad_button_margin=0x7f070069;
    public static final int dialpad_button_width=0x7f07006a;
    public static final int dialpad_center_margin=0x7f07006b;
    public static final int dialpad_digits_adjustable_height=0x7f07006c;
    /**
     * Provide adjustable dimensions so that different apps can use different dialpad sizes.
     */
    public static final int dialpad_digits_adjustable_text_size=0x7f07006d;
    public static final int dialpad_digits_height=0x7f07006e;
    public static final int dialpad_digits_menu_left_padding=0x7f07006f;
    public static final int dialpad_digits_menu_right_padding=0x7f070070;
    public static final int dialpad_digits_padding=0x7f070071;
    public static final int dialpad_digits_text_min_size=0x7f070072;
    public static final int dialpad_digits_text_size=0x7f070073;
    /**
     * Dimensions for Emergency Dialer and dialpad inside the in-call screen
     */
    public static final int dialpad_horizontal_margin=0x7f070074;
    public static final int dialpad_horizontal_padding=0x7f070075;
    public static final int dialpad_key_button_translate_y=0x7f070076;
    public static final int dialpad_key_height=0x7f070077;
    public static final int dialpad_key_letters_size=0x7f070078;
    public static final int dialpad_key_margin_right=0x7f070079;
    public static final int dialpad_key_number_default_margin_bottom=0x7f07007a;
    public static final int dialpad_key_number_margin_bottom=0x7f07007b;
    public static final int dialpad_key_number_width=0x7f07007c;
    public static final int dialpad_key_numbers_default_size=0x7f07007d;
    /**
     * Text dimensions for dialpad keys
     */
    public static final int dialpad_key_numbers_size=0x7f07007e;
    /**
     * Right margins for specific keys to align them correctly
     */
    public static final int dialpad_key_one_margin_right=0x7f07007f;
    public static final int dialpad_key_plus_size=0x7f070080;
    public static final int dialpad_key_pound_size=0x7f070081;
    public static final int dialpad_key_star_size=0x7f070082;
    public static final int dialpad_key_text_width=0x7f070083;
    public static final int dialpad_overflow_margin=0x7f070084;
    public static final int dialpad_space_above_keys=0x7f070085;
    public static final int dialpad_space_below_keys=0x7f070086;
    public static final int dialpad_symbol_margin_bottom=0x7f070087;
    public static final int dialpad_vertical_margin=0x7f070088;
    public static final int dialpad_voicemail_icon_padding_top=0x7f070089;
    public static final int dialpad_zero_key_number_default_margin_bottom=0x7f07008a;
    /**
     * Zero key should have less space between self and text because "+" is smaller
     */
    public static final int dialpad_zero_key_number_margin_bottom=0x7f07008b;
    public static final int disabled_alpha_material_dark=0x7f07008c;
    public static final int disabled_alpha_material_light=0x7f07008d;
    /**
     * The size of the "emergency calling unavailable" message shown in the emergency dialer
     */
    public static final int emergency_call_warning_size=0x7f07008e;
    /**
     * Margin of dialpad button
     * Margin of dialpad button
     * Margin of dialpad button
     * Margin of dialpad button
     */
    public static final int emergency_dialer_dialpad_button_margin=0x7f07008f;
    /**
     * Just used in landscape mode
     */
    public static final int emergency_dialer_digits_height=0x7f070090;
    public static final int emergency_dialer_image_margin_end=0x7f070091;
    /**
     * Horizontal margin for the image on emergency dialer.
     */
    public static final int emergency_dialer_image_margin_start=0x7f070092;
    /**
     * Height and vertical margin for the emergency information button.
     * Height and vertical margin for the emergency information button.
     * Height and vertical margin for the emergency information button.
     * Height and vertical margin for the emergency information button.
     */
    public static final int emergency_info_button_height=0x7f070093;
    public static final int emergency_info_button_margin_bottom=0x7f070094;
    public static final int emergency_info_button_margin_top=0x7f070095;
    /**
     * The line height for emergency info hint.
     */
    public static final int emergency_info_hint_line_height=0x7f070096;
    public static final int emergency_info_hint_text_size=0x7f070097;
    /**
     * The height and width for the image of emergency information.
     */
    public static final int emergency_info_image_height=0x7f070098;
    public static final int emergency_info_image_width=0x7f070099;
    /**
     * The line height for emergency info name.
     */
    public static final int emergency_info_name_line_height=0x7f07009a;
    /**
     * The text size of emergency info name and hint
     * The text size of emergency info name and hint
     * The text size of emergency info name and hint
     * The text size of emergency info name and hint
     */
    public static final int emergency_info_name_text_size=0x7f07009b;
    public static final int emergency_info_tap_hint_text_size=0x7f07009c;
    /**
     * Margin for the emergency information button text.
     */
    public static final int emergency_info_text_margin_end=0x7f07009d;
    /**
     * The text size for emergency location.
     * The text size for emergency location.
     * The text size for emergency location.
     * The text size for emergency location.
     */
    public static final int emergency_location_text_size=0x7f07009e;
    /**
     * The width for emergency number title container.
     */
    public static final int emergency_number_title_container_width=0x7f07009f;
    /**
     * Horizontal padding for group of emergency number title
     */
    public static final int emergency_number_title_group_padding_horizontal=0x7f0700a0;
    /**
     * The height for title of emergency number and location info.
     * The height for title of emergency number and location info.
     * The height for title of emergency number and location info.
     * The height for title of emergency number and location info.
     */
    public static final int emergency_number_title_height=0x7f0700a1;
    /**
     * The line height for emergency number title.
     */
    public static final int emergency_number_title_line_height=0x7f0700a2;
    /**
     * The text size for emergency number title.
     * The text size for emergency number title.
     * The text size for emergency number title.
     * The text size for emergency number title.
     */
    public static final int emergency_number_title_text_size=0x7f0700a3;
    /**
     * The height and margin for button of emergency shortcut.
     * The height and margin for button of emergency shortcut.
     * The height and margin for button of emergency shortcut.
     * The height and margin for button of emergency shortcut.
     */
    public static final int emergency_shortcut_button_height=0x7f0700a4;
    public static final int emergency_shortcut_button_margin_bottom=0x7f0700a5;
    /**
     * Horizontal margin for button of emergency shortcut.
     */
    public static final int emergency_shortcut_buttons_margin_horizontal=0x7f0700a6;
    /**
     * The text size of emergency number, type and hint
     * The text size of emergency number, type and hint
     * The text size of emergency number, type and hint
     * The text size of emergency number, type and hint
     */
    public static final int emergency_shortcut_number_text_size=0x7f0700a7;
    public static final int emergency_shortcut_tap_hint_text_size=0x7f0700a8;
    public static final int emergency_shortcut_type_text_size=0x7f0700a9;
    /**
     * The height and width for the function icon of emergency shortcuts.
     */
    public static final int emergency_shortcuts_function_icon_height=0x7f0700aa;
    public static final int emergency_shortcuts_function_icon_width=0x7f0700ab;
    /**
     * Margin for the emergency shortcut button.
     */
    public static final int emergency_shortcuts_margin_end=0x7f0700ac;
    /**
     * Height of buttons in the extra button row.
     */
    public static final int extra_row_button_height=0x7f0700ad;
    /**
     * Width of buttons in the extra button row.
     */
    public static final int extra_row_button_width=0x7f0700ae;
    public static final int fastscroll_default_thickness=0x7f0700af;
    public static final int fastscroll_margin=0x7f0700b0;
    public static final int fastscroll_minimum_range=0x7f0700b1;
    /**
     * Offset of bottom margin of the floating action button used when dialpad is up
     */
    public static final int floating_action_button_dialpad_margin_bottom_offset=0x7f0700b2;
    /**
     * Height of the floating action button
     */
    public static final int floating_action_button_height=0x7f0700b3;
    /**
     * Padding to be applied to the bottom of lists to make space for the floating action
     * button
     */
    public static final int floating_action_button_list_bottom_padding=0x7f0700b4;
    /**
     * Bottom margin of the floating action button
     */
    public static final int floating_action_button_margin_bottom=0x7f0700b5;
    /**
     * Right margin of the floating action button
     */
    public static final int floating_action_button_margin_right=0x7f0700b6;
    /**
     * Corner radius of the floating action button
     */
    public static final int floating_action_button_radius=0x7f0700b7;
    /**
     * Z translation of the floating action button
     */
    public static final int floating_action_button_translation_z=0x7f0700b8;
    /**
     * Width of the floating action button
     */
    public static final int floating_action_button_width=0x7f0700b9;
    public static final int highlight_alpha_material_colored=0x7f0700ba;
    public static final int highlight_alpha_material_dark=0x7f0700bb;
    public static final int highlight_alpha_material_light=0x7f0700bc;
    public static final int hint_alpha_material_dark=0x7f0700bd;
    public static final int hint_alpha_material_light=0x7f0700be;
    public static final int hint_pressed_alpha_material_dark=0x7f0700bf;
    public static final int hint_pressed_alpha_material_light=0x7f0700c0;
    /**
     * Top/Bottom padding around the ILD rate display box.
     */
    public static final int ild_margin_height=0x7f0700c1;
    /**
     * Height of the main row of in-call buttons.
     */
    public static final int in_call_button_height=0x7f0700c2;
    /**
     * Height of the in-call "End" button. Match with Contact's dimens/call_button_height
     */
    public static final int in_call_end_button_height=0x7f0700c3;
    /**
     * Margin between the bottom of the "call card" photo
     * and the top of the in-call button cluster.
     */
    public static final int in_call_touch_ui_upper_margin=0x7f0700c4;
    /**
     * Margin used for incoming call widget's icon for each item.
     * This should be same as "(incoming_call_widget_circle_size - icon_size)/2".
     * Right now answer/decline/reject icons have 38dp width/height.
     * So, (94 - 38)/2 ==> 28dp
     */
    public static final int incoming_call_widget_asset_margin=0x7f0700c5;
    /**
     * Circle size for incoming call widget's each item.
     */
    public static final int incoming_call_widget_circle_size=0x7f0700c6;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f0700c7;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f0700c8;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f0700c9;
    /**
     * The height and width for the image of location info.
     * The height and width for the image of location info.
     * The height and width for the image of location info.
     * The height and width for the image of location info.
     */
    public static final int location_image_height=0x7f0700ca;
    public static final int location_image_width=0x7f0700cb;
    /**
     * The line height and margin start for location text.
     */
    public static final int location_text_line_height=0x7f0700cc;
    public static final int location_text_margin_start=0x7f0700cd;
    public static final int notification_action_icon_size=0x7f0700ce;
    public static final int notification_action_text_size=0x7f0700cf;
    public static final int notification_big_circle_margin=0x7f0700d0;
    public static final int notification_content_margin_start=0x7f0700d1;
    /**
     * Dimension used to possibly down-scale high-res photo into what is suitable
     * for notification's large icon.
     */
    public static final int notification_icon_size=0x7f0700d2;
    public static final int notification_large_icon_height=0x7f0700d3;
    public static final int notification_large_icon_width=0x7f0700d4;
    public static final int notification_main_column_padding_top=0x7f0700d5;
    public static final int notification_media_narrow_margin=0x7f0700d6;
    public static final int notification_right_icon_size=0x7f0700d7;
    public static final int notification_right_side_padding_top=0x7f0700d8;
    public static final int notification_small_icon_background_padding=0x7f0700d9;
    public static final int notification_small_icon_size_as_large=0x7f0700da;
    public static final int notification_subtext_size=0x7f0700db;
    public static final int notification_top_pad=0x7f0700dc;
    public static final int notification_top_pad_large_text=0x7f0700dd;
    /**
     * Dimensions for OTA Call Card
     */
    public static final int otaactivate_layout_marginTop=0x7f0700de;
    public static final int otalistenprogress_layout_marginTop=0x7f0700df;
    public static final int otasuccessfail_layout_marginTop=0x7f0700e0;
    /**
     * The line height for phone call hint.
     */
    public static final int phone_call_hint_line_height=0x7f0700e1;
    /**
     * The height and width of phone icon.
     * The height and width of phone icon.
     * The height and width of phone icon.
     * The height and width of phone icon.
     */
    public static final int phone_icon_height=0x7f0700e2;
    public static final int phone_icon_width=0x7f0700e3;
    /**
     * The line height for phone number.
     */
    public static final int phone_number_line_height=0x7f0700e4;
    /**
     * The height and width for the circle image of phone number type.
     */
    public static final int phone_number_type_circle_image_height=0x7f0700e5;
    public static final int phone_number_type_circle_image_width=0x7f0700e6;
    /**
     * The height and width for the image of phone number type.
     * The height and width for the image of phone number type.
     * The height and width for the image of phone number type.
     * The height and width for the image of phone number type.
     */
    public static final int phone_number_type_image_height=0x7f0700e7;
    public static final int phone_number_type_image_width=0x7f0700e8;
    public static final int preference_dropdown_padding_start=0x7f0700e9;
    public static final int preference_icon_minWidth=0x7f0700ea;
    public static final int preference_seekbar_padding_horizontal=0x7f0700eb;
    public static final int preference_seekbar_padding_vertical=0x7f0700ec;
    public static final int preference_seekbar_value_minWidth=0x7f0700ed;
    /**
     * Padding at the top and bottom edges of the "provider information"
     */
    public static final int provider_info_top_bottom_padding=0x7f0700ee;
    public static final int signal_strength_icon_size=0x7f0700ef;
    public static final int tooltip_corner_radius=0x7f0700f0;
    public static final int tooltip_horizontal_padding=0x7f0700f1;
    public static final int tooltip_margin=0x7f0700f2;
    public static final int tooltip_precise_anchor_extra_offset=0x7f0700f3;
    public static final int tooltip_precise_anchor_threshold=0x7f0700f4;
    public static final int tooltip_vertical_padding=0x7f0700f5;
    public static final int tooltip_y_offset_non_touch=0x7f0700f6;
    public static final int tooltip_y_offset_touch=0x7f0700f7;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080002;
    public static final int abc_action_bar_item_background_material=0x7f080003;
    public static final int abc_btn_borderless_material=0x7f080004;
    public static final int abc_btn_check_material=0x7f080005;
    public static final int abc_btn_check_material_anim=0x7f080006;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f080007;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f080008;
    public static final int abc_btn_colored_material=0x7f080009;
    public static final int abc_btn_default_mtrl_shape=0x7f08000a;
    public static final int abc_btn_radio_material=0x7f08000b;
    public static final int abc_btn_radio_material_anim=0x7f08000c;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f08000d;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f08000e;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f08000f;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f080010;
    public static final int abc_cab_background_internal_bg=0x7f080011;
    public static final int abc_cab_background_top_material=0x7f080012;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f080013;
    public static final int abc_control_background_material=0x7f080014;
    public static final int abc_dialog_material_background=0x7f080015;
    public static final int abc_edit_text_material=0x7f080016;
    public static final int abc_ic_ab_back_material=0x7f080017;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f080018;
    public static final int abc_ic_clear_material=0x7f080019;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f08001a;
    public static final int abc_ic_go_search_api_material=0x7f08001b;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f08001c;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f08001d;
    public static final int abc_ic_menu_overflow_material=0x7f08001e;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f08001f;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f080020;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f080021;
    public static final int abc_ic_search_api_material=0x7f080022;
    public static final int abc_ic_voice_search_api_material=0x7f080023;
    public static final int abc_item_background_holo_dark=0x7f080024;
    public static final int abc_item_background_holo_light=0x7f080025;
    public static final int abc_list_divider_material=0x7f080026;
    public static final int abc_list_divider_mtrl_alpha=0x7f080027;
    public static final int abc_list_focused_holo=0x7f080028;
    public static final int abc_list_longpressed_holo=0x7f080029;
    public static final int abc_list_pressed_holo_dark=0x7f08002a;
    public static final int abc_list_pressed_holo_light=0x7f08002b;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f08002c;
    public static final int abc_list_selector_background_transition_holo_light=0x7f08002d;
    public static final int abc_list_selector_disabled_holo_dark=0x7f08002e;
    public static final int abc_list_selector_disabled_holo_light=0x7f08002f;
    public static final int abc_list_selector_holo_dark=0x7f080030;
    public static final int abc_list_selector_holo_light=0x7f080031;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080032;
    public static final int abc_popup_background_mtrl_mult=0x7f080033;
    public static final int abc_ratingbar_indicator_material=0x7f080034;
    public static final int abc_ratingbar_material=0x7f080035;
    public static final int abc_ratingbar_small_material=0x7f080036;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f080037;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f080038;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f080039;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f08003a;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f08003b;
    public static final int abc_seekbar_thumb_material=0x7f08003c;
    public static final int abc_seekbar_tick_mark_material=0x7f08003d;
    public static final int abc_seekbar_track_material=0x7f08003e;
    public static final int abc_spinner_mtrl_am_alpha=0x7f08003f;
    public static final int abc_spinner_textfield_background_material=0x7f080040;
    public static final int abc_star_black_48dp=0x7f080041;
    public static final int abc_star_half_black_48dp=0x7f080042;
    public static final int abc_switch_thumb_material=0x7f080043;
    public static final int abc_switch_track_mtrl_alpha=0x7f080044;
    public static final int abc_tab_indicator_material=0x7f080045;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f080046;
    public static final int abc_text_cursor_material=0x7f080047;
    public static final int abc_text_select_handle_left_mtrl=0x7f080048;
    public static final int abc_text_select_handle_middle_mtrl=0x7f080049;
    public static final int abc_text_select_handle_right_mtrl=0x7f08004a;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f08004b;
    public static final int abc_textfield_default_mtrl_alpha=0x7f08004c;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f08004d;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f08004e;
    public static final int abc_textfield_search_material=0x7f08004f;
    public static final int abc_vector_test=0x7f080050;
    public static final int btn_checkbox_checked_mtrl=0x7f080051;
    public static final int btn_checkbox_checked_to_unchecked_mtrl_animation=0x7f080052;
    public static final int btn_checkbox_unchecked_mtrl=0x7f080053;
    public static final int btn_checkbox_unchecked_to_checked_mtrl_animation=0x7f080054;
    public static final int btn_compound_background=0x7f080055;
    public static final int btn_dialpad_key=0x7f080056;
    public static final int btn_emergency=0x7f080057;
    public static final int btn_emergency_confirm_information=0x7f080058;
    public static final int btn_emergency_confirm_shortcuts=0x7f080059;
    public static final int btn_emergency_information=0x7f08005a;
    public static final int btn_emergency_shortcuts=0x7f08005b;
    public static final int btn_radio_off_mtrl=0x7f08005c;
    public static final int btn_radio_off_to_on_mtrl_animation=0x7f08005d;
    public static final int btn_radio_on_mtrl=0x7f08005e;
    public static final int btn_radio_on_to_off_mtrl_animation=0x7f08005f;
    public static final int cupcake=0x7f080060;
    public static final int dial_num_pound_wht=0x7f080061;
    public static final int dial_num_star_wht=0x7f080062;
    public static final int emergency_shortcuts_divider=0x7f080063;
    public static final int fab_green=0x7f080064;
    public static final int fab_ic_call=0x7f080065;
    public static final int fab_red=0x7f080066;
    public static final int floating_action_button=0x7f080067;
    public static final int floating_action_button_red=0x7f080068;
    public static final int grayBg=0x7f080069;
    public static final int green_divider=0x7f08006a;
    public static final int ic_active_state_dialer_holo_dark=0x7f08006b;
    public static final int ic_add_24dp=0x7f08006c;
    public static final int ic_add_gnu_grey=0x7f08006d;
    public static final int ic_arrow_back_24dp=0x7f08006e;
    public static final int ic_arrow_back_black_24dp=0x7f08006f;
    public static final int ic_arrow_down_24dp=0x7f080070;
    public static final int ic_arrow_go_next_18=0x7f080071;
    public static final int ic_back_arrow=0x7f080072;
    public static final int ic_btn_back=0x7f080073;
    public static final int ic_btn_next=0x7f080074;
    public static final int ic_dial_action_call=0x7f080075;
    public static final int ic_dial_action_delete=0x7f080076;
    public static final int ic_dialer_sip_black_24dp=0x7f080077;
    public static final int ic_dialpad_delete=0x7f080078;
    public static final int ic_dialpad_voicemail=0x7f080079;
    public static final int ic_dialpad_white_24=0x7f08007a;
    public static final int ic_emergency_callback_mode=0x7f08007b;
    public static final int ic_launcher_background=0x7f08007c;
    public static final int ic_launcher_contacts_background=0x7f08007d;
    public static final int ic_launcher_contacts_foreground=0x7f08007e;
    public static final int ic_launcher_foreground=0x7f08007f;
    public static final int ic_launcher_sip_call=0x7f080080;
    public static final int ic_local_fire_department_gm2_24px=0x7f080081;
    public static final int ic_local_hospital_gm2_24px=0x7f080082;
    public static final int ic_local_police_gm2_24px=0x7f080083;
    public static final int ic_location_on_white_18=0x7f080084;
    public static final int ic_menu_contact=0x7f080085;
    public static final int ic_menu_overflow_lt=0x7f080086;
    public static final int ic_multi_sim=0x7f080087;
    public static final int ic_overflow_menu=0x7f080088;
    public static final int ic_see_contacts_holo_dark=0x7f080089;
    public static final int ic_settings_white_24dp=0x7f08008a;
    public static final int ic_signal_wifi_4_bar_24dp=0x7f08008b;
    public static final int ic_sim_card=0x7f08008c;
    public static final int ic_sim_sub1=0x7f08008d;
    public static final int ic_sim_sub2=0x7f08008e;
    public static final int list_focused_holo=0x7f08008f;
    public static final int list_pressed_holo_dark=0x7f080090;
    public static final int list_selector_disabled_holo_dark=0x7f080091;
    public static final int list_selector_focused_and_checked=0x7f080092;
    public static final int logo_avatar_anonymous_120=0x7f080093;
    public static final int notification_action_background=0x7f080094;
    public static final int notification_bg=0x7f080095;
    public static final int notification_bg_low=0x7f080096;
    public static final int notification_bg_low_normal=0x7f080097;
    public static final int notification_bg_low_pressed=0x7f080098;
    public static final int notification_bg_normal=0x7f080099;
    public static final int notification_bg_normal_pressed=0x7f08009a;
    public static final int notification_icon_background=0x7f08009b;
    public static final int notification_template_icon_bg=0x7f08009c;
    public static final int notification_template_icon_low_bg=0x7f08009d;
    public static final int notification_tile_bg=0x7f08009e;
    public static final int notify_panel_notification_icon_bg=0x7f08009f;
    public static final int overflow_menu=0x7f0800a0;
    public static final int phone_type_icon_background=0x7f0800a1;
    public static final int place_gm2_24px=0x7f0800a2;
    public static final int preference_background=0x7f0800a3;
    public static final int preference_list_divider_material=0x7f0800a4;
    public static final int signal_strength_1x=0x7f0800a5;
    public static final int signal_strength_3g=0x7f0800a6;
    public static final int signal_strength_4g=0x7f0800a7;
    public static final int signal_strength_g=0x7f0800a8;
    public static final int signal_strength_lte=0x7f0800a9;
    public static final int stat_notify_voicemail_sub1=0x7f0800aa;
    public static final int stat_notify_voicemail_sub2=0x7f0800ab;
    public static final int stat_sys_phone_call=0x7f0800ac;
    public static final int stat_sys_phone_call_end=0x7f0800ad;
    public static final int stat_sys_phone_call_forward=0x7f0800ae;
    public static final int stat_sys_phone_call_forward_sub1=0x7f0800af;
    public static final int stat_sys_phone_call_forward_sub2=0x7f0800b0;
    public static final int stat_sys_phone_call_on_hold=0x7f0800b1;
    public static final int stat_sys_vp_phone_call=0x7f0800b2;
    public static final int stat_sys_vp_phone_call_on_hold=0x7f0800b3;
    public static final int tooltip_frame_dark=0x7f0800b4;
    public static final int tooltip_frame_light=0x7f0800b5;
    public static final int vector_drawable_progress_indeterminate_horizontal_trimmed=0x7f0800b6;
  }
  public static final class id {
    public static final int ALT=0x7f090000;
    public static final int CTRL=0x7f090001;
    public static final int FUNCTION=0x7f090002;
    public static final int META=0x7f090003;
    public static final int SHIFT=0x7f090004;
    public static final int SYM=0x7f090005;
    public static final int accessibility_action_clickable_span=0x7f090006;
    public static final int accessibility_custom_action_0=0x7f090007;
    public static final int accessibility_custom_action_1=0x7f090008;
    public static final int accessibility_custom_action_10=0x7f090009;
    public static final int accessibility_custom_action_11=0x7f09000a;
    public static final int accessibility_custom_action_12=0x7f09000b;
    public static final int accessibility_custom_action_13=0x7f09000c;
    public static final int accessibility_custom_action_14=0x7f09000d;
    public static final int accessibility_custom_action_15=0x7f09000e;
    public static final int accessibility_custom_action_16=0x7f09000f;
    public static final int accessibility_custom_action_17=0x7f090010;
    public static final int accessibility_custom_action_18=0x7f090011;
    public static final int accessibility_custom_action_19=0x7f090012;
    public static final int accessibility_custom_action_2=0x7f090013;
    public static final int accessibility_custom_action_20=0x7f090014;
    public static final int accessibility_custom_action_21=0x7f090015;
    public static final int accessibility_custom_action_22=0x7f090016;
    public static final int accessibility_custom_action_23=0x7f090017;
    public static final int accessibility_custom_action_24=0x7f090018;
    public static final int accessibility_custom_action_25=0x7f090019;
    public static final int accessibility_custom_action_26=0x7f09001a;
    public static final int accessibility_custom_action_27=0x7f09001b;
    public static final int accessibility_custom_action_28=0x7f09001c;
    public static final int accessibility_custom_action_29=0x7f09001d;
    public static final int accessibility_custom_action_3=0x7f09001e;
    public static final int accessibility_custom_action_30=0x7f09001f;
    public static final int accessibility_custom_action_31=0x7f090020;
    public static final int accessibility_custom_action_4=0x7f090021;
    public static final int accessibility_custom_action_5=0x7f090022;
    public static final int accessibility_custom_action_6=0x7f090023;
    public static final int accessibility_custom_action_7=0x7f090024;
    public static final int accessibility_custom_action_8=0x7f090025;
    public static final int accessibility_custom_action_9=0x7f090026;
    public static final int action1=0x7f090027;
    public static final int action2=0x7f090028;
    public static final int action3=0x7f090029;
    public static final int action_bar=0x7f09002a;
    public static final int action_bar_activity_content=0x7f09002b;
    public static final int action_bar_container=0x7f09002c;
    public static final int action_bar_root=0x7f09002d;
    public static final int action_bar_spinner=0x7f09002e;
    public static final int action_bar_subtitle=0x7f09002f;
    public static final int action_bar_title=0x7f090030;
    public static final int action_container=0x7f090031;
    public static final int action_context_bar=0x7f090032;
    public static final int action_divider=0x7f090033;
    public static final int action_image=0x7f090034;
    public static final int action_menu_divider=0x7f090035;
    public static final int action_menu_presenter=0x7f090036;
    public static final int action_mode_bar=0x7f090037;
    public static final int action_mode_bar_stub=0x7f090038;
    public static final int action_mode_close_button=0x7f090039;
    public static final int action_text=0x7f09003a;
    public static final int actions=0x7f09003b;
    public static final int activation=0x7f09003c;
    public static final int activity_chooser_view_content=0x7f09003d;
    public static final int add=0x7f09003e;
    public static final int alertTitle=0x7f09003f;
    public static final int always=0x7f090040;
    public static final int async=0x7f090041;
    public static final int bad_pin=0x7f090042;
    public static final int band=0x7f090043;
    public static final int beginning=0x7f090044;
    public static final int blocking=0x7f090045;
    public static final int bottom=0x7f090046;
    public static final int busy=0x7f090047;
    public static final int button=0x7f090048;
    public static final int buttonPanel=0x7f090049;
    public static final int call=0x7f09004a;
    public static final int callCardOtaActivate=0x7f09004b;
    public static final int callCardOtaFailOrSuccessful=0x7f09004c;
    public static final int callCardOtaListenProgress=0x7f09004d;
    public static final int cancel_button=0x7f09004e;
    public static final int carrier_provisioning=0x7f09004f;
    public static final int cbrs_data_switch=0x7f090050;
    public static final int cell_info_rate_select=0x7f090051;
    public static final int cellinfo=0x7f090052;
    public static final int center_vertical=0x7f090053;
    public static final int cfi=0x7f090054;
    public static final int checkbox=0x7f090055;
    public static final int checked=0x7f090056;
    public static final int choose_network_content=0x7f090057;
    public static final int chronometer=0x7f090058;
    public static final int collapseActionView=0x7f090059;
    public static final int confirm=0x7f09005a;
    public static final int confirmed_emergency_info=0x7f09005b;
    public static final int confirmed_emergency_info_image=0x7f09005c;
    public static final int confirmed_phone_type_icon=0x7f09005d;
    public static final int content=0x7f09005e;
    public static final int contentPanel=0x7f09005f;
    public static final int custom=0x7f090060;
    public static final int customPanel=0x7f090061;
    public static final int data=0x7f090062;
    public static final int data_network=0x7f090063;
    public static final int dbm=0x7f090064;
    public static final int dcnr_restricted=0x7f090065;
    public static final int dcnr_restricted_label=0x7f090066;
    public static final int dds=0x7f090067;
    public static final int decor_content_parent=0x7f090068;
    public static final int default_activity_button=0x7f090069;
    public static final int deleteButton=0x7f09006a;
    public static final int dialog_button=0x7f09006b;
    public static final int dialpad=0x7f09006c;
    public static final int dialpad_back=0x7f09006d;
    public static final int dialpad_button_container=0x7f09006e;
    public static final int dialpad_digits_top_separator=0x7f09006f;
    public static final int dialpad_key_letters=0x7f090070;
    public static final int dialpad_key_number=0x7f090071;
    public static final int dialpad_key_voicemail=0x7f090072;
    public static final int dialpad_overflow=0x7f090073;
    public static final int dialpad_view=0x7f090074;
    public static final int digits=0x7f090075;
    public static final int digits_container=0x7f090076;
    public static final int disableHome=0x7f090077;
    public static final int dl_kbps=0x7f090078;
    public static final int dnsCheckState=0x7f090079;
    public static final int dns_check_toggle=0x7f09007a;
    public static final int dsds_switch=0x7f09007b;
    public static final int eab_provisioned_switch=0x7f09007c;
    public static final int edit_container=0x7f09007d;
    public static final int edit_query=0x7f09007e;
    public static final int eight=0x7f09007f;
    public static final int emergency_action_group=0x7f090080;
    public static final int emergency_call_confirm_view=0x7f090081;
    public static final int emergency_call_number_info_view=0x7f090082;
    public static final int emergency_dialer=0x7f090083;
    public static final int emergency_dialer_shortcuts=0x7f090084;
    public static final int emergency_info_button=0x7f090085;
    public static final int emergency_info_confirm_view=0x7f090086;
    public static final int emergency_info_dialpad_spacer=0x7f090087;
    public static final int emergency_info_hint=0x7f090088;
    public static final int emergency_info_image=0x7f090089;
    public static final int emergency_info_name=0x7f09008a;
    public static final int emergency_info_view=0x7f09008b;
    public static final int emergency_number_title=0x7f09008c;
    public static final int emergency_number_title_container=0x7f09008d;
    public static final int emergency_number_title_group=0x7f09008e;
    public static final int emergency_shortcut_buttons_container=0x7f09008f;
    public static final int emergency_shortcut_buttons_group=0x7f090090;
    public static final int empty=0x7f090091;
    public static final int end=0x7f090092;
    public static final int endc_available=0x7f090093;
    public static final int endc_available_label=0x7f090094;
    public static final int entry_panel=0x7f090095;
    public static final int errorText=0x7f090096;
    public static final int expand_activities_button=0x7f090097;
    public static final int expanded_menu=0x7f090098;
    public static final int fdn_name=0x7f090099;
    public static final int fdn_number=0x7f09009a;
    public static final int five=0x7f09009b;
    public static final int floating_action_button=0x7f09009c;
    public static final int floating_action_button_container=0x7f09009d;
    public static final int floating_action_button_dialpad=0x7f09009e;
    public static final int floating_action_button_margin_bottom=0x7f09009f;
    public static final int forever=0x7f0900a0;
    public static final int four=0x7f0900a1;
    public static final int fragment_container_view_tag=0x7f0900a2;
    public static final int gprs=0x7f0900a3;
    public static final int group_divider=0x7f0900a4;
    public static final int gsm=0x7f0900a5;
    public static final int headerText=0x7f0900a6;
    public static final int hintText=0x7f0900a7;
    public static final int home=0x7f0900a8;
    public static final int homeAsUp=0x7f0900a9;
    public static final int httpClientTest=0x7f0900aa;
    public static final int icon=0x7f0900ab;
    public static final int icon_frame=0x7f0900ac;
    public static final int icon_group=0x7f0900ad;
    public static final int ifRoom=0x7f0900ae;
    public static final int ild_container=0x7f0900af;
    public static final int ild_country=0x7f0900b0;
    public static final int ild_rate=0x7f0900b1;
    public static final int image=0x7f0900b2;
    public static final int imei=0x7f0900b3;
    public static final int imsi=0x7f0900b4;
    public static final int info=0x7f0900b5;
    public static final int infoText=0x7f0900b6;
    public static final int input_field=0x7f0900b7;
    public static final int italic=0x7f0900b8;
    public static final int item_touch_helper_previous_elevation=0x7f0900b9;
    public static final int launch_hint=0x7f0900ba;
    public static final int line1=0x7f0900bb;
    public static final int line3=0x7f0900bc;
    public static final int listContainer=0x7f0900bd;
    public static final int listMode=0x7f0900be;
    public static final int list_item=0x7f0900bf;
    public static final int location_icon=0x7f0900c0;
    public static final int location_info=0x7f0900c1;
    public static final int location_text=0x7f0900c2;
    public static final int message=0x7f0900c3;
    public static final int microphone_icon=0x7f0900c4;
    public static final int middle=0x7f0900c5;
    public static final int mismatch=0x7f0900c6;
    public static final int multiply=0x7f0900c7;
    public static final int mwi=0x7f0900c8;
    public static final int ndp_dismiss=0x7f0900c9;
    public static final int ndp_unlock=0x7f0900ca;
    public static final int network_setting_content=0x7f0900cb;
    public static final int network_slicing_config=0x7f0900cc;
    public static final int network_slicing_config_label=0x7f0900cd;
    public static final int never=0x7f0900ce;
    public static final int new_pin1=0x7f0900cf;
    public static final int new_pin2=0x7f0900d0;
    public static final int next_button=0x7f0900d1;
    public static final int nine=0x7f0900d2;
    public static final int no_reply=0x7f0900d3;
    public static final int none=0x7f0900d4;
    public static final int normal=0x7f0900d5;
    public static final int not_reachable=0x7f0900d6;
    public static final int notification_background=0x7f0900d7;
    public static final int notification_main_column=0x7f0900d8;
    public static final int notification_main_column_container=0x7f0900d9;
    public static final int nr_available=0x7f0900da;
    public static final int nr_available_label=0x7f0900db;
    public static final int nr_frequency=0x7f0900dc;
    public static final int nr_frequency_label=0x7f0900dd;
    public static final int nr_state=0x7f0900de;
    public static final int nr_state_label=0x7f0900df;
    public static final int number=0x7f0900e0;
    public static final int number_field=0x7f0900e1;
    public static final int oem_info=0x7f0900e2;
    public static final int off=0x7f0900e3;
    public static final int ok=0x7f0900e4;
    public static final int old_pin=0x7f0900e5;
    public static final int on=0x7f0900e6;
    public static final int one=0x7f0900e7;
    public static final int operator=0x7f0900e8;
    public static final int otaActivate=0x7f0900e9;
    public static final int otaActivateButton=0x7f0900ea;
    public static final int otaDtmfDialerView=0x7f0900eb;
    public static final int otaEndButton=0x7f0900ec;
    public static final int otaListenProgress=0x7f0900ed;
    public static final int otaNextButton=0x7f0900ee;
    public static final int otaSeparator=0x7f0900ef;
    public static final int otaSkipButton=0x7f0900f0;
    public static final int otaSpeakerButton=0x7f0900f1;
    public static final int otaSuccessFailStatus=0x7f0900f2;
    public static final int otaTitle=0x7f0900f3;
    public static final int otaTopLevel=0x7f0900f4;
    public static final int otaTryAgainButton=0x7f0900f5;
    public static final int otaUpperWidgets=0x7f0900f6;
    public static final int outgoing_call_broadcaster=0x7f0900f7;
    public static final int parentPanel=0x7f0900f8;
    public static final int perso_phoneid_text=0x7f0900f9;
    public static final int perso_subtype_text=0x7f0900fa;
    public static final int phoneIndex=0x7f0900fb;
    public static final int phoneNumber=0x7f0900fc;
    public static final int phone_call_hint=0x7f0900fd;
    public static final int phone_number=0x7f0900fe;
    public static final int phone_number_description=0x7f0900ff;
    public static final int phone_type_icon=0x7f090100;
    public static final int phy_chan_config=0x7f090101;
    public static final int pin=0x7f090102;
    public static final int pin_entry=0x7f090103;
    public static final int pinc=0x7f090104;
    public static final int pingHostnameV4=0x7f090105;
    public static final int pingHostnameV6=0x7f090106;
    public static final int ping_test=0x7f090107;
    public static final int placeCall=0x7f090108;
    public static final int pound=0x7f090109;
    public static final int preferredNetworkType=0x7f09010a;
    public static final int progress_circular=0x7f09010b;
    public static final int progress_horizontal=0x7f09010c;
    public static final int progress_large=0x7f09010d;
    public static final int puk_code=0x7f09010e;
    public static final int puk_panel=0x7f09010f;
    public static final int puk_submit=0x7f090110;
    public static final int radio=0x7f090111;
    public static final int radio_power=0x7f090112;
    public static final int rate_container=0x7f090113;
    public static final int received=0x7f090114;
    public static final int recycler_view=0x7f090115;
    public static final int refresh_smsc=0x7f090116;
    public static final int right_icon=0x7f090117;
    public static final int right_side=0x7f090118;
    public static final int ripple_view=0x7f090119;
    public static final int roaming=0x7f09011a;
    public static final int screen=0x7f09011b;
    public static final int scroll=0x7f09011c;
    public static final int scrollIndicatorDown=0x7f09011d;
    public static final int scrollIndicatorUp=0x7f09011e;
    public static final int scrollView=0x7f09011f;
    public static final int search_badge=0x7f090120;
    public static final int search_bar=0x7f090121;
    public static final int search_button=0x7f090122;
    public static final int search_close_btn=0x7f090123;
    public static final int search_edit_frame=0x7f090124;
    public static final int search_go_btn=0x7f090125;
    public static final int search_mag_icon=0x7f090126;
    public static final int search_plate=0x7f090127;
    public static final int search_src_text=0x7f090128;
    public static final int search_voice_btn=0x7f090129;
    public static final int seekbar=0x7f09012a;
    public static final int seekbar_value=0x7f09012b;
    public static final int select_contact=0x7f09012c;
    public static final int select_dialog_listview=0x7f09012d;
    public static final int selected_container=0x7f09012e;
    public static final int selected_label=0x7f09012f;
    public static final int sent=0x7f090130;
    public static final int sentSinceReceived=0x7f090131;
    public static final int seven=0x7f090132;
    public static final int shortcut=0x7f090133;
    public static final int showCustom=0x7f090134;
    public static final int showHome=0x7f090135;
    public static final int showTitle=0x7f090136;
    public static final int six=0x7f090137;
    public static final int smsc=0x7f090138;
    public static final int smsc_label=0x7f090139;
    public static final int spacer=0x7f09013a;
    public static final int special_effects_controller_view_tag=0x7f09013b;
    public static final int spinner=0x7f09013c;
    public static final int split_action_bar=0x7f09013d;
    public static final int src_atop=0x7f09013e;
    public static final int src_in=0x7f09013f;
    public static final int src_over=0x7f090140;
    public static final int star=0x7f090141;
    public static final int status=0x7f090142;
    public static final int status_panel=0x7f090143;
    public static final int status_text=0x7f090144;
    public static final int subid=0x7f090145;
    public static final int submenuarrow=0x7f090146;
    public static final int submit_area=0x7f090147;
    public static final int switchWidget=0x7f090148;
    public static final int tabMode=0x7f090149;
    public static final int tag_accessibility_actions=0x7f09014a;
    public static final int tag_accessibility_clickable_spans=0x7f09014b;
    public static final int tag_accessibility_heading=0x7f09014c;
    public static final int tag_accessibility_pane_title=0x7f09014d;
    public static final int tag_intent=0x7f09014e;
    public static final int tag_on_apply_window_listener=0x7f09014f;
    public static final int tag_on_receive_content_listener=0x7f090150;
    public static final int tag_on_receive_content_mime_types=0x7f090151;
    public static final int tag_screen_reader_focusable=0x7f090152;
    public static final int tag_state_description=0x7f090153;
    public static final int tag_transition_group=0x7f090154;
    public static final int tag_unhandled_key_event_manager=0x7f090155;
    public static final int tag_unhandled_key_listeners=0x7f090156;
    public static final int tag_window_insets_animation_callback=0x7f090157;
    public static final int text=0x7f090158;
    public static final int text2=0x7f090159;
    public static final int textSpacerNoButtons=0x7f09015a;
    public static final int textSpacerNoTitle=0x7f09015b;
    public static final int three=0x7f09015c;
    public static final int time=0x7f09015d;
    public static final int title=0x7f09015e;
    public static final int titleDividerNoCustom=0x7f09015f;
    public static final int title_template=0x7f090160;
    public static final int top=0x7f090161;
    public static final int topPanel=0x7f090162;
    public static final int trigger_carrier_provisioning=0x7f090163;
    public static final int two=0x7f090164;
    public static final int ul_kbps=0x7f090165;
    public static final int unchecked=0x7f090166;
    public static final int unconditional=0x7f090167;
    public static final int uniform=0x7f090168;
    public static final int up=0x7f090169;
    public static final int update_smsc=0x7f09016a;
    public static final int useLogo=0x7f09016b;
    public static final int view_tree_lifecycle_owner=0x7f09016c;
    public static final int view_tree_saved_state_registry_owner=0x7f09016d;
    public static final int view_tree_view_model_store_owner=0x7f09016e;
    public static final int visible_removing_fragment_view_tag=0x7f09016f;
    public static final int voice=0x7f090170;
    public static final int voice_network=0x7f090171;
    public static final int volte_provisioned_switch=0x7f090172;
    public static final int vt_provisioned_switch=0x7f090173;
    public static final int wfc_provisioned_switch=0x7f090174;
    public static final int withText=0x7f090175;
    public static final int wrap_content=0x7f090176;
    public static final int zero=0x7f090177;
  }
  public static final class integer {
    /**
     * Determine whether or not we should play the success/failure tone
     */
    public static final int OtaPlaySuccessFailureTone=0x7f0a0000;
    /**
     * The number of times we should show the activation screen/allow the provisioning
     * to fail before just showing an unsuccessful dialog
     */
    public static final int OtaShowActivateFailTimes=0x7f0a0001;
    /**
     * Determine whether we want to display the OTA activation screen, which
     * gives the user option to activate or cancel
     */
    public static final int OtaShowActivationScreen=0x7f0a0002;
    /**
     * Determine whether we should show the "listen for instructions" screen after
     * successfully placing the OTA call
     */
    public static final int OtaShowListeningScreen=0x7f0a0003;
    public static final int abc_config_activityDefaultDur=0x7f0a0004;
    public static final int abc_config_activityShortDur=0x7f0a0005;
    public static final int cancel_button_image_alpha=0x7f0a0006;
    /**
     * The interval to release/unbind GbaService after the authentication request
     * by millisecond. -1 - no release, 0 - release immediately,
     * positive n - release in n milliseconds
     */
    public static final int config_gba_release_time=0x7f0a0007;
    public static final int config_tooltipAnimTime=0x7f0a0008;
    public static final int dialpad_layout_weight_additional_buttons=0x7f0a0009;
    public static final int dialpad_layout_weight_dialpad=0x7f0a000a;
    /**
     * Layout weight values for dialpad screen. These layouts will be used in one
     * LinearLayout (dialpad_fragment.xml), configuring dialpad screen's vertical
     * ratio.
     */
    public static final int dialpad_layout_weight_digits=0x7f0a000b;
    public static final int dialpad_slide_in_duration=0x7f0a000c;
    public static final int dialpad_slide_out_duration=0x7f0a000d;
    public static final int floating_action_button_animation_duration=0x7f0a000e;
    public static final int status_bar_notification_info_maxnum=0x7f0a000f;
  }
  public static final class interpolator {
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_0=0x7f0b0000;
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_1=0x7f0b0001;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x7f0b0002;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x7f0b0003;
    public static final int btn_radio_to_off_mtrl_animation_interpolator_0=0x7f0b0004;
    public static final int btn_radio_to_on_mtrl_animation_interpolator_0=0x7f0b0005;
    public static final int fast_out_slow_in=0x7f0b0006;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0c0000;
    public static final int abc_action_bar_up_container=0x7f0c0001;
    public static final int abc_action_menu_item_layout=0x7f0c0002;
    public static final int abc_action_menu_layout=0x7f0c0003;
    public static final int abc_action_mode_bar=0x7f0c0004;
    public static final int abc_action_mode_close_item_material=0x7f0c0005;
    public static final int abc_activity_chooser_view=0x7f0c0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0c0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0c0008;
    public static final int abc_alert_dialog_material=0x7f0c0009;
    public static final int abc_alert_dialog_title_material=0x7f0c000a;
    public static final int abc_cascading_menu_item_layout=0x7f0c000b;
    public static final int abc_dialog_title_material=0x7f0c000c;
    public static final int abc_expanded_menu_layout=0x7f0c000d;
    public static final int abc_list_menu_item_checkbox=0x7f0c000e;
    public static final int abc_list_menu_item_icon=0x7f0c000f;
    public static final int abc_list_menu_item_layout=0x7f0c0010;
    public static final int abc_list_menu_item_radio=0x7f0c0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0c0012;
    public static final int abc_popup_menu_item_layout=0x7f0c0013;
    public static final int abc_screen_content_include=0x7f0c0014;
    public static final int abc_screen_simple=0x7f0c0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0c0016;
    public static final int abc_screen_toolbar=0x7f0c0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0c0018;
    public static final int abc_search_view=0x7f0c0019;
    public static final int abc_select_dialog_material=0x7f0c001a;
    public static final int abc_tooltip=0x7f0c001b;
    public static final int adn_list=0x7f0c001c;
    public static final int band_mode=0x7f0c001d;
    public static final int change_sim_pin_screen=0x7f0c001e;
    public static final int choose_network=0x7f0c001f;
    public static final int custom_dialog=0x7f0c0020;
    public static final int delete_fdn_contact_screen=0x7f0c0021;
    public static final int dialog_ussd_response=0x7f0c0022;
    public static final int dialpad=0x7f0c0023;
    public static final int dialpad_key=0x7f0c0024;
    public static final int dialpad_key_one=0x7f0c0025;
    public static final int dialpad_key_pound=0x7f0c0026;
    public static final int dialpad_key_star=0x7f0c0027;
    public static final int dialpad_key_zero=0x7f0c0028;
    public static final int dialpad_view=0x7f0c0029;
    public static final int dialpad_view_unthemed=0x7f0c002a;
    public static final int edit_fdn_contact_screen=0x7f0c002b;
    public static final int emergency_dialer=0x7f0c002c;
    public static final int emergency_information=0x7f0c002d;
    public static final int emergency_shortcut_button=0x7f0c002e;
    public static final int emergency_shortcut_buttons_group=0x7f0c002f;
    public static final int enable_fdn_screen=0x7f0c0030;
    public static final int enable_sim_pin_screen=0x7f0c0031;
    public static final int expand_button=0x7f0c0032;
    public static final int fake_phone_activity=0x7f0c0033;
    public static final int get_pin2_screen=0x7f0c0034;
    public static final int image_frame=0x7f0c0035;
    public static final int network_setting=0x7f0c0036;
    public static final int notification_action=0x7f0c0037;
    public static final int notification_action_tombstone=0x7f0c0038;
    public static final int notification_template_custom_big=0x7f0c0039;
    public static final int notification_template_icon_group=0x7f0c003a;
    public static final int notification_template_part_chronometer=0x7f0c003b;
    public static final int notification_template_part_time=0x7f0c003c;
    public static final int otacall_card=0x7f0c003d;
    public static final int outgoing_call_broadcaster=0x7f0c003e;
    public static final int pref_dialog_editphonenumber=0x7f0c003f;
    public static final int preference=0x7f0c0040;
    public static final int preference_category=0x7f0c0041;
    public static final int preference_category_material=0x7f0c0042;
    public static final int preference_category_no_label=0x7f0c0043;
    public static final int preference_dialog_edittext=0x7f0c0044;
    public static final int preference_dropdown=0x7f0c0045;
    public static final int preference_dropdown_material=0x7f0c0046;
    public static final int preference_information=0x7f0c0047;
    public static final int preference_information_material=0x7f0c0048;
    public static final int preference_list_fragment=0x7f0c0049;
    public static final int preference_material=0x7f0c004a;
    public static final int preference_recyclerview=0x7f0c004b;
    public static final int preference_widget_checkbox=0x7f0c004c;
    public static final int preference_widget_seekbar=0x7f0c004d;
    public static final int preference_widget_seekbar_material=0x7f0c004e;
    public static final int preference_widget_switch=0x7f0c004f;
    public static final int preference_widget_switch_compat=0x7f0c0050;
    public static final int radio_info=0x7f0c0051;
    public static final int select_dialog_item_material=0x7f0c0052;
    public static final int select_dialog_multichoice_material=0x7f0c0053;
    public static final int select_dialog_singlechoice_material=0x7f0c0054;
    public static final int sim_import_list_entry=0x7f0c0055;
    public static final int sim_ndp=0x7f0c0056;
    public static final int sip_settings_ui=0x7f0c0057;
    public static final int support_simple_spinner_dropdown_item=0x7f0c0058;
    public static final int telephony_disallowed_preference_screen=0x7f0c0059;
    public static final int text_view_preference=0x7f0c005a;
    public static final int voicemail_change_pin=0x7f0c005b;
  }
  public static final class mipmap {
    public static final int ic_launcher=0x7f0d0000;
    public static final int ic_launcher_contacts=0x7f0d0001;
  }
  public static final class plurals {
    /**
     * ECM: Dialog box message for exiting from the notifications screen
     */
    public static final int alert_dialog_exit_ecm=0x7f0e0000;
    /**
     * ECM: Dialog box message without data restriction hint for exiting from the notifications screen
     */
    public static final int alert_dialog_exit_ecm_without_data_restriction_hint=0x7f0e0001;
    /**
     * ECM: Dialog box message for exiting from any other app
     */
    public static final int alert_dialog_not_avaialble_in_ecm=0x7f0e0002;
  }
  public static final class string {
    public static final int abc_action_bar_home_description=0x7f0f0000;
    public static final int abc_action_bar_up_description=0x7f0f0001;
    public static final int abc_action_menu_overflow_description=0x7f0f0002;
    public static final int abc_action_mode_done=0x7f0f0003;
    public static final int abc_activity_chooser_view_see_all=0x7f0f0004;
    public static final int abc_activitychooserview_choose_application=0x7f0f0005;
    public static final int abc_capital_off=0x7f0f0006;
    public static final int abc_capital_on=0x7f0f0007;
    public static final int abc_menu_alt_shortcut_label=0x7f0f0008;
    public static final int abc_menu_ctrl_shortcut_label=0x7f0f0009;
    public static final int abc_menu_delete_shortcut_label=0x7f0f000a;
    public static final int abc_menu_enter_shortcut_label=0x7f0f000b;
    public static final int abc_menu_function_shortcut_label=0x7f0f000c;
    public static final int abc_menu_meta_shortcut_label=0x7f0f000d;
    public static final int abc_menu_shift_shortcut_label=0x7f0f000e;
    public static final int abc_menu_space_shortcut_label=0x7f0f000f;
    public static final int abc_menu_sym_shortcut_label=0x7f0f0010;
    public static final int abc_prepend_shortcut_label=0x7f0f0011;
    public static final int abc_search_hint=0x7f0f0012;
    public static final int abc_searchview_description_clear=0x7f0f0013;
    public static final int abc_searchview_description_query=0x7f0f0014;
    public static final int abc_searchview_description_search=0x7f0f0015;
    public static final int abc_searchview_description_submit=0x7f0f0016;
    public static final int abc_searchview_description_voice=0x7f0f0017;
    public static final int abc_shareactionprovider_share_with=0x7f0f0018;
    public static final int abc_shareactionprovider_share_with_application=0x7f0f0019;
    public static final int abc_toolbar_collapse_description=0x7f0f001a;
    /**
     * Title for activity to control accessibility settings such as TTY mode and hearing aid
     * compatability. [CHAR LIMIT=40]
     */
    public static final int accessibility_settings_activity_title=0x7f0f001b;
    /**
     * Title of "Edit FDN Contact" screen for a new contact
     */
    public static final int add_fdn_contact=0x7f0f001c;
    /**
     * Title for the button to add a new sip account. [CHAR LIMIT=NONE]
     */
    public static final int add_sip_account=0x7f0f001d;
    /**
     * Button label on the "Missing voicemail number" dialog
     */
    public static final int add_vm_number_str=0x7f0f001e;
    /**
     * "Edit FDN Contact" screen: status message displayed in a popup (toast)
     */
    public static final int adding_fdn_contact=0x7f0f001f;
    /**
     * CDMA Call settings screen, setting option name
     */
    public static final int additional_cdma_call_settings=0x7f0f0020;
    /**
     * GSM Call settings screen, setting option name
     */
    public static final int additional_gsm_call_settings=0x7f0f0021;
    /**
     * GSM Call settings screen, setting option name, with label identifying the SIM the settings are for.
     */
    public static final int additional_gsm_call_settings_with_label=0x7f0f0022;
    public static final int administrative_disable=0x7f0f0023;
    public static final int administrative_enable=0x7f0f0024;
    /**
     * Mobile network settings screen, Advanced button to show more items when clicked [CHAR LIMIT=50]
     */
    public static final int advanced_options_title=0x7f0f0025;
    /**
     * Text of the advanced settings section. [CHAR LIMIT=NONE]
     */
    public static final int advanced_settings=0x7f0f0026;
    public static final int advanced_settings_container=0x7f0f0027;
    /**
     * Hint to hide the advanced settings section. [CHAR LIMIT=NONE]
     */
    public static final int advanced_settings_hide=0x7f0f0028;
    /**
     * Hint to show the advanced settings section. [CHAR LIMIT=NONE]
     */
    public static final int advanced_settings_show=0x7f0f0029;
    public static final int advertisements_disable=0x7f0f002a;
    public static final int advertisements_enable=0x7f0f002b;
    /**
     * Title of the alert dialog. [CHAR LIMIT=NONE]
     */
    public static final int alert_dialog_close=0x7f0f002c;
    /**
     * ECM: ECM exit dialog choice
     */
    public static final int alert_dialog_dismiss=0x7f0f002d;
    /**
     * ECM: Dialog box message while in emergency call
     */
    public static final int alert_dialog_in_ecm_call=0x7f0f002e;
    /**
     * ECM: ECM exit dialog choice
     */
    public static final int alert_dialog_no=0x7f0f002f;
    /**
     * Title of the button to show in a alert dialog. [CHAR LIMIT=NONE]
     */
    public static final int alert_dialog_ok=0x7f0f0030;
    /**
     * ECM: ECM exit dialog choice
     */
    public static final int alert_dialog_yes=0x7f0f0031;
    /**
     * Text in an alert dialog telling the user that all input fields can not be left blank. [CHAR LIMIT=NONE]
     */
    public static final int all_empty_alert=0x7f0f0032;
    /**
     * Available networks, toast when user selects automatic selection
     */
    public static final int already_auto=0x7f0f0033;
    /**
     * Text for description of ambulance calling type
     */
    public static final int ambulance_type_description=0x7f0f0034;
    /**
     * Mobile network settings screen, setting option name
     */
    public static final int apn_settings=0x7f0f0035;
    public static final int atr_disable=0x7f0f0036;
    public static final int atr_enable=0x7f0f0037;
    /**
     * "Audio mode" popup menu: Item label to select the bluetooth headset [CHAR LIMIT=25]
     */
    public static final int audio_mode_bluetooth=0x7f0f0038;
    /**
     * "Audio mode" popup menu: Item label to select the handset earpiece [CHAR LIMIT=25]
     */
    public static final int audio_mode_earpiece=0x7f0f0039;
    /**
     * "Audio mode" popup menu: Item label to select the speakerphone [CHAR LIMIT=25]
     */
    public static final int audio_mode_speaker=0x7f0f003a;
    /**
     * "Audio mode" popup menu: Item label to select the wired headset [CHAR LIMIT=25]
     */
    public static final int audio_mode_wired_headset=0x7f0f003b;
    public static final int auth_username=0x7f0f003c;
    /**
     * Help text of the auth_username field. [CHAR LIMIT=NONE]
     */
    public static final int auth_username_summary=0x7f0f003d;
    /**
     * Text of the username used in authentication. [CHAR LIMIT=NONE]
     */
    public static final int auth_username_title=0x7f0f003e;
    public static final int auto_retry_mode_summary=0x7f0f003f;
    public static final int auto_retry_mode_title=0x7f0f0040;
    /**
     * SIM PIN screen: error message
     */
    public static final int badPin=0x7f0f0041;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int badPin2=0x7f0f0042;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int badPuk2=0x7f0f0043;
    /**
     * Band mode screen. Status message when unsuccessful.
     */
    public static final int band_mode_failed=0x7f0f0044;
    /**
     * Band mode screen.  Loading message.
     */
    public static final int band_mode_loading=0x7f0f0045;
    /**
     * Band mode screen. Button caption to set the bandmode.
     */
    public static final int band_mode_set=0x7f0f0046;
    /**
     * Band mode screen. Statusm essage when successful.
     */
    public static final int band_mode_succeeded=0x7f0f0047;
    /**
     * Band mode screen.  Title of activity.
     */
    public static final int band_mode_title=0x7f0f0048;
    public static final int bf_news_settings=0x7f0f0049;
    /**
     * In-call screen: call ended because it was transferred to another device.
     */
    public static final int callEnded_pulled=0x7f0f004a;
    /**
     * In-call screen: error message shown when the user attempts to place a call, but the network
     * does not have enough resources (e.g. it is busy) and the call cannot be placed.
     */
    public static final int callFailed_NetworkBusy=0x7f0f004b;
    /**
     * In-call screen: error message shown when the user attempts to place a call, but the network
     * does not have enough resources (e.g. it is congested) and the call cannot be placed.
     */
    public static final int callFailed_NetworkCongested=0x7f0f004c;
    /**
     * In-call screen: error message shown when the user has attempted to place a new outgoing
     * call, but there is already a call in dialing state.
     */
    public static final int callFailed_already_dialing=0x7f0f004d;
    /**
     * In-call screen: error message shown when the user has attempted to place a new outgoing
     * call while there is already a call in ringing state.
     */
    public static final int callFailed_already_ringing=0x7f0f004e;
    /**
     * In-call screen: error message shown when the user attempts to place a call, but calling has
     * been disabled using a debug property.
     */
    public static final int callFailed_calling_disabled=0x7f0f004f;
    /**
     * In-call screen: call failure reason (call denied because call barring is on)
     */
    public static final int callFailed_cb_enabled=0x7f0f0050;
    /**
     * Call failure reason: SIM card and roaming capabilities have already been activated. [CHAR LIMIT=NONE]
     */
    public static final int callFailed_cdma_activation=0x7f0f0051;
    /**
     * Call failure reason: Cannot add a call because there are already too many active calls.
     */
    public static final int callFailed_cdma_call_limit=0x7f0f0052;
    /**
     * In-call screen: call failure reason (network congestion)
     */
    public static final int callFailed_congestion=0x7f0f0053;
    /**
     * In-call screen: call ended because the user disabled data on their device
     */
    public static final int callFailed_data_disabled=0x7f0f0054;
    /**
     * In-call screen: call ended because the cellular data limit has been reached (intended for label in in-call screen)
     */
    public static final int callFailed_data_limit_reached=0x7f0f0055;
    /**
     * In-call screen: call ended because the cellular data limit has been reached (suitable for alert dialog)
     */
    public static final int callFailed_data_limit_reached_description=0x7f0f0056;
    /**
     * In-call screen: call failure reason (call modified to call with modified data)
     */
    public static final int callFailed_dialToDial=0x7f0f0057;
    /**
     * In-call screen: call failure reason (call modified to call with modified data)
     */
    public static final int callFailed_dialToDialVideo=0x7f0f0058;
    /**
     * In-call screen: call failure reason (call modified to SS request)
     */
    public static final int callFailed_dialToSs=0x7f0f0059;
    /**
     * In-call screen: call failure reason (call modified to USSD request)
     */
    public static final int callFailed_dialToUssd=0x7f0f005a;
    /**
     * In-call screen: call failure reason (call modified to call with modified data)
     */
    public static final int callFailed_dialVideoToDial=0x7f0f005b;
    /**
     * In-call screen: call failure reason (call modified to call with modified data)
     */
    public static final int callFailed_dialVideoToDialVideo=0x7f0f005c;
    /**
     * In-call screen: call failure reason (call modified to call with modified data)
     */
    public static final int callFailed_dialVideoToSs=0x7f0f005d;
    /**
     * In-call screen: call failure reason (call modified to call with modified data)
     */
    public static final int callFailed_dialVideoToUssd=0x7f0f005e;
    /**
     * In-call screen: call failure reason (call denied because domain specific access control is on)
     */
    public static final int callFailed_dsac_restricted=0x7f0f005f;
    /**
     * In-call screen: call failure reason (Emergency call denied because domain specific access control is on)
     */
    public static final int callFailed_dsac_restricted_emergency=0x7f0f0060;
    /**
     * In-call screen: call failure reason (Normal call denied because domain specific access control is on)
     */
    public static final int callFailed_dsac_restricted_normal=0x7f0f0061;
    /**
     * In-call screen: error message shown when the user attempts to place an emergency call
     * over wifi calling (WFC), but emergency services are not available in the current
     * location.
     */
    public static final int callFailed_emergency_call_over_wfc_not_available=0x7f0f0062;
    /**
     * In-call screen: call failure reason (call denied because of current FDN setting)
     */
    public static final int callFailed_fdn_only=0x7f0f0063;
    /**
     * Call failure reason: If the network does not accept the emergency call request, e.g., because IMEI was used as identification and this capability is not supported
     */
    public static final int callFailed_imei_not_accepted=0x7f0f0064;
    /**
     * In-call screen: call failure reason (incorrect username or password)
     */
    public static final int callFailed_invalid_credentials=0x7f0f0065;
    /**
     * In-call screen: call failure reason (GSM ACM limit exceeded)
     */
    public static final int callFailed_limitExceeded=0x7f0f0066;
    /**
     * Call failure reason displayed when the user's call is ended due to a low battery. This
     * message is shown when an in-progress call is ended due to the battery being low.
     */
    public static final int callFailed_low_battery=0x7f0f0067;
    /**
     * In-call screen: call ended because the user has reached the maximum number of calls on their current devices and other devices.
     */
    public static final int callFailed_maximum_reached=0x7f0f0068;
    /**
     * In-call screen: call failure reason (no signal)
     */
    public static final int callFailed_noSignal=0x7f0f0069;
    /**
     * In-call screen: call failure reason (peer unreachable)
     */
    public static final int callFailed_number_unreachable=0x7f0f006a;
    /**
     * In-call screen: error message shown when the user attempts to place a call, but the device
     * is currently in the process of being provisioned for service.  Provisioning is the process
     * by which a device confirms which services are available to the user by contacting the
     * mobile service provider.
     */
    public static final int callFailed_otasp_provisioning_in_process=0x7f0f006b;
    /**
     * In-call screen: call failure reason (out of service)
     */
    public static final int callFailed_outOfService=0x7f0f006c;
    /**
     * In-call screen: call failure reason (calling from out of network is not allowed)
     */
    public static final int callFailed_out_of_network=0x7f0f006d;
    /**
     * In-call screen: call failure reason (radio is off)
     */
    public static final int callFailed_powerOff=0x7f0f006e;
    /**
     * In-call screen: call failure reason (server error)
     */
    public static final int callFailed_server_error=0x7f0f006f;
    /**
     * In-call screen: call failure reason (server unreachable)
     */
    public static final int callFailed_server_unreachable=0x7f0f0070;
    /**
     * In-call screen: call failure reason (SIM error)
     */
    public static final int callFailed_simError=0x7f0f0071;
    /**
     * In-call screen: call failure reason (client timed out)
     */
    public static final int callFailed_timedOut=0x7f0f0072;
    /**
     * In-call screen: error message shown when the user attempts to place a call, but calling has
     * been disabled using a debug property.
     */
    public static final int callFailed_too_many_calls=0x7f0f0073;
    /**
     * In-call screen: call failure reason (Dialed number doesn't exist)
     */
    public static final int callFailed_unobtainable_number=0x7f0f0074;
    /**
     * In-call screen: call failure reason (busy)
     */
    public static final int callFailed_userBusy=0x7f0f0075;
    /**
     * In-call screen: call failed because you cannot make video calls when TTY is enabled.
     */
    public static final int callFailed_video_call_tty_enabled=0x7f0f0076;
    /**
     * In-call screen: error message shown when the user attempts to place a call over wifi
     * calling (WFC), but wifi calling is not available in the current location.
     */
    public static final int callFailed_wfc_service_not_available_in_this_location=0x7f0f0077;
    /**
     * Call failure reason displayed when an in-progress WIFI call fails due to a loss of WIFI
     * connectivity, or the WIFI signal has degraded to the point the call cannot continue.
     */
    public static final int callFailed_wifi_lost=0x7f0f0078;
    /**
     * Call barring settings screen, setting option name
     */
    public static final int call_barring_baic=0x7f0f0079;
    /**
     * Call barring settings screen, Block all incoming calls
     */
    public static final int call_barring_baic_disabled=0x7f0f007a;
    /**
     * Call barring settings screen, Disable blocking of all incoming calls
     */
    public static final int call_barring_baic_enabled=0x7f0f007b;
    /**
     * Call barring settings screen, setting option name
     */
    public static final int call_barring_baicr=0x7f0f007c;
    /**
     * Call barring settings screen, Block incoming international roaming
     */
    public static final int call_barring_baicr_disabled=0x7f0f007d;
    /**
     * Call barring settings screen, Disable blocking of all incoming international roaming
     */
    public static final int call_barring_baicr_enabled=0x7f0f007e;
    /**
     * Call barring settings screen, setting option name
     */
    public static final int call_barring_baoc=0x7f0f007f;
    /**
     * Call barring settings screen, Block all outgoing calls
     */
    public static final int call_barring_baoc_disabled=0x7f0f0080;
    /**
     * Call barring settings screen, Disable blocking of all outgoing calls
     */
    public static final int call_barring_baoc_enabled=0x7f0f0081;
    /**
     * Call barring settings screen, setting option name
     */
    public static final int call_barring_baoic=0x7f0f0082;
    /**
     * Call barring settings screen, Block outgoing international calls
     */
    public static final int call_barring_baoic_disabled=0x7f0f0083;
    /**
     * Call barring settings screen, Disable blocking of outgoing international calls
     */
    public static final int call_barring_baoic_enabled=0x7f0f0084;
    /**
     * Call barring settings screen, setting option name
     */
    public static final int call_barring_baoicr=0x7f0f0085;
    /**
     * Call barring settings screen, Block outgoing international roaming
     */
    public static final int call_barring_baoicr_disabled=0x7f0f0086;
    /**
     * Call barring settings screen, Disable blocking of outgoing international roaming
     */
    public static final int call_barring_baoicr_enabled=0x7f0f0087;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_change_pwd=0x7f0f0088;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_change_pwd_description=0x7f0f0089;
    /**
     * Call barring settings screen, not possible to change call barring password
     */
    public static final int call_barring_change_pwd_description_disabled=0x7f0f008a;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_change_pwd_success=0x7f0f008b;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_confirm_pwd=0x7f0f008c;
    /**
     * Call barring settings screen, setting option name
     */
    public static final int call_barring_deactivate_all=0x7f0f008d;
    /**
     * Call barring settings screen, setting summary text when BAAll check box is selected
     */
    public static final int call_barring_deactivate_all_description=0x7f0f008e;
    /**
     * Call barring settings screen, deactivate all successfully
     */
    public static final int call_barring_deactivate_success=0x7f0f008f;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_new_pwd=0x7f0f0090;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_old_pwd=0x7f0f0091;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_pwd_not_match=0x7f0f0092;
    /**
     * Call barring settings screen, change password
     */
    public static final int call_barring_right_pwd_number=0x7f0f0093;
    /**
     * Call barring settings screen, section heading
     */
    public static final int call_barring_settings=0x7f0f0094;
    /**
     * Mobile network settings screen, name for call settings category
     */
    public static final int call_category=0x7f0f0095;
    /**
     * Call forwarding settings screen, section heading
     */
    public static final int call_forwarding_settings=0x7f0f0096;
    /**
     * Call forwarding settings screen, section heading, with a label identifying the SIM the settings are for.
     */
    public static final int call_forwarding_settings_with_label=0x7f0f0097;
    /**
     * details of the message popped up when there is
     * bad call quality caused by bluetooth connection
     */
    public static final int call_quality_notification_bluetooth_details=0x7f0f0098;
    /**
     * name of the notification that pops up during
     * a phone call when there is bad call quality
     */
    public static final int call_quality_notification_name=0x7f0f0099;
    /**
     * Call settings screen title
     */
    public static final int call_settings=0x7f0f009a;
    /**
     * Toast in Call settings when asked to launch settings for a secondary user
     */
    public static final int call_settings_admin_user_only=0x7f0f009b;
    /**
     * The package name of the app which hosts the
     * {@link TelecomManager#ACTION_SHOW_CALL_SETTINGS} settings screen.
     */
    public static final int call_settings_package_name=0x7f0f009c;
    /**
     * String resource for the font-family to use for the call setting activity's title
     * Do not translate.
     */
    public static final int call_settings_title_font_family=0x7f0f009d;
    /**
     * Title of the "Call settings" settings screen, with a text label identifying which SIM the settings are for.
     */
    public static final int call_settings_with_label=0x7f0f009e;
    /**
     * Title displayed in the overlay when a call is placed using a 3rd party provider.
     * [CHAR LIMIT=40]
     */
    public static final int calling_via_template=0x7f0f009f;
    /**
     * Label for "cancel" button on the MMI dialog
     */
    public static final int cancel=0x7f0f00a0;
    /**
     * In-call screen: status label displayed briefly after a call ends
     */
    public static final int card_title_call_ended=0x7f0f00a1;
    /**
     * In-call screen: status label for a conference call
     */
    public static final int card_title_conf_call=0x7f0f00a2;
    /**
     * In-call screen: status label for a call in the "dialing" state
     */
    public static final int card_title_dialing=0x7f0f00a3;
    /**
     * In-call screen: status label for a call that's in the process of hanging up
     */
    public static final int card_title_hanging_up=0x7f0f00a4;
    /**
     * In-call screen: status label for a call that's in CDMA flash mode
     */
    public static final int card_title_in_call=0x7f0f00a5;
    /**
     * In-call screen: status label for an incoming call
     */
    public static final int card_title_incoming_call=0x7f0f00a6;
    /**
     * In-call screen: status label for call that's on hold
     */
    public static final int card_title_on_hold=0x7f0f00a7;
    /**
     * In-call screen: status label for a re-dialing call
     */
    public static final int card_title_redialing=0x7f0f00a8;
    /**
     * Title for carrier MMI message
     */
    public static final int carrier_mmi_msg_title=0x7f0f00a9;
    /**
     * Carrier Provisioning Info [CHAR LIMIT=NONE]
     */
    public static final int carrier_provisioning=0x7f0f00aa;
    /**
     * carrier settings menu
     */
    public static final int carrier_settings=0x7f0f00ab;
    /**
     * Mobile network settings screen, name of the option to manage carrier profiles on devices which support embedded carrier profiles
     */
    public static final int carrier_settings_euicc=0x7f0f00ac;
    /**
     * Mobile network settings screen, summary of the option to manage carrier profiles on devices which support embedded carrier profiles
     */
    public static final int carrier_settings_euicc_summary=0x7f0f00ad;
    public static final int carrier_settings_menu=0x7f0f00ae;
    /**
     * A menu item in "Mobile network settings" that allows the user to update the phone
     * with mobile operator specific settings. [CHAR LIMIT=25]
     */
    public static final int carrier_settings_title=0x7f0f00af;
    public static final int cb_sms_settings=0x7f0f00b0;
    /**
     * Cbrs enable disable flag. Only shown in diagnostic screen, so precise translation is not needed
     */
    public static final int cbrs_data_switch_string=0x7f0f00b1;
    /**
     * Preference title with which users can activate CDMA network [CHAR LIMIT=30]
     */
    public static final int cdma_activate_device=0x7f0f00b2;
    /**
     * Cdma Call waiting settings screen, setting option name
     */
    public static final int cdma_call_waiting=0x7f0f00b3;
    public static final int cdma_call_waiting_in_ims_off=0x7f0f00b4;
    public static final int cdma_call_waiting_in_ims_on=0x7f0f00b5;
    /**
     * Preference title for launching an account manager page for prepaid LTE [CHAR LIMIT=30]
     */
    public static final int cdma_lte_data_service=0x7f0f00b6;
    public static final int cdma_options=0x7f0f00b7;
    public static final int cdma_subscription_dialogtitle=0x7f0f00b8;
    public static final int cdma_subscription_summary=0x7f0f00b9;
    public static final int cdma_subscription_title=0x7f0f00ba;
    /**
     * System select settings screen title
     */
    public static final int cdma_system_select_dialogtitle=0x7f0f00bb;
    /**
     * Mobile network settings screen, setting summary text
     */
    public static final int cdma_system_select_summary=0x7f0f00bc;
    /**
     * Mobile network settings screen, setting option name
     */
    public static final int cdma_system_select_title=0x7f0f00bd;
    public static final int cell_bc_sms_disable=0x7f0f00be;
    public static final int cell_bc_sms_enable=0x7f0f00bf;
    /**
     * Cell Broadcast settings title.  [CHAR LIMIT=50]
     */
    public static final int cell_broadcast_settings=0x7f0f00c0;
    public static final int cell_broadcast_sms=0x7f0f00c1;
    /**
     * Button label which indicates the user wants to update a stored
     * phone number; used in several settings-related dialogs
     */
    public static final int change_num=0x7f0f00c2;
    /**
     * Title of "Change SIM PIN" screen
     */
    public static final int change_pin=0x7f0f00c3;
    /**
     * Call settings screen, setting option name
     */
    public static final int change_pin2=0x7f0f00c4;
    /**
     * The label for the cancel button in change voicemail PIN activity
     */
    public static final int change_pin_cancel_label=0x7f0f00c5;
    /**
     * The title for the confirm new pin step in change voicemail PIN activity
     */
    public static final int change_pin_confirm_pin_header=0x7f0f00c6;
    /**
     * The error message for th confirm new pin step in change voicemail PIN activity, if the pin doen't match the one previously entered
     */
    public static final int change_pin_confirm_pins_dont_match=0x7f0f00c7;
    /**
     * The label for the continue button in change voicemail PIN activity
     */
    public static final int change_pin_continue_label=0x7f0f00c8;
    /**
     * The title for the enter new pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_new_pin_header=0x7f0f00c9;
    /**
     * The hint for the enter new pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_new_pin_hint=0x7f0f00ca;
    /**
     * The title for the enter old pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_old_pin_header=0x7f0f00cb;
    /**
     * The hint for the enter old pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_old_pin_hint=0x7f0f00cc;
    /**
     * The label for the ok button in change voicemail PIN activity
     */
    public static final int change_pin_ok_label=0x7f0f00cd;
    /**
     * The toast to show after the voicemail PIN has been successfully changed
     */
    public static final int change_pin_succeeded=0x7f0f00ce;
    /**
     * The error message to show if the server reported an error while attempting to change the voicemail PIN
     */
    public static final int change_pin_system_error=0x7f0f00cf;
    /**
     * The title for the change voicemail PIN activity
     */
    public static final int change_pin_title=0x7f0f00d0;
    /**
     * Available networks screen, name of button when user wants to select network manually
     */
    public static final int choose_network_title=0x7f0f00d1;
    /**
     * In-call screen: call failure reason (Cause Number 68)
     */
    public static final int clh_callFailed_ACM_equal_to_or_greater_than_ACMmax_txt=0x7f0f00d2;
    /**
     * In-call screen: call failure reason (Cause Number 43)
     */
    public static final int clh_callFailed_access_information_discarded_txt=0x7f0f00d3;
    /**
     * In-call screen: call failure reason (Cause Number 57)
     */
    public static final int clh_callFailed_bearer_capability_not_authorized_txt=0x7f0f00d4;
    /**
     * In-call screen: call failure reason (Cause Number 58)
     */
    public static final int clh_callFailed_bearer_capability_not_presently_available_txt=0x7f0f00d5;
    /**
     * In-call screen: call failure reason (Cause Number 65)
     */
    public static final int clh_callFailed_bearer_service_not_implemented_txt=0x7f0f00d6;
    /**
     * In-call screen: call failure reason (Cause Number 21)
     */
    public static final int clh_callFailed_call_rejected_txt=0x7f0f00d7;
    /**
     * In-call screen: call failure reason (Cause Number 6)
     */
    public static final int clh_callFailed_channel_unacceptable_txt=0x7f0f00d8;
    /**
     * In-call screen: call failure reason (Cause Number 100)
     */
    public static final int clh_callFailed_conditional_IE_error_txt=0x7f0f00d9;
    /**
     * In-call screen: call failure reason (Cause Number 27)
     */
    public static final int clh_callFailed_destination_out_of_order_txt=0x7f0f00da;
    /**
     * In-call screen: call failure reason (Cause Number 29)
     */
    public static final int clh_callFailed_facility_rejected_txt=0x7f0f00db;
    /**
     * In-call screen: call failure reason (Cause Number 55)
     */
    public static final int clh_callFailed_incoming_calls_barred_within_the_CUG_txt=0x7f0f00dc;
    /**
     * In-call screen: call failure reason (Cause Number 88)
     */
    public static final int clh_callFailed_incompatible_destination_txt=0x7f0f00dd;
    /**
     * In-call screen: call failure reason (Cause Number 99)
     */
    public static final int clh_callFailed_information_element_non_existent_or_not_implemented_txt=0x7f0f00de;
    /**
     * In-call screen: call failure reason (Cause Number 127)
     */
    public static final int clh_callFailed_interworking_unspecified_txt=0x7f0f00df;
    /**
     * In-call screen: call failure reason (Cause Number 96)
     */
    public static final int clh_callFailed_invalid_mandatory_information_txt=0x7f0f00e0;
    /**
     * In-call screen: call failure reason (Cause Number 28)
     */
    public static final int clh_callFailed_invalid_number_format_txt=0x7f0f00e1;
    /**
     * In-call screen: call failure reason (Cause Number 81)
     */
    public static final int clh_callFailed_invalid_transaction_identifier_value_txt=0x7f0f00e2;
    /**
     * In-call screen: call failure reason (Cause Number 91)
     */
    public static final int clh_callFailed_invalid_transit_network_selection_txt=0x7f0f00e3;
    /**
     * In-call screen: call failure reason (Cause Number 101)
     */
    public static final int clh_callFailed_message_not_compatible_with_protocol_state_txt=0x7f0f00e4;
    /**
     * In-call screen: call failure reason (Cause Number 97)
     */
    public static final int clh_callFailed_message_type_non_existent_or_not_implemented_txt=0x7f0f00e5;
    /**
     * In-call screen: call failure reason (Cause Number 98)
     */
    public static final int clh_callFailed_message_type_not_compatible_with_protocol_state_txt=0x7f0f00e6;
    /**
     * In-call screen: call failure reason (Cause Number 38)
     */
    public static final int clh_callFailed_network_out_of_order_txt=0x7f0f00e7;
    /**
     * In-call screen: call failure reason (Cause Number 34)
     */
    public static final int clh_callFailed_no_circuit_available_txt=0x7f0f00e8;
    /**
     * In-call screen: call failure reason (Cause Number 3)
     */
    public static final int clh_callFailed_no_route_to_destination_txt=0x7f0f00e9;
    /**
     * In-call screen: call failure reason (Cause Number 18)
     */
    public static final int clh_callFailed_no_user_responding_txt=0x7f0f00ea;
    /**
     * In-call screen: call failure reason (Cause Number 26)
     */
    public static final int clh_callFailed_non_selected_user_clearing_txt=0x7f0f00eb;
    /**
     * In-call screen: call failure reason (Cause Number 16)
     */
    public static final int clh_callFailed_normal_call_clearing_txt=0x7f0f00ec;
    /**
     * In-call screen: call failure reason (Cause Number 31)
     */
    public static final int clh_callFailed_normal_unspecified_txt=0x7f0f00ed;
    /**
     * In-call screen: call failure reason (Cause Number 22)
     */
    public static final int clh_callFailed_number_changed_txt=0x7f0f00ee;
    /**
     * In-call screen: call failure reason (Cause Number 70)
     */
    public static final int clh_callFailed_only_restricted_digital_information_bearer_capability_is_available_txt=0x7f0f00ef;
    /**
     * In-call screen: call failure reason (Cause Number 8)
     */
    public static final int clh_callFailed_operator_determined_barring_txt=0x7f0f00f0;
    /**
     * In-call screen: call failure reason (radio is off)
     */
    public static final int clh_callFailed_powerOff_txt=0x7f0f00f1;
    /**
     * In-call screen: call failure reason (Cause Number 25)
     */
    public static final int clh_callFailed_pre_emption_txt=0x7f0f00f2;
    /**
     * In-call screen: call failure reason (Cause Number 111)
     */
    public static final int clh_callFailed_protocol_Error_unspecified_txt=0x7f0f00f3;
    /**
     * In-call screen: call failure reason (Cause Number 49)
     */
    public static final int clh_callFailed_quality_of_service_unavailable_txt=0x7f0f00f4;
    /**
     * In-call screen: call failure reason (Cause Number 102)
     */
    public static final int clh_callFailed_recovery_on_timer_expiry_txt=0x7f0f00f5;
    /**
     * In-call screen: call failure reason (Cause Number 44)
     */
    public static final int clh_callFailed_requested_circuit_txt=0x7f0f00f6;
    /**
     * In-call screen: call failure reason (Cause Number 69)
     */
    public static final int clh_callFailed_requested_facility_not_implemented_txt=0x7f0f00f7;
    /**
     * In-call screen: call failure reason (Cause Number 50)
     */
    public static final int clh_callFailed_requested_facility_not_subscribed_txt=0x7f0f00f8;
    /**
     * In-call screen: call failure reason (Cause Number 47)
     */
    public static final int clh_callFailed_resources_unavailable_unspecified_txt=0x7f0f00f9;
    /**
     * In-call screen: call failure reason (Cause Number 30)
     */
    public static final int clh_callFailed_response_to_STATUS_ENQUIRY_txt=0x7f0f00fa;
    /**
     * In-call screen: call failure reason (Cause Number 95)
     */
    public static final int clh_callFailed_semantically_incorrect_message_txt=0x7f0f00fb;
    /**
     * In-call screen: call failure reason (Cause Number 63)
     */
    public static final int clh_callFailed_service_or_option_not_available_unspecified_txt=0x7f0f00fc;
    /**
     * In-call screen: call failure reason (Cause Number 79)
     */
    public static final int clh_callFailed_service_or_option_not_implemented_unspecified_txt=0x7f0f00fd;
    /**
     * In-call screen: call failure reason (SIM error)
     */
    public static final int clh_callFailed_simError_txt=0x7f0f00fe;
    /**
     * In-call screen: call failure reason (Cause Number 42)
     */
    public static final int clh_callFailed_switching_equipment_congestion_txt=0x7f0f00ff;
    /**
     * In-call screen: call failure reason (Cause Number 41)
     */
    public static final int clh_callFailed_temporary_failure_txt=0x7f0f0100;
    /**
     * In-call screen: call failure reason (Cause Number 1)
     */
    public static final int clh_callFailed_unassigned_number_txt=0x7f0f0101;
    /**
     * In-call screen: call failure reason (Cause Number 19)
     */
    public static final int clh_callFailed_user_alerting_txt=0x7f0f0102;
    /**
     * In-call screen: call failure reason (Cause Number 17)
     */
    public static final int clh_callFailed_user_busy_txt=0x7f0f0103;
    /**
     * In-call screen: call failure reason (Cause Number 87)
     */
    public static final int clh_callFailed_user_not_member_of_CUG_txt=0x7f0f0104;
    /**
     * In-call screen: status label displayed briefly after a call ends
     */
    public static final int clh_card_title_call_ended_txt=0x7f0f0105;
    /**
     * In-call screen: call failure message displayed in an error dialog
     */
    public static final int clh_incall_error_out_of_service_txt=0x7f0f0106;
    /**
     * Button label used to dismiss the "Call settings error" dialog
     */
    public static final int close_dialog=0x7f0f0107;
    /**
     * Title of the button to show in a alert dialog. [CHAR LIMIT=NONE]
     */
    public static final int close_profile=0x7f0f0108;
    /**
     * Disables dialing "*228" (OTASP provisioning) on CDMA carriers where it is not supported or
     * is potentially harmful by locking the SIM to 3G.
     */
    public static final int config_disable_cdma_activation_code=0x7f0f0109;
    /**
     * String indicating the package name of the device GbaService implementation.
     */
    public static final int config_gba_package=0x7f0f010a;
    /**
     * String indicating the package name of the device ImsService implementation for MMTEL.
     */
    public static final int config_ims_mmtel_package=0x7f0f010b;
    /**
     * String indicating the package name of the device ImsService implementation for RCS.
     */
    public static final int config_ims_rcs_package=0x7f0f010c;
    /**
     * Class name for the SIM unlock dialog.[DO NOT TRANSLATE]
     */
    public static final int config_simUnlockUiClass=0x7f0f010d;
    /**
     * Package name for the SIM unlock dialog.[DO NOT TRANSLATE]
     */
    public static final int config_simUnlockUiPackage=0x7f0f010e;
    /**
     * Configuration setting for world mode Format is <true;GID if any to be checked>
     */
    public static final int config_world_mode=0x7f0f010f;
    /**
     * SIM PIN2 screen: label for PIN entry widget
     */
    public static final int confirmPin2Label=0x7f0f0110;
    /**
     * SIM PIN screen: label for PIN entry widget
     */
    public static final int confirmPinLabel=0x7f0f0111;
    /**
     * Available networks screen, toast when unable to connect to a network temporarily
     */
    public static final int connect_later=0x7f0f0112;
    /**
     * Built-in label for the default connection service setting.
     */
    public static final int connection_service_default_label=0x7f0f0113;
    /**
     * Use this as a default to describe the contact photo; currently for screen readers through accessibility.
     */
    public static final int contactPhoto=0x7f0f0114;
    public static final int copy=0x7f0f0115;
    /**
     * Mobile network settings screen, setting summary text when check box is not selected (explains what selecting it would do) [CHAR LIMITS=40]
     */
    public static final int data_enable_summary=0x7f0f0116;
    /**
     * Mobile network settings screen, data enabling checkbox name
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     * no translation found for enhanced_4g_lte_mode_sumary_variant:2 (6356974241850241718)
     */
    public static final int data_enabled=0x7f0f0117;
    /**
     * Message to show when user trying to turn off mobile data, in single sim mode [CHAR LIMIT=100]
     */
    public static final int data_usage_disable_mobile=0x7f0f0118;
    /**
     * Summary about how much data has been used in a date range [CHAR LIMIT=100]
     */
    public static final int data_usage_template=0x7f0f0119;
    /**
     * Mobile network settings screen, data usage setting check box name
     */
    public static final int data_usage_title=0x7f0f011a;
    /**
     * Default title for carrier MMI message
     */
    public static final int default_carrier_mmi_msg_title=0x7f0f011b;
    /**
     * The string used to describe a notification if it is the default one in the system. For
     * example, if the user selects the default notification, it will appear as something like
     * Default sound(Capella) in the notification summary.
     * [CHAR LIMIT=40]
     */
    public static final int default_notification_description=0x7f0f011c;
    /**
     * Default sip server/proxy port number.
     */
    public static final int default_port=0x7f0f011d;
    /**
     * Initial status of the domain address preference is '<Not set>'. [CHAR LIMIT=NONE]
     */
    public static final int default_preference_summary_domain_address=0x7f0f011e;
    /**
     * Initial status of the password preference is '<Not set>'. [CHAR LIMIT=NONE]
     */
    public static final int default_preference_summary_password=0x7f0f011f;
    /**
     * Initial status of the username preference is '<Not set>'. [CHAR LIMIT=NONE]
     */
    public static final int default_preference_summary_username=0x7f0f0120;
    /**
     * Default sip server/proxy transport protocol.
     */
    public static final int default_transport=0x7f0f0121;
    /**
     * Title of "Delete FDN Contact" screen
     */
    public static final int delete_fdn_contact=0x7f0f0122;
    /**
     * "Delete FDN Contact" screen: status message displayed in a popup (toast)
     */
    public static final int deleting_fdn_contact=0x7f0f0123;
    /**
     * Format for concatenating multiple emergency type descriptions. The separator may differ in
     * different locales, for example arabic comma "،" is used in some countries. Some languages
     * may use full-width separator without leading or trailing spaces, eg. Ideographic comma "、"
     * in Chinese and Japanese.
     */
    public static final int description_concat_format=0x7f0f0124;
    /**
     * String describing the Delete/Backspace ImageButton.
     * Used by AccessibilityService to announce the purpose of the button.
     */
    public static final int description_delete_button=0x7f0f0125;
    /**
     * String describing the Dial ImageButton
     * Used by AccessibilityService to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_dial_button=0x7f0f0126;
    /**
     * String describing the back button in the dialpad.
     */
    public static final int description_dialpad_back=0x7f0f0127;
    /**
     * String describing the Dialpad ImageButton
     * Used by AccessibilityService to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_dialpad_button=0x7f0f0128;
    /**
     * String describing the overflow menu button in the dialpad.
     */
    public static final int description_dialpad_overflow=0x7f0f0129;
    /**
     * String describing the button used to add a plus (+) symbol to the dialpad
     */
    public static final int description_image_button_plus=0x7f0f012a;
    /**
     * String describing the Voicemail ImageButton.
     * Used by AccessibilityService to announce the purpose of the button.
     */
    public static final int description_voicemail_button=0x7f0f012b;
    /**
     * Call failure reason displayed when the user's outgoing call cannot be placed due to a low
     * battery.
     */
    public static final int dialFailed_low_battery=0x7f0f012c;
    /**
     * Message displayed over top of the emergency dialer dialpad indicating to the user that
     * emergency calling is not currently available.
     */
    public static final int dial_emergency_calling_not_available=0x7f0f012d;
    /**
     * Emergency dialer: message displayed in an error dialog
     */
    public static final int dial_emergency_empty_error=0x7f0f012e;
    /**
     * Emergency dialer: message displayed in an error dialog
     */
    public static final int dial_emergency_error=0x7f0f012f;
    /**
     * Displayed in the text entry box in the dialer when in landscape mode to guide the user
     * to dial using the physical keyboard
     */
    public static final int dialerKeyboardHintText=0x7f0f0130;
    /**
     * Class name for the default main Dialer activity [DO NOT TRANSLATE]
     */
    public static final int dialer_default_class=0x7f0f0131;
    /**
     * Mobile network settings screen, title for alert dialog
     */
    public static final int dialog_alert_title=0x7f0f0132;
    /**
     * Do not translate.
     */
    public static final int dialpad_0_letters=0x7f0f0133;
    /**
     * Do not translate.
     */
    public static final int dialpad_1_letters=0x7f0f0134;
    /**
     * Do not translate.
     */
    public static final int dialpad_2_letters=0x7f0f0135;
    /**
     * Do not translate.
     */
    public static final int dialpad_3_letters=0x7f0f0136;
    /**
     * Do not translate.
     */
    public static final int dialpad_4_letters=0x7f0f0137;
    /**
     * Do not translate.
     */
    public static final int dialpad_5_letters=0x7f0f0138;
    /**
     * Do not translate.
     */
    public static final int dialpad_6_letters=0x7f0f0139;
    /**
     * Do not translate.
     */
    public static final int dialpad_7_letters=0x7f0f013a;
    /**
     * Do not translate.
     */
    public static final int dialpad_8_letters=0x7f0f013b;
    /**
     * Do not translate.
     */
    public static final int dialpad_9_letters=0x7f0f013c;
    /**
     * Do not translate.
     */
    public static final int dialpad_pound_letters=0x7f0f013d;
    /**
     * Do not translate.
     */
    public static final int dialpad_pound_number=0x7f0f013e;
    /**
     * Do not translate.
     */
    public static final int dialpad_star_letters=0x7f0f013f;
    /**
     * Do not translate.
     */
    public static final int dialpad_star_number=0x7f0f0140;
    /**
     * Button label used in several settings-related dialogs
     */
    public static final int disable=0x7f0f0141;
    public static final int disable_cdma_cw=0x7f0f0142;
    /**
     * Error message displayed after failing to disable forwarding calls when the phone is busy
     */
    public static final int disable_cfb_forbidden=0x7f0f0143;
    /**
     * Error message displayed after failing to disable forwarding calls when the phone is unreachable
     */
    public static final int disable_cfnrc_forbidden=0x7f0f0144;
    /**
     * Error message displayed after failing to disable forwarding calls when the phone does not answer
     */
    public static final int disable_cfnry_forbidden=0x7f0f0145;
    /**
     * Call settings screen, setting option name
     */
    public static final int disable_fdn=0x7f0f0146;
    /**
     * Call settings screen, setting option name when FDN is disabled
     */
    public static final int disable_fdn_ok=0x7f0f0147;
    /**
     * SIM PIN screen: status message displayed in a popup (toast)
     */
    public static final int disable_pin_ok=0x7f0f0148;
    /**
     * Title of "Disable SIM PIN" screen
     */
    public static final int disable_sim_pin=0x7f0f0149;
    public static final int display_name=0x7f0f014a;
    /**
     * Default value for the display-name preference summary. [CHAR LIMIT=NONE]
     */
    public static final int display_name_summary=0x7f0f014b;
    /**
     * Text of the display name preference. [CHAR LIMIT=NONE]
     */
    public static final int display_name_title=0x7f0f014c;
    /**
     * Do not translate the following strings. Used for the preference keys
     */
    public static final int domain_address=0x7f0f014d;
    /**
     * Text of the domain address preference. [CHAR LIMIT=NONE]
     */
    public static final int domain_address_title=0x7f0f014e;
    /**
     * SIM PIN screen: button label
     */
    public static final int doneButton=0x7f0f014f;
    /**
     * UI debug setting: Enable/Disable DSDS [CHAR LIMIT=none]
     */
    public static final int dsds_dialog_cancel=0x7f0f0150;
    /**
     * UI debug setting: Enable/Disable DSDS [CHAR LIMIT=none]
     */
    public static final int dsds_dialog_confirm=0x7f0f0151;
    /**
     * UI debug setting: Enable/Disable DSDS [CHAR LIMIT=none]
     */
    public static final int dsds_dialog_message=0x7f0f0152;
    /**
     * UI debug setting: Enable/Disable DSDS [CHAR LIMIT=none]
     */
    public static final int dsds_dialog_title=0x7f0f0153;
    /**
     * Dsds enable/disable flag. Only shown in diagnostic screen, so precise translation is not needed, [CHAR LIMIT=none]
     */
    public static final int dsds_switch_string=0x7f0f0154;
    /**
     * Summary for the DTMF Tones options displayed in Call Settings
     */
    public static final int dtmf_tones_summary=0x7f0f0155;
    /**
     * Title for the DTMF Tones options displayed in Call Settings
     */
    public static final int dtmf_tones_title=0x7f0f0156;
    /**
     * EAB provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int eab_provisioned_switch_string=0x7f0f0157;
    /**
     * Emergency Callback Mode (ECM)
     */
    public static final int ecm_exit_dialog=0x7f0f0158;
    /**
     * Title of "Edit FDN Contact" screen when editing an already-existing contact
     */
    public static final int edit_fdn_contact=0x7f0f0159;
    /**
     * Screen title for Emergency Dialer UI
     */
    public static final int emergencyDialerIconLabel=0x7f0f015a;
    /**
     * Hint appearing below a selected action on the emergency dialer telling user to tap again to execute the action [CHAR LIMIT=NONE]
     */
    public static final int emergency_action_launch_hint=0x7f0f015b;
    public static final int emergency_broadcast_disable=0x7f0f015c;
    public static final int emergency_broadcast_enable=0x7f0f015d;
    /**
     * Emergency dialer: Hint of selected emergency shortcut button
     */
    public static final int emergency_call_shortcut_hint=0x7f0f015e;
    /**
     * Status message for the "radio enable" UI for emergency calls
     */
    public static final int emergency_enable_radio_dialog_message=0x7f0f015f;
    /**
     * Status message for the "radio enable" UI for emergency calls
     */
    public static final int emergency_enable_radio_dialog_retry=0x7f0f0160;
    /**
     * Dialog title for the "radio enable" UI for emergency calls
     */
    public static final int emergency_enable_radio_dialog_title=0x7f0f0161;
    /**
     * Hint for confirm the emergency information
     */
    public static final int emergency_information_confirm_hint=0x7f0f0162;
    /**
     * Hint for the button of emergency information
     */
    public static final int emergency_information_hint=0x7f0f0163;
    /**
     * Hint for the owner of emergency information
     */
    public static final int emergency_information_owner_hint=0x7f0f0164;
    /**
     * Text in an alert dialog telling the user that some input field (name of which is also part of the strings being translated above) is required and can not be left blank. [CHAR LIMIT=NONE]
     */
    public static final int empty_alert=0x7f0f0165;
    /**
     * Available networks screen, text when no networks are found
     */
    public static final int empty_networks_list=0x7f0f0166;
    /**
     * Button label used in several settings-related dialogs
     */
    public static final int enable=0x7f0f0167;
    public static final int enable_cdma_call_waiting_setting=0x7f0f0168;
    public static final int enable_cdma_cw=0x7f0f0169;
    public static final int enable_disable_administrative=0x7f0f016a;
    public static final int enable_disable_advertisements=0x7f0f016b;
    public static final int enable_disable_atr=0x7f0f016c;
    public static final int enable_disable_cell_bc_sms=0x7f0f016d;
    public static final int enable_disable_emergency_broadcast=0x7f0f016e;
    public static final int enable_disable_eo=0x7f0f016f;
    public static final int enable_disable_international=0x7f0f0170;
    public static final int enable_disable_lafs=0x7f0f0171;
    public static final int enable_disable_local=0x7f0f0172;
    public static final int enable_disable_local_weather=0x7f0f0173;
    public static final int enable_disable_lodgings=0x7f0f0174;
    public static final int enable_disable_maintenance=0x7f0f0175;
    public static final int enable_disable_mhh=0x7f0f0176;
    public static final int enable_disable_multi_category=0x7f0f0177;
    public static final int enable_disable_national=0x7f0f0178;
    public static final int enable_disable_regional=0x7f0f0179;
    public static final int enable_disable_restaurants=0x7f0f017a;
    public static final int enable_disable_retail_directory=0x7f0f017b;
    public static final int enable_disable_stock_quotes=0x7f0f017c;
    public static final int enable_disable_technology_news=0x7f0f017d;
    /**
     * Call settings screen, setting option name
     */
    public static final int enable_fdn=0x7f0f017e;
    /**
     * Call settings screen, setting option name when FDN is enabled
     */
    public static final int enable_fdn_ok=0x7f0f017f;
    /**
     * SIM PIN screen: progress message displayed while enabling
     */
    public static final int enable_in_progress=0x7f0f0180;
    /**
     * Title of "Enable/disable SIM PIN" screen
     */
    public static final int enable_pin=0x7f0f0181;
    /**
     * SIM PIN screen: status message displayed in a popup (toast)
     */
    public static final int enable_pin_ok=0x7f0f0182;
    /**
     * Title of "Enable SIM PIN" screen
     */
    public static final int enable_sim_pin=0x7f0f0183;
    /**
     * Label for close button in dialog, for video calling setting.
     */
    public static final int enable_video_calling_dialog_close=0x7f0f0184;
    /**
     * Message for dialog shown when the user tries to turn on video calling but enhanced 4G LTE
     * is disabled. They have to turn on Enhanced 4G LTE capability in network settings first.
     */
    public static final int enable_video_calling_dialog_msg=0x7f0f0185;
    /**
     * Label for action button in dialog which opens mobile network settings, for video calling
     * setting.
     */
    public static final int enable_video_calling_dialog_settings=0x7f0f0186;
    /**
     * Label for enabling video calling.
     */
    public static final int enable_video_calling_title=0x7f0f0187;
    /**
     * Mobile network 4G summary [CHAR LIMIT=80]
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     * no translation found for enhanced_4g_lte_mode_title_variant:0 (7240155150166394308)
     */
    public static final int enhanced_4g_lte_mode_summary=0x7f0f0188;
    public static final int enhanced_4g_lte_mode_summary_o2=0x7f0f0189;
    /**
     * Mobile network 4G title [CHAR LIMIT=30]
     */
    public static final int enhanced_4g_lte_mode_title=0x7f0f018a;
    /**
     * Toast string displayed to user if the input in MMI dialog is < 1 or > 160
     */
    public static final int enter_input=0x7f0f018b;
    /**
     * SIM PIN2 screen: label for PIN entry widget
     */
    public static final int enter_pin2_text=0x7f0f018c;
    /**
     * SIM PIN screen: label for PIN entry widget
     */
    public static final int enter_pin_text=0x7f0f018d;
    public static final int entertainment_news_settings=0x7f0f018e;
    public static final int eo_disable=0x7f0f018f;
    public static final int eo_enable=0x7f0f0190;
    /**
     * Title of the alert dialog displayed if an error occurs while updating Call settings
     */
    public static final int error_updating_title=0x7f0f0191;
    /**
     * Status message displayed in the "Call settings error" dialog
     */
    public static final int exception_error=0x7f0f0192;
    public static final int expand_button_title=0x7f0f0193;
    /**
     * Message shown when a single contact could not be imported from SIM card
     */
    public static final int failedToImportSingleContactMsg=0x7f0f0194;
    /**
     * Used in FakePhoneActivity test code.  DO NOT TRANSLATE.
     */
    public static final int fake_phone_activity_infoText_text=0x7f0f0195;
    /**
     * Used in FakePhoneActivity test code.  DO NOT TRANSLATE.
     */
    public static final int fake_phone_activity_phoneNumber_text=0x7f0f0196;
    /**
     * Used in FakePhoneActivity test code.  DO NOT TRANSLATE.
     */
    public static final int fake_phone_activity_placeCall_text=0x7f0f0197;
    /**
     * Label for "Fixed Dialing Number" settings in call settings.
     */
    public static final int fdn=0x7f0f0198;
    /**
     * Title of FDN list screen
     */
    public static final int fdnListLabel=0x7f0f0199;
    /**
     * Call settings screen, preference item label
     */
    public static final int fdn_activation=0x7f0f019a;
    /**
     * Status message displayed in the "Call settings error" dialog when operation fails due to FDN
     * [CHAR LIMIT=NONE]
     */
    public static final int fdn_check_failure=0x7f0f019b;
    /**
     * "Edit FDN Contact" screen: status message displayed in a popup (toast)
     */
    public static final int fdn_contact_added=0x7f0f019c;
    /**
     * "Delete FDN Contact" screen: status message displayed in a popup (toast)
     */
    public static final int fdn_contact_deleted=0x7f0f019d;
    /**
     * "Edit FDN Contact" screen: status message displayed in a popup (toast)
     */
    public static final int fdn_contact_updated=0x7f0f019e;
    /**
     * Call settings setting option name  when FDN is disabled
     */
    public static final int fdn_disabled=0x7f0f019f;
    /**
     * SIM PIN2 screen: error message displayed in a dialog
     */
    public static final int fdn_enable_puk2_requested=0x7f0f01a0;
    /**
     * Call settings setting option name when FDN is enabled
     */
    public static final int fdn_enabled=0x7f0f01a1;
    /**
     * FDN settings: error message displayed in a popup (toast)
     */
    public static final int fdn_failed=0x7f0f01a2;
    /**
     * FDN settings: error message displayed in a popup (toast)
     */
    public static final int fdn_invalid_number=0x7f0f01a3;
    /**
     * Title for settings screen to manage Fixed Dialing Number contacts, with a label to identify
     * the SIM the settings apply to.
     */
    public static final int fdn_list_with_label=0x7f0f01a4;
    /**
     * Title for "Fixed Dialing Number" settings, with a label to identify the SIM the settings
     * apply to.
     */
    public static final int fdn_with_label=0x7f0f01a5;
    /**
     * Text for description of fire calling type
     */
    public static final int fire_type_description=0x7f0f01a6;
    public static final int forbidden_network=0x7f0f01a7;
    /**
     * Call settings screen, displayed when vm provider supplied forwarding number change fails
     */
    public static final int fw_change_failed=0x7f0f01a8;
    /**
     * Call settings screen, displayed when forwarding number read fails
     */
    public static final int fw_get_in_vm_failed=0x7f0f01a9;
    public static final int general_news_settings=0x7f0f01aa;
    /**
     * Label for PIN2 entry screen
     */
    public static final int get_pin2=0x7f0f01ab;
    /**
     * Use this to describe the separate conference call button; currently for screen readers through accessibility.
     */
    public static final int goPrivate=0x7f0f01ac;
    public static final int gsm_umts_options=0x7f0f01ad;
    public static final int hac_mode_summary=0x7f0f01ae;
    /**
     * Hearing aid settings
     */
    public static final int hac_mode_title=0x7f0f01af;
    /**
     * Menu item label in SIM Contacts: Import all contact entries from the SIM card
     */
    public static final int importAllSimEntries=0x7f0f01b0;
    /**
     * Menu item label in SIM Contacts: Import a single contact entry from the SIM card
     */
    public static final int importSimEntry=0x7f0f01b1;
    /**
     * Import a single contact entry from contacts to the SIM card
     */
    public static final int importToFDNfromContacts=0x7f0f01b2;
    /**
     * SIM Contacts: status message displayed while importing card
     */
    public static final int importingSimContacts=0x7f0f01b3;
    /**
     * In-call screen: call failure message displayed in an error dialog
     */
    public static final int incall_error_call_failed=0x7f0f01b4;
    /**
     * In-call screen: call failure message displayed in an error dialog
     */
    public static final int incall_error_cannot_add_call=0x7f0f01b5;
    /**
     * In-call screen: call failure message displayed when the user attempts to make a non-emergency call while the phone is in emergency callback mode.
     */
    public static final int incall_error_ecm_emergency_only=0x7f0f01b6;
    /**
     * In-call screen: call failure message displayed in an error dialog.
     * This string is currently unused (see comments in InCallScreen.java.)
     */
    public static final int incall_error_emergency_only=0x7f0f01b7;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_missing_voicemail_number=0x7f0f01b8;
    /**
     * In-call screen: call failure message displayed in an error dialog
     */
    public static final int incall_error_no_phone_number_supplied=0x7f0f01b9;
    /**
     * In-call screen: call failure message displayed in an error dialog
     */
    public static final int incall_error_out_of_service=0x7f0f01ba;
    /**
     * In-call screen: call failure message displayed in an error dialog
     */
    public static final int incall_error_out_of_service_wfc=0x7f0f01bb;
    /**
     * In-call screen: call failure message displayed in an error dialog. [CHAR_LIMIT=NONE]
     */
    public static final int incall_error_power_off=0x7f0f01bc;
    /**
     * In-call screen: call failure message displayed in an error dialog when radio off due to thermal mitigation. [CHAR_LIMIT=NONE]
     */
    public static final int incall_error_power_off_thermal=0x7f0f01bd;
    /**
     * In-call screen: call failure message displayed in an error dialog when in airplane mode, WFC is enabled, not wifi-only, and not connected to wireless networks. [CHAR_LIMIT=NONE]
     */
    public static final int incall_error_power_off_wfc=0x7f0f01be;
    /**
     * In-call screen: call failure message displayed in an error dialog when the user is connected to a wireless network, but wifi calling is turned off. [CHAR_LIMIT=NONE]
     */
    public static final int incall_error_promote_wfc=0x7f0f01bf;
    /**
     * In-call screen: message displayed in an error dialog.  Shown when the user attempts to
     * merge calls to form a conference call, but there was an error which prevented this from
     * occurring.
     */
    public static final int incall_error_supp_service_conference=0x7f0f01c0;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_hangup=0x7f0f01c1;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_hold=0x7f0f01c2;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_reject=0x7f0f01c3;
    /**
     * In-call screen: message displayed in an error dialog when the user attempts to resume a
     * call, and the system encountered an error which prevented the call from being resumed.
     */
    public static final int incall_error_supp_service_resume=0x7f0f01c4;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_separate=0x7f0f01c5;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_switch=0x7f0f01c6;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_transfer=0x7f0f01c7;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_unknown=0x7f0f01c8;
    /**
     * In-call screen: call failure message displayed in an error dialog when WFC is enabled, is wifi-only, and not connected to a wireless network. [CHAR_LIMIT=NONE]
     */
    public static final int incall_error_wfc_only_no_wireless_network=0x7f0f01c9;
    public static final int international_disable=0x7f0f01ca;
    public static final int international_enable=0x7f0f01cb;
    /**
     * SIM PIN screen: error message when PIN is too short or too long
     */
    public static final int invalidPin=0x7f0f01cc;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int invalidPin2=0x7f0f01cd;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int invalidPuk2=0x7f0f01ce;
    /**
     * Keywords used to search the carrier menu for managing carrier profiles on devices which support embedded carrier profiles. eSIM/eUICC is embedded SIM card used to store this data.
     */
    public static final int keywords_carrier_settings_euicc=0x7f0f01cf;
    /**
     * CDMA Call settings screen, setting option name
     */
    public static final int labelCDMAMore=0x7f0f01d0;
    /**
     * Call settings screen, setting option name
     */
    public static final int labelCF=0x7f0f01d1;
    /**
     * Call forwarding settings screen, setting option name
     */
    public static final int labelCFB=0x7f0f01d2;
    /**
     * Call forwarding settings screen, setting option name
     */
    public static final int labelCFNRc=0x7f0f01d3;
    /**
     * Call forwarding settings screen, setting option name
     */
    public static final int labelCFNRy=0x7f0f01d4;
    /**
     * Call forwarding settings screen, setting option name
     */
    public static final int labelCFU=0x7f0f01d5;
    /**
     * Additional call settings screen, setting check box name
     */
    public static final int labelCW=0x7f0f01d6;
    /**
     * Call settings screen, setting option name
     */
    public static final int labelCallBarring=0x7f0f01d7;
    /**
     * Call settings screen, setting option name
     */
    public static final int labelCallerId=0x7f0f01d8;
    /**
     * CDMA Call settings screen, setting option name with label indicating the SIM the settings
     * are applied to. [CHAR LIMIT=40]
     */
    public static final int labelCdmaMore_with_label=0x7f0f01d9;
    /**
     * GSM Call settings screen, setting option name. [CHAR LIMIT=40]
     */
    public static final int labelGSMMore=0x7f0f01da;
    /**
     * GSM Call settings screen, setting option name with label indicating the SIM the settings
     * are applied to. [CHAR LIMIT=40]
     */
    public static final int labelGsmMore_with_label=0x7f0f01db;
    /**
     * Call setting screen, nework service setting name
     */
    public static final int labelNwService=0x7f0f01dc;
    /**
     * Available networks screen title/heading
     */
    public static final int label_available=0x7f0f01dd;
    /**
     * Label text for PIN entry widget on SIM Network Depersonalization panel
     */
    public static final int label_ndp=0x7f0f01de;
    /**
     * Label text for Operator displayName on SIM Network Depersonalization panel
     */
    public static final int label_phoneid=0x7f0f01df;
    /**
     * SIM PIN2 screen: label for PUK2 entry widget
     */
    public static final int label_puk2_code=0x7f0f01e0;
    public static final int lafs_disable=0x7f0f01e1;
    public static final int lafs_enable=0x7f0f01e2;
    /**
     * Notification message for limited sim function during dual sim [CHAR LIMIT=80]
     */
    public static final int limited_sim_function_notification_message=0x7f0f01e3;
    /**
     * Notification title for limited sim function during dual sim
     */
    public static final int limited_sim_function_notification_title=0x7f0f01e4;
    /**
     * Notification message for limited sim function during dual sim [CHAR LIMIT=80]
     */
    public static final int limited_sim_function_with_phone_num_notification_message=0x7f0f01e5;
    public static final int list_language_dtitle=0x7f0f01e6;
    public static final int list_language_summary=0x7f0f01e7;
    public static final int list_language_title=0x7f0f01e8;
    /**
     * Mobile network settings screen, toast when searching for available networks
     */
    public static final int load_networks_progress=0x7f0f01e9;
    public static final int local_disable=0x7f0f01ea;
    public static final int local_enable=0x7f0f01eb;
    public static final int local_weather_disable=0x7f0f01ec;
    public static final int local_weather_enable=0x7f0f01ed;
    public static final int lodgings_disable=0x7f0f01ee;
    public static final int lodgings_enable=0x7f0f01ef;
    public static final int maintenance_disable=0x7f0f01f0;
    public static final int maintenance_enable=0x7f0f01f1;
    /**
     * Title for Make and receive calls category.
     */
    public static final int make_and_receive_calls=0x7f0f01f2;
    /**
     * Label for "Manage conference call" panel [CHAR LIMIT=40]
     */
    public static final int manageConferenceLabel=0x7f0f01f3;
    /**
     * Call settings screen, button label that takes you to the Fixed Dialing Number management screen
     */
    public static final int manage_fdn_list=0x7f0f01f4;
    /**
     * Available networks screen, summary when button disallowed due to permanent automatic mode
     */
    public static final int manual_mode_disallowed_summary=0x7f0f01f5;
    /**
     * FDN list screen: menu item label
     */
    public static final int menu_add=0x7f0f01f6;
    /**
     * FDN list screen: menu item label
     */
    public static final int menu_delete=0x7f0f01f7;
    /**
     * FDN list screen: menu item label
     */
    public static final int menu_dial=0x7f0f01f8;
    /**
     * FDN list screen: menu item label
     */
    public static final int menu_edit=0x7f0f01f9;
    /**
     * Call forwarding dialog box, text field label
     */
    public static final int messageCFB=0x7f0f01fa;
    /**
     * Call forwarding dialog box, text field label
     */
    public static final int messageCFNRc=0x7f0f01fb;
    /**
     * Call forwarding dialog box, text field label
     */
    public static final int messageCFNRy=0x7f0f01fc;
    /**
     * Call forwarding dialog box, text field label
     */
    public static final int messageCFU=0x7f0f01fd;
    /**
     * Call forwarding dialog box, text field label
     */
    public static final int messageCallBarring=0x7f0f01fe;
    /**
     * String used in place of a message that could not be properly decoded (e.g. bad base64
     * data was received.) [CHAR LIMIT=none]
     */
    public static final int message_decode_error=0x7f0f01ff;
    public static final int mhh_disable=0x7f0f0200;
    public static final int mhh_enable=0x7f0f0201;
    /**
     * SIM PIN screen: error message
     */
    public static final int mismatchPin=0x7f0f0202;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int mismatchPin2=0x7f0f0203;
    /**
     * Dialog label when an MMI code is canceled
     */
    public static final int mmiCancelled=0x7f0f0204;
    public static final int mmiStarted=0x7f0f0205;
    /**
     * activate data plan dialogue button for adding data, which will take users out of the setting page
     */
    public static final int mobile_data_activate_button=0x7f0f0206;
    /**
     * activate data plan dialogue button for cancel further actions
     */
    public static final int mobile_data_activate_cancel_button=0x7f0f0207;
    /**
     * activate data plan dialogue message for either prepaid or roaming
     */
    public static final int mobile_data_activate_diag_message=0x7f0f0208;
    /**
     * activate data plan dialogue title for either prepaid or roaming
     */
    public static final int mobile_data_activate_diag_title=0x7f0f0209;
    /**
     * The setting option footer for adding data either prepaid or roaming
     */
    public static final int mobile_data_activate_footer=0x7f0f020a;
    /**
     * The setting option name for activate prepaid mobile data plan
     */
    public static final int mobile_data_activate_prepaid=0x7f0f020b;
    /**
     * The setting option summary for activate prepaid mobile data plan
     */
    public static final int mobile_data_activate_prepaid_summary=0x7f0f020c;
    /**
     * The setting option name for for adding roaming data plan
     */
    public static final int mobile_data_activate_roaming_plan=0x7f0f020d;
    /**
     * The setting option summary for adding roaming data plan
     */
    public static final int mobile_data_activate_roaming_plan_summary=0x7f0f020e;
    /**
     * Mobile network settings screen, title of Mobile data switch preference
     */
    public static final int mobile_data_settings_summary=0x7f0f020f;
    /**
     * Mobile network settings screen, title of Mobile Data switch preference
     */
    public static final int mobile_data_settings_title=0x7f0f0210;
    /**
     * The subtext for mobile data setting. shown if not in roaming and prepaid sim has run out of balance
     */
    public static final int mobile_data_status_no_plan_subtext=0x7f0f0211;
    /**
     * The subtext for mobile data setting. shown if roaming settings turned off
     */
    public static final int mobile_data_status_roaming_turned_off_subtext=0x7f0f0212;
    /**
     * The subtext for mobile data setting. shown if roaming settings turned on
     */
    public static final int mobile_data_status_roaming_turned_on_subtext=0x7f0f0213;
    /**
     * The subtext for mobile data setting. shown if currently roaming, have roaming settings turned and have an active roaming data plan
     */
    public static final int mobile_data_status_roaming_with_plan_subtext=0x7f0f0214;
    /**
     * The subtext for mobile data setting. shown if currently roaming, have roaming settings turned on but don't have a roaming data plan
     */
    public static final int mobile_data_status_roaming_without_plan_subtext=0x7f0f0215;
    /**
     * Class name for the mobile network settings activity [DO NOT TRANSLATE]
     */
    public static final int mobile_network_settings_class=0x7f0f0216;
    /**
     * Error message for users that aren't allowed to modify Mobile Network settings [CHAR LIMIT=none]
     */
    public static final int mobile_network_settings_not_available=0x7f0f0217;
    /**
     * Package name for the mobile network settings [DO NOT TRANSLATE]
     */
    public static final int mobile_network_settings_package=0x7f0f0218;
    public static final int multi_category_disable=0x7f0f0219;
    public static final int multi_category_enable=0x7f0f021a;
    /**
     * "Edit FDN Contact" screen: Label for the "name" text field
     */
    public static final int name=0x7f0f021b;
    public static final int national_disable=0x7f0f021c;
    public static final int national_enable=0x7f0f021d;
    public static final int network_1x=0x7f0f021e;
    public static final int network_2G=0x7f0f021f;
    public static final int network_3G=0x7f0f0220;
    public static final int network_4G=0x7f0f0221;
    public static final int network_4G_pure=0x7f0f0222;
    public static final int network_5G=0x7f0f0223;
    /**
     * Available networks screen, text when network connected
     */
    public static final int network_connected=0x7f0f0224;
    /**
     * Available networks screen, text when a network is connecting
     */
    public static final int network_connecting=0x7f0f0225;
    /**
     * Available networks screen, text when a network cannot be connected
     */
    public static final int network_could_not_connect=0x7f0f0226;
    /**
     * Available networks screen, text when no networks connected
     */
    public static final int network_disconnected=0x7f0f0227;
    /**
     * Title for the dialog used to display a network error message to the user
     */
    public static final int network_error_message=0x7f0f0228;
    public static final int network_global=0x7f0f0229;
    /**
     * Title for the dialog used to display CDMA DisplayInfo
     */
    public static final int network_info_message=0x7f0f022a;
    public static final int network_lte=0x7f0f022b;
    public static final int network_lte_pure=0x7f0f022c;
    /**
     * Mobile network settings screen, name for network operator category
     */
    public static final int network_operator_category=0x7f0f022d;
    /**
     * Available networks screen, toast when an error is encountered when searching for networks
     */
    public static final int network_query_error=0x7f0f022e;
    public static final int network_recommended=0x7f0f022f;
    /**
     * Available networks screen, name of button when user wants to select network manually
     */
    public static final int network_select_title=0x7f0f0230;
    /**
     * Mobile network settings screen title/heading
     */
    public static final int network_settings_title=0x7f0f0231;
    /**
     * SIM PIN2 screen: label for PIN entry widget
     */
    public static final int newPin2Label=0x7f0f0232;
    /**
     * SIM PIN screen: label for PIN entry widget
     */
    public static final int newPinLabel=0x7f0f0233;
    /**
     * Call settings screen, Set voicemail number dialog text
     */
    public static final int no_change=0x7f0f0234;
    /**
     * Message of the alert dialog to notify user that there is no Internet connectivity. [CHAR LIMIT=NONE]
     */
    public static final int no_internet_available=0x7f0f0235;
    public static final int no_rtt_when_roaming=0x7f0f0236;
    /**
     * Title of the "Missing voicemail number" dialog
     */
    public static final int no_vm_number=0x7f0f0237;
    /**
     * Body text of the "Missing voicemail number" dialog
     */
    public static final int no_vm_number_msg=0x7f0f0238;
    /**
     * Message of the alert dialog to notify user that SIP call is not supported. [CHAR LIMIT=NONE]
     */
    public static final int no_voip=0x7f0f0239;
    /**
     * Message of the alert dialog to notify user that there is no Wi-Fi connectivity. [CHAR LIMIT=NONE]
     */
    public static final int no_wifi_available=0x7f0f023a;
    /**
     * Showing that port number is out of range in an alert dialog. [CHAR LIMIT=NONE]
     */
    public static final int not_a_valid_port=0x7f0f023b;
    /**
     * Available networks screen, toast when SIM card isn't allowed on a network
     */
    public static final int not_allowed=0x7f0f023c;
    public static final int not_set=0x7f0f023d;
    /**
     * Dialog title to notify user that Voice calling is not supported
     * on this device. [CHAR LIMIT=40]
     */
    public static final int not_voice_capable=0x7f0f023e;
    /**
     * Telephony notification channel name for a channel containing SIP accounts removed
     * notificatios
     */
    public static final int notification_channel_sip_account=0x7f0f023f;
    /**
     * Label for the expanded "No service" notification item, including the
     * operator name set by user. No space after "network", appended in nonempty value.
     */
    public static final int notification_network_selection_text=0x7f0f0240;
    /**
     * Label for the "No service" notification item, when expanded.
     */
    public static final int notification_network_selection_title=0x7f0f0241;
    /**
     * Message displayed in the "Voicemail" notification item,
     * indicating that there's no voicemail number available
     */
    public static final int notification_voicemail_no_vm_number=0x7f0f0242;
    /**
     * Message displayed in the "Voicemail" notification item, allowing the user
     * to dial the indicated number.
     */
    public static final int notification_voicemail_text_format=0x7f0f0243;
    /**
     * Label for the "Voicemail" notification item, when expanded.
     */
    public static final int notification_voicemail_title=0x7f0f0244;
    /**
     * Label for the expanded "Voicemail" notification item,
     * including a count of messages.
     */
    public static final int notification_voicemail_title_count=0x7f0f0245;
    /**
     * "Edit FDN Contact" screen: Label for the "number" text field
     */
    public static final int number=0x7f0f0246;
    /**
     * Emergency dialer: Title of numerous emergency shortcut buttons
     */
    public static final int numerous_emergency_numbers_title=0x7f0f0247;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int oem_radio_info_label=0x7f0f0248;
    /**
     * Positive button label ("OK") used in several dialogs in the phone UI [CHAR LIMIT=10]
     */
    public static final int ok=0x7f0f0249;
    /**
     * SIM PIN2 screen: label for PIN entry widget
     */
    public static final int oldPin2Label=0x7f0f024a;
    /**
     * SIM PIN screen: label for PIN entry widget
     */
    public static final int oldPinLabel=0x7f0f024b;
    /**
     * In-call screen: status label for a call that's on hold
     */
    public static final int onHold=0x7f0f024c;
    /**
     * Text for the onscreen "Add call" button
     */
    public static final int onscreenAddCallText=0x7f0f024d;
    /**
     * Text for the onscreen "Audio" button that lets you switch
     * between speaker / bluetooth / earpiece [CHAR LIMIT=10]
     */
    public static final int onscreenAudioText=0x7f0f024e;
    /**
     * Text for the onscreen "End call" button
     */
    public static final int onscreenEndCallText=0x7f0f024f;
    /**
     * Text for the onscreen "Hold" button
     */
    public static final int onscreenHoldText=0x7f0f0250;
    /**
     * Text for the onscreen "Manage calls" button
     */
    public static final int onscreenManageCallsText=0x7f0f0251;
    /**
     * Text for the onscreen "Manage conference" button [CHAR LIMIT=20]
     */
    public static final int onscreenManageConferenceText=0x7f0f0252;
    /**
     * Text for the onscreen "Merge calls" button
     */
    public static final int onscreenMergeCallsText=0x7f0f0253;
    /**
     * Text for the onscreen "Mute" button
     */
    public static final int onscreenMuteText=0x7f0f0254;
    /**
     * Text for the onscreen "Show Dialpad" button
     */
    public static final int onscreenShowDialpadText=0x7f0f0255;
    /**
     * Text for the onscreen "Swap calls" button
     */
    public static final int onscreenSwapCallsText=0x7f0f0256;
    /**
     * Text for the onscreen "Video call" button used to change a voice call
     * to a video call. [CHAR LIMIT=10]
     */
    public static final int onscreenVideoCallText=0x7f0f0257;
    /**
     * Default value for the outbound-proxy-address preference summary. [CHAR LIMIT=NONE]
     */
    public static final int optional_summary=0x7f0f0258;
    /**
     * Button label within the OTA activation screen
     */
    public static final int ota_activate=0x7f0f0259;
    /**
     * Button label in OTA listen screen that cancels activation and goes to the previous screen
     */
    public static final int ota_call_end=0x7f0f025a;
    /**
     * String to display within the OTA Fail Notice dialog
     */
    public static final int ota_failure=0x7f0f025b;
    /**
     * Message shown during the hands free activation screen of the setup wizard.
     */
    public static final int ota_hfa_activation_dialog_message=0x7f0f025c;
    /**
     * Title shown during Hands Free Activation
     */
    public static final int ota_hfa_activation_title=0x7f0f025d;
    /**
     * Message displayed on the OTA "listening" screen. This message
     * needs to be kept at 2 lines or less to be sure that there's
     * enough room for the dialpad. [CHAR LIMIT=80]
     */
    public static final int ota_listen=0x7f0f025e;
    /**
     * Button label shown on OTA screens that have a next screen
     */
    public static final int ota_next=0x7f0f025f;
    /**
     * String to be displayed on OTA listen screen once user has selected the
     * correct option to begin provisioning
     */
    public static final int ota_progress=0x7f0f0260;
    /**
     * Message displayed in skip activation dialog
     */
    public static final int ota_skip_activation_dialog_message=0x7f0f0261;
    /**
     * Label shown on dialog button that allows the user to skip activation
     */
    public static final int ota_skip_activation_dialog_skip_label=0x7f0f0262;
    /**
     * Title of skip activation dialog
     */
    public static final int ota_skip_activation_dialog_title=0x7f0f0263;
    /**
     * String to display within the OTA SPC Fail Notice dialog
     */
    public static final int ota_spc_failure=0x7f0f0264;
    /**
     * Button label within the OTA listen screen
     */
    public static final int ota_speaker=0x7f0f0265;
    /**
     * String to be displayed on the OTA Fail/Success screen upon successful provisioning
     */
    public static final int ota_successful=0x7f0f0266;
    /**
     * Title shown on OTA screen
     */
    public static final int ota_title_activate=0x7f0f0267;
    /**
     * Title text shown when phone activation is successful
     */
    public static final int ota_title_activate_success=0x7f0f0268;
    /**
     * Title text shown on screen where activation fails
     */
    public static final int ota_title_problem_with_activation=0x7f0f0269;
    /**
     * Message displayed on the OTA activation screen.
     */
    public static final int ota_touch_activate=0x7f0f026a;
    /**
     * Button label shown on OTA error screen to allow the user to try again
     */
    public static final int ota_try_again=0x7f0f026b;
    /**
     * String to be displayed on the OTA Fail/Success screen upon unsuccessful provisioning
     */
    public static final int ota_unsuccessful=0x7f0f026c;
    /**
     * Title displayed above settings coming after voicemail in the call features screen
     */
    public static final int other_settings=0x7f0f026d;
    /**
     * Pane title of the Emergency Dialpad
     * Used by AccessibilityService to announce the purpose of the pane of emergency dialpad.
     * [CHAR LIMIT=NONE]
     */
    public static final int pane_title_emergency_dialpad=0x7f0f026e;
    public static final int password=0x7f0f026f;
    /**
     * Text of the password preference. [CHAR LIMIT=NONE]
     */
    public static final int password_title=0x7f0f0270;
    /**
     * In-call screen: button label on the "wait" prompt dialog in CDMA Mode
     */
    public static final int pause_prompt_no=0x7f0f0271;
    /**
     * In-call screen: body text of the dialog that appears when we encounter
     * the "PAUSE" character in a phone number to be dialed; this dialog gives
     * informative message to the user to show the sending numbers following the "Pause".
     */
    public static final int pause_prompt_str=0x7f0f0272;
    /**
     * In-call screen: button label on the "wait" prompt dialog in CDMA Mode
     */
    public static final int pause_prompt_yes=0x7f0f0273;
    /**
     * Incoming call screen, string when called from a pay phone
     */
    public static final int payphone=0x7f0f0274;
    /**
     * Official label of the phone app, as seen in "Manage Applications"
     * and other settings UIs.
     */
    public static final int phoneAppLabel=0x7f0f0275;
    /**
     * Activity label for the in-call UI
     */
    public static final int phoneIconLabel=0x7f0f0276;
    /**
     * Label for settings screen for phone accounts.
     */
    public static final int phone_accounts=0x7f0f0277;
    /**
     * Title for the button to add a new sip account. [CHAR LIMIT=NONE]
     */
    public static final int phone_accounts_add_sip_account=0x7f0f0278;
    /**
     * Label for heading that takes user to the list of calling accounts where they can enable
     * and disable all accounts.
     */
    public static final int phone_accounts_all_calling_accounts=0x7f0f0279;
    /**
     * Summary for all-calling-account setting indicating that is where the user goes to enable
     * and disable phone accounts.
     */
    public static final int phone_accounts_all_calling_accounts_summary=0x7f0f027a;
    /**
     * Entry in dialog to "ask first" for accounts when making a call
     */
    public static final int phone_accounts_ask_every_time=0x7f0f027b;
    /**
     * Label for invoking phone account selection screen
     */
    public static final int phone_accounts_choose_accounts=0x7f0f027c;
    /**
     * Description label for icon to configure a phone account's settings.
     */
    public static final int phone_accounts_configure_account_settings=0x7f0f027d;
    /**
     * Account label for when a SIM account has no service (i.e. airplane mode)
     */
    public static final int phone_accounts_default_account_label=0x7f0f027e;
    /**
     * Label for list item which opens a dialog to select the default outgoing account
     */
    public static final int phone_accounts_make_calls_with=0x7f0f027f;
    /**
     * Label for list item which opens a dialog to select the default outgoing account for SIP calls.
     */
    public static final int phone_accounts_make_sip_calls_with=0x7f0f0280;
    /**
     * Label for heading in the phone account selection screen
     */
    public static final int phone_accounts_selection_header=0x7f0f0281;
    /**
     * Label for heading of the per-account settings section in the phone accounts settings
     * screen.
     */
    public static final int phone_accounts_settings_header=0x7f0f0282;
    /**
     * ECM: Status bar notification message
     */
    public static final int phone_entered_ecm_text=0x7f0f0283;
    /**
     * ECM: Notification body
     */
    public static final int phone_in_ecm_call_notification_text=0x7f0f0284;
    /**
     * ECM: Notification body wihout data restriction hint
     */
    public static final int phone_in_ecm_call_notification_text_without_data_restriction_hint=0x7f0f0285;
    /**
     * ECM: Displays the time when ECM will end, Example: "No Data Connection until 10:45 AM"
     */
    public static final int phone_in_ecm_notification_complete_time=0x7f0f0286;
    /**
     * ECM: Displays the time when ECM will end without data restriction hint, Example: "Until 10:45 AM"
     */
    public static final int phone_in_ecm_notification_complete_time_without_data_restriction_hint=0x7f0f0287;
    /**
     * ECM: Notification title
     */
    public static final int phone_in_ecm_notification_title=0x7f0f0288;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int phone_index_label=0x7f0f0289;
    /**
     * The title of the activity to see phone info
     */
    public static final int phone_info_label=0x7f0f028a;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int pin2_attempts=0x7f0f028b;
    /**
     * SIM PIN2 screen: status message displayed in a popup (toast)
     */
    public static final int pin2_changed=0x7f0f028c;
    /**
     * SIM PIN screen: error message shown in dialog when there is a network or sim error.
     * [CHAR LIMIT=NONE]
     */
    public static final int pin2_error_exception=0x7f0f028d;
    /**
     * FDN settings: error message displayed in a popup (toast)
     */
    public static final int pin2_invalid=0x7f0f028e;
    /**
     * FDN settings: error message displayed in a popup (toast), when the entered
     * FDN number was inappropriate, OR, PIN2 the user entered was incorrect.
     * Because of API restriction, there's no way to determine which is the exact
     * cause of the failure.
     * [CHAR LIMIT=NONE]
     */
    public static final int pin2_or_fdn_invalid=0x7f0f028f;
    /**
     * SIM PIN screen: status message displayed in a popup (toast)
     */
    public static final int pin2_unblocked=0x7f0f0290;
    /**
     * SIM PIN screen: status message displayed in a popup (toast)
     */
    public static final int pin_changed=0x7f0f0291;
    /**
     * SIM PIN screen: error message displayed in a popup (toast)
     */
    public static final int pin_failed=0x7f0f0292;
    /**
     * Only handle pin entry when phone user is system
     */
    public static final int pin_puk_system_user_only=0x7f0f0293;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int ping_test_label=0x7f0f0294;
    /**
     * The package name for the platform carrier config app, bundled with system image.
     */
    public static final int platform_carrier_config_package=0x7f0f0295;
    /**
     * The package name for the platform number verification supplier app.
     */
    public static final int platform_number_verification_package=0x7f0f0296;
    /**
     * Text for description of police calling type
     */
    public static final int police_type_description=0x7f0f0297;
    public static final int port=0x7f0f0298;
    /**
     * Text of the sip server/proxy port number. [CHAR LIMIT=NONE]
     */
    public static final int port_title=0x7f0f0299;
    /**
     * Title for the category "ringtone", which is shown above ringtone and vibration
     * related settings.
     * [CHAR LIMIT=30]
     */
    public static final int preference_category_ringtone=0x7f0f029a;
    public static final int preference_copied=0x7f0f029b;
    /**
     * CDMA/EvDo/GSM/WCDMA
     */
    public static final int preferred_network_mode_cdma_evdo_gsm_wcdma_summary=0x7f0f029c;
    /**
     * CDMA / EvDo
     */
    public static final int preferred_network_mode_cdma_evdo_summary=0x7f0f029d;
    /**
     * CDMA only
     */
    public static final int preferred_network_mode_cdma_only_summary=0x7f0f029e;
    /**
     * CDMA
     */
    public static final int preferred_network_mode_cdma_summary=0x7f0f029f;
    public static final int preferred_network_mode_dialogtitle=0x7f0f02a0;
    /**
     * EvDo only
     */
    public static final int preferred_network_mode_evdo_only_summary=0x7f0f02a1;
    /**
     * Global
     */
    public static final int preferred_network_mode_global_summary=0x7f0f02a2;
    /**
     * GSM only
     */
    public static final int preferred_network_mode_gsm_only_summary=0x7f0f02a3;
    /**
     * GSM / WCDMA
     */
    public static final int preferred_network_mode_gsm_wcdma_summary=0x7f0f02a4;
    /**
     * LTE/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_cdma_evdo_gsm_wcdma_summary=0x7f0f02a5;
    /**
     * CDMA+LTE/EVDO
     */
    public static final int preferred_network_mode_lte_cdma_evdo_summary=0x7f0f02a6;
    /**
     * LTE / CDMA
     */
    public static final int preferred_network_mode_lte_cdma_summary=0x7f0f02a7;
    /**
     * LTE / GSM / UMTS
     */
    public static final int preferred_network_mode_lte_gsm_umts_summary=0x7f0f02a8;
    /**
     * GSM/WCDMA/LTE
     */
    public static final int preferred_network_mode_lte_gsm_wcdma_summary=0x7f0f02a9;
    /**
     * LTE
     */
    public static final int preferred_network_mode_lte_summary=0x7f0f02aa;
    /**
     * LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA
     */
    public static final int preferred_network_mode_lte_tdscdma_cdma_evdo_gsm_wcdma_summary=0x7f0f02ab;
    /**
     * LTE/GSM/TDSCDMA
     */
    public static final int preferred_network_mode_lte_tdscdma_gsm_summary=0x7f0f02ac;
    /**
     * LTE/TDSCDMA/GSM/WCDMA
     */
    public static final int preferred_network_mode_lte_tdscdma_gsm_wcdma_summary=0x7f0f02ad;
    /**
     * LTE / TDSCDMA
     */
    public static final int preferred_network_mode_lte_tdscdma_summary=0x7f0f02ae;
    /**
     * LTE/TDSCDMA/WCDMA
     */
    public static final int preferred_network_mode_lte_tdscdma_wcdma_summary=0x7f0f02af;
    /**
     * LTE / WCDMA
     */
    public static final int preferred_network_mode_lte_wcdma_summary=0x7f0f02b0;
    /**
     * NR/LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_cdma_evdo_gsm_wcdma_summary=0x7f0f02b1;
    /**
     * NR/LTE/CDMA/EvDo [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_cdma_evdo_summary=0x7f0f02b2;
    /**
     * NR/LTE/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_gsm_wcdma_summary=0x7f0f02b3;
    /**
     * NR / LTE [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_summary=0x7f0f02b4;
    /**
     * NR/LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_cdma_evdo_gsm_wcdma_summary=0x7f0f02b5;
    /**
     * NR/LTE/TDSCDMA/GSM [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_gsm_summary=0x7f0f02b6;
    /**
     * NR/LTE/TDSCDMA/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_gsm_wcdma_summary=0x7f0f02b7;
    /**
     * NR/LTE/TDSCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_summary=0x7f0f02b8;
    /**
     * NR/LTE/TDSCDMA/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_wcdma_summary=0x7f0f02b9;
    /**
     * NR/LTE/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_wcdma_summary=0x7f0f02ba;
    /**
     * NR only [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_only_summary=0x7f0f02bb;
    public static final int preferred_network_mode_summary=0x7f0f02bc;
    /**
     * TDSCDMA/CDMA/EvDo/GSM/WCDMA
     */
    public static final int preferred_network_mode_tdscdma_cdma_evdo_gsm_wcdma_summary=0x7f0f02bd;
    /**
     * TDSCDMA / GSM
     */
    public static final int preferred_network_mode_tdscdma_gsm_summary=0x7f0f02be;
    /**
     * TDSCDMA/GSM/WCDMA
     */
    public static final int preferred_network_mode_tdscdma_gsm_wcdma_summary=0x7f0f02bf;
    /**
     * TDSCDMA
     */
    public static final int preferred_network_mode_tdscdma_summary=0x7f0f02c0;
    /**
     * TDSCDMA / WCDMA
     */
    public static final int preferred_network_mode_tdscdma_wcdma_summary=0x7f0f02c1;
    public static final int preferred_network_mode_title=0x7f0f02c2;
    /**
     * WCDMA only
     */
    public static final int preferred_network_mode_wcdma_only_summary=0x7f0f02c3;
    /**
     * WCDMA preferred
     */
    public static final int preferred_network_mode_wcdma_perf_summary=0x7f0f02c4;
    /**
     * Incoming call screen, string when number hidden
     */
    public static final int private_num=0x7f0f02c5;
    /**
     * ECM: Progress text
     */
    public static final int progress_dialog_exiting_ecm=0x7f0f02c6;
    public static final int proxy_address=0x7f0f02c7;
    /**
     * Text of the outbound proxy address preference. [CHAR LIMIT=NONE]
     */
    public static final int proxy_address_title=0x7f0f02c8;
    /**
     * Label for PSTN connection service.
     */
    public static final int pstn_connection_service_label=0x7f0f02c9;
    /**
     * SIM PIN2 screen: error message
     */
    public static final int puk2_blocked=0x7f0f02ca;
    /**
     * SIM PIN2 screen: error message displayed in a dialog
     */
    public static final int puk2_locked=0x7f0f02cb;
    /**
     * SIM PIN2 screen: error message displayed in a dialog
     */
    public static final int puk2_requested=0x7f0f02cc;
    /**
     * SIM PIN screen: error message displayed in a dialog
     */
    public static final int puk_requested=0x7f0f02cd;
    /**
     * Status message displayed on SIM PIN unlock panel
     */
    public static final int puk_unlocked=0x7f0f02ce;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_cid=0x7f0f02cf;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_connected=0x7f0f02d0;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_connecting=0x7f0f02d1;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_disconnected=0x7f0f02d2;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_suspended=0x7f0f02d3;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_asu=0x7f0f02d4;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_bytes=0x7f0f02d5;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_dbm=0x7f0f02d6;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_packets=0x7f0f02d7;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_lac=0x7f0f02d8;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_getIMS=0x7f0f02d9;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_viewADN=0x7f0f02da;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_viewFDN=0x7f0f02db;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_viewSDN=0x7f0f02dc;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_phone_idle=0x7f0f02dd;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_phone_offhook=0x7f0f02de;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_phone_ringing=0x7f0f02df;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_roaming_in=0x7f0f02e0;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_roaming_not=0x7f0f02e1;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_emergency=0x7f0f02e2;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_in=0x7f0f02e3;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_off=0x7f0f02e4;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_out=0x7f0f02e5;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_unknown=0x7f0f02e6;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_band_mode_label=0x7f0f02e7;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_call_redirect_label=0x7f0f02e8;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_call_status_label=0x7f0f02e9;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_cell_info_refresh_rate=0x7f0f02ea;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_cellinfo_label=0x7f0f02eb;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_current_network_label=0x7f0f02ec;
    /**
     * Data Connection Disable. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int radio_info_data_connection_disable=0x7f0f02ed;
    /**
     * Data Connection Enable. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int radio_info_data_connection_enable=0x7f0f02ee;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_data_network_type_label=0x7f0f02ef;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_dcnr_restricted=0x7f0f02f0;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_dds=0x7f0f02f1;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_dl_kbps=0x7f0f02f2;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_endc_available=0x7f0f02f3;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_gprs_service_label=0x7f0f02f4;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_gsm_service_label=0x7f0f02f5;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_http_client_test=0x7f0f02f6;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_imei_label=0x7f0f02f7;
    /**
     * Phone Info screen. Ims Feature Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_feature_status_available=0x7f0f02f8;
    /**
     * Phone Info screen. Ims Feature status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_feature_status_unavailable=0x7f0f02f9;
    /**
     * Phone Info screen. IMS Registration.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status=0x7f0f02fa;
    /**
     * Phone Info screen. Ims Status - Unregistered.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status_not_registered=0x7f0f02fb;
    /**
     * Phone Info screen. IMS Status - Registered.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status_registered=0x7f0f02fc;
    /**
     * Phone Info screen. IMS Registration Title.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status_title=0x7f0f02fd;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, DO NOT TRANSLATE.
     */
    public static final int radio_info_imsi_label=0x7f0f02fe;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_message_waiting_label=0x7f0f02ff;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_network_slicing_config=0x7f0f0300;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_nr_available=0x7f0f0301;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_nr_frequency=0x7f0f0302;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_nr_state=0x7f0f0303;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_phone_number_label=0x7f0f0304;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_phy_chan_config=0x7f0f0305;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ping_hostname_v4=0x7f0f0306;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ping_hostname_v6=0x7f0f0307;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ppp_received_label=0x7f0f0308;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ppp_resets_label=0x7f0f0309;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ppp_sent_label=0x7f0f030a;
    /**
     * Title for controlling on/off for Mobile phone's radio power. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int radio_info_radio_power=0x7f0f030b;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_roaming_label=0x7f0f030c;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_set_perferred_label=0x7f0f030d;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_signal_strength_label=0x7f0f030e;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_smsc_label=0x7f0f030f;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_smsc_refresh_label=0x7f0f0310;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_smsc_update_label=0x7f0f0311;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_subid=0x7f0f0312;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_toggle_dns_check_label=0x7f0f0313;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ul_kbps=0x7f0f0314;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_voice_network_type_label=0x7f0f0315;
    /**
     * Toast message shown when user tries to turn on airplane mode while in an emergency call
     */
    public static final int radio_off_during_emergency_call=0x7f0f0316;
    /**
     * Status message displayed in the "Call settings error" dialog
     */
    public static final int radio_off_error=0x7f0f0317;
    /**
     * Toast in Call settings dialog while settings are being read
     */
    public static final int reading_settings=0x7f0f0318;
    public static final int regional_disable=0x7f0f0319;
    public static final int regional_enable=0x7f0f031a;
    public static final int register_automatically=0x7f0f031b;
    /**
     * Available networks screen, toast when registering on a specific network
     */
    public static final int register_on_network=0x7f0f031c;
    public static final int registration_cf_forbidden=0x7f0f031d;
    /**
     * Available networks screen, toast when registered on a specific network
     */
    public static final int registration_done=0x7f0f031e;
    /**
     * Text of SIP-call registration status, checking current registration status with SIP service [CHAR LIMIT=NONE]
     */
    public static final int registration_status_checking_status=0x7f0f031f;
    /**
     * Text of SIP-call registration status, currently we can receive calls on this account [CHAR LIMIT=NONE]
     */
    public static final int registration_status_done=0x7f0f0320;
    /**
     * Text of SIP-call registration status, registration failed with a reason; will try again later [CHAR LIMIT=NONE]
     */
    public static final int registration_status_failed_try_later=0x7f0f0321;
    /**
     * Text of SIP-call registration status, registration failed due to invalid credentials [CHAR LIMIT=NONE]
     */
    public static final int registration_status_invalid_credentials=0x7f0f0322;
    /**
     * Text of SIP-call registration status, no data connection [CHAR LIMIT=NONE]
     */
    public static final int registration_status_no_data=0x7f0f0323;
    /**
     * Text of SIP-call registration status, no Wi-Fi connection [CHAR LIMIT=NONE]
     */
    public static final int registration_status_no_wifi_data=0x7f0f0324;
    /**
     * Text of SIP-call registration status, currently not receiving calls on this account [CHAR LIMIT=NONE]
     */
    public static final int registration_status_not_receiving=0x7f0f0325;
    /**
     * Text of SIP-call registration status, registration process is not running due to some error [CHAR LIMIT=NONE]
     */
    public static final int registration_status_not_running=0x7f0f0326;
    /**
     * Text of SIP-call registration status, registering with SIP server in order to receive calls on this account [CHAR LIMIT=NONE]
     */
    public static final int registration_status_registering=0x7f0f0327;
    /**
     * Text of SIP-call registration status, registration failed due to unknown host exception [CHAR LIMIT=NONE]
     */
    public static final int registration_status_server_unreachable=0x7f0f0328;
    /**
     * Text of SIP-call registration status, still trying to register with SIP server [CHAR LIMIT=NONE]
     */
    public static final int registration_status_still_trying=0x7f0f0329;
    /**
     * Title for the button to remove a sip account. [CHAR LIMIT=NONE]
     */
    public static final int remove_sip_account=0x7f0f032a;
    /**
     * Toast message to indicate that the system is removing the account. [CHAR LIMIT=NONE]
     */
    public static final int removing_account=0x7f0f032b;
    /**
     * Status message displayed on SIM Network Depersonalization panel
     */
    public static final int requesting_unlock=0x7f0f032c;
    /**
     * Status message displayed in the "Call settings error" dialog
     */
    public static final int response_error=0x7f0f032d;
    public static final int restaurants_disable=0x7f0f032e;
    public static final int restaurants_enable=0x7f0f032f;
    public static final int retail_directory_disable=0x7f0f0330;
    public static final int retail_directory_enable=0x7f0f0331;
    /**
     * Toast in Call settings dialog while settings are being reverted
     */
    public static final int reverting_settings=0x7f0f0332;
    /**
     * Choice in the ringtone picker.  If chosen, there will be silence instead of a ringtone played.
     */
    public static final int ringtone_silent=0x7f0f0333;
    /**
     * If there is ever a ringtone set for some setting, but that ringtone can no longer be resolved, this is shown instead.  For example, if the ringtone was on a SD card and it had been removed, this would be shown for ringtones on that SD card.
     */
    public static final int ringtone_unknown=0x7f0f0334;
    /**
     * Mobile network settings screen, setting check box name
     */
    public static final int roaming=0x7f0f0335;
    /**
     * Mobile network settings screen, dialog message title when user selects the Data roaming check box
     */
    public static final int roaming_alert_title=0x7f0f0336;
    /**
     * Mobile network settings screen, message asking the user to check their pricing with their Carrier, when enabling Data roaming.
     */
    public static final int roaming_check_price_warning=0x7f0f0337;
    /**
     * Mobile network settings screen, setting summary text when check box is clear
     */
    public static final int roaming_disable=0x7f0f0338;
    /**
     * Mobile network settings screen, setting summary text when check box is selected
     */
    public static final int roaming_enable=0x7f0f0339;
    /**
     * Mobile network settings UI: notification message shown when you
     * are roaming and you have the "data roaming" feature turned on.
     */
    public static final int roaming_enabled_message=0x7f0f033a;
    /**
     * Roaming notification tile, notifying lost of roaming data connection
     */
    public static final int roaming_notification_title=0x7f0f033b;
    /**
     * Roaming notification tile, notifying continued roaming data connection
     */
    public static final int roaming_on_notification_title=0x7f0f033c;
    /**
     * Mobile network settings UI: notification message shown when you
     * lose data connectivity because you're roaming and you have the
     * "data roaming" feature turned off.
     */
    public static final int roaming_reenable_message=0x7f0f033d;
    /**
     * Mobile network settings screen, dialog message when user selects the Data roaming check box
     */
    public static final int roaming_warning=0x7f0f033e;
    public static final int rtt_mode_more_information=0x7f0f033f;
    public static final int rtt_mode_summary=0x7f0f0340;
    /**
     * RTT settings: used to turn on/off Real-Time Text, an accessibility feature similar to
     * TTY that allows users to send text over a phone call.
     */
    public static final int rtt_mode_title=0x7f0f0341;
    /**
     * "Edit FDN Contact" screen: Button label for "save" action
     */
    public static final int save=0x7f0f0342;
    /**
     * Toast message to indicate that the system is saving the account. [CHAR LIMIT=NONE]
     */
    public static final int saving_account=0x7f0f0343;
    public static final int search_menu_title=0x7f0f0344;
    /**
     * Use this to describe the select contact button in EditPhoneNumberPreference; currently for screen readers through accessibility.
     */
    public static final int selectContact=0x7f0f0345;
    /**
     * Available networks screen, name of switch button for whether to select network automatically
     */
    public static final int select_automatically=0x7f0f0346;
    /**
     * In-call screen: button label on the "wait" prompt dialog
     */
    public static final int send_button=0x7f0f0347;
    public static final int send_keepalive=0x7f0f0348;
    /**
     * Text of the keepalive preference. [CHAR LIMIT=NONE]
     */
    public static final int send_keepalive_title=0x7f0f0349;
    /**
     * Label for the "Network settings" screen in the Settings UI
     */
    public static final int settings_label=0x7f0f034a;
    /**
     * Appears when user tries to import contacts in SIM during airplane mode [CHAR LIMIT=NONE]
     */
    public static final int simContacts_airplaneMode=0x7f0f034b;
    /**
     * Call settings, string that appears on FDN contact list when there are no contacts on the SIM.
     */
    public static final int simContacts_empty=0x7f0f034c;
    /**
     * Placeholder text displayed while loading the list of SIM contacts
     */
    public static final int simContacts_emptyLoading=0x7f0f034d;
    /**
     * Call settings: title of the dialog that lets you select contacts from the SIM.
     */
    public static final int simContacts_title=0x7f0f034e;
    /**
     * Message confirming the user wishes to change the default data SIM from one to another.  [CHAR LIMIT=NONE]
     */
    public static final int sim_change_data_message=0x7f0f034f;
    /**
     * Title asking user if they wish to change the default sim for cellular data.  [CHAR LIMIT=30]
     */
    public static final int sim_change_data_title=0x7f0f0350;
    public static final int sim_description_default=0x7f0f0351;
    public static final int sim_description_emergency_calls=0x7f0f0352;
    /**
     * Strings used in Settings->Sim cards for each installed Sim.
     */
    public static final int sim_label_emergency_calls=0x7f0f0353;
    /**
     * Button label on SIM Network Depersonalization panel
     */
    public static final int sim_ndp_dismiss_text=0x7f0f0354;
    /**
     * Button label on SIM Network Depersonalization panel
     */
    public static final int sim_ndp_unlock_text=0x7f0f0355;
    /**
     * When a SIM preference hasn't been selected yet, this string is displayed as the pref summary until the user chooses a SIM subscription from the preference list [CHAR LIMIT=50]
     */
    public static final int sim_selection_required_pref=0x7f0f0356;
    /**
     * Message shown when a single contact is imported from SIM card
     */
    public static final int singleContactImportedMsg=0x7f0f0357;
    /**
     * Emergency dialer: Title of single emergency shortcut button
     */
    public static final int single_emergency_number_title=0x7f0f0358;
    /**
     * String of the category which lists all sip accounts. [CHAR LIMIT=NONE]
     */
    public static final int sip_account_list=0x7f0f0359;
    /**
     * Title displayed SIP account settings in the sip settings category. [CHAR LIMIT=NONE]
     */
    public static final int sip_accounts=0x7f0f035a;
    public static final int sip_accounts_removed_notification_action=0x7f0f035b;
    /**
     * Notification message for SIP accoutns removed
     */
    public static final int sip_accounts_removed_notification_message=0x7f0f035c;
    /**
     * Notification title for SIP accounts removed
     */
    public static final int sip_accounts_removed_notification_title=0x7f0f035d;
    /**
     * Title displayed SIP account settings in the sip settings category. [CHAR LIMIT=NONE]
     */
    public static final int sip_accounts_title=0x7f0f035e;
    public static final int sip_address_only=0x7f0f035f;
    /**
     * Do not translate the following strings. Used for the SIP call options. Need to be in-sync with Settings.System.SIP_ strings.
     */
    public static final int sip_always=0x7f0f0360;
    /**
     * Option for whether the SIP service should send keepalive messages. [CHAR LIMIT=40]
     */
    public static final int sip_always_send_keepalive=0x7f0f0361;
    /**
     * Item of the SIP call option dialog: for routing all outgoing calls via SIP. [CHAR LIMIT=NONE]
     */
    public static final int sip_call_options_entry_1=0x7f0f0362;
    /**
     * Item of the SIP call option dialog: for routing a outgoing call via SIP if the destination is a SIP URI. [CHAR LIMIT=NONE]
     */
    public static final int sip_call_options_entry_2=0x7f0f0363;
    /**
     * Title for the dialog of selecting the way we handle an outgoing call. [CHAR LIMIT=NONE]
     */
    public static final int sip_call_options_title=0x7f0f0364;
    /**
     * Item of the SIP call (Wi-Fi only) option dialog: for routing all outgoing calls via SIP. [CHAR LIMIT=NONE]
     */
    public static final int sip_call_options_wifi_only_entry_1=0x7f0f0365;
    /**
     * Title for the dialog of selecting the way we handle an outgoing call (Wi-Fi only). [CHAR LIMIT=NONE]
     */
    public static final int sip_call_options_wifi_only_title=0x7f0f0366;
    /**
     * Label for SIP connection service.
     */
    public static final int sip_connection_service_label=0x7f0f0367;
    /**
     * Title of the sip editor screen. [CHAR LIMIT=NONE]
     */
    public static final int sip_edit_new_title=0x7f0f0368;
    /**
     * Title of the sip editor screen. [CHAR LIMIT=NONE]
     */
    public static final int sip_edit_title=0x7f0f0369;
    /**
     * Menu item when the menu button is pressed in the sip account editor. [CHAR LIMIT=NONE]
     */
    public static final int sip_menu_discard=0x7f0f036a;
    /**
     * Menu item when the menu button is pressed in the sip account editor. [CHAR LIMIT=NONE]
     */
    public static final int sip_menu_save=0x7f0f036b;
    /**
     * Title displayed for the button of receiving incoming SIP calls flag. Enabled for receiving calls. [CHAR LIMIT=NONE]
     */
    public static final int sip_receive_calls=0x7f0f036c;
    /**
     * Help user to understand that it will require more battery usage if the 'receiving incoming call' is enabled. [CHAR LIMIT=NONE]
     */
    public static final int sip_receive_calls_summary=0x7f0f036d;
    /**
     * Title displayed SIP settings coming after other call settings in the call features screen. [CHAR LIMIT=NONE]
     */
    public static final int sip_settings=0x7f0f036e;
    /**
     * Option for whether the SIP service should send keepalive messages. [CHAR LIMIT=40]
     */
    public static final int sip_system_decide=0x7f0f036f;
    /**
     * Title for the button to launch smart forwarding which will configure call forwarding on both SIMs to forward the call to the other SIM number when its not reachable.
     */
    public static final int smart_forwarding_settings_menu=0x7f0f0370;
    /**
     * Description of smart forwarding setting.
     */
    public static final int smart_forwarding_settings_menu_summary=0x7f0f0371;
    public static final int sports_news_settings=0x7f0f0372;
    public static final int status_bar_notification_info_overflow=0x7f0f0373;
    /**
     * Status hint label for an incoming call over a wifi network which has not been accepted yet.
     * [CHAR LIMIT=25]
     * Status hint label for an incoming call over a wifi network which has not been accepted yet.
     * DO NOT TRANSLATE.
     */
    public static final int status_hint_label_incoming_wifi_call=0x7f0f0374;
    /**
     * Status hint label for a call being made over a wifi network. [CHAR LIMIT=25]
     * Status hint label for a call being made over a wifi network. DO NOT TRANSLATE.
     * Do not translate. Status hint label for a call being made over a wifi network. [CHAR LIMIT=25]
     */
    public static final int status_hint_label_wifi_call=0x7f0f0375;
    /**
     * Status message displayed in the "Call settings error" dialog when
     * current SS request is modified to a different request by STK CC
     */
    public static final int stk_cc_ss_to_dial_error=0x7f0f0376;
    public static final int stk_cc_ss_to_dial_video_error=0x7f0f0377;
    public static final int stk_cc_ss_to_ss_error=0x7f0f0378;
    public static final int stk_cc_ss_to_ussd_error=0x7f0f0379;
    public static final int stock_quotes_disable=0x7f0f037a;
    public static final int stock_quotes_enable=0x7f0f037b;
    /**
     * Call barring settings screen, setting summary text when a call barring option is deactivated
     */
    public static final int sum_call_barring_disabled=0x7f0f037c;
    /**
     * Call barring settings screen, setting summary text when a call barring option is activated
     */
    public static final int sum_call_barring_enabled=0x7f0f037d;
    /**
     * CDMA-only Call settings screen, setting option name
     */
    public static final int sum_cdma_call_settings=0x7f0f037e;
    /**
     * Call forwarding settings screen, setting summary text when forwarding when busy is disabled
     */
    public static final int sum_cfb_disabled=0x7f0f037f;
    /**
     * Call forwarding settings screen, setting summary text when forwarding to specific number when busy
     */
    public static final int sum_cfb_enabled=0x7f0f0380;
    /**
     * Call forwarding settings screen, setting summary text when Forward when unreachable is disabled
     */
    public static final int sum_cfnrc_disabled=0x7f0f0381;
    /**
     * Call forwarding settings screen, setting summary text when forwarding to a specific number when unreachable
     */
    public static final int sum_cfnrc_enabled=0x7f0f0382;
    /**
     * Call forwarding settings screen, setting summary text when Forward when unanswered is disabled
     */
    public static final int sum_cfnry_disabled=0x7f0f0383;
    /**
     * Call forwarding settings screen, setting summary text when forwarding to a specific number when unanswered
     */
    public static final int sum_cfnry_enabled=0x7f0f0384;
    /**
     * Call forwarding settings screen, setting summary text when Always forward is disabled
     */
    public static final int sum_cfu_disabled=0x7f0f0385;
    /**
     * Call forwarding settings screen, setting summary text the Always forward is set
     */
    public static final int sum_cfu_enabled=0x7f0f0386;
    /**
     * Call forwarding settings screen, setting summary text when forwarding all calls
     */
    public static final int sum_cfu_enabled_indicator=0x7f0f0387;
    /**
     * Call forwarding settings screen, Always forward is enabled but the number is unavailable
     */
    public static final int sum_cfu_enabled_no_number=0x7f0f0388;
    /**
     * Additional call settings screen, setting summary text when call waiting check box is clear
     */
    public static final int sum_cw_disabled=0x7f0f0389;
    /**
     * Additional call settings screen, setting summary text when call waiting check box is selected
     */
    public static final int sum_cw_enabled=0x7f0f038a;
    /**
     * Additional call settings screen, setting summary text for default Caller ID value
     */
    public static final int sum_default_caller_id=0x7f0f038b;
    /**
     * Call settings screen, setting summary text
     */
    public static final int sum_fdn=0x7f0f038c;
    /**
     * Call settings, FDN screen, setting option name
     */
    public static final int sum_fdn_change_pin=0x7f0f038d;
    /**
     * Call settings, FDN screen, setting option name
     */
    public static final int sum_fdn_manage_list=0x7f0f038e;
    /**
     * GSM-only Call settings screen, setting option name
     */
    public static final int sum_gsm_call_settings=0x7f0f038f;
    /**
     * Additional call settings screen, setting summary text when Caller ID is hidden
     */
    public static final int sum_hide_caller_id=0x7f0f0390;
    /**
     * Additional call settings screen, setting summary text when the setting is being loaded [CHAR LIMIT=40]
     */
    public static final int sum_loading_settings=0x7f0f0391;
    /**
     * Additional call settings screen, setting summary text when Caller ID is shown
     */
    public static final int sum_show_caller_id=0x7f0f0392;
    /**
     * Call settings screen, "Voicemail" provider setting summary text when no provider is selected
     */
    public static final int sum_voicemail_choose_provider=0x7f0f0393;
    public static final int summary_collapsed_preference_list=0x7f0f0394;
    /**
     * Message displayed to the user when they receive multiple incoming calls at the same time
     * and one of them is forwarded to the network.  Phones can't handle multiple incoming calls
     * so the network will typically forward one of the calls to voicemail or another number
     * defined by the user.
     */
    public static final int supp_service_additional_call_forwarded=0x7f0f0395;
    /**
     * Message displayed to the user to indicate that a call has been successfully transferred
     * to another phone number.
     */
    public static final int supp_service_additional_ect_connected=0x7f0f0396;
    /**
     * Message displayed to the user to indicate that the call is in the process of being
     * transferred to another phone number.
     */
    public static final int supp_service_additional_ect_connecting=0x7f0f0397;
    /**
     * Message displayed to the user to indicate that call forwarding is active.
     */
    public static final int supp_service_call_forwarding_active=0x7f0f0398;
    /**
     * Message displayed to the user to indicate that the remote party has put the user
     * on hold.
     */
    public static final int supp_service_call_on_hold=0x7f0f0399;
    /**
     * Message displayed to the user to indicate that the remote party has taken the user
     * off hold.
     */
    public static final int supp_service_call_resumed=0x7f0f039a;
    /**
     * Message displayed to the user when they have chosen to block their phone number for an
     * outgoing call, but the network has rejected that request.
     */
    public static final int supp_service_clir_suppression_rejected=0x7f0f039b;
    /**
     * Message displayed to the user to inform them that the call is to or from a number which is
     * part of a closed user group.  A closed user group is a network feature which restricts
     * calls on a device to members of the closed user group.
     */
    public static final int supp_service_closed_user_group_call=0x7f0f039c;
    /**
     * Message displayed to the user to indicate that they are joining a conference call.
     */
    public static final int supp_service_conference_call=0x7f0f039d;
    /**
     * Message displayed to the user to indicate that an incoming call was deflected from another
     * number.  This means that the call originated as a result of the original caller choosing
     * to forward the call to the current user rather than answering it themselves.
     */
    public static final int supp_service_deflected_call=0x7f0f039e;
    /**
     * Message displayed to the user to indicate that an incoming call was forwarded from another
     * number.
     */
    public static final int supp_service_forwarded_call=0x7f0f039f;
    /**
     * Message displayed to the user to indicate that a held call has been released /
     * disconnected.
     */
    public static final int supp_service_held_call_released=0x7f0f03a0;
    /**
     * Message displayed to the user when incoming call barring is active.  This means that the
     * user has enabled the network feature which prevents all incoming calls.
     */
    public static final int supp_service_incoming_calls_barred=0x7f0f03a1;
    /**
     * Message displayed to the user when an outgoing call is deflected.  This means that the
     * party the user is calling has chosen to send the call to another phone number.
     */
    public static final int supp_service_notification_call_deflected=0x7f0f03a2;
    /**
     * Message displayed to the user when an outgoing call is forwarded to another number.
     * This happens because the party the user is calling has call forwarding active.
     */
    public static final int supp_service_notification_call_forwarded=0x7f0f03a3;
    /**
     * Message displayed to the user when an outgoing call is waiting.  This happens when the
     * party the user is calling is already in another call.
     */
    public static final int supp_service_notification_call_waiting=0x7f0f03a4;
    /**
     * Message displayed to the user when outgoing call barring is active.  This means that the
     * user has enabled the network feature which prevents all outgoing calls.
     */
    public static final int supp_service_outgoing_calls_barred=0x7f0f03a5;
    /**
     * Message displayed to the user when they attempt to edit options for a supplementary service
     * (call waiting, call barring, call forwarding, and caller ID), but they are required to
     * enable mobile data first.
     */
    public static final int supp_service_over_ut_precautions=0x7f0f03a6;
    /**
     * supplementary services over ut precaution exit dialog choice
     */
    public static final int supp_service_over_ut_precautions_dialog_dismiss=0x7f0f03a7;
    /**
     * Message displayed to the user when they attempt to edit options for a supplementary service
     * (call waiting, call barring, call forwarding, and caller ID), but they are
     * required to enable mobile data first for each sim.
     */
    public static final int supp_service_over_ut_precautions_dual_sim=0x7f0f03a8;
    /**
     * Message displayed to the user when they attempt to edit options for a supplementary service
     * (call waiting, call barring, call forwarding, and caller ID) in roaming, but they are
     * required to enable mobile data and data roaming first.
     */
    public static final int supp_service_over_ut_precautions_roaming=0x7f0f03a9;
    /**
     * Message displayed to the user when they attempt to edit options for a supplementary service
     * (call waiting, call barring, call forwarding, and caller ID) in roaming device, but
     * they are required to enable mobile data and data roaming first for each sim.
     */
    public static final int supp_service_over_ut_precautions_roaming_dual_sim=0x7f0f03aa;
    /**
     * The package to handle visual voicemail if the default dialer or the package
     * CarrierConfigManager.KEY_CARRIER_VVM_PACKAGE_NAME_STRING does not handle it
     */
    public static final int system_visual_voicemail_client=0x7f0f03ab;
    public static final int technology_news_disable=0x7f0f03ac;
    public static final int technology_news_enable=0x7f0f03ad;
    /**
     * Text for describing the account's owner and status. For example, 'Active, in use by Google Talk', it means that the account managed by SIP service was registered by the application 'Google Talk' and the status is active. [CHAR LIMIT=NONE]
     */
    public static final int third_party_account_summary=0x7f0f03ae;
    /**
     * Data usage settings screen option for checking the current usage
     */
    public static final int throttle_current_usage=0x7f0f03af;
    public static final int throttle_data_rate_reduced_subtext=0x7f0f03b0;
    /**
     * Screen option on the mobile network settings to go into data usage settings
     */
    public static final int throttle_data_usage=0x7f0f03b1;
    public static final int throttle_data_usage_subtext=0x7f0f03b2;
    /**
     * Data usage settings screen option for accessing the carrier website
     */
    public static final int throttle_help=0x7f0f03b3;
    public static final int throttle_help_subtext=0x7f0f03b4;
    /**
     * Data usage settings screen option for throttling rate
     */
    public static final int throttle_rate=0x7f0f03b5;
    public static final int throttle_rate_subtext=0x7f0f03b6;
    public static final int throttle_status_subtext=0x7f0f03b7;
    /**
     * Data usage settings screen option for time frame
     */
    public static final int throttle_time_frame=0x7f0f03b8;
    public static final int throttle_time_frame_subtext=0x7f0f03b9;
    public static final int transport=0x7f0f03ba;
    /**
     * Text of the transport type preference. [CHAR LIMIT=NONE]
     */
    public static final int transport_title=0x7f0f03bb;
    /**
     * Trigger Carrier Provisioning [CHAR LIMIT=NONE]
     */
    public static final int trigger_carrier_provisioning=0x7f0f03bc;
    /**
     * DO NOT TRANSLATE. Internal key for tty mode preference.
     */
    public static final int tty_mode_key=0x7f0f03bd;
    /**
     * TTY Mode change is NOT allowed during a video call
     */
    public static final int tty_mode_not_allowed_video_call=0x7f0f03be;
    public static final int tty_mode_option_summary=0x7f0f03bf;
    public static final int tty_mode_option_title=0x7f0f03c0;
    /**
     * Package name for the default in-call UI and dialer [DO NOT TRANSLATE]
     */
    public static final int ui_default_package=0x7f0f03c1;
    /**
     * Incoming call screen, name of "unknown" caller
     */
    public static final int unknown=0x7f0f03c2;
    /**
     * Error message displayed on SIM Network Depersonalization panel
     */
    public static final int unlock_failed=0x7f0f03c3;
    /**
     * Success message displayed on SIM Network Depersonalization panel
     */
    public static final int unlock_success=0x7f0f03c4;
    /**
     * "Edit FDN Contact" screen: status message displayed in a popup (toast)
     */
    public static final int updating_fdn_contact=0x7f0f03c5;
    /**
     * Toast in Call settings dialog while settings are being saved
     */
    public static final int updating_settings=0x7f0f03c6;
    /**
     * Title of the progress dialog displayed while updating Call settings
     */
    public static final int updating_title=0x7f0f03c7;
    public static final int username=0x7f0f03c8;
    /**
     * Text of the username preference. [CHAR LIMIT=NONE]
     */
    public static final int username_title=0x7f0f03c9;
    /**
     * Dialog label when a USSD code starts running
     */
    public static final int ussdRunning=0x7f0f03ca;
    /**
     * USSD aggregation dialog box: separator strings between messages (new-lines will be added before and after)
     */
    public static final int ussd_dialog_sep=0x7f0f03cb;
    public static final int v7_preference_off=0x7f0f03cc;
    public static final int v7_preference_on=0x7f0f03cd;
    /**
     * Mobile network settings screen, title of Video calling setting
     */
    public static final int video_calling_settings_title=0x7f0f03ce;
    /**
     * Call settings screen, Set voicemail number dialog text
     */
    public static final int vm_change_failed=0x7f0f03cf;
    /**
     * Error message for the voicemail PIN change if the new PIN contains invalid character
     */
    public static final int vm_change_pin_error_invalid=0x7f0f03d0;
    /**
     * Error message for the voicemail PIN change if the old PIN entered doesn't match
     */
    public static final int vm_change_pin_error_mismatch=0x7f0f03d1;
    /**
     * Error message for the voicemail PIN change if operation has failed
     */
    public static final int vm_change_pin_error_system_error=0x7f0f03d2;
    /**
     * Error message for the voicemail PIN change if the PIN is too long
     */
    public static final int vm_change_pin_error_too_long=0x7f0f03d3;
    /**
     * Error message for the voicemail PIN change if the PIN is too short
     */
    public static final int vm_change_pin_error_too_short=0x7f0f03d4;
    /**
     * Error message for the voicemail PIN change if the PIN is too weak
     */
    public static final int vm_change_pin_error_too_weak=0x7f0f03d5;
    /**
     * Hint for the new PIN field in the change vociemail PIN dialog
     */
    public static final int vm_change_pin_new_pin=0x7f0f03d6;
    /**
     * Hint for the old PIN field in the change vociemail PIN dialog
     */
    public static final int vm_change_pin_old_pin=0x7f0f03d7;
    /**
     * Message on the dialog when PIN changing is in progress
     */
    public static final int vm_change_pin_progress_message=0x7f0f03d8;
    /**
     * Call settings screen, Set voicemail number dialog text
     */
    public static final int vm_changed=0x7f0f03d9;
    /**
     * Toast in Call settings when asked to launch voicemail for a guest user
     */
    public static final int voice_number_setting_primary_user_only=0x7f0f03da;
    /**
     * Voice privacy on CDMA is an added layer of voice encryption. Theoretically, it would be harder to break in to a phone call with this feature enabled.
     */
    public static final int voice_privacy=0x7f0f03db;
    public static final int voice_privacy_summary=0x7f0f03dc;
    /**
     * Call settings screen, setting option name
     */
    public static final int voicemail=0x7f0f03dd;
    /**
     * Call forwarding dialog box, voicemail number prefix
     */
    public static final int voicemail_abbreviated=0x7f0f03de;
    /**
     * Voicemail change PIN dialog title [CHAR LIMIT=40]
     */
    public static final int voicemail_change_pin_dialog_title=0x7f0f03df;
    /**
     * DO NOT TRANSLATE. Internal key for a voicemail change pin preference.
     */
    public static final int voicemail_change_pin_key=0x7f0f03e0;
    /**
     * Call settings screen, "Voicemail" screen, default option - Your Carrier
     */
    public static final int voicemail_default=0x7f0f03e1;
    /**
     * DO NOT TRANSLATE. Internal key for a voicemail notification preference.
     */
    public static final int voicemail_notifications_key=0x7f0f03e2;
    /**
     * Voicemail notifications title. The user clicks on this preference navigate to the system settings screen for that channel
     * .[CHAR LIMIT=30]
     */
    public static final int voicemail_notifications_preference_title=0x7f0f03e3;
    /**
     * String to display in voicemail number summary when no voicemail num is set
     */
    public static final int voicemail_number_not_set=0x7f0f03e4;
    /**
     * Preference for Voicemail service provider under "Voicemail" settings.
     * [CHAR LIMIT=40]
     */
    public static final int voicemail_provider=0x7f0f03e5;
    /**
     * Voicemail change PIN dialog title [CHAR LIMIT=40]
     */
    public static final int voicemail_set_pin_dialog_title=0x7f0f03e6;
    /**
     * Preference for Voicemail setting of each provider.
     * [CHAR LIMIT=40]
     */
    public static final int voicemail_settings=0x7f0f03e7;
    /**
     * Call settings screen, Set voicemail dialog title
     */
    public static final int voicemail_settings_number_label=0x7f0f03e8;
    /**
     * Title of the "Voicemail" settings screen, with a text label identifying which SIM the settings are for.
     */
    public static final int voicemail_settings_with_label=0x7f0f03e9;
    /**
     * DO NOT TRANSLATE. Internal key for a visual voicemail preference.
     */
    public static final int voicemail_visual_voicemail_key=0x7f0f03ea;
    /**
     * Visual voicemail on/off title [CHAR LIMIT=40]
     */
    public static final int voicemail_visual_voicemail_switch_title=0x7f0f03eb;
    /**
     * VoLTE provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int volte_provisioned_switch_string=0x7f0f03ec;
    /**
     * Video calling provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int vt_provisioned_switch_string=0x7f0f03ed;
    /**
     * Message to replace the transcription if a visual voicemail message is not supported
     */
    public static final int vvm_unsupported_message_format=0x7f0f03ee;
    /**
     * In-call screen: body text of the dialog that appears when we encounter
     * the "wait" character in a phone number to be dialed; this dialog asks the
     * user if it's OK to send the numbers following the "wait".
     */
    public static final int wait_prompt_str=0x7f0f03ef;
    /**
     * Wifi Calling provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int wfc_provisioned_switch_string=0x7f0f03f0;
    /**
     * Title for setting to select Wi-Fi call manager account
     * Do not translate. Title for setting to select Wi-Fi call manager account
     */
    public static final int wifi_calling=0x7f0f03f1;
    /**
     * DO NOT TRANSLATE. Internal key for a voicemail notification preference.
     */
    public static final int wifi_calling_settings_key=0x7f0f03f2;
    /**
     * Mobile network settings screen, title of Wi-Fi calling setting
     * Do not translate. Mobile network settings screen, title of Wi-Fi calling setting
     */
    public static final int wifi_calling_settings_title=0x7f0f03f3;
    /**
     * In-call screen: on the "wild" character dialog, this is the label
     * for a text widget that lets the user enter the digits that should
     * replace the "wild" character.
     */
    public static final int wild_prompt_str=0x7f0f03f4;
  }
  public static final class style {
    public static final int AlertDialog_AppCompat=0x7f100000;
    public static final int AlertDialog_AppCompat_Light=0x7f100001;
    public static final int Animation_AppCompat_Dialog=0x7f100002;
    public static final int Animation_AppCompat_DropDownUp=0x7f100003;
    public static final int Animation_AppCompat_Tooltip=0x7f100004;
    public static final int Base_AlertDialog_AppCompat=0x7f100005;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f100006;
    public static final int Base_Animation_AppCompat_Dialog=0x7f100007;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f100008;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f100009;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f10000a;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f10000b;
    public static final int Base_TextAppearance_AppCompat=0x7f10000c;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f10000d;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f10000e;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f10000f;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f100010;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f100011;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f100012;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f100013;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f100014;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f100015;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f100016;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f100017;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f100018;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f100019;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f10001a;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f10001b;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f10001c;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f10001d;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f10001e;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f10001f;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f100020;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f100021;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f100022;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f100023;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f100024;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f100025;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f100026;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f100027;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f100028;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f100029;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f10002a;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f10002b;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f10002c;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f10002d;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f10002e;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f10002f;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f100030;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f100031;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f100032;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f100033;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f100034;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f100035;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f100036;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f100037;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f100038;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f100039;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f10003a;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f10003b;
    public static final int Base_Theme_AppCompat=0x7f10003c;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f10003d;
    public static final int Base_Theme_AppCompat_Dialog=0x7f10003e;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f10003f;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f100040;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f100041;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f100042;
    public static final int Base_Theme_AppCompat_Light=0x7f100043;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f100044;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f100045;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f100046;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f100047;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f100048;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f100049;
    public static final int Base_ThemeOverlay_AppCompat=0x7f10004a;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f10004b;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f10004c;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f10004d;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f10004e;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f10004f;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f100050;
    public static final int Base_V21_Theme_AppCompat=0x7f100051;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f100052;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f100053;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f100054;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f100055;
    public static final int Base_V22_Theme_AppCompat=0x7f100056;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f100057;
    public static final int Base_V23_Theme_AppCompat=0x7f100058;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f100059;
    public static final int Base_V26_Theme_AppCompat=0x7f10005a;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f10005b;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f10005c;
    public static final int Base_V28_Theme_AppCompat=0x7f10005d;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f10005e;
    public static final int Base_V7_Theme_AppCompat=0x7f10005f;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f100060;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f100061;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f100062;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f100063;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f100064;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f100065;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f100066;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f100067;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f100068;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f100069;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f10006a;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f10006b;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f10006c;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f10006d;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f10006e;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f10006f;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f100070;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f100071;
    public static final int Base_Widget_AppCompat_Button=0x7f100072;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f100073;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f100074;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f100075;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f100076;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f100077;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f100078;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f100079;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f10007a;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f10007b;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f10007c;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f10007d;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f10007e;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f10007f;
    public static final int Base_Widget_AppCompat_EditText=0x7f100080;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f100081;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f100082;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f100083;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f100084;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f100085;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f100086;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f100087;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f100088;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f100089;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f10008a;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f10008b;
    public static final int Base_Widget_AppCompat_ListView=0x7f10008c;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f10008d;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f10008e;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f10008f;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f100090;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f100091;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f100092;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f100093;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f100094;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f100095;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f100096;
    public static final int Base_Widget_AppCompat_SearchView=0x7f100097;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f100098;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f100099;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f10009a;
    public static final int Base_Widget_AppCompat_Spinner=0x7f10009b;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f10009c;
    public static final int Base_Widget_AppCompat_TextView=0x7f10009d;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f10009e;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f10009f;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1000a0;
    public static final int BasePreferenceThemeOverlay=0x7f1000a1;
    public static final int CallSettingsWithoutDividerTheme=0x7f1000a2;
    public static final int DialerAlertDialogTheme=0x7f1000a3;
    public static final int DialerSettingsLight=0x7f1000a4;
    public static final int DialpadBottomKeyNumberStyle=0x7f1000a5;
    public static final int DialpadKeyButtonStyle=0x7f1000a6;
    public static final int DialpadKeyInternalLayoutStyle=0x7f1000a7;
    public static final int DialpadKeyLettersStyle=0x7f1000a8;
    public static final int DialpadKeyNumberStyle=0x7f1000a9;
    public static final int DialpadKeyPoundStyle=0x7f1000aa;
    public static final int DialpadKeyStarStyle=0x7f1000ab;
    public static final int DialpadNoSpaceStyle=0x7f1000ac;
    public static final int DialpadSpaceStyle=0x7f1000ad;
    public static final int Dialpad_DarkTransparent=0x7f1000ae;
    public static final int Dialpad_DarkTransparent_Emergency=0x7f1000af;
    public static final int Dialpad_Light=0x7f1000b0;
    public static final int Dialpad_LightTransparent=0x7f1000b1;
    public static final int Dialpad_LightTransparent_Emergency=0x7f1000b2;
    /**
     * Action bar overflow menu icon.
     */
    public static final int DialtactsActionBarOverflow=0x7f1000b3;
    /**
     * Style for the call settings action bar.  Should be kept in sync with Dialer.
     */
    public static final int DialtactsActionBarStyle=0x7f1000b4;
    /**
     * Text in the action bar at the top of the screen.  Should be kept in sync with Dialer.
     */
    public static final int DialtactsActionBarTitleText=0x7f1000b5;
    public static final int DialtactsDigitsTextAppearance=0x7f1000b6;
    /**
     * Preference Style for the phone number preferences
     */
    public static final int EditPhoneNumberPreference=0x7f1000b7;
    public static final int EmergencyDialerAlertDialogTheme=0x7f1000b8;
    public static final int EmergencyDialerTheme=0x7f1000b9;
    public static final int EmergencyDialerThemeDark=0x7f1000ba;
    public static final int EmergencyInfoHintTextAppearance=0x7f1000bb;
    public static final int EmergencyInfoNameTextAppearance=0x7f1000bc;
    public static final int EmergencyInfoTapHintTextAppearance=0x7f1000bd;
    public static final int Empty=0x7f1000be;
    public static final int IccPanel=0x7f1000bf;
    /**
     * Buttons in the main "button row" of the in-call onscreen touch UI.
     */
    public static final int InCallButton=0x7f1000c0;
    /**
     * "Compound button" variation of InCallButton.
     * These buttons have the concept of two states: checked and unchecked.
     * (This style is just like "InCallButton" except that we also
     * clear out android:textOn and android:textOff, to avoid the default
     * text label behavior of the ToggleButton class.)
     */
    public static final int InCallCompoundButton=0x7f1000c1;
    /**
     * "End" button; similar to InCallButton.
     */
    public static final int InCallEndButton=0x7f1000c2;
    /**
     * Buttons in extra button row.
     */
    public static final int InCallExtraRowButton=0x7f1000c3;
    /**
     * Text label drawn alongside buttons in the "extra button row" of
     * the in-call onscreen touch UI.
     */
    public static final int InCallExtraRowButtonLabel=0x7f1000c4;
    public static final int PhoneNumberTapHintAppearance=0x7f1000c5;
    public static final int PhoneNumberTextAppearance=0x7f1000c6;
    public static final int PhoneNumberTypeAppearance=0x7f1000c7;
    public static final int Platform_AppCompat=0x7f1000c8;
    public static final int Platform_AppCompat_Light=0x7f1000c9;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f1000ca;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f1000cb;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f1000cc;
    public static final int Platform_V21_AppCompat=0x7f1000cd;
    public static final int Platform_V21_AppCompat_Light=0x7f1000ce;
    public static final int Platform_V25_AppCompat=0x7f1000cf;
    public static final int Platform_V25_AppCompat_Light=0x7f1000d0;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f1000d1;
    public static final int Preference=0x7f1000d2;
    public static final int Preference_Category=0x7f1000d3;
    public static final int Preference_Category_Material=0x7f1000d4;
    public static final int Preference_CheckBoxPreference=0x7f1000d5;
    public static final int Preference_CheckBoxPreference_Material=0x7f1000d6;
    public static final int Preference_DialogPreference=0x7f1000d7;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f1000d8;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f1000d9;
    public static final int Preference_DialogPreference_Material=0x7f1000da;
    public static final int Preference_DropDown=0x7f1000db;
    public static final int Preference_DropDown_Material=0x7f1000dc;
    public static final int Preference_Information=0x7f1000dd;
    public static final int Preference_Information_Material=0x7f1000de;
    public static final int Preference_Material=0x7f1000df;
    public static final int Preference_PreferenceScreen=0x7f1000e0;
    public static final int Preference_PreferenceScreen_Material=0x7f1000e1;
    public static final int Preference_SeekBarPreference=0x7f1000e2;
    public static final int Preference_SeekBarPreference_Material=0x7f1000e3;
    public static final int Preference_SwitchPreference=0x7f1000e4;
    public static final int Preference_SwitchPreference_Material=0x7f1000e5;
    public static final int Preference_SwitchPreferenceCompat=0x7f1000e6;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f1000e7;
    public static final int PreferenceCategoryTitleTextStyle=0x7f1000e8;
    public static final int PreferenceFragment=0x7f1000e9;
    public static final int PreferenceFragment_Material=0x7f1000ea;
    public static final int PreferenceFragmentList=0x7f1000eb;
    public static final int PreferenceFragmentList_Material=0x7f1000ec;
    public static final int PreferenceSummaryTextStyle=0x7f1000ed;
    public static final int PreferenceThemeOverlay=0x7f1000ee;
    public static final int PreferenceThemeOverlay_v14=0x7f1000ef;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f1000f0;
    public static final int RadioInfo_entry_layout=0x7f1000f1;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f1000f2;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f1000f3;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f1000f4;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f1000f5;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f1000f6;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f1000f7;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f1000f8;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f1000f9;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f1000fa;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f1000fb;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f1000fc;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f1000fd;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f1000fe;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f1000ff;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f100100;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f100101;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f100102;
    public static final int SettingsDialogPreference=0x7f100103;
    public static final int SettingsLight=0x7f100104;
    public static final int SettingsListPreference=0x7f100105;
    /**
     * Preferences
     */
    public static final int SettingsPreference=0x7f100106;
    public static final int SettingsPreferenceScreen=0x7f100107;
    public static final int SettingsSwitchPreference=0x7f100108;
    public static final int ShortcutViewHintTextAppearance=0x7f100109;
    public static final int SimImportTheme=0x7f10010a;
    public static final int TelephonyActionBarStyle=0x7f10010b;
    public static final int TextAppearance=0x7f10010c;
    public static final int TextAppearance_AppCompat=0x7f10010d;
    public static final int TextAppearance_AppCompat_Body1=0x7f10010e;
    public static final int TextAppearance_AppCompat_Body2=0x7f10010f;
    public static final int TextAppearance_AppCompat_Button=0x7f100110;
    public static final int TextAppearance_AppCompat_Caption=0x7f100111;
    public static final int TextAppearance_AppCompat_Display1=0x7f100112;
    public static final int TextAppearance_AppCompat_Display2=0x7f100113;
    public static final int TextAppearance_AppCompat_Display3=0x7f100114;
    public static final int TextAppearance_AppCompat_Display4=0x7f100115;
    public static final int TextAppearance_AppCompat_Headline=0x7f100116;
    public static final int TextAppearance_AppCompat_Inverse=0x7f100117;
    public static final int TextAppearance_AppCompat_Large=0x7f100118;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f100119;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f10011a;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f10011b;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f10011c;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f10011d;
    public static final int TextAppearance_AppCompat_Medium=0x7f10011e;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f10011f;
    public static final int TextAppearance_AppCompat_Menu=0x7f100120;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f100121;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f100122;
    public static final int TextAppearance_AppCompat_Small=0x7f100123;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f100124;
    public static final int TextAppearance_AppCompat_Subhead=0x7f100125;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f100126;
    public static final int TextAppearance_AppCompat_Title=0x7f100127;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f100128;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f100129;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f10012a;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f10012b;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f10012c;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f10012d;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f10012e;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f10012f;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f100130;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f100131;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f100132;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f100133;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f100134;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f100135;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f100136;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f100137;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f100138;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f100139;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f10013a;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f10013b;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f10013c;
    public static final int TextAppearance_Compat_Notification=0x7f10013d;
    public static final int TextAppearance_Compat_Notification_Info=0x7f10013e;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f10013f;
    public static final int TextAppearance_Compat_Notification_Time=0x7f100140;
    public static final int TextAppearance_Compat_Notification_Title=0x7f100141;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f100142;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f100143;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f100144;
    public static final int TextAppearance_info_label=0x7f100145;
    public static final int TextAppearance_info_value=0x7f100146;
    public static final int Theme_AppCompat=0x7f100147;
    public static final int Theme_AppCompat_CompactMenu=0x7f100148;
    public static final int Theme_AppCompat_DayNight=0x7f100149;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f10014a;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f10014b;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f10014c;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f10014d;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f10014e;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f10014f;
    public static final int Theme_AppCompat_Dialog=0x7f100150;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f100151;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f100152;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f100153;
    public static final int Theme_AppCompat_Empty=0x7f100154;
    public static final int Theme_AppCompat_Light=0x7f100155;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f100156;
    public static final int Theme_AppCompat_Light_Dialog=0x7f100157;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f100158;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f100159;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f10015a;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f10015b;
    public static final int Theme_AppCompat_NoActionBar=0x7f10015c;
    public static final int Theme_Transparent=0x7f10015d;
    public static final int ThemeOverlay_AppCompat=0x7f10015e;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f10015f;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f100160;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f100161;
    public static final int ThemeOverlay_AppCompat_DayNight=0x7f100162;
    public static final int ThemeOverlay_AppCompat_DayNight_ActionBar=0x7f100163;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f100164;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f100165;
    public static final int ThemeOverlay_AppCompat_Light=0x7f100166;
    public static final int VerticalSeparator=0x7f100167;
    public static final int Widget_AppCompat_ActionBar=0x7f100168;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f100169;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f10016a;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f10016b;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f10016c;
    public static final int Widget_AppCompat_ActionButton=0x7f10016d;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f10016e;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f10016f;
    public static final int Widget_AppCompat_ActionMode=0x7f100170;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f100171;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f100172;
    public static final int Widget_AppCompat_Button=0x7f100173;
    public static final int Widget_AppCompat_Button_Borderless=0x7f100174;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f100175;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f100176;
    public static final int Widget_AppCompat_Button_Colored=0x7f100177;
    public static final int Widget_AppCompat_Button_Small=0x7f100178;
    public static final int Widget_AppCompat_ButtonBar=0x7f100179;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f10017a;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f10017b;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f10017c;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f10017d;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f10017e;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f10017f;
    public static final int Widget_AppCompat_EditText=0x7f100180;
    public static final int Widget_AppCompat_ImageButton=0x7f100181;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f100182;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f100183;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f100184;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f100185;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f100186;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f100187;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f100188;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f100189;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f10018a;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f10018b;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f10018c;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f10018d;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f10018e;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f10018f;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f100190;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f100191;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f100192;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f100193;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f100194;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f100195;
    public static final int Widget_AppCompat_Light_SearchView=0x7f100196;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f100197;
    public static final int Widget_AppCompat_ListMenuView=0x7f100198;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f100199;
    public static final int Widget_AppCompat_ListView=0x7f10019a;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f10019b;
    public static final int Widget_AppCompat_ListView_Menu=0x7f10019c;
    public static final int Widget_AppCompat_PopupMenu=0x7f10019d;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f10019e;
    public static final int Widget_AppCompat_PopupWindow=0x7f10019f;
    public static final int Widget_AppCompat_ProgressBar=0x7f1001a0;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f1001a1;
    public static final int Widget_AppCompat_RatingBar=0x7f1001a2;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f1001a3;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f1001a4;
    public static final int Widget_AppCompat_SearchView=0x7f1001a5;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f1001a6;
    public static final int Widget_AppCompat_SeekBar=0x7f1001a7;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f1001a8;
    public static final int Widget_AppCompat_Spinner=0x7f1001a9;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f1001aa;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f1001ab;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f1001ac;
    public static final int Widget_AppCompat_TextView=0x7f1001ad;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f1001ae;
    public static final int Widget_AppCompat_Toolbar=0x7f1001af;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f1001b0;
    public static final int Widget_Compat_NotificationActionContainer=0x7f1001b1;
    public static final int Widget_Compat_NotificationActionText=0x7f1001b2;
    public static final int ccOtaButton=0x7f1001b3;
    /**
     * OTA Call Card styles
     */
    public static final int ccOtaButtonBar=0x7f1001b4;
    public static final int ccOtaNextButton=0x7f1001b5;
    public static final int ccOtaSkipButton=0x7f1001b6;
    public static final int ccOtaTextPrimary=0x7f1001b7;
    public static final int ccOtaWizardTitle=0x7f1001b8;
    public static final int entry_layout=0x7f1001b9;
    public static final int form_value=0x7f1001ba;
    public static final int info_label=0x7f1001bb;
    public static final int info_layout=0x7f1001bc;
    public static final int info_value=0x7f1001bd;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.phone:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.phone:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.phone:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.phone:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.phone:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.phone:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.phone:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.phone:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.phone:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.phone:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.phone:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.phone:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.phone:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.phone:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.phone:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.phone:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.phone:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.phone:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.phone:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.phone:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.phone:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.phone:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.phone:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.phone:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.phone:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.phone:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.phone:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.phone:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.phone:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f040037, 0x7f040038, 0x7f040039, 0x7f040061, 
      0x7f040062, 0x7f040063, 0x7f040064, 0x7f040065, 
      0x7f040066, 0x7f040068, 0x7f040083, 0x7f040084, 
      0x7f04009a, 0x7f0400b8, 0x7f0400b9, 0x7f0400ba, 
      0x7f0400bb, 0x7f0400bc, 0x7f0400c2, 0x7f0400c7, 
      0x7f0400dc, 0x7f0400e7, 0x7f0400f7, 0x7f040106, 
      0x7f040107, 0x7f040130, 0x7f040133, 0x7f040156, 
      0x7f04015f
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.phone:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.phone:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.phone:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.phone:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.phone:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.phone:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.phone:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f040037, 0x7f040038, 0x7f040050, 0x7f0400b8, 
      0x7f040133, 0x7f04015f
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.phone:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.phone:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f0400a1, 0x7f0400c3
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.android.phone:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.phone:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.phone:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.phone:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.phone:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.phone:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.phone:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f040045, 0x7f040046, 0x7f0400d1, 
      0x7f0400d2, 0x7f0400e4, 0x7f040123, 0x7f040124
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.phone:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.phone:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.phone:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f04012b, 0x7f040154, 0x7f040155
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.phone:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.phone:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.phone:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f040151, 0x7f040152, 0x7f040153
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.phone:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.phone:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.phone:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.phone:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.phone:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.android.phone:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.android.phone:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.android.phone:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.android.phone:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.android.phone:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.android.phone:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.android.phone:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.android.phone:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.android.phone:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.phone:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.android.phone:fontVariationSettings}</code></td><td>OpenType font variation settings, available after api 26.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.android.phone:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.android.phone:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.phone:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.android.phone:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f040032, 0x7f040033, 0x7f040034, 
      0x7f040035, 0x7f040036, 0x7f040088, 0x7f040089, 
      0x7f04008a, 0x7f04008b, 0x7f04008d, 0x7f04008e, 
      0x7f04008f, 0x7f040090, 0x7f0400a8, 0x7f0400aa, 
      0x7f0400b3, 0x7f0400c9, 0x7f0400cc, 0x7f040140, 
      0x7f04014b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:drawableBottomCompat
     */
    public static final int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:drawableEndCompat
     */
    public static final int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:drawableLeftCompat
     */
    public static final int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:drawableRightCompat
     */
    public static final int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:drawableStartCompat
     */
    public static final int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:drawableTint
     */
    public static final int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:drawableTintMode
     */
    public static final int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:drawableTopCompat
     */
    public static final int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontVariationSettings
     */
    public static final int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:textLocale
     */
    public static final int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.phone:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.phone:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.phone:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.phone:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.phone:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.phone:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.phone:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.phone:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.phone:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.phone:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.phone:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.phone:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.phone:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.phone:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.phone:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.phone:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.phone:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseContentDescription com.android.phone:actionModeCloseContentDescription}</code></td><td>Content description to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.phone:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.phone:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.phone:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.phone:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.phone:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.phone:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.phone:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.phone:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.phone:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.phone:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeTheme com.android.phone:actionModeTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar in action mode.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.phone:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.phone:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.phone:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.phone:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.phone:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.phone:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.phone:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.phone:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.phone:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.phone:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.phone:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.phone:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.phone:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.phone:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.phone:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.phone:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.phone:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.phone:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.phone:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.phone:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.phone:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.phone:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.phone:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.phone:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.phone:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.phone:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.phone:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.phone:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.phone:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.phone:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.android.phone:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.phone:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.phone:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.phone:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.phone:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.phone:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.phone:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.phone:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.phone:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.phone:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.phone:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.phone:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.phone:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.android.phone:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.android.phone:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.phone:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.phone:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.phone:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.phone:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.phone:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.phone:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.android.phone:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.phone:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.phone:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.android.phone:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.phone:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.phone:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.phone:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.phone:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.phone:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.phone:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.phone:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.phone:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.phone:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.phone:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.phone:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.phone:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.phone:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.phone:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.phone:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.phone:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.phone:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.phone:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.phone:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.phone:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.phone:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.phone:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.phone:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.phone:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.phone:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.phone:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.phone:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.phone:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.phone:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.phone:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.android.phone:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.phone:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.phone:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.phone:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.phone:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.phone:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.phone:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.phone:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.phone:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.phone:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.phone:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseContentDescription
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeTheme
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
      0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
      0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
      0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f04000e, 
      0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
      0x7f040013, 0x7f040014, 0x7f040015, 0x7f040016, 
      0x7f040017, 0x7f040018, 0x7f040019, 0x7f04001a, 
      0x7f04001b, 0x7f04001c, 0x7f04001d, 0x7f04001e, 
      0x7f04001f, 0x7f040020, 0x7f040023, 0x7f040025, 
      0x7f040026, 0x7f040027, 0x7f040028, 0x7f040031, 
      0x7f04003d, 0x7f04003e, 0x7f04003f, 0x7f040040, 
      0x7f040041, 0x7f040042, 0x7f040047, 0x7f040048, 
      0x7f04004d, 0x7f04004e, 0x7f040054, 0x7f040055, 
      0x7f040056, 0x7f040057, 0x7f040058, 0x7f040059, 
      0x7f04005a, 0x7f04005b, 0x7f04005c, 0x7f04005d, 
      0x7f040067, 0x7f04006c, 0x7f040073, 0x7f040074, 
      0x7f040085, 0x7f040087, 0x7f040093, 0x7f040094, 
      0x7f040096, 0x7f040097, 0x7f040099, 0x7f0400ba, 
      0x7f0400c1, 0x7f0400cd, 0x7f0400ce, 0x7f0400cf, 
      0x7f0400d0, 0x7f0400d3, 0x7f0400d4, 0x7f0400d5, 
      0x7f0400d6, 0x7f0400d7, 0x7f0400d8, 0x7f0400d9, 
      0x7f0400da, 0x7f0400db, 0x7f0400f2, 0x7f0400f3, 
      0x7f0400f4, 0x7f0400f6, 0x7f0400f8, 0x7f04010b, 
      0x7f04010c, 0x7f04010d, 0x7f04010e, 0x7f040115, 
      0x7f040118, 0x7f04011a, 0x7f04011b, 0x7f040128, 
      0x7f040129, 0x7f04013c, 0x7f040141, 0x7f040142, 
      0x7f040143, 0x7f040144, 0x7f040145, 0x7f040146, 
      0x7f040147, 0x7f040148, 0x7f040149, 0x7f04014a, 
      0x7f040160, 0x7f040161, 0x7f040162, 0x7f040163, 
      0x7f04016b, 0x7f04016e, 0x7f04016f, 0x7f040170, 
      0x7f040171, 0x7f040172, 0x7f040173, 0x7f040174, 
      0x7f040175, 0x7f040176, 0x7f040177
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.phone:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Content description to use for the close action mode button
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:actionModeCloseContentDescription
     */
    public static final int AppCompatTheme_actionModeCloseContentDescription=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=24;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=26;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=27;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=29;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeTheme
     */
    public static final int AppCompatTheme_actionModeTheme=30;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=33;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=37;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=38;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=39;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=43;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=44;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=45;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=46;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=47;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=48;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=49;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=50;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=53;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=54;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=55;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorError
     */
    public static final int AppCompatTheme_colorError=56;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=57;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=58;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=59;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=60;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=61;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=62;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=63;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=64;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=65;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=66;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=67;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=68;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=69;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=70;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=71;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=72;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=73;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listChoiceIndicatorMultipleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated=74;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listChoiceIndicatorSingleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated=75;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=76;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=78;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=79;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=80;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemPaddingEnd
     */
    public static final int AppCompatTheme_listPreferredItemPaddingEnd=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=83;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=84;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:listPreferredItemPaddingStart
     */
    public static final int AppCompatTheme_listPreferredItemPaddingStart=85;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=86;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=87;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=88;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=89;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=90;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=91;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=92;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=93;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=94;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=95;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=96;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=97;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=98;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=99;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=100;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=103;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=104;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=107;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=108;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=109;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=110;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=111;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=112;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=113;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=114;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=115;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=117;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=118;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=119;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.phone:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.phone:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=121;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.phone:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=122;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.phone:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=123;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.phone:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=124;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.phone:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=125;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=126;
    /**
     * Attributes that can be used with a BackgroundStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.android.phone:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
      0x0101030e, 0x7f04011a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.phone:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f04002c
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CallBarringEditPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CallBarringEditPreference_dialogMessageDisabledNoPwd com.android.phone:dialogMessageDisabledNoPwd}</code></td><td>Message when password is not in use, and call barring is disabled</td></tr>
     * <tr><td><code>{@link #CallBarringEditPreference_dialogMessageEnabledNoPwd com.android.phone:dialogMessageEnabledNoPwd}</code></td><td>Message when password is not in use, and call barring is enabled</td></tr>
     * <tr><td><code>{@link #CallBarringEditPreference_facility com.android.phone:facility}</code></td><td>BA: Disable all, CommandsInterface.CB_FACILITY_BA_ALL</td></tr>
     * </table>
     * @see #CallBarringEditPreference_dialogMessageDisabledNoPwd
     * @see #CallBarringEditPreference_dialogMessageEnabledNoPwd
     * @see #CallBarringEditPreference_facility
     */
    public static final int[] CallBarringEditPreference={
      0x7f040070, 0x7f040071, 0x7f0400a2
    };
    /**
     * <p>
     * @attr description
     * Message when password is not in use, and call barring is disabled
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:dialogMessageDisabledNoPwd
     */
    public static final int CallBarringEditPreference_dialogMessageDisabledNoPwd=0;
    /**
     * <p>
     * @attr description
     * Message when password is not in use, and call barring is enabled
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:dialogMessageEnabledNoPwd
     */
    public static final int CallBarringEditPreference_dialogMessageEnabledNoPwd=1;
    /**
     * <p>
     * @attr description
     * BA: Disable all, CommandsInterface.CB_FACILITY_BA_ALL
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:facility
     */
    public static final int CallBarringEditPreference_facility=2;
    /**
     * Attributes that can be used with a CallForwardEditPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CallForwardEditPreference_reason com.android.phone:reason}</code></td><td></td></tr>
     * <tr><td><code>{@link #CallForwardEditPreference_serviceClass com.android.phone:serviceClass}</code></td><td></td></tr>
     * </table>
     * @see #CallForwardEditPreference_reason
     * @see #CallForwardEditPreference_serviceClass
     */
    public static final int[] CallForwardEditPreference={
      0x7f04010f, 0x7f04011c
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#reason}
     * attribute's value can be found in the {@link #CallForwardEditPreference} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>busy</td><td>1</td><td>busy</td></tr>
     * <tr><td>no_reply</td><td>2</td><td>no_reply</td></tr>
     * <tr><td>not_reachable</td><td>3</td><td>not_reachable</td></tr>
     * <tr><td>unconditional</td><td>0</td><td>unconditional</td></tr>
     * </table>
     *
     * @attr name com.android.phone:reason
     */
    public static final int CallForwardEditPreference_reason=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#serviceClass}
     * attribute's value can be found in the {@link #CallForwardEditPreference} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>data</td><td>2</td><td>data</td></tr>
     * <tr><td>voice</td><td>1</td><td>voice</td></tr>
     * </table>
     *
     * @attr name com.android.phone:serviceClass
     */
    public static final int CallForwardEditPreference_serviceClass=1;
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.android.phone:queryPatterns}</code></td><td>Resource reference to the string array of query patterns for a custom capability.</td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.android.phone:shortcutMatchRequired}</code></td><td>Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.</td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x7f04010a, 0x7f04011d
    };
    /**
     * <p>
     * @attr description
     * Resource reference to the string array of query patterns for a custom capability.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:queryPatterns
     */
    public static final int Capability_queryPatterns=0;
    /**
     * <p>
     * @attr description
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:shortcutMatchRequired
     */
    public static final int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.android.phone:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.android.phone:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.android.phone:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x7f040082, 
      0x7f040136, 0x7f040137
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.phone:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f04002d
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.phone:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.android.phone:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.phone:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.phone:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f040043, 0x7f040049, 0x7f04004a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:buttonCompat
     */
    public static final int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:buttonTint
     */
    public static final int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.android.phone:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.android.phone:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.android.phone:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.android.phone:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.android.phone:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.android.phone:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
      0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
      0x010101f6, 0x010101f7, 0x7f04006d, 0x7f04006e, 
      0x7f04006f, 0x7f040075, 0x7f0400e8, 0x7f0400f9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a Dialpad.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_key_button_touch_tint com.android.phone:dialpad_key_button_touch_tint}</code></td><td></td></tr>
     * </table>
     * @see #Dialpad_dialpad_key_button_touch_tint
     */
    public static final int[] Dialpad={
      0x7f04007a
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_key_button_touch_tint}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_key_button_touch_tint
     */
    public static final int Dialpad_dialpad_key_button_touch_tint=0;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.phone:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.phone:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.phone:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.phone:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.phone:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.phone:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.phone:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.phone:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f04002f, 0x7f040030, 0x7f04003c, 0x7f040053, 
      0x7f04008c, 0x7f0400b6, 0x7f040127, 0x7f04014d
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.android.phone:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x7f04009a
    };
    /**
     * <p>
     * @attr description
     * The height difference between the drawer and the base surface. Only takes effect on API 21 and above
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:elevation
     */
    public static final int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a EditPhoneNumberPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #EditPhoneNumberPreference_changeNumButtonText com.android.phone:changeNumButtonText}</code></td><td>The change / update button text.</td></tr>
     * <tr><td><code>{@link #EditPhoneNumberPreference_confirmMode com.android.phone:confirmMode}</code></td><td>The confirm button mode.</td></tr>
     * <tr><td><code>{@link #EditPhoneNumberPreference_disableButtonText com.android.phone:disableButtonText}</code></td><td>The disable button text.</td></tr>
     * <tr><td><code>{@link #EditPhoneNumberPreference_enableButtonText com.android.phone:enableButtonText}</code></td><td>The enable button text.</td></tr>
     * </table>
     * @see #EditPhoneNumberPreference_changeNumButtonText
     * @see #EditPhoneNumberPreference_confirmMode
     * @see #EditPhoneNumberPreference_disableButtonText
     * @see #EditPhoneNumberPreference_enableButtonText
     */
    public static final int[] EditPhoneNumberPreference={
      0x7f04004b, 0x7f04005f, 0x7f040081, 0x7f04009c
    };
    /**
     * <p>
     * @attr description
     * The change / update button text.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:changeNumButtonText
     */
    public static final int EditPhoneNumberPreference_changeNumButtonText=0;
    /**
     * <p>
     * @attr description
     * The confirm button mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>activation</td><td>1</td><td>Two state "enable/disable" button.</td></tr>
     * <tr><td>confirm</td><td>0</td><td>Traditional single action "ok" button.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:confirmMode
     */
    public static final int EditPhoneNumberPreference_confirmMode=1;
    /**
     * <p>
     * @attr description
     * The disable button text.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:disableButtonText
     */
    public static final int EditPhoneNumberPreference_disableButtonText=2;
    /**
     * <p>
     * @attr description
     * The enable button text.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:enableButtonText
     */
    public static final int EditPhoneNumberPreference_enableButtonText=3;
    /**
     * Attributes that can be used with a EditTextPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #EditTextPreference_useSimpleSummaryProvider com.android.phone:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #EditTextPreference_useSimpleSummaryProvider
     */
    public static final int[] EditTextPreference={
      0x7f04016a
    };
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:useSimpleSummaryProvider
     */
    public static final int EditTextPreference_useSimpleSummaryProvider=0;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.phone:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.phone:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.phone:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.phone:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.phone:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.phone:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.android.phone:fontProviderSystemFontFamily}</code></td><td>Provides the system font family name to check before downloading the font.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x7f0400ab, 0x7f0400ac, 0x7f0400ad, 0x7f0400ae, 
      0x7f0400af, 0x7f0400b0, 0x7f0400b1
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * <p>
     * @attr description
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontProviderSystemFontFamily
     */
    public static final int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.phone:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.phone:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.phone:fontVariationSettings}</code></td><td>OpenType font variation settings, available after api 26.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.phone:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.phone:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f0400a9, 0x7f0400b2, 0x7f0400b3, 
      0x7f0400b4, 0x7f040168
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.phone:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.phone:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.phone:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.phone:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.phone:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f040084, 0x7f040086, 0x7f0400e1, 
      0x7f040120
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.phone:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.phone:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.phone:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * <tr><td><code>{@link #ListPreference_useSimpleSummaryProvider com.android.phone:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     * @see #ListPreference_useSimpleSummaryProvider
     */
    public static final int[] ListPreference={
      0x010100b2, 0x010101f8, 0x7f04009f, 0x7f0400a0, 
      0x7f04016a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:useSimpleSummaryProvider
     */
    public static final int ListPreference_useSimpleSummaryProvider=4;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.phone:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.phone:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.phone:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.phone:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.phone:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.phone:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.phone:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.phone:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.phone:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.phone:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f04000d, 0x7f040021, 0x7f040022, 
      0x7f04002e, 0x7f040060, 0x7f0400be, 0x7f0400bf, 
      0x7f0400ea, 0x7f04011f, 0x7f040164
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.phone:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.phone:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.phone:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.phone:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f040105, 
      0x7f04012e
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.android.phone:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.android.phone:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
      0x010100b2, 0x010101f8, 0x7f04009f, 0x7f0400a0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.phone:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f0400ed
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.phone:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f04012d
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.android.phone:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.android.phone:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.android.phone:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.android.phone:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enableCopying com.android.phone:enableCopying}</code></td><td>Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.android.phone:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.android.phone:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon com.android.phone:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.android.phone:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_isPreferenceVisible com.android.phone:isPreferenceVisible}</code></td><td>Whether the Preference is visible.</td></tr>
     * <tr><td><code>{@link #Preference_key com.android.phone:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_layout com.android.phone:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.android.phone:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.android.phone:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.android.phone:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.android.phone:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.android.phone:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.android.phone:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.android.phone:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.android.phone:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enableCopying
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_isPreferenceVisible
     * @see #Preference_key
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
      0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
      0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
      0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
      0x7f040029, 0x7f04002b, 0x7f04006a, 0x7f04006b, 
      0x7f04009d, 0x7f04009e, 0x7f0400b5, 0x7f0400bc, 
      0x7f0400bd, 0x7f0400c6, 0x7f0400c8, 0x7f0400ca, 
      0x7f0400eb, 0x7f0400f5, 0x7f040119, 0x7f04011e, 
      0x7f040125, 0x7f040135, 0x7f040156, 0x7f04016d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.phone:defaultValue
     */
    public static final int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:dependency
     */
    public static final int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:enableCopying
     */
    public static final int Preference_enableCopying=20;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:enabled
     */
    public static final int Preference_enabled=21;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fragment
     */
    public static final int Preference_fragment=22;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:icon
     */
    public static final int Preference_icon=23;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=24;
    /**
     * <p>
     * @attr description
     * Whether the Preference is visible. By default, this is set to true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:isPreferenceVisible
     */
    public static final int Preference_isPreferenceVisible=25;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:key
     */
    public static final int Preference_key=26;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:layout
     */
    public static final int Preference_layout=27;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:order
     */
    public static final int Preference_order=28;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:persistent
     */
    public static final int Preference_persistent=29;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:selectable
     */
    public static final int Preference_selectable=30;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:shouldDisableView
     */
    public static final int Preference_shouldDisableView=31;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:singleLineTitle
     */
    public static final int Preference_singleLineTitle=32;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summary
     */
    public static final int Preference_summary=33;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:title
     */
    public static final int Preference_title=34;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:widgetLayout
     */
    public static final int Preference_widgetLayout=35;
    /**
     * Attributes that can be used with a PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.android.phone:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f04002a
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceFragmentCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.android.phone:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f04002a
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_initialExpandedChildrenCount com.android.phone:initialExpandedChildrenCount}</code></td><td>The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden.</td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.android.phone:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_initialExpandedChildrenCount
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
      0x010101e7, 0x7f0400c4, 0x7f0400ec
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:initialExpandedChildrenCount
     */
    public static final int PreferenceGroup_initialExpandedChildrenCount=1;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=2;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.android.phone:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.android.phone:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
      0x0101011f, 0x01010120, 0x7f0400df, 0x7f0400e0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.android.phone:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.android.phone:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.android.phone:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.android.phone:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.android.phone:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextAppearance com.android.phone:preferenceCategoryTitleTextAppearance}</code></td><td>The preferred TextAppearance for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextColor com.android.phone:preferenceCategoryTitleTextColor}</code></td><td>The preferred color for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.android.phone:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.android.phone:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.android.phone:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.android.phone:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.android.phone:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.android.phone:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.android.phone:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.android.phone:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.android.phone:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.android.phone:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceCategoryTitleTextAppearance
     * @see #PreferenceTheme_preferenceCategoryTitleTextColor
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     */
    public static final int[] PreferenceTheme={
      0x7f04004c, 0x7f040072, 0x7f040095, 0x7f040098, 
      0x7f0400fb, 0x7f0400fc, 0x7f0400fd, 0x7f0400fe, 
      0x7f0400ff, 0x7f040100, 0x7f040101, 0x7f040102, 
      0x7f040103, 0x7f040104, 0x7f040117, 0x7f04013a, 
      0x7f04013b
    };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=4;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceCategoryTitleTextAppearance
     */
    public static final int PreferenceTheme_preferenceCategoryTitleTextAppearance=5;
    /**
     * <p>
     * @attr description
     * The preferred color for the title displayed in a PreferenceCategory.
     * If this is not specified by a developer, we use ?android:attr/colorAccent above
     * Lollipop, and ?attr/colorAccent below Lollipop (when using an AppCompat theme).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:preferenceCategoryTitleTextColor
     */
    public static final int PreferenceTheme_preferenceCategoryTitleTextColor=6;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=7;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=9;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=11;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=12;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=13;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=15;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=16;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.phone:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.phone:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f0400ee, 0x7f0400f1
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_clipToPadding android:clipToPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.phone:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.phone:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.phone:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.phone:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.phone:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.phone:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.phone:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.phone:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.phone:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_clipToPadding
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100eb, 0x010100f1, 0x7f0400a3, 
      0x7f0400a4, 0x7f0400a5, 0x7f0400a6, 0x7f0400a7, 
      0x7f0400cb, 0x7f040112, 0x7f040126, 0x7f04012c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#clipToPadding}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:clipToPadding
     */
    public static final int RecyclerView_android_clipToPadding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=7;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:layoutManager
     */
    public static final int RecyclerView_layoutManager=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:spanCount
     */
    public static final int RecyclerView_spanCount=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=11;
    /**
     * Attributes that can be used with a ResizingText.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ResizingText_resizing_text_min_size com.android.phone:resizing_text_min_size}</code></td><td></td></tr>
     * </table>
     * @see #ResizingText_resizing_text_min_size
     */
    public static final int[] ResizingText={
      0x7f040111
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#resizing_text_min_size}
     * attribute's value can be found in the {@link #ResizingText} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:resizing_text_min_size
     */
    public static final int ResizingText_resizing_text_min_size=0;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.phone:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.phone:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.phone:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.phone:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.phone:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.phone:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.phone:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.phone:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.phone:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.phone:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.phone:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.phone:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.phone:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f04004f, 0x7f04005e, 0x7f040069, 0x7f0400b7, 
      0x7f0400c0, 0x7f0400ca, 0x7f040108, 0x7f040109, 
      0x7f040113, 0x7f040114, 0x7f04012f, 0x7f040134, 
      0x7f04016c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.android.phone:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.android.phone:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.android.phone:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.android.phone:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_updatesContinuously com.android.phone:updatesContinuously}</code></td><td>Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     * @see #SeekBarPreference_updatesContinuously
     */
    public static final int[] SeekBarPreference={
      0x010100f2, 0x01010136, 0x7f040024, 0x7f0400e3, 
      0x7f040116, 0x7f040121, 0x7f040169
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.phone:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=5;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:updatesContinuously
     */
    public static final int SeekBarPreference_updatesContinuously=6;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.phone:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f0400f7
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.phone:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.phone:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.phone:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.phone:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.phone:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.phone:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.phone:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.phone:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.phone:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.phone:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.phone:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f040122, 
      0x7f04012a, 0x7f040138, 0x7f040139, 0x7f04013d, 
      0x7f04014e, 0x7f04014f, 0x7f040150, 0x7f040165, 
      0x7f040166, 0x7f040167
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.android.phone:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.android.phone:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.android.phone:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.android.phone:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.android.phone:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f040082, 0x7f040136, 0x7f040137, 
      0x7f04013e, 0x7f04013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.android.phone:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.android.phone:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.android.phone:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.android.phone:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.android.phone:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f040082, 0x7f040136, 0x7f040137, 
      0x7f04013e, 0x7f04013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.phone:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.android.phone:fontVariationSettings}</code></td><td>OpenType font variation settings, available after api 26.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.phone:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.android.phone:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x7f0400aa, 0x7f0400b3, 0x7f040140, 0x7f04014b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static final int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontFamily
     */
    public static final int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:fontVariationSettings
     */
    public static final int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.phone:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:textLocale
     */
    public static final int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a Theme_Dialpad.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_background com.android.phone:dialpad_background}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_delete_padding com.android.phone:dialpad_delete_padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_icon_tint com.android.phone:dialpad_icon_tint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_margin_style com.android.phone:dialpad_margin_style}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_separator_color com.android.phone:dialpad_separator_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_text_color com.android.phone:dialpad_text_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_text_color_primary com.android.phone:dialpad_text_color_primary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_text_color_secondary com.android.phone:dialpad_text_color_secondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_voicemail_tint com.android.phone:dialpad_voicemail_tint}</code></td><td></td></tr>
     * </table>
     * @see #Theme_Dialpad_dialpad_background
     * @see #Theme_Dialpad_dialpad_delete_padding
     * @see #Theme_Dialpad_dialpad_icon_tint
     * @see #Theme_Dialpad_dialpad_margin_style
     * @see #Theme_Dialpad_dialpad_separator_color
     * @see #Theme_Dialpad_dialpad_text_color
     * @see #Theme_Dialpad_dialpad_text_color_primary
     * @see #Theme_Dialpad_dialpad_text_color_secondary
     * @see #Theme_Dialpad_dialpad_voicemail_tint
     */
    public static final int[] Theme_Dialpad={
      0x7f040077, 0x7f040078, 0x7f040079, 0x7f04007b, 
      0x7f04007c, 0x7f04007d, 0x7f04007e, 0x7f04007f, 
      0x7f040080
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_background}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_background
     */
    public static final int Theme_Dialpad_dialpad_background=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_delete_padding}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:dialpad_delete_padding
     */
    public static final int Theme_Dialpad_dialpad_delete_padding=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_icon_tint}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_icon_tint
     */
    public static final int Theme_Dialpad_dialpad_icon_tint=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_margin_style}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:dialpad_margin_style
     */
    public static final int Theme_Dialpad_dialpad_margin_style=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_separator_color}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_separator_color
     */
    public static final int Theme_Dialpad_dialpad_separator_color=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_text_color}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_text_color
     */
    public static final int Theme_Dialpad_dialpad_text_color=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_text_color_primary}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_text_color_primary
     */
    public static final int Theme_Dialpad_dialpad_text_color_primary=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_text_color_secondary}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_text_color_secondary
     */
    public static final int Theme_Dialpad_dialpad_text_color_secondary=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#dialpad_voicemail_tint}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:dialpad_voicemail_tint
     */
    public static final int Theme_Dialpad_dialpad_voicemail_tint=8;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.phone:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.phone:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.phone:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.phone:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.phone:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.phone:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.phone:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.phone:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.phone:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.phone:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.phone:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.phone:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.android.phone:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.phone:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.phone:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.phone:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.phone:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.phone:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.phone:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.phone:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.phone:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.phone:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.phone:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.phone:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.phone:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.phone:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.phone:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.phone:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f040044, 0x7f040051, 
      0x7f040052, 0x7f040061, 0x7f040062, 0x7f040063, 
      0x7f040064, 0x7f040065, 0x7f040066, 0x7f0400dc, 
      0x7f0400dd, 0x7f0400de, 0x7f0400e2, 0x7f0400e5, 
      0x7f0400e6, 0x7f0400f7, 0x7f040130, 0x7f040131, 
      0x7f040132, 0x7f040156, 0x7f040157, 0x7f040158, 
      0x7f040159, 0x7f04015a, 0x7f04015b, 0x7f04015c, 
      0x7f04015d, 0x7f04015e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.phone:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:menu
     */
    public static final int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:navigationIcon
     */
    public static final int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:popupTheme
     */
    public static final int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:subtitle
     */
    public static final int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.phone:title
     */
    public static final int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:titleMargin
     */
    public static final int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.phone.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:titleTextColor
     */
    public static final int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.phone:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.phone:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.phone:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f0400ef, 0x7f0400f0, 
      0x7f04014c
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.phone:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.phone:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.phone:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.phone:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f04003a, 0x7f04003b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.phone:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.phone:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
  public static final class xml {
    public static final int accessibility_settings=0x7f120000;
    public static final int call_feature_setting=0x7f120001;
    public static final int callbarring_options=0x7f120002;
    public static final int callforward_options=0x7f120003;
    public static final int carrier_ss_string=0x7f120004;
    public static final int carrier_ss_string_850=0x7f120005;
    public static final int cdma_call_privacy=0x7f120006;
    public static final int choose_network=0x7f120007;
    public static final int data_usage_settings=0x7f120008;
    public static final int fdn_setting=0x7f120009;
    public static final int gsm_umts_additional_options=0x7f12000a;
    public static final int gsm_umts_call_options=0x7f12000b;
    public static final int phone_account_selection=0x7f12000c;
    public static final int phone_account_settings=0x7f12000d;
    public static final int sip_advanced_edit=0x7f12000e;
    public static final int sip_edit=0x7f12000f;
    public static final int sip_setting=0x7f120010;
    public static final int telephony_injection=0x7f120011;
    public static final int voicemail_settings=0x7f120012;
  }
}