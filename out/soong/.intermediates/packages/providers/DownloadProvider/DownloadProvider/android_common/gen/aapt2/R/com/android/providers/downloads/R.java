/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.providers.downloads;

public final class R {
  public static final class drawable {
    public static final int download_pause=0x7f010001;
    public static final int ic_launcher_background=0x7f010002;
    public static final int ic_launcher_foreground=0x7f010003;
  }
  public static final class mipmap {
    public static final int ic_launcher_download=0x7f020000;
  }
  public static final class plurals {
    /**
     * Phrase describing a time duration using hours [CHAR LIMIT=16]
     */
    public static final int duration_hours=0x7f030000;
    /**
     * Phrase describing a time duration using minutes [CHAR LIMIT=16]
     */
    public static final int duration_minutes=0x7f030001;
    /**
     * Phrase describing a time duration using seconds [CHAR LIMIT=16]
     */
    public static final int duration_seconds=0x7f030002;
    /**
     * Title summarizing active downloads. [CHAR LIMIT=32]
     */
    public static final int notif_summary_active=0x7f030003;
    /**
     * Title summarizing waiting downloads. [CHAR LIMIT=32]
     */
    public static final int notif_summary_waiting=0x7f030004;
  }
  public static final class string {
    /**
     * This is the name of the Download Manager application.
     */
    public static final int app_label=0x7f040000;
    /**
     * Text for button to cancel a download because it's too large to proceed over the mobile
     * network and the user does not want to queue it for Wi-Fi [CHAR LIMIT=25]
     */
    public static final int button_cancel_download=0x7f040001;
    /**
     * Text for button to manually manually pause all running downloads [CHAR LIMIT=25]
     */
    public static final int button_pause_download=0x7f040002;
    /**
     * Text for button to queue a download to start next time Wi-Fi is available [CHAR LIMIT=25]
     */
    public static final int button_queue_for_wifi=0x7f040003;
    /**
     * Text for button to manually resume all manually paused downloads [CHAR LIMIT=25]
     */
    public static final int button_resume_download=0x7f040004;
    /**
     * Text for button to start a download over the mobile connection now, even though it's over
     * the carrier-specified recommended maximum size for downloads over the mobile connection
     * [CHAR LIMIT=25]
     */
    public static final int button_start_now=0x7f040005;
    /**
     * Status indicating that the download has ended without completing successfully.  Appears for
     * an individual item in the download list.  [CHAR LIMIT=24]
     */
    public static final int download_error=0x7f040006;
    /**
     * Text for a toast appearing when a user clicks on a completed download, informing the user
     * that there is no application on the device that can open the file that was downloaded
     * [CHAR LIMIT=200]
     */
    public static final int download_no_application_title=0x7f040007;
    /**
     * Status indicating that the download has been paused to start in the future.  Appears for an
     * individual item in the download list.  [CHAR LIMIT=24]
     */
    public static final int download_paused=0x7f040008;
    /**
     * Representation of download progress percentage when paused. [CHAR LIMIT=24]
     */
    public static final int download_paused_percent=0x7f040009;
    /**
     * Status indicating that the download has been queued to start in the future.  Appears for an
     * individual item in the download list.  [CHAR LIMIT=24]
     */
    public static final int download_queued=0x7f04000a;
    /**
     * Time remaining until download is complete. [CHAR LIMIT=32]
     */
    public static final int download_remaining=0x7f04000b;
    /**
     * Status indicating that the system is currently downloading the file.  Appears for an
     * individual item in the download list.  [CHAR LIMIT=24]
     */
    public static final int download_running=0x7f04000c;
    /**
     * Representation of download progress percentage when running. [CHAR LIMIT=24]
     */
    public static final int download_running_percent=0x7f04000d;
    /**
     * This is the title that is used when displaying the notification
     * for a download that doesn't have a title associated with it.
     */
    public static final int download_unknown_title=0x7f04000e;
    /**
     * Title summarizing paused downloads. [CHAR LIMIT=32]
     */
    public static final int notif_summary_paused=0x7f04000f;
    /**
     * When a download completes, a notification is displayed, and this
     * string is used to indicate that the download successfully completed.
     * Note that such a download could have been initiated by a variety of
     * applications, including (but not limited to) the browser, an email
     * application, a content marketplace.
     */
    public static final int notification_download_complete=0x7f040010;
    /**
     * When a download completes, a notification is displayed, and this
     * string is used to indicate that the download failed.
     * Note that such a download could have been initiated by a variety of
     * applications, including (but not limited to) the browser, an email
     * application, a content marketplace.
     */
    public static final int notification_download_failed=0x7f040011;
    /**
     * When a download is paused because it's too large to download over a
     * mobile connection, and Wi-Fi is unavailable, this string is displayed in
     * the system notification for the running download, beneath the download
     * title and description.  Note that such a download could have been
     * initiated by a variety of applications, including (but not limited to)
     * the browser, an email application, a content marketplace.
     * [CHAR LIMIT=24]
     */
    public static final int notification_need_wifi_for_size=0x7f040012;
    /**
     * Notification shown when a download has been paused because a user policy
     * has blocked network access to applications running in background. [CHAR LIMIT=24]
     */
    public static final int notification_paused_in_background=0x7f040013;
    /**
     * The full sentence description for the permission to access all
     * downloads in the download manager, not just those owned by the calling user
     * [CHAR LIMIT=160]
     */
    public static final int permdesc_accessAllDownloads=0x7f040014;
    /**
     * The full sentence description for the permission to download files to
     * the download cache that can't be automatically deleted by the download
     * manager to free up space [CHAR LIMIT=160]
     */
    public static final int permdesc_downloadCacheNonPurgeable=0x7f040015;
    /**
     * This is the long description of a permission associated with the
     * Android Download Manager. It is displayed as part of the description
     * of any application that was granted that permission.
     * This specific permission allows an application to tell other
     * applications that their downloads have completed.
     */
    public static final int permdesc_downloadCompletedIntent=0x7f040016;
    /**
     * This is the long description of a permission associated with the
     * Android Download Manager. It is displayed as part of the description
     * of any application that was granted that permission.
     * This specific permission controls access to the Download Manager by
     * applications that initiate downloads.
     */
    public static final int permdesc_downloadManager=0x7f040017;
    /**
     * This is the long description of a permission associated with the
     * Android Download Manager. It is displayed as part of the description
     * of any application that was granted that permission.
     * This specific permission controls access to some advanced (and
     * dangerous) features from the Download Manager that are needed by
     * system applications but aren't necessary for regular applications
     * that just initiate plain downloads.
     */
    public static final int permdesc_downloadManagerAdvanced=0x7f040018;
    /**
     * The full sentence description for the permission to download files
     * through the download manager without any notification being shown to the
     * user [CHAR LIMIT=160]
     */
    public static final int permdesc_downloadWithoutNotification=0x7f040019;
    /**
     * The label for the permission to access all downloads in the download
     * manager, not just those owned by the calling user [CHAR LIMIT=50]
     */
    public static final int permlab_accessAllDownloads=0x7f04001a;
    /**
     * The label for the permission to download files to the download cache
     * that can't be automatically deleted by the download manager to free up
     * space [CHAR LIMIT=50]
     */
    public static final int permlab_downloadCacheNonPurgeable=0x7f04001b;
    public static final int permlab_downloadCompletedIntent=0x7f04001c;
    /**
     * This is the short description of a permission associated with the
     * Android Download Manager. It is displayed as part of the description
     * of any application that was granted that permission.
     * This specific permission controls access to the Download Manager by
     * applications that initiate downloads.
     */
    public static final int permlab_downloadManager=0x7f04001d;
    /**
     * This is the short description of a permission associated with the
     * Android Download Manager. It is displayed as part of the description
     * of any application that was granted that permission.
     * This specific permission controls access to some advanced (and
     * dangerous) features from the Download Manager that are needed by
     * system applications but aren't necessary for regular applications
     * that just initiate plain downloads.
     */
    public static final int permlab_downloadManagerAdvanced=0x7f04001e;
    /**
     * The label for the permission to download files through the download
     * manager without any notification being shown to the user [CHAR LIMIT=50]
     */
    public static final int permlab_downloadWithoutNotification=0x7f04001f;
    /**
     * Label describing Downloads as a storage root [CHAR LIMIT=32]
     */
    public static final int root_downloads=0x7f040020;
    /**
     * Short description shown client applications describing storage location
     */
    public static final int storage_description=0x7f040021;
    /**
     * Notification text containing download duration left and download speed
     */
    public static final int text_download_speed=0x7f040022;
    /**
     * Text for dialog when a download exceeds the carrier-specified recommended maximum size of
     * downloads over the mobile network, and the user may choose to start the download over mobile
     * anyway or to queue for download to start next time a Wi-Fi connection is available [CHAR
     * LIMIT=200]
     */
    public static final int wifi_recommended_body=0x7f040023;
    /**
     * Title for dialog when a download exceeds the carrier-specified recommended maximum size of
     * downloads over the mobile network, and the user may choose to start the download over mobile
     * anyway or to queue for download to start next time a Wi-Fi connection is available [CHAR
     * LIMIT=50]
     */
    public static final int wifi_recommended_title=0x7f040024;
    /**
     * Text for dialog when a download exceeds the carrier-specified maximum size of downloads
     * over the mobile network and Wi-Fi is required.  The user has the choice to either queue the
     * download to start next time Wi-Fi is available or cancel the download altogether. [CHAR
     * LIMIT=200]
     */
    public static final int wifi_required_body=0x7f040025;
    /**
     * Title for dialog when a download exceeds the carrier-specified maximum size of downloads
     * over the mobile network and Wi-Fi is required.  The user has the choice to either queue the
     * download to start next time Wi-Fi is available or cancel the download altogether. [CHAR
     * LIMIT=50]
     */
    public static final int wifi_required_title=0x7f040026;
  }
  public static final class style {
    public static final int Theme_Translucent=0x7f050000;
  }
}