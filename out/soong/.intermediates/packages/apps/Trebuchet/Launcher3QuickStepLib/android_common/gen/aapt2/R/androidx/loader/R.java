/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package androidx.loader;

public final class R {
  public static final class anim {
    public static int abc_fade_in=0x00000000;
    public static int abc_fade_out=0x00000000;
    public static int abc_grow_fade_in_from_bottom=0x00000000;
    public static int abc_popup_enter=0x00000000;
    public static int abc_popup_exit=0x00000000;
    public static int abc_shrink_fade_out_from_bottom=0x00000000;
    public static int abc_slide_in_bottom=0x00000000;
    public static int abc_slide_in_top=0x00000000;
    public static int abc_slide_out_bottom=0x00000000;
    public static int abc_slide_out_top=0x00000000;
    public static int abc_tooltip_enter=0x00000000;
    public static int abc_tooltip_exit=0x00000000;
    public static int btn_checkbox_to_checked_box_inner_merged_animation=0x00000000;
    public static int btn_checkbox_to_checked_box_outer_merged_animation=0x00000000;
    public static int btn_checkbox_to_checked_icon_null_animation=0x00000000;
    public static int btn_checkbox_to_unchecked_box_inner_merged_animation=0x00000000;
    public static int btn_checkbox_to_unchecked_check_path_merged_animation=0x00000000;
    public static int btn_checkbox_to_unchecked_icon_null_animation=0x00000000;
    public static int btn_radio_to_off_mtrl_dot_group_animation=0x00000000;
    public static int btn_radio_to_off_mtrl_ring_outer_animation=0x00000000;
    public static int btn_radio_to_off_mtrl_ring_outer_path_animation=0x00000000;
    public static int btn_radio_to_on_mtrl_dot_group_animation=0x00000000;
    public static int btn_radio_to_on_mtrl_ring_outer_animation=0x00000000;
    public static int btn_radio_to_on_mtrl_ring_outer_path_animation=0x00000000;
    public static int design_bottom_sheet_slide_in=0x00000000;
    public static int design_bottom_sheet_slide_out=0x00000000;
    public static int design_snackbar_in=0x00000000;
    public static int design_snackbar_out=0x00000000;
    public static int fragment_fast_out_extra_slow_in=0x00000000;
    public static int mtrl_bottom_sheet_slide_in=0x00000000;
    public static int mtrl_bottom_sheet_slide_out=0x00000000;
    public static int mtrl_card_lowers_interpolator=0x00000000;
    public static int no_anim=0x00000000;
    public static int task_open_enter=0x00000000;
  }
  public static final class animator {
    public static int all_apps_fastscroll_icon_anim=0x00000000;
    public static int design_appbar_state_list_animator=0x00000000;
    public static int design_fab_hide_motion_spec=0x00000000;
    public static int design_fab_show_motion_spec=0x00000000;
    public static int discovery_bounce=0x00000000;
    public static int fragment_close_enter=0x00000000;
    public static int fragment_close_exit=0x00000000;
    public static int fragment_fade_enter=0x00000000;
    public static int fragment_fade_exit=0x00000000;
    public static int fragment_open_enter=0x00000000;
    public static int fragment_open_exit=0x00000000;
    public static int linear_indeterminate_line1_head_interpolator=0x00000000;
    public static int linear_indeterminate_line1_tail_interpolator=0x00000000;
    public static int linear_indeterminate_line2_head_interpolator=0x00000000;
    public static int linear_indeterminate_line2_tail_interpolator=0x00000000;
    public static int mtrl_btn_state_list_anim=0x00000000;
    public static int mtrl_btn_unelevated_state_list_anim=0x00000000;
    public static int mtrl_card_state_list_anim=0x00000000;
    public static int mtrl_chip_state_list_anim=0x00000000;
    public static int mtrl_extended_fab_change_size_collapse_motion_spec=0x00000000;
    public static int mtrl_extended_fab_change_size_expand_motion_spec=0x00000000;
    public static int mtrl_extended_fab_hide_motion_spec=0x00000000;
    public static int mtrl_extended_fab_show_motion_spec=0x00000000;
    public static int mtrl_extended_fab_state_list_animator=0x00000000;
    public static int mtrl_fab_hide_motion_spec=0x00000000;
    public static int mtrl_fab_show_motion_spec=0x00000000;
    public static int mtrl_fab_transformation_sheet_collapse_spec=0x00000000;
    public static int mtrl_fab_transformation_sheet_expand_spec=0x00000000;
    public static int overview_button_anim=0x00000000;
  }
  public static final class array {
    public static int dynamic_resources=0x00000000;
    public static int filtered_components=0x00000000;
    /**
     * Activities which block home gesture
     */
    public static int gesture_blocking_activities=0x00000000;
  }
  public static final class attr {
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int a=0x00000000;
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarDivider=0x00000000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarItemBackground=0x00000000;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarPopupTheme=0x00000000;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int actionBarSize=0x00000000;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarSplitStyle=0x00000000;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarTabBarStyle=0x00000000;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarTabStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarTabTextStyle=0x00000000;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarTheme=0x00000000;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionBarWidgetTheme=0x00000000;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionButtonStyle=0x00000000;
    /**
     * Height to use for action divider in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int actionDividerHeight=0x00000000;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionDropDownStyle=0x00000000;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionLayout=0x00000000;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionMenuTextAppearance=0x00000000;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int actionMenuTextColor=0x00000000;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeBackground=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeCloseButtonStyle=0x00000000;
    /**
     * Content description to use for the close action mode button
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int actionModeCloseContentDescription=0x00000000;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeCloseDrawable=0x00000000;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeCopyDrawable=0x00000000;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeCutDrawable=0x00000000;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeFindDrawable=0x00000000;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModePasteDrawable=0x00000000;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModePopupWindowStyle=0x00000000;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeSelectAllDrawable=0x00000000;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeShareDrawable=0x00000000;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeSplitBackground=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeStyle=0x00000000;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeTheme=0x00000000;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionModeWebSearchDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionOverflowButtonStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int actionOverflowMenuStyle=0x00000000;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int actionProviderClass=0x00000000;
    /**
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int actionTextColorAlpha=0x00000000;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int actionViewClass=0x00000000;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int activityChooserViewStyle=0x00000000;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int adjustable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int alertDialogButtonGroupStyle=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int alertDialogCenterButtons=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int alertDialogStyle=0x00000000;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int alertDialogTheme=0x00000000;
    /**
     * allAppsCellSpacingDps defaults to borderSpaceDps, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int allAppsCellSpacingDps=0x00000000;
    /**
     * allAppsIconSize defaults to iconSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int allAppsIconSize=0x00000000;
    /**
     * allAppsIconTextSize defaults to iconTextSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int allAppsIconTextSize=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int allAppsNavBarScrimColor=0x00000000;
    /**
     * Attributes used for launcher theme
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int allAppsScrimColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int allAppsTheme=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int allappsHeaderProtectionColor=0x00000000;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int allowDividerAbove=0x00000000;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int allowDividerAfterLastItem=0x00000000;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int allowDividerBelow=0x00000000;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int allowStacking=0x00000000;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int alpha=0x00000000;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static int alphabeticModifiers=0x00000000;
    /**
     * If true, keep the app widget under its app listing in addition to the widget category
     * in the widget picker. Defaults to false if not specified.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int alsoKeepInApp=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int altSrc=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int ambientShadowBlur=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int ambientShadowColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int animate_relativeTo=0x00000000;
    /**
     * Sets the enter and exit animations for a Snackbar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     */
    public static int animationMode=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int appBarLayoutStyle=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int appIconSize=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int applyMotionScene=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>2</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>1</td><td></td></tr>
     * <tr><td>startVertical</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int arcMode=0x00000000;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int arrowHeadLength=0x00000000;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int arrowShaftLength=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int attributeName=0x00000000;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int autoCompleteTextViewStyle=0x00000000;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int autoSizeMaxTextSize=0x00000000;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int autoSizeMinTextSize=0x00000000;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int autoSizePresetSizes=0x00000000;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int autoSizeStepGranularity=0x00000000;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static int autoSizeTextType=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>animateToEnd</td><td>4</td><td></td></tr>
     * <tr><td>animateToStart</td><td>3</td><td></td></tr>
     * <tr><td>jumpToEnd</td><td>2</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int autoTransition=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int b=0x00000000;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int background=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int backgroundColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int backgroundInsetBottom=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int backgroundInsetEnd=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int backgroundInsetStart=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int backgroundInsetTop=0x00000000;
    /**
     * Alpha level for the color that is overlaid on top of the background color. Ignored if
     * backgroundTint is set.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int backgroundOverlayColorAlpha=0x00000000;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int backgroundSplit=0x00000000;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int backgroundStacked=0x00000000;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int backgroundTint=0x00000000;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int backgroundTintMode=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     */
    public static int badgeGravity=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int badgeStyle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int badgeTextColor=0x00000000;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int barLength=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int barrierAllowsGoneWidgets=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static int barrierDirection=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int barrierMargin=0x00000000;
    /**
     * Whether the FAB should automatically hide when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int behavior_autoHide=0x00000000;
    /**
     * Whether the extended FAB should automatically shrink when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int behavior_autoShrink=0x00000000;
    /**
     * Whether this bottom sheet is draggable. If not, the app will have to supply different
     * means to expand and collapse the sheet
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int behavior_draggable=0x00000000;
    /**
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int behavior_expandedOffset=0x00000000;
    /**
     * Whether height of expanded sheet wraps content or not
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int behavior_fitToContents=0x00000000;
    /**
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int behavior_halfExpandedRatio=0x00000000;
    /**
     * Whether this bottom sheet can be hidden by dragging it further downwards
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int behavior_hideable=0x00000000;
    /**
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int behavior_overlapTop=0x00000000;
    /**
     * The height of the bottom sheet when it is collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     */
    public static int behavior_peekHeight=0x00000000;
    /**
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     */
    public static int behavior_saveFlags=0x00000000;
    /**
     * Skip the collapsed state once expanded; no effect unless it is hideable
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int behavior_skipCollapsed=0x00000000;
    /**
     * space to be used horizontally and vertically
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int borderSpaceDps=0x00000000;
    /**
     * space to the right of the cell, defaults to borderSpaceDps if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int borderSpaceHorizontalDps=0x00000000;
    /**
     * space below the cell, defaults to borderSpaceDps if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int borderSpaceVerticalDps=0x00000000;
    /**
     * The width of the border around the FAB.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int borderWidth=0x00000000;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int borderlessButtonStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int bottomAppBarStyle=0x00000000;
    /**
     * Padding to the end edge of the bottom divider in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int bottomDividerEndPadding=0x00000000;
    /**
     * Padding to the start edge of the bottom divider in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int bottomDividerStartPadding=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int bottomNavigationStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int bottomSheetDialogTheme=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int bottomSheetStyle=0x00000000;
    /**
     * The color to use for the box's background color when in filled box mode.
     * If a non-stateful color resource is specified, default colors will be used for the hover
     * and disabled states.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int boxBackgroundColor=0x00000000;
    /**
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     */
    public static int boxBackgroundMode=0x00000000;
    /**
     * Value to use for the EditText's collapsed top padding in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxCollapsedPaddingTop=0x00000000;
    /**
     * The value to use for the box's bottom end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxCornerRadiusBottomEnd=0x00000000;
    /**
     * The value to use for the box's bottom start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxCornerRadiusBottomStart=0x00000000;
    /**
     * The value to use for the box's top end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxCornerRadiusTopEnd=0x00000000;
    /**
     * The value to use for the box's top start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxCornerRadiusTopStart=0x00000000;
    /**
     * The color to use for the box's stroke when in outline box mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int boxStrokeColor=0x00000000;
    /**
     * The color to use for the box's stroke in outline box mode when an error
     * is being displayed. If not set, it defaults to errorTextColor if on
     * error state, or to counterOverflowTextColor if on overflow state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int boxStrokeErrorColor=0x00000000;
    /**
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxStrokeWidth=0x00000000;
    /**
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int boxStrokeWidthFocused=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int brightness=0x00000000;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonBarButtonStyle=0x00000000;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonBarNegativeButtonStyle=0x00000000;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonBarNeutralButtonStyle=0x00000000;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonBarPositiveButtonStyle=0x00000000;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonBarStyle=0x00000000;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonCompat=0x00000000;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static int buttonGravity=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int buttonIconDimen=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonPanelSideLayout=0x00000000;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonStyle=0x00000000;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int buttonStyleSmall=0x00000000;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int buttonTint=0x00000000;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int buttonTintMode=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int c=0x00000000;
    /**
     * If set, this display option is used to determine the default grid
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int canBeDefault=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int canThumbDetach=0x00000000;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int cardBackgroundColor=0x00000000;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int cardCornerRadius=0x00000000;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int cardElevation=0x00000000;
    /**
     * Foreground color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int cardForegroundColor=0x00000000;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int cardMaxElevation=0x00000000;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int cardPreventCornerOverlap=0x00000000;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int cardUseCompatPadding=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int cardViewStyle=0x00000000;
    /**
     * The category of an app widget provider. Defaults to -1 if not specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int category=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int centerVertically=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int chainUseRtl=0x00000000;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int checkBoxPreferenceStyle=0x00000000;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int checkboxStyle=0x00000000;
    /**
     * The id of the child button that should be checked by default within this button group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int checkedButton=0x00000000;
    /**
     * The id of the child chip that should be checked by default within this chip group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int checkedChip=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int checkedIcon=0x00000000;
    /**
     * Deprecated. Use checkedIconVisible instead
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int checkedIconEnabled=0x00000000;
    /**
     * Check icon margin for Checkable Cards
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int checkedIconMargin=0x00000000;
    /**
     * Check icon size for Checkable Cards
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int checkedIconSize=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int checkedIconTint=0x00000000;
    /**
     * Whether to show the checked icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int checkedIconVisible=0x00000000;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int checkedTextViewStyle=0x00000000;
    /**
     * Background color to apply to the chip.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int chipBackgroundColor=0x00000000;
    /**
     * Corner radius to apply to the chip's shape.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipCornerRadius=0x00000000;
    /**
     * Padding at the end of the chip, after the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipEndPadding=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int chipGroupStyle=0x00000000;
    /**
     * Icon drawable to display at the start of the chip.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int chipIcon=0x00000000;
    /**
     * Deprecated. Use chipIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int chipIconEnabled=0x00000000;
    /**
     * Size of the chip's icon and checked icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipIconSize=0x00000000;
    /**
     * Tint to apply to the chip icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int chipIconTint=0x00000000;
    /**
     * Whether to show the chip icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int chipIconVisible=0x00000000;
    /**
     * Min height to apply to the chip. Total height includes stroke width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipMinHeight=0x00000000;
    /**
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipMinTouchTargetSize=0x00000000;
    /**
     * Horizontal and vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipSpacing=0x00000000;
    /**
     * Horizontal spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipSpacingHorizontal=0x00000000;
    /**
     * Vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipSpacingVertical=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int chipStandaloneStyle=0x00000000;
    /**
     * Padding at the start of the chip, before the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipStartPadding=0x00000000;
    /**
     * Stroke color to apply to the chip's outline.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int chipStrokeColor=0x00000000;
    /**
     * Stroke width to apply to the chip's outline.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int chipStrokeWidth=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int chipStyle=0x00000000;
    /**
     * Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int chipSurfaceColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int circleRadius=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int circularProgressIndicatorStyle=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int className=0x00000000;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>jumpToEnd</td><td>100</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1000</td><td></td></tr>
     * <tr><td>toggle</td><td>11</td><td></td></tr>
     * <tr><td>transitionToEnd</td><td>1</td><td></td></tr>
     * <tr><td>transitionToStart</td><td>10</td><td></td></tr>
     * </table>
     */
    public static int clickAction=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int clockFaceBackgroundColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int clockHandColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int clockIcon=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int clockNumberTextColor=0x00000000;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int closeIcon=0x00000000;
    /**
     * Deprecated. Use closeIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int closeIconEnabled=0x00000000;
    /**
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int closeIconEndPadding=0x00000000;
    /**
     * Size of the chip's close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int closeIconSize=0x00000000;
    /**
     * Padding at the start of the close icon, after the text. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int closeIconStartPadding=0x00000000;
    /**
     * Tint to apply to the chip's close icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int closeIconTint=0x00000000;
    /**
     * Whether to show the close icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int closeIconVisible=0x00000000;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int closeItemLayout=0x00000000;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int collapseContentDescription=0x00000000;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int collapseIcon=0x00000000;
    /**
     * FAB size when collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int collapsedSize=0x00000000;
    /**
     * Specifies how the title should be positioned when collapsed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static int collapsedTitleGravity=0x00000000;
    /**
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int collapsedTitleTextAppearance=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int collapsingToolbarLayoutStyle=0x00000000;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int color=0x00000000;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorAccent=0x00000000;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorBackgroundFloating=0x00000000;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorButtonNormal=0x00000000;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorControlActivated=0x00000000;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorControlHighlight=0x00000000;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorControlNormal=0x00000000;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorError=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int colorOnBackground=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorOnError=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorOnPrimary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorOnPrimarySurface=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorOnSecondary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorOnSurface=0x00000000;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorPrimary=0x00000000;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorPrimaryDark=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorPrimarySurface=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorPrimaryVariant=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorSecondary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorSecondaryVariant=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorSurface=0x00000000;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int colorSwitchThumbNormal=0x00000000;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int commitIcon=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int constraintSet=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int constraintSetEnd=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int constraintSetStart=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int constraint_referenced_ids=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int constraints=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int container=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>hotseat</td><td>1</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int containerType=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int content=0x00000000;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int contentDescription=0x00000000;
    /**
     * Padding to the end edge of the content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentEndPadding=0x00000000;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentInsetEnd=0x00000000;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentInsetEndWithActions=0x00000000;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentInsetLeft=0x00000000;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentInsetRight=0x00000000;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentInsetStart=0x00000000;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentInsetStartWithNavigation=0x00000000;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPadding=0x00000000;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPaddingBottom=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPaddingEnd=0x00000000;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPaddingLeft=0x00000000;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPaddingRight=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPaddingStart=0x00000000;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentPaddingTop=0x00000000;
    /**
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int contentScrim=0x00000000;
    /**
     * Padding to the start edge of the content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int contentStartPadding=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int contrast=0x00000000;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int controlBackground=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int coordinatorLayoutStyle=0x00000000;
    /**
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int cornerFamily=0x00000000;
    /**
     * Bottom left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int cornerFamilyBottomLeft=0x00000000;
    /**
     * Bottom right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int cornerFamilyBottomRight=0x00000000;
    /**
     * Top left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int cornerFamilyTopLeft=0x00000000;
    /**
     * Top right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int cornerFamilyTopRight=0x00000000;
    /**
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int cornerRadius=0x00000000;
    /**
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int cornerSize=0x00000000;
    /**
     * Bottom left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int cornerSizeBottomLeft=0x00000000;
    /**
     * Bottom right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int cornerSizeBottomRight=0x00000000;
    /**
     * Top left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int cornerSizeTopLeft=0x00000000;
    /**
     * Top right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int cornerSizeTopRight=0x00000000;
    /**
     * Whether the layout is laid out as if the character counter will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int counterEnabled=0x00000000;
    /**
     * The max length to display in the character counter.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int counterMaxLength=0x00000000;
    /**
     * TextAppearance of the character counter when the text is longer than the max.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int counterOverflowTextAppearance=0x00000000;
    /**
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int counterOverflowTextColor=0x00000000;
    /**
     * TextAppearance of the character counter.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int counterTextAppearance=0x00000000;
    /**
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int counterTextColor=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int crossfade=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int currentState=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int curveFit=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int customBoolean=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int customColorDrawableValue=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int customColorValue=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int customDimension=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int customFloatValue=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int customIcon=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int customIntegerValue=0x00000000;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int customNavigationLayout=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int customPixelDimension=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int customStringValue=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int darkTintColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dayInvalidStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int daySelectedStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dayStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dayTodayStyle=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int dbFile=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int defaultDuration=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int defaultLayoutId=0x00000000;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int defaultQueryHint=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int defaultSplitDisplayLayoutId=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int defaultState=0x00000000;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int defaultValue=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int deltaPolarAngle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int deltaPolarRadius=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int demoModeLayoutId=0x00000000;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int dependency=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int deriveConstraintsFrom=0x00000000;
    /**
     * By default all categories are enabled
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multi_display</td><td>4</td><td>Enable on multi display devices only</td></tr>
     * <tr><td>phone</td><td>1</td><td>Enable on phone only</td></tr>
     * <tr><td>tablet</td><td>2</td><td>Enable on tablets only</td></tr>
     * </table>
     */
    public static int deviceCategory=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int devicePaddingId=0x00000000;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int dialogCornerRadius=0x00000000;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dialogIcon=0x00000000;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dialogLayout=0x00000000;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int dialogMessage=0x00000000;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dialogPreferenceStyle=0x00000000;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int dialogPreferredPadding=0x00000000;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dialogTheme=0x00000000;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int dialogTitle=0x00000000;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int disableDependentsState=0x00000000;
    /**
     * Control whether RecyclerView item animator is disable or not, true for disable
     * otherwise enable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int disableRecyclerViewItemAnimator=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int disabledIconAlpha=0x00000000;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int displayOptions=0x00000000;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int divider=0x00000000;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dividerHorizontal=0x00000000;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int dividerPadding=0x00000000;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dividerVertical=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dragDown</td><td>1</td><td></td></tr>
     * <tr><td>dragEnd</td><td>5</td><td></td></tr>
     * <tr><td>dragLeft</td><td>2</td><td></td></tr>
     * <tr><td>dragRight</td><td>3</td><td></td></tr>
     * <tr><td>dragStart</td><td>4</td><td></td></tr>
     * <tr><td>dragUp</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int dragDirection=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int dragScale=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     */
    public static int drawPath=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawableBottomCompat=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawableEndCompat=0x00000000;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawableLeftCompat=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawableRightCompat=0x00000000;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int drawableSize=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawableStartCompat=0x00000000;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int drawableTint=0x00000000;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int drawableTintMode=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawableTopCompat=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawerArrowStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int drawerLayoutStyle=0x00000000;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dropDownListViewStyle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int dropTargetHoverTextColor=0x00000000;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int dropdownListPreferredItemHeight=0x00000000;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int dropdownPreferenceStyle=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int duration=0x00000000;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int editTextBackground=0x00000000;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int editTextColor=0x00000000;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int editTextPreferenceStyle=0x00000000;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int editTextStyle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int eduHalfSheetBGColor=0x00000000;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int elevation=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int elevationOverlayColor=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int elevationOverlayEnabled=0x00000000;
    /**
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int enableCopying=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int enableEdgeToEdge=0x00000000;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int enabled=0x00000000;
    /**
     * Whether the end icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int endIconCheckable=0x00000000;
    /**
     * Text to set as the content description for the end icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int endIconContentDescription=0x00000000;
    /**
     * Drawable to use for the end icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int endIconDrawable=0x00000000;
    /**
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     */
    public static int endIconMode=0x00000000;
    /**
     * Tint color to use for the end icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int endIconTint=0x00000000;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int endIconTintMode=0x00000000;
    /**
     * Padding to the end edge of the collection of items shown at the end of the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int endItemEndPadding=0x00000000;
    /**
     * Padding to the start edge of the collection of items shown at the end of the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int endItemStartPadding=0x00000000;
    /**
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int enforceMaterialTheme=0x00000000;
    /**
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int enforceTextAppearance=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int ensureMinTouchTargetSize=0x00000000;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int entries=0x00000000;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int entryValues=0x00000000;
    /**
     * Text to set as the content description for the error view.
     * Should be set when the error message has special characters that a
     * screen reader is not able to announce properly.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int errorContentDescription=0x00000000;
    /**
     * Whether the layout is laid out as if an error will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int errorEnabled=0x00000000;
    /**
     * End icon to be shown when an error is displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int errorIconDrawable=0x00000000;
    /**
     * Tint color to use for the error icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int errorIconTint=0x00000000;
    /**
     * Blending mode used to apply the error icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int errorIconTintMode=0x00000000;
    /**
     * TextAppearance of any error message displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int errorTextAppearance=0x00000000;
    /**
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int errorTextColor=0x00000000;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int expandActivityOverflowButtonDrawable=0x00000000;
    /**
     * Removes the height restriction of slices in MODE_LARGE. If the slice
     * is smaller than the available height, wrap_content decides whether the slice takes
     * up the entire height or only the required height. If the slice is bigger than
     * the available height, the height mode decides whether the slice fills the height
     * (height mode AT_MOST/EXACTLY), or expands to fit all items (height mode UNSPECIFIED).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int expandToAvailableHeight=0x00000000;
    /**
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int expanded=0x00000000;
    /**
     * Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int expandedHintEnabled=0x00000000;
    /**
     * Specifies how the title should be positioned when expanded.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static int expandedTitleGravity=0x00000000;
    /**
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int expandedTitleMargin=0x00000000;
    /**
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int expandedTitleMarginBottom=0x00000000;
    /**
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int expandedTitleMarginEnd=0x00000000;
    /**
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int expandedTitleMarginStart=0x00000000;
    /**
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int expandedTitleMarginTop=0x00000000;
    /**
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int expandedTitleTextAppearance=0x00000000;
    /**
     * Motion spec for extend animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int extendMotionSpec=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int extendedFloatingActionButtonStyle=0x00000000;
    /**
     * Whether extra height should be added when the title text spans across
     * multiple lines. Experimental Feature.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int extraMultilineHeightEnabled=0x00000000;
    /**
     * The alignment of the fab relative to the BottomAppBar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     */
    public static int fabAlignmentMode=0x00000000;
    /**
     * The animation mode that should be used when the fab animates between alignment modes.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     */
    public static int fabAnimationMode=0x00000000;
    /**
     * The margin between the semi-circular cradle for the fab and the fab.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int fabCradleMargin=0x00000000;
    /**
     * The radius of the rounded corners on each side of the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int fabCradleRoundedCornerRadius=0x00000000;
    /**
     * The vertical offset between the fab from the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int fabCradleVerticalOffset=0x00000000;
    /**
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int fabCustomSize=0x00000000;
    /**
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     */
    public static int fabSize=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int fastScrollEnabled=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollHorizontalThumbDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollHorizontalTrackDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollVerticalThumbDrawable=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fastScrollVerticalTrackDrawable=0x00000000;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int firstBaselineToTopHeight=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int floatingActionButtonStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int flow_firstHorizontalBias=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int flow_firstHorizontalStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int flow_firstVerticalBias=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int flow_firstVerticalStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int flow_horizontalAlign=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int flow_horizontalBias=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int flow_horizontalGap=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int flow_horizontalStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int flow_lastHorizontalBias=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int flow_lastHorizontalStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int flow_lastVerticalBias=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int flow_lastVerticalStyle=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int flow_maxElementsWrap=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int flow_padding=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int flow_verticalAlign=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int flow_verticalBias=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int flow_verticalGap=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int flow_verticalStyle=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int flow_wrapMode=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderBackgroundColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderDotColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderHintColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderIconBorderColor=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int folderIconRadius=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int folderItems=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderPaginationColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderPreviewColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int folderTextColor=0x00000000;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int font=0x00000000;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontFamily=0x00000000;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderAuthority=0x00000000;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int fontProviderCerts=0x00000000;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static int fontProviderFetchStrategy=0x00000000;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static int fontProviderFetchTimeout=0x00000000;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderPackage=0x00000000;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderQuery=0x00000000;
    /**
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontProviderSystemFontFamily=0x00000000;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int fontStyle=0x00000000;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fontVariationSettings=0x00000000;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int fontWeight=0x00000000;
    /**
     * Whether the system window inset top should be applied regardless of
     * what the layout_height is set to. Experimental Feature.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int forceApplySystemWindowInsetTop=0x00000000;
    /**
     * Do not expose publicly, used by ForegroundLinearLayout but never set by any style.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int foregroundInsidePadding=0x00000000;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int fragment=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int framePosition=0x00000000;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int gapBetweenBars=0x00000000;
    /**
     * Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above. Value is false (insets respected) by default.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int gestureInsetBottomIgnored=0x00000000;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int goIcon=0x00000000;
    /**
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the bottom of the grid row in
     * this situation.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int gridBottomPadding=0x00000000;
    /**
     * Text size to use for the subtitle text in a grid row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int gridSubtitleSize=0x00000000;
    /**
     * Vertical padding to use between title text and subtitle text in a grid cell.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int gridTextVerticalPadding=0x00000000;
    /**
     * Text size to use for title text in a grid row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int gridTitleSize=0x00000000;
    /**
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the top of the grid row in
     * this situation.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int gridTopPadding=0x00000000;
    /**
     * The color of the slider's halo.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int haloColor=0x00000000;
    /**
     * The radius of the halo.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int haloRadius=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int headerLayout=0x00000000;
    /**
     * Text size to use for subtitle text in the header of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int headerSubtitleSize=0x00000000;
    /**
     * Vertical padding to use between header title text and header subtitle text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int headerTextVerticalPadding=0x00000000;
    /**
     * Text size to use for title text in the header of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int headerTitleSize=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int height=0x00000000;
    /**
     * The text to display as helper text underneath the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int helperText=0x00000000;
    /**
     * Whether the layout's helper text functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int helperTextEnabled=0x00000000;
    /**
     * TextAppearance of the helper text displayed underneath the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int helperTextTextAppearance=0x00000000;
    /**
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int helperTextTextColor=0x00000000;
    /**
     * The animation behavior to hide the indicator and track.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Collapses from the top edge to the bottom edge for the linear type;
     * collapses from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; disappears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Collapses from the bottom edge to the top edge for the linear type;
     * collapses from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     */
    public static int hideAnimationBehavior=0x00000000;
    /**
     * Hide the slice's header row unless the slice only has a single row. Note that if
     * the slice doesn't have an explicit header row, the first row is considered the header row.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int hideHeaderRow=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int hideMotionSpec=0x00000000;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int hideOnContentScroll=0x00000000;
    /**
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int hideOnScroll=0x00000000;
    /**
     * Whether to animate hint state changes.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int hintAnimationEnabled=0x00000000;
    /**
     * Whether the layout's floating label functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int hintEnabled=0x00000000;
    /**
     * TextAppearance of the hint in the collapsed floating label.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int hintTextAppearance=0x00000000;
    /**
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int hintTextColor=0x00000000;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int homeAsUpIndicator=0x00000000;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int homeLayout=0x00000000;
    /**
     * Margin on left and right of the workspace when GridDisplayOption#isScalable is true
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int horizontalMargin=0x00000000;
    /**
     * Offset moves the badge towards the center of its anchor.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int horizontalOffset=0x00000000;
    /**
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int hoveredFocusedTranslationZ=0x00000000;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int icon=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all_apps</td><td>1</td><td></td></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>search_result_small</td><td>7</td><td></td></tr>
     * <tr><td>search_result_tall</td><td>6</td><td></td></tr>
     * <tr><td>shortcut_popup</td><td>4</td><td></td></tr>
     * <tr><td>taskbar</td><td>5</td><td></td></tr>
     * <tr><td>widget_section</td><td>3</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int iconDisplay=0x00000000;
    /**
     * Padding at the end of the icon, before the text. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int iconEndPadding=0x00000000;
    /**
     * Specifies how the icon should be positioned on the X axis.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textTop</td><td>20</td><td>Push the icon to the top of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>top</td><td>10</td><td>Push the icon to the top of the button.</td></tr>
     * </table>
     */
    public static int iconGravity=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int iconImageSize=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int iconOnlyShortcutColor=0x00000000;
    /**
     * Padding between icon and button text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int iconPadding=0x00000000;
    /**
     * Size of icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int iconSize=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int iconSizeOverride=0x00000000;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int iconSpaceReserved=0x00000000;
    /**
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int iconStartPadding=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int iconTextSize=0x00000000;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int iconTint=0x00000000;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int iconTintMode=0x00000000;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int iconifiedByDefault=0x00000000;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int imageButtonStyle=0x00000000;
    /**
     * The corner radius to be applied to each corner of large images.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int imageCornerRadius=0x00000000;
    /**
     * Size of small images in a slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int imageSize=0x00000000;
    /**
     * The animation style of the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>contiguous</td><td>0</td><td>The track will be filled with three adjacent segments in iterative different colors.
     * This type is only available when there are three or more indicator
     * colors.</td></tr>
     * <tr><td>disjoint</td><td>1</td><td>There will be two disjoint segments in the same color per cycle. The color iterates between cycles.</td></tr>
     * </table>
     */
    public static int indeterminateAnimationType=0x00000000;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int indeterminateProgressStyle=0x00000000;
    /**
     * The indicator color (or colors in an array). By default, it uses theme
     * primary color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int indicatorColor=0x00000000;
    /**
     * The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clockwise</td><td>0</td><td>In the indeterminate mode, the spinner will spin clockwise; in the
     * determinate mode, the indicator will progress from the top (12 o'clock)
     * clockwise.</td></tr>
     * <tr><td>counterclockwise</td><td>1</td><td>In the indeterminate mode, the spinner will spin counter-clockwise; in
     * the determinate mode, the indicator will progress from the top (12
     * o'clock) counter-clockwise.</td></tr>
     * </table>
     */
    public static int indicatorDirectionCircular=0x00000000;
    /**
     * The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>endToStart</td><td>3</td><td>Animated from the end position to the start position of the track.
     * This will be same as the rightToLeft for API before 17.</td></tr>
     * <tr><td>leftToRight</td><td>0</td><td>Animated from the left end to the right end of the track.</td></tr>
     * <tr><td>rightToLeft</td><td>1</td><td>Animated from the right end to the left end of the track.</td></tr>
     * <tr><td>startToEnd</td><td>2</td><td>Animated from the start position to the end position of the track.
     * This will be same as the leftToRight for API before 17.</td></tr>
     * </table>
     */
    public static int indicatorDirectionLinear=0x00000000;
    /**
     * The extra space from the outer edge of the indicator to the edge of the
     * canvas. Ignored for linear progress indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int indicatorInset=0x00000000;
    /**
     * Defines the size (outer diameter) of the circular progress indicator. This
     * uses the central line of the indicator as reference. Ignored for linear
     * progress indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int indicatorSize=0x00000000;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int initialActivityCount=0x00000000;
    /**
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int initialExpandedChildrenCount=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int insetForeground=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isFolderDarkText=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isLightTheme=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isMainColorDark=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isMaterialTheme=0x00000000;
    /**
     * Whether the Preference is visible. By default, this is set to true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isPreferenceVisible=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isScalable=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int isWorkspaceDarkText=0x00000000;
    /**
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int itemBackground=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int itemFillColor=0x00000000;
    /**
     * Horizontal padding (left and right) of navigation items, around the icon & text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemHorizontalPadding=0x00000000;
    /**
     * Whether the items translate horizontally when in "selected" label visibility mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int itemHorizontalTranslationEnabled=0x00000000;
    /**
     * Padding between the icon and the text for navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemIconPadding=0x00000000;
    /**
     * The size of the icon navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemIconSize=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int itemIconTint=0x00000000;
    /**
     * Makes the TextView of the item text be at most this many lines tall.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int itemMaxLines=0x00000000;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemPadding=0x00000000;
    /**
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int itemRippleColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int itemShapeAppearance=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int itemShapeAppearanceOverlay=0x00000000;
    /**
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int itemShapeFillColor=0x00000000;
    /**
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemShapeInsetBottom=0x00000000;
    /**
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemShapeInsetEnd=0x00000000;
    /**
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemShapeInsetStart=0x00000000;
    /**
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemShapeInsetTop=0x00000000;
    /**
     * Horizontal spacing between two items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemSpacing=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int itemStrokeColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int itemStrokeWidth=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int itemTextAppearance=0x00000000;
    /**
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int itemTextAppearanceActive=0x00000000;
    /**
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int itemTextAppearanceInactive=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int itemTextColor=0x00000000;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int key=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>deltaRelative</td><td>0</td><td></td></tr>
     * <tr><td>parentRelative</td><td>2</td><td></td></tr>
     * <tr><td>pathRelative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int keyPositionType=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int keyShadowBlur=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int keyShadowColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int keyShadowOffsetX=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int keyShadowOffsetY=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int keyboardIcon=0x00000000;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int keylines=0x00000000;
    /**
     * Determines if Slider should increase its default height to include space for the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>floating</td><td>0</td><td>Mode that draws the label floating above the bounds of this view.</td></tr>
     * <tr><td>gone</td><td>2</td><td>Mode that prevents the label from being drawn</td></tr>
     * <tr><td>withinBounds</td><td>1</td><td>Mode that draws the label within the bounds of the view.</td></tr>
     * </table>
     */
    public static int labelBehavior=0x00000000;
    /**
     * The style used for the label TooltipDrawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int labelStyle=0x00000000;
    /**
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     */
    public static int labelVisibilityMode=0x00000000;
    /**
     * landscapeIconSize defaults to iconImageSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int landscapeIconSize=0x00000000;
    /**
     * landscapeIconTextSize defaults to iconTextSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int landscapeIconTextSize=0x00000000;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int lastBaselineToBottomHeight=0x00000000;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int layout=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int layoutDescription=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layoutDuringTransition=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int layoutHorizontal=0x00000000;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int layoutManager=0x00000000;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int layout_anchor=0x00000000;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static int layout_anchorGravity=0x00000000;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int layout_behavior=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     */
    public static int layout_collapseMode=0x00000000;
    /**
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_collapseParallaxMultiplier=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int layout_constrainedHeight=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int layout_constrainedWidth=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_constraintBaseline_creator=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintBaseline_toBaselineOf=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_constraintBottom_creator=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintBottom_toBottomOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintBottom_toTopOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int layout_constraintCircle=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_constraintCircleAngle=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_constraintCircleRadius=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int layout_constraintDimensionRatio=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintEnd_toEndOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintEnd_toStartOf=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_constraintGuide_begin=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_constraintGuide_end=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintGuide_percent=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintHeight_default=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintHeight_max=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintHeight_min=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintHeight_percent=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintHorizontal_bias=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintHorizontal_chainStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintHorizontal_weight=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_constraintLeft_creator=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintLeft_toLeftOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintLeft_toRightOf=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_constraintRight_creator=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintRight_toLeftOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintRight_toRightOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintStart_toEndOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintStart_toStartOf=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int layout_constraintTag=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_constraintTop_creator=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintTop_toBottomOf=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintTop_toTopOf=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintVertical_bias=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintVertical_chainStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintVertical_weight=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintWidth_default=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintWidth_max=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static int layout_constraintWidth_min=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int layout_constraintWidth_percent=0x00000000;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static int layout_dodgeInsetEdges=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_editor_absoluteX=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_editor_absoluteY=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_goneMarginBottom=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_goneMarginEnd=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_goneMarginLeft=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_goneMarginRight=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_goneMarginStart=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int layout_goneMarginTop=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int layout_ignoreInsets=0x00000000;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static int layout_insetEdge=0x00000000;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int layout_keyline=0x00000000;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>graph</td><td>40</td><td></td></tr>
     * <tr><td>graph_wrap</td><td>80</td><td></td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>ratio</td><td>10</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     */
    public static int layout_optimizationLevel=0x00000000;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     */
    public static int layout_scrollFlags=0x00000000;
    /**
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int layout_scrollInterpolator=0x00000000;
    /**
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int liftOnScroll=0x00000000;
    /**
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int liftOnScrollTargetViewId=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int limitBoundsTo=0x00000000;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int lineHeight=0x00000000;
    /**
     * Vertical Spacing between two lines of items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int lineSpacing=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int linearProgressIndicatorStyle=0x00000000;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listChoiceBackgroundIndicator=0x00000000;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listChoiceIndicatorMultipleAnimated=0x00000000;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listChoiceIndicatorSingleAnimated=0x00000000;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listDividerAlertDialog=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listItemLayout=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listLayout=0x00000000;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listMenuViewStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int listPopupWindowStyle=0x00000000;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemHeight=0x00000000;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemHeightLarge=0x00000000;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemHeightSmall=0x00000000;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemPaddingEnd=0x00000000;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemPaddingLeft=0x00000000;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemPaddingRight=0x00000000;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int listPreferredItemPaddingStart=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int loadingIconColor=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int logIdOff=0x00000000;
    /**
     * Ground truth of this Pref integer can be found in StatsLogManager
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int logIdOn=0x00000000;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int logo=0x00000000;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int logoDescription=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int lottie_autoPlay=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int lottie_cacheComposition=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int lottie_colorFilter=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int lottie_enableMergePathsForKitKatAndAbove=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int lottie_fallbackRes=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int lottie_fileName=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int lottie_imageAssetsFolder=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int lottie_loop=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int lottie_progress=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int lottie_rawRes=0x00000000;
    /**
     * These values must be kept in sync with the RenderMode enum
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>hardware</td><td>1</td><td></td></tr>
     * <tr><td>software</td><td>2</td><td></td></tr>
     * </table>
     */
    public static int lottie_renderMode=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int lottie_repeatCount=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>restart</td><td>1</td><td></td></tr>
     * <tr><td>reverse</td><td>2</td><td></td></tr>
     * </table>
     */
    public static int lottie_repeatMode=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int lottie_scale=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int lottie_speed=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int lottie_url=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int matchTextInsetWithQuery=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialAlertDialogBodyTextStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialAlertDialogTheme=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialAlertDialogTitleIconStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialAlertDialogTitlePanelStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialAlertDialogTitleTextStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialButtonOutlinedStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialButtonStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialButtonToggleGroupStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarDay=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarFullscreenTheme=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderCancelButton=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderConfirmButton=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderDivider=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderLayout=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderSelection=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderTitle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarHeaderToggleButton=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarMonth=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarMonthNavigationButton=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarTheme=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCalendarYearNavigationButton=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialCardViewStyle=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int materialCircleRadius=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialClockStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialThemeOverlay=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialTimePickerStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int materialTimePickerTheme=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int maxAcceleration=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int maxActionInlineWidth=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int maxButtonHeight=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int maxCharacterCount=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int maxEmptySpace=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int maxHeight=0x00000000;
    /**
     * Maximum icon image size.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int maxImageSize=0x00000000;
    /**
     * The maximum number of lines to display in the expanded state. Experimental Feature.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int maxLines=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int maxVelocity=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int maxWidth=0x00000000;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int measureWithLargestChild=0x00000000;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int menu=0x00000000;
    /**
     * Specifies how the navigation rail destinations should be aligned as a group.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>51</td><td>Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL</td></tr>
     * <tr><td>center</td><td>11</td><td>Gravity.CENTER</td></tr>
     * <tr><td>top</td><td>31</td><td>Gravity.TOP | Gravity.CENTER_HORIZONTAL</td></tr>
     * </table>
     */
    public static int menuGravity=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int min=0x00000000;
    /**
     * These min cell values are only used if GridDisplayOption#isScalable is true
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int minCellHeightDps=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int minCellWidthDps=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int minHeight=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int minHeightDps=0x00000000;
    /**
     * The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started. If set to zero or negative
     * values (-1 as default), the requested hide action will start immediately.
     * This value is capped to a limit defined in ProgressIndicator class.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int minHideDelay=0x00000000;
    /**
     * If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int minSeparation=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int minTouchTargetSize=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int minWidth=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int minWidthDps=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int mock_diagonalsColor=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int mock_label=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int mock_labelBackgroundColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int mock_labelColor=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int mock_showDiagonals=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int mock_showLabel=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>NO_DEBUG</td><td>0</td><td></td></tr>
     * <tr><td>SHOW_ALL</td><td>3</td><td></td></tr>
     * <tr><td>SHOW_PATH</td><td>2</td><td></td></tr>
     * <tr><td>SHOW_PROGRESS</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int motionDebug=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int motionDurationLong1=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int motionDurationLong2=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int motionDurationMedium1=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int motionDurationMedium2=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int motionDurationShort1=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int motionDurationShort2=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int motionEasingAccelerated=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int motionEasingDecelerated=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int motionEasingEmphasized=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int motionEasingLinear=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int motionEasingStandard=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>5</td><td></td></tr>
     * <tr><td>easeIn</td><td>1</td><td></td></tr>
     * <tr><td>easeInOut</td><td>0</td><td></td></tr>
     * <tr><td>easeOut</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * </table>
     */
    public static int motionInterpolator=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>arc</td><td>1</td><td></td></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int motionPath=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int motionPathRotate=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int motionProgress=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int motionStagger=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int motionTarget=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int motion_postLayoutCollision=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int motion_triggerOnCollision=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int moveWhenScrollAtTop=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int multiChoiceItemLayout=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int name=0x00000000;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int navigationContentDescription=0x00000000;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int navigationIcon=0x00000000;
    /**
     * The tint color for the navigation button icon drawable corresponding to
     * the "app:navigationIcon" attribute.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int navigationIconTint=0x00000000;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static int navigationMode=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int navigationRailStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int navigationViewStyle=0x00000000;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int negativeButtonText=0x00000000;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disablePostScroll</td><td>1</td><td></td></tr>
     * <tr><td>disableScroll</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int nestedScrollFlags=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int nestedScrollViewStyle=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int nestedScrollable=0x00000000;
    /**
     * numAllAppsColumns defaults to numColumns, if not specified
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numAllAppsColumns=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numColumns=0x00000000;
    /**
     * Number of columns to use when extending the all-apps size,
     * defaults to 2 * numAllAppsColumns
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numExtendedAllAppsColumns=0x00000000;
    /**
     * Number of icons to use when extending the hotseat size,
     * defaults to 2 * numHotseatIcons
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numExtendedHotseatIcons=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numFolderColumns=0x00000000;
    /**
     * numFolderRows & numFolderColumns defaults to numRows & numColumns, if not specified
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numFolderRows=0x00000000;
    /**
     * numHotseatIcons defaults to numColumns, if not specified
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numHotseatIcons=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int numRows=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int number=0x00000000;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static int numericModifiers=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int onCross=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int onHide=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int onNegativeCross=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int onPositiveCross=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int onShow=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>autoComplete</td><td>0</td><td></td></tr>
     * <tr><td>autoCompleteToEnd</td><td>2</td><td></td></tr>
     * <tr><td>autoCompleteToStart</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>4</td><td></td></tr>
     * <tr><td>decelerateAndComplete</td><td>5</td><td></td></tr>
     * <tr><td>stop</td><td>3</td><td></td></tr>
     * </table>
     */
    public static int onTouchUp=0x00000000;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int order=0x00000000;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int orderingFromXml=0x00000000;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int overlapAnchor=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int overlay=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int overviewScrimColor=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int packageName=0x00000000;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int paddingBottomNoButtons=0x00000000;
    /**
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int paddingBottomSystemWindowInsets=0x00000000;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int paddingEnd=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int paddingLeftSystemWindowInsets=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int paddingRightSystemWindowInsets=0x00000000;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int paddingStart=0x00000000;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int paddingTopNoTitle=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int paddingTopSystemWindowInsets=0x00000000;
    /**
     * The page indicator for this workspace
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int pageIndicator=0x00000000;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int panelBackground=0x00000000;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int panelMenuListTheme=0x00000000;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int panelMenuListWidth=0x00000000;
    /**
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int passwordToggleContentDescription=0x00000000;
    /**
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int passwordToggleDrawable=0x00000000;
    /**
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int passwordToggleEnabled=0x00000000;
    /**
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int passwordToggleTint=0x00000000;
    /**
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int passwordToggleTintMode=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static int pathMotionArc=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int path_percent=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int percentHeight=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int percentWidth=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int percentX=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int percentY=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int perpendicularPath_percent=0x00000000;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int persistent=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int pivotAnchor=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int pivotX=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int pivotY=0x00000000;
    /**
     * The text to display as placeholder text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int placeholderText=0x00000000;
    /**
     * TextAppearance of the placeholder text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int placeholderTextAppearance=0x00000000;
    /**
     * Text color of the placeholder text displayed in the text input area.
     * If set, this takes precedence over placeholderTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int placeholderTextColor=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>8</td><td></td></tr>
     * <tr><td>invisible</td><td>4</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int placeholder_emptyVisibility=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupColorPrimary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupColorSecondary=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupColorTertiary=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int popupMenuBackground=0x00000000;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int popupMenuStyle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupNotificationDotColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupShadeFirst=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupShadeSecond=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int popupShadeThird=0x00000000;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int popupTheme=0x00000000;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int popupWindowStyle=0x00000000;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int positiveButtonText=0x00000000;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceCategoryStyle=0x00000000;
    /**
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceCategoryTitleTextAppearance=0x00000000;
    /**
     * The preferred color for the title displayed in a PreferenceCategory.
     * If this is not specified by a developer, we use ?android:attr/colorAccent above
     * Lollipop, and ?attr/colorAccent below Lollipop (when using an AppCompat theme).
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int preferenceCategoryTitleTextColor=0x00000000;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceFragmentCompatStyle=0x00000000;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceFragmentListStyle=0x00000000;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceFragmentStyle=0x00000000;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceInformationStyle=0x00000000;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceScreenStyle=0x00000000;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceStyle=0x00000000;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int preferenceTheme=0x00000000;
    /**
     * The text to display as prefix text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int prefixText=0x00000000;
    /**
     * TextAppearance of the prefix text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int prefixTextAppearance=0x00000000;
    /**
     * Text color of the prefix text displayed in the text input area.
     * If set, this takes precedence over prefixTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int prefixTextColor=0x00000000;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int preserveIconSpacing=0x00000000;
    /**
     * TranslationZ value for the FAB when pressed
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int pressedTranslationZ=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int progress=0x00000000;
    /**
     * Padding to the end edge of the progress bar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int progressBarEndPadding=0x00000000;
    /**
     * Width to use for inline progress bar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int progressBarInlineWidth=0x00000000;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int progressBarPadding=0x00000000;
    /**
     * Padding to the start edge of the progress bar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int progressBarStartPadding=0x00000000;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int progressBarStyle=0x00000000;
    /**
     * Component name of an app widget provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int provider=0x00000000;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int queryBackground=0x00000000;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int queryHint=0x00000000;
    /**
     * Resource reference to the string array of query patterns for a custom capability.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int queryPatterns=0x00000000;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int radioButtonStyle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int rangeFillColor=0x00000000;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int ratingBarStyle=0x00000000;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int ratingBarStyleIndicator=0x00000000;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int ratingBarStyleSmall=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int recyclerViewStyle=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int region_heightLessThan=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int region_heightMoreThan=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int region_widthLessThan=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int region_widthMoreThan=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int reverseLayout=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int rippleColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int round=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int roundPercent=0x00000000;
    /**
     * Size of row view when range is inline
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int rowInlineRangeHeight=0x00000000;
    /**
     * Size of row view with two lines of text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int rowMaxHeight=0x00000000;
    /**
     * Min height of row view; default size if one line of text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int rowMinHeight=0x00000000;
    /**
     * Size of range area in a row to fit a slider or progress bar
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int rowRangeHeight=0x00000000;
    /**
     * Size of text area row with one line of text and then a range element
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int rowRangeSingleTextHeight=0x00000000;
    /**
     * To apply a style for all slice rows shown within an activity or app you
     * may set this in your app theme pointing to your custom RowView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int rowStyle=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int saturation=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int screen=0x00000000;
    /**
     * Specifies the duration used for scrim visibility animations.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int scrimAnimationDuration=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int scrimBackground=0x00000000;
    /**
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int scrimVisibleHeightTrigger=0x00000000;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int searchHintIcon=0x00000000;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int searchIcon=0x00000000;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int searchViewStyle=0x00000000;
    /**
     * The icon drawable of a widget category.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int sectionDrawable=0x00000000;
    /**
     * The title name of a widget category.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int sectionTitle=0x00000000;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int seekBarIncrement=0x00000000;
    /**
     * Width to use for inline SeekBar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int seekBarInlineWidth=0x00000000;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int seekBarPreferenceStyle=0x00000000;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int seekBarStyle=0x00000000;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int selectable=0x00000000;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int selectableItemBackground=0x00000000;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int selectableItemBackgroundBorderless=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int selectionRequired=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int selectorSize=0x00000000;
    /**
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int shapeAppearance=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int shapeAppearanceLargeComponent=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int shapeAppearanceMediumComponent=0x00000000;
    /**
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int shapeAppearanceOverlay=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int shapeAppearanceSmallComponent=0x00000000;
    /**
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int shortcutMatchRequired=0x00000000;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int shouldDisableView=0x00000000;
    /**
     * The animation behavior to show the indicator and track.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Expands from the top edge to the bottom edge for the linear type;
     * expands from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; appears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Expands from the bottom edge to the top edge for the linear type;
     * expands from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     */
    public static int showAnimationBehavior=0x00000000;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static int showAsAction=0x00000000;
    /**
     * The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called. If set to zero or negative values (-1 as default),
     * the show action will start immediately.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int showDelay=0x00000000;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int showDividers=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int showMotionSpec=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int showPaths=0x00000000;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int showSeekBarValue=0x00000000;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int showText=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int showTitle=0x00000000;
    /**
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int shrinkMotionSpec=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int singleChoiceItemLayout=0x00000000;
    /**
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int singleLine=0x00000000;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int singleLineTitle=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int singleSelection=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int sizePercent=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int sliceViewStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int sliderStyle=0x00000000;
    /**
     * Style to use for action button within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int snackbarButtonStyle=0x00000000;
    /**
     * Style to use for Snackbars in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int snackbarStyle=0x00000000;
    /**
     * Style to use for message text within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int snackbarTextViewStyle=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int spanCount=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int spanX=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int spanY=0x00000000;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int spinBars=0x00000000;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int spinnerDropDownItemStyle=0x00000000;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int spinnerStyle=0x00000000;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int splitTrack=0x00000000;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int srcCompat=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int stackFromEnd=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int staggered=0x00000000;
    /**
     * Whether the start icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int startIconCheckable=0x00000000;
    /**
     * Text to set as the content description for the start icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int startIconContentDescription=0x00000000;
    /**
     * Drawable to use for the start icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int startIconDrawable=0x00000000;
    /**
     * Tint color to use for the start icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int startIconTint=0x00000000;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int startIconTintMode=0x00000000;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int state_above_anchor=0x00000000;
    /**
     * @deprecated in favor of {@link R.attr#state_lifted}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static int state_collapsed=0x00000000;
    /**
     * @deprecated in favor of {@link R.attr#state_liftable}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static int state_collapsible=0x00000000;
    /**
     * State when a Card is being dragged.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int state_dragged=0x00000000;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int state_liftable=0x00000000;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int state_lifted=0x00000000;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int statusBarBackground=0x00000000;
    /**
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int statusBarForeground=0x00000000;
    /**
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int statusBarScrim=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int strokeColor=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int strokeWidth=0x00000000;
    /**
     * Padding to the end edge of the sub content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int subContentEndPadding=0x00000000;
    /**
     * Padding to the start edge of the sub content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int subContentStartPadding=0x00000000;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int subMenuArrow=0x00000000;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int submitBackground=0x00000000;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int subtitle=0x00000000;
    /**
     * Whether the subtitle text corresponding to the "app:subtitle" attribute
     * should be centered horizontally within the toolbar. Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int subtitleCentered=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int subtitleColor=0x00000000;
    /**
     * Text size to use for subtitle text in a non-header row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int subtitleSize=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int subtitleTextAppearance=0x00000000;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int subtitleTextColor=0x00000000;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int subtitleTextStyle=0x00000000;
    /**
     * The text to display as suffix text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int suffixText=0x00000000;
    /**
     * TextAppearance of the suffix text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int suffixTextAppearance=0x00000000;
    /**
     * Text color of the suffix text displayed in the text input area.
     * If set, this takes precedence over suffixTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int suffixTextColor=0x00000000;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int suggestionRowLayout=0x00000000;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int summary=0x00000000;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int summaryOff=0x00000000;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int summaryOn=0x00000000;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int switchMinWidth=0x00000000;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int switchPadding=0x00000000;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int switchPreferenceCompatStyle=0x00000000;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int switchPreferenceStyle=0x00000000;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int switchStyle=0x00000000;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int switchTextAppearance=0x00000000;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int switchTextOff=0x00000000;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int switchTextOn=0x00000000;
    /**
     * Reference to a background to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tabBackground=0x00000000;
    /**
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabContentStart=0x00000000;
    /**
     * Gravity constant for tabs.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>2</td><td></td></tr>
     * </table>
     */
    public static int tabGravity=0x00000000;
    /**
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tabIconTint=0x00000000;
    /**
     * Blending mode to apply to tab icons.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static int tabIconTintMode=0x00000000;
    /**
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tabIndicator=0x00000000;
    /**
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int tabIndicatorAnimationDuration=0x00000000;
    /**
     * The animation mode used to animate the selection indicator between
     * destinations.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>elastic</td><td>1</td><td>Animate the selection indicator's left and right bounds out of step
     * with each other, decelerating the front and accelerating the back.
     * This causes the indicator to look like it stretches between destinations
     * an then shrinks back down to fit the size of it's target tab.</td></tr>
     * <tr><td>linear</td><td>0</td><td>Animate the selection indicator's left and right bounds in step with
     * each other.</td></tr>
     * </table>
     */
    public static int tabIndicatorAnimationMode=0x00000000;
    /**
     * Color of the indicator used to show the currently selected tab.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tabIndicatorColor=0x00000000;
    /**
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int tabIndicatorFullWidth=0x00000000;
    /**
     * Gravity constant for tab selection indicator.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     */
    public static int tabIndicatorGravity=0x00000000;
    /**
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static int tabIndicatorHeight=0x00000000;
    /**
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int tabInlineLabel=0x00000000;
    /**
     * The maximum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabMaxWidth=0x00000000;
    /**
     * The minimum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabMinWidth=0x00000000;
    /**
     * The behavior mode for the Tabs in this layout
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int tabMode=0x00000000;
    /**
     * The preferred padding along all edges of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabPadding=0x00000000;
    /**
     * The preferred padding along the bottom edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabPaddingBottom=0x00000000;
    /**
     * The preferred padding along the end edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabPaddingEnd=0x00000000;
    /**
     * The preferred padding along the start edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabPaddingStart=0x00000000;
    /**
     * The preferred padding along the top edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int tabPaddingTop=0x00000000;
    /**
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tabRippleColor=0x00000000;
    /**
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    @Deprecated
    public static int tabSelectedTextColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tabStyle=0x00000000;
    /**
     * A reference to a TextAppearance style to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tabTextAppearance=0x00000000;
    /**
     * The default text color to be applied to tabs.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tabTextColor=0x00000000;
    /**
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int tabUnboundedRipple=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int targetId=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int telltales_tailColor=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int telltales_tailScale=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>layout</td><td>0</td><td></td></tr>
     * <tr><td>postLayout</td><td>1</td><td></td></tr>
     * <tr><td>staticLayout</td><td>3</td><td></td></tr>
     * <tr><td>staticPostLayout</td><td>2</td><td></td></tr>
     * </table>
     */
    public static int telltales_velocityMode=0x00000000;
    /**
     * Padding to the edge of the button in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int textActionPadding=0x00000000;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int textAllCaps=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceBody1=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceBody2=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceButton=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceCaption=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceHeadline1=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceHeadline2=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceHeadline3=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceHeadline4=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceHeadline5=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceHeadline6=0x00000000;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceLargePopupMenu=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int textAppearanceLineHeightEnabled=0x00000000;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceListItem=0x00000000;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceListItemSecondary=0x00000000;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceListItemSmall=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceOverline=0x00000000;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearancePopupMenuHeader=0x00000000;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceSearchResultSubtitle=0x00000000;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceSearchResultTitle=0x00000000;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceSmallPopupMenu=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceSubtitle1=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textAppearanceSubtitle2=0x00000000;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int textColorAlertDialogListItem=0x00000000;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int textColorSearchUrl=0x00000000;
    /**
     * Padding at the end of the text, before the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int textEndPadding=0x00000000;
    /**
     * Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int textInputLayoutFocusedRectEnabled=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int textInputStyle=0x00000000;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int textLocale=0x00000000;
    /**
     * Padding at the start of the text, after the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int textStartPadding=0x00000000;
    /**
     * Vertical padding to use between title text and subtitle text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int textVerticalPadding=0x00000000;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int theme=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int themeLineHeight=0x00000000;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int thickness=0x00000000;
    /**
     * The color of the slider's thumb.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int thumbColor=0x00000000;
    /**
     * The elevation of the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int thumbElevation=0x00000000;
    /**
     * The radius of the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int thumbRadius=0x00000000;
    /**
     * The stroke color for the thumb.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int thumbStrokeColor=0x00000000;
    /**
     * The stroke width for the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int thumbStrokeWidth=0x00000000;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int thumbTextPadding=0x00000000;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int thumbTint=0x00000000;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int thumbTintMode=0x00000000;
    /**
     * The color of the slider's tick marks. Only used when the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tickColor=0x00000000;
    /**
     * The color of the slider's tick marks for the active portion of the track. Only used when
     * the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tickColorActive=0x00000000;
    /**
     * The color of the slider's tick marks for the inactive portion of the track. Only used when
     * the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tickColorInactive=0x00000000;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tickMark=0x00000000;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tickMarkTint=0x00000000;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int tickMarkTintMode=0x00000000;
    /**
     * Whether to show the tick marks. Only used when the slider is in discrete mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int tickVisible=0x00000000;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tint=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tintColor=0x00000000;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int tintMode=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int title=0x00000000;
    /**
     * Whether the title text corresponding to the "app:title" attribute
     * should be centered horizontally within the toolbar. Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int titleCentered=0x00000000;
    /**
     * Mode to specify the effect used to collapse and expand the title text.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>The expanded title will fade out and translate, and the collapsed title will fade in.</td></tr>
     * <tr><td>scale</td><td>0</td><td>The expanded title will continuously scale and translate to its final collapsed position.</td></tr>
     * </table>
     */
    public static int titleCollapseMode=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int titleColor=0x00000000;
    /**
     * Whether the CollapsingToolbarLayout should draw its own collapsing title.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int titleEnabled=0x00000000;
    /**
     * Padding to the end edge of the title in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleEndPadding=0x00000000;
    /**
     * Padding to the end edge of title items shown in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleItemEndPadding=0x00000000;
    /**
     * Padding to the start edge of title items shown in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleItemStartPadding=0x00000000;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleMargin=0x00000000;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleMarginBottom=0x00000000;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleMarginEnd=0x00000000;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleMarginStart=0x00000000;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleMarginTop=0x00000000;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static int titleMargins=0x00000000;
    /**
     * Text size to use for title text in a non-header row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleSize=0x00000000;
    /**
     * Padding to the start edge of the title in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int titleStartPadding=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int titleTextAppearance=0x00000000;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int titleTextColor=0x00000000;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int titleTextStyle=0x00000000;
    /**
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int toolbarId=0x00000000;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int toolbarNavigationButtonStyle=0x00000000;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int toolbarStyle=0x00000000;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int tooltipForegroundColor=0x00000000;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tooltipFrameBackground=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int tooltipStyle=0x00000000;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int tooltipText=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int touchAnchorId=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>middle</td><td>4</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int touchAnchorSide=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int touchRegionId=0x00000000;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int track=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int trackColor=0x00000000;
    /**
     * The color of active portion of the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int trackColorActive=0x00000000;
    /**
     * The color of inactive portion of the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int trackColorInactive=0x00000000;
    /**
     * The radius of each corner of both the indicator and the track. A radius
     * larger than half of the track width will throw exceptions during
     * initialization.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int trackCornerRadius=0x00000000;
    /**
     * The height of the track.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int trackHeight=0x00000000;
    /**
     * The thickness of the progress track and indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int trackThickness=0x00000000;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int trackTint=0x00000000;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static int trackTintMode=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int transitionDisable=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int transitionEasing=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int transitionPathRotate=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int transitionShapeAppearance=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int triggerId=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int triggerReceiver=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int triggerSlack=0x00000000;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int ttcIndex=0x00000000;
    /**
     * space to be used horizontally and vertically in two panels,
     * defaults to borderSpaceDps if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeBorderSpaceDps=0x00000000;
    /**
     * space to the right of the cell in two panels, defaults to
     * twoPanelLandscapeBorderSpaceDps if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeBorderSpaceHorizontalDps=0x00000000;
    /**
     * space below the cell in two panels, defaults to twoPanelLandscapeBorderSpaceDps
     * if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeBorderSpaceVerticalDps=0x00000000;
    /**
     * twoPanelLandscapeHorizontalMargin defaults to horizontalMargin if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeHorizontalMargin=0x00000000;
    /**
     * twoPanelLandscapeIconSize defaults to iconImageSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeIconSize=0x00000000;
    /**
     * twoPanelLandscapeIconTextSize defaults to iconTextSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeIconTextSize=0x00000000;
    /**
     * twoPanelLandscapeMinCellHeightDps defaults to minCellHeightDps, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeMinCellHeightDps=0x00000000;
    /**
     * twoPanelLandscapeMinCellWidthDps defaults to minCellWidthDps, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelLandscapeMinCellWidthDps=0x00000000;
    /**
     * space to be used horizontally and vertically in two panels,
     * defaults to borderSpaceDps if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitBorderSpaceDps=0x00000000;
    /**
     * space to the right of the cell in two panels, defaults to
     * twoPanelPortraitBorderSpaceDps if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitBorderSpaceHorizontalDps=0x00000000;
    /**
     * space below the cell in two panels, defaults to twoPanelPortraitBorderSpaceDps
     * if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitBorderSpaceVerticalDps=0x00000000;
    /**
     * twoPanelPortraitHorizontalMargin defaults to horizontalMargin if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitHorizontalMargin=0x00000000;
    /**
     * twoPanelPortraitIconSize defaults to iconImageSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitIconSize=0x00000000;
    /**
     * twoPanelPortraitIconTextSize defaults to iconTextSize, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitIconTextSize=0x00000000;
    /**
     * twoPanelPortraitMinCellWidthDps defaults to minCellHeightDps, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitMinCellHeightDps=0x00000000;
    /**
     * twoPanelPortraitMinCellHeightDps defaults to minCellWidthDps, if not specified
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int twoPanelPortraitMinCellWidthDps=0x00000000;
    /**
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int updatesContinuously=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int uri=0x00000000;
    /**
     * Enable compat padding.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int useCompatPadding=0x00000000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int useMaterialThemeColors=0x00000000;
    /**
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int useSimpleSummaryProvider=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int value=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int values=0x00000000;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int verticalOffset=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int viewInflaterClass=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int visibilityMode=0x00000000;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int voiceIcon=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int warmth=0x00000000;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static int waveDecay=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static int waveOffset=0x00000000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static int wavePeriod=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     */
    public static int waveShape=0x00000000;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>position</td><td>0</td><td></td></tr>
     * </table>
     */
    public static int waveVariesBy=0x00000000;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int widgetLayout=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int widgetsTheme=0x00000000;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int windowActionBar=0x00000000;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int windowActionBarOverlay=0x00000000;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int windowActionModeOverlay=0x00000000;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int windowFixedHeightMajor=0x00000000;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int windowFixedHeightMinor=0x00000000;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int windowFixedWidthMajor=0x00000000;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int windowFixedWidthMinor=0x00000000;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int windowMinWidthMajor=0x00000000;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static int windowMinWidthMinor=0x00000000;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static int windowNoTitle=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workProfileOverlayTextColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int workspace=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceAccentColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceAmbientShadowColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceKeyShadowColor=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceShadowColor=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int workspaceStatusBarScrim=0x00000000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static int workspaceTextColor=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int x=0x00000000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static int y=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int yearSelectedStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int yearStyle=0x00000000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static int yearTodayStyle=0x00000000;
  }
  public static final class bool {
    public static int abc_action_bar_embed_tabs=0x00000000;
    public static int abc_config_actionMenuItemAllCaps=0x00000000;
    public static int allow_rotation=0x00000000;
    /**
     * Whether to enable background preloading of task thumbnails.
     */
    public static int config_enableTaskSnapshotPreloading=0x00000000;
    /**
     * config used to determine if header protection is supported in AllApps
     */
    public static int config_header_protection_supported=0x00000000;
    /**
     * Miscellaneous
     */
    public static int config_largeHeap=0x00000000;
    public static int config_materialPreferenceIconSpaceReserved=0x00000000;
    public static int home_settings_allow_divider=0x00000000;
    public static int home_settings_icon_space_reserved=0x00000000;
    public static int mtrl_btn_textappearance_all_caps=0x00000000;
    public static int simple_cache_enable_im_memory=0x00000000;
  }
  public static final class color {
    public static int abc_background_cache_hint_selector_material_dark=0x00000000;
    public static int abc_background_cache_hint_selector_material_light=0x00000000;
    public static int abc_btn_colored_borderless_text_material=0x00000000;
    public static int abc_btn_colored_text_material=0x00000000;
    public static int abc_color_highlight_material=0x00000000;
    public static int abc_decor_view_status_guard=0x00000000;
    public static int abc_decor_view_status_guard_light=0x00000000;
    public static int abc_hint_foreground_material_dark=0x00000000;
    public static int abc_hint_foreground_material_light=0x00000000;
    public static int abc_primary_text_disable_only_material_dark=0x00000000;
    public static int abc_primary_text_disable_only_material_light=0x00000000;
    public static int abc_primary_text_material_dark=0x00000000;
    public static int abc_primary_text_material_light=0x00000000;
    public static int abc_search_url_text=0x00000000;
    public static int abc_search_url_text_normal=0x00000000;
    public static int abc_search_url_text_pressed=0x00000000;
    public static int abc_search_url_text_selected=0x00000000;
    public static int abc_secondary_text_material_dark=0x00000000;
    public static int abc_secondary_text_material_light=0x00000000;
    public static int abc_tint_btn_checkable=0x00000000;
    public static int abc_tint_default=0x00000000;
    public static int abc_tint_edittext=0x00000000;
    public static int abc_tint_seek_thumb=0x00000000;
    public static int abc_tint_spinner=0x00000000;
    public static int abc_tint_switch_track=0x00000000;
    public static int accent_material_dark=0x00000000;
    public static int accent_material_light=0x00000000;
    public static int accent_ripple_color=0x00000000;
    public static int all_apps_bg_hand_fill=0x00000000;
    public static int all_apps_bg_hand_fill_dark=0x00000000;
    public static int all_apps_label_text=0x00000000;
    public static int all_apps_label_text_dark=0x00000000;
    public static int all_apps_prediction_row_separator=0x00000000;
    public static int all_apps_prediction_row_separator_dark=0x00000000;
    public static int all_apps_tab_background_selected=0x00000000;
    public static int all_apps_tab_text=0x00000000;
    public static int all_apps_tabs_background=0x00000000;
    public static int all_set_page_background=0x00000000;
    public static int androidx_core_ripple_material_light=0x00000000;
    public static int androidx_core_secondary_text_default_material_light=0x00000000;
    public static int arrow_tip_view_bg=0x00000000;
    public static int arrow_tip_view_content=0x00000000;
    public static int background_floating_material_dark=0x00000000;
    public static int background_floating_material_light=0x00000000;
    public static int background_material_dark=0x00000000;
    public static int background_material_light=0x00000000;
    public static int bright_foreground_disabled_material_dark=0x00000000;
    public static int bright_foreground_disabled_material_light=0x00000000;
    public static int bright_foreground_inverse_material_dark=0x00000000;
    public static int bright_foreground_inverse_material_light=0x00000000;
    public static int bright_foreground_material_dark=0x00000000;
    public static int bright_foreground_material_light=0x00000000;
    public static int button_bg=0x00000000;
    public static int button_material_dark=0x00000000;
    public static int button_material_light=0x00000000;
    public static int button_text=0x00000000;
    public static int cardview_dark_background=0x00000000;
    public static int cardview_light_background=0x00000000;
    public static int cardview_shadow_end_color=0x00000000;
    public static int cardview_shadow_start_color=0x00000000;
    public static int cell_layout_bg_color_active=0x00000000;
    public static int cell_layout_bg_color_inactive=0x00000000;
    public static int checkbox_themeable_attribute_color=0x00000000;
    public static int chip_hint_foreground_color=0x00000000;
    public static int chip_scrim_start_color=0x00000000;
    public static int default_shadow_color_no_alpha=0x00000000;
    /**
     * The color tints to apply to the text and drag view when hovering
     * over the delete target or the info target
     */
    public static int delete_target_hover_tint=0x00000000;
    public static int design_bottom_navigation_shadow_color=0x00000000;
    public static int design_box_stroke_color=0x00000000;
    public static int design_dark_default_color_background=0x00000000;
    public static int design_dark_default_color_error=0x00000000;
    public static int design_dark_default_color_on_background=0x00000000;
    public static int design_dark_default_color_on_error=0x00000000;
    public static int design_dark_default_color_on_primary=0x00000000;
    public static int design_dark_default_color_on_secondary=0x00000000;
    public static int design_dark_default_color_on_surface=0x00000000;
    public static int design_dark_default_color_primary=0x00000000;
    public static int design_dark_default_color_primary_dark=0x00000000;
    public static int design_dark_default_color_primary_variant=0x00000000;
    public static int design_dark_default_color_secondary=0x00000000;
    public static int design_dark_default_color_secondary_variant=0x00000000;
    public static int design_dark_default_color_surface=0x00000000;
    public static int design_default_color_background=0x00000000;
    public static int design_default_color_error=0x00000000;
    public static int design_default_color_on_background=0x00000000;
    public static int design_default_color_on_error=0x00000000;
    public static int design_default_color_on_primary=0x00000000;
    public static int design_default_color_on_secondary=0x00000000;
    public static int design_default_color_on_surface=0x00000000;
    public static int design_default_color_primary=0x00000000;
    public static int design_default_color_primary_dark=0x00000000;
    public static int design_default_color_primary_variant=0x00000000;
    public static int design_default_color_secondary=0x00000000;
    public static int design_default_color_secondary_variant=0x00000000;
    public static int design_default_color_surface=0x00000000;
    public static int design_error=0x00000000;
    public static int design_fab_shadow_end_color=0x00000000;
    public static int design_fab_shadow_mid_color=0x00000000;
    public static int design_fab_shadow_start_color=0x00000000;
    public static int design_fab_stroke_end_inner_color=0x00000000;
    public static int design_fab_stroke_end_outer_color=0x00000000;
    public static int design_fab_stroke_top_inner_color=0x00000000;
    public static int design_fab_stroke_top_outer_color=0x00000000;
    public static int design_icon_tint=0x00000000;
    public static int design_snackbar_background_color=0x00000000;
    public static int dim_foreground_disabled_material_dark=0x00000000;
    public static int dim_foreground_disabled_material_light=0x00000000;
    public static int dim_foreground_material_dark=0x00000000;
    public static int dim_foreground_material_light=0x00000000;
    public static int drop_target_text=0x00000000;
    public static int error_color_material_dark=0x00000000;
    public static int error_color_material_light=0x00000000;
    public static int focused_background=0x00000000;
    public static int folder_background_dark=0x00000000;
    public static int folder_background_light=0x00000000;
    public static int folder_dot_color=0x00000000;
    public static int folder_hint_text_color_dark=0x00000000;
    public static int folder_hint_text_color_light=0x00000000;
    public static int folder_pagination_color_dark=0x00000000;
    public static int folder_pagination_color_light=0x00000000;
    public static int folder_preview_dark=0x00000000;
    public static int folder_preview_light=0x00000000;
    public static int foreground_material_dark=0x00000000;
    public static int foreground_material_light=0x00000000;
    /**
     * Gray
     */
    public static int gesture_tutorial_action_button_label_color=0x00000000;
    /**
     * Gesture navigation tutorial
     */
    public static int gesture_tutorial_back_arrow_color=0x00000000;
    /**
     * Must contrast gesture_tutorial_fake_wallpaper_color
     */
    public static int gesture_tutorial_fake_previous_task_view_color=0x00000000;
    /**
     * Light Blue
     */
    public static int gesture_tutorial_fake_task_view_color=0x00000000;
    public static int gesture_tutorial_fake_wallpaper_color=0x00000000;
    public static int gesture_tutorial_primary_color=0x00000000;
    /**
     * White
     */
    public static int gesture_tutorial_ripple_color=0x00000000;
    /**
     * Light Green
     */
    public static int gesture_tutorial_taskbar_color=0x00000000;
    public static int highlighted_text_material_dark=0x00000000;
    public static int highlighted_text_material_light=0x00000000;
    public static int home_settings_header_accent=0x00000000;
    public static int home_settings_header_collapsed=0x00000000;
    public static int home_settings_header_expanded=0x00000000;
    public static int home_settings_state_off_color=0x00000000;
    public static int home_settings_state_on_color=0x00000000;
    public static int home_settings_switch_thumb_color=0x00000000;
    public static int home_settings_switch_track_color=0x00000000;
    public static int home_settings_thumb_off_color=0x00000000;
    public static int home_settings_track_off_color=0x00000000;
    public static int home_settings_track_on_color=0x00000000;
    /**
     * Gray 600
     */
    public static int icon_background=0x00000000;
    /**
     * Yellow 600, used for highlighting "important" conversations in settings & notifications
     */
    public static int important_conversation=0x00000000;
    public static int legacy_icon_background=0x00000000;
    public static int material_blue_grey_800=0x00000000;
    public static int material_blue_grey_900=0x00000000;
    public static int material_blue_grey_950=0x00000000;
    public static int material_cursor_color=0x00000000;
    public static int material_deep_teal_200=0x00000000;
    public static int material_deep_teal_500=0x00000000;
    public static int material_grey_100=0x00000000;
    public static int material_grey_300=0x00000000;
    public static int material_grey_50=0x00000000;
    public static int material_grey_600=0x00000000;
    public static int material_grey_800=0x00000000;
    public static int material_grey_850=0x00000000;
    public static int material_grey_900=0x00000000;
    public static int material_on_background_disabled=0x00000000;
    public static int material_on_background_emphasis_high_type=0x00000000;
    public static int material_on_background_emphasis_medium=0x00000000;
    public static int material_on_primary_disabled=0x00000000;
    public static int material_on_primary_emphasis_high_type=0x00000000;
    public static int material_on_primary_emphasis_medium=0x00000000;
    public static int material_on_surface_disabled=0x00000000;
    public static int material_on_surface_emphasis_high_type=0x00000000;
    public static int material_on_surface_emphasis_medium=0x00000000;
    public static int material_on_surface_stroke=0x00000000;
    public static int material_slider_active_tick_marks_color=0x00000000;
    public static int material_slider_active_track_color=0x00000000;
    public static int material_slider_halo_color=0x00000000;
    public static int material_slider_inactive_tick_marks_color=0x00000000;
    public static int material_slider_inactive_track_color=0x00000000;
    public static int material_slider_thumb_color=0x00000000;
    public static int material_timepicker_button_background=0x00000000;
    public static int material_timepicker_button_stroke=0x00000000;
    public static int material_timepicker_clock_text_color=0x00000000;
    public static int material_timepicker_clockface=0x00000000;
    public static int material_timepicker_modebutton_tint=0x00000000;
    /**
     * Mock hotseat
     */
    public static int mock_app_icon_1=0x00000000;
    public static int mock_app_icon_2=0x00000000;
    public static int mock_app_icon_3=0x00000000;
    public static int mock_app_icon_4=0x00000000;
    /**
     * Mock conversation
     */
    public static int mock_conversation_background=0x00000000;
    public static int mock_conversation_message_input=0x00000000;
    public static int mock_conversation_profile_icon=0x00000000;
    public static int mock_conversation_received_message=0x00000000;
    public static int mock_conversation_sent_message=0x00000000;
    public static int mock_conversation_top_bar=0x00000000;
    public static int mock_conversation_top_bar_item=0x00000000;
    /**
     * Mock conversations list
     */
    public static int mock_list_background=0x00000000;
    public static int mock_list_button=0x00000000;
    public static int mock_list_preview_message=0x00000000;
    public static int mock_list_profile_icon=0x00000000;
    public static int mock_list_top_bar=0x00000000;
    public static int mock_list_top_bar_item=0x00000000;
    public static int mock_search_bar=0x00000000;
    /**
     * Mock web page
     */
    public static int mock_webpage_background=0x00000000;
    public static int mock_webpage_page_text=0x00000000;
    public static int mock_webpage_top_bar=0x00000000;
    public static int mock_webpage_top_bar_item=0x00000000;
    /**
     * Black
     */
    public static int mock_webpage_url_bar=0x00000000;
    public static int mock_webpage_url_bar_item=0x00000000;
    public static int mtrl_btn_bg_color_selector=0x00000000;
    public static int mtrl_btn_ripple_color=0x00000000;
    public static int mtrl_btn_stroke_color_selector=0x00000000;
    public static int mtrl_btn_text_btn_bg_color_selector=0x00000000;
    public static int mtrl_btn_text_btn_ripple_color=0x00000000;
    public static int mtrl_btn_text_color_disabled=0x00000000;
    public static int mtrl_btn_text_color_selector=0x00000000;
    public static int mtrl_btn_transparent_bg_color=0x00000000;
    public static int mtrl_calendar_item_stroke_color=0x00000000;
    public static int mtrl_calendar_selected_range=0x00000000;
    public static int mtrl_card_view_foreground=0x00000000;
    public static int mtrl_card_view_ripple=0x00000000;
    public static int mtrl_chip_background_color=0x00000000;
    public static int mtrl_chip_close_icon_tint=0x00000000;
    public static int mtrl_chip_surface_color=0x00000000;
    public static int mtrl_chip_text_color=0x00000000;
    public static int mtrl_choice_chip_background_color=0x00000000;
    public static int mtrl_choice_chip_ripple_color=0x00000000;
    public static int mtrl_choice_chip_text_color=0x00000000;
    public static int mtrl_error=0x00000000;
    public static int mtrl_fab_bg_color_selector=0x00000000;
    public static int mtrl_fab_icon_text_color_selector=0x00000000;
    public static int mtrl_fab_ripple_color=0x00000000;
    public static int mtrl_filled_background_color=0x00000000;
    public static int mtrl_filled_icon_tint=0x00000000;
    public static int mtrl_filled_stroke_color=0x00000000;
    public static int mtrl_indicator_text_color=0x00000000;
    public static int mtrl_navigation_bar_colored_item_tint=0x00000000;
    public static int mtrl_navigation_bar_colored_ripple_color=0x00000000;
    public static int mtrl_navigation_bar_item_tint=0x00000000;
    public static int mtrl_navigation_bar_ripple_color=0x00000000;
    public static int mtrl_navigation_item_background_color=0x00000000;
    public static int mtrl_navigation_item_icon_tint=0x00000000;
    public static int mtrl_navigation_item_text_color=0x00000000;
    public static int mtrl_on_primary_text_btn_text_color_selector=0x00000000;
    public static int mtrl_on_surface_ripple_color=0x00000000;
    public static int mtrl_outlined_icon_tint=0x00000000;
    public static int mtrl_outlined_stroke_color=0x00000000;
    public static int mtrl_popupmenu_overlay_color=0x00000000;
    public static int mtrl_scrim_color=0x00000000;
    public static int mtrl_tabs_colored_ripple_color=0x00000000;
    public static int mtrl_tabs_icon_color_selector=0x00000000;
    public static int mtrl_tabs_icon_color_selector_colored=0x00000000;
    public static int mtrl_tabs_legacy_text_color_selector=0x00000000;
    public static int mtrl_tabs_ripple_color=0x00000000;
    public static int mtrl_text_btn_text_color_selector=0x00000000;
    public static int mtrl_textinput_default_box_stroke_color=0x00000000;
    public static int mtrl_textinput_disabled_color=0x00000000;
    public static int mtrl_textinput_filled_box_default_background_color=0x00000000;
    public static int mtrl_textinput_focused_box_stroke_color=0x00000000;
    public static int mtrl_textinput_hovered_box_stroke_color=0x00000000;
    public static int notification_action_color_filter=0x00000000;
    public static int notification_icon_bg_color=0x00000000;
    /**
     * Popup container
     */
    public static int notification_icon_default_color=0x00000000;
    public static int overview_button=0x00000000;
    public static int overview_scrim=0x00000000;
    public static int overview_scrim_dark=0x00000000;
    /**
     * Gray 300
     */
    public static int popup_color_neutral_dark=0x00000000;
    /**
     * Gray 800
     */
    public static int popup_color_primary_dark=0x00000000;
    /**
     * Gray 300
     */
    public static int popup_color_primary_light=0x00000000;
    /**
     * Gray 800
     */
    public static int popup_color_secondary_dark=0x00000000;
    public static int popup_color_secondary_light=0x00000000;
    public static int popup_color_tertiary_dark=0x00000000;
    public static int popup_color_tertiary_light=0x00000000;
    public static int popup_notification_dot_dark=0x00000000;
    public static int popup_notification_dot_light=0x00000000;
    public static int popup_shade_first=0x00000000;
    public static int popup_shade_first_dark=0x00000000;
    /**
     * Gray 600
     */
    public static int popup_shade_first_light=0x00000000;
    public static int popup_shade_second=0x00000000;
    public static int popup_shade_second_dark=0x00000000;
    public static int popup_shade_second_light=0x00000000;
    public static int popup_shade_third=0x00000000;
    public static int popup_shade_third_dark=0x00000000;
    public static int popup_shade_third_light=0x00000000;
    public static int preference_fallback_accent_color=0x00000000;
    public static int primary_dark_material_dark=0x00000000;
    public static int primary_dark_material_light=0x00000000;
    public static int primary_material_dark=0x00000000;
    public static int primary_material_light=0x00000000;
    public static int primary_text_default_material_dark=0x00000000;
    public static int primary_text_default_material_light=0x00000000;
    public static int primary_text_disabled_material_dark=0x00000000;
    public static int primary_text_disabled_material_light=0x00000000;
    public static int radiobutton_themeable_attribute_color=0x00000000;
    public static int ripple_material_dark=0x00000000;
    public static int ripple_material_light=0x00000000;
    public static int secondary_text_default_material_dark=0x00000000;
    public static int secondary_text_default_material_light=0x00000000;
    public static int secondary_text_disabled_material_dark=0x00000000;
    public static int secondary_text_disabled_material_light=0x00000000;
    public static int spring_loaded_highlighted_panel_border_color=0x00000000;
    public static int spring_loaded_panel_color=0x00000000;
    public static int surface=0x00000000;
    public static int switch_thumb_disabled_material_dark=0x00000000;
    public static int switch_thumb_disabled_material_light=0x00000000;
    public static int switch_thumb_material_dark=0x00000000;
    public static int switch_thumb_material_light=0x00000000;
    public static int switch_thumb_normal_material_dark=0x00000000;
    public static int switch_thumb_normal_material_light=0x00000000;
    /**
     * Taskbar
     */
    public static int taskbar_background=0x00000000;
    /**
     * The dark navigation button color is only used in the rare cases that taskbar isn't drawing
     * its background and the underlying app has requested dark buttons.
     */
    public static int taskbar_nav_icon_dark_color=0x00000000;
    public static int taskbar_nav_icon_light_color=0x00000000;
    public static int taskbar_nav_icon_selection_ripple=0x00000000;
    public static int taskbar_stashed_handle_dark_color=0x00000000;
    public static int taskbar_stashed_handle_light_color=0x00000000;
    public static int test_mtrl_calendar_day=0x00000000;
    public static int test_mtrl_calendar_day_selected=0x00000000;
    public static int text_color_primary_dark=0x00000000;
    public static int text_color_secondary_dark=0x00000000;
    public static int text_color_tertiary_dark=0x00000000;
    public static int tooltip_background_dark=0x00000000;
    public static int tooltip_background_light=0x00000000;
    public static int uninstall_target_hover_tint=0x00000000;
    public static int wallpaper_popup_scrim=0x00000000;
    public static int wallpaper_scrim_color=0x00000000;
    public static int widgets_picker_scrim=0x00000000;
    public static int workspace_accent_color_dark=0x00000000;
    public static int workspace_accent_color_light=0x00000000;
    public static int workspace_text_color_dark=0x00000000;
    public static int workspace_text_color_light=0x00000000;
  }
  public static final class dimen {
    public static int abc_action_bar_content_inset_material=0x00000000;
    public static int abc_action_bar_content_inset_with_nav=0x00000000;
    public static int abc_action_bar_default_height_material=0x00000000;
    public static int abc_action_bar_default_padding_end_material=0x00000000;
    public static int abc_action_bar_default_padding_start_material=0x00000000;
    public static int abc_action_bar_elevation_material=0x00000000;
    public static int abc_action_bar_icon_vertical_padding_material=0x00000000;
    public static int abc_action_bar_overflow_padding_end_material=0x00000000;
    public static int abc_action_bar_overflow_padding_start_material=0x00000000;
    public static int abc_action_bar_stacked_max_height=0x00000000;
    public static int abc_action_bar_stacked_tab_max_width=0x00000000;
    public static int abc_action_bar_subtitle_bottom_margin_material=0x00000000;
    public static int abc_action_bar_subtitle_top_margin_material=0x00000000;
    public static int abc_action_button_min_height_material=0x00000000;
    public static int abc_action_button_min_width_material=0x00000000;
    public static int abc_action_button_min_width_overflow_material=0x00000000;
    public static int abc_alert_dialog_button_bar_height=0x00000000;
    public static int abc_alert_dialog_button_dimen=0x00000000;
    public static int abc_button_inset_horizontal_material=0x00000000;
    public static int abc_button_inset_vertical_material=0x00000000;
    public static int abc_button_padding_horizontal_material=0x00000000;
    public static int abc_button_padding_vertical_material=0x00000000;
    public static int abc_cascading_menus_min_smallest_width=0x00000000;
    public static int abc_config_prefDialogWidth=0x00000000;
    public static int abc_control_corner_material=0x00000000;
    public static int abc_control_inset_material=0x00000000;
    public static int abc_control_padding_material=0x00000000;
    public static int abc_dialog_corner_radius_material=0x00000000;
    public static int abc_dialog_fixed_height_major=0x00000000;
    public static int abc_dialog_fixed_height_minor=0x00000000;
    public static int abc_dialog_fixed_width_major=0x00000000;
    public static int abc_dialog_fixed_width_minor=0x00000000;
    public static int abc_dialog_list_padding_bottom_no_buttons=0x00000000;
    public static int abc_dialog_list_padding_top_no_title=0x00000000;
    public static int abc_dialog_min_width_major=0x00000000;
    public static int abc_dialog_min_width_minor=0x00000000;
    public static int abc_dialog_padding_material=0x00000000;
    public static int abc_dialog_padding_top_material=0x00000000;
    public static int abc_dialog_title_divider_material=0x00000000;
    public static int abc_disabled_alpha_material_dark=0x00000000;
    public static int abc_disabled_alpha_material_light=0x00000000;
    public static int abc_dropdownitem_icon_width=0x00000000;
    public static int abc_dropdownitem_text_padding_left=0x00000000;
    public static int abc_dropdownitem_text_padding_right=0x00000000;
    public static int abc_edit_text_inset_bottom_material=0x00000000;
    public static int abc_edit_text_inset_horizontal_material=0x00000000;
    public static int abc_edit_text_inset_top_material=0x00000000;
    public static int abc_floating_window_z=0x00000000;
    public static int abc_list_item_height_large_material=0x00000000;
    public static int abc_list_item_height_material=0x00000000;
    public static int abc_list_item_height_small_material=0x00000000;
    public static int abc_list_item_padding_horizontal_material=0x00000000;
    public static int abc_panel_menu_list_width=0x00000000;
    public static int abc_progress_bar_height_material=0x00000000;
    public static int abc_search_view_preferred_height=0x00000000;
    public static int abc_search_view_preferred_width=0x00000000;
    public static int abc_seekbar_track_background_height_material=0x00000000;
    public static int abc_seekbar_track_progress_height_material=0x00000000;
    public static int abc_select_dialog_padding_start_material=0x00000000;
    public static int abc_slice_action_row_height=0x00000000;
    public static int abc_slice_big_pic_max_height=0x00000000;
    public static int abc_slice_big_pic_min_height=0x00000000;
    public static int abc_slice_grid_gutter=0x00000000;
    public static int abc_slice_grid_image_min_width=0x00000000;
    public static int abc_slice_grid_image_only_height=0x00000000;
    public static int abc_slice_grid_image_text_height=0x00000000;
    public static int abc_slice_grid_max_height=0x00000000;
    public static int abc_slice_grid_min_height=0x00000000;
    public static int abc_slice_grid_raw_image_text_offset=0x00000000;
    public static int abc_slice_grid_small_image_text_height=0x00000000;
    public static int abc_slice_grid_text_inner_padding=0x00000000;
    public static int abc_slice_grid_text_padding=0x00000000;
    public static int abc_slice_icon_size=0x00000000;
    public static int abc_slice_large_height=0x00000000;
    public static int abc_slice_padding=0x00000000;
    public static int abc_slice_row_active_input_height=0x00000000;
    public static int abc_slice_row_max_height=0x00000000;
    public static int abc_slice_row_min_height=0x00000000;
    public static int abc_slice_row_range_height=0x00000000;
    public static int abc_slice_row_range_inline_height=0x00000000;
    public static int abc_slice_row_range_multi_text_height=0x00000000;
    public static int abc_slice_row_range_single_text_height=0x00000000;
    public static int abc_slice_row_selection_height=0x00000000;
    public static int abc_slice_row_selection_multi_text_height=0x00000000;
    public static int abc_slice_row_selection_single_text_height=0x00000000;
    public static int abc_slice_shortcut_size=0x00000000;
    public static int abc_slice_small_height=0x00000000;
    public static int abc_slice_small_image_size=0x00000000;
    public static int abc_star_big=0x00000000;
    public static int abc_star_medium=0x00000000;
    public static int abc_star_small=0x00000000;
    public static int abc_switch_padding=0x00000000;
    public static int abc_text_size_body_1_material=0x00000000;
    public static int abc_text_size_body_2_material=0x00000000;
    public static int abc_text_size_button_material=0x00000000;
    public static int abc_text_size_caption_material=0x00000000;
    public static int abc_text_size_display_1_material=0x00000000;
    public static int abc_text_size_display_2_material=0x00000000;
    public static int abc_text_size_display_3_material=0x00000000;
    public static int abc_text_size_display_4_material=0x00000000;
    public static int abc_text_size_headline_material=0x00000000;
    public static int abc_text_size_large_material=0x00000000;
    public static int abc_text_size_medium_material=0x00000000;
    public static int abc_text_size_menu_header_material=0x00000000;
    public static int abc_text_size_menu_material=0x00000000;
    public static int abc_text_size_small_material=0x00000000;
    public static int abc_text_size_subhead_material=0x00000000;
    public static int abc_text_size_subtitle_material_toolbar=0x00000000;
    public static int abc_text_size_title_material=0x00000000;
    public static int abc_text_size_title_material_toolbar=0x00000000;
    /**
     * Minimum distance to swipe to trigger accessibility gesture
     */
    public static int accessibility_gesture_min_swipe_distance=0x00000000;
    public static int action_bar_size=0x00000000;
    public static int all_apps_background_canvas_height=0x00000000;
    public static int all_apps_background_canvas_width=0x00000000;
    public static int all_apps_content_fade_in_offset=0x00000000;
    public static int all_apps_divider_height=0x00000000;
    public static int all_apps_divider_margin_vertical=0x00000000;
    public static int all_apps_divider_width=0x00000000;
    public static int all_apps_empty_search_bg_top_offset=0x00000000;
    public static int all_apps_empty_search_message_top_offset=0x00000000;
    public static int all_apps_header_bottom_padding=0x00000000;
    /**
     * Search bar in All Apps
     */
    public static int all_apps_header_max_elevation=0x00000000;
    public static int all_apps_header_pill_corner_radius=0x00000000;
    public static int all_apps_header_pill_height=0x00000000;
    public static int all_apps_header_scroll_to_elevation=0x00000000;
    public static int all_apps_header_shadow_height=0x00000000;
    public static int all_apps_header_tab_height=0x00000000;
    public static int all_apps_header_top_padding=0x00000000;
    public static int all_apps_height_extra=0x00000000;
    public static int all_apps_label_bottom_padding=0x00000000;
    public static int all_apps_label_text_size=0x00000000;
    public static int all_apps_label_top_padding=0x00000000;
    /**
     * All Apps
     */
    public static int all_apps_open_vertical_translate=0x00000000;
    public static int all_apps_prediction_row_divider_height=0x00000000;
    public static int all_apps_search_bar_bottom_padding=0x00000000;
    public static int all_apps_search_bar_field_height=0x00000000;
    /**
     * Configuration resources
     */
    public static int all_apps_spring_damping_ratio=0x00000000;
    public static int all_apps_spring_stiffness=0x00000000;
    public static int all_apps_tabs_button_horizontal_padding=0x00000000;
    public static int all_apps_tabs_indicator_height=0x00000000;
    public static int all_apps_tabs_vertical_padding=0x00000000;
    public static int all_apps_tip_bottom_margin=0x00000000;
    public static int all_apps_work_profile_tab_footer_bottom_padding=0x00000000;
    public static int all_apps_work_profile_tab_footer_top_padding=0x00000000;
    /**
     * All Set page
     */
    public static int allset_page_margin_horizontal=0x00000000;
    public static int allset_subtitle_margin_top=0x00000000;
    public static int allset_subtitle_width_max=0x00000000;
    public static int allset_swipe_up_shift=0x00000000;
    public static int allset_title_icon_margin_top=0x00000000;
    public static int allset_title_margin_top=0x00000000;
    public static int appcompat_dialog_background_inset=0x00000000;
    public static int arrow_toast_arrow_width=0x00000000;
    /**
     * The size of corner radius of the arrow in the arrow toast.
     */
    public static int arrow_toast_corner_radius=0x00000000;
    public static int arrow_toast_elevation=0x00000000;
    /**
     * Base Swipe Detector, speed in dp/s
     */
    public static int base_swift_detector_fling_release_velocity=0x00000000;
    public static int bg_popup_item_height=0x00000000;
    public static int bg_popup_item_vertical_padding=0x00000000;
    public static int bg_popup_item_width=0x00000000;
    public static int bg_popup_padding=0x00000000;
    /**
     * Notifications
     */
    public static int bg_round_rect_radius=0x00000000;
    public static int blur_size_click_shadow=0x00000000;
    public static int blur_size_medium_outline=0x00000000;
    /**
     * Shadows and outlines
     */
    public static int blur_size_thin_outline=0x00000000;
    /**
     * Onboarding bottomsheet related
     */
    public static int bottom_sheet_edu_padding=0x00000000;
    public static int cardview_compat_inset_shadow=0x00000000;
    public static int cardview_default_elevation=0x00000000;
    public static int cardview_default_radius=0x00000000;
    public static int chip_hint_border_width=0x00000000;
    public static int chip_hint_corner_radius=0x00000000;
    public static int chip_hint_elevation=0x00000000;
    public static int chip_hint_end_padding=0x00000000;
    public static int chip_hint_horizontal_margin=0x00000000;
    public static int chip_hint_outer_padding=0x00000000;
    public static int chip_hint_start_padding=0x00000000;
    public static int chip_hint_vertical_offset=0x00000000;
    public static int chip_icon_size=0x00000000;
    public static int chip_text_height=0x00000000;
    public static int chip_text_size=0x00000000;
    public static int chip_text_start_padding=0x00000000;
    public static int chip_text_top_padding=0x00000000;
    public static int click_shadow_elevation=0x00000000;
    public static int click_shadow_high_shift=0x00000000;
    public static int clock_face_margin_start=0x00000000;
    public static int closing_window_trans_y=0x00000000;
    public static int compat_button_inset_horizontal_material=0x00000000;
    public static int compat_button_inset_vertical_material=0x00000000;
    public static int compat_button_padding_horizontal_material=0x00000000;
    public static int compat_button_padding_vertical_material=0x00000000;
    public static int compat_control_corner_material=0x00000000;
    public static int compat_notification_large_icon_max_height=0x00000000;
    public static int compat_notification_large_icon_max_width=0x00000000;
    /**
     * Launcher app transition
     */
    public static int content_scale=0x00000000;
    public static int deep_shortcut_drag_handle_size=0x00000000;
    public static int deep_shortcut_drawable_padding=0x00000000;
    public static int deep_shortcut_icon_size=0x00000000;
    /**
     * Deep shortcuts
     */
    public static int deep_shortcuts_elevation=0x00000000;
    /**
     * an icon with shortcuts must be dragged this far before the container is removed.
     */
    public static int deep_shortcuts_start_drag_threshold=0x00000000;
    /**
     * popup_padding_start + icon_size + 10dp
     */
    public static int deep_shortcuts_text_padding_start=0x00000000;
    public static int def_drawer_elevation=0x00000000;
    /**
     * Theming related
     */
    public static int default_dialog_corner_radius=0x00000000;
    public static int default_dimension=0x00000000;
    /**
     * Various configurations to control the simple cache implementation
     */
    public static int default_icon_bitmap_size=0x00000000;
    public static int default_task_dismiss_drag_velocity=0x00000000;
    public static int default_task_dismiss_drag_velocity_grid=0x00000000;
    public static int default_task_dismiss_drag_velocity_grid_focus_task=0x00000000;
    public static int design_appbar_elevation=0x00000000;
    public static int design_bottom_navigation_active_item_max_width=0x00000000;
    public static int design_bottom_navigation_active_item_min_width=0x00000000;
    public static int design_bottom_navigation_active_text_size=0x00000000;
    public static int design_bottom_navigation_elevation=0x00000000;
    public static int design_bottom_navigation_height=0x00000000;
    public static int design_bottom_navigation_icon_size=0x00000000;
    public static int design_bottom_navigation_item_max_width=0x00000000;
    public static int design_bottom_navigation_item_min_width=0x00000000;
    public static int design_bottom_navigation_label_padding=0x00000000;
    public static int design_bottom_navigation_margin=0x00000000;
    public static int design_bottom_navigation_shadow_height=0x00000000;
    public static int design_bottom_navigation_text_size=0x00000000;
    public static int design_bottom_sheet_elevation=0x00000000;
    public static int design_bottom_sheet_modal_elevation=0x00000000;
    public static int design_bottom_sheet_peek_height_min=0x00000000;
    public static int design_fab_border_width=0x00000000;
    public static int design_fab_elevation=0x00000000;
    public static int design_fab_image_size=0x00000000;
    public static int design_fab_size_mini=0x00000000;
    public static int design_fab_size_normal=0x00000000;
    public static int design_fab_translation_z_hovered_focused=0x00000000;
    public static int design_fab_translation_z_pressed=0x00000000;
    public static int design_navigation_elevation=0x00000000;
    public static int design_navigation_icon_padding=0x00000000;
    public static int design_navigation_icon_size=0x00000000;
    public static int design_navigation_item_horizontal_padding=0x00000000;
    public static int design_navigation_item_icon_padding=0x00000000;
    public static int design_navigation_max_width=0x00000000;
    public static int design_navigation_padding_bottom=0x00000000;
    public static int design_navigation_separator_vertical_padding=0x00000000;
    public static int design_snackbar_action_inline_max_width=0x00000000;
    public static int design_snackbar_action_text_color_alpha=0x00000000;
    public static int design_snackbar_background_corner_radius=0x00000000;
    public static int design_snackbar_elevation=0x00000000;
    public static int design_snackbar_extra_spacing_horizontal=0x00000000;
    public static int design_snackbar_max_width=0x00000000;
    public static int design_snackbar_min_width=0x00000000;
    public static int design_snackbar_padding_horizontal=0x00000000;
    public static int design_snackbar_padding_vertical=0x00000000;
    public static int design_snackbar_padding_vertical_2lines=0x00000000;
    public static int design_snackbar_text_size=0x00000000;
    public static int design_tab_max_width=0x00000000;
    public static int design_tab_scrollable_min_width=0x00000000;
    public static int design_tab_text_size=0x00000000;
    public static int design_tab_text_size_2line=0x00000000;
    public static int design_textinput_caption_translate_y=0x00000000;
    /**
     * Developer Options
     */
    public static int developer_options_filter_margins=0x00000000;
    /**
     * Distance to move the tasks when swiping up while the device is locked
     */
    public static int device_locked_y_offset=0x00000000;
    public static int dialogCornerRadius=0x00000000;
    public static int disabled_alpha_material_dark=0x00000000;
    public static int disabled_alpha_material_light=0x00000000;
    public static int dismiss_task_trans_x_damping_ratio=0x00000000;
    public static int dismiss_task_trans_x_stiffness=0x00000000;
    public static int dismiss_task_trans_y_damping_ratio=0x00000000;
    public static int dismiss_task_trans_y_stiffness=0x00000000;
    /**
     * the distance an icon must be dragged before button drop targets accept it
     */
    public static int drag_distanceThreshold=0x00000000;
    /**
     * Elevation for the drag view. It should be larger than elevation of all other drag sources
     * and drop targets like all-apps and folders
     */
    public static int drag_elevation=0x00000000;
    /**
     * DragController
     */
    public static int drag_flingToDeleteMinVelocity=0x00000000;
    public static int drop_target_bar_margin_horizontal=0x00000000;
    public static int drop_target_button_drawable_padding=0x00000000;
    /**
     * Drag padding to add to the bottom of drop targets
     * Drag padding to add to the bottom of drop targets
     */
    public static int drop_target_drag_padding=0x00000000;
    public static int drop_target_shadow_elevation=0x00000000;
    public static int drop_target_text_size=0x00000000;
    public static int drop_target_vertical_gap=0x00000000;
    public static int dynamic_grid_cell_border_spacing=0x00000000;
    public static int dynamic_grid_cell_layout_padding=0x00000000;
    public static int dynamic_grid_cell_padding_x=0x00000000;
    /**
     * Drop target bar
     */
    public static int dynamic_grid_drop_target_size=0x00000000;
    /**
     * Dynamic Grid
     */
    public static int dynamic_grid_edge_margin=0x00000000;
    /**
     * Extra bottom padding for non-tall devices.
     */
    public static int dynamic_grid_hotseat_bottom_non_tall_padding=0x00000000;
    public static int dynamic_grid_hotseat_bottom_padding=0x00000000;
    public static int dynamic_grid_hotseat_extra_vertical_size=0x00000000;
    /**
     * Hotseat
     */
    public static int dynamic_grid_hotseat_side_padding=0x00000000;
    /**
     * Hotseat
     */
    public static int dynamic_grid_hotseat_top_padding=0x00000000;
    /**
     * Dynamic grid
     */
    public static int dynamic_grid_icon_drawable_padding=0x00000000;
    public static int dynamic_grid_left_right_margin=0x00000000;
    /**
     * Minimum space between workspace and hotseat in spring loaded mode
     */
    public static int dynamic_grid_min_spring_loaded_space=0x00000000;
    /**
     * Size of the maximum radius for the enforced rounded rectangles.
     */
    public static int enforced_rounded_corner_max_radius=0x00000000;
    public static int fastscroll_default_thickness=0x00000000;
    public static int fastscroll_end_margin=0x00000000;
    public static int fastscroll_margin=0x00000000;
    public static int fastscroll_minimum_range=0x00000000;
    public static int fastscroll_popup_height=0x00000000;
    public static int fastscroll_popup_margin=0x00000000;
    public static int fastscroll_popup_padding=0x00000000;
    public static int fastscroll_popup_text_size=0x00000000;
    /**
     * Fast scroll
     */
    public static int fastscroll_popup_width=0x00000000;
    public static int fastscroll_thumb_height=0x00000000;
    public static int fastscroll_thumb_padding=0x00000000;
    public static int fastscroll_thumb_touch_inset=0x00000000;
    public static int fastscroll_track_max_width=0x00000000;
    /**
     * Fast scroll
     */
    public static int fastscroll_track_min_width=0x00000000;
    /**
     * Fast scroller draws the content horizontally centered. The end of the track should be
     * aligned at the end of the container.
     * fastscroll_end_margin = - (fastscroll_width - fastscroll_track_min_width) / 2
     */
    public static int fastscroll_width=0x00000000;
    /**
     * Floating rotation button
     */
    public static int floating_rotation_button_diameter=0x00000000;
    public static int floating_rotation_button_min_margin=0x00000000;
    public static int floating_rotation_button_taskbar_bottom_margin=0x00000000;
    public static int floating_rotation_button_taskbar_left_margin=0x00000000;
    public static int folder_cell_x_padding=0x00000000;
    public static int folder_cell_y_padding=0x00000000;
    public static int folder_content_padding_left_right=0x00000000;
    public static int folder_content_padding_top=0x00000000;
    public static int folder_label_height=0x00000000;
    /**
     * label text size = workspace text size multiplied by this scale
     */
    public static int folder_label_text_scale=0x00000000;
    public static int gesture_tutorial_conversation_icon_corner_radius=0x00000000;
    /**
     * Gesture Tutorial mock conversation lists
     */
    public static int gesture_tutorial_conversation_icon_size=0x00000000;
    public static int gesture_tutorial_conversation_line_padding_start=0x00000000;
    public static int gesture_tutorial_conversation_list_padding_top=0x00000000;
    /**
     * Tips Gesture Tutorial
     */
    public static int gesture_tutorial_feedback_margin_start_end=0x00000000;
    public static int gesture_tutorial_foldable_feedback_margin_start_end=0x00000000;
    public static int gesture_tutorial_foldable_message_padding_start_end=0x00000000;
    public static int gesture_tutorial_hotseat_icon_corner_radius=0x00000000;
    public static int gesture_tutorial_hotseat_icon_search_margin=0x00000000;
    /**
     * Gesture Tutorial mock hotseats
     */
    public static int gesture_tutorial_hotseat_icon_size=0x00000000;
    public static int gesture_tutorial_hotseat_search_corner_radius=0x00000000;
    public static int gesture_tutorial_hotseat_search_height=0x00000000;
    public static int gesture_tutorial_message_icon_corner_radius=0x00000000;
    /**
     * Gesture Tutorial mock conversations
     */
    public static int gesture_tutorial_message_icon_size=0x00000000;
    public static int gesture_tutorial_message_input_margin_top=0x00000000;
    public static int gesture_tutorial_message_large_margin_bottom=0x00000000;
    public static int gesture_tutorial_message_padding_end=0x00000000;
    public static int gesture_tutorial_message_padding_start=0x00000000;
    public static int gesture_tutorial_message_small_margin_bottom=0x00000000;
    public static int gesture_tutorial_mock_taskbar_height=0x00000000;
    public static int gesture_tutorial_multi_row_task_view_spacing=0x00000000;
    public static int gesture_tutorial_small_task_view_corner_radius=0x00000000;
    public static int gesture_tutorial_taskbar_icon_corner_radius=0x00000000;
    /**
     * Gesture Tutorial mock taskbar
     */
    public static int gesture_tutorial_taskbar_icon_size=0x00000000;
    public static int gesture_tutorial_taskbar_padding_start_end=0x00000000;
    public static int gesture_tutorial_webpage_large_corner_radius=0x00000000;
    public static int gesture_tutorial_webpage_large_line_height=0x00000000;
    public static int gesture_tutorial_webpage_large_margin_top=0x00000000;
    public static int gesture_tutorial_webpage_medium_corner_radius=0x00000000;
    /**
     * Gesture Tutorial mock webpages
     */
    public static int gesture_tutorial_webpage_padding_top=0x00000000;
    public static int gesture_tutorial_webpage_small_corner_radius=0x00000000;
    public static int gesture_tutorial_webpage_small_line_height=0x00000000;
    public static int gesture_tutorial_webpage_small_margin_top=0x00000000;
    public static int gestures_assistant_drag_threshold=0x00000000;
    public static int gestures_assistant_fling_threshold=0x00000000;
    /**
     * Distance from the vertical edges of the screen in which assist gestures are recognized
     */
    public static int gestures_assistant_width=0x00000000;
    /**
     * Threshold for draging distance to enable one-handed mode
     */
    public static int gestures_onehanded_drag_threshold=0x00000000;
    public static int gestures_overscroll_active_threshold=0x00000000;
    public static int gestures_overscroll_finish_threshold=0x00000000;
    /**
     * Overscroll Gesture
     */
    public static int gestures_overscroll_fling_threshold=0x00000000;
    public static int grid_visualization_cell_spacing=0x00000000;
    /**
     * Workspace grid visualization parameters
     */
    public static int grid_visualization_rounding_radius=0x00000000;
    public static int highlight_alpha_material_colored=0x00000000;
    public static int highlight_alpha_material_dark=0x00000000;
    public static int highlight_alpha_material_light=0x00000000;
    public static int hint_alpha_material_dark=0x00000000;
    public static int hint_alpha_material_light=0x00000000;
    public static int hint_pressed_alpha_material_dark=0x00000000;
    public static int hint_pressed_alpha_material_light=0x00000000;
    public static int hint_scale_damping_ratio=0x00000000;
    public static int hint_scale_stiffness=0x00000000;
    public static int hint_scale_velocity_dp_per_s=0x00000000;
    /**
     * Distance to move elements when swiping up to go home from launcher
     */
    public static int home_pullback_distance=0x00000000;
    public static int horizontal_ellipsis_size=0x00000000;
    public static int horizontal_spring_damping_ratio=0x00000000;
    public static int horizontal_spring_stiffness=0x00000000;
    public static int item_touch_helper_max_drag_scroll_per_frame=0x00000000;
    public static int item_touch_helper_swipe_escape_max_velocity=0x00000000;
    public static int item_touch_helper_swipe_escape_velocity=0x00000000;
    /**
     * The maximum width of the navigation bar ripples.
     * The maximum width of the navigation bar ripples.
     */
    public static int key_button_ripple_max_width=0x00000000;
    public static int keyboard_drag_stroke_width=0x00000000;
    public static int material_bottom_sheet_max_width=0x00000000;
    public static int material_clock_display_padding=0x00000000;
    public static int material_clock_face_margin_top=0x00000000;
    public static int material_clock_hand_center_dot_radius=0x00000000;
    public static int material_clock_hand_padding=0x00000000;
    public static int material_clock_hand_stroke_width=0x00000000;
    public static int material_clock_number_text_size=0x00000000;
    public static int material_clock_period_toggle_height=0x00000000;
    public static int material_clock_period_toggle_margin_left=0x00000000;
    public static int material_clock_period_toggle_width=0x00000000;
    public static int material_clock_size=0x00000000;
    public static int material_cursor_inset_bottom=0x00000000;
    public static int material_cursor_inset_top=0x00000000;
    public static int material_cursor_width=0x00000000;
    public static int material_emphasis_disabled=0x00000000;
    public static int material_emphasis_high_type=0x00000000;
    public static int material_emphasis_medium=0x00000000;
    public static int material_filled_edittext_font_1_3_padding_bottom=0x00000000;
    public static int material_filled_edittext_font_1_3_padding_top=0x00000000;
    public static int material_filled_edittext_font_2_0_padding_bottom=0x00000000;
    public static int material_filled_edittext_font_2_0_padding_top=0x00000000;
    public static int material_font_1_3_box_collapsed_padding_top=0x00000000;
    public static int material_font_2_0_box_collapsed_padding_top=0x00000000;
    public static int material_helper_text_default_padding_top=0x00000000;
    public static int material_helper_text_font_1_3_padding_horizontal=0x00000000;
    public static int material_helper_text_font_1_3_padding_top=0x00000000;
    public static int material_input_text_to_prefix_suffix_padding=0x00000000;
    public static int material_text_view_test_line_height=0x00000000;
    public static int material_text_view_test_line_height_override=0x00000000;
    public static int material_textinput_default_width=0x00000000;
    public static int material_textinput_max_width=0x00000000;
    public static int material_textinput_min_width=0x00000000;
    public static int material_time_picker_minimum_screen_height=0x00000000;
    public static int material_time_picker_minimum_screen_width=0x00000000;
    public static int material_timepicker_dialog_buttons_margin_top=0x00000000;
    public static int max_shadow_radius=0x00000000;
    /**
     * These speeds are in dp/s
     */
    public static int max_task_dismiss_drag_velocity=0x00000000;
    public static int motion_pause_detector_min_displacement_from_app=0x00000000;
    public static int motion_pause_detector_speed_fast=0x00000000;
    public static int motion_pause_detector_speed_slow=0x00000000;
    public static int motion_pause_detector_speed_somewhat_fast=0x00000000;
    /**
     * These speeds are in dp / ms
     */
    public static int motion_pause_detector_speed_very_slow=0x00000000;
    public static int mtrl_alert_dialog_background_inset_bottom=0x00000000;
    public static int mtrl_alert_dialog_background_inset_end=0x00000000;
    public static int mtrl_alert_dialog_background_inset_start=0x00000000;
    public static int mtrl_alert_dialog_background_inset_top=0x00000000;
    public static int mtrl_alert_dialog_picker_background_inset=0x00000000;
    public static int mtrl_badge_horizontal_edge_offset=0x00000000;
    public static int mtrl_badge_long_text_horizontal_padding=0x00000000;
    public static int mtrl_badge_radius=0x00000000;
    public static int mtrl_badge_text_horizontal_edge_offset=0x00000000;
    public static int mtrl_badge_text_size=0x00000000;
    public static int mtrl_badge_toolbar_action_menu_item_horizontal_offset=0x00000000;
    public static int mtrl_badge_toolbar_action_menu_item_vertical_offset=0x00000000;
    public static int mtrl_badge_with_text_radius=0x00000000;
    public static int mtrl_bottomappbar_fabOffsetEndMode=0x00000000;
    public static int mtrl_bottomappbar_fab_bottom_margin=0x00000000;
    public static int mtrl_bottomappbar_fab_cradle_margin=0x00000000;
    public static int mtrl_bottomappbar_fab_cradle_rounded_corner_radius=0x00000000;
    public static int mtrl_bottomappbar_fab_cradle_vertical_offset=0x00000000;
    public static int mtrl_bottomappbar_height=0x00000000;
    public static int mtrl_btn_corner_radius=0x00000000;
    public static int mtrl_btn_dialog_btn_min_width=0x00000000;
    public static int mtrl_btn_disabled_elevation=0x00000000;
    public static int mtrl_btn_disabled_z=0x00000000;
    public static int mtrl_btn_elevation=0x00000000;
    public static int mtrl_btn_focused_z=0x00000000;
    public static int mtrl_btn_hovered_z=0x00000000;
    public static int mtrl_btn_icon_btn_padding_left=0x00000000;
    public static int mtrl_btn_icon_padding=0x00000000;
    public static int mtrl_btn_inset=0x00000000;
    public static int mtrl_btn_letter_spacing=0x00000000;
    public static int mtrl_btn_max_width=0x00000000;
    public static int mtrl_btn_padding_bottom=0x00000000;
    public static int mtrl_btn_padding_left=0x00000000;
    public static int mtrl_btn_padding_right=0x00000000;
    public static int mtrl_btn_padding_top=0x00000000;
    public static int mtrl_btn_pressed_z=0x00000000;
    public static int mtrl_btn_snackbar_margin_horizontal=0x00000000;
    public static int mtrl_btn_stroke_size=0x00000000;
    public static int mtrl_btn_text_btn_icon_padding=0x00000000;
    public static int mtrl_btn_text_btn_padding_left=0x00000000;
    public static int mtrl_btn_text_btn_padding_right=0x00000000;
    public static int mtrl_btn_text_size=0x00000000;
    public static int mtrl_btn_z=0x00000000;
    public static int mtrl_calendar_action_confirm_button_min_width=0x00000000;
    public static int mtrl_calendar_action_height=0x00000000;
    public static int mtrl_calendar_action_padding=0x00000000;
    public static int mtrl_calendar_bottom_padding=0x00000000;
    public static int mtrl_calendar_content_padding=0x00000000;
    public static int mtrl_calendar_day_corner=0x00000000;
    public static int mtrl_calendar_day_height=0x00000000;
    public static int mtrl_calendar_day_horizontal_padding=0x00000000;
    public static int mtrl_calendar_day_today_stroke=0x00000000;
    public static int mtrl_calendar_day_vertical_padding=0x00000000;
    public static int mtrl_calendar_day_width=0x00000000;
    public static int mtrl_calendar_days_of_week_height=0x00000000;
    public static int mtrl_calendar_dialog_background_inset=0x00000000;
    public static int mtrl_calendar_header_content_padding=0x00000000;
    public static int mtrl_calendar_header_content_padding_fullscreen=0x00000000;
    public static int mtrl_calendar_header_divider_thickness=0x00000000;
    public static int mtrl_calendar_header_height=0x00000000;
    public static int mtrl_calendar_header_height_fullscreen=0x00000000;
    public static int mtrl_calendar_header_selection_line_height=0x00000000;
    public static int mtrl_calendar_header_text_padding=0x00000000;
    public static int mtrl_calendar_header_toggle_margin_bottom=0x00000000;
    public static int mtrl_calendar_header_toggle_margin_top=0x00000000;
    public static int mtrl_calendar_landscape_header_width=0x00000000;
    public static int mtrl_calendar_maximum_default_fullscreen_minor_axis=0x00000000;
    public static int mtrl_calendar_month_horizontal_padding=0x00000000;
    public static int mtrl_calendar_month_vertical_padding=0x00000000;
    public static int mtrl_calendar_navigation_bottom_padding=0x00000000;
    public static int mtrl_calendar_navigation_height=0x00000000;
    public static int mtrl_calendar_navigation_top_padding=0x00000000;
    public static int mtrl_calendar_pre_l_text_clip_padding=0x00000000;
    public static int mtrl_calendar_selection_baseline_to_top_fullscreen=0x00000000;
    public static int mtrl_calendar_selection_text_baseline_to_bottom=0x00000000;
    public static int mtrl_calendar_selection_text_baseline_to_bottom_fullscreen=0x00000000;
    public static int mtrl_calendar_selection_text_baseline_to_top=0x00000000;
    public static int mtrl_calendar_text_input_padding_top=0x00000000;
    public static int mtrl_calendar_title_baseline_to_top=0x00000000;
    public static int mtrl_calendar_title_baseline_to_top_fullscreen=0x00000000;
    public static int mtrl_calendar_year_corner=0x00000000;
    public static int mtrl_calendar_year_height=0x00000000;
    public static int mtrl_calendar_year_horizontal_padding=0x00000000;
    public static int mtrl_calendar_year_vertical_padding=0x00000000;
    public static int mtrl_calendar_year_width=0x00000000;
    public static int mtrl_card_checked_icon_margin=0x00000000;
    public static int mtrl_card_checked_icon_size=0x00000000;
    public static int mtrl_card_corner_radius=0x00000000;
    public static int mtrl_card_dragged_z=0x00000000;
    public static int mtrl_card_elevation=0x00000000;
    public static int mtrl_card_spacing=0x00000000;
    public static int mtrl_chip_pressed_translation_z=0x00000000;
    public static int mtrl_chip_text_size=0x00000000;
    public static int mtrl_edittext_rectangle_top_offset=0x00000000;
    public static int mtrl_exposed_dropdown_menu_popup_elevation=0x00000000;
    public static int mtrl_exposed_dropdown_menu_popup_vertical_offset=0x00000000;
    public static int mtrl_exposed_dropdown_menu_popup_vertical_padding=0x00000000;
    public static int mtrl_extended_fab_bottom_padding=0x00000000;
    public static int mtrl_extended_fab_corner_radius=0x00000000;
    public static int mtrl_extended_fab_disabled_elevation=0x00000000;
    public static int mtrl_extended_fab_disabled_translation_z=0x00000000;
    public static int mtrl_extended_fab_elevation=0x00000000;
    public static int mtrl_extended_fab_end_padding=0x00000000;
    public static int mtrl_extended_fab_end_padding_icon=0x00000000;
    public static int mtrl_extended_fab_icon_size=0x00000000;
    public static int mtrl_extended_fab_icon_text_spacing=0x00000000;
    public static int mtrl_extended_fab_min_height=0x00000000;
    public static int mtrl_extended_fab_min_width=0x00000000;
    public static int mtrl_extended_fab_start_padding=0x00000000;
    public static int mtrl_extended_fab_start_padding_icon=0x00000000;
    public static int mtrl_extended_fab_top_padding=0x00000000;
    public static int mtrl_extended_fab_translation_z_base=0x00000000;
    public static int mtrl_extended_fab_translation_z_hovered_focused=0x00000000;
    public static int mtrl_extended_fab_translation_z_pressed=0x00000000;
    public static int mtrl_fab_elevation=0x00000000;
    public static int mtrl_fab_min_touch_target=0x00000000;
    public static int mtrl_fab_translation_z_hovered_focused=0x00000000;
    public static int mtrl_fab_translation_z_pressed=0x00000000;
    public static int mtrl_high_ripple_default_alpha=0x00000000;
    public static int mtrl_high_ripple_focused_alpha=0x00000000;
    public static int mtrl_high_ripple_hovered_alpha=0x00000000;
    public static int mtrl_high_ripple_pressed_alpha=0x00000000;
    public static int mtrl_large_touch_target=0x00000000;
    public static int mtrl_low_ripple_default_alpha=0x00000000;
    public static int mtrl_low_ripple_focused_alpha=0x00000000;
    public static int mtrl_low_ripple_hovered_alpha=0x00000000;
    public static int mtrl_low_ripple_pressed_alpha=0x00000000;
    public static int mtrl_min_touch_target_size=0x00000000;
    public static int mtrl_navigation_bar_item_default_icon_size=0x00000000;
    public static int mtrl_navigation_bar_item_default_margin=0x00000000;
    public static int mtrl_navigation_elevation=0x00000000;
    public static int mtrl_navigation_item_horizontal_padding=0x00000000;
    public static int mtrl_navigation_item_icon_padding=0x00000000;
    public static int mtrl_navigation_item_icon_size=0x00000000;
    public static int mtrl_navigation_item_shape_horizontal_margin=0x00000000;
    public static int mtrl_navigation_item_shape_vertical_margin=0x00000000;
    public static int mtrl_navigation_rail_active_text_size=0x00000000;
    public static int mtrl_navigation_rail_compact_width=0x00000000;
    public static int mtrl_navigation_rail_default_width=0x00000000;
    public static int mtrl_navigation_rail_elevation=0x00000000;
    public static int mtrl_navigation_rail_icon_margin=0x00000000;
    public static int mtrl_navigation_rail_icon_size=0x00000000;
    public static int mtrl_navigation_rail_margin=0x00000000;
    public static int mtrl_navigation_rail_text_bottom_margin=0x00000000;
    public static int mtrl_navigation_rail_text_size=0x00000000;
    public static int mtrl_progress_circular_inset=0x00000000;
    public static int mtrl_progress_circular_inset_extra_small=0x00000000;
    public static int mtrl_progress_circular_inset_medium=0x00000000;
    public static int mtrl_progress_circular_inset_small=0x00000000;
    public static int mtrl_progress_circular_radius=0x00000000;
    public static int mtrl_progress_circular_size=0x00000000;
    public static int mtrl_progress_circular_size_extra_small=0x00000000;
    public static int mtrl_progress_circular_size_medium=0x00000000;
    public static int mtrl_progress_circular_size_small=0x00000000;
    public static int mtrl_progress_circular_track_thickness_extra_small=0x00000000;
    public static int mtrl_progress_circular_track_thickness_medium=0x00000000;
    public static int mtrl_progress_circular_track_thickness_small=0x00000000;
    public static int mtrl_progress_indicator_full_rounded_corner_radius=0x00000000;
    public static int mtrl_progress_track_thickness=0x00000000;
    public static int mtrl_shape_corner_size_large_component=0x00000000;
    public static int mtrl_shape_corner_size_medium_component=0x00000000;
    public static int mtrl_shape_corner_size_small_component=0x00000000;
    public static int mtrl_slider_halo_radius=0x00000000;
    public static int mtrl_slider_label_padding=0x00000000;
    public static int mtrl_slider_label_radius=0x00000000;
    public static int mtrl_slider_label_square_side=0x00000000;
    public static int mtrl_slider_thumb_elevation=0x00000000;
    public static int mtrl_slider_thumb_radius=0x00000000;
    public static int mtrl_slider_track_height=0x00000000;
    public static int mtrl_slider_track_side_padding=0x00000000;
    public static int mtrl_slider_track_top=0x00000000;
    public static int mtrl_slider_widget_height=0x00000000;
    public static int mtrl_snackbar_action_text_color_alpha=0x00000000;
    public static int mtrl_snackbar_background_corner_radius=0x00000000;
    public static int mtrl_snackbar_background_overlay_color_alpha=0x00000000;
    public static int mtrl_snackbar_margin=0x00000000;
    public static int mtrl_snackbar_message_margin_horizontal=0x00000000;
    public static int mtrl_snackbar_padding_horizontal=0x00000000;
    public static int mtrl_switch_thumb_elevation=0x00000000;
    public static int mtrl_textinput_box_corner_radius_medium=0x00000000;
    public static int mtrl_textinput_box_corner_radius_small=0x00000000;
    public static int mtrl_textinput_box_label_cutout_padding=0x00000000;
    public static int mtrl_textinput_box_stroke_width_default=0x00000000;
    public static int mtrl_textinput_box_stroke_width_focused=0x00000000;
    public static int mtrl_textinput_counter_margin_start=0x00000000;
    public static int mtrl_textinput_end_icon_margin_start=0x00000000;
    public static int mtrl_textinput_outline_box_expanded_padding=0x00000000;
    public static int mtrl_textinput_start_icon_margin_end=0x00000000;
    public static int mtrl_toolbar_default_height=0x00000000;
    public static int mtrl_tooltip_arrowSize=0x00000000;
    public static int mtrl_tooltip_cornerSize=0x00000000;
    public static int mtrl_tooltip_minHeight=0x00000000;
    public static int mtrl_tooltip_minWidth=0x00000000;
    public static int mtrl_tooltip_padding=0x00000000;
    public static int mtrl_transition_shared_axis_slide_distance=0x00000000;
    /**
     * Copied from framework resource:
     * docked_stack_divider_thickness - 2 * docked_stack_divider_insets
     */
    public static int multi_window_task_divider_size=0x00000000;
    /**
     * The padding around the navigation buttons
     */
    public static int navigation_key_padding=0x00000000;
    public static int notification_action_icon_size=0x00000000;
    public static int notification_action_text_size=0x00000000;
    public static int notification_big_circle_margin=0x00000000;
    public static int notification_circle_icon_size=0x00000000;
    public static int notification_content_margin_start=0x00000000;
    public static int notification_header_count_text_size=0x00000000;
    public static int notification_header_text_size=0x00000000;
    /**
     * Space between edge and icon and icon and text
     */
    public static int notification_icon_padding=0x00000000;
    public static int notification_icon_size=0x00000000;
    public static int notification_large_icon_height=0x00000000;
    public static int notification_large_icon_width=0x00000000;
    public static int notification_main_column_padding_top=0x00000000;
    /**
     * notification_icon_padding + notification_icon_size + notification_icon_padding
     */
    public static int notification_main_text_padding_start=0x00000000;
    public static int notification_main_text_size=0x00000000;
    public static int notification_main_title_size=0x00000000;
    public static int notification_max_trans=0x00000000;
    public static int notification_media_narrow_margin=0x00000000;
    public static int notification_padding=0x00000000;
    public static int notification_padding_top=0x00000000;
    public static int notification_right_icon_size=0x00000000;
    public static int notification_right_side_padding_top=0x00000000;
    public static int notification_small_icon_background_padding=0x00000000;
    public static int notification_small_icon_size_as_large=0x00000000;
    public static int notification_space=0x00000000;
    public static int notification_subtext_size=0x00000000;
    public static int notification_top_pad=0x00000000;
    public static int notification_top_pad_large_text=0x00000000;
    /**
     * Overview
     */
    public static int options_menu_icon_size=0x00000000;
    public static int options_menu_thumb_size=0x00000000;
    public static int overview_actions_bottom_margin_gesture_grid_landscape=0x00000000;
    public static int overview_actions_bottom_margin_gesture_grid_portrait=0x00000000;
    public static int overview_actions_button_spacing=0x00000000;
    public static int overview_actions_button_spacing_grid=0x00000000;
    /**
     * Overrideable in overlay that provides the Overview Actions.
     */
    public static int overview_actions_height=0x00000000;
    public static int overview_actions_horizontal_margin=0x00000000;
    public static int overview_actions_margin_gesture=0x00000000;
    public static int overview_actions_margin_three_button=0x00000000;
    public static int overview_actions_top_margin_gesture_grid_landscape=0x00000000;
    public static int overview_actions_top_margin_gesture_grid_portrait=0x00000000;
    public static int overview_grid_row_spacing=0x00000000;
    public static int overview_grid_side_margin_landscape=0x00000000;
    public static int overview_grid_side_margin_portrait=0x00000000;
    public static int overview_max_scale=0x00000000;
    public static int overview_minimum_next_prev_size=0x00000000;
    public static int overview_page_spacing=0x00000000;
    public static int overview_page_spacing_grid_landscape=0x00000000;
    public static int overview_page_spacing_grid_portrait=0x00000000;
    public static int overview_proactive_row_bottom_margin=0x00000000;
    public static int overview_proactive_row_height=0x00000000;
    public static int overview_task_margin=0x00000000;
    public static int overview_task_margin_focused=0x00000000;
    public static int overview_task_margin_grid=0x00000000;
    /**
     * rounded button shown inside card views, and snack bars
     */
    public static int padded_rounded_button_height=0x00000000;
    public static int padded_rounded_button_padding=0x00000000;
    /**
     * Folders
     */
    public static int page_indicator_dot_size=0x00000000;
    public static int pending_widget_elevation=0x00000000;
    /**
     * Pending widget
     */
    public static int pending_widget_min_padding=0x00000000;
    public static int pin_widget_button_inset_horizontal=0x00000000;
    public static int pin_widget_button_inset_vertical=0x00000000;
    /**
     * Pin widget dialog
     */
    public static int pin_widget_button_padding_horizontal=0x00000000;
    public static int pin_widget_button_padding_vertical=0x00000000;
    public static int popup_arrow_corner_radius=0x00000000;
    public static int popup_arrow_height=0x00000000;
    /**
     * popup_padding_start + deep_shortcut_icon_size / 2
     */
    public static int popup_arrow_horizontal_center_offset=0x00000000;
    public static int popup_arrow_vertical_offset=0x00000000;
    public static int popup_arrow_width=0x00000000;
    public static int popup_margin=0x00000000;
    public static int popup_padding_end=0x00000000;
    public static int popup_padding_start=0x00000000;
    public static int popup_single_item_radius=0x00000000;
    public static int popup_smaller_radius=0x00000000;
    public static int popup_vertical_padding=0x00000000;
    public static int pre_drag_view_scale=0x00000000;
    public static int preference_dropdown_padding_start=0x00000000;
    public static int preference_icon_minWidth=0x00000000;
    public static int preference_seekbar_padding_horizontal=0x00000000;
    public static int preference_seekbar_padding_vertical=0x00000000;
    public static int preference_seekbar_value_minWidth=0x00000000;
    public static int profile_badge_margin=0x00000000;
    public static int profile_badge_minimum_top=0x00000000;
    public static int profile_badge_size=0x00000000;
    public static int qsb_widget_height=0x00000000;
    public static int quick_switch_scaling_scroll_threshold=0x00000000;
    public static int quickstep_fling_threshold_speed=0x00000000;
    public static int recents_clear_all_deadzone_vertical_margin=0x00000000;
    public static int recents_empty_message_text_padding=0x00000000;
    public static int recents_empty_message_text_size=0x00000000;
    /**
     * The speed in dp/s at which the user needs to be scrolling in recents such that we start
     * loading full resolution screenshots.
     */
    public static int recents_fast_fling_velocity=0x00000000;
    public static int recommended_widgets_table_vertical_padding=0x00000000;
    public static int resize_frame_background_padding=0x00000000;
    public static int resize_frame_invalid_drag_across_two_panel_opacity_margin=0x00000000;
    public static int resize_frame_margin=0x00000000;
    public static int rounded_button_height=0x00000000;
    public static int rounded_button_padding=0x00000000;
    public static int rounded_button_radius=0x00000000;
    public static int rounded_corner_content_padding=0x00000000;
    /**
     * Scalable Grid
     */
    public static int scalable_grid_qsb_bottom_margin=0x00000000;
    /**
     * Bottom margin for the search and recommended widgets container without work profile
     */
    public static int search_and_recommended_widgets_container_bottom_margin=0x00000000;
    /**
     * Bottom margin for the search and recommended widgets container with work profile
     */
    public static int search_and_recommended_widgets_container_small_bottom_margin=0x00000000;
    /**
     * Search results related parameters
     */
    public static int search_row_icon_size=0x00000000;
    public static int search_row_small_icon_size=0x00000000;
    /**
     * Padding applied to shortcut previews
     */
    public static int shortcut_preview_padding_left=0x00000000;
    public static int shortcut_preview_padding_right=0x00000000;
    public static int shortcut_preview_padding_top=0x00000000;
    public static int snackbar_content_height=0x00000000;
    public static int snackbar_elevation=0x00000000;
    /**
     * Snackbar
     */
    public static int snackbar_height=0x00000000;
    public static int snackbar_margin_bottom=0x00000000;
    public static int snackbar_max_margin_left_right=0x00000000;
    public static int snackbar_max_text_size=0x00000000;
    public static int snackbar_max_width=0x00000000;
    public static int snackbar_min_margin_left_right=0x00000000;
    public static int snackbar_min_text_size=0x00000000;
    public static int snackbar_padding=0x00000000;
    public static int split_placeholder_size=0x00000000;
    public static int spring_loaded_panel_border=0x00000000;
    public static int staggered_damping_ratio=0x00000000;
    public static int staggered_stiffness=0x00000000;
    public static int swipe_edu_circle_size=0x00000000;
    public static int swipe_edu_max_height=0x00000000;
    /**
     * All Apps Education tutorial
     */
    public static int swipe_edu_padding=0x00000000;
    public static int swipe_edu_width=0x00000000;
    /**
     * Swipe up to home related
     */
    public static int swipe_up_fling_min_visible_change=0x00000000;
    public static int swipe_up_launcher_alpha_max_progress=0x00000000;
    public static int swipe_up_low_swipe_duration_multiplier=0x00000000;
    public static int swipe_up_max_velocity=0x00000000;
    public static int swipe_up_max_workspace_trans_y=0x00000000;
    public static int swipe_up_rect_scale_damping_ratio=0x00000000;
    public static int swipe_up_rect_scale_stiffness=0x00000000;
    public static int swipe_up_rect_xy_damping_ratio=0x00000000;
    public static int swipe_up_rect_xy_fling_friction=0x00000000;
    public static int swipe_up_rect_xy_stiffness=0x00000000;
    public static int swipe_up_scale_start=0x00000000;
    public static int swipe_up_trans_y_damping=0x00000000;
    public static int swipe_up_trans_y_dp=0x00000000;
    public static int swipe_up_trans_y_dp_per_s=0x00000000;
    public static int swipe_up_trans_y_stiffness=0x00000000;
    public static int system_shortcut_header_height=0x00000000;
    /**
     * (touch_size - icon_size) / 2
     */
    public static int system_shortcut_header_icon_padding=0x00000000;
    public static int system_shortcut_header_icon_touch_size=0x00000000;
    public static int system_shortcut_icon_size=0x00000000;
    /**
     * popup_arrow_horizontal_center_offset - system_shortcut_icon_size / 2
     */
    public static int system_shortcut_margin_start=0x00000000;
    public static int task_card_margin=0x00000000;
    /**
     * Total space (start + end) between the task card and the edge of the screen
     * in various configurations
     */
    public static int task_card_menu_option_vertical_padding=0x00000000;
    public static int task_card_menu_shadow_height=0x00000000;
    /**
     * For Launchers that want to override the default dialog corner radius
     */
    public static int task_corner_radius_override=0x00000000;
    /**
     * For screens without rounded corners
     */
    public static int task_corner_radius_small=0x00000000;
    /**
     * Task Menu View
     */
    public static int task_menu_corner_radius=0x00000000;
    public static int task_menu_horizontal_padding=0x00000000;
    public static int task_menu_item_corner_radius=0x00000000;
    public static int task_menu_option_start_margin=0x00000000;
    public static int task_menu_spacing=0x00000000;
    public static int task_menu_vertical_padding=0x00000000;
    public static int task_menu_width_grid=0x00000000;
    public static int task_thumbnail_icon_drawable_size=0x00000000;
    public static int task_thumbnail_icon_drawable_size_grid=0x00000000;
    /**
     * Overview placeholder to compile in Launcher3 without Quickstep
     */
    public static int task_thumbnail_icon_size=0x00000000;
    public static int taskbar_contextual_button_margin=0x00000000;
    public static int taskbar_contextual_buttons_size=0x00000000;
    public static int taskbar_contextual_padding_top=0x00000000;
    public static int taskbar_edu_wave_anim_trans_y=0x00000000;
    public static int taskbar_edu_wave_anim_trans_y_return_overshoot=0x00000000;
    public static int taskbar_folder_margin=0x00000000;
    public static int taskbar_hotseat_nav_spacing=0x00000000;
    public static int taskbar_icon_drag_icon_size=0x00000000;
    public static int taskbar_icon_size=0x00000000;
    /**
     * Note that this applies to both sides of all icons, so visible space is double this.
     */
    public static int taskbar_icon_spacing=0x00000000;
    public static int taskbar_icon_touch_size=0x00000000;
    public static int taskbar_ime_size=0x00000000;
    public static int taskbar_nav_buttons_size=0x00000000;
    public static int taskbar_nav_buttons_spacing=0x00000000;
    /**
     * Taskbar related (placeholders to compile in Launcher3 without Quickstep)
     */
    public static int taskbar_size=0x00000000;
    public static int taskbar_stashed_handle_height=0x00000000;
    public static int taskbar_stashed_handle_width=0x00000000;
    public static int taskbar_stashed_size=0x00000000;
    public static int test_mtrl_calendar_day_cornerSize=0x00000000;
    public static int test_navigation_bar_active_item_max_width=0x00000000;
    public static int test_navigation_bar_active_item_min_width=0x00000000;
    public static int test_navigation_bar_active_text_size=0x00000000;
    public static int test_navigation_bar_elevation=0x00000000;
    public static int test_navigation_bar_height=0x00000000;
    public static int test_navigation_bar_icon_size=0x00000000;
    public static int test_navigation_bar_item_max_width=0x00000000;
    public static int test_navigation_bar_item_min_width=0x00000000;
    public static int test_navigation_bar_label_padding=0x00000000;
    public static int test_navigation_bar_shadow_height=0x00000000;
    public static int test_navigation_bar_text_size=0x00000000;
    public static int tooltip_corner_radius=0x00000000;
    public static int tooltip_horizontal_padding=0x00000000;
    public static int tooltip_margin=0x00000000;
    public static int tooltip_precise_anchor_extra_offset=0x00000000;
    public static int tooltip_precise_anchor_threshold=0x00000000;
    public static int tooltip_vertical_padding=0x00000000;
    public static int tooltip_y_offset_non_touch=0x00000000;
    public static int tooltip_y_offset_touch=0x00000000;
    public static int unlock_staggered_velocity_dp_per_s=0x00000000;
    public static int widget_apps_tabs_vertical_padding=0x00000000;
    public static int widget_cell_font_size=0x00000000;
    public static int widget_cell_horizontal_padding=0x00000000;
    /**
     * Widget tray
     */
    public static int widget_cell_vertical_padding=0x00000000;
    /**
     * App Widget resize frame
     */
    public static int widget_handle_margin=0x00000000;
    public static int widget_list_content_corner_radius=0x00000000;
    public static int widget_list_entry_spacing=0x00000000;
    public static int widget_list_header_view_vertical_padding=0x00000000;
    /**
     * Widgets pickers
     */
    public static int widget_list_horizontal_margin=0x00000000;
    public static int widget_list_top_bottom_corner_radius=0x00000000;
    public static int widget_picker_education_tip_max_width=0x00000000;
    public static int widget_picker_education_tip_min_margin=0x00000000;
    public static int widget_preview_cell_divider_width=0x00000000;
    public static int widget_preview_corner_radius=0x00000000;
    public static int widget_preview_key_shadow_distance=0x00000000;
    public static int widget_preview_shadow_blur=0x00000000;
    public static int widget_preview_shortcut_padding=0x00000000;
    /**
     * App widget reconfigure button
     */
    public static int widget_reconfigure_button_corner_radius=0x00000000;
    public static int widget_reconfigure_button_margin=0x00000000;
    public static int widget_reconfigure_button_padding=0x00000000;
    public static int widget_reconfigure_button_size=0x00000000;
    public static int widget_reconfigure_tip_top_margin=0x00000000;
    public static int widget_row_divider=0x00000000;
    public static int widget_row_padding=0x00000000;
    public static int widget_section_height=0x00000000;
    public static int widget_section_horizontal_padding=0x00000000;
    public static int widget_section_icon_size=0x00000000;
    public static int widget_section_vertical_padding=0x00000000;
    public static int widget_tabs_button_horizontal_padding=0x00000000;
    public static int widget_tabs_horizontal_padding=0x00000000;
    public static int work_card_button_height=0x00000000;
    public static int work_card_padding_horizontal=0x00000000;
    public static int work_edu_card_margin=0x00000000;
    public static int work_edu_card_radius=0x00000000;
    /**
     * Floating action button inside work tab to toggle work profile
     */
    public static int work_fab_height=0x00000000;
    public static int work_fab_margin=0x00000000;
    public static int work_fab_radius=0x00000000;
    public static int work_profile_footer_padding=0x00000000;
    /**
     * Workspace page indicator
     */
    public static int workspace_page_indicator_height=0x00000000;
    public static int workspace_page_indicator_line_height=0x00000000;
    public static int workspace_page_indicator_overlap_workspace=0x00000000;
  }
  public static final class drawable {
    public static int abc_ab_share_pack_mtrl_alpha=0x00000000;
    public static int abc_action_bar_item_background_material=0x00000000;
    public static int abc_btn_borderless_material=0x00000000;
    public static int abc_btn_check_material=0x00000000;
    public static int abc_btn_check_material_anim=0x00000000;
    public static int abc_btn_check_to_on_mtrl_000=0x00000000;
    public static int abc_btn_check_to_on_mtrl_015=0x00000000;
    public static int abc_btn_colored_material=0x00000000;
    public static int abc_btn_default_mtrl_shape=0x00000000;
    public static int abc_btn_radio_material=0x00000000;
    public static int abc_btn_radio_material_anim=0x00000000;
    public static int abc_btn_radio_to_on_mtrl_000=0x00000000;
    public static int abc_btn_radio_to_on_mtrl_015=0x00000000;
    public static int abc_btn_switch_to_on_mtrl_00001=0x00000000;
    public static int abc_btn_switch_to_on_mtrl_00012=0x00000000;
    public static int abc_cab_background_internal_bg=0x00000000;
    public static int abc_cab_background_top_material=0x00000000;
    public static int abc_cab_background_top_mtrl_alpha=0x00000000;
    public static int abc_control_background_material=0x00000000;
    public static int abc_dialog_material_background=0x00000000;
    public static int abc_edit_text_material=0x00000000;
    public static int abc_ic_ab_back_material=0x00000000;
    public static int abc_ic_arrow_drop_right_black_24dp=0x00000000;
    public static int abc_ic_arrow_forward=0x00000000;
    public static int abc_ic_clear_material=0x00000000;
    public static int abc_ic_commit_search_api_mtrl_alpha=0x00000000;
    public static int abc_ic_go_search_api_material=0x00000000;
    public static int abc_ic_menu_copy_mtrl_am_alpha=0x00000000;
    public static int abc_ic_menu_cut_mtrl_alpha=0x00000000;
    public static int abc_ic_menu_overflow_material=0x00000000;
    public static int abc_ic_menu_paste_mtrl_am_alpha=0x00000000;
    public static int abc_ic_menu_selectall_mtrl_alpha=0x00000000;
    public static int abc_ic_menu_share_mtrl_alpha=0x00000000;
    public static int abc_ic_permission=0x00000000;
    public static int abc_ic_search_api_material=0x00000000;
    public static int abc_ic_slice_send=0x00000000;
    public static int abc_ic_voice_search_api_material=0x00000000;
    public static int abc_item_background_holo_dark=0x00000000;
    public static int abc_item_background_holo_light=0x00000000;
    public static int abc_list_divider_material=0x00000000;
    public static int abc_list_divider_mtrl_alpha=0x00000000;
    public static int abc_list_focused_holo=0x00000000;
    public static int abc_list_longpressed_holo=0x00000000;
    public static int abc_list_pressed_holo_dark=0x00000000;
    public static int abc_list_pressed_holo_light=0x00000000;
    public static int abc_list_selector_background_transition_holo_dark=0x00000000;
    public static int abc_list_selector_background_transition_holo_light=0x00000000;
    public static int abc_list_selector_disabled_holo_dark=0x00000000;
    public static int abc_list_selector_disabled_holo_light=0x00000000;
    public static int abc_list_selector_holo_dark=0x00000000;
    public static int abc_list_selector_holo_light=0x00000000;
    public static int abc_menu_hardkey_panel_mtrl_mult=0x00000000;
    public static int abc_popup_background_mtrl_mult=0x00000000;
    public static int abc_ratingbar_indicator_material=0x00000000;
    public static int abc_ratingbar_material=0x00000000;
    public static int abc_ratingbar_small_material=0x00000000;
    public static int abc_scrubber_control_off_mtrl_alpha=0x00000000;
    public static int abc_scrubber_control_to_pressed_mtrl_000=0x00000000;
    public static int abc_scrubber_control_to_pressed_mtrl_005=0x00000000;
    public static int abc_scrubber_primary_mtrl_alpha=0x00000000;
    public static int abc_scrubber_track_mtrl_alpha=0x00000000;
    public static int abc_seekbar_thumb_material=0x00000000;
    public static int abc_seekbar_tick_mark_material=0x00000000;
    public static int abc_seekbar_track_material=0x00000000;
    public static int abc_slice_gradient=0x00000000;
    public static int abc_slice_remote_input_bg=0x00000000;
    public static int abc_slice_ripple_drawable=0x00000000;
    public static int abc_slice_see_more_bg=0x00000000;
    public static int abc_spinner_mtrl_am_alpha=0x00000000;
    public static int abc_spinner_textfield_background_material=0x00000000;
    public static int abc_star_black_48dp=0x00000000;
    public static int abc_star_half_black_48dp=0x00000000;
    public static int abc_switch_thumb_material=0x00000000;
    public static int abc_switch_track_mtrl_alpha=0x00000000;
    public static int abc_tab_indicator_material=0x00000000;
    public static int abc_tab_indicator_mtrl_alpha=0x00000000;
    public static int abc_text_cursor_material=0x00000000;
    public static int abc_text_select_handle_left_mtrl=0x00000000;
    public static int abc_text_select_handle_middle_mtrl=0x00000000;
    public static int abc_text_select_handle_right_mtrl=0x00000000;
    public static int abc_textfield_activated_mtrl_alpha=0x00000000;
    public static int abc_textfield_default_mtrl_alpha=0x00000000;
    public static int abc_textfield_search_activated_mtrl_alpha=0x00000000;
    public static int abc_textfield_search_default_mtrl_alpha=0x00000000;
    public static int abc_textfield_search_material=0x00000000;
    public static int abc_vector_test=0x00000000;
    public static int adaptive_icon_drawable_wrapper=0x00000000;
    public static int add_item_dialog_background=0x00000000;
    public static int all_apps_divider=0x00000000;
    public static int all_apps_edu_circle=0x00000000;
    public static int all_apps_tabs_background=0x00000000;
    public static int arrow_toast_rounded_background=0x00000000;
    public static int assistant_gesture=0x00000000;
    public static int avd_hidden_lock=0x00000000;
    public static int avd_hidden_unlock=0x00000000;
    public static int avd_hide_password=0x00000000;
    public static int avd_protected_lock=0x00000000;
    public static int avd_protected_unlock=0x00000000;
    public static int avd_show_password=0x00000000;
    public static int back_gesture=0x00000000;
    public static int bg_all_apps_button=0x00000000;
    public static int bg_all_apps_searchbox=0x00000000;
    public static int bg_celllayout=0x00000000;
    public static int bg_circle=0x00000000;
    public static int bg_deferred_app_widget=0x00000000;
    public static int bg_notification_content=0x00000000;
    public static int bg_overview_clear_all_button=0x00000000;
    public static int bg_rounded_corner_bottom_sheet=0x00000000;
    public static int bg_sandbox_close_button=0x00000000;
    public static int bg_sandbox_feedback=0x00000000;
    public static int bg_wellbeing_toast=0x00000000;
    public static int bg_widgets_full_sheet=0x00000000;
    public static int bg_widgets_searchbox=0x00000000;
    public static int bg_workspace_card_button=0x00000000;
    public static int bottom_sheet_top_border=0x00000000;
    public static int btn_checkbox_checked_mtrl=0x00000000;
    public static int btn_checkbox_checked_to_unchecked_mtrl_animation=0x00000000;
    public static int btn_checkbox_unchecked_mtrl=0x00000000;
    public static int btn_checkbox_unchecked_to_checked_mtrl_animation=0x00000000;
    public static int btn_radio_off_mtrl=0x00000000;
    public static int btn_radio_off_to_on_mtrl_animation=0x00000000;
    public static int btn_radio_on_mtrl=0x00000000;
    public static int btn_radio_on_to_off_mtrl_animation=0x00000000;
    public static int button_bottom_rounded_colored_ripple=0x00000000;
    public static int button_rounded_colored_ripple=0x00000000;
    public static int button_taskbar_edu_bordered=0x00000000;
    public static int button_taskbar_edu_colored=0x00000000;
    public static int button_top_rounded_bordered_ripple=0x00000000;
    public static int chip_hint_background_light=0x00000000;
    public static int close_icon=0x00000000;
    public static int deep_shortcuts_text_placeholder=0x00000000;
    public static int default_sandbox_app_icon=0x00000000;
    public static int default_sandbox_app_task_thumbnail=0x00000000;
    public static int default_sandbox_wallpaper=0x00000000;
    public static int design_fab_background=0x00000000;
    public static int design_ic_visibility=0x00000000;
    public static int design_ic_visibility_off=0x00000000;
    public static int design_password_eye=0x00000000;
    public static int design_snackbar_background=0x00000000;
    public static int drop_target_background=0x00000000;
    public static int drop_target_frame=0x00000000;
    public static int drop_target_frame_hover=0x00000000;
    public static int full_rounded_colored_ripple=0x00000000;
    public static int full_rounded_transparent_ripple=0x00000000;
    public static int gesture_tutorial_action_button_background=0x00000000;
    public static int gesture_tutorial_cancel_button_background=0x00000000;
    public static int gesture_tutorial_close_button=0x00000000;
    public static int gesture_tutorial_finger_dot=0x00000000;
    public static int gesture_tutorial_loop_back=0x00000000;
    public static int gesture_tutorial_loop_home=0x00000000;
    public static int gesture_tutorial_loop_overview=0x00000000;
    public static int gesture_tutorial_ripple=0x00000000;
    public static int gm_edit_24=0x00000000;
    public static int gutter_horizontal=0x00000000;
    public static int home_gesture=0x00000000;
    public static int home_settings_switch_thumb=0x00000000;
    public static int home_settings_switch_track=0x00000000;
    public static int horizontal_ellipsis=0x00000000;
    public static int hotseat_edu_notification_icon=0x00000000;
    public static int ic_all_apps_bg_hand=0x00000000;
    public static int ic_all_apps_bg_icon_1=0x00000000;
    public static int ic_all_apps_bg_icon_2=0x00000000;
    public static int ic_all_apps_bg_icon_3=0x00000000;
    public static int ic_all_apps_bg_icon_4=0x00000000;
    public static int ic_all_set=0x00000000;
    public static int ic_allapps_search=0x00000000;
    public static int ic_apps=0x00000000;
    public static int ic_arrow_down_24dp=0x00000000;
    public static int ic_block_no_shadow=0x00000000;
    public static int ic_block_shadow=0x00000000;
    public static int ic_clock_black_24dp=0x00000000;
    public static int ic_conversations_widget_category=0x00000000;
    public static int ic_corp=0x00000000;
    public static int ic_corp_off=0x00000000;
    public static int ic_deepshortcut_placeholder=0x00000000;
    public static int ic_drag_handle=0x00000000;
    public static int ic_empty_recents=0x00000000;
    public static int ic_expand_less=0x00000000;
    public static int ic_expand_more=0x00000000;
    public static int ic_gm_close_24=0x00000000;
    public static int ic_help=0x00000000;
    public static int ic_hidden_locked=0x00000000;
    public static int ic_hidden_unlocked=0x00000000;
    public static int ic_hourglass_top=0x00000000;
    public static int ic_ime_switcher=0x00000000;
    public static int ic_info_no_shadow=0x00000000;
    public static int ic_install_no_shadow=0x00000000;
    public static int ic_instant_app_badge=0x00000000;
    public static int ic_keyboard_black_24dp=0x00000000;
    public static int ic_launcher_background=0x00000000;
    public static int ic_launcher_foreground=0x00000000;
    public static int ic_mtrl_checked_circle=0x00000000;
    public static int ic_mtrl_chip_checked_black=0x00000000;
    public static int ic_mtrl_chip_checked_circle=0x00000000;
    public static int ic_mtrl_chip_close_circle=0x00000000;
    public static int ic_palette=0x00000000;
    public static int ic_pin=0x00000000;
    public static int ic_protected_locked=0x00000000;
    public static int ic_protected_unlocked=0x00000000;
    public static int ic_recents_clear_all=0x00000000;
    public static int ic_remove_no_shadow=0x00000000;
    public static int ic_remove_shadow=0x00000000;
    public static int ic_screenshot=0x00000000;
    public static int ic_setting=0x00000000;
    public static int ic_setup_shadow=0x00000000;
    public static int ic_share=0x00000000;
    public static int ic_split_horizontal=0x00000000;
    public static int ic_split_left=0x00000000;
    public static int ic_split_right=0x00000000;
    public static int ic_split_screen=0x00000000;
    public static int ic_split_top=0x00000000;
    public static int ic_split_vertical=0x00000000;
    public static int ic_sysbar_accessibility_button=0x00000000;
    public static int ic_sysbar_back=0x00000000;
    public static int ic_sysbar_home=0x00000000;
    public static int ic_sysbar_recent=0x00000000;
    public static int ic_sysbar_rotate_button_ccw_start_0=0x00000000;
    public static int ic_sysbar_rotate_button_ccw_start_90=0x00000000;
    public static int ic_sysbar_rotate_button_cw_start_0=0x00000000;
    public static int ic_sysbar_rotate_button_cw_start_90=0x00000000;
    public static int ic_uninstall_no_shadow=0x00000000;
    public static int ic_uninstall_shadow=0x00000000;
    public static int ic_wallpaper=0x00000000;
    public static int ic_warning=0x00000000;
    public static int ic_widget=0x00000000;
    public static int ic_widget_height_decrease=0x00000000;
    public static int ic_widget_height_increase=0x00000000;
    public static int ic_widget_resize_handle=0x00000000;
    public static int ic_widget_width_decrease=0x00000000;
    public static int ic_widget_width_increase=0x00000000;
    public static int material_cursor_drawable=0x00000000;
    public static int material_ic_calendar_black_24dp=0x00000000;
    public static int material_ic_clear_black_24dp=0x00000000;
    public static int material_ic_edit_black_24dp=0x00000000;
    public static int material_ic_keyboard_arrow_left_black_24dp=0x00000000;
    public static int material_ic_keyboard_arrow_next_black_24dp=0x00000000;
    public static int material_ic_keyboard_arrow_previous_black_24dp=0x00000000;
    public static int material_ic_keyboard_arrow_right_black_24dp=0x00000000;
    public static int material_ic_menu_arrow_down_black_24dp=0x00000000;
    public static int material_ic_menu_arrow_up_black_24dp=0x00000000;
    public static int middle_item_primary=0x00000000;
    public static int mtrl_dialog_background=0x00000000;
    public static int mtrl_dropdown_arrow=0x00000000;
    public static int mtrl_ic_arrow_drop_down=0x00000000;
    public static int mtrl_ic_arrow_drop_up=0x00000000;
    public static int mtrl_ic_cancel=0x00000000;
    public static int mtrl_ic_error=0x00000000;
    public static int mtrl_navigation_bar_item_background=0x00000000;
    public static int mtrl_popupmenu_background=0x00000000;
    public static int mtrl_popupmenu_background_dark=0x00000000;
    public static int mtrl_tabs_default_indicator=0x00000000;
    public static int navigation_empty_icon=0x00000000;
    public static int notification_action_background=0x00000000;
    public static int notification_bg=0x00000000;
    public static int notification_bg_low=0x00000000;
    public static int notification_bg_low_normal=0x00000000;
    public static int notification_bg_low_pressed=0x00000000;
    public static int notification_bg_normal=0x00000000;
    public static int notification_bg_normal_pressed=0x00000000;
    public static int notification_circle=0x00000000;
    public static int notification_icon_background=0x00000000;
    public static int notification_template_icon_bg=0x00000000;
    public static int notification_template_icon_low_bg=0x00000000;
    public static int notification_tile_bg=0x00000000;
    public static int notify_panel_notification_icon_bg=0x00000000;
    public static int overview_gesture=0x00000000;
    public static int padded_rounded_action_button=0x00000000;
    public static int pending_widget_bg=0x00000000;
    public static int preference_list_divider_material=0x00000000;
    public static int qsb_host_view_focus_bg=0x00000000;
    public static int round_rect_folder=0x00000000;
    public static int round_rect_primary=0x00000000;
    public static int rounded_action_button=0x00000000;
    public static int single_item_primary=0x00000000;
    public static int task_menu_bg=0x00000000;
    public static int task_menu_item_bg=0x00000000;
    public static int taskbar_edu_splitscreen=0x00000000;
    public static int taskbar_edu_stashing=0x00000000;
    public static int taskbar_edu_switch_apps=0x00000000;
    public static int taskbar_icon_click_feedback_roundrect=0x00000000;
    public static int test_custom_background=0x00000000;
    public static int tooltip_frame=0x00000000;
    public static int tooltip_frame_dark=0x00000000;
    public static int tooltip_frame_light=0x00000000;
    public static int top_round_rect_primary=0x00000000;
    public static int tutorial_step_indicator_pill=0x00000000;
    public static int widget_internal_focus_bg=0x00000000;
    public static int widget_reconfigure_button_frame=0x00000000;
    public static int widget_resize_frame=0x00000000;
    public static int widgets_recommendation_background=0x00000000;
    public static int widgets_tray_expand_button=0x00000000;
    public static int work_apps_toggle_background=0x00000000;
    public static int work_card=0x00000000;
    public static int workspace_bg=0x00000000;
  }
  public static final class id {
    public static int ALT=0x00000000;
    public static int BOTTOM_END=0x00000000;
    public static int BOTTOM_START=0x00000000;
    public static int CTRL=0x00000000;
    public static int FUNCTION=0x00000000;
    public static int META=0x00000000;
    public static int NO_DEBUG=0x00000000;
    public static int SHIFT=0x00000000;
    public static int SHOW_ALL=0x00000000;
    public static int SHOW_PATH=0x00000000;
    public static int SHOW_PROGRESS=0x00000000;
    public static int SYM=0x00000000;
    public static int TOP_END=0x00000000;
    public static int TOP_START=0x00000000;
    public static int abc_icon_frame=0x00000000;
    public static int accelerate=0x00000000;
    public static int accessibility_action_clickable_span=0x00000000;
    public static int accessibility_button=0x00000000;
    public static int accessibility_custom_action_0=0x00000000;
    public static int accessibility_custom_action_1=0x00000000;
    public static int accessibility_custom_action_10=0x00000000;
    public static int accessibility_custom_action_11=0x00000000;
    public static int accessibility_custom_action_12=0x00000000;
    public static int accessibility_custom_action_13=0x00000000;
    public static int accessibility_custom_action_14=0x00000000;
    public static int accessibility_custom_action_15=0x00000000;
    public static int accessibility_custom_action_16=0x00000000;
    public static int accessibility_custom_action_17=0x00000000;
    public static int accessibility_custom_action_18=0x00000000;
    public static int accessibility_custom_action_19=0x00000000;
    public static int accessibility_custom_action_2=0x00000000;
    public static int accessibility_custom_action_20=0x00000000;
    public static int accessibility_custom_action_21=0x00000000;
    public static int accessibility_custom_action_22=0x00000000;
    public static int accessibility_custom_action_23=0x00000000;
    public static int accessibility_custom_action_24=0x00000000;
    public static int accessibility_custom_action_25=0x00000000;
    public static int accessibility_custom_action_26=0x00000000;
    public static int accessibility_custom_action_27=0x00000000;
    public static int accessibility_custom_action_28=0x00000000;
    public static int accessibility_custom_action_29=0x00000000;
    public static int accessibility_custom_action_3=0x00000000;
    public static int accessibility_custom_action_30=0x00000000;
    public static int accessibility_custom_action_31=0x00000000;
    public static int accessibility_custom_action_4=0x00000000;
    public static int accessibility_custom_action_5=0x00000000;
    public static int accessibility_custom_action_6=0x00000000;
    public static int accessibility_custom_action_7=0x00000000;
    public static int accessibility_custom_action_8=0x00000000;
    public static int accessibility_custom_action_9=0x00000000;
    public static int action=0x00000000;
    public static int action_add_to_workspace=0x00000000;
    public static int action_bar=0x00000000;
    public static int action_bar_activity_content=0x00000000;
    public static int action_bar_container=0x00000000;
    public static int action_bar_root=0x00000000;
    public static int action_bar_spinner=0x00000000;
    public static int action_bar_subtitle=0x00000000;
    public static int action_bar_title=0x00000000;
    public static int action_btn=0x00000000;
    public static int action_buttons=0x00000000;
    public static int action_clear_all=0x00000000;
    public static int action_clear_all_space=0x00000000;
    public static int action_container=0x00000000;
    public static int action_context_bar=0x00000000;
    public static int action_deep_shortcuts=0x00000000;
    public static int action_dismiss_notification=0x00000000;
    public static int action_dismiss_prediction=0x00000000;
    public static int action_divider=0x00000000;
    public static int action_image=0x00000000;
    public static int action_menu_divider=0x00000000;
    public static int action_menu_presenter=0x00000000;
    public static int action_mode_bar=0x00000000;
    public static int action_mode_bar_stub=0x00000000;
    public static int action_mode_close_button=0x00000000;
    public static int action_move=0x00000000;
    public static int action_move_screen_backwards=0x00000000;
    public static int action_move_screen_forwards=0x00000000;
    public static int action_move_to_workspace=0x00000000;
    public static int action_pin_prediction=0x00000000;
    public static int action_reconfigure=0x00000000;
    public static int action_remote_action_shortcut=0x00000000;
    /**
     * Accessibility actions
     */
    public static int action_remove=0x00000000;
    public static int action_resize=0x00000000;
    public static int action_screenshot=0x00000000;
    public static int action_sent_indicator=0x00000000;
    public static int action_shortcuts_and_notifications=0x00000000;
    public static int action_split=0x00000000;
    public static int action_split_space=0x00000000;
    public static int action_text=0x00000000;
    public static int action_uninstall=0x00000000;
    public static int actions=0x00000000;
    public static int actions_container=0x00000000;
    public static int activity_chooser_view_content=0x00000000;
    public static int add=0x00000000;
    public static int add_item_bottom_sheet=0x00000000;
    public static int add_item_bottom_sheet_content=0x00000000;
    public static int add_item_drag_layer=0x00000000;
    public static int alertTitle=0x00000000;
    public static int aligned=0x00000000;
    public static int all=0x00000000;
    public static int all_apps=0x00000000;
    public static int all_apps_button=0x00000000;
    public static int all_apps_header=0x00000000;
    public static int all_apps_tabs_view_pager=0x00000000;
    public static int always=0x00000000;
    public static int animateToEnd=0x00000000;
    public static int animateToStart=0x00000000;
    public static int animated_background=0x00000000;
    public static int app_bar=0x00000000;
    public static int app_container=0x00000000;
    public static int app_icon=0x00000000;
    public static int app_subtitle=0x00000000;
    public static int app_title=0x00000000;
    public static int apps_divider_view=0x00000000;
    public static int apps_list_view=0x00000000;
    public static int apps_list_view_override=0x00000000;
    public static int apps_list_view_work=0x00000000;
    public static int apps_view=0x00000000;
    public static int arc=0x00000000;
    public static int arrow=0x00000000;
    public static int asConfigured=0x00000000;
    public static int async=0x00000000;
    public static int auto=0x00000000;
    public static int autoComplete=0x00000000;
    public static int autoCompleteToEnd=0x00000000;
    public static int autoCompleteToStart=0x00000000;
    public static int automatic=0x00000000;
    public static int back=0x00000000;
    public static int barrier=0x00000000;
    public static int baseline=0x00000000;
    public static int beginning=0x00000000;
    public static int blocking=0x00000000;
    public static int bottom=0x00000000;
    public static int bottomRight_icon=0x00000000;
    public static int bottom_divider=0x00000000;
    public static int bottom_task_view=0x00000000;
    public static int bottomright_snapshot=0x00000000;
    public static int bounce=0x00000000;
    public static int btn_qsb_search=0x00000000;
    public static int btn_qsb_setup=0x00000000;
    public static int bubble_text=0x00000000;
    public static int buttonPanel=0x00000000;
    public static int button_container=0x00000000;
    public static int cancel_button=0x00000000;
    /**
     * View ID used by cell layout to jail its content
     */
    public static int cell_layout_jail_id=0x00000000;
    public static int center=0x00000000;
    public static int center_horizontal=0x00000000;
    public static int center_vertical=0x00000000;
    public static int chain=0x00000000;
    public static int chains=0x00000000;
    public static int checkbox=0x00000000;
    public static int checked=0x00000000;
    public static int chip=0x00000000;
    public static int chip1=0x00000000;
    public static int chip2=0x00000000;
    public static int chip3=0x00000000;
    public static int chip_group=0x00000000;
    public static int chronometer=0x00000000;
    public static int circle_center=0x00000000;
    public static int clear_all=0x00000000;
    public static int clear_text=0x00000000;
    public static int clip_horizontal=0x00000000;
    public static int clip_vertical=0x00000000;
    public static int clockwise=0x00000000;
    public static int collapseActionView=0x00000000;
    public static int collapse_handle=0x00000000;
    public static int collapsing_toolbar=0x00000000;
    public static int confirm_button=0x00000000;
    public static int container=0x00000000;
    public static int content=0x00000000;
    public static int contentPanel=0x00000000;
    public static int content_frame=0x00000000;
    public static int content_page_indicator=0x00000000;
    public static int content_parent=0x00000000;
    public static int content_view=0x00000000;
    public static int contiguous=0x00000000;
    public static int conversation_icon_1=0x00000000;
    public static int conversation_icon_2=0x00000000;
    public static int conversation_icon_3=0x00000000;
    public static int conversation_icon_4=0x00000000;
    public static int conversation_icon_5=0x00000000;
    public static int conversation_icon_6=0x00000000;
    public static int conversation_icon_7=0x00000000;
    public static int conversation_line_1=0x00000000;
    public static int conversation_line_10=0x00000000;
    public static int conversation_line_11=0x00000000;
    public static int conversation_line_12=0x00000000;
    public static int conversation_line_13=0x00000000;
    public static int conversation_line_14=0x00000000;
    public static int conversation_line_2=0x00000000;
    public static int conversation_line_3=0x00000000;
    public static int conversation_line_4=0x00000000;
    public static int conversation_line_5=0x00000000;
    public static int conversation_line_6=0x00000000;
    public static int conversation_line_7=0x00000000;
    public static int conversation_line_8=0x00000000;
    public static int conversation_line_9=0x00000000;
    public static int coordinator=0x00000000;
    public static int cos=0x00000000;
    public static int counterclockwise=0x00000000;
    public static int custom=0x00000000;
    public static int customPanel=0x00000000;
    public static int cut=0x00000000;
    public static int date_picker_actions=0x00000000;
    public static int decelerate=0x00000000;
    public static int decelerateAndComplete=0x00000000;
    public static int decor_content_parent=0x00000000;
    public static int deep_shortcuts_container=0x00000000;
    public static int default_activity_button=0x00000000;
    public static int delete_target_text=0x00000000;
    public static int deltaRelative=0x00000000;
    public static int design_bottom_sheet=0x00000000;
    public static int design_menu_item_action_area=0x00000000;
    public static int design_menu_item_action_area_stub=0x00000000;
    public static int design_menu_item_text=0x00000000;
    public static int design_navigation_view=0x00000000;
    public static int dialog_button=0x00000000;
    public static int dimensions=0x00000000;
    public static int direct=0x00000000;
    public static int disableHome=0x00000000;
    public static int disablePostScroll=0x00000000;
    public static int disableScroll=0x00000000;
    public static int disjoint=0x00000000;
    public static int divider=0x00000000;
    public static int dragDown=0x00000000;
    public static int dragEnd=0x00000000;
    public static int dragLeft=0x00000000;
    public static int dragRight=0x00000000;
    public static int dragStart=0x00000000;
    public static int dragUp=0x00000000;
    /**
     * DragController
     */
    public static int drag_event_parity=0x00000000;
    public static int drag_layer=0x00000000;
    public static int drop_target_bar=0x00000000;
    public static int dropdown_menu=0x00000000;
    public static int easeIn=0x00000000;
    public static int easeInOut=0x00000000;
    public static int easeOut=0x00000000;
    public static int edit_query=0x00000000;
    public static int edu_close_button=0x00000000;
    public static int edu_content=0x00000000;
    public static int edu_end_button=0x00000000;
    public static int edu_header=0x00000000;
    public static int edu_start_button=0x00000000;
    public static int edu_view=0x00000000;
    public static int elastic=0x00000000;
    public static int empty_text=0x00000000;
    public static int enable_work_apps=0x00000000;
    public static int end=0x00000000;
    public static int endToStart=0x00000000;
    public static int end_contextual_buttons=0x00000000;
    public static int end_nav_buttons=0x00000000;
    public static int enterAlways=0x00000000;
    public static int enterAlwaysCollapsed=0x00000000;
    public static int exitUntilCollapsed=0x00000000;
    public static int expand_activities_button=0x00000000;
    public static int expanded_menu=0x00000000;
    public static int fade=0x00000000;
    public static int fast_scroller=0x00000000;
    public static int fast_scroller_popup=0x00000000;
    public static int fill=0x00000000;
    public static int fill_horizontal=0x00000000;
    public static int fill_vertical=0x00000000;
    public static int filled=0x00000000;
    public static int filter_box=0x00000000;
    public static int fitToContents=0x00000000;
    public static int fixed=0x00000000;
    public static int flip=0x00000000;
    public static int floating=0x00000000;
    public static int folder=0x00000000;
    public static int folder_content=0x00000000;
    public static int folder_footer=0x00000000;
    public static int folder_icon_name=0x00000000;
    public static int folder_name=0x00000000;
    public static int folder_page_indicator=0x00000000;
    public static int forever=0x00000000;
    public static int fragment_container_view_tag=0x00000000;
    public static int full_task_view=0x00000000;
    public static int gesture_tutorial_dialog_cancel_button=0x00000000;
    public static int gesture_tutorial_dialog_confirm_button=0x00000000;
    public static int gesture_tutorial_dialog_subtitle=0x00000000;
    public static int gesture_tutorial_dialog_title=0x00000000;
    public static int gesture_tutorial_edge_gesture_video=0x00000000;
    public static int gesture_tutorial_fake_hotseat_view=0x00000000;
    public static int gesture_tutorial_fake_icon_view=0x00000000;
    public static int gesture_tutorial_fake_launcher_view=0x00000000;
    public static int gesture_tutorial_fake_previous_task_view=0x00000000;
    public static int gesture_tutorial_fake_task_view=0x00000000;
    public static int gesture_tutorial_fake_taskbar_view=0x00000000;
    public static int gesture_tutorial_finger_dot=0x00000000;
    public static int gesture_tutorial_fragment_action_button=0x00000000;
    public static int gesture_tutorial_fragment_close_button=0x00000000;
    public static int gesture_tutorial_fragment_container=0x00000000;
    public static int gesture_tutorial_fragment_feedback_subtitle=0x00000000;
    public static int gesture_tutorial_fragment_feedback_title=0x00000000;
    public static int gesture_tutorial_fragment_feedback_tutorial_step=0x00000000;
    public static int gesture_tutorial_fragment_feedback_view=0x00000000;
    public static int gesture_tutorial_ripple_view=0x00000000;
    public static int ghost_view=0x00000000;
    public static int ghost_view_holder=0x00000000;
    public static int gone=0x00000000;
    public static int graph=0x00000000;
    public static int graph_wrap=0x00000000;
    public static int group_divider=0x00000000;
    public static int groups=0x00000000;
    public static int guideline=0x00000000;
    public static int hardware=0x00000000;
    public static int header=0x00000000;
    public static int header_title=0x00000000;
    public static int hidden_apps_list=0x00000000;
    public static int hidden_apps_loading=0x00000000;
    public static int hidden_apps_progress_bar=0x00000000;
    public static int hideable=0x00000000;
    public static int hint=0x00000000;
    public static int hint_guideline_bottom=0x00000000;
    public static int home=0x00000000;
    public static int homeAsUp=0x00000000;
    public static int honorRequest=0x00000000;
    public static int hotseat=0x00000000;
    public static int hotseat_edu_content=0x00000000;
    public static int hotseat_edu_heading=0x00000000;
    public static int hotseat_icon_1=0x00000000;
    public static int hotseat_icon_2=0x00000000;
    public static int hotseat_icon_3=0x00000000;
    public static int hotseat_icon_4=0x00000000;
    public static int hotseat_icon_5=0x00000000;
    public static int hotseat_icon_6=0x00000000;
    public static int hotseat_search_bar=0x00000000;
    public static int hotseat_wrapper=0x00000000;
    public static int icon=0x00000000;
    public static int icon_container=0x00000000;
    public static int icon_frame=0x00000000;
    public static int icon_group=0x00000000;
    public static int ifRoom=0x00000000;
    public static int ignore=0x00000000;
    public static int ignoreRequest=0x00000000;
    public static int image=0x00000000;
    public static int ime_switcher=0x00000000;
    public static int info=0x00000000;
    public static int invisible=0x00000000;
    public static int inward=0x00000000;
    public static int italic=0x00000000;
    public static int item_hidden_app_icon=0x00000000;
    public static int item_hidden_app_switch=0x00000000;
    public static int item_hidden_app_title=0x00000000;
    public static int item_protected_app_switch=0x00000000;
    public static int item_touch_helper_previous_elevation=0x00000000;
    public static int jumpToEnd=0x00000000;
    public static int jumpToStart=0x00000000;
    public static int label=0x00000000;
    public static int labeled=0x00000000;
    public static int last_updated=0x00000000;
    public static int launcher=0x00000000;
    public static int layout=0x00000000;
    public static int left=0x00000000;
    public static int leftToRight=0x00000000;
    public static int line1=0x00000000;
    public static int line3=0x00000000;
    public static int linear=0x00000000;
    public static int listMode=0x00000000;
    public static int list_item=0x00000000;
    public static int lottie_layer_name=0x00000000;
    public static int main_view=0x00000000;
    public static int masked=0x00000000;
    public static int material_clock_display=0x00000000;
    public static int material_clock_face=0x00000000;
    public static int material_clock_hand=0x00000000;
    public static int material_clock_period_am_button=0x00000000;
    public static int material_clock_period_pm_button=0x00000000;
    public static int material_clock_period_toggle=0x00000000;
    public static int material_hour_text_input=0x00000000;
    public static int material_hour_tv=0x00000000;
    public static int material_label=0x00000000;
    public static int material_minute_text_input=0x00000000;
    public static int material_minute_tv=0x00000000;
    public static int material_textinput_timepicker=0x00000000;
    public static int material_timepicker_cancel_button=0x00000000;
    public static int material_timepicker_container=0x00000000;
    public static int material_timepicker_edit_text=0x00000000;
    public static int material_timepicker_mode_button=0x00000000;
    public static int material_timepicker_ok_button=0x00000000;
    public static int material_timepicker_view=0x00000000;
    public static int material_value_index=0x00000000;
    /**
     * Menu id for feature flags
     */
    public static int menu_apply_flags=0x00000000;
    public static int menu_option_layout=0x00000000;
    public static int menu_trust_help=0x00000000;
    public static int message=0x00000000;
    public static int message_1=0x00000000;
    public static int message_2=0x00000000;
    public static int message_3=0x00000000;
    public static int message_4=0x00000000;
    public static int message_bar=0x00000000;
    public static int middle=0x00000000;
    public static int mini=0x00000000;
    public static int mock_block=0x00000000;
    public static int mock_button=0x00000000;
    public static int mock_line_1=0x00000000;
    public static int mock_line_2=0x00000000;
    public static int mock_line_3=0x00000000;
    public static int mock_line_4=0x00000000;
    public static int mock_line_5=0x00000000;
    public static int mock_line_6=0x00000000;
    public static int mock_line_7=0x00000000;
    public static int mock_line_8=0x00000000;
    public static int month_grid=0x00000000;
    public static int month_navigation_bar=0x00000000;
    public static int month_navigation_fragment_toggle=0x00000000;
    public static int month_navigation_next=0x00000000;
    public static int month_navigation_previous=0x00000000;
    public static int month_title=0x00000000;
    public static int motion_base=0x00000000;
    public static int mtrl_anchor_parent=0x00000000;
    public static int mtrl_calendar_day_selector_frame=0x00000000;
    public static int mtrl_calendar_days_of_week=0x00000000;
    public static int mtrl_calendar_frame=0x00000000;
    public static int mtrl_calendar_main_pane=0x00000000;
    public static int mtrl_calendar_months=0x00000000;
    public static int mtrl_calendar_selection_frame=0x00000000;
    public static int mtrl_calendar_text_input_frame=0x00000000;
    public static int mtrl_calendar_year_selector_frame=0x00000000;
    public static int mtrl_card_checked_layer_id=0x00000000;
    public static int mtrl_child_content_container=0x00000000;
    public static int mtrl_internal_children_alpha_tag=0x00000000;
    public static int mtrl_motion_snapshot_view=0x00000000;
    public static int mtrl_picker_fullscreen=0x00000000;
    public static int mtrl_picker_header=0x00000000;
    public static int mtrl_picker_header_selection_text=0x00000000;
    public static int mtrl_picker_header_title_and_selection=0x00000000;
    public static int mtrl_picker_header_toggle=0x00000000;
    public static int mtrl_picker_text_input_date=0x00000000;
    public static int mtrl_picker_text_input_range_end=0x00000000;
    public static int mtrl_picker_text_input_range_start=0x00000000;
    public static int mtrl_picker_title_text=0x00000000;
    public static int mtrl_view_tag_bottom_padding=0x00000000;
    public static int multi_display=0x00000000;
    public static int multiply=0x00000000;
    public static int navbuttons_view=0x00000000;
    public static int navigation_bar_item_icon_view=0x00000000;
    public static int navigation_bar_item_labels_group=0x00000000;
    public static int navigation_bar_item_large_label_view=0x00000000;
    public static int navigation_bar_item_small_label_view=0x00000000;
    public static int navigation_header_container=0x00000000;
    public static int navigation_settings=0x00000000;
    public static int navigation_settings_guideline_bottom=0x00000000;
    public static int never=0x00000000;
    public static int noScroll=0x00000000;
    public static int no_thanks=0x00000000;
    public static int no_widgets_text=0x00000000;
    public static int none=0x00000000;
    public static int normal=0x00000000;
    public static int notification_background=0x00000000;
    public static int notification_container=0x00000000;
    public static int notification_count=0x00000000;
    public static int notification_main_column=0x00000000;
    public static int notification_main_column_container=0x00000000;
    public static int notification_text=0x00000000;
    public static int oav_three_button_space=0x00000000;
    public static int off=0x00000000;
    public static int on=0x00000000;
    public static int outline=0x00000000;
    public static int outward=0x00000000;
    public static int overlay_see_more=0x00000000;
    public static int overview_actions_view=0x00000000;
    public static int overview_panel=0x00000000;
    public static int packed=0x00000000;
    public static int page_indicator=0x00000000;
    public static int page_splitscreen=0x00000000;
    public static int page_stashing=0x00000000;
    public static int page_switch_apps=0x00000000;
    public static int parallax=0x00000000;
    public static int parent=0x00000000;
    public static int parentPanel=0x00000000;
    public static int parentRelative=0x00000000;
    public static int parent_matrix=0x00000000;
    public static int password_toggle=0x00000000;
    public static int path=0x00000000;
    public static int pathRelative=0x00000000;
    public static int peekHeight=0x00000000;
    public static int percent=0x00000000;
    public static int phone=0x00000000;
    public static int pin=0x00000000;
    public static int popup_container=0x00000000;
    public static int popup_item_icon=0x00000000;
    public static int position=0x00000000;
    public static int postLayout=0x00000000;
    public static int prediction_row=0x00000000;
    public static int primary_widgets_list_view=0x00000000;
    public static int progress_circular=0x00000000;
    public static int progress_horizontal=0x00000000;
    /**
     * View ID to use for QSB widget
     */
    public static int qsb_widget=0x00000000;
    public static int radio=0x00000000;
    public static int ratio=0x00000000;
    public static int recent_apps=0x00000000;
    public static int recommended_widget_table=0x00000000;
    public static int rectangles=0x00000000;
    public static int recycler_view=0x00000000;
    public static int remote_input=0x00000000;
    public static int remote_input_progress=0x00000000;
    public static int remote_input_send=0x00000000;
    public static int remote_input_text=0x00000000;
    public static int reply_icon_1=0x00000000;
    public static int reply_icon_2=0x00000000;
    public static int restart=0x00000000;
    public static int reverse=0x00000000;
    public static int reverseSawtooth=0x00000000;
    public static int right=0x00000000;
    public static int rightToLeft=0x00000000;
    public static int right_icon=0x00000000;
    public static int right_side=0x00000000;
    public static int root_view=0x00000000;
    public static int rotate_suggestion=0x00000000;
    public static int rounded=0x00000000;
    public static int row_index_key=0x00000000;
    public static int row_view=0x00000000;
    public static int sample_prediction=0x00000000;
    public static int save_non_transition_alpha=0x00000000;
    public static int save_overlay_view=0x00000000;
    public static int sawtooth=0x00000000;
    public static int scale=0x00000000;
    public static int screen=0x00000000;
    public static int scrim_view=0x00000000;
    public static int scroll=0x00000000;
    public static int scrollIndicatorDown=0x00000000;
    public static int scrollIndicatorUp=0x00000000;
    public static int scrollView=0x00000000;
    public static int scrollable=0x00000000;
    public static int search_and_recommendations_container=0x00000000;
    public static int search_badge=0x00000000;
    public static int search_bar=0x00000000;
    public static int search_bar_container=0x00000000;
    public static int search_button=0x00000000;
    public static int search_close_btn=0x00000000;
    public static int search_container_all_apps=0x00000000;
    public static int search_container_hotseat=0x00000000;
    /**
     * QSB IDs. DO not change
     */
    public static int search_container_workspace=0x00000000;
    public static int search_edit_frame=0x00000000;
    public static int search_go_btn=0x00000000;
    public static int search_mag_icon=0x00000000;
    public static int search_market_text=0x00000000;
    public static int search_plate=0x00000000;
    public static int search_result_small=0x00000000;
    public static int search_result_tall=0x00000000;
    public static int search_src_text=0x00000000;
    public static int search_voice_btn=0x00000000;
    public static int search_widgets_list_view=0x00000000;
    public static int section=0x00000000;
    public static int seekbar=0x00000000;
    public static int seekbar_value=0x00000000;
    public static int select_dialog_listview=0x00000000;
    public static int selected=0x00000000;
    public static int selection_type=0x00000000;
    public static int separator=0x00000000;
    public static int settings=0x00000000;
    public static int shortcut=0x00000000;
    public static int shortcut_popup=0x00000000;
    public static int showCustom=0x00000000;
    public static int showHome=0x00000000;
    public static int showTitle=0x00000000;
    public static int sin=0x00000000;
    public static int skipCollapsed=0x00000000;
    public static int slide=0x00000000;
    public static int snackbar_action=0x00000000;
    public static int snackbar_text=0x00000000;
    public static int snap=0x00000000;
    public static int snapMargins=0x00000000;
    public static int snapshot=0x00000000;
    public static int software=0x00000000;
    public static int spacer=0x00000000;
    public static int special_effects_controller_view_tag=0x00000000;
    public static int spinner=0x00000000;
    public static int spline=0x00000000;
    public static int split_action_bar=0x00000000;
    public static int split_bottomRight_appInfo=0x00000000;
    public static int split_placeholder=0x00000000;
    /**
     * Used for A11y actions in staged split to identify each task uniquely
     */
    public static int split_topLeft_appInfo=0x00000000;
    public static int spread=0x00000000;
    public static int spread_inside=0x00000000;
    /**
     * View tag key used to store SpringAnimation data.
     */
    public static int spring_animation_tag=0x00000000;
    public static int square=0x00000000;
    public static int src_atop=0x00000000;
    public static int src_in=0x00000000;
    public static int src_over=0x00000000;
    public static int standard=0x00000000;
    public static int start=0x00000000;
    public static int startHorizontal=0x00000000;
    public static int startToEnd=0x00000000;
    public static int startVertical=0x00000000;
    public static int start_contextual_buttons=0x00000000;
    public static int stashed_handle=0x00000000;
    public static int staticLayout=0x00000000;
    public static int staticPostLayout=0x00000000;
    public static int stop=0x00000000;
    public static int stretch=0x00000000;
    public static int subcontent=0x00000000;
    public static int submenuarrow=0x00000000;
    public static int submit_area=0x00000000;
    public static int subtitle=0x00000000;
    public static int switchWidget=0x00000000;
    public static int system_shortcut_full=0x00000000;
    public static int system_shortcut_icons=0x00000000;
    public static int tabMode=0x00000000;
    public static int tab_personal=0x00000000;
    public static int tab_work=0x00000000;
    public static int tablet=0x00000000;
    public static int tabs=0x00000000;
    public static int tag_accessibility_actions=0x00000000;
    public static int tag_accessibility_clickable_spans=0x00000000;
    public static int tag_accessibility_heading=0x00000000;
    public static int tag_accessibility_pane_title=0x00000000;
    public static int tag_on_apply_window_listener=0x00000000;
    public static int tag_on_receive_content_listener=0x00000000;
    public static int tag_on_receive_content_mime_types=0x00000000;
    public static int tag_screen_reader_focusable=0x00000000;
    public static int tag_state_description=0x00000000;
    public static int tag_transition_group=0x00000000;
    public static int tag_unhandled_key_event_manager=0x00000000;
    public static int tag_unhandled_key_listeners=0x00000000;
    public static int tag_widget_entry=0x00000000;
    public static int tag_window_insets_animation_callback=0x00000000;
    public static int task_name=0x00000000;
    public static int taskbar=0x00000000;
    public static int taskbar_background=0x00000000;
    public static int taskbar_container=0x00000000;
    public static int taskbar_icon_1=0x00000000;
    public static int taskbar_icon_2=0x00000000;
    public static int taskbar_icon_3=0x00000000;
    public static int taskbar_icon_4=0x00000000;
    public static int taskbar_icon_5=0x00000000;
    public static int taskbar_icon_6=0x00000000;
    public static int taskbar_scrim=0x00000000;
    public static int taskbar_view=0x00000000;
    public static int test_checkbox_android_button_tint=0x00000000;
    public static int test_checkbox_app_button_tint=0x00000000;
    public static int test_radiobutton_android_button_tint=0x00000000;
    public static int test_radiobutton_app_button_tint=0x00000000;
    public static int text=0x00000000;
    public static int text1=0x00000000;
    public static int text2=0x00000000;
    public static int textEnd=0x00000000;
    public static int textSpacerNoButtons=0x00000000;
    public static int textSpacerNoTitle=0x00000000;
    public static int textStart=0x00000000;
    public static int textTop=0x00000000;
    public static int text_and_background=0x00000000;
    public static int text_input_end_icon=0x00000000;
    public static int text_input_error_icon=0x00000000;
    public static int text_input_start_icon=0x00000000;
    public static int text_overlay=0x00000000;
    public static int text_see_more=0x00000000;
    public static int text_see_more_count=0x00000000;
    public static int textinput_counter=0x00000000;
    public static int textinput_error=0x00000000;
    public static int textinput_helper_text=0x00000000;
    public static int textinput_placeholder=0x00000000;
    public static int textinput_prefix_text=0x00000000;
    public static int textinput_suffix_text=0x00000000;
    public static int thumbnail=0x00000000;
    public static int time=0x00000000;
    public static int tint_overlay=0x00000000;
    public static int title=0x00000000;
    public static int titleDividerNoCustom=0x00000000;
    public static int title_template=0x00000000;
    public static int toggle=0x00000000;
    public static int top=0x00000000;
    public static int topPanel=0x00000000;
    public static int top_bar=0x00000000;
    public static int top_bar_button=0x00000000;
    public static int top_task_view=0x00000000;
    public static int touch_outside=0x00000000;
    public static int transitionToEnd=0x00000000;
    public static int transitionToStart=0x00000000;
    public static int transition_current_scene=0x00000000;
    public static int transition_layout_save=0x00000000;
    public static int transition_position=0x00000000;
    public static int transition_scene_layoutid_cache=0x00000000;
    public static int transition_transform=0x00000000;
    public static int triangle=0x00000000;
    public static int turn_predictions_on=0x00000000;
    public static int unchecked=0x00000000;
    public static int uniform=0x00000000;
    public static int uninstall_target_text=0x00000000;
    public static int unlabeled=0x00000000;
    public static int unselected=0x00000000;
    public static int up=0x00000000;
    public static int url_bar=0x00000000;
    public static int useLogo=0x00000000;
    public static int view_offset_helper=0x00000000;
    public static int view_tree_lifecycle_owner=0x00000000;
    public static int view_tree_saved_state_registry_owner=0x00000000;
    public static int view_tree_view_model_store_owner=0x00000000;
    public static int view_type_widgets_header=0x00000000;
    public static int view_type_widgets_list=0x00000000;
    public static int view_type_widgets_search_header=0x00000000;
    public static int view_type_widgets_space=0x00000000;
    /**
     * View IDs to store item highlight information
     */
    public static int view_unhighlight_background=0x00000000;
    public static int visible=0x00000000;
    public static int visible_removing_fragment_view_tag=0x00000000;
    public static int widget_appName=0x00000000;
    public static int widget_badge=0x00000000;
    public static int widget_cell=0x00000000;
    public static int widget_description=0x00000000;
    public static int widget_dims=0x00000000;
    public static int widget_drag_instruction=0x00000000;
    public static int widget_name=0x00000000;
    public static int widget_preview=0x00000000;
    public static int widget_preview_container=0x00000000;
    public static int widget_preview_scroll_view=0x00000000;
    public static int widget_reconfigure_button=0x00000000;
    public static int widget_resize_bottom_handle=0x00000000;
    public static int widget_resize_frame=0x00000000;
    public static int widget_resize_left_handle=0x00000000;
    public static int widget_resize_right_handle=0x00000000;
    public static int widget_resize_top_handle=0x00000000;
    public static int widget_section=0x00000000;
    public static int widgets_bottom_sheet=0x00000000;
    public static int widgets_cell_list_container=0x00000000;
    public static int widgets_list_header=0x00000000;
    public static int widgets_search_bar=0x00000000;
    public static int widgets_search_bar_edit_text=0x00000000;
    public static int widgets_search_cancel_button=0x00000000;
    public static int widgets_table=0x00000000;
    public static int widgets_table_scroll_view=0x00000000;
    public static int widgets_view_pager=0x00000000;
    public static int withText=0x00000000;
    public static int withinBounds=0x00000000;
    public static int work_apps_paused_content=0x00000000;
    public static int work_apps_paused_title=0x00000000;
    public static int work_mode_toggle=0x00000000;
    /**
     * view ID used to restore work tab state
     */
    public static int work_tab_state_id=0x00000000;
    public static int work_widgets_list_view=0x00000000;
    public static int workspace=0x00000000;
    public static int workspace_grid=0x00000000;
    public static int workspace_right=0x00000000;
    public static int wrap=0x00000000;
    public static int wrap_content=0x00000000;
    public static int wrapper=0x00000000;
    public static int zero_corner_chip=0x00000000;
  }
  public static final class integer {
    public static int abc_config_activityDefaultDur=0x00000000;
    public static int abc_config_activityShortDur=0x00000000;
    public static int app_bar_elevation_anim_duration=0x00000000;
    public static int assistant_gesture_corner_deg_threshold=0x00000000;
    /**
     * Assistant Gesture
     */
    public static int assistant_gesture_min_time_threshold=0x00000000;
    public static int bottom_sheet_slide_duration=0x00000000;
    public static int cancel_button_image_alpha=0x00000000;
    /**
     * The duration of the caret animation
     */
    public static int config_caretAnimationDuration=0x00000000;
    /**
     * The duration (in ms) of the fade animation on the object outlines, used when
     * we are dragging objects around on the home screen.
     */
    public static int config_dragOutlineFadeTime=0x00000000;
    /**
     * The alpha value at which to show the most recent drop visualization outline.
     */
    public static int config_dragOutlineMaxAlpha=0x00000000;
    /**
     * The distance at which the animation should take the max duration
     */
    public static int config_dropAnimMaxDist=0x00000000;
    public static int config_dropAnimMaxDuration=0x00000000;
    /**
     * Parameters controlling the animation for when an item is dropped on the home screen,
     * and it animates from its old position to the new one.
     */
    public static int config_dropAnimMinDuration=0x00000000;
    public static int config_folderDelay=0x00000000;
    /**
     * The duration of the UserFolder opening and closing animation
     */
    public static int config_materialFolderExpandDuration=0x00000000;
    /**
     * The duration of the animation from search hint to text entry
     */
    public static int config_searchHintAnimationDuration=0x00000000;
    public static int config_tooltipAnimTime=0x00000000;
    /**
     * Out of 100, the percent to shrink the workspace during spring loaded mode.
     */
    public static int config_workspaceSpringLoadShrinkPercentage=0x00000000;
    public static int design_snackbar_text_max_lines=0x00000000;
    public static int design_tab_indicator_anim_duration_ms=0x00000000;
    public static int extracted_color_gradient_alpha=0x00000000;
    public static int hide_password_duration=0x00000000;
    public static int material_motion_duration_long_1=0x00000000;
    public static int material_motion_duration_long_2=0x00000000;
    public static int material_motion_duration_medium_1=0x00000000;
    public static int material_motion_duration_medium_2=0x00000000;
    public static int material_motion_duration_short_1=0x00000000;
    public static int material_motion_duration_short_2=0x00000000;
    public static int material_motion_path=0x00000000;
    public static int max_depth_blur_radius=0x00000000;
    public static int mtrl_badge_max_character_count=0x00000000;
    public static int mtrl_btn_anim_delay_ms=0x00000000;
    public static int mtrl_btn_anim_duration_ms=0x00000000;
    public static int mtrl_calendar_header_orientation=0x00000000;
    public static int mtrl_calendar_selection_text_lines=0x00000000;
    public static int mtrl_calendar_year_selector_span=0x00000000;
    public static int mtrl_card_anim_delay_ms=0x00000000;
    public static int mtrl_card_anim_duration_ms=0x00000000;
    public static int mtrl_chip_anim_duration=0x00000000;
    public static int mtrl_tab_indicator_anim_duration_ms=0x00000000;
    public static int recentsIconCacheSize=0x00000000;
    public static int recentsScrollHapticMinGapMillis=0x00000000;
    /**
     * The number of thumbnails and icons to keep in the cache. The thumbnail cache size also
     * determines how many thumbnails will be fetched in the background.
     */
    public static int recentsThumbnailCacheSize=0x00000000;
    public static int show_password_duration=0x00000000;
    public static int status_bar_notification_info_maxnum=0x00000000;
  }
  public static final class interpolator {
    public static int app_open_x=0x00000000;
    public static int btn_checkbox_checked_mtrl_animation_interpolator_0=0x00000000;
    public static int btn_checkbox_checked_mtrl_animation_interpolator_1=0x00000000;
    public static int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x00000000;
    public static int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x00000000;
    public static int btn_radio_to_off_mtrl_animation_interpolator_0=0x00000000;
    public static int btn_radio_to_on_mtrl_animation_interpolator_0=0x00000000;
    public static int decelerate_quart=0x00000000;
    public static int decelerate_quint=0x00000000;
    public static int disco_bounce=0x00000000;
    public static int fast_out_slow_in=0x00000000;
    public static int folder_interpolator=0x00000000;
    public static int large_folder_preview_item_close_interpolator=0x00000000;
    public static int large_folder_preview_item_open_interpolator=0x00000000;
    public static int mtrl_fast_out_linear_in=0x00000000;
    public static int mtrl_fast_out_slow_in=0x00000000;
    public static int mtrl_linear=0x00000000;
    public static int mtrl_linear_out_slow_in=0x00000000;
    public static int three_point_fast_out_extra_slow_in=0x00000000;
  }
  public static final class layout {
    public static int abc_action_bar_title_item=0x00000000;
    public static int abc_action_bar_up_container=0x00000000;
    public static int abc_action_menu_item_layout=0x00000000;
    public static int abc_action_menu_layout=0x00000000;
    public static int abc_action_mode_bar=0x00000000;
    public static int abc_action_mode_close_item_material=0x00000000;
    public static int abc_activity_chooser_view=0x00000000;
    public static int abc_activity_chooser_view_list_item=0x00000000;
    public static int abc_alert_dialog_button_bar_material=0x00000000;
    public static int abc_alert_dialog_material=0x00000000;
    public static int abc_alert_dialog_title_material=0x00000000;
    public static int abc_cascading_menu_item_layout=0x00000000;
    public static int abc_dialog_title_material=0x00000000;
    public static int abc_expanded_menu_layout=0x00000000;
    public static int abc_list_menu_item_checkbox=0x00000000;
    public static int abc_list_menu_item_icon=0x00000000;
    public static int abc_list_menu_item_layout=0x00000000;
    public static int abc_list_menu_item_radio=0x00000000;
    public static int abc_popup_menu_header_item_layout=0x00000000;
    public static int abc_popup_menu_item_layout=0x00000000;
    public static int abc_screen_content_include=0x00000000;
    public static int abc_screen_simple=0x00000000;
    public static int abc_screen_simple_overlay_action_mode=0x00000000;
    public static int abc_screen_toolbar=0x00000000;
    public static int abc_search_dropdown_item_icons_2line=0x00000000;
    public static int abc_search_view=0x00000000;
    public static int abc_select_dialog_material=0x00000000;
    public static int abc_slice_grid=0x00000000;
    public static int abc_slice_grid_see_more=0x00000000;
    public static int abc_slice_grid_see_more_overlay=0x00000000;
    public static int abc_slice_grid_text_overlay_image=0x00000000;
    public static int abc_slice_message=0x00000000;
    public static int abc_slice_message_local=0x00000000;
    public static int abc_slice_permission_request=0x00000000;
    public static int abc_slice_progress_inline_view=0x00000000;
    public static int abc_slice_progress_view=0x00000000;
    public static int abc_slice_remote_input=0x00000000;
    public static int abc_slice_row_selection=0x00000000;
    public static int abc_slice_row_selection_dropdown_text=0x00000000;
    public static int abc_slice_row_selection_text=0x00000000;
    public static int abc_slice_row_show_more=0x00000000;
    public static int abc_slice_secondary_text=0x00000000;
    public static int abc_slice_seekbar_view=0x00000000;
    public static int abc_slice_small_template=0x00000000;
    public static int abc_slice_switch=0x00000000;
    public static int abc_slice_title=0x00000000;
    public static int abc_tooltip=0x00000000;
    public static int activity_allset=0x00000000;
    public static int activity_hidden_apps=0x00000000;
    public static int add_item_confirmation_activity=0x00000000;
    public static int all_apps=0x00000000;
    public static int all_apps_content_layout=0x00000000;
    public static int all_apps_divider=0x00000000;
    public static int all_apps_edu_view=0x00000000;
    public static int all_apps_empty_search=0x00000000;
    public static int all_apps_fast_scroller=0x00000000;
    public static int all_apps_icon=0x00000000;
    public static int all_apps_icon_twoline=0x00000000;
    public static int all_apps_personal_work_tabs=0x00000000;
    public static int all_apps_rv_layout=0x00000000;
    public static int all_apps_search_market=0x00000000;
    public static int all_apps_tabs=0x00000000;
    public static int app_icon=0x00000000;
    public static int app_widget_resize_frame=0x00000000;
    public static int appwidget_error=0x00000000;
    public static int appwidget_not_ready=0x00000000;
    public static int arrow_toast=0x00000000;
    public static int custom_dialog=0x00000000;
    public static int deep_shortcut=0x00000000;
    public static int design_bottom_navigation_item=0x00000000;
    public static int design_bottom_sheet_dialog=0x00000000;
    public static int design_layout_snackbar=0x00000000;
    public static int design_layout_snackbar_include=0x00000000;
    public static int design_layout_tab_icon=0x00000000;
    public static int design_layout_tab_text=0x00000000;
    public static int design_menu_item_action_area=0x00000000;
    public static int design_navigation_item=0x00000000;
    public static int design_navigation_item_header=0x00000000;
    public static int design_navigation_item_separator=0x00000000;
    public static int design_navigation_item_subheader=0x00000000;
    public static int design_navigation_menu=0x00000000;
    public static int design_navigation_menu_item=0x00000000;
    public static int design_text_input_end_icon=0x00000000;
    public static int design_text_input_start_icon=0x00000000;
    public static int dialog_trust_welcome=0x00000000;
    public static int digital_wellbeing_toast=0x00000000;
    public static int drop_target_bar=0x00000000;
    public static int drop_target_tool_tip=0x00000000;
    public static int expand_button=0x00000000;
    public static int fallback_recents_activity=0x00000000;
    public static int floating_header_content=0x00000000;
    public static int floating_icon_view=0x00000000;
    public static int floating_split_select_view=0x00000000;
    public static int floating_surface_view=0x00000000;
    public static int floating_widget_view=0x00000000;
    public static int folder_application=0x00000000;
    public static int folder_icon=0x00000000;
    public static int folder_page=0x00000000;
    public static int gesture_tutorial_activity=0x00000000;
    public static int gesture_tutorial_dialog=0x00000000;
    public static int gesture_tutorial_foldable_mock_conversation=0x00000000;
    public static int gesture_tutorial_foldable_mock_conversation_list=0x00000000;
    public static int gesture_tutorial_foldable_mock_hotseat=0x00000000;
    public static int gesture_tutorial_foldable_mock_taskbar=0x00000000;
    public static int gesture_tutorial_foldable_mock_webpage=0x00000000;
    public static int gesture_tutorial_fragment=0x00000000;
    public static int gesture_tutorial_mock_conversation=0x00000000;
    public static int gesture_tutorial_mock_conversation_list=0x00000000;
    public static int gesture_tutorial_mock_hotseat=0x00000000;
    public static int gesture_tutorial_mock_webpage=0x00000000;
    public static int home_settings=0x00000000;
    public static int hotseat=0x00000000;
    public static int image_frame=0x00000000;
    public static int item_hidden_app=0x00000000;
    public static int keyboard_drag_and_drop=0x00000000;
    public static int launcher=0x00000000;
    public static int launcher_preview_layout=0x00000000;
    public static int launcher_preview_two_panel_layout=0x00000000;
    public static int longpress_options_menu=0x00000000;
    public static int material_chip_input_combo=0x00000000;
    public static int material_clock_display=0x00000000;
    public static int material_clock_display_divider=0x00000000;
    public static int material_clock_period_toggle=0x00000000;
    public static int material_clock_period_toggle_land=0x00000000;
    public static int material_clockface_textview=0x00000000;
    public static int material_clockface_view=0x00000000;
    public static int material_radial_view_group=0x00000000;
    public static int material_textinput_timepicker=0x00000000;
    public static int material_time_chip=0x00000000;
    public static int material_time_input=0x00000000;
    public static int material_timepicker=0x00000000;
    public static int material_timepicker_dialog=0x00000000;
    public static int material_timepicker_textinput_display=0x00000000;
    public static int mtrl_alert_dialog=0x00000000;
    public static int mtrl_alert_dialog_actions=0x00000000;
    public static int mtrl_alert_dialog_title=0x00000000;
    public static int mtrl_alert_select_dialog_item=0x00000000;
    public static int mtrl_alert_select_dialog_multichoice=0x00000000;
    public static int mtrl_alert_select_dialog_singlechoice=0x00000000;
    public static int mtrl_calendar_day=0x00000000;
    public static int mtrl_calendar_day_of_week=0x00000000;
    public static int mtrl_calendar_days_of_week=0x00000000;
    public static int mtrl_calendar_horizontal=0x00000000;
    public static int mtrl_calendar_month=0x00000000;
    public static int mtrl_calendar_month_labeled=0x00000000;
    public static int mtrl_calendar_month_navigation=0x00000000;
    public static int mtrl_calendar_months=0x00000000;
    public static int mtrl_calendar_vertical=0x00000000;
    public static int mtrl_calendar_year=0x00000000;
    public static int mtrl_layout_snackbar=0x00000000;
    public static int mtrl_layout_snackbar_include=0x00000000;
    public static int mtrl_navigation_rail_item=0x00000000;
    public static int mtrl_picker_actions=0x00000000;
    public static int mtrl_picker_dialog=0x00000000;
    public static int mtrl_picker_fullscreen=0x00000000;
    public static int mtrl_picker_header_dialog=0x00000000;
    public static int mtrl_picker_header_fullscreen=0x00000000;
    public static int mtrl_picker_header_selection_text=0x00000000;
    public static int mtrl_picker_header_title_text=0x00000000;
    public static int mtrl_picker_header_toggle=0x00000000;
    public static int mtrl_picker_text_input_date=0x00000000;
    public static int mtrl_picker_text_input_date_range=0x00000000;
    public static int notification_action=0x00000000;
    public static int notification_action_tombstone=0x00000000;
    public static int notification_content=0x00000000;
    public static int notification_gutter=0x00000000;
    public static int notification_pref_warning=0x00000000;
    public static int notification_template_custom_big=0x00000000;
    public static int notification_template_icon_group=0x00000000;
    public static int notification_template_part_chronometer=0x00000000;
    public static int notification_template_part_time=0x00000000;
    public static int overview_actions_container=0x00000000;
    public static int overview_clear_all_button=0x00000000;
    public static int overview_panel=0x00000000;
    public static int popup_container=0x00000000;
    public static int predicted_app_icon=0x00000000;
    public static int predicted_hotseat_edu=0x00000000;
    public static int preference=0x00000000;
    public static int preference_category=0x00000000;
    public static int preference_category_material=0x00000000;
    public static int preference_dialog_edittext=0x00000000;
    public static int preference_dropdown=0x00000000;
    public static int preference_dropdown_material=0x00000000;
    public static int preference_information=0x00000000;
    public static int preference_information_material=0x00000000;
    public static int preference_list_fragment=0x00000000;
    public static int preference_material=0x00000000;
    public static int preference_recyclerview=0x00000000;
    public static int preference_widget_checkbox=0x00000000;
    public static int preference_widget_seekbar=0x00000000;
    public static int preference_widget_seekbar_material=0x00000000;
    public static int preference_widget_switch=0x00000000;
    public static int preference_widget_switch_compat=0x00000000;
    public static int qsb_default_view=0x00000000;
    public static int qsb_preview=0x00000000;
    public static int rotate_suggestion=0x00000000;
    public static int search_container_all_apps=0x00000000;
    public static int search_container_hotseat=0x00000000;
    public static int search_container_workspace=0x00000000;
    public static int secondary_launcher=0x00000000;
    public static int select_dialog_item_material=0x00000000;
    public static int select_dialog_multichoice_material=0x00000000;
    public static int select_dialog_singlechoice_material=0x00000000;
    public static int settings_activity=0x00000000;
    public static int snackbar=0x00000000;
    public static int support_simple_spinner_dropdown_item=0x00000000;
    public static int switch_preference_with_settings=0x00000000;
    public static int system_shortcut=0x00000000;
    public static int system_shortcut_content=0x00000000;
    public static int system_shortcut_icon_only=0x00000000;
    public static int system_shortcut_icons=0x00000000;
    public static int task=0x00000000;
    public static int task_grouped=0x00000000;
    public static int task_menu=0x00000000;
    public static int task_menu_with_arrow=0x00000000;
    public static int task_view_menu_option=0x00000000;
    public static int taskbar=0x00000000;
    public static int taskbar_app_icon=0x00000000;
    public static int taskbar_contextual_button=0x00000000;
    public static int taskbar_edu=0x00000000;
    public static int taskbar_nav_button=0x00000000;
    public static int taskbar_predicted_app_icon=0x00000000;
    public static int test_action_chip=0x00000000;
    public static int test_chip_zero_corner_radius=0x00000000;
    public static int test_design_checkbox=0x00000000;
    public static int test_design_radiobutton=0x00000000;
    public static int test_navigation_bar_item_layout=0x00000000;
    public static int test_reflow_chipgroup=0x00000000;
    public static int test_toolbar=0x00000000;
    public static int test_toolbar_custom_background=0x00000000;
    public static int test_toolbar_elevation=0x00000000;
    public static int test_toolbar_surface=0x00000000;
    public static int text_view_with_line_height_from_appearance=0x00000000;
    public static int text_view_with_line_height_from_layout=0x00000000;
    public static int text_view_with_line_height_from_style=0x00000000;
    public static int text_view_with_theme_line_height=0x00000000;
    public static int text_view_without_line_height=0x00000000;
    public static int user_folder_icon_normalized=0x00000000;
    public static int widget_cell=0x00000000;
    public static int widget_cell_content=0x00000000;
    public static int widget_list_divider=0x00000000;
    public static int widget_shortcut_container=0x00000000;
    public static int widgets_bottom_sheet=0x00000000;
    public static int widgets_bottom_sheet_content=0x00000000;
    public static int widgets_edu=0x00000000;
    public static int widgets_full_sheet=0x00000000;
    public static int widgets_full_sheet_paged_view=0x00000000;
    public static int widgets_full_sheet_recyclerview=0x00000000;
    public static int widgets_list_row_header=0x00000000;
    public static int widgets_list_row_view=0x00000000;
    public static int widgets_search_bar=0x00000000;
    public static int widgets_table_container=0x00000000;
    public static int work_apps_edu=0x00000000;
    public static int work_apps_paused=0x00000000;
    public static int work_mode_fab=0x00000000;
    public static int workspace_screen=0x00000000;
  }
  public static final class menu {
    public static int menu_trust_apps=0x00000000;
  }
  public static final class mipmap {
    public static int ic_launcher=0x00000000;
  }
  public static final class plurals {
    public static int abc_slice_duration_days=0x00000000;
    public static int abc_slice_duration_min=0x00000000;
    public static int abc_slice_duration_years=0x00000000;
    public static int mtrl_badge_content_description=0x00000000;
  }
  public static final class raw {
    public static int all_set_page_bg=0x00000000;
    public static int downgrade_schema=0x00000000;
  }
  public static final class string {
    /**
     * Button for abandoned promises dialog, to removes this abandoned promise icon.
     */
    public static int abandoned_clean_this=0x00000000;
    /**
     * Explanation for abandoned promise dialog. "The first 'it' refers to the shortcut icon.
     * The second "it" refers to the app.
     */
    public static int abandoned_promise_explanation=0x00000000;
    /**
     * Title for abandoned promise dialog.
     */
    public static int abandoned_promises_title=0x00000000;
    /**
     * Button for abandoned promise dialog, to search in the market for the missing package.
     */
    public static int abandoned_search=0x00000000;
    public static int abc_action_bar_home_description=0x00000000;
    public static int abc_action_bar_up_description=0x00000000;
    public static int abc_action_menu_overflow_description=0x00000000;
    public static int abc_action_mode_done=0x00000000;
    public static int abc_activity_chooser_view_see_all=0x00000000;
    public static int abc_activitychooserview_choose_application=0x00000000;
    public static int abc_capital_off=0x00000000;
    public static int abc_capital_on=0x00000000;
    public static int abc_menu_alt_shortcut_label=0x00000000;
    public static int abc_menu_ctrl_shortcut_label=0x00000000;
    public static int abc_menu_delete_shortcut_label=0x00000000;
    public static int abc_menu_enter_shortcut_label=0x00000000;
    public static int abc_menu_function_shortcut_label=0x00000000;
    public static int abc_menu_meta_shortcut_label=0x00000000;
    public static int abc_menu_shift_shortcut_label=0x00000000;
    public static int abc_menu_space_shortcut_label=0x00000000;
    public static int abc_menu_sym_shortcut_label=0x00000000;
    public static int abc_prepend_shortcut_label=0x00000000;
    public static int abc_search_hint=0x00000000;
    public static int abc_searchview_description_clear=0x00000000;
    public static int abc_searchview_description_query=0x00000000;
    public static int abc_searchview_description_search=0x00000000;
    public static int abc_searchview_description_submit=0x00000000;
    public static int abc_searchview_description_voice=0x00000000;
    public static int abc_shareactionprovider_share_with=0x00000000;
    public static int abc_shareactionprovider_share_with_application=0x00000000;
    public static int abc_slice_error=0x00000000;
    public static int abc_slice_more=0x00000000;
    public static int abc_slice_more_content=0x00000000;
    public static int abc_slice_permission_allow=0x00000000;
    public static int abc_slice_permission_checkbox=0x00000000;
    public static int abc_slice_permission_deny=0x00000000;
    public static int abc_slice_permission_text_1=0x00000000;
    public static int abc_slice_permission_text_2=0x00000000;
    public static int abc_slice_permission_title=0x00000000;
    public static int abc_slice_show_more=0x00000000;
    public static int abc_slice_updated=0x00000000;
    public static int abc_slices_permission_request=0x00000000;
    public static int abc_toolbar_collapse_description=0x00000000;
    /**
     * Content description for the recent apps's accessibility option that opens its usage settings. [CHAR LIMIT=NONE]
     */
    public static int accessibility_app_usage_settings=0x00000000;
    /**
     * Content description for arrow tip close button. [CHAR LIMIT=NONE]
     */
    public static int accessibility_close=0x00000000;
    /**
     * Accessibility title for the list of recent apps [CHAR_LIMIT=none]
     */
    public static int accessibility_recent_apps=0x00000000;
    /**
     * Accessibility label for the rotation suggestion button
     */
    public static int accessibility_rotate_button=0x00000000;
    /**
     * Accessibility action to add an app to workspace. [CHAR_LIMIT=30]
     */
    public static int action_add_to_workspace=0x00000000;
    /**
     * Accessibility action to decrease height of a widget. [CHAR_LIMIT=30]
     */
    public static int action_decrease_height=0x00000000;
    /**
     * Accessibility action to decrease width of a widget. [CHAR_LIMIT=30]
     */
    public static int action_decrease_width=0x00000000;
    /**
     * Accessibility action to show quick actions menu for an icon. [CHAR_LIMIT=30]
     */
    public static int action_deep_shortcut=0x00000000;
    /**
     * Accessibility action to dismiss a notification in the shortcuts menu for an icon. [CHAR_LIMIT=30]
     */
    public static int action_dismiss_notification=0x00000000;
    /**
     * Accessibility action to increase height of a widget. [CHAR_LIMIT=30]
     */
    public static int action_increase_height=0x00000000;
    /**
     * Accessibility action to increase width of a widget. [CHAR_LIMIT=30]
     */
    public static int action_increase_width=0x00000000;
    /**
     * Accessibility action to move an item on the workspace. [CHAR_LIMIT=30]
     */
    public static int action_move=0x00000000;
    /**
     * Accessibility action to move item to the current location. [CHAR_LIMIT=30]
     */
    public static int action_move_here=0x00000000;
    /**
     * Accessibility action to move an item from folder to workspace. [CHAR_LIMIT=30]
     */
    public static int action_move_to_workspace=0x00000000;
    /**
     * Accessibility action to resize a widget. [CHAR_LIMIT=30]
     */
    public static int action_resize=0x00000000;
    /**
     * Label for a button that causes a screen shot of the current app to be taken. [CHAR_LIMIT=40]
     */
    public static int action_screenshot=0x00000000;
    /**
     * Label for a button that causes the current overview app to be shared. [CHAR_LIMIT=40]
     */
    public static int action_share=0x00000000;
    /**
     * Label for a button that enters split screen selection mode. [CHAR_LIMIT=20]
     */
    public static int action_split=0x00000000;
    /**
     * Displayed when user selects a shortcut for an app that is current not available [CHAR_LIMIT=none]
     */
    public static int activity_not_available=0x00000000;
    /**
     * Displayed when user selects a shortcut for an app that was uninstalled [CHAR_LIMIT=none]
     */
    public static int activity_not_found=0x00000000;
    /**
     * Message to tell the user to press and hold a widget/icon to add it to the home screen.
     * [CHAR LIMIT=NONE]
     */
    public static int add_item_request_drag_hint=0x00000000;
    /**
     * Accessibility description to move item into an existing folder.
     */
    public static int add_to_folder=0x00000000;
    /**
     * Accessibility description to move item into an existing folder containing an app.
     */
    public static int add_to_folder_with_app=0x00000000;
    /**
     * Button label to automatically add a widget to home screen [CHAR_LIMIT=50]
     */
    public static int add_to_home_screen=0x00000000;
    /**
     * Accessibility confirmation for item added to folder.
     */
    public static int added_to_folder=0x00000000;
    /**
     * Accessibility spoken message announced when a widget gets added to the home screen using a
     * button in a dialog. [CHAR_LIMIT=none]
     */
    public static int added_to_home_screen_accessibility_text=0x00000000;
    /**
     * All applications label
     */
    public static int all_apps_button_label=0x00000000;
    public static int all_apps_button_personal_label=0x00000000;
    public static int all_apps_button_work_label=0x00000000;
    /**
     * Label for the header text of the All Apps section in All Apps view, used to separate Predicted Apps and Actions section from All Apps section. [CHAR_LIMIT=50]
     */
    public static int all_apps_label=0x00000000;
    /**
     * Loading apps text. [CHAR_LIMIT=50]
     */
    public static int all_apps_loading_message=0x00000000;
    /**
     * No-search-results text. [CHAR_LIMIT=50]
     */
    public static int all_apps_no_search_results=0x00000000;
    /**
     * Label of tab to indicate personal apps
     */
    public static int all_apps_personal_tab=0x00000000;
    /**
     * Text of the tip when user lands in all apps view for the first time, indicating where the tip toast points to is the predicted apps section. [CHAR_LIMIT=50]
     */
    public static int all_apps_prediction_tip=0x00000000;
    /**
     * Search bar text in the apps view. [CHAR_LIMIT=50]
     */
    public static int all_apps_search_bar_hint=0x00000000;
    /**
     * Label for the button which allows the user to get app search results. [CHAR_LIMIT=50]
     */
    public static int all_apps_search_market_message=0x00000000;
    public static int all_apps_search_results=0x00000000;
    /**
     * Label of tab to indicate work apps
     */
    public static int all_apps_work_tab=0x00000000;
    /**
     * Text explaining when the home screen will get rotated. [CHAR LIMIT=100]
     */
    public static int allow_rotation_desc=0x00000000;
    /**
     * Title for Allow Rotation setting. [CHAR LIMIT=50]
     */
    public static int allow_rotation_title=0x00000000;
    /**
     * Description of "All Set" page [CHAR LIMIT=NONE]
     */
    public static int allset_description=0x00000000;
    /**
     * Hint string at the bottom of "All Set" page [CHAR LIMIT=NONE]
     */
    public static int allset_hint=0x00000000;
    /**
     * String linking to navigation settings on "All Set" page [CHAR LIMIT=NONE]
     */
    public static int allset_navigation_settings=0x00000000;
    /**
     * Title of "All Set" page [CHAR LIMIT=NONE]
     */
    public static int allset_title=0x00000000;
    /**
     * Title for an app which is being downloaded.
     */
    public static int app_downloading_title=0x00000000;
    /**
     * Label for app info drop target. [CHAR_LIMIT=20]
     */
    public static int app_info_drop_target_label=0x00000000;
    /**
     * Title for an app which is being installed.
     */
    public static int app_installing_title=0x00000000;
    public static int app_launch_tracker_class=0x00000000;
    /**
     * Application name
     */
    public static int app_name=0x00000000;
    /**
     * Title for an app whose download has been started.
     */
    public static int app_waiting_download_title=0x00000000;
    public static int appbar_scrolling_view_behavior=0x00000000;
    /**
     * Feedback shown during interactive parts of Assistant gesture tutorial when the gesture doesn't go diagonally enough. [CHAR LIMIT=100]
     */
    public static int assistant_gesture_feedback_swipe_not_diagonal=0x00000000;
    /**
     * Feedback shown during interactive parts of Assistant gesture tutorial when the gesture doesn't go far enough. [CHAR LIMIT=100]
     */
    public static int assistant_gesture_feedback_swipe_not_long_enough=0x00000000;
    /**
     * Feedback shown during interactive parts of Assistant gesture tutorial when the gesture is started too far from the corner. [CHAR LIMIT=100]
     */
    public static int assistant_gesture_feedback_swipe_too_far_from_corner=0x00000000;
    /**
     * Subtitle shown during interactive parts of Assistant gesture tutorial. [CHAR LIMIT=60]
     */
    public static int assistant_gesture_tutorial_playground_subtitle=0x00000000;
    /**
     * Title shown during interactive part of Assistant gesture tutorial. [CHAR LIMIT=30]
     */
    public static int assistant_gesture_tutorial_playground_title=0x00000000;
    /**
     * Text description of the setting that allows the automatic placement of launcher shortcuts for applications and games installed on the device [CHAR LIMIT=NONE]
     */
    public static int auto_add_shortcuts_description=0x00000000;
    /**
     * Label for the setting that allows the automatic placement of launcher shortcuts for applications and games installed on the device [CHAR LIMIT=60]
     */
    public static int auto_add_shortcuts_label=0x00000000;
    /**
     * Feedback shown during interactive parts of Back gesture tutorial for right edge when the gesture is cancelled. [CHAR LIMIT=100]
     */
    public static int back_gesture_feedback_cancelled=0x00000000;
    /**
     * Feedback shown after completing the back gesture step if the user is following the full gesture tutorial flow. [CHAR LIMIT=100]
     */
    public static int back_gesture_feedback_complete_with_overview_follow_up=0x00000000;
    /**
     * Feedback shown after completing the back gesture step if the user started this tutorial individually. [CHAR LIMIT=100]
     */
    public static int back_gesture_feedback_complete_without_follow_up=0x00000000;
    /**
     * Feedback shown during interactive parts of Back gesture tutorial when the gesture is within the nav bar region. [CHAR LIMIT=100]
     */
    public static int back_gesture_feedback_swipe_in_nav_bar=0x00000000;
    /**
     * Feedback shown during interactive parts of Back gesture tutorial for right edge when the gesture is too far from the edge. [CHAR LIMIT=100]
     */
    public static int back_gesture_feedback_swipe_too_far_from_edge=0x00000000;
    /**
     * Introduction subtitle for the Back gesture tutorial. [CHAR LIMIT=200]
     */
    public static int back_gesture_intro_subtitle=0x00000000;
    /**
     * Introduction title for the Back gesture tutorial. [CHAR LIMIT=100]
     */
    public static int back_gesture_intro_title=0x00000000;
    /**
     * Subtitle shown on the confirmation screen after successful gesture. [CHAR LIMIT=60]
     */
    public static int back_gesture_tutorial_confirm_subtitle=0x00000000;
    /**
     * Message shown when an action is blocked by a policy enforced by the app or the organization managing the device. [CHAR_LIMIT=NONE]
     */
    public static int blocked_by_policy=0x00000000;
    public static int bottom_sheet_behavior=0x00000000;
    public static int bottomsheet_action_expand_halfway=0x00000000;
    public static int cache_db_name=0x00000000;
    public static int calendar_component_name=0x00000000;
    public static int character_counter_content_description=0x00000000;
    public static int character_counter_overflowed_content_description=0x00000000;
    public static int character_counter_pattern=0x00000000;
    public static int chip_text=0x00000000;
    public static int clear_text_end_icon_content_description=0x00000000;
    public static int clock_component_name=0x00000000;
    /**
     * Name of the class used to generate colors from the wallpaper colors. Must be implementing the LauncherAppWidgetHostView.ColorGenerator interface.
     */
    public static int color_generator_class=0x00000000;
    public static int copy=0x00000000;
    /**
     * Accessibility description to create folder with another item.
     */
    public static int create_folder_with=0x00000000;
    /**
     * The format string for default page scroll text [CHAR_LIMIT=none]
     */
    public static int default_scroll_format=0x00000000;
    /**
     * String representing the intent to delete a package.
     */
    public static int delete_package_intent=0x00000000;
    /**
     * A string pointer to the original app name string. This allows derived projects to
     * easily override the app name without providing all translations
     */
    public static int derived_app_name=0x00000000;
    /**
     * Hide labels
     */
    public static int desktop_show_labels=0x00000000;
    /**
     * A hint shown in launcher settings develop options filter box
     */
    public static int developer_options_filter_hint=0x00000000;
    /**
     * The format string for when an app is temporarily disabled.
     */
    public static int disabled_app_label=0x00000000;
    /**
     * Label for install dismiss prediction.
     */
    public static int dismiss_prediction_label=0x00000000;
    /**
     * The format string for when an app has a notification dot (meaning it has associated notifications). [ICU_FORMAT]
     */
    public static int dotted_app_label=0x00000000;
    public static int drawer_show_labels=0x00000000;
    public static int error_icon_content_description=0x00000000;
    public static int expand_button_title=0x00000000;
    public static int exposed_dropdown_menu_content_description=0x00000000;
    public static int fab_transformation_scrim_behavior=0x00000000;
    public static int fab_transformation_sheet_behavior=0x00000000;
    /**
     * Indication that folder closed
     */
    public static int folder_closed=0x00000000;
    /**
     * Accessibility confirmation for folder created.
     */
    public static int folder_created=0x00000000;
    /**
     * Default folder title
     */
    public static int folder_hint_text=0x00000000;
    /**
     * Folder name format when folder has less than 4 items
     */
    public static int folder_name_format_exact=0x00000000;
    /**
     * Folder name format when folder has 4 or more items shown in preview
     */
    public static int folder_name_format_overflow=0x00000000;
    /**
     * Various classes overriden by projects/build flavors.
     */
    public static int folder_name_provider_class=0x00000000;
    /**
     * The format string for when a folder is opened, speaks the dimensions
     */
    public static int folder_opened=0x00000000;
    /**
     * Folder renamed format
     */
    public static int folder_renamed=0x00000000;
    /**
     * Instruction that clicking outside will close folder
     */
    public static int folder_tap_to_close=0x00000000;
    /**
     * Instruction that clicking outside will commit folder rename
     */
    public static int folder_tap_to_rename=0x00000000;
    /**
     * Instructional text to encourage a user to finish setting up the widget.
     */
    public static int gadget_complete_setup_text=0x00000000;
    /**
     * Error text that lets a user know that the widget can't load.
     */
    public static int gadget_error_text=0x00000000;
    /**
     * Button text. This button lets a user change a widget's settings.
     */
    public static int gadget_setup_text=0x00000000;
    /**
     * Button text shown on a button on the feedback popup to complete the gesture tutorial. [CHAR LIMIT=14]
     */
    public static int gesture_tutorial_action_button_label=0x00000000;
    /**
     * Button text shown on a button on the tutorial skip dialog to return to the tutorial. [CHAR LIMIT=14]
     */
    public static int gesture_tutorial_action_button_label_cancel=0x00000000;
    /**
     * Button text shown on a button to go to Settings. [CHAR LIMIT=14]
     */
    public static int gesture_tutorial_action_button_label_settings=0x00000000;
    /**
     * Button text shown on a button on the tutorial skip dialog to exit the tutorial. [CHAR LIMIT=14]
     */
    public static int gesture_tutorial_action_button_label_skip=0x00000000;
    /**
     * Content description for a close button. [CHAR LIMIT=NONE]
     */
    public static int gesture_tutorial_close_button_content_description=0x00000000;
    /**
     * Title shown on the confirmation screen after successful gesture. [CHAR LIMIT=30]
     */
    public static int gesture_tutorial_confirm_title=0x00000000;
    /**
     * Feedback title for a successful gesture. [CHAR LIMIT=30]
     */
    public static int gesture_tutorial_nice=0x00000000;
    /**
     * Feedback subtext displaying the current step and the total number of steps for the tutorial. [CHAR LIMIT=30]
     */
    public static int gesture_tutorial_step=0x00000000;
    /**
     * Feedback title to try again. [CHAR LIMIT=30]
     */
    public static int gesture_tutorial_try_again=0x00000000;
    /**
     * Folder titles
     */
    public static int google_folder_title=0x00000000;
    public static int hide_bottom_view_on_scroll_behavior=0x00000000;
    /**
     * Feedback shown after completing the home gesture step if the user is following the full gesture tutorial flow. [CHAR LIMIT=100]
     */
    public static int home_gesture_feedback_complete_with_follow_up=0x00000000;
    /**
     * Feedback shown after completing the home gesture step if the user started this tutorial individually. [CHAR LIMIT=100]
     */
    public static int home_gesture_feedback_complete_without_follow_up=0x00000000;
    /**
     * Feedback shown during interactive parts of Home gesture tutorial when the Overview gesture is detected. [CHAR LIMIT=100]
     */
    public static int home_gesture_feedback_overview_detected=0x00000000;
    public static int home_gesture_feedback_swipe_too_far_from_edge=0x00000000;
    /**
     * Feedback shown during interactive parts of Home gesture tutorial when the gesture is horizontal instead of vertical. [CHAR LIMIT=100]
     */
    public static int home_gesture_feedback_wrong_swipe_direction=0x00000000;
    /**
     * Introduction subtitle for the Home gesture tutorial. [CHAR LIMIT=100]
     */
    public static int home_gesture_intro_subtitle=0x00000000;
    /**
     * Introduction title for the Home gesture tutorial. [CHAR LIMIT=100]
     */
    public static int home_gesture_intro_title=0x00000000;
    /**
     * User visible name for the launcher/home screen. [CHAR_LIMIT=30]
     */
    public static int home_screen=0x00000000;
    /**
     * tip shown when hotseat edu is requested while predictions are disabled
     */
    public static int hotsaet_tip_prediction_disabled=0x00000000;
    /**
     * tip shown when user migrates and predictions are enabled in hotseat
     */
    public static int hotsaet_tip_prediction_enabled=0x00000000;
    /**
     * tip shown if user has no items in hotseat to migrate
     */
    public static int hotseat_auto_enrolled=0x00000000;
    /**
     * Button text to opt in for fully predicted hotseat
     */
    public static int hotseat_edu_accept=0x00000000;
    /**
     * Button text to dismiss opt in for fully predicted hotseat
     */
    public static int hotseat_edu_dismiss=0x00000000;
    public static int hotseat_edu_message_migrate=0x00000000;
    public static int hotseat_edu_message_migrate_alt=0x00000000;
    public static int hotseat_edu_message_migrate_landscape=0x00000000;
    /**
     * Hotseat educational strings for users who don't qualify for migration
     */
    public static int hotseat_edu_title_migrate=0x00000000;
    public static int hotseat_edu_title_migrate_landscape=0x00000000;
    /**
     * Error message when user has filled the hotseat
     */
    public static int hotseat_out_of_space=0x00000000;
    /**
     * content description for hotseat items
     */
    public static int hotseat_prediction_content_description=0x00000000;
    /**
     * action shown to toggle predictions after onboarding
     */
    public static int hotseat_prediction_settings=0x00000000;
    /**
     * tip shown if user declines migration and has some open spots for prediction
     */
    public static int hotseat_tip_gaps_filled=0x00000000;
    /**
     * tip shown if user declines migration and has no open spots for prediction
     */
    public static int hotseat_tip_no_empty_slots=0x00000000;
    public static int icon_content_description=0x00000000;
    /**
     * Label for install drop target. [CHAR_LIMIT=20]
     */
    public static int install_drop_target_label=0x00000000;
    public static int instant_app_resolver_class=0x00000000;
    /**
     * Accessibility confirmation for item added to workspace.
     */
    public static int item_added_to_workspace=0x00000000;
    /**
     * Accessibility confirmation for item move.
     */
    public static int item_moved=0x00000000;
    /**
     * Accessibility confirmation for item removed. [CHAR_LIMIT=50]
     */
    public static int item_removed=0x00000000;
    public static int item_view_role_description=0x00000000;
    /**
     * Label for an icon representing any generic app. [CHAR_LIMIT=50]
     */
    public static int label_application=0x00000000;
    public static int launcher_activity_logic_class=0x00000000;
    /**
     * Application name
     */
    public static int lineageos_app_name=0x00000000;
    public static int local_colors_extraction_class=0x00000000;
    /**
     * Accessibility spoken hint message in widget picker, which allows user to add a widget. Custom action is the label for additional accessibility actions available in this mode [CHAR_LIMIT=100]
     */
    public static int long_accessible_way_to_add=0x00000000;
    /**
     * Accessibility spoken hint message in deep shortcut menu, which allows user to add a shortcut. Custom action is the label for additional accessibility actions available in this mode [CHAR_LIMIT=200]
     */
    public static int long_accessible_way_to_add_shortcut=0x00000000;
    /**
     * Message to tell the user to press and hold on a shortcut to add it [CHAR_LIMIT=50]
     */
    public static int long_press_shortcut_to_add=0x00000000;
    /**
     * Message to tell the user to press and hold on a widget to add it [CHAR_LIMIT=50]
     */
    public static int long_press_widget_to_add=0x00000000;
    public static int main_process_initializer_class=0x00000000;
    /**
     * String representing the intent for search on the apps market. To specify a query, add
     * q=<query> to the data to the intent
     */
    public static int market_search_intent=0x00000000;
    public static int material_clock_display_divider=0x00000000;
    public static int material_clock_toggle_content_description=0x00000000;
    public static int material_hour_selection=0x00000000;
    public static int material_hour_suffix=0x00000000;
    public static int material_minute_selection=0x00000000;
    public static int material_minute_suffix=0x00000000;
    public static int material_motion_easing_accelerated=0x00000000;
    public static int material_motion_easing_decelerated=0x00000000;
    public static int material_motion_easing_emphasized=0x00000000;
    public static int material_motion_easing_linear=0x00000000;
    public static int material_motion_easing_standard=0x00000000;
    public static int material_slider_range_end=0x00000000;
    public static int material_slider_range_start=0x00000000;
    public static int material_timepicker_am=0x00000000;
    public static int material_timepicker_clock_mode_description=0x00000000;
    public static int material_timepicker_hour=0x00000000;
    public static int material_timepicker_minute=0x00000000;
    public static int material_timepicker_pm=0x00000000;
    public static int material_timepicker_select_time=0x00000000;
    public static int material_timepicker_text_input_mode_description=0x00000000;
    public static int model_delegate_class=0x00000000;
    /**
     * Accessibility description to move item to empty cell.
     */
    public static int move_to_empty_cell=0x00000000;
    /**
     * Accessibility description to move item to the hotseat.
     */
    public static int move_to_hotseat_position=0x00000000;
    /**
     * Accessibility description to move item inside a folder.
     */
    public static int move_to_position=0x00000000;
    /**
     * Message shown when a feature is disabled by the administrator
     */
    public static int msg_disabled_by_admin=0x00000000;
    /**
     * Settings message explaining when the -1 screen is available on an LTR device. [CHAR LIMIT=100]
     */
    public static int msg_minus_one_on_left=0x00000000;
    /**
     * Settings message explaining when the -1 screen is available on an RTL device. [CHAR LIMIT=100]
     */
    public static int msg_minus_one_on_right=0x00000000;
    /**
     * Message explaining to the user that the notification access is required by the app for showing 'Notification dots' [CHAR LIMIT=NONE]
     */
    public static int msg_missing_notification_access=0x00000000;
    /**
     * Toast shown on clicking a direct call shortcut. [CHAR_LIMIT=80]
     */
    public static int msg_no_phone_permission=0x00000000;
    public static int mtrl_badge_numberless_content_description=0x00000000;
    public static int mtrl_chip_close_icon_content_description=0x00000000;
    public static int mtrl_exceed_max_badge_number_content_description=0x00000000;
    public static int mtrl_exceed_max_badge_number_suffix=0x00000000;
    public static int mtrl_picker_a11y_next_month=0x00000000;
    public static int mtrl_picker_a11y_prev_month=0x00000000;
    public static int mtrl_picker_announce_current_selection=0x00000000;
    public static int mtrl_picker_cancel=0x00000000;
    public static int mtrl_picker_confirm=0x00000000;
    public static int mtrl_picker_date_header_selected=0x00000000;
    public static int mtrl_picker_date_header_title=0x00000000;
    public static int mtrl_picker_date_header_unselected=0x00000000;
    public static int mtrl_picker_day_of_week_column_header=0x00000000;
    public static int mtrl_picker_invalid_format=0x00000000;
    public static int mtrl_picker_invalid_format_example=0x00000000;
    public static int mtrl_picker_invalid_format_use=0x00000000;
    public static int mtrl_picker_invalid_range=0x00000000;
    public static int mtrl_picker_navigate_to_year_description=0x00000000;
    public static int mtrl_picker_out_of_range=0x00000000;
    public static int mtrl_picker_range_header_only_end_selected=0x00000000;
    public static int mtrl_picker_range_header_only_start_selected=0x00000000;
    public static int mtrl_picker_range_header_selected=0x00000000;
    public static int mtrl_picker_range_header_title=0x00000000;
    public static int mtrl_picker_range_header_unselected=0x00000000;
    public static int mtrl_picker_save=0x00000000;
    public static int mtrl_picker_text_input_date_hint=0x00000000;
    public static int mtrl_picker_text_input_date_range_end_hint=0x00000000;
    public static int mtrl_picker_text_input_date_range_start_hint=0x00000000;
    public static int mtrl_picker_text_input_day_abbr=0x00000000;
    public static int mtrl_picker_text_input_month_abbr=0x00000000;
    public static int mtrl_picker_text_input_year_abbr=0x00000000;
    public static int mtrl_picker_toggle_to_calendar_input_mode=0x00000000;
    public static int mtrl_picker_toggle_to_day_selection=0x00000000;
    public static int mtrl_picker_toggle_to_text_input_mode=0x00000000;
    public static int mtrl_picker_toggle_to_year_selection=0x00000000;
    /**
     * Text shown when there are no matching widget or shortcut search results for user's search
     * query. [CHAR_LIMIT=none]
     */
    public static int no_search_results=0x00000000;
    /**
     * Text shown when there are no widgets or shortcuts that can be added to the device.
     * [CHAR_LIMIT=none]
     */
    public static int no_widgets_available=0x00000000;
    public static int not_set=0x00000000;
    /**
     * Accessibility confirmation for notification being dismissed.
     */
    public static int notification_dismissed=0x00000000;
    /**
     * Text to indicate that the system notification dots setting is off [CHAR LIMIT=100]
     */
    public static int notification_dots_desc_off=0x00000000;
    /**
     * Text to indicate that the system notification dots setting is on [CHAR LIMIT=100]
     */
    public static int notification_dots_desc_on=0x00000000;
    /**
     * Summary for Notification dots setting. Tapping this will link enable/disable notification dots feature on the home screen. [CHAR LIMIT=50]
     */
    public static int notification_dots_service_title=0x00000000;
    /**
     * Title for Notification dots setting. Tapping this will link to the system Notifications settings screen where the user can turn off notification dots globally. [CHAR LIMIT=50]
     */
    public static int notification_dots_title=0x00000000;
    /**
     * Text to display as the header above notifications. [CHAR_LIMIT=30]
     */
    public static int notifications_header=0x00000000;
    /**
     * Error message when a user can't add more apps, widgets, or shortcuts to a Home screen.
     */
    public static int out_of_space=0x00000000;
    public static int overscroll_plugin_factory_class=0x00000000;
    /**
     * Feedback shown after completing the overview gesture step if the user is following the full gesture tutorial flow. [CHAR LIMIT=100]
     */
    public static int overview_gesture_feedback_complete_with_follow_up=0x00000000;
    /**
     * Feedback shown after completing the overview gesture step if the user started this tutorial individually. [CHAR LIMIT=100]
     */
    public static int overview_gesture_feedback_complete_without_follow_up=0x00000000;
    /**
     * Feedback shown during interactive parts of Overview gesture tutorial when the Home gesture is detected. The window refers to the current app's window during the gesture. [CHAR LIMIT=100]
     */
    public static int overview_gesture_feedback_home_detected=0x00000000;
    /**
     * Feedback shown during interactive parts of Overview gesture tutorial when the gesture is started too far from the edge. [CHAR LIMIT=100]
     */
    public static int overview_gesture_feedback_swipe_too_far_from_edge=0x00000000;
    /**
     * Feedback shown during interactive parts of Overview gesture tutorial when the gesture is horizontal instead of vertical. [CHAR LIMIT=100]
     */
    public static int overview_gesture_feedback_wrong_swipe_direction=0x00000000;
    /**
     * Introduction subtitle for the Overview gesture tutorial. [CHAR LIMIT=100]
     */
    public static int overview_gesture_intro_subtitle=0x00000000;
    /**
     * Introduction title for the Overview gesture tutorial. [CHAR LIMIT=100]
     */
    public static int overview_gesture_intro_title=0x00000000;
    /**
     * Label on an icon that references an uninstalled package, for which we have no information about when it might be installed. [CHAR_LIMIT=15]
     */
    public static int package_state_unknown=0x00000000;
    public static int password_toggle_content_description=0x00000000;
    public static int path_password_eye=0x00000000;
    public static int path_password_eye_mask_strike_through=0x00000000;
    public static int path_password_eye_mask_visible=0x00000000;
    public static int path_password_strike_through=0x00000000;
    /**
     * Permission description
     */
    public static int permdesc_install_shortcut=0x00000000;
    /**
     * Permission description
     */
    public static int permdesc_read_settings=0x00000000;
    /**
     * Permission description
     */
    public static int permdesc_write_settings=0x00000000;
    /**
     * Permission short label
     */
    public static int permlab_install_shortcut=0x00000000;
    /**
     * Permission short label
     */
    public static int permlab_read_settings=0x00000000;
    /**
     * Permission short label
     */
    public static int permlab_write_settings=0x00000000;
    /**
     * Label for pinning predicted app.
     */
    public static int pin_prediction=0x00000000;
    /**
     * View tag key used to determine if we should fade in the child views..
     */
    public static int popup_container_iterate_children=0x00000000;
    public static int pref_show_google_now_summary=0x00000000;
    public static int preference_copied=0x00000000;
    /**
     * Title for an option to enter freeform mode for a given app
     */
    public static int recent_task_option_freeform=0x00000000;
    /**
     * Title for an option to keep an app pinned to the screen until it is unpinned
     */
    public static int recent_task_option_pin=0x00000000;
    /**
     * Title for an option to enter split screen mode for a given app
     */
    public static int recent_task_option_split_screen=0x00000000;
    /**
     * Recents: Title of a button that clears the task list, i.e. closes all tasks. [CHAR LIMIT=30]
     */
    public static int recents_clear_all=0x00000000;
    /**
     * Recents: The empty recents string. [CHAR LIMIT=NONE]
     */
    public static int recents_empty_message=0x00000000;
    /**
     * Text on an educational tip on widget informing users that they can change widget settings.
     * [CHAR_LIMIT=NONE]
     */
    public static int reconfigurable_widget_education_tip=0x00000000;
    /**
     * Failed action error message: e.g. Failed: Pause
     */
    public static int remote_action_failed=0x00000000;
    /**
     * Label for remove drop target (from the homescreen only).
     * May appear next to uninstall_drop_target_label [CHAR_LIMIT=20]
     */
    public static int remove_drop_target_label=0x00000000;
    /**
     * SafeMode shortcut error string
     */
    public static int safemode_shortcut_error=0x00000000;
    /**
     * SafeMode widget error string
     */
    public static int safemode_widget_error=0x00000000;
    /**
     * Feedback shown in sandbox mode when the assistant gesture is a successfully issued. [CHAR LIMIT=60]
     */
    public static int sandbox_mode_assistant_gesture_feedback_successful=0x00000000;
    /**
     * Feedback shown in sandbox mode when the back gesture is successfully issued. [CHAR LIMIT=60]
     */
    public static int sandbox_mode_back_gesture_feedback_successful=0x00000000;
    /**
     * Feedback shown in sandbox mode when the back gesture swipe is too far from the edge. [CHAR LIMIT=60]
     */
    public static int sandbox_mode_back_gesture_feedback_swipe_too_far_from_edge=0x00000000;
    /**
     * Feedback shown in sandbox mode when the home gesture is a successfully issued. [CHAR LIMIT=60]
     */
    public static int sandbox_mode_home_gesture_feedback_successful=0x00000000;
    /**
     * Feedback shown in sandbox mode when the overview gesture is a successfully issued. [CHAR LIMIT=60]
     */
    public static int sandbox_mode_overview_gesture_feedback_successful=0x00000000;
    /**
     * Subtitle shown in sandbox mode part of gesture tutorial. [CHAR LIMIT=60]
     */
    public static int sandbox_mode_subtitle=0x00000000;
    /**
     * Title shown in sandbox mode part of gesture tutorial. [CHAR LIMIT=30]
     */
    public static int sandbox_mode_title=0x00000000;
    public static int search_menu_title=0x00000000;
    /**
     * Text for settings button [CHAR LIMIT=20]
     */
    public static int settings_button_text=0x00000000;
    public static int settings_edit_widgets_error=0x00000000;
    /**
     * String representing the fragment class for settings activity.
     */
    public static int settings_fragment_name=0x00000000;
    public static int settings_lock_layout_summary_off=0x00000000;
    public static int settings_lock_layout_summary_on=0x00000000;
    /**
     * Edit workspace
     */
    public static int settings_lock_layout_title=0x00000000;
    /**
     * Message shown when a shortcut is not available. It could have been temporarily disabled and may start working again after some time.
     */
    public static int shortcut_not_available=0x00000000;
    /**
     * Label for showing the number of shortcut an app has in the full widgets picker.
     * [CHAR_LIMIT=25][ICU SYNTAX]
     */
    public static int shortcuts_count=0x00000000;
    /**
     * Accessibility description when the context menu of a launcher icon that has notifications as well as shortcuts (providing quick access to app's actions). The "shortcuts" translation should be consistent with the one for action_deep_shortcut. [CHAR_LIMIT=50]
     */
    public static int shortcuts_menu_with_notifications_description=0x00000000;
    /**
     * Text to show total app usage per day if it is less than 1 minute ("&lt;" is the
     * escaped form of '<'). [CHAR LIMIT=15]
     */
    public static int shorter_duration_less_than_one_minute=0x00000000;
    /**
     * Subtitle for the dialog that allows the user to skip the gesture navigation tutorial. This directs the user to where they can find the gesture tutorial again. [CHAR_LIMIT=100]
     */
    public static int skip_tutorial_dialog_subtitle=0x00000000;
    /**
     * Title for the dialog that allows the user to skip the gesture navigation tutorial. [CHAR_LIMIT=40]
     */
    public static int skip_tutorial_dialog_title=0x00000000;
    public static int split_app_info_accessibility=0x00000000;
    public static int split_screen_position_left=0x00000000;
    public static int split_screen_position_right=0x00000000;
    public static int split_screen_position_top=0x00000000;
    public static int stats_log_manager_class=0x00000000;
    public static int status_bar_notification_info_overflow=0x00000000;
    /**
     * Text for wallpaper change button [CHAR LIMIT=30]
     */
    public static int styles_wallpaper_button_text=0x00000000;
    public static int summary_collapsed_preference_list=0x00000000;
    /**
     * Accessibility title for an app card in Recents for apps that have time limit set
     * [CHAR_LIMIT=none]
     */
    public static int task_contents_description_with_remaining_time=0x00000000;
    public static int task_overlay_factory_class=0x00000000;
    /**
     * Accessibility confirmation for task closed
     */
    public static int task_view_closed=0x00000000;
    /**
     * Text on button to exit a tutorial [CHAR_LIMIT=16]
     */
    public static int taskbar_edu_close=0x00000000;
    /**
     * Accessibility text spoken when the taskbar education panel disappears [CHAR_LIMIT=NONE]
     */
    public static int taskbar_edu_closed=0x00000000;
    /**
     * Text on button to finish a tutorial [CHAR_LIMIT=16]
     */
    public static int taskbar_edu_done=0x00000000;
    /**
     * Text on button to go to the next screen of a tutorial [CHAR_LIMIT=16]
     */
    public static int taskbar_edu_next=0x00000000;
    /**
     * Accessibility text spoken when the taskbar education panel appears [CHAR_LIMIT=NONE]
     */
    public static int taskbar_edu_opened=0x00000000;
    /**
     * Text on button to go to the previous screen of a tutorial [CHAR_LIMIT=16]
     */
    public static int taskbar_edu_previous=0x00000000;
    /**
     * Text in dialog that lets a user know how they can use the taskbar to use multiple apps at once on their device.
     * [CHAR_LIMIT=60]
     */
    public static int taskbar_edu_splitscreen=0x00000000;
    /**
     * Text in dialog that lets a user know how they can hide the taskbar on their device.
     * [CHAR_LIMIT=60]
     */
    public static int taskbar_edu_stashing=0x00000000;
    /**
     * Text in dialog that lets a user know how they can use the taskbar to switch apps on their device.
     * [CHAR_LIMIT=60]
     */
    public static int taskbar_edu_switch_apps=0x00000000;
    public static int test_information_handler_class=0x00000000;
    /**
     * Annotation shown on an app card in Recents, telling that the app has a usage limit set by
     * the user, and a given time is left for it today [CHAR LIMIT=22]
     */
    public static int time_left_for_app=0x00000000;
    /**
     * Accessibility title for the row of all-apps containing app predictions. [CHAR LIMIT=50]
     */
    public static int title_app_suggestions=0x00000000;
    /**
     * Button text in the confirmation dialog which would take the user to the system settings [CHAR LIMIT=50]
     */
    public static int title_change_settings=0x00000000;
    /**
     * Title for the dialog shown when the app does not has notification access, explaining the requirement for notification access [CHAR LIMIT=50]
     */
    public static int title_missing_notification_access=0x00000000;
    /**
     * Settings title to show Google Now at -1 screen on launcher. [CHAR LIMIT=50]
     */
    public static int title_show_google_app=0x00000000;
    /**
     * Label for toast when app selected for split isn't supported. [CHAR_LIMIT=50]
     */
    public static int toast_split_app_unsupported=0x00000000;
    /**
     * Label for toast with instructions for split screen selection mode. [CHAR_LIMIT=50]
     */
    public static int toast_split_select_app=0x00000000;
    public static int trust_apps_auth_manager=0x00000000;
    public static int trust_apps_auth_open_app=0x00000000;
    public static int trust_apps_help=0x00000000;
    public static int trust_apps_info_hidden=0x00000000;
    public static int trust_apps_info_protected=0x00000000;
    public static int trust_apps_loading=0x00000000;
    /**
     * Trust apps
     */
    public static int trust_apps_manager_name=0x00000000;
    public static int trust_apps_no_lock_error=0x00000000;
    /**
     * Action shown in snackbar to undo item removal. [CHAR_LIMIT=20]
     */
    public static int undo=0x00000000;
    /**
     * Label for uninstall drop target (from the device).
     * May appear next to remove_drop_target_label [CHAR_LIMIT=20]
     */
    public static int uninstall_drop_target_label=0x00000000;
    /**
     * Text to inform the user that they can't uninstall a system application
     */
    public static int uninstall_system_app_text=0x00000000;
    public static int v7_preference_off=0x00000000;
    public static int v7_preference_on=0x00000000;
    /**
     * Text for wallpaper change button [CHAR LIMIT=30]
     */
    public static int wallpaper_button_text=0x00000000;
    /**
     * Default packages
     */
    public static int wallpaper_picker_package=0x00000000;
    public static int wellbeing_provider_pkg=0x00000000;
    /**
     * Accessibility spoken message format for the dimensions of a widget in the drawer
     */
    public static int widget_accessible_dims_format=0x00000000;
    /**
     * Text for both the tile of a popup view, which shows all available widgets installed on
     * the device, and the text of a button, which opens this popup view. [CHAR LIMIT=30]
     */
    public static int widget_button_text=0x00000000;
    /**
     * A widget category label for grouping widgets related to conversations. [CHAR_LIMIT=30]
     */
    public static int widget_category_conversations=0x00000000;
    /**
     * There is a special version of this format string for Farsi
     */
    public static int widget_dims_format=0x00000000;
    /**
     * Text on the button that closes the education dialog about widgets. [CHAR_LIMIT=50]
     */
    public static int widget_education_close_button=0x00000000;
    /**
     * Dialog text. This dialog lets a user know how they can use widgets on their phone.
     * [CHAR_LIMIT=NONE]
     */
    public static int widget_education_content=0x00000000;
    /**
     * Title of a dialog. This dialog lets a user know how they can use widgets on their phone.
     * [CHAR_LIMIT=NONE]
     */
    public static int widget_education_header=0x00000000;
    /**
     * Spoken text for a screen reader. The placeholder text is the widget name.
     * [CHAR_LIMIT=none]
     */
    public static int widget_preview_context_description=0x00000000;
    /**
     * Spoken text for screen readers. This text is for an icon that lets the user change a
     * widget's settings. [CHAR_LIMIT=50]
     */
    public static int widget_reconfigure_button_content_description=0x00000000;
    /**
     * Accessibility confirmation for widget resize.
     */
    public static int widget_resized=0x00000000;
    /**
     * Label for showing both the number of widgets and shortcuts an app has in the full widgets
     * picker. [CHAR_LIMIT=50]
     */
    public static int widgets_and_shortcuts_count=0x00000000;
    /**
     * Label for showing the number of widgets an app has in the full widgets picker.
     * [CHAR_LIMIT=25][ICU SYNTAX]
     */
    public static int widgets_count=0x00000000;
    /**
     * Spoken text for screen readers. This text lets a user know that the button is used to clear
     * the text that the user entered in the search box. [CHAR_LIMIT=none]
     */
    public static int widgets_full_sheet_cancel_button_description=0x00000000;
    /**
     * Tab label. A user can tap this tab to access their personal widgets. [CHAR_LIMIT=25]
     */
    public static int widgets_full_sheet_personal_tab=0x00000000;
    /**
     * Search bar text shown in the popup view showing all available widgets installed on the
     * device. [CHAR_LIMIT=50]
     */
    public static int widgets_full_sheet_search_bar_hint=0x00000000;
    /**
     * Tab label. A user can tap this tab to access their work widgets. [CHAR_LIMIT=25]
     */
    public static int widgets_full_sheet_work_tab=0x00000000;
    /**
     * Accessibility title for the popup containing a list of widgets. [CHAR_LIMIT=50]
     */
    public static int widgets_list=0x00000000;
    /**
     * Text announced by accessibility when the popup containing the list of widgets is closed. [CHAR_LIMIT=100]
     */
    public static int widgets_list_closed=0x00000000;
    /**
     * button string shown enable work profile
     */
    public static int work_apps_enable_btn_text=0x00000000;
    /**
     * button string shown pause work profile
     */
    public static int work_apps_pause_btn_text=0x00000000;
    /**
     * - body shown when user opens work apps tab while work apps are paused
     */
    public static int work_apps_paused_body=0x00000000;
    /**
     * content description for paused work apps list
     */
    public static int work_apps_paused_content_description=0x00000000;
    /**
     * button string shown to dismiss work tab education
     */
    public static int work_apps_paused_edu_accept=0x00000000;
    /**
     * string shown in educational banner about work profile
     */
    public static int work_apps_paused_edu_banner=0x00000000;
    /**
     * - heading shown when user opens work apps tab while work apps are paused
     */
    public static int work_apps_paused_title=0x00000000;
    /**
     * Work folder name
     */
    public static int work_folder_name=0x00000000;
    /**
     * Action label to finish work profile edu
     */
    public static int work_profile_edu_accept=0x00000000;
    /**
     * - User onboarding title for work profile apps
     */
    public static int work_profile_edu_work_apps=0x00000000;
    /**
     * This string is in the work profile tab when a user has All Apps open on their phone. This is a label for a toggle to turn the work profile on and off. "Work profile" means a separate profile on a user's phone that's specifically for their work apps and managed by their company. "Work" is used as an adjective.
     */
    public static int work_profile_toggle_label=0x00000000;
    /**
     * Description for a new page on homescreen[CHAR_LIMIT=none]
     */
    public static int workspace_new_page=0x00000000;
    /**
     * The format string for Workspace page scroll text [CHAR_LIMIT=none]
     */
    public static int workspace_scroll_format=0x00000000;
  }
  public static final class style {
    public static int AddItemActivityTheme=0x00000000;
    public static int AlertDialog_AppCompat=0x00000000;
    public static int AlertDialog_AppCompat_Light=0x00000000;
    public static int AllAppsEmptySearchBackground=0x00000000;
    public static int AllAppsEmptySearchBackground_Dark=0x00000000;
    public static int AllAppsTheme=0x00000000;
    public static int AllAppsTheme_Dark=0x00000000;
    public static int AllSetTheme=0x00000000;
    public static int AndroidThemeColorAccentYellow=0x00000000;
    public static int Animation_AppCompat_Dialog=0x00000000;
    public static int Animation_AppCompat_DropDownUp=0x00000000;
    public static int Animation_AppCompat_Tooltip=0x00000000;
    public static int Animation_Design_BottomSheetDialog=0x00000000;
    public static int Animation_MaterialComponents_BottomSheetDialog=0x00000000;
    /**
     * A derivative project can extend these themes to customize the application theme without
     * affecting the base theme
     */
    public static int AppTheme=0x00000000;
    public static int AppTheme_Dark=0x00000000;
    public static int AppTheme_Dark_DarkMainColor=0x00000000;
    public static int AppTheme_Dark_DarkText=0x00000000;
    public static int AppTheme_DarkMainColor=0x00000000;
    public static int AppTheme_DarkText=0x00000000;
    public static int Base_AlertDialog_AppCompat=0x00000000;
    public static int Base_AlertDialog_AppCompat_Light=0x00000000;
    public static int Base_Animation_AppCompat_Dialog=0x00000000;
    public static int Base_Animation_AppCompat_DropDownUp=0x00000000;
    public static int Base_Animation_AppCompat_Tooltip=0x00000000;
    public static int Base_CardView=0x00000000;
    public static int Base_DialogWindowTitle_AppCompat=0x00000000;
    public static int Base_DialogWindowTitleBackground_AppCompat=0x00000000;
    public static int Base_MaterialAlertDialog_MaterialComponents_Title_Icon=0x00000000;
    public static int Base_MaterialAlertDialog_MaterialComponents_Title_Panel=0x00000000;
    public static int Base_MaterialAlertDialog_MaterialComponents_Title_Text=0x00000000;
    public static int Base_TextAppearance_AppCompat=0x00000000;
    public static int Base_TextAppearance_AppCompat_Body1=0x00000000;
    public static int Base_TextAppearance_AppCompat_Body2=0x00000000;
    public static int Base_TextAppearance_AppCompat_Button=0x00000000;
    public static int Base_TextAppearance_AppCompat_Caption=0x00000000;
    public static int Base_TextAppearance_AppCompat_Display1=0x00000000;
    public static int Base_TextAppearance_AppCompat_Display2=0x00000000;
    public static int Base_TextAppearance_AppCompat_Display3=0x00000000;
    public static int Base_TextAppearance_AppCompat_Display4=0x00000000;
    public static int Base_TextAppearance_AppCompat_Headline=0x00000000;
    public static int Base_TextAppearance_AppCompat_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Large=0x00000000;
    public static int Base_TextAppearance_AppCompat_Large_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x00000000;
    public static int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x00000000;
    public static int Base_TextAppearance_AppCompat_Medium=0x00000000;
    public static int Base_TextAppearance_AppCompat_Medium_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Menu=0x00000000;
    public static int Base_TextAppearance_AppCompat_SearchResult=0x00000000;
    public static int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x00000000;
    public static int Base_TextAppearance_AppCompat_SearchResult_Title=0x00000000;
    public static int Base_TextAppearance_AppCompat_Small=0x00000000;
    public static int Base_TextAppearance_AppCompat_Small_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Subhead=0x00000000;
    public static int Base_TextAppearance_AppCompat_Subhead_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Title=0x00000000;
    public static int Base_TextAppearance_AppCompat_Title_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Tooltip=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_Button=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_Switch=0x00000000;
    public static int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x00000000;
    public static int Base_TextAppearance_MaterialComponents_Badge=0x00000000;
    public static int Base_TextAppearance_MaterialComponents_Button=0x00000000;
    public static int Base_TextAppearance_MaterialComponents_Headline6=0x00000000;
    public static int Base_TextAppearance_MaterialComponents_Subtitle2=0x00000000;
    public static int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x00000000;
    public static int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x00000000;
    public static int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x00000000;
    public static int Base_Theme_AppCompat=0x00000000;
    public static int Base_Theme_AppCompat_CompactMenu=0x00000000;
    public static int Base_Theme_AppCompat_Dialog=0x00000000;
    public static int Base_Theme_AppCompat_Dialog_Alert=0x00000000;
    public static int Base_Theme_AppCompat_Dialog_FixedSize=0x00000000;
    public static int Base_Theme_AppCompat_Dialog_MinWidth=0x00000000;
    public static int Base_Theme_AppCompat_DialogWhenLarge=0x00000000;
    public static int Base_Theme_AppCompat_Light=0x00000000;
    public static int Base_Theme_AppCompat_Light_DarkActionBar=0x00000000;
    public static int Base_Theme_AppCompat_Light_Dialog=0x00000000;
    public static int Base_Theme_AppCompat_Light_Dialog_Alert=0x00000000;
    public static int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x00000000;
    public static int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x00000000;
    public static int Base_Theme_AppCompat_Light_DialogWhenLarge=0x00000000;
    public static int Base_Theme_MaterialComponents=0x00000000;
    public static int Base_Theme_MaterialComponents_Bridge=0x00000000;
    public static int Base_Theme_MaterialComponents_CompactMenu=0x00000000;
    public static int Base_Theme_MaterialComponents_Dialog=0x00000000;
    public static int Base_Theme_MaterialComponents_Dialog_Alert=0x00000000;
    public static int Base_Theme_MaterialComponents_Dialog_Bridge=0x00000000;
    public static int Base_Theme_MaterialComponents_Dialog_FixedSize=0x00000000;
    public static int Base_Theme_MaterialComponents_Dialog_MinWidth=0x00000000;
    public static int Base_Theme_MaterialComponents_DialogWhenLarge=0x00000000;
    public static int Base_Theme_MaterialComponents_Light=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_Bridge=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_DarkActionBar=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_Dialog=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_Dialog_Alert=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_Dialog_Bridge=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_Dialog_FixedSize=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_Dialog_MinWidth=0x00000000;
    public static int Base_Theme_MaterialComponents_Light_DialogWhenLarge=0x00000000;
    public static int Base_ThemeOverlay_AppCompat=0x00000000;
    public static int Base_ThemeOverlay_AppCompat_ActionBar=0x00000000;
    public static int Base_ThemeOverlay_AppCompat_Dark=0x00000000;
    public static int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x00000000;
    public static int Base_ThemeOverlay_AppCompat_Dialog=0x00000000;
    public static int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x00000000;
    public static int Base_ThemeOverlay_AppCompat_Light=0x00000000;
    public static int Base_ThemeOverlay_MaterialComponents_Dialog=0x00000000;
    public static int Base_ThemeOverlay_MaterialComponents_Dialog_Alert=0x00000000;
    public static int Base_ThemeOverlay_MaterialComponents_Dialog_Alert_Framework=0x00000000;
    public static int Base_ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework=0x00000000;
    public static int Base_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x00000000;
    public static int Base_V14_Theme_MaterialComponents=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Bridge=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Dialog=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Dialog_Bridge=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Light=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Light_Bridge=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Light_Dialog=0x00000000;
    public static int Base_V14_Theme_MaterialComponents_Light_Dialog_Bridge=0x00000000;
    public static int Base_V14_ThemeOverlay_MaterialComponents_BottomSheetDialog=0x00000000;
    public static int Base_V14_ThemeOverlay_MaterialComponents_Dialog=0x00000000;
    public static int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert=0x00000000;
    public static int Base_V14_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x00000000;
    public static int Base_V21_Theme_AppCompat=0x00000000;
    public static int Base_V21_Theme_AppCompat_Dialog=0x00000000;
    public static int Base_V21_Theme_AppCompat_Light=0x00000000;
    public static int Base_V21_Theme_AppCompat_Light_Dialog=0x00000000;
    public static int Base_V21_Theme_MaterialComponents=0x00000000;
    public static int Base_V21_Theme_MaterialComponents_Dialog=0x00000000;
    public static int Base_V21_Theme_MaterialComponents_Light=0x00000000;
    public static int Base_V21_Theme_MaterialComponents_Light_Dialog=0x00000000;
    public static int Base_V21_ThemeOverlay_AppCompat_Dialog=0x00000000;
    public static int Base_V21_ThemeOverlay_MaterialComponents_BottomSheetDialog=0x00000000;
    public static int Base_V22_Theme_AppCompat=0x00000000;
    public static int Base_V22_Theme_AppCompat_Light=0x00000000;
    public static int Base_V23_Theme_AppCompat=0x00000000;
    public static int Base_V23_Theme_AppCompat_Light=0x00000000;
    public static int Base_V26_Theme_AppCompat=0x00000000;
    public static int Base_V26_Theme_AppCompat_Light=0x00000000;
    public static int Base_V26_Widget_AppCompat_Toolbar=0x00000000;
    public static int Base_V28_Theme_AppCompat=0x00000000;
    public static int Base_V28_Theme_AppCompat_Light=0x00000000;
    public static int Base_V7_Theme_AppCompat=0x00000000;
    public static int Base_V7_Theme_AppCompat_Dialog=0x00000000;
    public static int Base_V7_Theme_AppCompat_Light=0x00000000;
    public static int Base_V7_Theme_AppCompat_Light_Dialog=0x00000000;
    public static int Base_V7_ThemeOverlay_AppCompat_Dialog=0x00000000;
    public static int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x00000000;
    public static int Base_V7_Widget_AppCompat_EditText=0x00000000;
    public static int Base_V7_Widget_AppCompat_Toolbar=0x00000000;
    public static int Base_Widget_AppCompat_ActionBar=0x00000000;
    public static int Base_Widget_AppCompat_ActionBar_Solid=0x00000000;
    public static int Base_Widget_AppCompat_ActionBar_TabBar=0x00000000;
    public static int Base_Widget_AppCompat_ActionBar_TabText=0x00000000;
    public static int Base_Widget_AppCompat_ActionBar_TabView=0x00000000;
    public static int Base_Widget_AppCompat_ActionButton=0x00000000;
    public static int Base_Widget_AppCompat_ActionButton_CloseMode=0x00000000;
    public static int Base_Widget_AppCompat_ActionButton_Overflow=0x00000000;
    public static int Base_Widget_AppCompat_ActionMode=0x00000000;
    public static int Base_Widget_AppCompat_ActivityChooserView=0x00000000;
    public static int Base_Widget_AppCompat_AutoCompleteTextView=0x00000000;
    public static int Base_Widget_AppCompat_Button=0x00000000;
    public static int Base_Widget_AppCompat_Button_Borderless=0x00000000;
    public static int Base_Widget_AppCompat_Button_Borderless_Colored=0x00000000;
    public static int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x00000000;
    public static int Base_Widget_AppCompat_Button_Colored=0x00000000;
    public static int Base_Widget_AppCompat_Button_Small=0x00000000;
    public static int Base_Widget_AppCompat_ButtonBar=0x00000000;
    public static int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x00000000;
    public static int Base_Widget_AppCompat_CompoundButton_CheckBox=0x00000000;
    public static int Base_Widget_AppCompat_CompoundButton_RadioButton=0x00000000;
    public static int Base_Widget_AppCompat_CompoundButton_Switch=0x00000000;
    public static int Base_Widget_AppCompat_DrawerArrowToggle=0x00000000;
    public static int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x00000000;
    public static int Base_Widget_AppCompat_DropDownItem_Spinner=0x00000000;
    public static int Base_Widget_AppCompat_EditText=0x00000000;
    public static int Base_Widget_AppCompat_ImageButton=0x00000000;
    public static int Base_Widget_AppCompat_Light_ActionBar=0x00000000;
    public static int Base_Widget_AppCompat_Light_ActionBar_Solid=0x00000000;
    public static int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x00000000;
    public static int Base_Widget_AppCompat_Light_ActionBar_TabText=0x00000000;
    public static int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x00000000;
    public static int Base_Widget_AppCompat_Light_ActionBar_TabView=0x00000000;
    public static int Base_Widget_AppCompat_Light_PopupMenu=0x00000000;
    public static int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x00000000;
    public static int Base_Widget_AppCompat_ListMenuView=0x00000000;
    public static int Base_Widget_AppCompat_ListPopupWindow=0x00000000;
    public static int Base_Widget_AppCompat_ListView=0x00000000;
    public static int Base_Widget_AppCompat_ListView_DropDown=0x00000000;
    public static int Base_Widget_AppCompat_ListView_Menu=0x00000000;
    public static int Base_Widget_AppCompat_PopupMenu=0x00000000;
    public static int Base_Widget_AppCompat_PopupMenu_Overflow=0x00000000;
    public static int Base_Widget_AppCompat_PopupWindow=0x00000000;
    public static int Base_Widget_AppCompat_ProgressBar=0x00000000;
    public static int Base_Widget_AppCompat_ProgressBar_Horizontal=0x00000000;
    public static int Base_Widget_AppCompat_RatingBar=0x00000000;
    public static int Base_Widget_AppCompat_RatingBar_Indicator=0x00000000;
    public static int Base_Widget_AppCompat_RatingBar_Small=0x00000000;
    public static int Base_Widget_AppCompat_SearchView=0x00000000;
    public static int Base_Widget_AppCompat_SearchView_ActionBar=0x00000000;
    public static int Base_Widget_AppCompat_SeekBar=0x00000000;
    public static int Base_Widget_AppCompat_SeekBar_Discrete=0x00000000;
    public static int Base_Widget_AppCompat_Spinner=0x00000000;
    public static int Base_Widget_AppCompat_Spinner_Underlined=0x00000000;
    public static int Base_Widget_AppCompat_TextView=0x00000000;
    public static int Base_Widget_AppCompat_TextView_SpinnerItem=0x00000000;
    public static int Base_Widget_AppCompat_Toolbar=0x00000000;
    public static int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x00000000;
    public static int Base_Widget_Design_TabLayout=0x00000000;
    public static int Base_Widget_MaterialComponents_AutoCompleteTextView=0x00000000;
    public static int Base_Widget_MaterialComponents_CheckedTextView=0x00000000;
    public static int Base_Widget_MaterialComponents_Chip=0x00000000;
    public static int Base_Widget_MaterialComponents_MaterialCalendar_NavigationButton=0x00000000;
    public static int Base_Widget_MaterialComponents_PopupMenu=0x00000000;
    public static int Base_Widget_MaterialComponents_PopupMenu_ContextMenu=0x00000000;
    public static int Base_Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x00000000;
    public static int Base_Widget_MaterialComponents_PopupMenu_Overflow=0x00000000;
    public static int Base_Widget_MaterialComponents_Slider=0x00000000;
    public static int Base_Widget_MaterialComponents_Snackbar=0x00000000;
    public static int Base_Widget_MaterialComponents_TextInputEditText=0x00000000;
    public static int Base_Widget_MaterialComponents_TextInputLayout=0x00000000;
    public static int Base_Widget_MaterialComponents_TextView=0x00000000;
    /**
     * Base theme for BubbleTextView and sub classes
     */
    public static int BaseIcon=0x00000000;
    /**
     * Base theme for AllApps BubbleTextViews
     */
    public static int BaseIcon_AllApps=0x00000000;
    /**
     * Intentionally empty so we can override
     */
    public static int BaseIcon_Workspace=0x00000000;
    /**
     * Icon displayed on the workspace
     */
    public static int BaseIcon_Workspace_Shadows=0x00000000;
    /**
     * Icon displayed on the taskbar
     */
    public static int BaseIcon_Workspace_Taskbar=0x00000000;
    public static int BaseIconRoot=0x00000000;
    public static int BaseIconUnBounded=0x00000000;
    /**
     * Launcher theme
     * Launcher theme
     * Launcher theme
     */
    public static int BaseLauncherTheme=0x00000000;
    public static int BasePreferenceThemeOverlay=0x00000000;
    public static int Button_BottomRounded_Colored=0x00000000;
    public static int Button_FullRounded_Colored=0x00000000;
    public static int Button_Rounded_Colored=0x00000000;
    public static int Button_TopRounded_Bordered=0x00000000;
    public static int CardView=0x00000000;
    public static int CardView_Dark=0x00000000;
    public static int CardView_Light=0x00000000;
    public static int DialogTheme=0x00000000;
    public static int DropTargetButton=0x00000000;
    /**
     * Drop targets
     */
    public static int DropTargetButtonBase=0x00000000;
    public static int EmptyTheme=0x00000000;
    public static int FastScrollerPopup=0x00000000;
    /**
     * Theme overrides to element on homescreen, i.e., which are drawn on top on wallpaper.
     * Various foreground colors are overridden to be workspaceTextColor so that they are properly
     * visible on various wallpapers.
     */
    public static int HomeScreenElementTheme=0x00000000;
    public static int HomeSettings_CategoryStyle=0x00000000;
    public static int HomeSettings_CategoryTitle=0x00000000;
    public static int HomeSettings_CollapsedToolbarTitle=0x00000000;
    public static int HomeSettings_CollapsingToolbar=0x00000000;
    public static int HomeSettings_ExpandedToolbarTitle=0x00000000;
    public static int HomeSettings_FragmentCompatStyle=0x00000000;
    public static int HomeSettings_PreferenceScreenStyle=0x00000000;
    public static int HomeSettings_PreferenceStyle=0x00000000;
    public static int HomeSettings_PreferenceTheme=0x00000000;
    public static int HomeSettings_PreferenceTitle=0x00000000;
    public static int HomeSettings_SwitchPreferenceStyle=0x00000000;
    public static int HomeSettings_SwitchStyle=0x00000000;
    public static int HomeSettings_Theme=0x00000000;
    public static int LauncherTheme=0x00000000;
    public static int LauncherTheme_Dark=0x00000000;
    public static int LauncherTheme_Dark_DarkMainColor=0x00000000;
    public static int LauncherTheme_Dark_DarkText=0x00000000;
    public static int LauncherTheme_DarkMainColor=0x00000000;
    public static int LauncherTheme_DarkText=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Body_Text=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Picker_Date_Calendar=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Picker_Date_Spinner=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Title_Icon=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Title_Icon_CenterStacked=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Title_Panel=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Title_Panel_CenterStacked=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Title_Text=0x00000000;
    public static int MaterialAlertDialog_MaterialComponents_Title_Text_CenterStacked=0x00000000;
    public static int OverviewActionButton=0x00000000;
    public static int OverviewClearAllButton=0x00000000;
    public static int Platform_AppCompat=0x00000000;
    public static int Platform_AppCompat_Light=0x00000000;
    public static int Platform_MaterialComponents=0x00000000;
    public static int Platform_MaterialComponents_Dialog=0x00000000;
    public static int Platform_MaterialComponents_Light=0x00000000;
    public static int Platform_MaterialComponents_Light_Dialog=0x00000000;
    public static int Platform_ThemeOverlay_AppCompat=0x00000000;
    public static int Platform_ThemeOverlay_AppCompat_Dark=0x00000000;
    public static int Platform_ThemeOverlay_AppCompat_Light=0x00000000;
    public static int Platform_V21_AppCompat=0x00000000;
    public static int Platform_V21_AppCompat_Light=0x00000000;
    public static int Platform_V25_AppCompat=0x00000000;
    public static int Platform_V25_AppCompat_Light=0x00000000;
    public static int Platform_Widget_AppCompat_Spinner=0x00000000;
    /**
     * Theme for the popup container
     */
    public static int PopupItem=0x00000000;
    public static int Preference=0x00000000;
    public static int Preference_Category=0x00000000;
    public static int Preference_Category_Material=0x00000000;
    public static int Preference_CheckBoxPreference=0x00000000;
    public static int Preference_CheckBoxPreference_Material=0x00000000;
    public static int Preference_DialogPreference=0x00000000;
    public static int Preference_DialogPreference_EditTextPreference=0x00000000;
    public static int Preference_DialogPreference_EditTextPreference_Material=0x00000000;
    public static int Preference_DialogPreference_Material=0x00000000;
    public static int Preference_DropDown=0x00000000;
    public static int Preference_DropDown_Material=0x00000000;
    public static int Preference_Information=0x00000000;
    public static int Preference_Information_Material=0x00000000;
    public static int Preference_Material=0x00000000;
    public static int Preference_PreferenceScreen=0x00000000;
    public static int Preference_PreferenceScreen_Material=0x00000000;
    public static int Preference_SeekBarPreference=0x00000000;
    public static int Preference_SeekBarPreference_Material=0x00000000;
    public static int Preference_SwitchPreference=0x00000000;
    public static int Preference_SwitchPreference_Material=0x00000000;
    public static int Preference_SwitchPreferenceCompat=0x00000000;
    public static int Preference_SwitchPreferenceCompat_Material=0x00000000;
    public static int PreferenceCategoryTitleTextStyle=0x00000000;
    public static int PreferenceFragment=0x00000000;
    public static int PreferenceFragment_Material=0x00000000;
    public static int PreferenceFragmentList=0x00000000;
    public static int PreferenceFragmentList_Material=0x00000000;
    public static int PreferenceSummaryTextStyle=0x00000000;
    public static int PreferenceThemeOverlay=0x00000000;
    public static int PreferenceThemeOverlay_v14=0x00000000;
    public static int PreferenceThemeOverlay_v14_Material=0x00000000;
    public static int PrimaryHeadline=0x00000000;
    public static int RtlOverlay_DialogWindowTitle_AppCompat=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_Search_DropDown=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x00000000;
    public static int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x00000000;
    public static int RtlUnderlay_Widget_AppCompat_ActionButton=0x00000000;
    public static int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x00000000;
    public static int ShapeAppearance_MaterialComponents=0x00000000;
    public static int ShapeAppearance_MaterialComponents_LargeComponent=0x00000000;
    public static int ShapeAppearance_MaterialComponents_MediumComponent=0x00000000;
    public static int ShapeAppearance_MaterialComponents_SmallComponent=0x00000000;
    public static int ShapeAppearance_MaterialComponents_Test=0x00000000;
    public static int ShapeAppearance_MaterialComponents_Tooltip=0x00000000;
    public static int ShapeAppearanceOverlay=0x00000000;
    public static int ShapeAppearanceOverlay_BottomLeftDifferentCornerSize=0x00000000;
    public static int ShapeAppearanceOverlay_BottomRightCut=0x00000000;
    public static int ShapeAppearanceOverlay_Cut=0x00000000;
    public static int ShapeAppearanceOverlay_DifferentCornerSize=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_BottomSheet=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_Chip=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_ExtendedFloatingActionButton=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_FloatingActionButton=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Window_Fullscreen=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Year=0x00000000;
    public static int ShapeAppearanceOverlay_MaterialComponents_TextInputLayout_FilledBox=0x00000000;
    public static int ShapeAppearanceOverlay_TopLeftCut=0x00000000;
    public static int ShapeAppearanceOverlay_TopRightDifferentCornerSize=0x00000000;
    public static int TaskbarEdu_Button_Close=0x00000000;
    public static int TaskbarEdu_Button_Next=0x00000000;
    public static int Test_ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x00000000;
    public static int Test_Theme_MaterialComponents_MaterialCalendar=0x00000000;
    public static int Test_Widget_MaterialComponents_MaterialCalendar=0x00000000;
    public static int Test_Widget_MaterialComponents_MaterialCalendar_Day=0x00000000;
    public static int Test_Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x00000000;
    public static int TestStyleWithLineHeight=0x00000000;
    public static int TestStyleWithLineHeightAppearance=0x00000000;
    public static int TestStyleWithThemeLineHeightAttribute=0x00000000;
    public static int TestStyleWithoutLineHeight=0x00000000;
    public static int TestThemeWithLineHeight=0x00000000;
    public static int TestThemeWithLineHeightDisabled=0x00000000;
    public static int TextAppearance_AppCompat=0x00000000;
    public static int TextAppearance_AppCompat_Body1=0x00000000;
    public static int TextAppearance_AppCompat_Body2=0x00000000;
    public static int TextAppearance_AppCompat_Button=0x00000000;
    public static int TextAppearance_AppCompat_Caption=0x00000000;
    public static int TextAppearance_AppCompat_Display1=0x00000000;
    public static int TextAppearance_AppCompat_Display2=0x00000000;
    public static int TextAppearance_AppCompat_Display3=0x00000000;
    public static int TextAppearance_AppCompat_Display4=0x00000000;
    public static int TextAppearance_AppCompat_Headline=0x00000000;
    public static int TextAppearance_AppCompat_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Large=0x00000000;
    public static int TextAppearance_AppCompat_Large_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x00000000;
    public static int TextAppearance_AppCompat_Light_SearchResult_Title=0x00000000;
    public static int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x00000000;
    public static int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x00000000;
    public static int TextAppearance_AppCompat_Medium=0x00000000;
    public static int TextAppearance_AppCompat_Medium_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Menu=0x00000000;
    public static int TextAppearance_AppCompat_SearchResult_Subtitle=0x00000000;
    public static int TextAppearance_AppCompat_SearchResult_Title=0x00000000;
    public static int TextAppearance_AppCompat_Small=0x00000000;
    public static int TextAppearance_AppCompat_Small_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Subhead=0x00000000;
    public static int TextAppearance_AppCompat_Subhead_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Title=0x00000000;
    public static int TextAppearance_AppCompat_Title_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Tooltip=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionBar_Title=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionMode_Title=0x00000000;
    public static int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Widget_Button=0x00000000;
    public static int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x00000000;
    public static int TextAppearance_AppCompat_Widget_Button_Colored=0x00000000;
    public static int TextAppearance_AppCompat_Widget_Button_Inverse=0x00000000;
    public static int TextAppearance_AppCompat_Widget_DropDownItem=0x00000000;
    public static int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x00000000;
    public static int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x00000000;
    public static int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x00000000;
    public static int TextAppearance_AppCompat_Widget_Switch=0x00000000;
    public static int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x00000000;
    public static int TextAppearance_Compat_Notification=0x00000000;
    public static int TextAppearance_Compat_Notification_Info=0x00000000;
    public static int TextAppearance_Compat_Notification_Line2=0x00000000;
    public static int TextAppearance_Compat_Notification_Time=0x00000000;
    public static int TextAppearance_Compat_Notification_Title=0x00000000;
    public static int TextAppearance_Design_CollapsingToolbar_Expanded=0x00000000;
    public static int TextAppearance_Design_Counter=0x00000000;
    public static int TextAppearance_Design_Counter_Overflow=0x00000000;
    public static int TextAppearance_Design_Error=0x00000000;
    public static int TextAppearance_Design_HelperText=0x00000000;
    public static int TextAppearance_Design_Hint=0x00000000;
    public static int TextAppearance_Design_Placeholder=0x00000000;
    public static int TextAppearance_Design_Prefix=0x00000000;
    public static int TextAppearance_Design_Snackbar_Message=0x00000000;
    public static int TextAppearance_Design_Suffix=0x00000000;
    public static int TextAppearance_Design_Tab=0x00000000;
    public static int TextAppearance_GestureTutorial=0x00000000;
    public static int TextAppearance_GestureTutorial_ButtonLabel=0x00000000;
    public static int TextAppearance_GestureTutorial_CallToAction=0x00000000;
    public static int TextAppearance_GestureTutorial_CancelButtonLabel=0x00000000;
    public static int TextAppearance_GestureTutorial_Dialog_Subtitle=0x00000000;
    public static int TextAppearance_GestureTutorial_Dialog_Title=0x00000000;
    public static int TextAppearance_GestureTutorial_Feedback_Subtext=0x00000000;
    public static int TextAppearance_GestureTutorial_Feedback_Subtext_Dark=0x00000000;
    public static int TextAppearance_GestureTutorial_Feedback_Subtitle=0x00000000;
    public static int TextAppearance_GestureTutorial_Feedback_Title=0x00000000;
    public static int TextAppearance_GestureTutorial_LinkText=0x00000000;
    public static int TextAppearance_GestureTutorial_Subtitle=0x00000000;
    public static int TextAppearance_GestureTutorial_TextButtonLabel=0x00000000;
    public static int TextAppearance_GestureTutorial_Title=0x00000000;
    public static int TextAppearance_MaterialComponents_Badge=0x00000000;
    public static int TextAppearance_MaterialComponents_Body1=0x00000000;
    public static int TextAppearance_MaterialComponents_Body2=0x00000000;
    public static int TextAppearance_MaterialComponents_Button=0x00000000;
    public static int TextAppearance_MaterialComponents_Caption=0x00000000;
    public static int TextAppearance_MaterialComponents_Chip=0x00000000;
    public static int TextAppearance_MaterialComponents_Headline1=0x00000000;
    public static int TextAppearance_MaterialComponents_Headline2=0x00000000;
    public static int TextAppearance_MaterialComponents_Headline3=0x00000000;
    public static int TextAppearance_MaterialComponents_Headline4=0x00000000;
    public static int TextAppearance_MaterialComponents_Headline5=0x00000000;
    public static int TextAppearance_MaterialComponents_Headline6=0x00000000;
    public static int TextAppearance_MaterialComponents_Overline=0x00000000;
    public static int TextAppearance_MaterialComponents_Subtitle1=0x00000000;
    public static int TextAppearance_MaterialComponents_Subtitle2=0x00000000;
    public static int TextAppearance_MaterialComponents_TimePicker_Title=0x00000000;
    public static int TextAppearance_MaterialComponents_Tooltip=0x00000000;
    public static int TextAppearance_TaskbarEdu_Title=0x00000000;
    public static int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x00000000;
    public static int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x00000000;
    public static int TextAppearance_Widget_AppCompat_Toolbar_Title=0x00000000;
    public static int TextHeadline=0x00000000;
    public static int TextTitle=0x00000000;
    public static int Theme_AppCompat=0x00000000;
    public static int Theme_AppCompat_CompactMenu=0x00000000;
    public static int Theme_AppCompat_DayNight=0x00000000;
    public static int Theme_AppCompat_DayNight_DarkActionBar=0x00000000;
    public static int Theme_AppCompat_DayNight_Dialog=0x00000000;
    public static int Theme_AppCompat_DayNight_Dialog_Alert=0x00000000;
    public static int Theme_AppCompat_DayNight_Dialog_MinWidth=0x00000000;
    public static int Theme_AppCompat_DayNight_DialogWhenLarge=0x00000000;
    public static int Theme_AppCompat_DayNight_NoActionBar=0x00000000;
    public static int Theme_AppCompat_Dialog=0x00000000;
    public static int Theme_AppCompat_Dialog_Alert=0x00000000;
    public static int Theme_AppCompat_Dialog_MinWidth=0x00000000;
    public static int Theme_AppCompat_DialogWhenLarge=0x00000000;
    public static int Theme_AppCompat_Empty=0x00000000;
    public static int Theme_AppCompat_Light=0x00000000;
    public static int Theme_AppCompat_Light_DarkActionBar=0x00000000;
    public static int Theme_AppCompat_Light_Dialog=0x00000000;
    public static int Theme_AppCompat_Light_Dialog_Alert=0x00000000;
    public static int Theme_AppCompat_Light_Dialog_MinWidth=0x00000000;
    public static int Theme_AppCompat_Light_DialogWhenLarge=0x00000000;
    public static int Theme_AppCompat_Light_NoActionBar=0x00000000;
    public static int Theme_AppCompat_NoActionBar=0x00000000;
    public static int Theme_Design=0x00000000;
    public static int Theme_Design_BottomSheetDialog=0x00000000;
    public static int Theme_Design_Light=0x00000000;
    public static int Theme_Design_Light_BottomSheetDialog=0x00000000;
    public static int Theme_Design_Light_NoActionBar=0x00000000;
    public static int Theme_Design_NoActionBar=0x00000000;
    public static int Theme_MaterialComponents=0x00000000;
    public static int Theme_MaterialComponents_BottomSheetDialog=0x00000000;
    public static int Theme_MaterialComponents_Bridge=0x00000000;
    public static int Theme_MaterialComponents_CompactMenu=0x00000000;
    public static int Theme_MaterialComponents_DayNight=0x00000000;
    public static int Theme_MaterialComponents_DayNight_BottomSheetDialog=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_DarkActionBar=0x00000000;
    public static int Theme_MaterialComponents_DayNight_DarkActionBar_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_Alert=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_Alert_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_FixedSize=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_FixedSize_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_MinWidth=0x00000000;
    public static int Theme_MaterialComponents_DayNight_Dialog_MinWidth_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_DialogWhenLarge=0x00000000;
    public static int Theme_MaterialComponents_DayNight_NoActionBar=0x00000000;
    public static int Theme_MaterialComponents_DayNight_NoActionBar_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Dialog=0x00000000;
    public static int Theme_MaterialComponents_Dialog_Alert=0x00000000;
    public static int Theme_MaterialComponents_Dialog_Alert_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Dialog_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Dialog_FixedSize=0x00000000;
    public static int Theme_MaterialComponents_Dialog_FixedSize_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Dialog_MinWidth=0x00000000;
    public static int Theme_MaterialComponents_Dialog_MinWidth_Bridge=0x00000000;
    public static int Theme_MaterialComponents_DialogWhenLarge=0x00000000;
    public static int Theme_MaterialComponents_Light=0x00000000;
    public static int Theme_MaterialComponents_Light_BarSize=0x00000000;
    public static int Theme_MaterialComponents_Light_BottomSheetDialog=0x00000000;
    public static int Theme_MaterialComponents_Light_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Light_DarkActionBar=0x00000000;
    public static int Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_Alert=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_Alert_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_FixedSize=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_FixedSize_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_MinWidth=0x00000000;
    public static int Theme_MaterialComponents_Light_Dialog_MinWidth_Bridge=0x00000000;
    public static int Theme_MaterialComponents_Light_DialogWhenLarge=0x00000000;
    public static int Theme_MaterialComponents_Light_LargeTouch=0x00000000;
    public static int Theme_MaterialComponents_Light_NoActionBar=0x00000000;
    public static int Theme_MaterialComponents_Light_NoActionBar_Bridge=0x00000000;
    public static int Theme_MaterialComponents_NoActionBar=0x00000000;
    public static int Theme_MaterialComponents_NoActionBar_Bridge=0x00000000;
    /**
     * Can be applied to views to color things like ripples and list highlights the workspace text
     * color.
     */
    public static int ThemeControlHighlightWorkspaceColor=0x00000000;
    public static int ThemeOverlay_AppCompat=0x00000000;
    public static int ThemeOverlay_AppCompat_ActionBar=0x00000000;
    public static int ThemeOverlay_AppCompat_Dark=0x00000000;
    public static int ThemeOverlay_AppCompat_Dark_ActionBar=0x00000000;
    public static int ThemeOverlay_AppCompat_DayNight=0x00000000;
    public static int ThemeOverlay_AppCompat_DayNight_ActionBar=0x00000000;
    public static int ThemeOverlay_AppCompat_Dialog=0x00000000;
    public static int ThemeOverlay_AppCompat_Dialog_Alert=0x00000000;
    public static int ThemeOverlay_AppCompat_Light=0x00000000;
    public static int ThemeOverlay_Design_TextInputEditText=0x00000000;
    public static int ThemeOverlay_MaterialComponents=0x00000000;
    public static int ThemeOverlay_MaterialComponents_ActionBar=0x00000000;
    public static int ThemeOverlay_MaterialComponents_ActionBar_Primary=0x00000000;
    public static int ThemeOverlay_MaterialComponents_ActionBar_Surface=0x00000000;
    public static int ThemeOverlay_MaterialComponents_AutoCompleteTextView=0x00000000;
    public static int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox=0x00000000;
    public static int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x00000000;
    public static int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x00000000;
    public static int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x00000000;
    public static int ThemeOverlay_MaterialComponents_BottomAppBar_Primary=0x00000000;
    public static int ThemeOverlay_MaterialComponents_BottomAppBar_Surface=0x00000000;
    public static int ThemeOverlay_MaterialComponents_BottomSheetDialog=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Dark=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Dark_ActionBar=0x00000000;
    public static int ThemeOverlay_MaterialComponents_DayNight_BottomSheetDialog=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Dialog=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Dialog_Alert=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Dialog_Alert_Framework=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Light=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Centered=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Calendar=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text_Day=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Spinner=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialCalendar=0x00000000;
    public static int ThemeOverlay_MaterialComponents_MaterialCalendar_Fullscreen=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TextInputEditText=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TimePicker=0x00000000;
    public static int ThemeOverlay_MaterialComponents_TimePicker_Display=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Toolbar_Primary=0x00000000;
    public static int ThemeOverlay_MaterialComponents_Toolbar_Surface=0x00000000;
    public static int ThemeOverlayColorAccentRed=0x00000000;
    public static int Widget_AppCompat_ActionBar=0x00000000;
    public static int Widget_AppCompat_ActionBar_Solid=0x00000000;
    public static int Widget_AppCompat_ActionBar_TabBar=0x00000000;
    public static int Widget_AppCompat_ActionBar_TabText=0x00000000;
    public static int Widget_AppCompat_ActionBar_TabView=0x00000000;
    public static int Widget_AppCompat_ActionButton=0x00000000;
    public static int Widget_AppCompat_ActionButton_CloseMode=0x00000000;
    public static int Widget_AppCompat_ActionButton_Overflow=0x00000000;
    public static int Widget_AppCompat_ActionMode=0x00000000;
    public static int Widget_AppCompat_ActivityChooserView=0x00000000;
    public static int Widget_AppCompat_AutoCompleteTextView=0x00000000;
    public static int Widget_AppCompat_Button=0x00000000;
    public static int Widget_AppCompat_Button_Borderless=0x00000000;
    public static int Widget_AppCompat_Button_Borderless_Colored=0x00000000;
    public static int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x00000000;
    public static int Widget_AppCompat_Button_Colored=0x00000000;
    public static int Widget_AppCompat_Button_Small=0x00000000;
    public static int Widget_AppCompat_ButtonBar=0x00000000;
    public static int Widget_AppCompat_ButtonBar_AlertDialog=0x00000000;
    public static int Widget_AppCompat_CompoundButton_CheckBox=0x00000000;
    public static int Widget_AppCompat_CompoundButton_RadioButton=0x00000000;
    public static int Widget_AppCompat_CompoundButton_Switch=0x00000000;
    public static int Widget_AppCompat_DrawerArrowToggle=0x00000000;
    public static int Widget_AppCompat_DropDownItem_Spinner=0x00000000;
    public static int Widget_AppCompat_EditText=0x00000000;
    public static int Widget_AppCompat_ImageButton=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_Solid=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_TabBar=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_TabText=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_TabView=0x00000000;
    public static int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x00000000;
    public static int Widget_AppCompat_Light_ActionButton=0x00000000;
    public static int Widget_AppCompat_Light_ActionButton_CloseMode=0x00000000;
    public static int Widget_AppCompat_Light_ActionButton_Overflow=0x00000000;
    public static int Widget_AppCompat_Light_ActionMode_Inverse=0x00000000;
    public static int Widget_AppCompat_Light_ActivityChooserView=0x00000000;
    public static int Widget_AppCompat_Light_AutoCompleteTextView=0x00000000;
    public static int Widget_AppCompat_Light_DropDownItem_Spinner=0x00000000;
    public static int Widget_AppCompat_Light_ListPopupWindow=0x00000000;
    public static int Widget_AppCompat_Light_ListView_DropDown=0x00000000;
    public static int Widget_AppCompat_Light_PopupMenu=0x00000000;
    public static int Widget_AppCompat_Light_PopupMenu_Overflow=0x00000000;
    public static int Widget_AppCompat_Light_SearchView=0x00000000;
    public static int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x00000000;
    public static int Widget_AppCompat_ListMenuView=0x00000000;
    public static int Widget_AppCompat_ListPopupWindow=0x00000000;
    public static int Widget_AppCompat_ListView=0x00000000;
    public static int Widget_AppCompat_ListView_DropDown=0x00000000;
    public static int Widget_AppCompat_ListView_Menu=0x00000000;
    public static int Widget_AppCompat_PopupMenu=0x00000000;
    public static int Widget_AppCompat_PopupMenu_Overflow=0x00000000;
    public static int Widget_AppCompat_PopupWindow=0x00000000;
    public static int Widget_AppCompat_ProgressBar=0x00000000;
    public static int Widget_AppCompat_ProgressBar_Horizontal=0x00000000;
    public static int Widget_AppCompat_ProgressBar_Inline=0x00000000;
    public static int Widget_AppCompat_RatingBar=0x00000000;
    public static int Widget_AppCompat_RatingBar_Indicator=0x00000000;
    public static int Widget_AppCompat_RatingBar_Small=0x00000000;
    public static int Widget_AppCompat_SearchView=0x00000000;
    public static int Widget_AppCompat_SearchView_ActionBar=0x00000000;
    public static int Widget_AppCompat_SeekBar=0x00000000;
    public static int Widget_AppCompat_SeekBar_Discrete=0x00000000;
    public static int Widget_AppCompat_SeekBar_Inline=0x00000000;
    public static int Widget_AppCompat_Spinner=0x00000000;
    public static int Widget_AppCompat_Spinner_DropDown=0x00000000;
    public static int Widget_AppCompat_Spinner_DropDown_ActionBar=0x00000000;
    public static int Widget_AppCompat_Spinner_Underlined=0x00000000;
    public static int Widget_AppCompat_TextView=0x00000000;
    public static int Widget_AppCompat_TextView_SpinnerItem=0x00000000;
    public static int Widget_AppCompat_Toolbar=0x00000000;
    public static int Widget_AppCompat_Toolbar_Button_Navigation=0x00000000;
    public static int Widget_Compat_NotificationActionContainer=0x00000000;
    public static int Widget_Compat_NotificationActionText=0x00000000;
    public static int Widget_Design_AppBarLayout=0x00000000;
    public static int Widget_Design_BottomNavigationView=0x00000000;
    public static int Widget_Design_BottomSheet_Modal=0x00000000;
    public static int Widget_Design_CollapsingToolbar=0x00000000;
    public static int Widget_Design_FloatingActionButton=0x00000000;
    public static int Widget_Design_NavigationView=0x00000000;
    public static int Widget_Design_ScrimInsetsFrameLayout=0x00000000;
    public static int Widget_Design_Snackbar=0x00000000;
    public static int Widget_Design_TabLayout=0x00000000;
    public static int Widget_Design_TextInputEditText=0x00000000;
    public static int Widget_Design_TextInputLayout=0x00000000;
    public static int Widget_MaterialComponents_ActionBar_Primary=0x00000000;
    public static int Widget_MaterialComponents_ActionBar_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_ActionBar_Solid=0x00000000;
    public static int Widget_MaterialComponents_ActionBar_Surface=0x00000000;
    public static int Widget_MaterialComponents_AppBarLayout_Primary=0x00000000;
    public static int Widget_MaterialComponents_AppBarLayout_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_AppBarLayout_Surface=0x00000000;
    public static int Widget_MaterialComponents_AutoCompleteTextView_FilledBox=0x00000000;
    public static int Widget_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x00000000;
    public static int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x00000000;
    public static int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x00000000;
    public static int Widget_MaterialComponents_Badge=0x00000000;
    public static int Widget_MaterialComponents_BottomAppBar=0x00000000;
    public static int Widget_MaterialComponents_BottomAppBar_Colored=0x00000000;
    public static int Widget_MaterialComponents_BottomAppBar_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_BottomNavigationView=0x00000000;
    public static int Widget_MaterialComponents_BottomNavigationView_Colored=0x00000000;
    public static int Widget_MaterialComponents_BottomNavigationView_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_BottomSheet=0x00000000;
    public static int Widget_MaterialComponents_BottomSheet_Modal=0x00000000;
    public static int Widget_MaterialComponents_Button=0x00000000;
    public static int Widget_MaterialComponents_Button_Icon=0x00000000;
    public static int Widget_MaterialComponents_Button_OutlinedButton=0x00000000;
    public static int Widget_MaterialComponents_Button_OutlinedButton_Icon=0x00000000;
    public static int Widget_MaterialComponents_Button_TextButton=0x00000000;
    public static int Widget_MaterialComponents_Button_TextButton_Dialog=0x00000000;
    public static int Widget_MaterialComponents_Button_TextButton_Dialog_Flush=0x00000000;
    public static int Widget_MaterialComponents_Button_TextButton_Dialog_Icon=0x00000000;
    public static int Widget_MaterialComponents_Button_TextButton_Icon=0x00000000;
    public static int Widget_MaterialComponents_Button_TextButton_Snackbar=0x00000000;
    public static int Widget_MaterialComponents_Button_UnelevatedButton=0x00000000;
    public static int Widget_MaterialComponents_Button_UnelevatedButton_Icon=0x00000000;
    public static int Widget_MaterialComponents_CardView=0x00000000;
    public static int Widget_MaterialComponents_CheckedTextView=0x00000000;
    public static int Widget_MaterialComponents_Chip_Action=0x00000000;
    public static int Widget_MaterialComponents_Chip_Choice=0x00000000;
    public static int Widget_MaterialComponents_Chip_Entry=0x00000000;
    public static int Widget_MaterialComponents_Chip_Filter=0x00000000;
    public static int Widget_MaterialComponents_ChipGroup=0x00000000;
    public static int Widget_MaterialComponents_CircularProgressIndicator=0x00000000;
    public static int Widget_MaterialComponents_CircularProgressIndicator_ExtraSmall=0x00000000;
    public static int Widget_MaterialComponents_CircularProgressIndicator_Medium=0x00000000;
    public static int Widget_MaterialComponents_CircularProgressIndicator_Small=0x00000000;
    public static int Widget_MaterialComponents_CollapsingToolbar=0x00000000;
    public static int Widget_MaterialComponents_CompoundButton_CheckBox=0x00000000;
    public static int Widget_MaterialComponents_CompoundButton_RadioButton=0x00000000;
    public static int Widget_MaterialComponents_CompoundButton_Switch=0x00000000;
    public static int Widget_MaterialComponents_ExtendedFloatingActionButton=0x00000000;
    public static int Widget_MaterialComponents_ExtendedFloatingActionButton_Icon=0x00000000;
    public static int Widget_MaterialComponents_FloatingActionButton=0x00000000;
    public static int Widget_MaterialComponents_Light_ActionBar_Solid=0x00000000;
    public static int Widget_MaterialComponents_LinearProgressIndicator=0x00000000;
    public static int Widget_MaterialComponents_MaterialButtonToggleGroup=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Day=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Day_Invalid=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Day_Today=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_DayTextView=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Fullscreen=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderCancelButton=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderConfirmButton=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderDivider=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderLayout=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderSelection=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderSelection_Fullscreen=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderTitle=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_HeaderToggleButton=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Item=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_MonthNavigationButton=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_MonthTextView=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Year=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Year_Selected=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_Year_Today=0x00000000;
    public static int Widget_MaterialComponents_MaterialCalendar_YearNavigationButton=0x00000000;
    public static int Widget_MaterialComponents_NavigationRailView=0x00000000;
    public static int Widget_MaterialComponents_NavigationRailView_Colored=0x00000000;
    public static int Widget_MaterialComponents_NavigationRailView_Colored_Compact=0x00000000;
    public static int Widget_MaterialComponents_NavigationRailView_Compact=0x00000000;
    public static int Widget_MaterialComponents_NavigationRailView_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_NavigationView=0x00000000;
    public static int Widget_MaterialComponents_PopupMenu=0x00000000;
    public static int Widget_MaterialComponents_PopupMenu_ContextMenu=0x00000000;
    public static int Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x00000000;
    public static int Widget_MaterialComponents_PopupMenu_Overflow=0x00000000;
    public static int Widget_MaterialComponents_ProgressIndicator=0x00000000;
    public static int Widget_MaterialComponents_ShapeableImageView=0x00000000;
    public static int Widget_MaterialComponents_Slider=0x00000000;
    public static int Widget_MaterialComponents_Snackbar=0x00000000;
    public static int Widget_MaterialComponents_Snackbar_FullWidth=0x00000000;
    public static int Widget_MaterialComponents_Snackbar_TextView=0x00000000;
    public static int Widget_MaterialComponents_TabLayout=0x00000000;
    public static int Widget_MaterialComponents_TabLayout_Colored=0x00000000;
    public static int Widget_MaterialComponents_TabLayout_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_TextInputEditText_FilledBox=0x00000000;
    public static int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense=0x00000000;
    public static int Widget_MaterialComponents_TextInputEditText_OutlinedBox=0x00000000;
    public static int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_FilledBox=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense_ExposedDropdownMenu=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_FilledBox_ExposedDropdownMenu=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_OutlinedBox=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense_ExposedDropdownMenu=0x00000000;
    public static int Widget_MaterialComponents_TextInputLayout_OutlinedBox_ExposedDropdownMenu=0x00000000;
    public static int Widget_MaterialComponents_TextView=0x00000000;
    public static int Widget_MaterialComponents_TimePicker=0x00000000;
    public static int Widget_MaterialComponents_TimePicker_Button=0x00000000;
    public static int Widget_MaterialComponents_TimePicker_Clock=0x00000000;
    public static int Widget_MaterialComponents_TimePicker_Display=0x00000000;
    public static int Widget_MaterialComponents_TimePicker_Display_TextInputEditText=0x00000000;
    public static int Widget_MaterialComponents_TimePicker_ImageButton=0x00000000;
    public static int Widget_MaterialComponents_TimePicker_ImageButton_ShapeAppearance=0x00000000;
    public static int Widget_MaterialComponents_Toolbar=0x00000000;
    public static int Widget_MaterialComponents_Toolbar_Primary=0x00000000;
    public static int Widget_MaterialComponents_Toolbar_PrimarySurface=0x00000000;
    public static int Widget_MaterialComponents_Toolbar_Surface=0x00000000;
    public static int Widget_MaterialComponents_Tooltip=0x00000000;
    public static int Widget_SliceView=0x00000000;
    public static int Widget_Support_CoordinatorLayout=0x00000000;
    /**
     * Theme for the widget container.
     */
    public static int WidgetContainerTheme=0x00000000;
    public static int WidgetContainerTheme_Dark=0x00000000;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.launcher3:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.launcher3:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.launcher3:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.launcher3:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.launcher3:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.launcher3:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.launcher3:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.launcher3:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.launcher3:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.launcher3:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.launcher3:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.launcher3:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.launcher3:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.launcher3:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.launcher3:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.launcher3:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.launcher3:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.launcher3:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.launcher3:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.launcher3:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.launcher3:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.launcher3:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.launcher3:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.launcher3:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.launcher3:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.launcher3:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.launcher3:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.launcher3:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:background
     */
    public static int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundSplit
     */
    public static int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundStacked
     */
    public static int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetEnd
     */
    public static int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetEndWithActions
     */
    public static int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetLeft
     */
    public static int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetRight
     */
    public static int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetStart
     */
    public static int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetStartWithNavigation
     */
    public static int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:customNavigationLayout
     */
    public static int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:displayOptions
     */
    public static int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:divider
     */
    public static int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:height
     */
    public static int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:hideOnContentScroll
     */
    public static int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:homeAsUpIndicator
     */
    public static int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:homeLayout
     */
    public static int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:icon
     */
    public static int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:indeterminateProgressStyle
     */
    public static int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemPadding
     */
    public static int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:logo
     */
    public static int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:navigationMode
     */
    public static int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:popupTheme
     */
    public static int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:progressBarPadding
     */
    public static int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:progressBarStyle
     */
    public static int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:subtitle
     */
    public static int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:subtitleTextStyle
     */
    public static int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:title
     */
    public static int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:titleTextStyle
     */
    public static int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.launcher3:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.launcher3:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.launcher3:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.launcher3:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.launcher3:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.launcher3:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:background
     */
    public static int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundSplit
     */
    public static int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:closeItemLayout
     */
    public static int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:height
     */
    public static int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:subtitleTextStyle
     */
    public static int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:titleTextStyle
     */
    public static int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.launcher3:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.launcher3:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:expandActivityOverflowButtonDrawable
     */
    public static int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:initialActivityCount
     */
    public static int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.android.launcher3:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.launcher3:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.launcher3:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.launcher3:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.launcher3:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.launcher3:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.launcher3:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:buttonIconDimen
     */
    public static int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonPanelSideLayout
     */
    public static int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listItemLayout
     */
    public static int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listLayout
     */
    public static int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:multiChoiceItemLayout
     */
    public static int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:showTitle
     */
    public static int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:singleChoiceItemLayout
     */
    public static int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AllSetLinkSpan.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AllSetLinkSpan_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AllSetLinkSpan_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * </table>
     * @see #AllSetLinkSpan_android_textSize
     * @see #AllSetLinkSpan_android_fontFamily
     */
    public static final int[] AllSetLinkSpan={
      0x01010095, 0x010103ac
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #AllSetLinkSpan} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static int AllSetLinkSpan_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #AllSetLinkSpan} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static int AllSetLinkSpan_android_fontFamily=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded com.android.launcher3:expanded}</code></td><td>The initial expanded state for the AppBarLayout.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScroll com.android.launcher3:liftOnScroll}</code></td><td>Whether the {@link AppBarLayout} should lift on scroll.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScrollTargetViewId com.android.launcher3:liftOnScrollTargetViewId}</code></td><td>The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).</td></tr>
     * <tr><td><code>{@link #AppBarLayout_statusBarForeground com.android.launcher3:statusBarForeground}</code></td><td>The drawable to display in front of the layout's content, but behind the status bar.</td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     * @see #AppBarLayout_liftOnScroll
     * @see #AppBarLayout_liftOnScrollTargetViewId
     * @see #AppBarLayout_statusBarForeground
     */
    public static final int[] AppBarLayout={
      0x010100d4, 0x0101048f, 0x01010540, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Deprecated. Elevation is now controlled via a state list animator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int AppBarLayout_elevation=3;
    /**
     * <p>
     * @attr description
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:expanded
     */
    public static int AppBarLayout_expanded=4;
    /**
     * <p>
     * @attr description
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:liftOnScroll
     */
    public static int AppBarLayout_liftOnScroll=5;
    /**
     * <p>
     * @attr description
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:liftOnScrollTargetViewId
     */
    public static int AppBarLayout_liftOnScrollTargetViewId=6;
    /**
     * <p>
     * @attr description
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:statusBarForeground
     */
    public static int AppBarLayout_statusBarForeground=7;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed com.android.launcher3:state_collapsed}</code></td><td>@deprecated in favor of {@link R.attr#state_lifted}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible com.android.launcher3:state_collapsible}</code></td><td>@deprecated in favor of {@link R.attr#state_liftable}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_liftable com.android.launcher3:state_liftable}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_lifted com.android.launcher3:state_lifted}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).</td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     * @see #AppBarLayoutStates_state_liftable
     * @see #AppBarLayoutStates_state_lifted
     */
    @Deprecated
    public static final int[] AppBarLayoutStates={
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_lifted}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:state_collapsed
     */
    @Deprecated
    public static int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_liftable}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:state_collapsible
     */
    @Deprecated
    public static int AppBarLayoutStates_state_collapsible=1;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:state_liftable
     */
    public static int AppBarLayoutStates_state_liftable=2;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:state_lifted
     */
    public static int AppBarLayoutStates_state_lifted=3;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags com.android.launcher3:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator com.android.launcher3:layout_scrollInterpolator}</code></td><td>An interpolator to use when scrolling this View.</td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_scrollFlags
     */
    public static int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>
     * @attr description
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_scrollInterpolator
     */
    public static int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.launcher3:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.launcher3:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.launcher3:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:srcCompat
     */
    public static int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tint
     */
    public static int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tintMode
     */
    public static int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.launcher3:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.launcher3:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.launcher3:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:tickMark
     */
    public static int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tickMarkTint
     */
    public static int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tickMarkTintMode
     */
    public static int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.launcher3:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.launcher3:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.launcher3:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.launcher3:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.launcher3:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.android.launcher3:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.android.launcher3:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.android.launcher3:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.android.launcher3:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.android.launcher3:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.android.launcher3:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.android.launcher3:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.android.launcher3:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.android.launcher3:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.launcher3:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.android.launcher3:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.android.launcher3:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.android.launcher3:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.launcher3:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.android.launcher3:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:autoSizeMaxTextSize
     */
    public static int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:autoSizeMinTextSize
     */
    public static int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:autoSizePresetSizes
     */
    public static int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:autoSizeStepGranularity
     */
    public static int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:autoSizeTextType
     */
    public static int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:drawableBottomCompat
     */
    public static int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:drawableEndCompat
     */
    public static int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:drawableLeftCompat
     */
    public static int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:drawableRightCompat
     */
    public static int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:drawableStartCompat
     */
    public static int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:drawableTint
     */
    public static int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:drawableTintMode
     */
    public static int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:drawableTopCompat
     */
    public static int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:firstBaselineToTopHeight
     */
    public static int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontFamily
     */
    public static int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontVariationSettings
     */
    public static int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:lastBaselineToBottomHeight
     */
    public static int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:lineHeight
     */
    public static int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:textAllCaps
     */
    public static int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:textLocale
     */
    public static int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.launcher3:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.launcher3:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.launcher3:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.launcher3:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.launcher3:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.launcher3:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.launcher3:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.launcher3:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.launcher3:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.launcher3:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.launcher3:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.launcher3:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.launcher3:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.launcher3:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.launcher3:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.launcher3:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.launcher3:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseContentDescription com.android.launcher3:actionModeCloseContentDescription}</code></td><td>Content description to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.launcher3:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.launcher3:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.launcher3:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.launcher3:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.launcher3:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.launcher3:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.launcher3:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.launcher3:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.launcher3:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.launcher3:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeTheme com.android.launcher3:actionModeTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar in action mode.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.launcher3:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.launcher3:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.launcher3:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.launcher3:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.launcher3:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.launcher3:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.launcher3:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.launcher3:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.launcher3:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.launcher3:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.launcher3:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.launcher3:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.launcher3:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.launcher3:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.launcher3:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.launcher3:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.launcher3:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.launcher3:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.launcher3:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.launcher3:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.launcher3:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.launcher3:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.launcher3:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.launcher3:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.launcher3:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.launcher3:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.launcher3:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.launcher3:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.launcher3:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.launcher3:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.android.launcher3:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.launcher3:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.launcher3:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.launcher3:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.launcher3:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.launcher3:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.launcher3:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.launcher3:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.launcher3:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.launcher3:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.launcher3:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.launcher3:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.launcher3:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.android.launcher3:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.android.launcher3:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.launcher3:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.launcher3:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.launcher3:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.launcher3:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.launcher3:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.launcher3:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.android.launcher3:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.launcher3:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.launcher3:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.android.launcher3:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.launcher3:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.launcher3:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.launcher3:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.launcher3:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.launcher3:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.launcher3:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.launcher3:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.launcher3:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.launcher3:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.launcher3:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.launcher3:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.launcher3:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.launcher3:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.launcher3:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.launcher3:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.launcher3:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.launcher3:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.launcher3:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.launcher3:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.launcher3:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.launcher3:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.launcher3:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.launcher3:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.launcher3:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.launcher3:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.launcher3:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.launcher3:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.launcher3:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.launcher3:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.launcher3:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.android.launcher3:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.launcher3:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.launcher3:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.launcher3:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.launcher3:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.launcher3:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.launcher3:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.launcher3:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.launcher3:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.launcher3:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.launcher3:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseContentDescription
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeTheme
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarDivider
     */
    public static int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarItemBackground
     */
    public static int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarPopupTheme
     */
    public static int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:actionBarSize
     */
    public static int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarSplitStyle
     */
    public static int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarStyle
     */
    public static int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarTabBarStyle
     */
    public static int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarTabStyle
     */
    public static int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarTabTextStyle
     */
    public static int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarTheme
     */
    public static int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionBarWidgetTheme
     */
    public static int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionButtonStyle
     */
    public static int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionDropDownStyle
     */
    public static int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionMenuTextAppearance
     */
    public static int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:actionMenuTextColor
     */
    public static int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeBackground
     */
    public static int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeCloseButtonStyle
     */
    public static int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Content description to use for the close action mode button
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:actionModeCloseContentDescription
     */
    public static int AppCompatTheme_actionModeCloseContentDescription=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeCloseDrawable
     */
    public static int AppCompatTheme_actionModeCloseDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeCopyDrawable
     */
    public static int AppCompatTheme_actionModeCopyDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeCutDrawable
     */
    public static int AppCompatTheme_actionModeCutDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeFindDrawable
     */
    public static int AppCompatTheme_actionModeFindDrawable=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModePasteDrawable
     */
    public static int AppCompatTheme_actionModePasteDrawable=24;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModePopupWindowStyle
     */
    public static int AppCompatTheme_actionModePopupWindowStyle=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeSelectAllDrawable
     */
    public static int AppCompatTheme_actionModeSelectAllDrawable=26;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeShareDrawable
     */
    public static int AppCompatTheme_actionModeShareDrawable=27;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeSplitBackground
     */
    public static int AppCompatTheme_actionModeSplitBackground=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeStyle
     */
    public static int AppCompatTheme_actionModeStyle=29;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeTheme
     */
    public static int AppCompatTheme_actionModeTheme=30;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionModeWebSearchDrawable
     */
    public static int AppCompatTheme_actionModeWebSearchDrawable=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionOverflowButtonStyle
     */
    public static int AppCompatTheme_actionOverflowButtonStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionOverflowMenuStyle
     */
    public static int AppCompatTheme_actionOverflowMenuStyle=33;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:activityChooserViewStyle
     */
    public static int AppCompatTheme_activityChooserViewStyle=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:alertDialogButtonGroupStyle
     */
    public static int AppCompatTheme_alertDialogButtonGroupStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:alertDialogCenterButtons
     */
    public static int AppCompatTheme_alertDialogCenterButtons=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:alertDialogStyle
     */
    public static int AppCompatTheme_alertDialogStyle=37;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:alertDialogTheme
     */
    public static int AppCompatTheme_alertDialogTheme=38;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:autoCompleteTextViewStyle
     */
    public static int AppCompatTheme_autoCompleteTextViewStyle=39;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:borderlessButtonStyle
     */
    public static int AppCompatTheme_borderlessButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonBarButtonStyle
     */
    public static int AppCompatTheme_buttonBarButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonBarNegativeButtonStyle
     */
    public static int AppCompatTheme_buttonBarNegativeButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonBarNeutralButtonStyle
     */
    public static int AppCompatTheme_buttonBarNeutralButtonStyle=43;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonBarPositiveButtonStyle
     */
    public static int AppCompatTheme_buttonBarPositiveButtonStyle=44;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonBarStyle
     */
    public static int AppCompatTheme_buttonBarStyle=45;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonStyle
     */
    public static int AppCompatTheme_buttonStyle=46;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonStyleSmall
     */
    public static int AppCompatTheme_buttonStyleSmall=47;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkboxStyle
     */
    public static int AppCompatTheme_checkboxStyle=48;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkedTextViewStyle
     */
    public static int AppCompatTheme_checkedTextViewStyle=49;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorAccent
     */
    public static int AppCompatTheme_colorAccent=50;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorBackgroundFloating
     */
    public static int AppCompatTheme_colorBackgroundFloating=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorButtonNormal
     */
    public static int AppCompatTheme_colorButtonNormal=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorControlActivated
     */
    public static int AppCompatTheme_colorControlActivated=53;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorControlHighlight
     */
    public static int AppCompatTheme_colorControlHighlight=54;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorControlNormal
     */
    public static int AppCompatTheme_colorControlNormal=55;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorError
     */
    public static int AppCompatTheme_colorError=56;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorPrimary
     */
    public static int AppCompatTheme_colorPrimary=57;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorPrimaryDark
     */
    public static int AppCompatTheme_colorPrimaryDark=58;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:colorSwitchThumbNormal
     */
    public static int AppCompatTheme_colorSwitchThumbNormal=59;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:controlBackground
     */
    public static int AppCompatTheme_controlBackground=60;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:dialogCornerRadius
     */
    public static int AppCompatTheme_dialogCornerRadius=61;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:dialogPreferredPadding
     */
    public static int AppCompatTheme_dialogPreferredPadding=62;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dialogTheme
     */
    public static int AppCompatTheme_dialogTheme=63;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dividerHorizontal
     */
    public static int AppCompatTheme_dividerHorizontal=64;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dividerVertical
     */
    public static int AppCompatTheme_dividerVertical=65;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dropDownListViewStyle
     */
    public static int AppCompatTheme_dropDownListViewStyle=66;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:dropdownListPreferredItemHeight
     */
    public static int AppCompatTheme_dropdownListPreferredItemHeight=67;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:editTextBackground
     */
    public static int AppCompatTheme_editTextBackground=68;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:editTextColor
     */
    public static int AppCompatTheme_editTextColor=69;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:editTextStyle
     */
    public static int AppCompatTheme_editTextStyle=70;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:homeAsUpIndicator
     */
    public static int AppCompatTheme_homeAsUpIndicator=71;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:imageButtonStyle
     */
    public static int AppCompatTheme_imageButtonStyle=72;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listChoiceBackgroundIndicator
     */
    public static int AppCompatTheme_listChoiceBackgroundIndicator=73;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listChoiceIndicatorMultipleAnimated
     */
    public static int AppCompatTheme_listChoiceIndicatorMultipleAnimated=74;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listChoiceIndicatorSingleAnimated
     */
    public static int AppCompatTheme_listChoiceIndicatorSingleAnimated=75;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listDividerAlertDialog
     */
    public static int AppCompatTheme_listDividerAlertDialog=76;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listMenuViewStyle
     */
    public static int AppCompatTheme_listMenuViewStyle=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:listPopupWindowStyle
     */
    public static int AppCompatTheme_listPopupWindowStyle=78;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemHeight
     */
    public static int AppCompatTheme_listPreferredItemHeight=79;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemHeightLarge
     */
    public static int AppCompatTheme_listPreferredItemHeightLarge=80;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemHeightSmall
     */
    public static int AppCompatTheme_listPreferredItemHeightSmall=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemPaddingEnd
     */
    public static int AppCompatTheme_listPreferredItemPaddingEnd=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemPaddingLeft
     */
    public static int AppCompatTheme_listPreferredItemPaddingLeft=83;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemPaddingRight
     */
    public static int AppCompatTheme_listPreferredItemPaddingRight=84;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:listPreferredItemPaddingStart
     */
    public static int AppCompatTheme_listPreferredItemPaddingStart=85;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:panelBackground
     */
    public static int AppCompatTheme_panelBackground=86;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:panelMenuListTheme
     */
    public static int AppCompatTheme_panelMenuListTheme=87;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:panelMenuListWidth
     */
    public static int AppCompatTheme_panelMenuListWidth=88;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:popupMenuStyle
     */
    public static int AppCompatTheme_popupMenuStyle=89;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:popupWindowStyle
     */
    public static int AppCompatTheme_popupWindowStyle=90;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:radioButtonStyle
     */
    public static int AppCompatTheme_radioButtonStyle=91;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:ratingBarStyle
     */
    public static int AppCompatTheme_ratingBarStyle=92;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:ratingBarStyleIndicator
     */
    public static int AppCompatTheme_ratingBarStyleIndicator=93;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:ratingBarStyleSmall
     */
    public static int AppCompatTheme_ratingBarStyleSmall=94;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:searchViewStyle
     */
    public static int AppCompatTheme_searchViewStyle=95;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:seekBarStyle
     */
    public static int AppCompatTheme_seekBarStyle=96;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:selectableItemBackground
     */
    public static int AppCompatTheme_selectableItemBackground=97;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:selectableItemBackgroundBorderless
     */
    public static int AppCompatTheme_selectableItemBackgroundBorderless=98;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:spinnerDropDownItemStyle
     */
    public static int AppCompatTheme_spinnerDropDownItemStyle=99;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:spinnerStyle
     */
    public static int AppCompatTheme_spinnerStyle=100;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:switchStyle
     */
    public static int AppCompatTheme_switchStyle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceLargePopupMenu
     */
    public static int AppCompatTheme_textAppearanceLargePopupMenu=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceListItem
     */
    public static int AppCompatTheme_textAppearanceListItem=103;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceListItemSecondary
     */
    public static int AppCompatTheme_textAppearanceListItemSecondary=104;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceListItemSmall
     */
    public static int AppCompatTheme_textAppearanceListItemSmall=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearancePopupMenuHeader
     */
    public static int AppCompatTheme_textAppearancePopupMenuHeader=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceSearchResultSubtitle
     */
    public static int AppCompatTheme_textAppearanceSearchResultSubtitle=107;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceSearchResultTitle
     */
    public static int AppCompatTheme_textAppearanceSearchResultTitle=108;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:textAppearanceSmallPopupMenu
     */
    public static int AppCompatTheme_textAppearanceSmallPopupMenu=109;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:textColorAlertDialogListItem
     */
    public static int AppCompatTheme_textColorAlertDialogListItem=110;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:textColorSearchUrl
     */
    public static int AppCompatTheme_textColorSearchUrl=111;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:toolbarNavigationButtonStyle
     */
    public static int AppCompatTheme_toolbarNavigationButtonStyle=112;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:toolbarStyle
     */
    public static int AppCompatTheme_toolbarStyle=113;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tooltipForegroundColor
     */
    public static int AppCompatTheme_tooltipForegroundColor=114;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:tooltipFrameBackground
     */
    public static int AppCompatTheme_tooltipFrameBackground=115;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:viewInflaterClass
     */
    public static int AppCompatTheme_viewInflaterClass=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:windowActionBar
     */
    public static int AppCompatTheme_windowActionBar=117;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:windowActionBarOverlay
     */
    public static int AppCompatTheme_windowActionBarOverlay=118;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:windowActionModeOverlay
     */
    public static int AppCompatTheme_windowActionModeOverlay=119;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:windowFixedHeightMajor
     */
    public static int AppCompatTheme_windowFixedHeightMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:windowFixedHeightMinor
     */
    public static int AppCompatTheme_windowFixedHeightMinor=121;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:windowFixedWidthMajor
     */
    public static int AppCompatTheme_windowFixedWidthMajor=122;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:windowFixedWidthMinor
     */
    public static int AppCompatTheme_windowFixedWidthMinor=123;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:windowMinWidthMajor
     */
    public static int AppCompatTheme_windowMinWidthMajor=124;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:windowMinWidthMinor
     */
    public static int AppCompatTheme_windowMinWidthMinor=125;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:windowNoTitle
     */
    public static int AppCompatTheme_windowNoTitle=126;
    /**
     * Attributes that can be used with a BackgroundStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.android.launcher3:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
      0x0101030e, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:selectableItemBackground
     */
    public static int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a Badge.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Badge_backgroundColor com.android.launcher3:backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeGravity com.android.launcher3:badgeGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeTextColor com.android.launcher3:badgeTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_horizontalOffset com.android.launcher3:horizontalOffset}</code></td><td>Offset moves the badge towards the center of its anchor.</td></tr>
     * <tr><td><code>{@link #Badge_maxCharacterCount com.android.launcher3:maxCharacterCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_number com.android.launcher3:number}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_verticalOffset com.android.launcher3:verticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #Badge_backgroundColor
     * @see #Badge_badgeGravity
     * @see #Badge_badgeTextColor
     * @see #Badge_horizontalOffset
     * @see #Badge_maxCharacterCount
     * @see #Badge_number
     * @see #Badge_verticalOffset
     */
    public static final int[] Badge={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#backgroundColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundColor
     */
    public static int Badge_backgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#badgeGravity}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:badgeGravity
     */
    public static int Badge_badgeGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#badgeTextColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:badgeTextColor
     */
    public static int Badge_badgeTextColor=2;
    /**
     * <p>
     * @attr description
     * Offset moves the badge towards the center of its anchor.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:horizontalOffset
     */
    public static int Badge_horizontalOffset=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxCharacterCount}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:maxCharacterCount
     */
    public static int Badge_maxCharacterCount=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#number}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:number
     */
    public static int Badge_number=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#verticalOffset}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:verticalOffset
     */
    public static int Badge_verticalOffset=6;
    /**
     * Attributes that can be used with a BaseProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_android_indeterminate android:indeterminate}</code></td><td></td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_hideAnimationBehavior com.android.launcher3:hideAnimationBehavior}</code></td><td>The animation behavior to hide the indicator and track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_indicatorColor com.android.launcher3:indicatorColor}</code></td><td>The indicator color (or colors in an array).</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_minHideDelay com.android.launcher3:minHideDelay}</code></td><td>The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_showAnimationBehavior com.android.launcher3:showAnimationBehavior}</code></td><td>The animation behavior to show the indicator and track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_showDelay com.android.launcher3:showDelay}</code></td><td>The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackColor com.android.launcher3:trackColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackCornerRadius com.android.launcher3:trackCornerRadius}</code></td><td>The radius of each corner of both the indicator and the track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackThickness com.android.launcher3:trackThickness}</code></td><td>The thickness of the progress track and indicator.</td></tr>
     * </table>
     * @see #BaseProgressIndicator_android_indeterminate
     * @see #BaseProgressIndicator_hideAnimationBehavior
     * @see #BaseProgressIndicator_indicatorColor
     * @see #BaseProgressIndicator_minHideDelay
     * @see #BaseProgressIndicator_showAnimationBehavior
     * @see #BaseProgressIndicator_showDelay
     * @see #BaseProgressIndicator_trackColor
     * @see #BaseProgressIndicator_trackCornerRadius
     * @see #BaseProgressIndicator_trackThickness
     */
    public static final int[] BaseProgressIndicator={
      0x01010139, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the progress indicator should be indeterminate mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:indeterminate
     */
    public static int BaseProgressIndicator_android_indeterminate=0;
    /**
     * <p>
     * @attr description
     * The animation behavior to hide the indicator and track.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Collapses from the top edge to the bottom edge for the linear type;
     * collapses from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; disappears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Collapses from the bottom edge to the top edge for the linear type;
     * collapses from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:hideAnimationBehavior
     */
    public static int BaseProgressIndicator_hideAnimationBehavior=1;
    /**
     * <p>
     * @attr description
     * The indicator color (or colors in an array). By default, it uses theme
     * primary color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:indicatorColor
     */
    public static int BaseProgressIndicator_indicatorColor=2;
    /**
     * <p>
     * @attr description
     * The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started. If set to zero or negative
     * values (-1 as default), the requested hide action will start immediately.
     * This value is capped to a limit defined in ProgressIndicator class.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:minHideDelay
     */
    public static int BaseProgressIndicator_minHideDelay=3;
    /**
     * <p>
     * @attr description
     * The animation behavior to show the indicator and track.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Expands from the top edge to the bottom edge for the linear type;
     * expands from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; appears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Expands from the bottom edge to the top edge for the linear type;
     * expands from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:showAnimationBehavior
     */
    public static int BaseProgressIndicator_showAnimationBehavior=4;
    /**
     * <p>
     * @attr description
     * The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called. If set to zero or negative values (-1 as default),
     * the show action will start immediately.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:showDelay
     */
    public static int BaseProgressIndicator_showDelay=5;
    /**
     * <p>
     * @attr description
     * The color used for the progress track. If not defined, it will be set to
     * the indicatorColor and apply the android:disabledAlpha from the theme.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:trackColor
     */
    public static int BaseProgressIndicator_trackColor=6;
    /**
     * <p>
     * @attr description
     * The radius of each corner of both the indicator and the track. A radius
     * larger than half of the track width will throw exceptions during
     * initialization.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:trackCornerRadius
     */
    public static int BaseProgressIndicator_trackCornerRadius=7;
    /**
     * <p>
     * @attr description
     * The thickness of the progress track and indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:trackThickness
     */
    public static int BaseProgressIndicator_trackThickness=8;
    /**
     * Attributes that can be used with a BottomAppBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomAppBar_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAlignmentMode com.android.launcher3:fabAlignmentMode}</code></td><td>The alignment of the fab relative to the BottomAppBar.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAnimationMode com.android.launcher3:fabAnimationMode}</code></td><td>The animation mode that should be used when the fab animates between alignment modes.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleMargin com.android.launcher3:fabCradleMargin}</code></td><td>The margin between the semi-circular cradle for the fab and the fab.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleRoundedCornerRadius com.android.launcher3:fabCradleRoundedCornerRadius}</code></td><td>The radius of the rounded corners on each side of the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleVerticalOffset com.android.launcher3:fabCradleVerticalOffset}</code></td><td>The vertical offset between the fab from the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_hideOnScroll com.android.launcher3:hideOnScroll}</code></td><td>Whether the BottomAppBar should hide when a NestedScrollView is scrolled.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingBottomSystemWindowInsets com.android.launcher3:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingLeftSystemWindowInsets com.android.launcher3:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingRightSystemWindowInsets com.android.launcher3:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * </table>
     * @see #BottomAppBar_backgroundTint
     * @see #BottomAppBar_elevation
     * @see #BottomAppBar_fabAlignmentMode
     * @see #BottomAppBar_fabAnimationMode
     * @see #BottomAppBar_fabCradleMargin
     * @see #BottomAppBar_fabCradleRoundedCornerRadius
     * @see #BottomAppBar_fabCradleVerticalOffset
     * @see #BottomAppBar_hideOnScroll
     * @see #BottomAppBar_paddingBottomSystemWindowInsets
     * @see #BottomAppBar_paddingLeftSystemWindowInsets
     * @see #BottomAppBar_paddingRightSystemWindowInsets
     */
    public static final int[] BottomAppBar={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Background for the BottomAppBar.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int BottomAppBar_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Elevation for the BottomAppBar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int BottomAppBar_elevation=1;
    /**
     * <p>
     * @attr description
     * The alignment of the fab relative to the BottomAppBar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fabAlignmentMode
     */
    public static int BottomAppBar_fabAlignmentMode=2;
    /**
     * <p>
     * @attr description
     * The animation mode that should be used when the fab animates between alignment modes.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fabAnimationMode
     */
    public static int BottomAppBar_fabAnimationMode=3;
    /**
     * <p>
     * @attr description
     * The margin between the semi-circular cradle for the fab and the fab.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:fabCradleMargin
     */
    public static int BottomAppBar_fabCradleMargin=4;
    /**
     * <p>
     * @attr description
     * The radius of the rounded corners on each side of the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:fabCradleRoundedCornerRadius
     */
    public static int BottomAppBar_fabCradleRoundedCornerRadius=5;
    /**
     * <p>
     * @attr description
     * The vertical offset between the fab from the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:fabCradleVerticalOffset
     */
    public static int BottomAppBar_fabCradleVerticalOffset=6;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:hideOnScroll
     */
    public static int BottomAppBar_hideOnScroll=7;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be above the bottom window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingBottomSystemWindowInsets
     */
    public static int BottomAppBar_paddingBottomSystemWindowInsets=8;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be to the right of the left window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingLeftSystemWindowInsets
     */
    public static int BottomAppBar_paddingLeftSystemWindowInsets=9;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be to the left of the right window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingRightSystemWindowInsets
     */
    public static int BottomAppBar_paddingRightSystemWindowInsets=10;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemHorizontalTranslationEnabled com.android.launcher3:itemHorizontalTranslationEnabled}</code></td><td>Whether the items translate horizontally when in "selected" label visibility mode.</td></tr>
     * </table>
     * @see #BottomNavigationView_itemHorizontalTranslationEnabled
     */
    public static final int[] BottomNavigationView={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the items translate horizontally when in "selected" label visibility mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:itemHorizontalTranslationEnabled
     */
    public static int BottomNavigationView_itemHorizontalTranslationEnabled=0;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_draggable com.android.launcher3:behavior_draggable}</code></td><td>Whether this bottom sheet is draggable.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_expandedOffset com.android.launcher3:behavior_expandedOffset}</code></td><td>The top offset of the BottomSheet in the expanded-state when fitsToContent is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_fitToContents com.android.launcher3:behavior_fitToContents}</code></td><td>Whether height of expanded sheet wraps content or not</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_halfExpandedRatio com.android.launcher3:behavior_halfExpandedRatio}</code></td><td>The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable com.android.launcher3:behavior_hideable}</code></td><td>Whether this bottom sheet can be hidden by dragging it further downwards</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight com.android.launcher3:behavior_peekHeight}</code></td><td>The height of the bottom sheet when it is collapsed.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_saveFlags com.android.launcher3:behavior_saveFlags}</code></td><td>Behavior properties will be saved and restored by evaluating each flag.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed com.android.launcher3:behavior_skipCollapsed}</code></td><td>Skip the collapsed state once expanded; no effect unless it is hideable</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_gestureInsetBottomIgnored com.android.launcher3:gestureInsetBottomIgnored}</code></td><td>Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets com.android.launcher3:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets com.android.launcher3:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingRightSystemWindowInsets com.android.launcher3:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingTopSystemWindowInsets com.android.launcher3:paddingTopSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_android_maxWidth
     * @see #BottomSheetBehavior_Layout_android_elevation
     * @see #BottomSheetBehavior_Layout_backgroundTint
     * @see #BottomSheetBehavior_Layout_behavior_draggable
     * @see #BottomSheetBehavior_Layout_behavior_expandedOffset
     * @see #BottomSheetBehavior_Layout_behavior_fitToContents
     * @see #BottomSheetBehavior_Layout_behavior_halfExpandedRatio
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_saveFlags
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     * @see #BottomSheetBehavior_Layout_gestureInsetBottomIgnored
     * @see #BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_paddingRightSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_paddingTopSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_shapeAppearance
     * @see #BottomSheetBehavior_Layout_shapeAppearanceOverlay
     */
    public static final int[] BottomSheetBehavior_Layout={
      0x0101011f, 0x01010440, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int BottomSheetBehavior_Layout_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int BottomSheetBehavior_Layout_android_elevation=1;
    /**
     * <p>
     * @attr description
     * Background color used by the BottomSheetBehavior background drawable when shape theming is
     * enabled. Accepts a ColorStateList or ColorInt. If shape theming is not enabled,
     * android:background should instead be utilized to set the background resource.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int BottomSheetBehavior_Layout_backgroundTint=2;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet is draggable. If not, the app will have to supply different
     * means to expand and collapse the sheet
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_draggable
     */
    public static int BottomSheetBehavior_Layout_behavior_draggable=3;
    /**
     * <p>
     * @attr description
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:behavior_expandedOffset
     */
    public static int BottomSheetBehavior_Layout_behavior_expandedOffset=4;
    /**
     * <p>
     * @attr description
     * Whether height of expanded sheet wraps content or not
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_fitToContents
     */
    public static int BottomSheetBehavior_Layout_behavior_fitToContents=5;
    /**
     * <p>
     * @attr description
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:behavior_halfExpandedRatio
     */
    public static int BottomSheetBehavior_Layout_behavior_halfExpandedRatio=6;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet can be hidden by dragging it further downwards
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_hideable
     */
    public static int BottomSheetBehavior_Layout_behavior_hideable=7;
    /**
     * <p>
     * @attr description
     * The height of the bottom sheet when it is collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:behavior_peekHeight
     */
    public static int BottomSheetBehavior_Layout_behavior_peekHeight=8;
    /**
     * <p>
     * @attr description
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:behavior_saveFlags
     */
    public static int BottomSheetBehavior_Layout_behavior_saveFlags=9;
    /**
     * <p>
     * @attr description
     * Skip the collapsed state once expanded; no effect unless it is hideable
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_skipCollapsed
     */
    public static int BottomSheetBehavior_Layout_behavior_skipCollapsed=10;
    /**
     * <p>
     * @attr description
     * Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above. Value is false (insets respected) by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:gestureInsetBottomIgnored
     */
    public static int BottomSheetBehavior_Layout_gestureInsetBottomIgnored=11;
    /**
     * <p>
     * @attr description
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingBottomSystemWindowInsets
     */
    public static int BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#paddingLeftSystemWindowInsets}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingLeftSystemWindowInsets
     */
    public static int BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#paddingRightSystemWindowInsets}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingRightSystemWindowInsets
     */
    public static int BottomSheetBehavior_Layout_paddingRightSystemWindowInsets=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#paddingTopSystemWindowInsets}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingTopSystemWindowInsets
     */
    public static int BottomSheetBehavior_Layout_paddingTopSystemWindowInsets=15;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for BottomSheet. Attribute declaration is in the shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int BottomSheetBehavior_Layout_shapeAppearance=16;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for BottomSheet. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int BottomSheetBehavior_Layout_shapeAppearanceOverlay=17;
    /**
     * BubbleTextView specific attributes.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BubbleTextView_centerVertically com.android.launcher3:centerVertically}</code></td><td></td></tr>
     * <tr><td><code>{@link #BubbleTextView_iconDisplay com.android.launcher3:iconDisplay}</code></td><td></td></tr>
     * <tr><td><code>{@link #BubbleTextView_iconSizeOverride com.android.launcher3:iconSizeOverride}</code></td><td></td></tr>
     * <tr><td><code>{@link #BubbleTextView_layoutHorizontal com.android.launcher3:layoutHorizontal}</code></td><td></td></tr>
     * </table>
     * @see #BubbleTextView_centerVertically
     * @see #BubbleTextView_iconDisplay
     * @see #BubbleTextView_iconSizeOverride
     * @see #BubbleTextView_layoutHorizontal
     */
    public static final int[] BubbleTextView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#centerVertically}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:centerVertically
     */
    public static int BubbleTextView_centerVertically=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconDisplay}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all_apps</td><td>1</td><td></td></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>search_result_small</td><td>7</td><td></td></tr>
     * <tr><td>search_result_tall</td><td>6</td><td></td></tr>
     * <tr><td>shortcut_popup</td><td>4</td><td></td></tr>
     * <tr><td>taskbar</td><td>5</td><td></td></tr>
     * <tr><td>widget_section</td><td>3</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:iconDisplay
     */
    public static int BubbleTextView_iconDisplay=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconSizeOverride}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconSizeOverride
     */
    public static int BubbleTextView_iconSizeOverride=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layoutHorizontal}
     * attribute's value can be found in the {@link #BubbleTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layoutHorizontal
     */
    public static int BubbleTextView_layoutHorizontal=3;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.launcher3:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:allowStacking
     */
    public static int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.android.launcher3:queryPatterns}</code></td><td>Resource reference to the string array of query patterns for a custom capability.</td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.android.launcher3:shortcutMatchRequired}</code></td><td>Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.</td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Resource reference to the string array of query patterns for a custom capability.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:queryPatterns
     */
    public static int Capability_queryPatterns=0;
    /**
     * <p>
     * @attr description
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:shortcutMatchRequired
     */
    public static int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.android.launcher3:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.android.launcher3:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.android.launcher3:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.android.launcher3:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.android.launcher3:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.android.launcher3:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.android.launcher3:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.android.launcher3:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.android.launcher3:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.android.launcher3:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.android.launcher3:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:cardBackgroundColor
     */
    public static int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:cardCornerRadius
     */
    public static int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:cardElevation
     */
    public static int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:cardMaxElevation
     */
    public static int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:cardPreventCornerOverlap
     */
    public static int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:cardUseCompatPadding
     */
    public static int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPadding
     */
    public static int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingBottom
     */
    public static int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingLeft
     */
    public static int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingRight
     */
    public static int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingTop
     */
    public static int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a CellLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CellLayout_containerType com.android.launcher3:containerType}</code></td><td></td></tr>
     * </table>
     * @see #CellLayout_containerType
     */
    public static final int[] CellLayout={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#containerType}
     * attribute's value can be found in the {@link #CellLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>folder</td><td>2</td><td></td></tr>
     * <tr><td>hotseat</td><td>1</td><td></td></tr>
     * <tr><td>workspace</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:containerType
     */
    public static int CellLayout_containerType=0;
    /**
     * Attributes that can be used with a CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.android.launcher3:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.android.launcher3:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.android.launcher3:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:disableDependentsState
     */
    public static int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summaryOff
     */
    public static int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summaryOn
     */
    public static int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a Chip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Chip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_ellipsize android:ellipsize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIcon com.android.launcher3:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconEnabled com.android.launcher3:checkedIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_checkedIconTint com.android.launcher3:checkedIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconVisible com.android.launcher3:checkedIconVisible}</code></td><td>Whether to show the checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipBackgroundColor com.android.launcher3:chipBackgroundColor}</code></td><td>Background color to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipCornerRadius com.android.launcher3:chipCornerRadius}</code></td><td>Corner radius to apply to the chip's shape.</td></tr>
     * <tr><td><code>{@link #Chip_chipEndPadding com.android.launcher3:chipEndPadding}</code></td><td>Padding at the end of the chip, after the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIcon com.android.launcher3:chipIcon}</code></td><td>Icon drawable to display at the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconEnabled com.android.launcher3:chipIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconSize com.android.launcher3:chipIconSize}</code></td><td>Size of the chip's icon and checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconTint com.android.launcher3:chipIconTint}</code></td><td>Tint to apply to the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconVisible com.android.launcher3:chipIconVisible}</code></td><td>Whether to show the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinHeight com.android.launcher3:chipMinHeight}</code></td><td>Min height to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinTouchTargetSize com.android.launcher3:chipMinTouchTargetSize}</code></td><td>Minimum size of chip's touch target, by default, Android recommended 48dp.</td></tr>
     * <tr><td><code>{@link #Chip_chipStartPadding com.android.launcher3:chipStartPadding}</code></td><td>Padding at the start of the chip, before the icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeColor com.android.launcher3:chipStrokeColor}</code></td><td>Stroke color to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeWidth com.android.launcher3:chipStrokeWidth}</code></td><td>Stroke width to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipSurfaceColor com.android.launcher3:chipSurfaceColor}</code></td><td>Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.</td></tr>
     * <tr><td><code>{@link #Chip_closeIcon com.android.launcher3:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEnabled com.android.launcher3:closeIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEndPadding com.android.launcher3:closeIconEndPadding}</code></td><td>Padding at the end of the close icon, before the end of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconSize com.android.launcher3:closeIconSize}</code></td><td>Size of the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconStartPadding com.android.launcher3:closeIconStartPadding}</code></td><td>Padding at the start of the close icon, after the text.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconTint com.android.launcher3:closeIconTint}</code></td><td>Tint to apply to the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconVisible com.android.launcher3:closeIconVisible}</code></td><td>Whether to show the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_ensureMinTouchTargetSize com.android.launcher3:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_hideMotionSpec com.android.launcher3:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconEndPadding com.android.launcher3:iconEndPadding}</code></td><td>Padding at the end of the icon, before the text.</td></tr>
     * <tr><td><code>{@link #Chip_iconStartPadding com.android.launcher3:iconStartPadding}</code></td><td>Padding at the start of the icon, after the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_rippleColor com.android.launcher3:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #Chip_showMotionSpec com.android.launcher3:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textEndPadding com.android.launcher3:textEndPadding}</code></td><td>Padding at the end of the text, before the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_textStartPadding com.android.launcher3:textStartPadding}</code></td><td>Padding at the start of the text, after the icon.</td></tr>
     * </table>
     * @see #Chip_android_textAppearance
     * @see #Chip_android_textSize
     * @see #Chip_android_textColor
     * @see #Chip_android_ellipsize
     * @see #Chip_android_maxWidth
     * @see #Chip_android_text
     * @see #Chip_android_checkable
     * @see #Chip_checkedIcon
     * @see #Chip_checkedIconEnabled
     * @see #Chip_checkedIconTint
     * @see #Chip_checkedIconVisible
     * @see #Chip_chipBackgroundColor
     * @see #Chip_chipCornerRadius
     * @see #Chip_chipEndPadding
     * @see #Chip_chipIcon
     * @see #Chip_chipIconEnabled
     * @see #Chip_chipIconSize
     * @see #Chip_chipIconTint
     * @see #Chip_chipIconVisible
     * @see #Chip_chipMinHeight
     * @see #Chip_chipMinTouchTargetSize
     * @see #Chip_chipStartPadding
     * @see #Chip_chipStrokeColor
     * @see #Chip_chipStrokeWidth
     * @see #Chip_chipSurfaceColor
     * @see #Chip_closeIcon
     * @see #Chip_closeIconEnabled
     * @see #Chip_closeIconEndPadding
     * @see #Chip_closeIconSize
     * @see #Chip_closeIconStartPadding
     * @see #Chip_closeIconTint
     * @see #Chip_closeIconVisible
     * @see #Chip_ensureMinTouchTargetSize
     * @see #Chip_hideMotionSpec
     * @see #Chip_iconEndPadding
     * @see #Chip_iconStartPadding
     * @see #Chip_rippleColor
     * @see #Chip_shapeAppearance
     * @see #Chip_shapeAppearanceOverlay
     * @see #Chip_showMotionSpec
     * @see #Chip_textEndPadding
     * @see #Chip_textStartPadding
     */
    public static final int[] Chip={
      0x01010034, 0x01010095, 0x01010098, 0x010100ab, 
      0x0101011f, 0x0101014f, 0x010101e5, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Default appearance of text: color, typeface, size, and style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static int Chip_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Text size. Overrides the size set in the textAppearance
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static int Chip_android_textSize=1;
    /**
     * <p>
     * @attr description
     * Text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static int Chip_android_textColor=2;
    /**
     * <p>
     * @attr description
     * If set, causes words that are longer than the view is wide to be ellipsized instead of
     * truncated at the end.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td></td></tr>
     * <tr><td>marquee</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:ellipsize
     */
    public static int Chip_android_ellipsize=3;
    /**
     * <p>
     * @attr description
     * Make the Chip to be at most this many pixels wide.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int Chip_android_maxWidth=4;
    /**
     * <p>
     * @attr description
     * Text to display on the chip.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static int Chip_android_text=5;
    /**
     * <p>
     * @attr description
     * Whether the chip can be checked. If false, the chip will act as a button.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static int Chip_android_checkable=6;
    /**
     * <p>
     * @attr description
     * Check icon drawable to overlay the chip's icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkedIcon
     */
    public static int Chip_checkedIcon=7;
    /**
     * <p>
     * @attr description
     * Deprecated. Use checkedIconVisible instead
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:checkedIconEnabled
     */
    public static int Chip_checkedIconEnabled=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:checkedIconTint
     */
    public static int Chip_checkedIconTint=9;
    /**
     * <p>
     * @attr description
     * Whether to show the checked icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:checkedIconVisible
     */
    public static int Chip_checkedIconVisible=10;
    /**
     * <p>
     * @attr description
     * Background color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:chipBackgroundColor
     */
    public static int Chip_chipBackgroundColor=11;
    /**
     * <p>
     * @attr description
     * Corner radius to apply to the chip's shape.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipCornerRadius
     */
    public static int Chip_chipCornerRadius=12;
    /**
     * <p>
     * @attr description
     * Padding at the end of the chip, after the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipEndPadding
     */
    public static int Chip_chipEndPadding=13;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:chipIcon
     */
    public static int Chip_chipIcon=14;
    /**
     * <p>
     * @attr description
     * Deprecated. Use chipIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:chipIconEnabled
     */
    public static int Chip_chipIconEnabled=15;
    /**
     * <p>
     * @attr description
     * Size of the chip's icon and checked icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipIconSize
     */
    public static int Chip_chipIconSize=16;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:chipIconTint
     */
    public static int Chip_chipIconTint=17;
    /**
     * <p>
     * @attr description
     * Whether to show the chip icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:chipIconVisible
     */
    public static int Chip_chipIconVisible=18;
    /**
     * <p>
     * @attr description
     * Min height to apply to the chip. Total height includes stroke width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipMinHeight
     */
    public static int Chip_chipMinHeight=19;
    /**
     * <p>
     * @attr description
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipMinTouchTargetSize
     */
    public static int Chip_chipMinTouchTargetSize=20;
    /**
     * <p>
     * @attr description
     * Padding at the start of the chip, before the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipStartPadding
     */
    public static int Chip_chipStartPadding=21;
    /**
     * <p>
     * @attr description
     * Stroke color to apply to the chip's outline.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:chipStrokeColor
     */
    public static int Chip_chipStrokeColor=22;
    /**
     * <p>
     * @attr description
     * Stroke width to apply to the chip's outline.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipStrokeWidth
     */
    public static int Chip_chipStrokeWidth=23;
    /**
     * <p>
     * @attr description
     * Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:chipSurfaceColor
     */
    public static int Chip_chipSurfaceColor=24;
    /**
     * <p>
     * @attr description
     * Close icon drawable to display at the end of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:closeIcon
     */
    public static int Chip_closeIcon=25;
    /**
     * <p>
     * @attr description
     * Deprecated. Use closeIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:closeIconEnabled
     */
    public static int Chip_closeIconEnabled=26;
    /**
     * <p>
     * @attr description
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:closeIconEndPadding
     */
    public static int Chip_closeIconEndPadding=27;
    /**
     * <p>
     * @attr description
     * Size of the chip's close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:closeIconSize
     */
    public static int Chip_closeIconSize=28;
    /**
     * <p>
     * @attr description
     * Padding at the start of the close icon, after the text. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:closeIconStartPadding
     */
    public static int Chip_closeIconStartPadding=29;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's close icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:closeIconTint
     */
    public static int Chip_closeIconTint=30;
    /**
     * <p>
     * @attr description
     * Whether to show the close icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:closeIconVisible
     */
    public static int Chip_closeIconVisible=31;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of chip to meet chipMinTouchTargetSize.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:ensureMinTouchTargetSize
     */
    public static int Chip_ensureMinTouchTargetSize=32;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:hideMotionSpec
     */
    public static int Chip_hideMotionSpec=33;
    /**
     * <p>
     * @attr description
     * Padding at the end of the icon, before the text. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconEndPadding
     */
    public static int Chip_iconEndPadding=34;
    /**
     * <p>
     * @attr description
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconStartPadding
     */
    public static int Chip_iconStartPadding=35;
    /**
     * <p>
     * @attr description
     * Ripple color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:rippleColor
     */
    public static int Chip_rippleColor=36;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for Chip. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int Chip_shapeAppearance=37;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for Chip. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int Chip_shapeAppearanceOverlay=38;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:showMotionSpec
     */
    public static int Chip_showMotionSpec=39;
    /**
     * <p>
     * @attr description
     * Padding at the end of the text, before the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:textEndPadding
     */
    public static int Chip_textEndPadding=40;
    /**
     * <p>
     * @attr description
     * Padding at the start of the text, after the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:textStartPadding
     */
    public static int Chip_textStartPadding=41;
    /**
     * Attributes that can be used with a ChipGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChipGroup_checkedChip com.android.launcher3:checkedChip}</code></td><td>The id of the child chip that should be checked by default within this chip group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacing com.android.launcher3:chipSpacing}</code></td><td>Horizontal and vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingHorizontal com.android.launcher3:chipSpacingHorizontal}</code></td><td>Horizontal spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingVertical com.android.launcher3:chipSpacingVertical}</code></td><td>Vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_selectionRequired com.android.launcher3:selectionRequired}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleLine com.android.launcher3:singleLine}</code></td><td>Constrains the chips in this group to a single horizontal line.</td></tr>
     * <tr><td><code>{@link #ChipGroup_singleSelection com.android.launcher3:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #ChipGroup_checkedChip
     * @see #ChipGroup_chipSpacing
     * @see #ChipGroup_chipSpacingHorizontal
     * @see #ChipGroup_chipSpacingVertical
     * @see #ChipGroup_selectionRequired
     * @see #ChipGroup_singleLine
     * @see #ChipGroup_singleSelection
     */
    public static final int[] ChipGroup={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The id of the child chip that should be checked by default within this chip group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkedChip
     */
    public static int ChipGroup_checkedChip=0;
    /**
     * <p>
     * @attr description
     * Horizontal and vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipSpacing
     */
    public static int ChipGroup_chipSpacing=1;
    /**
     * <p>
     * @attr description
     * Horizontal spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipSpacingHorizontal
     */
    public static int ChipGroup_chipSpacingHorizontal=2;
    /**
     * <p>
     * @attr description
     * Vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:chipSpacingVertical
     */
    public static int ChipGroup_chipSpacingVertical=3;
    /**
     * <p>
     * @attr description
     * Whether we prevent all child chips from being deselected.
     * It's false by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:selectionRequired
     */
    public static int ChipGroup_selectionRequired=4;
    /**
     * <p>
     * @attr description
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:singleLine
     */
    public static int ChipGroup_singleLine=5;
    /**
     * <p>
     * @attr description
     * Whether only a single chip in this group is allowed to be checked at any time. By default,
     * this is false and multiple chips in this group are allowed to be checked at once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:singleSelection
     */
    public static int ChipGroup_singleSelection=6;
    /**
     * Attributes that can be used with a CircularProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorDirectionCircular com.android.launcher3:indicatorDirectionCircular}</code></td><td>The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.</td></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorInset com.android.launcher3:indicatorInset}</code></td><td>The extra space from the outer edge of the indicator to the edge of the
     * canvas.</td></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorSize com.android.launcher3:indicatorSize}</code></td><td>Defines the size (outer diameter) of the circular progress indicator.</td></tr>
     * </table>
     * @see #CircularProgressIndicator_indicatorDirectionCircular
     * @see #CircularProgressIndicator_indicatorInset
     * @see #CircularProgressIndicator_indicatorSize
     */
    public static final int[] CircularProgressIndicator={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clockwise</td><td>0</td><td>In the indeterminate mode, the spinner will spin clockwise; in the
     * determinate mode, the indicator will progress from the top (12 o'clock)
     * clockwise.</td></tr>
     * <tr><td>counterclockwise</td><td>1</td><td>In the indeterminate mode, the spinner will spin counter-clockwise; in
     * the determinate mode, the indicator will progress from the top (12
     * o'clock) counter-clockwise.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:indicatorDirectionCircular
     */
    public static int CircularProgressIndicator_indicatorDirectionCircular=0;
    /**
     * <p>
     * @attr description
     * The extra space from the outer edge of the indicator to the edge of the
     * canvas. Ignored for linear progress indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:indicatorInset
     */
    public static int CircularProgressIndicator_indicatorInset=1;
    /**
     * <p>
     * @attr description
     * Defines the size (outer diameter) of the circular progress indicator. This
     * uses the central line of the indicator as reference. Ignored for linear
     * progress indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:indicatorSize
     */
    public static int CircularProgressIndicator_indicatorSize=2;
    /**
     * Attributes that can be used with a ClockFaceView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ClockFaceView_clockFaceBackgroundColor com.android.launcher3:clockFaceBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockFaceView_clockNumberTextColor com.android.launcher3:clockNumberTextColor}</code></td><td></td></tr>
     * </table>
     * @see #ClockFaceView_clockFaceBackgroundColor
     * @see #ClockFaceView_clockNumberTextColor
     */
    public static final int[] ClockFaceView={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#clockFaceBackgroundColor}
     * attribute's value can be found in the {@link #ClockFaceView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:clockFaceBackgroundColor
     */
    public static int ClockFaceView_clockFaceBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#clockNumberTextColor}
     * attribute's value can be found in the {@link #ClockFaceView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:clockNumberTextColor
     */
    public static int ClockFaceView_clockNumberTextColor=1;
    /**
     * Attributes that can be used with a ClockHandView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ClockHandView_clockHandColor com.android.launcher3:clockHandColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockHandView_materialCircleRadius com.android.launcher3:materialCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockHandView_selectorSize com.android.launcher3:selectorSize}</code></td><td></td></tr>
     * </table>
     * @see #ClockHandView_clockHandColor
     * @see #ClockHandView_materialCircleRadius
     * @see #ClockHandView_selectorSize
     */
    public static final int[] ClockHandView={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#clockHandColor}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:clockHandColor
     */
    public static int ClockHandView_clockHandColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#materialCircleRadius}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:materialCircleRadius
     */
    public static int ClockHandView_materialCircleRadius=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#selectorSize}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:selectorSize
     */
    public static int ClockHandView_selectorSize=2;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity com.android.launcher3:collapsedTitleGravity}</code></td><td>Specifies how the title should be positioned when collapsed.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance com.android.launcher3:collapsedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim com.android.launcher3:contentScrim}</code></td><td>The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity com.android.launcher3:expandedTitleGravity}</code></td><td>Specifies how the title should be positioned when expanded.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin com.android.launcher3:expandedTitleMargin}</code></td><td>Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom com.android.launcher3:expandedTitleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd com.android.launcher3:expandedTitleMarginEnd}</code></td><td>Specifies extra space on the end side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart com.android.launcher3:expandedTitleMarginStart}</code></td><td>Specifies extra space on the start side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop com.android.launcher3:expandedTitleMarginTop}</code></td><td>Specifies extra space on the top side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance com.android.launcher3:expandedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_extraMultilineHeightEnabled com.android.launcher3:extraMultilineHeightEnabled}</code></td><td>Whether extra height should be added when the title text spans across
     * multiple lines.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_forceApplySystemWindowInsetTop com.android.launcher3:forceApplySystemWindowInsetTop}</code></td><td>Whether the system window inset top should be applied regardless of
     * what the layout_height is set to.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_maxLines com.android.launcher3:maxLines}</code></td><td>The maximum number of lines to display in the expanded state.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration com.android.launcher3:scrimAnimationDuration}</code></td><td>Specifies the duration used for scrim visibility animations.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger com.android.launcher3:scrimVisibleHeightTrigger}</code></td><td>Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim com.android.launcher3:statusBarScrim}</code></td><td>The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title com.android.launcher3:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleCollapseMode com.android.launcher3:titleCollapseMode}</code></td><td>Mode to specify the effect used to collapse and expand the title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled com.android.launcher3:titleEnabled}</code></td><td>Whether the CollapsingToolbarLayout should draw its own collapsing title.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId com.android.launcher3:toolbarId}</code></td><td>The id of the primary Toolbar child that you wish to use for the purpose of collapsing.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_extraMultilineHeightEnabled
     * @see #CollapsingToolbarLayout_forceApplySystemWindowInsetTop
     * @see #CollapsingToolbarLayout_maxLines
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleCollapseMode
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when collapsed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:collapsedTitleGravity
     */
    public static int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:collapsedTitleTextAppearance
     */
    public static int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:contentScrim
     */
    public static int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when expanded.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:expandedTitleGravity
     */
    public static int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:expandedTitleMargin
     */
    public static int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:expandedTitleMarginBottom
     */
    public static int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:expandedTitleMarginEnd
     */
    public static int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:expandedTitleMarginStart
     */
    public static int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:expandedTitleMarginTop
     */
    public static int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:expandedTitleTextAppearance
     */
    public static int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>
     * @attr description
     * Whether extra height should be added when the title text spans across
     * multiple lines. Experimental Feature.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:extraMultilineHeightEnabled
     */
    public static int CollapsingToolbarLayout_extraMultilineHeightEnabled=10;
    /**
     * <p>
     * @attr description
     * Whether the system window inset top should be applied regardless of
     * what the layout_height is set to. Experimental Feature.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:forceApplySystemWindowInsetTop
     */
    public static int CollapsingToolbarLayout_forceApplySystemWindowInsetTop=11;
    /**
     * <p>
     * @attr description
     * The maximum number of lines to display in the expanded state. Experimental Feature.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:maxLines
     */
    public static int CollapsingToolbarLayout_maxLines=12;
    /**
     * <p>
     * @attr description
     * Specifies the duration used for scrim visibility animations.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:scrimAnimationDuration
     */
    public static int CollapsingToolbarLayout_scrimAnimationDuration=13;
    /**
     * <p>
     * @attr description
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:scrimVisibleHeightTrigger
     */
    public static int CollapsingToolbarLayout_scrimVisibleHeightTrigger=14;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:statusBarScrim
     */
    public static int CollapsingToolbarLayout_statusBarScrim=15;
    /**
     * <p>
     * @attr description
     * The title to show when titleEnabled is set to true.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:title
     */
    public static int CollapsingToolbarLayout_title=16;
    /**
     * <p>
     * @attr description
     * Mode to specify the effect used to collapse and expand the title text.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>The expanded title will fade out and translate, and the collapsed title will fade in.</td></tr>
     * <tr><td>scale</td><td>0</td><td>The expanded title will continuously scale and translate to its final collapsed position.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:titleCollapseMode
     */
    public static int CollapsingToolbarLayout_titleCollapseMode=17;
    /**
     * <p>
     * @attr description
     * Whether the CollapsingToolbarLayout should draw its own collapsing title.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:titleEnabled
     */
    public static int CollapsingToolbarLayout_titleEnabled=18;
    /**
     * <p>
     * @attr description
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:toolbarId
     */
    public static int CollapsingToolbarLayout_toolbarId=19;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode com.android.launcher3:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier com.android.launcher3:layout_collapseParallaxMultiplier}</code></td><td>The multiplier used when layout_collapseMode is set to 'parallax'.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_collapseMode
     */
    public static int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>
     * @attr description
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_collapseParallaxMultiplier
     */
    public static int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.launcher3:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:alpha
     */
    public static int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.android.launcher3:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.launcher3:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.launcher3:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:buttonCompat
     */
    public static int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:buttonTint
     */
    public static int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:buttonTintMode
     */
    public static int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a Constraint.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Constraint_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_pivotX android:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_pivotY android:pivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_animate_relativeTo com.android.launcher3:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierAllowsGoneWidgets com.android.launcher3:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierDirection com.android.launcher3:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierMargin com.android.launcher3:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_chainUseRtl com.android.launcher3:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_constraint_referenced_ids com.android.launcher3:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_drawPath com.android.launcher3:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstHorizontalBias com.android.launcher3:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstHorizontalStyle com.android.launcher3:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstVerticalBias com.android.launcher3:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstVerticalStyle com.android.launcher3:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalAlign com.android.launcher3:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalBias com.android.launcher3:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalGap com.android.launcher3:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalStyle com.android.launcher3:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastHorizontalBias com.android.launcher3:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastHorizontalStyle com.android.launcher3:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastVerticalBias com.android.launcher3:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastVerticalStyle com.android.launcher3:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_maxElementsWrap com.android.launcher3:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalAlign com.android.launcher3:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalBias com.android.launcher3:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalGap com.android.launcher3:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalStyle com.android.launcher3:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_wrapMode com.android.launcher3:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constrainedHeight com.android.launcher3:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constrainedWidth com.android.launcher3:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBaseline_creator com.android.launcher3:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBaseline_toBaselineOf com.android.launcher3:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_creator com.android.launcher3:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_toBottomOf com.android.launcher3:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_toTopOf com.android.launcher3:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircle com.android.launcher3:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircleAngle com.android.launcher3:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircleRadius com.android.launcher3:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintDimensionRatio com.android.launcher3:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintEnd_toEndOf com.android.launcher3:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintEnd_toStartOf com.android.launcher3:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_begin com.android.launcher3:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_end com.android.launcher3:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_percent com.android.launcher3:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_default com.android.launcher3:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_max com.android.launcher3:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_min com.android.launcher3:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_percent com.android.launcher3:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_bias com.android.launcher3:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_chainStyle com.android.launcher3:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_weight com.android.launcher3:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_creator com.android.launcher3:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_toLeftOf com.android.launcher3:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_toRightOf com.android.launcher3:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_creator com.android.launcher3:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_toLeftOf com.android.launcher3:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_toRightOf com.android.launcher3:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintStart_toEndOf com.android.launcher3:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintStart_toStartOf com.android.launcher3:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTag com.android.launcher3:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_creator com.android.launcher3:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_toBottomOf com.android.launcher3:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_toTopOf com.android.launcher3:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_bias com.android.launcher3:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_chainStyle com.android.launcher3:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_weight com.android.launcher3:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_default com.android.launcher3:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_max com.android.launcher3:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_min com.android.launcher3:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_percent com.android.launcher3:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_editor_absoluteX com.android.launcher3:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_editor_absoluteY com.android.launcher3:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginBottom com.android.launcher3:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginEnd com.android.launcher3:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginLeft com.android.launcher3:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginRight com.android.launcher3:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginStart com.android.launcher3:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginTop com.android.launcher3:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_motionStagger com.android.launcher3:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_pathMotionArc com.android.launcher3:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_pivotAnchor com.android.launcher3:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_progress com.android.launcher3:progress}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_transitionPathRotate com.android.launcher3:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_visibilityMode com.android.launcher3:visibilityMode}</code></td><td></td></tr>
     * </table>
     * @see #Constraint_android_orientation
     * @see #Constraint_android_id
     * @see #Constraint_android_visibility
     * @see #Constraint_android_layout_width
     * @see #Constraint_android_layout_height
     * @see #Constraint_android_layout_marginLeft
     * @see #Constraint_android_layout_marginTop
     * @see #Constraint_android_layout_marginRight
     * @see #Constraint_android_layout_marginBottom
     * @see #Constraint_android_maxWidth
     * @see #Constraint_android_maxHeight
     * @see #Constraint_android_minWidth
     * @see #Constraint_android_minHeight
     * @see #Constraint_android_pivotX
     * @see #Constraint_android_pivotY
     * @see #Constraint_android_alpha
     * @see #Constraint_android_transformPivotX
     * @see #Constraint_android_transformPivotY
     * @see #Constraint_android_translationX
     * @see #Constraint_android_translationY
     * @see #Constraint_android_scaleX
     * @see #Constraint_android_scaleY
     * @see #Constraint_android_rotation
     * @see #Constraint_android_rotationX
     * @see #Constraint_android_rotationY
     * @see #Constraint_android_layout_marginStart
     * @see #Constraint_android_layout_marginEnd
     * @see #Constraint_android_translationZ
     * @see #Constraint_android_elevation
     * @see #Constraint_animate_relativeTo
     * @see #Constraint_barrierAllowsGoneWidgets
     * @see #Constraint_barrierDirection
     * @see #Constraint_barrierMargin
     * @see #Constraint_chainUseRtl
     * @see #Constraint_constraint_referenced_ids
     * @see #Constraint_drawPath
     * @see #Constraint_flow_firstHorizontalBias
     * @see #Constraint_flow_firstHorizontalStyle
     * @see #Constraint_flow_firstVerticalBias
     * @see #Constraint_flow_firstVerticalStyle
     * @see #Constraint_flow_horizontalAlign
     * @see #Constraint_flow_horizontalBias
     * @see #Constraint_flow_horizontalGap
     * @see #Constraint_flow_horizontalStyle
     * @see #Constraint_flow_lastHorizontalBias
     * @see #Constraint_flow_lastHorizontalStyle
     * @see #Constraint_flow_lastVerticalBias
     * @see #Constraint_flow_lastVerticalStyle
     * @see #Constraint_flow_maxElementsWrap
     * @see #Constraint_flow_verticalAlign
     * @see #Constraint_flow_verticalBias
     * @see #Constraint_flow_verticalGap
     * @see #Constraint_flow_verticalStyle
     * @see #Constraint_flow_wrapMode
     * @see #Constraint_layout_constrainedHeight
     * @see #Constraint_layout_constrainedWidth
     * @see #Constraint_layout_constraintBaseline_creator
     * @see #Constraint_layout_constraintBaseline_toBaselineOf
     * @see #Constraint_layout_constraintBottom_creator
     * @see #Constraint_layout_constraintBottom_toBottomOf
     * @see #Constraint_layout_constraintBottom_toTopOf
     * @see #Constraint_layout_constraintCircle
     * @see #Constraint_layout_constraintCircleAngle
     * @see #Constraint_layout_constraintCircleRadius
     * @see #Constraint_layout_constraintDimensionRatio
     * @see #Constraint_layout_constraintEnd_toEndOf
     * @see #Constraint_layout_constraintEnd_toStartOf
     * @see #Constraint_layout_constraintGuide_begin
     * @see #Constraint_layout_constraintGuide_end
     * @see #Constraint_layout_constraintGuide_percent
     * @see #Constraint_layout_constraintHeight_default
     * @see #Constraint_layout_constraintHeight_max
     * @see #Constraint_layout_constraintHeight_min
     * @see #Constraint_layout_constraintHeight_percent
     * @see #Constraint_layout_constraintHorizontal_bias
     * @see #Constraint_layout_constraintHorizontal_chainStyle
     * @see #Constraint_layout_constraintHorizontal_weight
     * @see #Constraint_layout_constraintLeft_creator
     * @see #Constraint_layout_constraintLeft_toLeftOf
     * @see #Constraint_layout_constraintLeft_toRightOf
     * @see #Constraint_layout_constraintRight_creator
     * @see #Constraint_layout_constraintRight_toLeftOf
     * @see #Constraint_layout_constraintRight_toRightOf
     * @see #Constraint_layout_constraintStart_toEndOf
     * @see #Constraint_layout_constraintStart_toStartOf
     * @see #Constraint_layout_constraintTag
     * @see #Constraint_layout_constraintTop_creator
     * @see #Constraint_layout_constraintTop_toBottomOf
     * @see #Constraint_layout_constraintTop_toTopOf
     * @see #Constraint_layout_constraintVertical_bias
     * @see #Constraint_layout_constraintVertical_chainStyle
     * @see #Constraint_layout_constraintVertical_weight
     * @see #Constraint_layout_constraintWidth_default
     * @see #Constraint_layout_constraintWidth_max
     * @see #Constraint_layout_constraintWidth_min
     * @see #Constraint_layout_constraintWidth_percent
     * @see #Constraint_layout_editor_absoluteX
     * @see #Constraint_layout_editor_absoluteY
     * @see #Constraint_layout_goneMarginBottom
     * @see #Constraint_layout_goneMarginEnd
     * @see #Constraint_layout_goneMarginLeft
     * @see #Constraint_layout_goneMarginRight
     * @see #Constraint_layout_goneMarginStart
     * @see #Constraint_layout_goneMarginTop
     * @see #Constraint_motionStagger
     * @see #Constraint_pathMotionArc
     * @see #Constraint_pivotAnchor
     * @see #Constraint_progress
     * @see #Constraint_transitionEasing
     * @see #Constraint_transitionPathRotate
     * @see #Constraint_visibilityMode
     */
    public static final int[] Constraint={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x010101b5, 0x010101b6, 0x0101031f, 
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103b5, 0x010103b6, 0x010103fa, 
      0x01010440, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int Constraint_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int Constraint_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static int Constraint_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static int Constraint_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static int Constraint_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static int Constraint_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static int Constraint_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static int Constraint_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static int Constraint_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int Constraint_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static int Constraint_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int Constraint_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static int Constraint_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotX
     */
    public static int Constraint_android_pivotX=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotY
     */
    public static int Constraint_android_pivotY=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int Constraint_android_alpha=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static int Constraint_android_transformPivotX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static int Constraint_android_transformPivotY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static int Constraint_android_translationX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static int Constraint_android_translationY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static int Constraint_android_scaleX=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static int Constraint_android_scaleY=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static int Constraint_android_rotation=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static int Constraint_android_rotationX=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static int Constraint_android_rotationY=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static int Constraint_android_layout_marginStart=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static int Constraint_android_layout_marginEnd=26;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static int Constraint_android_translationZ=27;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int Constraint_android_elevation=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:animate_relativeTo
     */
    public static int Constraint_animate_relativeTo=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:barrierAllowsGoneWidgets
     */
    public static int Constraint_barrierAllowsGoneWidgets=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:barrierDirection
     */
    public static int Constraint_barrierDirection=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:barrierMargin
     */
    public static int Constraint_barrierMargin=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:chainUseRtl
     */
    public static int Constraint_chainUseRtl=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:constraint_referenced_ids
     */
    public static int Constraint_constraint_referenced_ids=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawPath}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:drawPath
     */
    public static int Constraint_drawPath=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_firstHorizontalBias
     */
    public static int Constraint_flow_firstHorizontalBias=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_firstHorizontalStyle
     */
    public static int Constraint_flow_firstHorizontalStyle=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_firstVerticalBias
     */
    public static int Constraint_flow_firstVerticalBias=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_firstVerticalStyle
     */
    public static int Constraint_flow_firstVerticalStyle=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_horizontalAlign
     */
    public static int Constraint_flow_horizontalAlign=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_horizontalBias
     */
    public static int Constraint_flow_horizontalBias=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:flow_horizontalGap
     */
    public static int Constraint_flow_horizontalGap=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_horizontalStyle
     */
    public static int Constraint_flow_horizontalStyle=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_lastHorizontalBias
     */
    public static int Constraint_flow_lastHorizontalBias=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_lastHorizontalStyle
     */
    public static int Constraint_flow_lastHorizontalStyle=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_lastVerticalBias
     */
    public static int Constraint_flow_lastVerticalBias=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_lastVerticalStyle
     */
    public static int Constraint_flow_lastVerticalStyle=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:flow_maxElementsWrap
     */
    public static int Constraint_flow_maxElementsWrap=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_verticalAlign
     */
    public static int Constraint_flow_verticalAlign=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_verticalBias
     */
    public static int Constraint_flow_verticalBias=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:flow_verticalGap
     */
    public static int Constraint_flow_verticalGap=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_verticalStyle
     */
    public static int Constraint_flow_verticalStyle=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_wrapMode
     */
    public static int Constraint_flow_wrapMode=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedHeight
     */
    public static int Constraint_layout_constrainedHeight=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedWidth
     */
    public static int Constraint_layout_constrainedWidth=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_creator
     */
    public static int Constraint_layout_constraintBaseline_creator=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_toBaselineOf
     */
    public static int Constraint_layout_constraintBaseline_toBaselineOf=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBottom_creator
     */
    public static int Constraint_layout_constraintBottom_creator=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toBottomOf
     */
    public static int Constraint_layout_constraintBottom_toBottomOf=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toTopOf
     */
    public static int Constraint_layout_constraintBottom_toTopOf=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircle
     */
    public static int Constraint_layout_constraintCircle=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircleAngle
     */
    public static int Constraint_layout_constraintCircleAngle=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintCircleRadius
     */
    public static int Constraint_layout_constraintCircleRadius=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintDimensionRatio
     */
    public static int Constraint_layout_constraintDimensionRatio=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toEndOf
     */
    public static int Constraint_layout_constraintEnd_toEndOf=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toStartOf
     */
    public static int Constraint_layout_constraintEnd_toStartOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_begin
     */
    public static int Constraint_layout_constraintGuide_begin=67;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_end
     */
    public static int Constraint_layout_constraintGuide_end=68;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintGuide_percent
     */
    public static int Constraint_layout_constraintGuide_percent=69;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_default
     */
    public static int Constraint_layout_constraintHeight_default=70;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_max
     */
    public static int Constraint_layout_constraintHeight_max=71;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_min
     */
    public static int Constraint_layout_constraintHeight_min=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHeight_percent
     */
    public static int Constraint_layout_constraintHeight_percent=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_bias
     */
    public static int Constraint_layout_constraintHorizontal_bias=74;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_chainStyle
     */
    public static int Constraint_layout_constraintHorizontal_chainStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_weight
     */
    public static int Constraint_layout_constraintHorizontal_weight=76;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintLeft_creator
     */
    public static int Constraint_layout_constraintLeft_creator=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toLeftOf
     */
    public static int Constraint_layout_constraintLeft_toLeftOf=78;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toRightOf
     */
    public static int Constraint_layout_constraintLeft_toRightOf=79;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintRight_creator
     */
    public static int Constraint_layout_constraintRight_creator=80;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toLeftOf
     */
    public static int Constraint_layout_constraintRight_toLeftOf=81;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toRightOf
     */
    public static int Constraint_layout_constraintRight_toRightOf=82;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toEndOf
     */
    public static int Constraint_layout_constraintStart_toEndOf=83;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toStartOf
     */
    public static int Constraint_layout_constraintStart_toStartOf=84;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintTag
     */
    public static int Constraint_layout_constraintTag=85;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintTop_creator
     */
    public static int Constraint_layout_constraintTop_creator=86;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toBottomOf
     */
    public static int Constraint_layout_constraintTop_toBottomOf=87;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toTopOf
     */
    public static int Constraint_layout_constraintTop_toTopOf=88;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_bias
     */
    public static int Constraint_layout_constraintVertical_bias=89;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintVertical_chainStyle
     */
    public static int Constraint_layout_constraintVertical_chainStyle=90;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_weight
     */
    public static int Constraint_layout_constraintVertical_weight=91;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_default
     */
    public static int Constraint_layout_constraintWidth_default=92;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_max
     */
    public static int Constraint_layout_constraintWidth_max=93;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_min
     */
    public static int Constraint_layout_constraintWidth_min=94;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintWidth_percent
     */
    public static int Constraint_layout_constraintWidth_percent=95;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteX
     */
    public static int Constraint_layout_editor_absoluteX=96;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteY
     */
    public static int Constraint_layout_editor_absoluteY=97;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginBottom
     */
    public static int Constraint_layout_goneMarginBottom=98;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginEnd
     */
    public static int Constraint_layout_goneMarginEnd=99;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginLeft
     */
    public static int Constraint_layout_goneMarginLeft=100;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginRight
     */
    public static int Constraint_layout_goneMarginRight=101;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginStart
     */
    public static int Constraint_layout_goneMarginStart=102;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginTop
     */
    public static int Constraint_layout_goneMarginTop=103;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionStagger}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionStagger
     */
    public static int Constraint_motionStagger=104;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pathMotionArc
     */
    public static int Constraint_pathMotionArc=105;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pivotAnchor
     */
    public static int Constraint_pivotAnchor=106;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#progress}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:progress
     */
    public static int Constraint_progress=107;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int Constraint_transitionEasing=108;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:transitionPathRotate
     */
    public static int Constraint_transitionPathRotate=109;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#visibilityMode}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:visibilityMode
     */
    public static int Constraint_visibilityMode=110;
    /**
     * Attributes that can be used with a ConstraintLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_padding android:padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingLeft android:paddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingTop android:paddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingRight android:paddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingBottom android:paddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingStart android:paddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingEnd android:paddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierAllowsGoneWidgets com.android.launcher3:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierDirection com.android.launcher3:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierMargin com.android.launcher3:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_chainUseRtl com.android.launcher3:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraintSet com.android.launcher3:constraintSet}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraint_referenced_ids com.android.launcher3:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstHorizontalBias com.android.launcher3:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstHorizontalStyle com.android.launcher3:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstVerticalBias com.android.launcher3:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstVerticalStyle com.android.launcher3:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalAlign com.android.launcher3:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalBias com.android.launcher3:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalGap com.android.launcher3:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalStyle com.android.launcher3:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastHorizontalBias com.android.launcher3:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastHorizontalStyle com.android.launcher3:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastVerticalBias com.android.launcher3:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastVerticalStyle com.android.launcher3:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_maxElementsWrap com.android.launcher3:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalAlign com.android.launcher3:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalBias com.android.launcher3:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalGap com.android.launcher3:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalStyle com.android.launcher3:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_wrapMode com.android.launcher3:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layoutDescription com.android.launcher3:layoutDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedHeight com.android.launcher3:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedWidth com.android.launcher3:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_creator com.android.launcher3:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf com.android.launcher3:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_creator com.android.launcher3:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf com.android.launcher3:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toTopOf com.android.launcher3:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircle com.android.launcher3:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleAngle com.android.launcher3:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleRadius com.android.launcher3:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintDimensionRatio com.android.launcher3:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toEndOf com.android.launcher3:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toStartOf com.android.launcher3:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_begin com.android.launcher3:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_end com.android.launcher3:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_percent com.android.launcher3:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_default com.android.launcher3:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_max com.android.launcher3:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_min com.android.launcher3:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_percent com.android.launcher3:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_bias com.android.launcher3:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle com.android.launcher3:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_weight com.android.launcher3:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_creator com.android.launcher3:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf com.android.launcher3:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toRightOf com.android.launcher3:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_creator com.android.launcher3:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toLeftOf com.android.launcher3:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toRightOf com.android.launcher3:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toEndOf com.android.launcher3:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toStartOf com.android.launcher3:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTag com.android.launcher3:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_creator com.android.launcher3:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toBottomOf com.android.launcher3:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toTopOf com.android.launcher3:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_bias com.android.launcher3:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_chainStyle com.android.launcher3:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_weight com.android.launcher3:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_default com.android.launcher3:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_max com.android.launcher3:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_min com.android.launcher3:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_percent com.android.launcher3:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteX com.android.launcher3:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteY com.android.launcher3:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginBottom com.android.launcher3:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginEnd com.android.launcher3:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginLeft com.android.launcher3:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginRight com.android.launcher3:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginStart com.android.launcher3:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginTop com.android.launcher3:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_optimizationLevel com.android.launcher3:layout_optimizationLevel}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_Layout_android_orientation
     * @see #ConstraintLayout_Layout_android_padding
     * @see #ConstraintLayout_Layout_android_paddingLeft
     * @see #ConstraintLayout_Layout_android_paddingTop
     * @see #ConstraintLayout_Layout_android_paddingRight
     * @see #ConstraintLayout_Layout_android_paddingBottom
     * @see #ConstraintLayout_Layout_android_visibility
     * @see #ConstraintLayout_Layout_android_maxWidth
     * @see #ConstraintLayout_Layout_android_maxHeight
     * @see #ConstraintLayout_Layout_android_minWidth
     * @see #ConstraintLayout_Layout_android_minHeight
     * @see #ConstraintLayout_Layout_android_paddingStart
     * @see #ConstraintLayout_Layout_android_paddingEnd
     * @see #ConstraintLayout_Layout_android_elevation
     * @see #ConstraintLayout_Layout_barrierAllowsGoneWidgets
     * @see #ConstraintLayout_Layout_barrierDirection
     * @see #ConstraintLayout_Layout_barrierMargin
     * @see #ConstraintLayout_Layout_chainUseRtl
     * @see #ConstraintLayout_Layout_constraintSet
     * @see #ConstraintLayout_Layout_constraint_referenced_ids
     * @see #ConstraintLayout_Layout_flow_firstHorizontalBias
     * @see #ConstraintLayout_Layout_flow_firstHorizontalStyle
     * @see #ConstraintLayout_Layout_flow_firstVerticalBias
     * @see #ConstraintLayout_Layout_flow_firstVerticalStyle
     * @see #ConstraintLayout_Layout_flow_horizontalAlign
     * @see #ConstraintLayout_Layout_flow_horizontalBias
     * @see #ConstraintLayout_Layout_flow_horizontalGap
     * @see #ConstraintLayout_Layout_flow_horizontalStyle
     * @see #ConstraintLayout_Layout_flow_lastHorizontalBias
     * @see #ConstraintLayout_Layout_flow_lastHorizontalStyle
     * @see #ConstraintLayout_Layout_flow_lastVerticalBias
     * @see #ConstraintLayout_Layout_flow_lastVerticalStyle
     * @see #ConstraintLayout_Layout_flow_maxElementsWrap
     * @see #ConstraintLayout_Layout_flow_verticalAlign
     * @see #ConstraintLayout_Layout_flow_verticalBias
     * @see #ConstraintLayout_Layout_flow_verticalGap
     * @see #ConstraintLayout_Layout_flow_verticalStyle
     * @see #ConstraintLayout_Layout_flow_wrapMode
     * @see #ConstraintLayout_Layout_layoutDescription
     * @see #ConstraintLayout_Layout_layout_constrainedHeight
     * @see #ConstraintLayout_Layout_layout_constrainedWidth
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_creator
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_creator
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintCircle
     * @see #ConstraintLayout_Layout_layout_constraintCircleAngle
     * @see #ConstraintLayout_Layout_layout_constraintCircleRadius
     * @see #ConstraintLayout_Layout_layout_constraintDimensionRatio
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintGuide_begin
     * @see #ConstraintLayout_Layout_layout_constraintGuide_end
     * @see #ConstraintLayout_Layout_layout_constraintGuide_percent
     * @see #ConstraintLayout_Layout_layout_constraintHeight_default
     * @see #ConstraintLayout_Layout_layout_constraintHeight_max
     * @see #ConstraintLayout_Layout_layout_constraintHeight_min
     * @see #ConstraintLayout_Layout_layout_constraintHeight_percent
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_bias
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_weight
     * @see #ConstraintLayout_Layout_layout_constraintLeft_creator
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_creator
     * @see #ConstraintLayout_Layout_layout_constraintRight_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintTag
     * @see #ConstraintLayout_Layout_layout_constraintTop_creator
     * @see #ConstraintLayout_Layout_layout_constraintTop_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintTop_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintVertical_bias
     * @see #ConstraintLayout_Layout_layout_constraintVertical_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintVertical_weight
     * @see #ConstraintLayout_Layout_layout_constraintWidth_default
     * @see #ConstraintLayout_Layout_layout_constraintWidth_max
     * @see #ConstraintLayout_Layout_layout_constraintWidth_min
     * @see #ConstraintLayout_Layout_layout_constraintWidth_percent
     * @see #ConstraintLayout_Layout_layout_editor_absoluteX
     * @see #ConstraintLayout_Layout_layout_editor_absoluteY
     * @see #ConstraintLayout_Layout_layout_goneMarginBottom
     * @see #ConstraintLayout_Layout_layout_goneMarginEnd
     * @see #ConstraintLayout_Layout_layout_goneMarginLeft
     * @see #ConstraintLayout_Layout_layout_goneMarginRight
     * @see #ConstraintLayout_Layout_layout_goneMarginStart
     * @see #ConstraintLayout_Layout_layout_goneMarginTop
     * @see #ConstraintLayout_Layout_layout_optimizationLevel
     */
    public static final int[] ConstraintLayout_Layout={
      0x010100c4, 0x010100d5, 0x010100d6, 0x010100d7, 
      0x010100d8, 0x010100d9, 0x010100dc, 0x0101011f, 
      0x01010120, 0x0101013f, 0x01010140, 0x010103b3, 
      0x010103b4, 0x01010440, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int ConstraintLayout_Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#padding}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:padding
     */
    public static int ConstraintLayout_Layout_android_padding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingLeft
     */
    public static int ConstraintLayout_Layout_android_paddingLeft=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingTop
     */
    public static int ConstraintLayout_Layout_android_paddingTop=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingRight
     */
    public static int ConstraintLayout_Layout_android_paddingRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingBottom
     */
    public static int ConstraintLayout_Layout_android_paddingBottom=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static int ConstraintLayout_Layout_android_visibility=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int ConstraintLayout_Layout_android_maxWidth=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static int ConstraintLayout_Layout_android_maxHeight=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int ConstraintLayout_Layout_android_minWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static int ConstraintLayout_Layout_android_minHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingStart
     */
    public static int ConstraintLayout_Layout_android_paddingStart=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingEnd
     */
    public static int ConstraintLayout_Layout_android_paddingEnd=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int ConstraintLayout_Layout_android_elevation=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:barrierAllowsGoneWidgets
     */
    public static int ConstraintLayout_Layout_barrierAllowsGoneWidgets=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:barrierDirection
     */
    public static int ConstraintLayout_Layout_barrierDirection=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:barrierMargin
     */
    public static int ConstraintLayout_Layout_barrierMargin=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:chainUseRtl
     */
    public static int ConstraintLayout_Layout_chainUseRtl=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraintSet}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:constraintSet
     */
    public static int ConstraintLayout_Layout_constraintSet=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:constraint_referenced_ids
     */
    public static int ConstraintLayout_Layout_constraint_referenced_ids=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_firstHorizontalBias
     */
    public static int ConstraintLayout_Layout_flow_firstHorizontalBias=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_firstHorizontalStyle
     */
    public static int ConstraintLayout_Layout_flow_firstHorizontalStyle=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_firstVerticalBias
     */
    public static int ConstraintLayout_Layout_flow_firstVerticalBias=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_firstVerticalStyle
     */
    public static int ConstraintLayout_Layout_flow_firstVerticalStyle=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_horizontalAlign
     */
    public static int ConstraintLayout_Layout_flow_horizontalAlign=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_horizontalBias
     */
    public static int ConstraintLayout_Layout_flow_horizontalBias=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:flow_horizontalGap
     */
    public static int ConstraintLayout_Layout_flow_horizontalGap=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_horizontalStyle
     */
    public static int ConstraintLayout_Layout_flow_horizontalStyle=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_lastHorizontalBias
     */
    public static int ConstraintLayout_Layout_flow_lastHorizontalBias=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_lastHorizontalStyle
     */
    public static int ConstraintLayout_Layout_flow_lastHorizontalStyle=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_lastVerticalBias
     */
    public static int ConstraintLayout_Layout_flow_lastVerticalBias=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_lastVerticalStyle
     */
    public static int ConstraintLayout_Layout_flow_lastVerticalStyle=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:flow_maxElementsWrap
     */
    public static int ConstraintLayout_Layout_flow_maxElementsWrap=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_verticalAlign
     */
    public static int ConstraintLayout_Layout_flow_verticalAlign=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_verticalBias
     */
    public static int ConstraintLayout_Layout_flow_verticalBias=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:flow_verticalGap
     */
    public static int ConstraintLayout_Layout_flow_verticalGap=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_verticalStyle
     */
    public static int ConstraintLayout_Layout_flow_verticalStyle=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_wrapMode
     */
    public static int ConstraintLayout_Layout_flow_wrapMode=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layoutDescription}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layoutDescription
     */
    public static int ConstraintLayout_Layout_layoutDescription=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedHeight
     */
    public static int ConstraintLayout_Layout_layout_constrainedHeight=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedWidth
     */
    public static int ConstraintLayout_Layout_layout_constrainedWidth=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_creator
     */
    public static int ConstraintLayout_Layout_layout_constraintBaseline_creator=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_toBaselineOf
     */
    public static int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBottom_creator
     */
    public static int ConstraintLayout_Layout_layout_constraintBottom_creator=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toBottomOf
     */
    public static int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toTopOf
     */
    public static int ConstraintLayout_Layout_layout_constraintBottom_toTopOf=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircle
     */
    public static int ConstraintLayout_Layout_layout_constraintCircle=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircleAngle
     */
    public static int ConstraintLayout_Layout_layout_constraintCircleAngle=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintCircleRadius
     */
    public static int ConstraintLayout_Layout_layout_constraintCircleRadius=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintDimensionRatio
     */
    public static int ConstraintLayout_Layout_layout_constraintDimensionRatio=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toEndOf
     */
    public static int ConstraintLayout_Layout_layout_constraintEnd_toEndOf=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toStartOf
     */
    public static int ConstraintLayout_Layout_layout_constraintEnd_toStartOf=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_begin
     */
    public static int ConstraintLayout_Layout_layout_constraintGuide_begin=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_end
     */
    public static int ConstraintLayout_Layout_layout_constraintGuide_end=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintGuide_percent
     */
    public static int ConstraintLayout_Layout_layout_constraintGuide_percent=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_default
     */
    public static int ConstraintLayout_Layout_layout_constraintHeight_default=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_max
     */
    public static int ConstraintLayout_Layout_layout_constraintHeight_max=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_min
     */
    public static int ConstraintLayout_Layout_layout_constraintHeight_min=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHeight_percent
     */
    public static int ConstraintLayout_Layout_layout_constraintHeight_percent=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_bias
     */
    public static int ConstraintLayout_Layout_layout_constraintHorizontal_bias=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_chainStyle
     */
    public static int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_weight
     */
    public static int ConstraintLayout_Layout_layout_constraintHorizontal_weight=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintLeft_creator
     */
    public static int ConstraintLayout_Layout_layout_constraintLeft_creator=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toLeftOf
     */
    public static int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toRightOf
     */
    public static int ConstraintLayout_Layout_layout_constraintLeft_toRightOf=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintRight_creator
     */
    public static int ConstraintLayout_Layout_layout_constraintRight_creator=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toLeftOf
     */
    public static int ConstraintLayout_Layout_layout_constraintRight_toLeftOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toRightOf
     */
    public static int ConstraintLayout_Layout_layout_constraintRight_toRightOf=67;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toEndOf
     */
    public static int ConstraintLayout_Layout_layout_constraintStart_toEndOf=68;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toStartOf
     */
    public static int ConstraintLayout_Layout_layout_constraintStart_toStartOf=69;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintTag
     */
    public static int ConstraintLayout_Layout_layout_constraintTag=70;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintTop_creator
     */
    public static int ConstraintLayout_Layout_layout_constraintTop_creator=71;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toBottomOf
     */
    public static int ConstraintLayout_Layout_layout_constraintTop_toBottomOf=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toTopOf
     */
    public static int ConstraintLayout_Layout_layout_constraintTop_toTopOf=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_bias
     */
    public static int ConstraintLayout_Layout_layout_constraintVertical_bias=74;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintVertical_chainStyle
     */
    public static int ConstraintLayout_Layout_layout_constraintVertical_chainStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_weight
     */
    public static int ConstraintLayout_Layout_layout_constraintVertical_weight=76;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_default
     */
    public static int ConstraintLayout_Layout_layout_constraintWidth_default=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_max
     */
    public static int ConstraintLayout_Layout_layout_constraintWidth_max=78;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_min
     */
    public static int ConstraintLayout_Layout_layout_constraintWidth_min=79;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintWidth_percent
     */
    public static int ConstraintLayout_Layout_layout_constraintWidth_percent=80;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteX
     */
    public static int ConstraintLayout_Layout_layout_editor_absoluteX=81;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteY
     */
    public static int ConstraintLayout_Layout_layout_editor_absoluteY=82;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginBottom
     */
    public static int ConstraintLayout_Layout_layout_goneMarginBottom=83;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginEnd
     */
    public static int ConstraintLayout_Layout_layout_goneMarginEnd=84;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginLeft
     */
    public static int ConstraintLayout_Layout_layout_goneMarginLeft=85;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginRight
     */
    public static int ConstraintLayout_Layout_layout_goneMarginRight=86;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginStart
     */
    public static int ConstraintLayout_Layout_layout_goneMarginStart=87;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginTop
     */
    public static int ConstraintLayout_Layout_layout_goneMarginTop=88;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_optimizationLevel}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>graph</td><td>40</td><td></td></tr>
     * <tr><td>graph_wrap</td><td>80</td><td></td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>ratio</td><td>10</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_optimizationLevel
     */
    public static int ConstraintLayout_Layout_layout_optimizationLevel=89;
    /**
     * Attributes that can be used with a ConstraintLayout_placeholder.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_content com.android.launcher3:content}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_placeholder_emptyVisibility com.android.launcher3:placeholder_emptyVisibility}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_placeholder_content
     * @see #ConstraintLayout_placeholder_placeholder_emptyVisibility
     */
    public static final int[] ConstraintLayout_placeholder={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#content}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:content
     */
    public static int ConstraintLayout_placeholder_content=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#placeholder_emptyVisibility}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>8</td><td></td></tr>
     * <tr><td>invisible</td><td>4</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:placeholder_emptyVisibility
     */
    public static int ConstraintLayout_placeholder_placeholder_emptyVisibility=1;
    /**
     * Attributes that can be used with a ConstraintSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintSet_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_pivotX android:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_pivotY android:pivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_animate_relativeTo com.android.launcher3:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierAllowsGoneWidgets com.android.launcher3:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierDirection com.android.launcher3:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierMargin com.android.launcher3:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_chainUseRtl com.android.launcher3:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_constraint_referenced_ids com.android.launcher3:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_deriveConstraintsFrom com.android.launcher3:deriveConstraintsFrom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_drawPath com.android.launcher3:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstHorizontalBias com.android.launcher3:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstHorizontalStyle com.android.launcher3:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstVerticalBias com.android.launcher3:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstVerticalStyle com.android.launcher3:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalAlign com.android.launcher3:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalBias com.android.launcher3:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalGap com.android.launcher3:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalStyle com.android.launcher3:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastHorizontalBias com.android.launcher3:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastHorizontalStyle com.android.launcher3:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastVerticalBias com.android.launcher3:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastVerticalStyle com.android.launcher3:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_maxElementsWrap com.android.launcher3:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalAlign com.android.launcher3:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalBias com.android.launcher3:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalGap com.android.launcher3:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalStyle com.android.launcher3:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_wrapMode com.android.launcher3:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedHeight com.android.launcher3:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedWidth com.android.launcher3:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_creator com.android.launcher3:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_toBaselineOf com.android.launcher3:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_creator com.android.launcher3:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toBottomOf com.android.launcher3:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toTopOf com.android.launcher3:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircle com.android.launcher3:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleAngle com.android.launcher3:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleRadius com.android.launcher3:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintDimensionRatio com.android.launcher3:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toEndOf com.android.launcher3:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toStartOf com.android.launcher3:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_begin com.android.launcher3:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_end com.android.launcher3:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_percent com.android.launcher3:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_default com.android.launcher3:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_max com.android.launcher3:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_min com.android.launcher3:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_percent com.android.launcher3:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_bias com.android.launcher3:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_chainStyle com.android.launcher3:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_weight com.android.launcher3:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_creator com.android.launcher3:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toLeftOf com.android.launcher3:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toRightOf com.android.launcher3:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_creator com.android.launcher3:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toLeftOf com.android.launcher3:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toRightOf com.android.launcher3:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toEndOf com.android.launcher3:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toStartOf com.android.launcher3:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTag com.android.launcher3:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_creator com.android.launcher3:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toBottomOf com.android.launcher3:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toTopOf com.android.launcher3:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_bias com.android.launcher3:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_chainStyle com.android.launcher3:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_weight com.android.launcher3:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_default com.android.launcher3:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_max com.android.launcher3:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_min com.android.launcher3:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_percent com.android.launcher3:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteX com.android.launcher3:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteY com.android.launcher3:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginBottom com.android.launcher3:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginEnd com.android.launcher3:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginLeft com.android.launcher3:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginRight com.android.launcher3:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginStart com.android.launcher3:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginTop com.android.launcher3:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_motionProgress com.android.launcher3:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_motionStagger com.android.launcher3:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_pathMotionArc com.android.launcher3:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_pivotAnchor com.android.launcher3:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_transitionPathRotate com.android.launcher3:transitionPathRotate}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintSet_android_orientation
     * @see #ConstraintSet_android_id
     * @see #ConstraintSet_android_visibility
     * @see #ConstraintSet_android_layout_width
     * @see #ConstraintSet_android_layout_height
     * @see #ConstraintSet_android_layout_marginLeft
     * @see #ConstraintSet_android_layout_marginTop
     * @see #ConstraintSet_android_layout_marginRight
     * @see #ConstraintSet_android_layout_marginBottom
     * @see #ConstraintSet_android_maxWidth
     * @see #ConstraintSet_android_maxHeight
     * @see #ConstraintSet_android_minWidth
     * @see #ConstraintSet_android_minHeight
     * @see #ConstraintSet_android_pivotX
     * @see #ConstraintSet_android_pivotY
     * @see #ConstraintSet_android_alpha
     * @see #ConstraintSet_android_transformPivotX
     * @see #ConstraintSet_android_transformPivotY
     * @see #ConstraintSet_android_translationX
     * @see #ConstraintSet_android_translationY
     * @see #ConstraintSet_android_scaleX
     * @see #ConstraintSet_android_scaleY
     * @see #ConstraintSet_android_rotation
     * @see #ConstraintSet_android_rotationX
     * @see #ConstraintSet_android_rotationY
     * @see #ConstraintSet_android_layout_marginStart
     * @see #ConstraintSet_android_layout_marginEnd
     * @see #ConstraintSet_android_translationZ
     * @see #ConstraintSet_android_elevation
     * @see #ConstraintSet_animate_relativeTo
     * @see #ConstraintSet_barrierAllowsGoneWidgets
     * @see #ConstraintSet_barrierDirection
     * @see #ConstraintSet_barrierMargin
     * @see #ConstraintSet_chainUseRtl
     * @see #ConstraintSet_constraint_referenced_ids
     * @see #ConstraintSet_deriveConstraintsFrom
     * @see #ConstraintSet_drawPath
     * @see #ConstraintSet_flow_firstHorizontalBias
     * @see #ConstraintSet_flow_firstHorizontalStyle
     * @see #ConstraintSet_flow_firstVerticalBias
     * @see #ConstraintSet_flow_firstVerticalStyle
     * @see #ConstraintSet_flow_horizontalAlign
     * @see #ConstraintSet_flow_horizontalBias
     * @see #ConstraintSet_flow_horizontalGap
     * @see #ConstraintSet_flow_horizontalStyle
     * @see #ConstraintSet_flow_lastHorizontalBias
     * @see #ConstraintSet_flow_lastHorizontalStyle
     * @see #ConstraintSet_flow_lastVerticalBias
     * @see #ConstraintSet_flow_lastVerticalStyle
     * @see #ConstraintSet_flow_maxElementsWrap
     * @see #ConstraintSet_flow_verticalAlign
     * @see #ConstraintSet_flow_verticalBias
     * @see #ConstraintSet_flow_verticalGap
     * @see #ConstraintSet_flow_verticalStyle
     * @see #ConstraintSet_flow_wrapMode
     * @see #ConstraintSet_layout_constrainedHeight
     * @see #ConstraintSet_layout_constrainedWidth
     * @see #ConstraintSet_layout_constraintBaseline_creator
     * @see #ConstraintSet_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintSet_layout_constraintBottom_creator
     * @see #ConstraintSet_layout_constraintBottom_toBottomOf
     * @see #ConstraintSet_layout_constraintBottom_toTopOf
     * @see #ConstraintSet_layout_constraintCircle
     * @see #ConstraintSet_layout_constraintCircleAngle
     * @see #ConstraintSet_layout_constraintCircleRadius
     * @see #ConstraintSet_layout_constraintDimensionRatio
     * @see #ConstraintSet_layout_constraintEnd_toEndOf
     * @see #ConstraintSet_layout_constraintEnd_toStartOf
     * @see #ConstraintSet_layout_constraintGuide_begin
     * @see #ConstraintSet_layout_constraintGuide_end
     * @see #ConstraintSet_layout_constraintGuide_percent
     * @see #ConstraintSet_layout_constraintHeight_default
     * @see #ConstraintSet_layout_constraintHeight_max
     * @see #ConstraintSet_layout_constraintHeight_min
     * @see #ConstraintSet_layout_constraintHeight_percent
     * @see #ConstraintSet_layout_constraintHorizontal_bias
     * @see #ConstraintSet_layout_constraintHorizontal_chainStyle
     * @see #ConstraintSet_layout_constraintHorizontal_weight
     * @see #ConstraintSet_layout_constraintLeft_creator
     * @see #ConstraintSet_layout_constraintLeft_toLeftOf
     * @see #ConstraintSet_layout_constraintLeft_toRightOf
     * @see #ConstraintSet_layout_constraintRight_creator
     * @see #ConstraintSet_layout_constraintRight_toLeftOf
     * @see #ConstraintSet_layout_constraintRight_toRightOf
     * @see #ConstraintSet_layout_constraintStart_toEndOf
     * @see #ConstraintSet_layout_constraintStart_toStartOf
     * @see #ConstraintSet_layout_constraintTag
     * @see #ConstraintSet_layout_constraintTop_creator
     * @see #ConstraintSet_layout_constraintTop_toBottomOf
     * @see #ConstraintSet_layout_constraintTop_toTopOf
     * @see #ConstraintSet_layout_constraintVertical_bias
     * @see #ConstraintSet_layout_constraintVertical_chainStyle
     * @see #ConstraintSet_layout_constraintVertical_weight
     * @see #ConstraintSet_layout_constraintWidth_default
     * @see #ConstraintSet_layout_constraintWidth_max
     * @see #ConstraintSet_layout_constraintWidth_min
     * @see #ConstraintSet_layout_constraintWidth_percent
     * @see #ConstraintSet_layout_editor_absoluteX
     * @see #ConstraintSet_layout_editor_absoluteY
     * @see #ConstraintSet_layout_goneMarginBottom
     * @see #ConstraintSet_layout_goneMarginEnd
     * @see #ConstraintSet_layout_goneMarginLeft
     * @see #ConstraintSet_layout_goneMarginRight
     * @see #ConstraintSet_layout_goneMarginStart
     * @see #ConstraintSet_layout_goneMarginTop
     * @see #ConstraintSet_motionProgress
     * @see #ConstraintSet_motionStagger
     * @see #ConstraintSet_pathMotionArc
     * @see #ConstraintSet_pivotAnchor
     * @see #ConstraintSet_transitionEasing
     * @see #ConstraintSet_transitionPathRotate
     */
    public static final int[] ConstraintSet={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x010101b5, 0x010101b6, 0x0101031f, 
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103b5, 0x010103b6, 0x010103fa, 
      0x01010440, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int ConstraintSet_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int ConstraintSet_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static int ConstraintSet_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static int ConstraintSet_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static int ConstraintSet_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static int ConstraintSet_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static int ConstraintSet_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static int ConstraintSet_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static int ConstraintSet_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int ConstraintSet_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static int ConstraintSet_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int ConstraintSet_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static int ConstraintSet_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotX
     */
    public static int ConstraintSet_android_pivotX=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotY
     */
    public static int ConstraintSet_android_pivotY=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int ConstraintSet_android_alpha=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static int ConstraintSet_android_transformPivotX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static int ConstraintSet_android_transformPivotY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static int ConstraintSet_android_translationX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static int ConstraintSet_android_translationY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static int ConstraintSet_android_scaleX=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static int ConstraintSet_android_scaleY=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static int ConstraintSet_android_rotation=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static int ConstraintSet_android_rotationX=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static int ConstraintSet_android_rotationY=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static int ConstraintSet_android_layout_marginStart=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static int ConstraintSet_android_layout_marginEnd=26;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static int ConstraintSet_android_translationZ=27;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int ConstraintSet_android_elevation=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:animate_relativeTo
     */
    public static int ConstraintSet_animate_relativeTo=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:barrierAllowsGoneWidgets
     */
    public static int ConstraintSet_barrierAllowsGoneWidgets=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:barrierDirection
     */
    public static int ConstraintSet_barrierDirection=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:barrierMargin
     */
    public static int ConstraintSet_barrierMargin=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:chainUseRtl
     */
    public static int ConstraintSet_chainUseRtl=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:constraint_referenced_ids
     */
    public static int ConstraintSet_constraint_referenced_ids=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#deriveConstraintsFrom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:deriveConstraintsFrom
     */
    public static int ConstraintSet_deriveConstraintsFrom=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawPath}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:drawPath
     */
    public static int ConstraintSet_drawPath=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_firstHorizontalBias
     */
    public static int ConstraintSet_flow_firstHorizontalBias=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_firstHorizontalStyle
     */
    public static int ConstraintSet_flow_firstHorizontalStyle=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_firstVerticalBias
     */
    public static int ConstraintSet_flow_firstVerticalBias=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_firstVerticalStyle
     */
    public static int ConstraintSet_flow_firstVerticalStyle=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_horizontalAlign
     */
    public static int ConstraintSet_flow_horizontalAlign=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_horizontalBias
     */
    public static int ConstraintSet_flow_horizontalBias=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:flow_horizontalGap
     */
    public static int ConstraintSet_flow_horizontalGap=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_horizontalStyle
     */
    public static int ConstraintSet_flow_horizontalStyle=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_lastHorizontalBias
     */
    public static int ConstraintSet_flow_lastHorizontalBias=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_lastHorizontalStyle
     */
    public static int ConstraintSet_flow_lastHorizontalStyle=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_lastVerticalBias
     */
    public static int ConstraintSet_flow_lastVerticalBias=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_lastVerticalStyle
     */
    public static int ConstraintSet_flow_lastVerticalStyle=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:flow_maxElementsWrap
     */
    public static int ConstraintSet_flow_maxElementsWrap=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_verticalAlign
     */
    public static int ConstraintSet_flow_verticalAlign=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:flow_verticalBias
     */
    public static int ConstraintSet_flow_verticalBias=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:flow_verticalGap
     */
    public static int ConstraintSet_flow_verticalGap=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_verticalStyle
     */
    public static int ConstraintSet_flow_verticalStyle=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:flow_wrapMode
     */
    public static int ConstraintSet_flow_wrapMode=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedHeight
     */
    public static int ConstraintSet_layout_constrainedHeight=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedWidth
     */
    public static int ConstraintSet_layout_constrainedWidth=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_creator
     */
    public static int ConstraintSet_layout_constraintBaseline_creator=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_toBaselineOf
     */
    public static int ConstraintSet_layout_constraintBaseline_toBaselineOf=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBottom_creator
     */
    public static int ConstraintSet_layout_constraintBottom_creator=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toBottomOf
     */
    public static int ConstraintSet_layout_constraintBottom_toBottomOf=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toTopOf
     */
    public static int ConstraintSet_layout_constraintBottom_toTopOf=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircle
     */
    public static int ConstraintSet_layout_constraintCircle=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircleAngle
     */
    public static int ConstraintSet_layout_constraintCircleAngle=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintCircleRadius
     */
    public static int ConstraintSet_layout_constraintCircleRadius=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintDimensionRatio
     */
    public static int ConstraintSet_layout_constraintDimensionRatio=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toEndOf
     */
    public static int ConstraintSet_layout_constraintEnd_toEndOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toStartOf
     */
    public static int ConstraintSet_layout_constraintEnd_toStartOf=67;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_begin
     */
    public static int ConstraintSet_layout_constraintGuide_begin=68;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_end
     */
    public static int ConstraintSet_layout_constraintGuide_end=69;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintGuide_percent
     */
    public static int ConstraintSet_layout_constraintGuide_percent=70;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_default
     */
    public static int ConstraintSet_layout_constraintHeight_default=71;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_max
     */
    public static int ConstraintSet_layout_constraintHeight_max=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_min
     */
    public static int ConstraintSet_layout_constraintHeight_min=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHeight_percent
     */
    public static int ConstraintSet_layout_constraintHeight_percent=74;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_bias
     */
    public static int ConstraintSet_layout_constraintHorizontal_bias=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_chainStyle
     */
    public static int ConstraintSet_layout_constraintHorizontal_chainStyle=76;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_weight
     */
    public static int ConstraintSet_layout_constraintHorizontal_weight=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintLeft_creator
     */
    public static int ConstraintSet_layout_constraintLeft_creator=78;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toLeftOf
     */
    public static int ConstraintSet_layout_constraintLeft_toLeftOf=79;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toRightOf
     */
    public static int ConstraintSet_layout_constraintLeft_toRightOf=80;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintRight_creator
     */
    public static int ConstraintSet_layout_constraintRight_creator=81;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toLeftOf
     */
    public static int ConstraintSet_layout_constraintRight_toLeftOf=82;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toRightOf
     */
    public static int ConstraintSet_layout_constraintRight_toRightOf=83;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toEndOf
     */
    public static int ConstraintSet_layout_constraintStart_toEndOf=84;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toStartOf
     */
    public static int ConstraintSet_layout_constraintStart_toStartOf=85;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintTag
     */
    public static int ConstraintSet_layout_constraintTag=86;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintTop_creator
     */
    public static int ConstraintSet_layout_constraintTop_creator=87;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toBottomOf
     */
    public static int ConstraintSet_layout_constraintTop_toBottomOf=88;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toTopOf
     */
    public static int ConstraintSet_layout_constraintTop_toTopOf=89;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_bias
     */
    public static int ConstraintSet_layout_constraintVertical_bias=90;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintVertical_chainStyle
     */
    public static int ConstraintSet_layout_constraintVertical_chainStyle=91;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_weight
     */
    public static int ConstraintSet_layout_constraintVertical_weight=92;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_default
     */
    public static int ConstraintSet_layout_constraintWidth_default=93;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_max
     */
    public static int ConstraintSet_layout_constraintWidth_max=94;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_min
     */
    public static int ConstraintSet_layout_constraintWidth_min=95;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintWidth_percent
     */
    public static int ConstraintSet_layout_constraintWidth_percent=96;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteX
     */
    public static int ConstraintSet_layout_editor_absoluteX=97;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteY
     */
    public static int ConstraintSet_layout_editor_absoluteY=98;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginBottom
     */
    public static int ConstraintSet_layout_goneMarginBottom=99;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginEnd
     */
    public static int ConstraintSet_layout_goneMarginEnd=100;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginLeft
     */
    public static int ConstraintSet_layout_goneMarginLeft=101;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginRight
     */
    public static int ConstraintSet_layout_goneMarginRight=102;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginStart
     */
    public static int ConstraintSet_layout_goneMarginStart=103;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginTop
     */
    public static int ConstraintSet_layout_goneMarginTop=104;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionProgress}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionProgress
     */
    public static int ConstraintSet_motionProgress=105;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionStagger}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionStagger
     */
    public static int ConstraintSet_motionStagger=106;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pathMotionArc
     */
    public static int ConstraintSet_pathMotionArc=107;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pivotAnchor
     */
    public static int ConstraintSet_pivotAnchor=108;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int ConstraintSet_transitionEasing=109;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:transitionPathRotate
     */
    public static int ConstraintSet_transitionPathRotate=110;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.launcher3:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.launcher3:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:keylines
     */
    public static int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:statusBarBackground
     */
    public static int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.launcher3:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.launcher3:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.launcher3:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.launcher3:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.launcher3:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.launcher3:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_anchor
     */
    public static int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_anchorGravity
     */
    public static int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_behavior
     */
    public static int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_dodgeInsetEdges
     */
    public static int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_insetEdge
     */
    public static int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_keyline
     */
    public static int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a CustomAttribute.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CustomAttribute_attributeName com.android.launcher3:attributeName}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customBoolean com.android.launcher3:customBoolean}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customColorDrawableValue com.android.launcher3:customColorDrawableValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customColorValue com.android.launcher3:customColorValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customDimension com.android.launcher3:customDimension}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customFloatValue com.android.launcher3:customFloatValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customIntegerValue com.android.launcher3:customIntegerValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customPixelDimension com.android.launcher3:customPixelDimension}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customStringValue com.android.launcher3:customStringValue}</code></td><td></td></tr>
     * </table>
     * @see #CustomAttribute_attributeName
     * @see #CustomAttribute_customBoolean
     * @see #CustomAttribute_customColorDrawableValue
     * @see #CustomAttribute_customColorValue
     * @see #CustomAttribute_customDimension
     * @see #CustomAttribute_customFloatValue
     * @see #CustomAttribute_customIntegerValue
     * @see #CustomAttribute_customPixelDimension
     * @see #CustomAttribute_customStringValue
     */
    public static final int[] CustomAttribute={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#attributeName}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:attributeName
     */
    public static int CustomAttribute_attributeName=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customBoolean}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:customBoolean
     */
    public static int CustomAttribute_customBoolean=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customColorDrawableValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:customColorDrawableValue
     */
    public static int CustomAttribute_customColorDrawableValue=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customColorValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:customColorValue
     */
    public static int CustomAttribute_customColorValue=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customDimension}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:customDimension
     */
    public static int CustomAttribute_customDimension=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customFloatValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:customFloatValue
     */
    public static int CustomAttribute_customFloatValue=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customIntegerValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:customIntegerValue
     */
    public static int CustomAttribute_customIntegerValue=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customPixelDimension}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:customPixelDimension
     */
    public static int CustomAttribute_customPixelDimension=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customStringValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:customStringValue
     */
    public static int CustomAttribute_customStringValue=8;
    /**
     * Attributes that can be used with a DevicePadding.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DevicePadding_maxEmptySpace com.android.launcher3:maxEmptySpace}</code></td><td></td></tr>
     * </table>
     * @see #DevicePadding_maxEmptySpace
     */
    public static final int[] DevicePadding={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxEmptySpace}
     * attribute's value can be found in the {@link #DevicePadding} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxEmptySpace
     */
    public static int DevicePadding_maxEmptySpace=0;
    /**
     * Attributes that can be used with a DevicePaddingFormula.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DevicePaddingFormula_a com.android.launcher3:a}</code></td><td></td></tr>
     * <tr><td><code>{@link #DevicePaddingFormula_b com.android.launcher3:b}</code></td><td></td></tr>
     * <tr><td><code>{@link #DevicePaddingFormula_c com.android.launcher3:c}</code></td><td></td></tr>
     * </table>
     * @see #DevicePaddingFormula_a
     * @see #DevicePaddingFormula_b
     * @see #DevicePaddingFormula_c
     */
    public static final int[] DevicePaddingFormula={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#a}
     * attribute's value can be found in the {@link #DevicePaddingFormula} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:a
     */
    public static int DevicePaddingFormula_a=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#b}
     * attribute's value can be found in the {@link #DevicePaddingFormula} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:b
     */
    public static int DevicePaddingFormula_b=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#c}
     * attribute's value can be found in the {@link #DevicePaddingFormula} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:c
     */
    public static int DevicePaddingFormula_c=2;
    /**
     * Attributes that can be used with a DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.android.launcher3:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.android.launcher3:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.android.launcher3:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.android.launcher3:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.android.launcher3:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.android.launcher3:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
      0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
      0x010101f6, 0x010101f7, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dialogIcon
     */
    public static int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dialogLayout
     */
    public static int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:dialogMessage
     */
    public static int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:dialogTitle
     */
    public static int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:negativeButtonText
     */
    public static int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:positiveButtonText
     */
    public static int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.launcher3:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.launcher3:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.launcher3:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.launcher3:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.launcher3:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.launcher3:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.launcher3:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.launcher3:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:arrowHeadLength
     */
    public static int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:arrowShaftLength
     */
    public static int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:barLength
     */
    public static int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:color
     */
    public static int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:drawableSize
     */
    public static int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:gapBetweenBars
     */
    public static int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:spinBars
     */
    public static int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:thickness
     */
    public static int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * The height difference between the drawer and the base surface. Only takes effect on API 21 and above
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a EditTextPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #EditTextPreference_useSimpleSummaryProvider com.android.launcher3:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #EditTextPreference_useSimpleSummaryProvider
     */
    public static final int[] EditTextPreference={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:useSimpleSummaryProvider
     */
    public static int EditTextPreference_useSimpleSummaryProvider=0;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_collapsedSize com.android.launcher3:collapsedSize}</code></td><td>FAB size when collapsed.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_extendMotionSpec com.android.launcher3:extendMotionSpec}</code></td><td>Motion spec for extend animation.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_hideMotionSpec com.android.launcher3:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_showMotionSpec com.android.launcher3:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_shrinkMotionSpec com.android.launcher3:shrinkMotionSpec}</code></td><td>Motion spec for shrink animation.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_collapsedSize
     * @see #ExtendedFloatingActionButton_elevation
     * @see #ExtendedFloatingActionButton_extendMotionSpec
     * @see #ExtendedFloatingActionButton_hideMotionSpec
     * @see #ExtendedFloatingActionButton_showMotionSpec
     * @see #ExtendedFloatingActionButton_shrinkMotionSpec
     */
    public static final int[] ExtendedFloatingActionButton={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * FAB size when collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:collapsedSize
     */
    public static int ExtendedFloatingActionButton_collapsedSize=0;
    /**
     * <p>
     * @attr description
     * Elevation for the ExtendedFloatingActionButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int ExtendedFloatingActionButton_elevation=1;
    /**
     * <p>
     * @attr description
     * Motion spec for extend animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:extendMotionSpec
     */
    public static int ExtendedFloatingActionButton_extendMotionSpec=2;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:hideMotionSpec
     */
    public static int ExtendedFloatingActionButton_hideMotionSpec=3;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:showMotionSpec
     */
    public static int ExtendedFloatingActionButton_showMotionSpec=4;
    /**
     * <p>
     * @attr description
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shrinkMotionSpec
     */
    public static int ExtendedFloatingActionButton_shrinkMotionSpec=5;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide com.android.launcher3:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink com.android.launcher3:behavior_autoShrink}</code></td><td>Whether the extended FAB should automatically shrink when there is no space for it.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink
     */
    public static final int[] ExtendedFloatingActionButton_Behavior_Layout={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_autoHide
     */
    public static int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically shrink when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_autoShrink
     */
    public static int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink=1;
    /**
     * Attributes that can be used with a Extra.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Extra_key com.android.launcher3:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Extra_value com.android.launcher3:value}</code></td><td></td></tr>
     * </table>
     * @see #Extra_key
     * @see #Extra_value
     */
    public static final int[] Extra={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:key
     */
    public static int Extra_key=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#value}
     * attribute's value can be found in the {@link #Extra} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:value
     */
    public static int Extra_value=1;
    /**
     * XML attributes used by default_workspace.xml
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Favorite_className com.android.launcher3:className}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_container com.android.launcher3:container}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_icon com.android.launcher3:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Favorite_packageName com.android.launcher3:packageName}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_screen com.android.launcher3:screen}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_spanX com.android.launcher3:spanX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_spanY com.android.launcher3:spanY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_title com.android.launcher3:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_uri com.android.launcher3:uri}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_x com.android.launcher3:x}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_y com.android.launcher3:y}</code></td><td></td></tr>
     * </table>
     * @see #Favorite_className
     * @see #Favorite_container
     * @see #Favorite_icon
     * @see #Favorite_packageName
     * @see #Favorite_screen
     * @see #Favorite_spanX
     * @see #Favorite_spanY
     * @see #Favorite_title
     * @see #Favorite_uri
     * @see #Favorite_x
     * @see #Favorite_y
     */
    public static final int[] Favorite={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#className}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:className
     */
    public static int Favorite_className=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#container}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:container
     */
    public static int Favorite_container=1;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:icon
     */
    public static int Favorite_icon=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#packageName}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:packageName
     */
    public static int Favorite_packageName=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#screen}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:screen
     */
    public static int Favorite_screen=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#spanX}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:spanX
     */
    public static int Favorite_spanX=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#spanY}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:spanY
     */
    public static int Favorite_spanY=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#title}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:title
     */
    public static int Favorite_title=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#uri}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:uri
     */
    public static int Favorite_uri=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#x}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:x
     */
    public static int Favorite_x=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#y}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:y
     */
    public static int Favorite_y=10;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode com.android.launcher3:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth com.android.launcher3:borderWidth}</code></td><td>The width of the border around the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_ensureMinTouchTargetSize com.android.launcher3:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabCustomSize com.android.launcher3:fabCustomSize}</code></td><td>Custom size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize com.android.launcher3:fabSize}</code></td><td>Size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hideMotionSpec com.android.launcher3:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hoveredFocusedTranslationZ com.android.launcher3:hoveredFocusedTranslationZ}</code></td><td>TranslationZ value for the FAB when hovered, focused, or hovered and focused.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_maxImageSize com.android.launcher3:maxImageSize}</code></td><td>Maximum icon image size.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ com.android.launcher3:pressedTranslationZ}</code></td><td>TranslationZ value for the FAB when pressed</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor com.android.launcher3:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_showMotionSpec com.android.launcher3:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding com.android.launcher3:useCompatPadding}</code></td><td>Enable compat padding.</td></tr>
     * </table>
     * @see #FloatingActionButton_android_enabled
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_ensureMinTouchTargetSize
     * @see #FloatingActionButton_fabCustomSize
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_hideMotionSpec
     * @see #FloatingActionButton_hoveredFocusedTranslationZ
     * @see #FloatingActionButton_maxImageSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_shapeAppearance
     * @see #FloatingActionButton_shapeAppearanceOverlay
     * @see #FloatingActionButton_showMotionSpec
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
      0x0101000e, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the FloatingActionButton is enabled
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static int FloatingActionButton_android_enabled=0;
    /**
     * <p>
     * @attr description
     * Background for the FloatingActionButton
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int FloatingActionButton_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:backgroundTintMode
     */
    public static int FloatingActionButton_backgroundTintMode=2;
    /**
     * <p>
     * @attr description
     * The width of the border around the FAB.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:borderWidth
     */
    public static int FloatingActionButton_borderWidth=3;
    /**
     * <p>
     * @attr description
     * Elevation value for the FAB
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int FloatingActionButton_elevation=4;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of the FloatingActionButton to meet
     * @dimen/mtrl_fab_min_touch_target.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:ensureMinTouchTargetSize
     */
    public static int FloatingActionButton_ensureMinTouchTargetSize=5;
    /**
     * <p>
     * @attr description
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:fabCustomSize
     */
    public static int FloatingActionButton_fabCustomSize=6;
    /**
     * <p>
     * @attr description
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fabSize
     */
    public static int FloatingActionButton_fabSize=7;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:hideMotionSpec
     */
    public static int FloatingActionButton_hideMotionSpec=8;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:hoveredFocusedTranslationZ
     */
    public static int FloatingActionButton_hoveredFocusedTranslationZ=9;
    /**
     * <p>
     * @attr description
     * Maximum icon image size.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxImageSize
     */
    public static int FloatingActionButton_maxImageSize=10;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when pressed
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:pressedTranslationZ
     */
    public static int FloatingActionButton_pressedTranslationZ=11;
    /**
     * <p>
     * @attr description
     * Ripple color for the FAB.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:rippleColor
     */
    public static int FloatingActionButton_rippleColor=12;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for FloatingActionButton. Attribute declaration
     * is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int FloatingActionButton_shapeAppearance=13;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for FloatingActionButton.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int FloatingActionButton_shapeAppearanceOverlay=14;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:showMotionSpec
     */
    public static int FloatingActionButton_showMotionSpec=15;
    /**
     * <p>
     * @attr description
     * Enable compat padding.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:useCompatPadding
     */
    public static int FloatingActionButton_useCompatPadding=16;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide com.android.launcher3:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:behavior_autoHide
     */
    public static int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that can be used with a FlowLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FlowLayout_itemSpacing com.android.launcher3:itemSpacing}</code></td><td>Horizontal spacing between two items being laid out.</td></tr>
     * <tr><td><code>{@link #FlowLayout_lineSpacing com.android.launcher3:lineSpacing}</code></td><td>Vertical Spacing between two lines of items being laid out.</td></tr>
     * </table>
     * @see #FlowLayout_itemSpacing
     * @see #FlowLayout_lineSpacing
     */
    public static final int[] FlowLayout={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Horizontal spacing between two items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemSpacing
     */
    public static int FlowLayout_itemSpacing=0;
    /**
     * <p>
     * @attr description
     * Vertical Spacing between two lines of items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:lineSpacing
     */
    public static int FlowLayout_lineSpacing=1;
    /**
     * BubbleTextView specific attributes.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FolderIconPreview_folderDotColor com.android.launcher3:folderDotColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FolderIconPreview_folderIconBorderColor com.android.launcher3:folderIconBorderColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FolderIconPreview_folderPreviewColor com.android.launcher3:folderPreviewColor}</code></td><td></td></tr>
     * </table>
     * @see #FolderIconPreview_folderDotColor
     * @see #FolderIconPreview_folderIconBorderColor
     * @see #FolderIconPreview_folderPreviewColor
     */
    public static final int[] FolderIconPreview={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#folderDotColor}
     * attribute's value can be found in the {@link #FolderIconPreview} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:folderDotColor
     */
    public static int FolderIconPreview_folderDotColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#folderIconBorderColor}
     * attribute's value can be found in the {@link #FolderIconPreview} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:folderIconBorderColor
     */
    public static int FolderIconPreview_folderIconBorderColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#folderPreviewColor}
     * attribute's value can be found in the {@link #FolderIconPreview} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:folderPreviewColor
     */
    public static int FolderIconPreview_folderPreviewColor=2;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.launcher3:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.launcher3:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.launcher3:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.launcher3:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.launcher3:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.launcher3:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.android.launcher3:fontProviderSystemFontFamily}</code></td><td>Provides the system font family name to check before downloading the font.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderAuthority
     */
    public static int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fontProviderCerts
     */
    public static int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fontProviderFetchStrategy
     */
    public static int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fontProviderFetchTimeout
     */
    public static int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderPackage
     */
    public static int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderQuery
     */
    public static int FontFamily_fontProviderQuery=5;
    /**
     * <p>
     * @attr description
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontProviderSystemFontFamily
     */
    public static int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.launcher3:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.launcher3:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.launcher3:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.launcher3:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.launcher3:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:font
     */
    public static int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:fontStyle
     */
    public static int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontVariationSettings
     */
    public static int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:fontWeight
     */
    public static int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:ttcIndex
     */
    public static int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding com.android.launcher3:foregroundInsidePadding}</code></td><td>Do not expose publicly, used by ForegroundLinearLayout but never set by any style.</td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
      0x01010109, 0x01010200, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>
     * @attr description
     * Do not expose publicly, used by ForegroundLinearLayout but never set by any style.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:foregroundInsidePadding
     */
    public static int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a GridDisplayOption.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GridDisplayOption_dbFile com.android.launcher3:dbFile}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_defaultLayoutId com.android.launcher3:defaultLayoutId}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_defaultSplitDisplayLayoutId com.android.launcher3:defaultSplitDisplayLayoutId}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_demoModeLayoutId com.android.launcher3:demoModeLayoutId}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_deviceCategory com.android.launcher3:deviceCategory}</code></td><td>By default all categories are enabled</td></tr>
     * <tr><td><code>{@link #GridDisplayOption_devicePaddingId com.android.launcher3:devicePaddingId}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_isScalable com.android.launcher3:isScalable}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_name com.android.launcher3:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numAllAppsColumns com.android.launcher3:numAllAppsColumns}</code></td><td>numAllAppsColumns defaults to numColumns, if not specified</td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numColumns com.android.launcher3:numColumns}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numExtendedAllAppsColumns com.android.launcher3:numExtendedAllAppsColumns}</code></td><td>Number of columns to use when extending the all-apps size,
     * defaults to 2 * numAllAppsColumns</td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numExtendedHotseatIcons com.android.launcher3:numExtendedHotseatIcons}</code></td><td>Number of icons to use when extending the hotseat size,
     * defaults to 2 * numHotseatIcons</td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numFolderColumns com.android.launcher3:numFolderColumns}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numFolderRows com.android.launcher3:numFolderRows}</code></td><td>numFolderRows & numFolderColumns defaults to numRows & numColumns, if not specified</td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numHotseatIcons com.android.launcher3:numHotseatIcons}</code></td><td>numHotseatIcons defaults to numColumns, if not specified</td></tr>
     * <tr><td><code>{@link #GridDisplayOption_numRows com.android.launcher3:numRows}</code></td><td></td></tr>
     * </table>
     * @see #GridDisplayOption_dbFile
     * @see #GridDisplayOption_defaultLayoutId
     * @see #GridDisplayOption_defaultSplitDisplayLayoutId
     * @see #GridDisplayOption_demoModeLayoutId
     * @see #GridDisplayOption_deviceCategory
     * @see #GridDisplayOption_devicePaddingId
     * @see #GridDisplayOption_isScalable
     * @see #GridDisplayOption_name
     * @see #GridDisplayOption_numAllAppsColumns
     * @see #GridDisplayOption_numColumns
     * @see #GridDisplayOption_numExtendedAllAppsColumns
     * @see #GridDisplayOption_numExtendedHotseatIcons
     * @see #GridDisplayOption_numFolderColumns
     * @see #GridDisplayOption_numFolderRows
     * @see #GridDisplayOption_numHotseatIcons
     * @see #GridDisplayOption_numRows
     */
    public static final int[] GridDisplayOption={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#dbFile}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:dbFile
     */
    public static int GridDisplayOption_dbFile=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#defaultLayoutId}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:defaultLayoutId
     */
    public static int GridDisplayOption_defaultLayoutId=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#defaultSplitDisplayLayoutId}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:defaultSplitDisplayLayoutId
     */
    public static int GridDisplayOption_defaultSplitDisplayLayoutId=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#demoModeLayoutId}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:demoModeLayoutId
     */
    public static int GridDisplayOption_demoModeLayoutId=3;
    /**
     * <p>
     * @attr description
     * By default all categories are enabled
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multi_display</td><td>4</td><td>Enable on multi display devices only</td></tr>
     * <tr><td>phone</td><td>1</td><td>Enable on phone only</td></tr>
     * <tr><td>tablet</td><td>2</td><td>Enable on tablets only</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:deviceCategory
     */
    public static int GridDisplayOption_deviceCategory=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#devicePaddingId}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:devicePaddingId
     */
    public static int GridDisplayOption_devicePaddingId=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#isScalable}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:isScalable
     */
    public static int GridDisplayOption_isScalable=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#name}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:name
     */
    public static int GridDisplayOption_name=7;
    /**
     * <p>
     * @attr description
     * numAllAppsColumns defaults to numColumns, if not specified
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numAllAppsColumns
     */
    public static int GridDisplayOption_numAllAppsColumns=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numColumns}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numColumns
     */
    public static int GridDisplayOption_numColumns=9;
    /**
     * <p>
     * @attr description
     * Number of columns to use when extending the all-apps size,
     * defaults to 2 * numAllAppsColumns
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numExtendedAllAppsColumns
     */
    public static int GridDisplayOption_numExtendedAllAppsColumns=10;
    /**
     * <p>
     * @attr description
     * Number of icons to use when extending the hotseat size,
     * defaults to 2 * numHotseatIcons
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numExtendedHotseatIcons
     */
    public static int GridDisplayOption_numExtendedHotseatIcons=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numFolderColumns}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numFolderColumns
     */
    public static int GridDisplayOption_numFolderColumns=12;
    /**
     * <p>
     * @attr description
     * numFolderRows & numFolderColumns defaults to numRows & numColumns, if not specified
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numFolderRows
     */
    public static int GridDisplayOption_numFolderRows=13;
    /**
     * <p>
     * @attr description
     * numHotseatIcons defaults to numColumns, if not specified
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numHotseatIcons
     */
    public static int GridDisplayOption_numHotseatIcons=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#numRows}
     * attribute's value can be found in the {@link #GridDisplayOption} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:numRows
     */
    public static int GridDisplayOption_numRows=15;
    /**
     * Attributes that can be used with a ImageFilterView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ImageFilterView_altSrc com.android.launcher3:altSrc}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_brightness com.android.launcher3:brightness}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_contrast com.android.launcher3:contrast}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_crossfade com.android.launcher3:crossfade}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_overlay com.android.launcher3:overlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_round com.android.launcher3:round}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_roundPercent com.android.launcher3:roundPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_saturation com.android.launcher3:saturation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_warmth com.android.launcher3:warmth}</code></td><td></td></tr>
     * </table>
     * @see #ImageFilterView_altSrc
     * @see #ImageFilterView_brightness
     * @see #ImageFilterView_contrast
     * @see #ImageFilterView_crossfade
     * @see #ImageFilterView_overlay
     * @see #ImageFilterView_round
     * @see #ImageFilterView_roundPercent
     * @see #ImageFilterView_saturation
     * @see #ImageFilterView_warmth
     */
    public static final int[] ImageFilterView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#altSrc}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:altSrc
     */
    public static int ImageFilterView_altSrc=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#brightness}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:brightness
     */
    public static int ImageFilterView_brightness=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#contrast}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:contrast
     */
    public static int ImageFilterView_contrast=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#crossfade}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:crossfade
     */
    public static int ImageFilterView_crossfade=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#overlay}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:overlay
     */
    public static int ImageFilterView_overlay=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#round}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:round
     */
    public static int ImageFilterView_round=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#roundPercent}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:roundPercent
     */
    public static int ImageFilterView_roundPercent=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#saturation}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:saturation
     */
    public static int ImageFilterView_saturation=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#warmth}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:warmth
     */
    public static int ImageFilterView_warmth=8;
    /**
     * Attributes that can be used with a Include.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Include_folderItems com.android.launcher3:folderItems}</code></td><td></td></tr>
     * <tr><td><code>{@link #Include_workspace com.android.launcher3:workspace}</code></td><td></td></tr>
     * </table>
     * @see #Include_folderItems
     * @see #Include_workspace
     */
    public static final int[] Include={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#folderItems}
     * attribute's value can be found in the {@link #Include} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:folderItems
     */
    public static int Include_folderItems=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#workspace}
     * attribute's value can be found in the {@link #Include} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:workspace
     */
    public static int Include_workspace=1;
    /**
     * Attributes that can be used with a Insets.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Insets_paddingBottomSystemWindowInsets com.android.launcher3:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #Insets_paddingLeftSystemWindowInsets com.android.launcher3:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Insets_paddingRightSystemWindowInsets com.android.launcher3:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Insets_paddingTopSystemWindowInsets com.android.launcher3:paddingTopSystemWindowInsets}</code></td><td></td></tr>
     * </table>
     * @see #Insets_paddingBottomSystemWindowInsets
     * @see #Insets_paddingLeftSystemWindowInsets
     * @see #Insets_paddingRightSystemWindowInsets
     * @see #Insets_paddingTopSystemWindowInsets
     */
    public static final int[] Insets={
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingBottomSystemWindowInsets
     */
    public static int Insets_paddingBottomSystemWindowInsets=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#paddingLeftSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingLeftSystemWindowInsets
     */
    public static int Insets_paddingLeftSystemWindowInsets=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#paddingRightSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingRightSystemWindowInsets
     */
    public static int Insets_paddingRightSystemWindowInsets=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#paddingTopSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:paddingTopSystemWindowInsets
     */
    public static int Insets_paddingTopSystemWindowInsets=3;
    /**
     * Attributes that can be used with a InsettableFrameLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #InsettableFrameLayout_Layout_layout_ignoreInsets com.android.launcher3:layout_ignoreInsets}</code></td><td></td></tr>
     * </table>
     * @see #InsettableFrameLayout_Layout_layout_ignoreInsets
     */
    public static final int[] InsettableFrameLayout_Layout={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_ignoreInsets}
     * attribute's value can be found in the {@link #InsettableFrameLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_ignoreInsets
     */
    public static int InsettableFrameLayout_Layout_layout_ignoreInsets=0;
    /**
     * Attributes that can be used with a KeyAttribute.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyAttribute_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_curveFit com.android.launcher3:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_framePosition com.android.launcher3:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_motionProgress com.android.launcher3:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_motionTarget com.android.launcher3:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_transitionPathRotate com.android.launcher3:transitionPathRotate}</code></td><td></td></tr>
     * </table>
     * @see #KeyAttribute_android_alpha
     * @see #KeyAttribute_android_translationX
     * @see #KeyAttribute_android_translationY
     * @see #KeyAttribute_android_scaleX
     * @see #KeyAttribute_android_scaleY
     * @see #KeyAttribute_android_rotation
     * @see #KeyAttribute_android_rotationX
     * @see #KeyAttribute_android_rotationY
     * @see #KeyAttribute_android_translationZ
     * @see #KeyAttribute_android_elevation
     * @see #KeyAttribute_curveFit
     * @see #KeyAttribute_framePosition
     * @see #KeyAttribute_motionProgress
     * @see #KeyAttribute_motionTarget
     * @see #KeyAttribute_transitionEasing
     * @see #KeyAttribute_transitionPathRotate
     */
    public static final int[] KeyAttribute={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int KeyAttribute_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static int KeyAttribute_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static int KeyAttribute_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static int KeyAttribute_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static int KeyAttribute_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static int KeyAttribute_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static int KeyAttribute_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static int KeyAttribute_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static int KeyAttribute_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int KeyAttribute_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:curveFit
     */
    public static int KeyAttribute_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:framePosition
     */
    public static int KeyAttribute_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionProgress
     */
    public static int KeyAttribute_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:motionTarget
     */
    public static int KeyAttribute_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int KeyAttribute_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:transitionPathRotate
     */
    public static int KeyAttribute_transitionPathRotate=15;
    /**
     * Attributes that can be used with a KeyCycle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyCycle_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_curveFit com.android.launcher3:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_framePosition com.android.launcher3:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_motionProgress com.android.launcher3:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_motionTarget com.android.launcher3:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_transitionPathRotate com.android.launcher3:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveOffset com.android.launcher3:waveOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_wavePeriod com.android.launcher3:wavePeriod}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveShape com.android.launcher3:waveShape}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveVariesBy com.android.launcher3:waveVariesBy}</code></td><td></td></tr>
     * </table>
     * @see #KeyCycle_android_alpha
     * @see #KeyCycle_android_translationX
     * @see #KeyCycle_android_translationY
     * @see #KeyCycle_android_scaleX
     * @see #KeyCycle_android_scaleY
     * @see #KeyCycle_android_rotation
     * @see #KeyCycle_android_rotationX
     * @see #KeyCycle_android_rotationY
     * @see #KeyCycle_android_translationZ
     * @see #KeyCycle_android_elevation
     * @see #KeyCycle_curveFit
     * @see #KeyCycle_framePosition
     * @see #KeyCycle_motionProgress
     * @see #KeyCycle_motionTarget
     * @see #KeyCycle_transitionEasing
     * @see #KeyCycle_transitionPathRotate
     * @see #KeyCycle_waveOffset
     * @see #KeyCycle_wavePeriod
     * @see #KeyCycle_waveShape
     * @see #KeyCycle_waveVariesBy
     */
    public static final int[] KeyCycle={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int KeyCycle_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static int KeyCycle_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static int KeyCycle_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static int KeyCycle_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static int KeyCycle_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static int KeyCycle_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static int KeyCycle_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static int KeyCycle_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static int KeyCycle_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int KeyCycle_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:curveFit
     */
    public static int KeyCycle_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:framePosition
     */
    public static int KeyCycle_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionProgress
     */
    public static int KeyCycle_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:motionTarget
     */
    public static int KeyCycle_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int KeyCycle_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:transitionPathRotate
     */
    public static int KeyCycle_transitionPathRotate=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#waveOffset}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:waveOffset
     */
    public static int KeyCycle_waveOffset=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#wavePeriod}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:wavePeriod
     */
    public static int KeyCycle_wavePeriod=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#waveShape}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:waveShape
     */
    public static int KeyCycle_waveShape=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#waveVariesBy}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>position</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:waveVariesBy
     */
    public static int KeyCycle_waveVariesBy=19;
    public static final int[] KeyFrame={
    };
    public static final int[] KeyFramesAcceleration={
    };
    public static final int[] KeyFramesVelocity={
    };
    /**
     * Attributes that can be used with a KeyPosition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyPosition_curveFit com.android.launcher3:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_drawPath com.android.launcher3:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_framePosition com.android.launcher3:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_keyPositionType com.android.launcher3:keyPositionType}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_motionTarget com.android.launcher3:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_pathMotionArc com.android.launcher3:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentHeight com.android.launcher3:percentHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentWidth com.android.launcher3:percentWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentX com.android.launcher3:percentX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentY com.android.launcher3:percentY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_sizePercent com.android.launcher3:sizePercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * </table>
     * @see #KeyPosition_curveFit
     * @see #KeyPosition_drawPath
     * @see #KeyPosition_framePosition
     * @see #KeyPosition_keyPositionType
     * @see #KeyPosition_motionTarget
     * @see #KeyPosition_pathMotionArc
     * @see #KeyPosition_percentHeight
     * @see #KeyPosition_percentWidth
     * @see #KeyPosition_percentX
     * @see #KeyPosition_percentY
     * @see #KeyPosition_sizePercent
     * @see #KeyPosition_transitionEasing
     */
    public static final int[] KeyPosition={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:curveFit
     */
    public static int KeyPosition_curveFit=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawPath}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:drawPath
     */
    public static int KeyPosition_drawPath=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:framePosition
     */
    public static int KeyPosition_framePosition=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyPositionType}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>deltaRelative</td><td>0</td><td></td></tr>
     * <tr><td>parentRelative</td><td>2</td><td></td></tr>
     * <tr><td>pathRelative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:keyPositionType
     */
    public static int KeyPosition_keyPositionType=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:motionTarget
     */
    public static int KeyPosition_motionTarget=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pathMotionArc
     */
    public static int KeyPosition_pathMotionArc=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#percentHeight}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:percentHeight
     */
    public static int KeyPosition_percentHeight=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#percentWidth}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:percentWidth
     */
    public static int KeyPosition_percentWidth=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#percentX}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:percentX
     */
    public static int KeyPosition_percentX=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#percentY}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:percentY
     */
    public static int KeyPosition_percentY=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#sizePercent}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:sizePercent
     */
    public static int KeyPosition_sizePercent=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int KeyPosition_transitionEasing=11;
    /**
     * Attributes that can be used with a KeyTimeCycle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_curveFit com.android.launcher3:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_framePosition com.android.launcher3:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_motionProgress com.android.launcher3:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_motionTarget com.android.launcher3:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_transitionPathRotate com.android.launcher3:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveDecay com.android.launcher3:waveDecay}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveOffset com.android.launcher3:waveOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_wavePeriod com.android.launcher3:wavePeriod}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveShape com.android.launcher3:waveShape}</code></td><td></td></tr>
     * </table>
     * @see #KeyTimeCycle_android_alpha
     * @see #KeyTimeCycle_android_translationX
     * @see #KeyTimeCycle_android_translationY
     * @see #KeyTimeCycle_android_scaleX
     * @see #KeyTimeCycle_android_scaleY
     * @see #KeyTimeCycle_android_rotation
     * @see #KeyTimeCycle_android_rotationX
     * @see #KeyTimeCycle_android_rotationY
     * @see #KeyTimeCycle_android_translationZ
     * @see #KeyTimeCycle_android_elevation
     * @see #KeyTimeCycle_curveFit
     * @see #KeyTimeCycle_framePosition
     * @see #KeyTimeCycle_motionProgress
     * @see #KeyTimeCycle_motionTarget
     * @see #KeyTimeCycle_transitionEasing
     * @see #KeyTimeCycle_transitionPathRotate
     * @see #KeyTimeCycle_waveDecay
     * @see #KeyTimeCycle_waveOffset
     * @see #KeyTimeCycle_wavePeriod
     * @see #KeyTimeCycle_waveShape
     */
    public static final int[] KeyTimeCycle={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int KeyTimeCycle_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static int KeyTimeCycle_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static int KeyTimeCycle_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static int KeyTimeCycle_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static int KeyTimeCycle_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static int KeyTimeCycle_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static int KeyTimeCycle_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static int KeyTimeCycle_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static int KeyTimeCycle_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int KeyTimeCycle_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:curveFit
     */
    public static int KeyTimeCycle_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:framePosition
     */
    public static int KeyTimeCycle_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionProgress
     */
    public static int KeyTimeCycle_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:motionTarget
     */
    public static int KeyTimeCycle_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int KeyTimeCycle_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:transitionPathRotate
     */
    public static int KeyTimeCycle_transitionPathRotate=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#waveDecay}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:waveDecay
     */
    public static int KeyTimeCycle_waveDecay=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#waveOffset}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:waveOffset
     */
    public static int KeyTimeCycle_waveOffset=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#wavePeriod}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:wavePeriod
     */
    public static int KeyTimeCycle_wavePeriod=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#waveShape}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:waveShape
     */
    public static int KeyTimeCycle_waveShape=19;
    /**
     * Attributes that can be used with a KeyTrigger.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyTrigger_framePosition com.android.launcher3:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motionTarget com.android.launcher3:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motion_postLayoutCollision com.android.launcher3:motion_postLayoutCollision}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motion_triggerOnCollision com.android.launcher3:motion_triggerOnCollision}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onCross com.android.launcher3:onCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onNegativeCross com.android.launcher3:onNegativeCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onPositiveCross com.android.launcher3:onPositiveCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerId com.android.launcher3:triggerId}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerReceiver com.android.launcher3:triggerReceiver}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerSlack com.android.launcher3:triggerSlack}</code></td><td></td></tr>
     * </table>
     * @see #KeyTrigger_framePosition
     * @see #KeyTrigger_motionTarget
     * @see #KeyTrigger_motion_postLayoutCollision
     * @see #KeyTrigger_motion_triggerOnCollision
     * @see #KeyTrigger_onCross
     * @see #KeyTrigger_onNegativeCross
     * @see #KeyTrigger_onPositiveCross
     * @see #KeyTrigger_triggerId
     * @see #KeyTrigger_triggerReceiver
     * @see #KeyTrigger_triggerSlack
     */
    public static final int[] KeyTrigger={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:framePosition
     */
    public static int KeyTrigger_framePosition=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:motionTarget
     */
    public static int KeyTrigger_motionTarget=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motion_postLayoutCollision}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:motion_postLayoutCollision
     */
    public static int KeyTrigger_motion_postLayoutCollision=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motion_triggerOnCollision}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:motion_triggerOnCollision
     */
    public static int KeyTrigger_motion_triggerOnCollision=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#onCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:onCross
     */
    public static int KeyTrigger_onCross=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#onNegativeCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:onNegativeCross
     */
    public static int KeyTrigger_onNegativeCross=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#onPositiveCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:onPositiveCross
     */
    public static int KeyTrigger_onPositiveCross=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#triggerId}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:triggerId
     */
    public static int KeyTrigger_triggerId=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#triggerReceiver}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:triggerReceiver
     */
    public static int KeyTrigger_triggerReceiver=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#triggerSlack}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:triggerSlack
     */
    public static int KeyTrigger_triggerSlack=9;
    /**
     * Attributes that can be used with a Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierAllowsGoneWidgets com.android.launcher3:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierDirection com.android.launcher3:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierMargin com.android.launcher3:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_chainUseRtl com.android.launcher3:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_constraint_referenced_ids com.android.launcher3:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constrainedHeight com.android.launcher3:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constrainedWidth com.android.launcher3:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBaseline_creator com.android.launcher3:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBaseline_toBaselineOf com.android.launcher3:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_creator com.android.launcher3:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_toBottomOf com.android.launcher3:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_toTopOf com.android.launcher3:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircle com.android.launcher3:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircleAngle com.android.launcher3:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircleRadius com.android.launcher3:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintDimensionRatio com.android.launcher3:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintEnd_toEndOf com.android.launcher3:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintEnd_toStartOf com.android.launcher3:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_begin com.android.launcher3:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_end com.android.launcher3:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_percent com.android.launcher3:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_default com.android.launcher3:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_max com.android.launcher3:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_min com.android.launcher3:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_percent com.android.launcher3:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_bias com.android.launcher3:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_chainStyle com.android.launcher3:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_weight com.android.launcher3:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_creator com.android.launcher3:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_toLeftOf com.android.launcher3:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_toRightOf com.android.launcher3:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_creator com.android.launcher3:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_toLeftOf com.android.launcher3:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_toRightOf com.android.launcher3:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintStart_toEndOf com.android.launcher3:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintStart_toStartOf com.android.launcher3:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_creator com.android.launcher3:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_toBottomOf com.android.launcher3:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_toTopOf com.android.launcher3:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_bias com.android.launcher3:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_chainStyle com.android.launcher3:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_weight com.android.launcher3:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_default com.android.launcher3:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_max com.android.launcher3:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_min com.android.launcher3:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_percent com.android.launcher3:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_editor_absoluteX com.android.launcher3:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_editor_absoluteY com.android.launcher3:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginBottom com.android.launcher3:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginEnd com.android.launcher3:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginLeft com.android.launcher3:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginRight com.android.launcher3:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginStart com.android.launcher3:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginTop com.android.launcher3:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_maxHeight com.android.launcher3:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_maxWidth com.android.launcher3:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_minHeight com.android.launcher3:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_minWidth com.android.launcher3:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #Layout_android_orientation
     * @see #Layout_android_layout_width
     * @see #Layout_android_layout_height
     * @see #Layout_android_layout_marginLeft
     * @see #Layout_android_layout_marginTop
     * @see #Layout_android_layout_marginRight
     * @see #Layout_android_layout_marginBottom
     * @see #Layout_android_layout_marginStart
     * @see #Layout_android_layout_marginEnd
     * @see #Layout_barrierAllowsGoneWidgets
     * @see #Layout_barrierDirection
     * @see #Layout_barrierMargin
     * @see #Layout_chainUseRtl
     * @see #Layout_constraint_referenced_ids
     * @see #Layout_layout_constrainedHeight
     * @see #Layout_layout_constrainedWidth
     * @see #Layout_layout_constraintBaseline_creator
     * @see #Layout_layout_constraintBaseline_toBaselineOf
     * @see #Layout_layout_constraintBottom_creator
     * @see #Layout_layout_constraintBottom_toBottomOf
     * @see #Layout_layout_constraintBottom_toTopOf
     * @see #Layout_layout_constraintCircle
     * @see #Layout_layout_constraintCircleAngle
     * @see #Layout_layout_constraintCircleRadius
     * @see #Layout_layout_constraintDimensionRatio
     * @see #Layout_layout_constraintEnd_toEndOf
     * @see #Layout_layout_constraintEnd_toStartOf
     * @see #Layout_layout_constraintGuide_begin
     * @see #Layout_layout_constraintGuide_end
     * @see #Layout_layout_constraintGuide_percent
     * @see #Layout_layout_constraintHeight_default
     * @see #Layout_layout_constraintHeight_max
     * @see #Layout_layout_constraintHeight_min
     * @see #Layout_layout_constraintHeight_percent
     * @see #Layout_layout_constraintHorizontal_bias
     * @see #Layout_layout_constraintHorizontal_chainStyle
     * @see #Layout_layout_constraintHorizontal_weight
     * @see #Layout_layout_constraintLeft_creator
     * @see #Layout_layout_constraintLeft_toLeftOf
     * @see #Layout_layout_constraintLeft_toRightOf
     * @see #Layout_layout_constraintRight_creator
     * @see #Layout_layout_constraintRight_toLeftOf
     * @see #Layout_layout_constraintRight_toRightOf
     * @see #Layout_layout_constraintStart_toEndOf
     * @see #Layout_layout_constraintStart_toStartOf
     * @see #Layout_layout_constraintTop_creator
     * @see #Layout_layout_constraintTop_toBottomOf
     * @see #Layout_layout_constraintTop_toTopOf
     * @see #Layout_layout_constraintVertical_bias
     * @see #Layout_layout_constraintVertical_chainStyle
     * @see #Layout_layout_constraintVertical_weight
     * @see #Layout_layout_constraintWidth_default
     * @see #Layout_layout_constraintWidth_max
     * @see #Layout_layout_constraintWidth_min
     * @see #Layout_layout_constraintWidth_percent
     * @see #Layout_layout_editor_absoluteX
     * @see #Layout_layout_editor_absoluteY
     * @see #Layout_layout_goneMarginBottom
     * @see #Layout_layout_goneMarginEnd
     * @see #Layout_layout_goneMarginLeft
     * @see #Layout_layout_goneMarginRight
     * @see #Layout_layout_goneMarginStart
     * @see #Layout_layout_goneMarginTop
     * @see #Layout_maxHeight
     * @see #Layout_maxWidth
     * @see #Layout_minHeight
     * @see #Layout_minWidth
     */
    public static final int[] Layout={
      0x010100c4, 0x010100f4, 0x010100f5, 0x010100f7, 
      0x010100f8, 0x010100f9, 0x010100fa, 0x010103b5, 
      0x010103b6, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static int Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static int Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static int Layout_android_layout_marginLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static int Layout_android_layout_marginTop=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static int Layout_android_layout_marginRight=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static int Layout_android_layout_marginBottom=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static int Layout_android_layout_marginStart=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static int Layout_android_layout_marginEnd=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:barrierAllowsGoneWidgets
     */
    public static int Layout_barrierAllowsGoneWidgets=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:barrierDirection
     */
    public static int Layout_barrierDirection=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:barrierMargin
     */
    public static int Layout_barrierMargin=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:chainUseRtl
     */
    public static int Layout_chainUseRtl=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:constraint_referenced_ids
     */
    public static int Layout_constraint_referenced_ids=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedHeight
     */
    public static int Layout_layout_constrainedHeight=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:layout_constrainedWidth
     */
    public static int Layout_layout_constrainedWidth=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_creator
     */
    public static int Layout_layout_constraintBaseline_creator=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBaseline_toBaselineOf
     */
    public static int Layout_layout_constraintBaseline_toBaselineOf=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintBottom_creator
     */
    public static int Layout_layout_constraintBottom_creator=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toBottomOf
     */
    public static int Layout_layout_constraintBottom_toBottomOf=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintBottom_toTopOf
     */
    public static int Layout_layout_constraintBottom_toTopOf=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircle
     */
    public static int Layout_layout_constraintCircle=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintCircleAngle
     */
    public static int Layout_layout_constraintCircleAngle=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintCircleRadius
     */
    public static int Layout_layout_constraintCircleRadius=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintDimensionRatio
     */
    public static int Layout_layout_constraintDimensionRatio=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toEndOf
     */
    public static int Layout_layout_constraintEnd_toEndOf=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintEnd_toStartOf
     */
    public static int Layout_layout_constraintEnd_toStartOf=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_begin
     */
    public static int Layout_layout_constraintGuide_begin=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_constraintGuide_end
     */
    public static int Layout_layout_constraintGuide_end=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintGuide_percent
     */
    public static int Layout_layout_constraintGuide_percent=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_default
     */
    public static int Layout_layout_constraintHeight_default=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_max
     */
    public static int Layout_layout_constraintHeight_max=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHeight_min
     */
    public static int Layout_layout_constraintHeight_min=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHeight_percent
     */
    public static int Layout_layout_constraintHeight_percent=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_bias
     */
    public static int Layout_layout_constraintHorizontal_bias=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_chainStyle
     */
    public static int Layout_layout_constraintHorizontal_chainStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintHorizontal_weight
     */
    public static int Layout_layout_constraintHorizontal_weight=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintLeft_creator
     */
    public static int Layout_layout_constraintLeft_creator=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toLeftOf
     */
    public static int Layout_layout_constraintLeft_toLeftOf=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintLeft_toRightOf
     */
    public static int Layout_layout_constraintLeft_toRightOf=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintRight_creator
     */
    public static int Layout_layout_constraintRight_creator=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toLeftOf
     */
    public static int Layout_layout_constraintRight_toLeftOf=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintRight_toRightOf
     */
    public static int Layout_layout_constraintRight_toRightOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toEndOf
     */
    public static int Layout_layout_constraintStart_toEndOf=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintStart_toStartOf
     */
    public static int Layout_layout_constraintStart_toStartOf=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:layout_constraintTop_creator
     */
    public static int Layout_layout_constraintTop_creator=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toBottomOf
     */
    public static int Layout_layout_constraintTop_toBottomOf=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintTop_toTopOf
     */
    public static int Layout_layout_constraintTop_toTopOf=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_bias
     */
    public static int Layout_layout_constraintVertical_bias=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintVertical_chainStyle
     */
    public static int Layout_layout_constraintVertical_chainStyle=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintVertical_weight
     */
    public static int Layout_layout_constraintVertical_weight=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_default
     */
    public static int Layout_layout_constraintWidth_default=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_max
     */
    public static int Layout_layout_constraintWidth_max=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layout_constraintWidth_min
     */
    public static int Layout_layout_constraintWidth_min=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:layout_constraintWidth_percent
     */
    public static int Layout_layout_constraintWidth_percent=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteX
     */
    public static int Layout_layout_editor_absoluteX=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_editor_absoluteY
     */
    public static int Layout_layout_editor_absoluteY=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginBottom
     */
    public static int Layout_layout_goneMarginBottom=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginEnd
     */
    public static int Layout_layout_goneMarginEnd=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginLeft
     */
    public static int Layout_layout_goneMarginLeft=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginRight
     */
    public static int Layout_layout_goneMarginRight=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginStart
     */
    public static int Layout_layout_goneMarginStart=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:layout_goneMarginTop
     */
    public static int Layout_layout_goneMarginTop=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxHeight
     */
    public static int Layout_maxHeight=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxWidth
     */
    public static int Layout_maxWidth=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:minHeight
     */
    public static int Layout_minHeight=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:minWidth
     */
    public static int Layout_minWidth=66;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.launcher3:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.launcher3:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.launcher3:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.launcher3:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:divider
     */
    public static int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:dividerPadding
     */
    public static int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:measureWithLargestChild
     */
    public static int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:showDividers
     */
    public static int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a LinearProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearProgressIndicator_indeterminateAnimationType com.android.launcher3:indeterminateAnimationType}</code></td><td>The animation style of the indeterminate mode.</td></tr>
     * <tr><td><code>{@link #LinearProgressIndicator_indicatorDirectionLinear com.android.launcher3:indicatorDirectionLinear}</code></td><td>The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.</td></tr>
     * </table>
     * @see #LinearProgressIndicator_indeterminateAnimationType
     * @see #LinearProgressIndicator_indicatorDirectionLinear
     */
    public static final int[] LinearProgressIndicator={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The animation style of the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>contiguous</td><td>0</td><td>The track will be filled with three adjacent segments in iterative different colors.
     * This type is only available when there are three or more indicator
     * colors.</td></tr>
     * <tr><td>disjoint</td><td>1</td><td>There will be two disjoint segments in the same color per cycle. The color iterates between cycles.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:indeterminateAnimationType
     */
    public static int LinearProgressIndicator_indeterminateAnimationType=0;
    /**
     * <p>
     * @attr description
     * The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>endToStart</td><td>3</td><td>Animated from the end position to the start position of the track.
     * This will be same as the rightToLeft for API before 17.</td></tr>
     * <tr><td>leftToRight</td><td>0</td><td>Animated from the left end to the right end of the track.</td></tr>
     * <tr><td>rightToLeft</td><td>1</td><td>Animated from the right end to the left end of the track.</td></tr>
     * <tr><td>startToEnd</td><td>2</td><td>Animated from the start position to the end position of the track.
     * This will be same as the leftToRight for API before 17.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:indicatorDirectionLinear
     */
    public static int LinearProgressIndicator_indicatorDirectionLinear=1;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.launcher3:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.launcher3:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * <tr><td><code>{@link #ListPreference_useSimpleSummaryProvider com.android.launcher3:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     * @see #ListPreference_useSimpleSummaryProvider
     */
    public static final int[] ListPreference={
      0x010100b2, 0x010101f8, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:entries
     */
    public static int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:entryValues
     */
    public static int ListPreference_entryValues=3;
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:useSimpleSummaryProvider
     */
    public static int ListPreference_useSimpleSummaryProvider=4;
    /**
     * Attributes that can be used with a LoggablePref.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LoggablePref_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoggablePref_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoggablePref_logIdOff com.android.launcher3:logIdOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #LoggablePref_logIdOn com.android.launcher3:logIdOn}</code></td><td>Ground truth of this Pref integer can be found in StatsLogManager</td></tr>
     * </table>
     * @see #LoggablePref_android_key
     * @see #LoggablePref_android_defaultValue
     * @see #LoggablePref_logIdOff
     * @see #LoggablePref_logIdOn
     */
    public static final int[] LoggablePref={
      0x010101e8, 0x010101ed, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #LoggablePref} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static int LoggablePref_android_key=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #LoggablePref} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static int LoggablePref_android_defaultValue=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#logIdOff}
     * attribute's value can be found in the {@link #LoggablePref} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:logIdOff
     */
    public static int LoggablePref_logIdOff=2;
    /**
     * <p>
     * @attr description
     * Ground truth of this Pref integer can be found in StatsLogManager
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:logIdOn
     */
    public static int LoggablePref_logIdOn=3;
    /**
     * Attributes that can be used with a LottieAnimationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_autoPlay com.android.launcher3:lottie_autoPlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_cacheComposition com.android.launcher3:lottie_cacheComposition}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_colorFilter com.android.launcher3:lottie_colorFilter}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove com.android.launcher3:lottie_enableMergePathsForKitKatAndAbove}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_fallbackRes com.android.launcher3:lottie_fallbackRes}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_fileName com.android.launcher3:lottie_fileName}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_imageAssetsFolder com.android.launcher3:lottie_imageAssetsFolder}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_loop com.android.launcher3:lottie_loop}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_progress com.android.launcher3:lottie_progress}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_rawRes com.android.launcher3:lottie_rawRes}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_renderMode com.android.launcher3:lottie_renderMode}</code></td><td>These values must be kept in sync with the RenderMode enum</td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_repeatCount com.android.launcher3:lottie_repeatCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_repeatMode com.android.launcher3:lottie_repeatMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_scale com.android.launcher3:lottie_scale}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_speed com.android.launcher3:lottie_speed}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_url com.android.launcher3:lottie_url}</code></td><td></td></tr>
     * </table>
     * @see #LottieAnimationView_lottie_autoPlay
     * @see #LottieAnimationView_lottie_cacheComposition
     * @see #LottieAnimationView_lottie_colorFilter
     * @see #LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove
     * @see #LottieAnimationView_lottie_fallbackRes
     * @see #LottieAnimationView_lottie_fileName
     * @see #LottieAnimationView_lottie_imageAssetsFolder
     * @see #LottieAnimationView_lottie_loop
     * @see #LottieAnimationView_lottie_progress
     * @see #LottieAnimationView_lottie_rawRes
     * @see #LottieAnimationView_lottie_renderMode
     * @see #LottieAnimationView_lottie_repeatCount
     * @see #LottieAnimationView_lottie_repeatMode
     * @see #LottieAnimationView_lottie_scale
     * @see #LottieAnimationView_lottie_speed
     * @see #LottieAnimationView_lottie_url
     */
    public static final int[] LottieAnimationView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_autoPlay}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:lottie_autoPlay
     */
    public static int LottieAnimationView_lottie_autoPlay=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_cacheComposition}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:lottie_cacheComposition
     */
    public static int LottieAnimationView_lottie_cacheComposition=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_colorFilter}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:lottie_colorFilter
     */
    public static int LottieAnimationView_lottie_colorFilter=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_enableMergePathsForKitKatAndAbove}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:lottie_enableMergePathsForKitKatAndAbove
     */
    public static int LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_fallbackRes}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:lottie_fallbackRes
     */
    public static int LottieAnimationView_lottie_fallbackRes=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_fileName}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:lottie_fileName
     */
    public static int LottieAnimationView_lottie_fileName=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_imageAssetsFolder}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:lottie_imageAssetsFolder
     */
    public static int LottieAnimationView_lottie_imageAssetsFolder=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_loop}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:lottie_loop
     */
    public static int LottieAnimationView_lottie_loop=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_progress}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:lottie_progress
     */
    public static int LottieAnimationView_lottie_progress=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_rawRes}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:lottie_rawRes
     */
    public static int LottieAnimationView_lottie_rawRes=9;
    /**
     * <p>
     * @attr description
     * These values must be kept in sync with the RenderMode enum
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>hardware</td><td>1</td><td></td></tr>
     * <tr><td>software</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:lottie_renderMode
     */
    public static int LottieAnimationView_lottie_renderMode=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_repeatCount}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:lottie_repeatCount
     */
    public static int LottieAnimationView_lottie_repeatCount=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_repeatMode}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>restart</td><td>1</td><td></td></tr>
     * <tr><td>reverse</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:lottie_repeatMode
     */
    public static int LottieAnimationView_lottie_repeatMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_scale}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:lottie_scale
     */
    public static int LottieAnimationView_lottie_scale=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_speed}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:lottie_speed
     */
    public static int LottieAnimationView_lottie_speed=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#lottie_url}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:lottie_url
     */
    public static int LottieAnimationView_lottie_url=15;
    /**
     * Attributes that can be used with a MaterialAlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetBottom com.android.launcher3:backgroundInsetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetEnd com.android.launcher3:backgroundInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetStart com.android.launcher3:backgroundInsetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetTop com.android.launcher3:backgroundInsetTop}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialog_backgroundInsetBottom
     * @see #MaterialAlertDialog_backgroundInsetEnd
     * @see #MaterialAlertDialog_backgroundInsetStart
     * @see #MaterialAlertDialog_backgroundInsetTop
     */
    public static final int[] MaterialAlertDialog={
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#backgroundInsetBottom}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:backgroundInsetBottom
     */
    public static int MaterialAlertDialog_backgroundInsetBottom=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#backgroundInsetEnd}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:backgroundInsetEnd
     */
    public static int MaterialAlertDialog_backgroundInsetEnd=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#backgroundInsetStart}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:backgroundInsetStart
     */
    public static int MaterialAlertDialog_backgroundInsetStart=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#backgroundInsetTop}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:backgroundInsetTop
     */
    public static int MaterialAlertDialog_backgroundInsetTop=3;
    /**
     * Attributes that can be used with a MaterialAlertDialogTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle com.android.launcher3:materialAlertDialogBodyTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTheme com.android.launcher3:materialAlertDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle com.android.launcher3:materialAlertDialogTitleIconStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle com.android.launcher3:materialAlertDialogTitlePanelStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle com.android.launcher3:materialAlertDialogTitleTextStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTheme
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle
     */
    public static final int[] MaterialAlertDialogTheme={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#materialAlertDialogBodyTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:materialAlertDialogBodyTextStyle
     */
    public static int MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#materialAlertDialogTheme}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:materialAlertDialogTheme
     */
    public static int MaterialAlertDialogTheme_materialAlertDialogTheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#materialAlertDialogTitleIconStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:materialAlertDialogTitleIconStyle
     */
    public static int MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#materialAlertDialogTitlePanelStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:materialAlertDialogTitlePanelStyle
     */
    public static int MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#materialAlertDialogTitleTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:materialAlertDialogTitleTextStyle
     */
    public static int MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle=4;
    /**
     * Attributes that can be used with a MaterialAutoCompleteTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAutoCompleteTextView_android_inputType android:inputType}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAutoCompleteTextView_android_inputType
     */
    public static final int[] MaterialAutoCompleteTextView={
      0x01010220
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#inputType}
     * attribute's value can be found in the {@link #MaterialAutoCompleteTextView} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static int MaterialAutoCompleteTextView_android_inputType=0;
    /**
     * Attributes that can be used with a MaterialButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButton_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTintMode com.android.launcher3:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_cornerRadius com.android.launcher3:cornerRadius}</code></td><td>Specifies the radius for the corners of the button.</td></tr>
     * <tr><td><code>{@link #MaterialButton_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #MaterialButton_icon com.android.launcher3:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconGravity com.android.launcher3:iconGravity}</code></td><td>Specifies how the icon should be positioned on the X axis.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconPadding com.android.launcher3:iconPadding}</code></td><td>Padding between icon and button text.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconSize com.android.launcher3:iconSize}</code></td><td>Size of icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTint com.android.launcher3:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTintMode com.android.launcher3:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_rippleColor com.android.launcher3:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeColor com.android.launcher3:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeWidth com.android.launcher3:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButton_android_background
     * @see #MaterialButton_android_insetLeft
     * @see #MaterialButton_android_insetRight
     * @see #MaterialButton_android_insetTop
     * @see #MaterialButton_android_insetBottom
     * @see #MaterialButton_android_checkable
     * @see #MaterialButton_backgroundTint
     * @see #MaterialButton_backgroundTintMode
     * @see #MaterialButton_cornerRadius
     * @see #MaterialButton_elevation
     * @see #MaterialButton_icon
     * @see #MaterialButton_iconGravity
     * @see #MaterialButton_iconPadding
     * @see #MaterialButton_iconSize
     * @see #MaterialButton_iconTint
     * @see #MaterialButton_iconTintMode
     * @see #MaterialButton_rippleColor
     * @see #MaterialButton_shapeAppearance
     * @see #MaterialButton_shapeAppearanceOverlay
     * @see #MaterialButton_strokeColor
     * @see #MaterialButton_strokeWidth
     */
    public static final int[] MaterialButton={
      0x010100d4, 0x010101b7, 0x010101b8, 0x010101b9, 
      0x010101ba, 0x010101e5, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Background for the MaterialButton. If this is set to a drawable or color, MaterialButton
     * will respect this background and not create its own MaterialShapeDrawable for the
     * background. This means that the insets, shape appearance, and stroke will be ignored.
     * If this attribute is not set or is @empty or @null, a MaterialShapeDrawable will be used
     * for the background based on the insets, shape appearance, and stroke.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static int MaterialButton_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static int MaterialButton_android_insetLeft=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static int MaterialButton_android_insetRight=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static int MaterialButton_android_insetTop=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static int MaterialButton_android_insetBottom=4;
    /**
     * <p>
     * @attr description
     * Whether the button can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static int MaterialButton_android_checkable=5;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int MaterialButton_backgroundTint=6;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:backgroundTintMode
     */
    public static int MaterialButton_backgroundTintMode=7;
    /**
     * <p>
     * @attr description
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:cornerRadius
     */
    public static int MaterialButton_cornerRadius=8;
    /**
     * <p>
     * @attr description
     * Elevation for the MaterialButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int MaterialButton_elevation=9;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of this view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:icon
     */
    public static int MaterialButton_icon=10;
    /**
     * <p>
     * @attr description
     * Specifies how the icon should be positioned on the X axis.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textTop</td><td>20</td><td>Push the icon to the top of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>top</td><td>10</td><td>Push the icon to the top of the button.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:iconGravity
     */
    public static int MaterialButton_iconGravity=11;
    /**
     * <p>
     * @attr description
     * Padding between icon and button text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconPadding
     */
    public static int MaterialButton_iconPadding=12;
    /**
     * <p>
     * @attr description
     * Specifies the width and height to use for the icon drawable.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconSize
     */
    public static int MaterialButton_iconSize=13;
    /**
     * <p>
     * @attr description
     * Tint for icon drawable to display.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:iconTint
     */
    public static int MaterialButton_iconTint=14;
    /**
     * <p>
     * @attr description
     * Tint mode for icon drawable to display.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:iconTintMode
     */
    public static int MaterialButton_iconTintMode=15;
    /**
     * <p>
     * @attr description
     * Ripple color for the button. This may be a color state list, if the desired ripple color
     * should be stateful. Attribute type definition is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:rippleColor
     */
    public static int MaterialButton_rippleColor=16;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialButton. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int MaterialButton_shapeAppearance=17;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialButton. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int MaterialButton_shapeAppearanceOverlay=18;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the button. Attribute type definition
     * is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:strokeColor
     */
    public static int MaterialButton_strokeColor=19;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the button. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:strokeWidth
     */
    public static int MaterialButton_strokeWidth=20;
    /**
     * Attributes that can be used with a MaterialButtonToggleGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_checkedButton com.android.launcher3:checkedButton}</code></td><td>The id of the child button that should be checked by default within this button group.</td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_selectionRequired com.android.launcher3:selectionRequired}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_singleSelection com.android.launcher3:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButtonToggleGroup_checkedButton
     * @see #MaterialButtonToggleGroup_selectionRequired
     * @see #MaterialButtonToggleGroup_singleSelection
     */
    public static final int[] MaterialButtonToggleGroup={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The id of the child button that should be checked by default within this button group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkedButton
     */
    public static int MaterialButtonToggleGroup_checkedButton=0;
    /**
     * <p>
     * @attr description
     * Whether we prevent all child buttons from being deselected.
     * It's false by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:selectionRequired
     */
    public static int MaterialButtonToggleGroup_selectionRequired=1;
    /**
     * <p>
     * @attr description
     * Whether only a single button in this group is allowed to be checked at any time. By
     * default, this is false and multiple buttons in this group are allowed to be checked at
     * once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:singleSelection
     */
    public static int MaterialButtonToggleGroup_singleSelection=2;
    /**
     * Attributes that can be used with a MaterialCalendar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendar_android_windowFullscreen android:windowFullscreen}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayInvalidStyle com.android.launcher3:dayInvalidStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_daySelectedStyle com.android.launcher3:daySelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayStyle com.android.launcher3:dayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayTodayStyle com.android.launcher3:dayTodayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_nestedScrollable com.android.launcher3:nestedScrollable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_rangeFillColor com.android.launcher3:rangeFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearSelectedStyle com.android.launcher3:yearSelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearStyle com.android.launcher3:yearStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearTodayStyle com.android.launcher3:yearTodayStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendar_android_windowFullscreen
     * @see #MaterialCalendar_dayInvalidStyle
     * @see #MaterialCalendar_daySelectedStyle
     * @see #MaterialCalendar_dayStyle
     * @see #MaterialCalendar_dayTodayStyle
     * @see #MaterialCalendar_nestedScrollable
     * @see #MaterialCalendar_rangeFillColor
     * @see #MaterialCalendar_yearSelectedStyle
     * @see #MaterialCalendar_yearStyle
     * @see #MaterialCalendar_yearTodayStyle
     */
    public static final int[] MaterialCalendar={
      0x0101020d, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowFullscreen}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowFullscreen
     */
    public static int MaterialCalendar_android_windowFullscreen=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#dayInvalidStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dayInvalidStyle
     */
    public static int MaterialCalendar_dayInvalidStyle=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#daySelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:daySelectedStyle
     */
    public static int MaterialCalendar_daySelectedStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#dayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dayStyle
     */
    public static int MaterialCalendar_dayStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#dayTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dayTodayStyle
     */
    public static int MaterialCalendar_dayTodayStyle=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#nestedScrollable}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:nestedScrollable
     */
    public static int MaterialCalendar_nestedScrollable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#rangeFillColor}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:rangeFillColor
     */
    public static int MaterialCalendar_rangeFillColor=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#yearSelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:yearSelectedStyle
     */
    public static int MaterialCalendar_yearSelectedStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#yearStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:yearStyle
     */
    public static int MaterialCalendar_yearStyle=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#yearTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:yearTodayStyle
     */
    public static int MaterialCalendar_yearTodayStyle=9;
    /**
     * Attributes that can be used with a MaterialCalendarItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemFillColor com.android.launcher3:itemFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearance com.android.launcher3:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearanceOverlay com.android.launcher3:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeColor com.android.launcher3:itemStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeWidth com.android.launcher3:itemStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemTextColor com.android.launcher3:itemTextColor}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendarItem_android_insetLeft
     * @see #MaterialCalendarItem_android_insetRight
     * @see #MaterialCalendarItem_android_insetTop
     * @see #MaterialCalendarItem_android_insetBottom
     * @see #MaterialCalendarItem_itemFillColor
     * @see #MaterialCalendarItem_itemShapeAppearance
     * @see #MaterialCalendarItem_itemShapeAppearanceOverlay
     * @see #MaterialCalendarItem_itemStrokeColor
     * @see #MaterialCalendarItem_itemStrokeWidth
     * @see #MaterialCalendarItem_itemTextColor
     */
    public static final int[] MaterialCalendarItem={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static int MaterialCalendarItem_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static int MaterialCalendarItem_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static int MaterialCalendarItem_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static int MaterialCalendarItem_android_insetBottom=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemFillColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemFillColor
     */
    public static int MaterialCalendarItem_itemFillColor=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemShapeAppearance}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemShapeAppearance
     */
    public static int MaterialCalendarItem_itemShapeAppearance=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemShapeAppearanceOverlay}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemShapeAppearanceOverlay
     */
    public static int MaterialCalendarItem_itemShapeAppearanceOverlay=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemStrokeColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemStrokeColor
     */
    public static int MaterialCalendarItem_itemStrokeColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemStrokeWidth}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemStrokeWidth
     */
    public static int MaterialCalendarItem_itemStrokeWidth=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemTextColor
     */
    public static int MaterialCalendarItem_itemTextColor=9;
    /**
     * Attributes that can be used with a MaterialCardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCardView_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_cardForegroundColor com.android.launcher3:cardForegroundColor}</code></td><td>Foreground color for CardView.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIcon com.android.launcher3:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconMargin com.android.launcher3:checkedIconMargin}</code></td><td>Check icon margin for Checkable Cards</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconSize com.android.launcher3:checkedIconSize}</code></td><td>Check icon size for Checkable Cards</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconTint com.android.launcher3:checkedIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_rippleColor com.android.launcher3:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_state_dragged com.android.launcher3:state_dragged}</code></td><td>State when a Card is being dragged.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeColor com.android.launcher3:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeWidth com.android.launcher3:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCardView_android_checkable
     * @see #MaterialCardView_cardForegroundColor
     * @see #MaterialCardView_checkedIcon
     * @see #MaterialCardView_checkedIconMargin
     * @see #MaterialCardView_checkedIconSize
     * @see #MaterialCardView_checkedIconTint
     * @see #MaterialCardView_rippleColor
     * @see #MaterialCardView_shapeAppearance
     * @see #MaterialCardView_shapeAppearanceOverlay
     * @see #MaterialCardView_state_dragged
     * @see #MaterialCardView_strokeColor
     * @see #MaterialCardView_strokeWidth
     */
    public static final int[] MaterialCardView={
      0x010101e5, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the card can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static int MaterialCardView_android_checkable=0;
    /**
     * <p>
     * @attr description
     * Foreground color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:cardForegroundColor
     */
    public static int MaterialCardView_cardForegroundColor=1;
    /**
     * <p>
     * @attr description
     * Check icon drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkedIcon
     */
    public static int MaterialCardView_checkedIcon=2;
    /**
     * <p>
     * @attr description
     * Check icon margin for Checkable Cards
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:checkedIconMargin
     */
    public static int MaterialCardView_checkedIconMargin=3;
    /**
     * <p>
     * @attr description
     * Check icon size for Checkable Cards
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:checkedIconSize
     */
    public static int MaterialCardView_checkedIconSize=4;
    /**
     * <p>
     * @attr description
     * Tint color for the checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:checkedIconTint
     */
    public static int MaterialCardView_checkedIconTint=5;
    /**
     * <p>
     * @attr description
     * Ripple color for the Card.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:rippleColor
     */
    public static int MaterialCardView_rippleColor=6;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialCardView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int MaterialCardView_shapeAppearance=7;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialCardView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int MaterialCardView_shapeAppearanceOverlay=8;
    /**
     * <p>
     * @attr description
     * State when a Card is being dragged.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:state_dragged
     */
    public static int MaterialCardView_state_dragged=9;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the card. Attribute type definition is
     * in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:strokeColor
     */
    public static int MaterialCardView_strokeColor=10;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the card. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:strokeWidth
     */
    public static int MaterialCardView_strokeWidth=11;
    /**
     * Attributes that can be used with a MaterialCheckBox.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCheckBox_buttonTint com.android.launcher3:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialCheckBox_useMaterialThemeColors com.android.launcher3:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCheckBox_buttonTint
     * @see #MaterialCheckBox_useMaterialThemeColors
     */
    public static final int[] MaterialCheckBox={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Tint for the checkbox.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:buttonTint
     */
    public static int MaterialCheckBox_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialCheckBox will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:useMaterialThemeColors
     */
    public static int MaterialCheckBox_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialRadioButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialRadioButton_buttonTint com.android.launcher3:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialRadioButton_useMaterialThemeColors com.android.launcher3:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialRadioButton_buttonTint
     * @see #MaterialRadioButton_useMaterialThemeColors
     */
    public static final int[] MaterialRadioButton={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Tint for the radio.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:buttonTint
     */
    public static int MaterialRadioButton_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialRadioButton will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:useMaterialThemeColors
     */
    public static int MaterialRadioButton_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialShape.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #MaterialShape_shapeAppearance
     * @see #MaterialShape_shapeAppearanceOverlay
     */
    public static final int[] MaterialShape={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int MaterialShape_shapeAppearance=0;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int MaterialShape_shapeAppearanceOverlay=1;
    /**
     * Attributes that can be used with a MaterialTextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_letterSpacing android:letterSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_lineHeight com.android.launcher3:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * </table>
     * @see #MaterialTextAppearance_android_letterSpacing
     * @see #MaterialTextAppearance_android_lineHeight
     * @see #MaterialTextAppearance_lineHeight
     */
    public static final int[] MaterialTextAppearance={
      0x010104b6, 0x0101057f, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#letterSpacing}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:letterSpacing
     */
    public static int MaterialTextAppearance_android_letterSpacing=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static int MaterialTextAppearance_android_lineHeight=1;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:lineHeight
     */
    public static int MaterialTextAppearance_lineHeight=2;
    /**
     * Attributes that can be used with a MaterialTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_lineHeight com.android.launcher3:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * </table>
     * @see #MaterialTextView_android_textAppearance
     * @see #MaterialTextView_android_lineHeight
     * @see #MaterialTextView_lineHeight
     */
    public static final int[] MaterialTextView={
      0x01010034, 0x0101057f, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static int MaterialTextView_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static int MaterialTextView_android_lineHeight=1;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:lineHeight
     */
    public static int MaterialTextView_lineHeight=2;
    /**
     * Attributes that can be used with a MaterialTimePicker.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTimePicker_clockIcon com.android.launcher3:clockIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTimePicker_keyboardIcon com.android.launcher3:keyboardIcon}</code></td><td></td></tr>
     * </table>
     * @see #MaterialTimePicker_clockIcon
     * @see #MaterialTimePicker_keyboardIcon
     */
    public static final int[] MaterialTimePicker={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#clockIcon}
     * attribute's value can be found in the {@link #MaterialTimePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:clockIcon
     */
    public static int MaterialTimePicker_clockIcon=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyboardIcon}
     * attribute's value can be found in the {@link #MaterialTimePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:keyboardIcon
     */
    public static int MaterialTimePicker_keyboardIcon=1;
    /**
     * Attributes that can be used with a MaterialToolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialToolbar_navigationIconTint com.android.launcher3:navigationIconTint}</code></td><td>The tint color for the navigation button icon drawable corresponding to
     * the "app:navigationIcon" attribute.</td></tr>
     * <tr><td><code>{@link #MaterialToolbar_subtitleCentered com.android.launcher3:subtitleCentered}</code></td><td>Whether the subtitle text corresponding to the "app:subtitle" attribute
     * should be centered horizontally within the toolbar.</td></tr>
     * <tr><td><code>{@link #MaterialToolbar_titleCentered com.android.launcher3:titleCentered}</code></td><td>Whether the title text corresponding to the "app:title" attribute
     * should be centered horizontally within the toolbar.</td></tr>
     * </table>
     * @see #MaterialToolbar_navigationIconTint
     * @see #MaterialToolbar_subtitleCentered
     * @see #MaterialToolbar_titleCentered
     */
    public static final int[] MaterialToolbar={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The tint color for the navigation button icon drawable corresponding to
     * the "app:navigationIcon" attribute.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:navigationIconTint
     */
    public static int MaterialToolbar_navigationIconTint=0;
    /**
     * <p>
     * @attr description
     * Whether the subtitle text corresponding to the "app:subtitle" attribute
     * should be centered horizontally within the toolbar. Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:subtitleCentered
     */
    public static int MaterialToolbar_subtitleCentered=1;
    /**
     * <p>
     * @attr description
     * Whether the title text corresponding to the "app:title" attribute
     * should be centered horizontally within the toolbar. Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:titleCentered
     */
    public static int MaterialToolbar_titleCentered=2;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.launcher3:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.launcher3:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.launcher3:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.launcher3:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.launcher3:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.launcher3:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.launcher3:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.launcher3:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.launcher3:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.launcher3:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:actionLayout
     */
    public static int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:actionProviderClass
     */
    public static int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:actionViewClass
     */
    public static int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:alphabeticModifiers
     */
    public static int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:contentDescription
     */
    public static int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:iconTint
     */
    public static int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:iconTintMode
     */
    public static int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:numericModifiers
     */
    public static int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:showAsAction
     */
    public static int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:tooltipText
     */
    public static int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.launcher3:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.launcher3:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:preserveIconSpacing
     */
    public static int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:subMenuArrow
     */
    public static int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MockView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MockView_mock_diagonalsColor com.android.launcher3:mock_diagonalsColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_label com.android.launcher3:mock_label}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_labelBackgroundColor com.android.launcher3:mock_labelBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_labelColor com.android.launcher3:mock_labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_showDiagonals com.android.launcher3:mock_showDiagonals}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_showLabel com.android.launcher3:mock_showLabel}</code></td><td></td></tr>
     * </table>
     * @see #MockView_mock_diagonalsColor
     * @see #MockView_mock_label
     * @see #MockView_mock_labelBackgroundColor
     * @see #MockView_mock_labelColor
     * @see #MockView_mock_showDiagonals
     * @see #MockView_mock_showLabel
     */
    public static final int[] MockView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#mock_diagonalsColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:mock_diagonalsColor
     */
    public static int MockView_mock_diagonalsColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#mock_label}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:mock_label
     */
    public static int MockView_mock_label=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#mock_labelBackgroundColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:mock_labelBackgroundColor
     */
    public static int MockView_mock_labelBackgroundColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#mock_labelColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:mock_labelColor
     */
    public static int MockView_mock_labelColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#mock_showDiagonals}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:mock_showDiagonals
     */
    public static int MockView_mock_showDiagonals=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#mock_showLabel}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:mock_showLabel
     */
    public static int MockView_mock_showLabel=5;
    /**
     * Attributes that can be used with a Motion.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Motion_animate_relativeTo com.android.launcher3:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_drawPath com.android.launcher3:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_motionPathRotate com.android.launcher3:motionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_motionStagger com.android.launcher3:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_pathMotionArc com.android.launcher3:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_transitionEasing com.android.launcher3:transitionEasing}</code></td><td></td></tr>
     * </table>
     * @see #Motion_animate_relativeTo
     * @see #Motion_drawPath
     * @see #Motion_motionPathRotate
     * @see #Motion_motionStagger
     * @see #Motion_pathMotionArc
     * @see #Motion_transitionEasing
     */
    public static final int[] Motion={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:animate_relativeTo
     */
    public static int Motion_animate_relativeTo=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#drawPath}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:drawPath
     */
    public static int Motion_drawPath=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionPathRotate}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionPathRotate
     */
    public static int Motion_motionPathRotate=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionStagger}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionStagger
     */
    public static int Motion_motionStagger=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pathMotionArc
     */
    public static int Motion_pathMotionArc=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:transitionEasing
     */
    public static int Motion_transitionEasing=5;
    /**
     * Attributes that can be used with a MotionHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionHelper_onHide com.android.launcher3:onHide}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionHelper_onShow com.android.launcher3:onShow}</code></td><td></td></tr>
     * </table>
     * @see #MotionHelper_onHide
     * @see #MotionHelper_onShow
     */
    public static final int[] MotionHelper={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#onHide}
     * attribute's value can be found in the {@link #MotionHelper} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:onHide
     */
    public static int MotionHelper_onHide=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#onShow}
     * attribute's value can be found in the {@link #MotionHelper} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:onShow
     */
    public static int MotionHelper_onShow=1;
    /**
     * Attributes that can be used with a MotionLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionLayout_applyMotionScene com.android.launcher3:applyMotionScene}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_currentState com.android.launcher3:currentState}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_layoutDescription com.android.launcher3:layoutDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_motionDebug com.android.launcher3:motionDebug}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_motionProgress com.android.launcher3:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_showPaths com.android.launcher3:showPaths}</code></td><td></td></tr>
     * </table>
     * @see #MotionLayout_applyMotionScene
     * @see #MotionLayout_currentState
     * @see #MotionLayout_layoutDescription
     * @see #MotionLayout_motionDebug
     * @see #MotionLayout_motionProgress
     * @see #MotionLayout_showPaths
     */
    public static final int[] MotionLayout={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#applyMotionScene}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:applyMotionScene
     */
    public static int MotionLayout_applyMotionScene=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#currentState}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:currentState
     */
    public static int MotionLayout_currentState=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layoutDescription}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layoutDescription
     */
    public static int MotionLayout_layoutDescription=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionDebug}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>NO_DEBUG</td><td>0</td><td></td></tr>
     * <tr><td>SHOW_ALL</td><td>3</td><td></td></tr>
     * <tr><td>SHOW_PATH</td><td>2</td><td></td></tr>
     * <tr><td>SHOW_PROGRESS</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:motionDebug
     */
    public static int MotionLayout_motionDebug=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionProgress}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionProgress
     */
    public static int MotionLayout_motionProgress=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#showPaths}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:showPaths
     */
    public static int MotionLayout_showPaths=5;
    /**
     * Attributes that can be used with a MotionScene.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionScene_defaultDuration com.android.launcher3:defaultDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionScene_layoutDuringTransition com.android.launcher3:layoutDuringTransition}</code></td><td></td></tr>
     * </table>
     * @see #MotionScene_defaultDuration
     * @see #MotionScene_layoutDuringTransition
     */
    public static final int[] MotionScene={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#defaultDuration}
     * attribute's value can be found in the {@link #MotionScene} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:defaultDuration
     */
    public static int MotionScene_defaultDuration=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layoutDuringTransition}
     * attribute's value can be found in the {@link #MotionScene} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layoutDuringTransition
     */
    public static int MotionScene_layoutDuringTransition=1;
    /**
     * Attributes that can be used with a MotionTelltales.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_tailColor com.android.launcher3:telltales_tailColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_tailScale com.android.launcher3:telltales_tailScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_velocityMode com.android.launcher3:telltales_velocityMode}</code></td><td></td></tr>
     * </table>
     * @see #MotionTelltales_telltales_tailColor
     * @see #MotionTelltales_telltales_tailScale
     * @see #MotionTelltales_telltales_velocityMode
     */
    public static final int[] MotionTelltales={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#telltales_tailColor}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:telltales_tailColor
     */
    public static int MotionTelltales_telltales_tailColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#telltales_tailScale}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:telltales_tailScale
     */
    public static int MotionTelltales_telltales_tailScale=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#telltales_velocityMode}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>layout</td><td>0</td><td></td></tr>
     * <tr><td>postLayout</td><td>1</td><td></td></tr>
     * <tr><td>staticLayout</td><td>3</td><td></td></tr>
     * <tr><td>staticPostLayout</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:telltales_velocityMode
     */
    public static int MotionTelltales_telltales_velocityMode=2;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.android.launcher3:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.android.launcher3:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
      0x010100b2, 0x010101f8, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:entries
     */
    public static int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:entryValues
     */
    public static int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a NavigationBarView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationBarView_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemBackground com.android.launcher3:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemIconSize com.android.launcher3:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemIconTint com.android.launcher3:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemRippleColor com.android.launcher3:itemRippleColor}</code></td><td>The ColorStateList to use for a ripple background.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemTextAppearanceActive com.android.launcher3:itemTextAppearanceActive}</code></td><td>The text appearance to apply to the active navigation item label.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemTextAppearanceInactive com.android.launcher3:itemTextAppearanceInactive}</code></td><td>The text appearance to apply to the inactive navigation item labels.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemTextColor com.android.launcher3:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationBarView_labelVisibilityMode com.android.launcher3:labelVisibilityMode}</code></td><td>Whether navigation items display with a label, without a label, or with a label during
     * selected state.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_menu com.android.launcher3:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * </table>
     * @see #NavigationBarView_backgroundTint
     * @see #NavigationBarView_elevation
     * @see #NavigationBarView_itemBackground
     * @see #NavigationBarView_itemIconSize
     * @see #NavigationBarView_itemIconTint
     * @see #NavigationBarView_itemRippleColor
     * @see #NavigationBarView_itemTextAppearanceActive
     * @see #NavigationBarView_itemTextAppearanceInactive
     * @see #NavigationBarView_itemTextColor
     * @see #NavigationBarView_labelVisibilityMode
     * @see #NavigationBarView_menu
     */
    public static final int[] NavigationBarView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Background tint for the navigation bar.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int NavigationBarView_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * The elevation to use for the navigation bar view
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int NavigationBarView_elevation=1;
    /**
     * <p>
     * @attr description
     * The background for the navigation items. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemBackground
     */
    public static int NavigationBarView_itemBackground=2;
    /**
     * <p>
     * @attr description
     * The size to provide for the navigation item icons.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemIconSize
     */
    public static int NavigationBarView_itemIconSize=3;
    /**
     * <p>
     * @attr description
     * The tint to apply to the navigation item icons. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemIconTint
     */
    public static int NavigationBarView_itemIconTint=4;
    /**
     * <p>
     * @attr description
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemRippleColor
     */
    public static int NavigationBarView_itemRippleColor=5;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemTextAppearanceActive
     */
    public static int NavigationBarView_itemTextAppearanceActive=6;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemTextAppearanceInactive
     */
    public static int NavigationBarView_itemTextAppearanceInactive=7;
    /**
     * <p>
     * @attr description
     * The color to apply to the navigation items' text. Setting itemTextColor will take
     * precedence over android:textColor in itemTextAppearanceInactive or
     * itemTextAppearanceActive. Attribute type definition is in navigation package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemTextColor
     */
    public static int NavigationBarView_itemTextColor=8;
    /**
     * <p>
     * @attr description
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:labelVisibilityMode
     */
    public static int NavigationBarView_labelVisibilityMode=9;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from. Attribute type definition is in
     * navigation package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:menu
     */
    public static int NavigationBarView_menu=10;
    /**
     * Attributes that can be used with a NavigationRailView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationRailView_headerLayout com.android.launcher3:headerLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationRailView_menuGravity com.android.launcher3:menuGravity}</code></td><td>Specifies how the navigation rail destinations should be aligned as a group.</td></tr>
     * </table>
     * @see #NavigationRailView_headerLayout
     * @see #NavigationRailView_menuGravity
     */
    public static final int[] NavigationRailView={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Specifies the layout that will be used to create the header view, if any
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:headerLayout
     */
    public static int NavigationRailView_headerLayout=0;
    /**
     * <p>
     * @attr description
     * Specifies how the navigation rail destinations should be aligned as a group.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>51</td><td>Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL</td></tr>
     * <tr><td>center</td><td>11</td><td>Gravity.CENTER</td></tr>
     * <tr><td>top</td><td>31</td><td>Gravity.TOP | Gravity.CENTER_HORIZONTAL</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:menuGravity
     */
    public static int NavigationRailView_menuGravity=1;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout com.android.launcher3:headerLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground com.android.launcher3:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemHorizontalPadding com.android.launcher3:itemHorizontalPadding}</code></td><td>Horizontal padding (left and right) of navigation items, around the icon & text</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconPadding com.android.launcher3:itemIconPadding}</code></td><td>Padding between the icon and the text for navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconSize com.android.launcher3:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint com.android.launcher3:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemMaxLines com.android.launcher3:itemMaxLines}</code></td><td>Makes the TextView of the item text be at most this many lines tall.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearance com.android.launcher3:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearanceOverlay com.android.launcher3:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeFillColor com.android.launcher3:itemShapeFillColor}</code></td><td>Fill color for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetBottom com.android.launcher3:itemShapeInsetBottom}</code></td><td>Inset bottom margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetEnd com.android.launcher3:itemShapeInsetEnd}</code></td><td>Inset end margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetStart com.android.launcher3:itemShapeInsetStart}</code></td><td>Inset start margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetTop com.android.launcher3:itemShapeInsetTop}</code></td><td>Inset top margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance com.android.launcher3:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor com.android.launcher3:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu com.android.launcher3:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #NavigationView_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #NavigationView_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemHorizontalPadding
     * @see #NavigationView_itemIconPadding
     * @see #NavigationView_itemIconSize
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemMaxLines
     * @see #NavigationView_itemShapeAppearance
     * @see #NavigationView_itemShapeAppearanceOverlay
     * @see #NavigationView_itemShapeFillColor
     * @see #NavigationView_itemShapeInsetBottom
     * @see #NavigationView_itemShapeInsetEnd
     * @see #NavigationView_itemShapeInsetStart
     * @see #NavigationView_itemShapeInsetTop
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     * @see #NavigationView_shapeAppearance
     * @see #NavigationView_shapeAppearanceOverlay
     */
    public static final int[] NavigationView={
      0x010100d4, 0x010100dd, 0x0101011f, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int NavigationView_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int NavigationView_elevation=3;
    /**
     * <p>
     * @attr description
     * Layout resource to inflate as the header
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:headerLayout
     */
    public static int NavigationView_headerLayout=4;
    /**
     * <p>
     * @attr description
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemBackground
     */
    public static int NavigationView_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Horizontal padding (left and right) of navigation items, around the icon & text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemHorizontalPadding
     */
    public static int NavigationView_itemHorizontalPadding=6;
    /**
     * <p>
     * @attr description
     * Padding between the icon and the text for navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemIconPadding
     */
    public static int NavigationView_itemIconPadding=7;
    /**
     * <p>
     * @attr description
     * The size of the icon navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemIconSize
     */
    public static int NavigationView_itemIconSize=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemIconTint
     */
    public static int NavigationView_itemIconTint=9;
    /**
     * <p>
     * @attr description
     * Makes the TextView of the item text be at most this many lines tall.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:itemMaxLines
     */
    public static int NavigationView_itemMaxLines=10;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for the shaped item background. To use the shaped
     * item background, either itemShapeAppearance or itemShapeAppearanceOverlay must be set and
     * itemBackground must be null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemShapeAppearance
     */
    public static int NavigationView_itemShapeAppearance=11;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for item background. To be used to augment
     * attributes declared in itemShapeAppearance. To use the shaped item background, either
     * itemShapeAppearance or itemShapeAppearanceOverlay must be set and itemBackground must be
     * null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemShapeAppearanceOverlay
     */
    public static int NavigationView_itemShapeAppearanceOverlay=12;
    /**
     * <p>
     * @attr description
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemShapeFillColor
     */
    public static int NavigationView_itemShapeFillColor=13;
    /**
     * <p>
     * @attr description
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemShapeInsetBottom
     */
    public static int NavigationView_itemShapeInsetBottom=14;
    /**
     * <p>
     * @attr description
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemShapeInsetEnd
     */
    public static int NavigationView_itemShapeInsetEnd=15;
    /**
     * <p>
     * @attr description
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemShapeInsetStart
     */
    public static int NavigationView_itemShapeInsetStart=16;
    /**
     * <p>
     * @attr description
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:itemShapeInsetTop
     */
    public static int NavigationView_itemShapeInsetTop=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:itemTextAppearance
     */
    public static int NavigationView_itemTextAppearance=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:itemTextColor
     */
    public static int NavigationView_itemTextColor=19;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:menu
     */
    public static int NavigationView_menu=20;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for NavigationView. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int NavigationView_shapeAppearance=21;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for NavigationView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int NavigationView_shapeAppearanceOverlay=22;
    /**
     * Attributes that can be used with a OnClick.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OnClick_clickAction com.android.launcher3:clickAction}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnClick_targetId com.android.launcher3:targetId}</code></td><td></td></tr>
     * </table>
     * @see #OnClick_clickAction
     * @see #OnClick_targetId
     */
    public static final int[] OnClick={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#clickAction}
     * attribute's value can be found in the {@link #OnClick} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>jumpToEnd</td><td>100</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1000</td><td></td></tr>
     * <tr><td>toggle</td><td>11</td><td></td></tr>
     * <tr><td>transitionToEnd</td><td>1</td><td></td></tr>
     * <tr><td>transitionToStart</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:clickAction
     */
    public static int OnClick_clickAction=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#targetId}
     * attribute's value can be found in the {@link #OnClick} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:targetId
     */
    public static int OnClick_targetId=1;
    /**
     * Attributes that can be used with a OnSwipe.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OnSwipe_dragDirection com.android.launcher3:dragDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_dragScale com.android.launcher3:dragScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_limitBoundsTo com.android.launcher3:limitBoundsTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_maxAcceleration com.android.launcher3:maxAcceleration}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_maxVelocity com.android.launcher3:maxVelocity}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_moveWhenScrollAtTop com.android.launcher3:moveWhenScrollAtTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_nestedScrollFlags com.android.launcher3:nestedScrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_onTouchUp com.android.launcher3:onTouchUp}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchAnchorId com.android.launcher3:touchAnchorId}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchAnchorSide com.android.launcher3:touchAnchorSide}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchRegionId com.android.launcher3:touchRegionId}</code></td><td></td></tr>
     * </table>
     * @see #OnSwipe_dragDirection
     * @see #OnSwipe_dragScale
     * @see #OnSwipe_limitBoundsTo
     * @see #OnSwipe_maxAcceleration
     * @see #OnSwipe_maxVelocity
     * @see #OnSwipe_moveWhenScrollAtTop
     * @see #OnSwipe_nestedScrollFlags
     * @see #OnSwipe_onTouchUp
     * @see #OnSwipe_touchAnchorId
     * @see #OnSwipe_touchAnchorSide
     * @see #OnSwipe_touchRegionId
     */
    public static final int[] OnSwipe={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#dragDirection}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dragDown</td><td>1</td><td></td></tr>
     * <tr><td>dragEnd</td><td>5</td><td></td></tr>
     * <tr><td>dragLeft</td><td>2</td><td></td></tr>
     * <tr><td>dragRight</td><td>3</td><td></td></tr>
     * <tr><td>dragStart</td><td>4</td><td></td></tr>
     * <tr><td>dragUp</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:dragDirection
     */
    public static int OnSwipe_dragDirection=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#dragScale}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:dragScale
     */
    public static int OnSwipe_dragScale=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#limitBoundsTo}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:limitBoundsTo
     */
    public static int OnSwipe_limitBoundsTo=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxAcceleration}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:maxAcceleration
     */
    public static int OnSwipe_maxAcceleration=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxVelocity}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:maxVelocity
     */
    public static int OnSwipe_maxVelocity=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#moveWhenScrollAtTop}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:moveWhenScrollAtTop
     */
    public static int OnSwipe_moveWhenScrollAtTop=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#nestedScrollFlags}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disablePostScroll</td><td>1</td><td></td></tr>
     * <tr><td>disableScroll</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:nestedScrollFlags
     */
    public static int OnSwipe_nestedScrollFlags=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#onTouchUp}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>autoComplete</td><td>0</td><td></td></tr>
     * <tr><td>autoCompleteToEnd</td><td>2</td><td></td></tr>
     * <tr><td>autoCompleteToStart</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>4</td><td></td></tr>
     * <tr><td>decelerateAndComplete</td><td>5</td><td></td></tr>
     * <tr><td>stop</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:onTouchUp
     */
    public static int OnSwipe_onTouchUp=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#touchAnchorId}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:touchAnchorId
     */
    public static int OnSwipe_touchAnchorId=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#touchAnchorSide}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>middle</td><td>4</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:touchAnchorSide
     */
    public static int OnSwipe_touchAnchorSide=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#touchRegionId}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:touchRegionId
     */
    public static int OnSwipe_touchRegionId=10;
    /**
     * PagedView specific attributes. These attributes are used to customize
     * a PagedView view in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PagedView_pageIndicator com.android.launcher3:pageIndicator}</code></td><td>The page indicator for this workspace</td></tr>
     * </table>
     * @see #PagedView_pageIndicator
     */
    public static final int[] PagedView={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * The page indicator for this workspace
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:pageIndicator
     */
    public static int PagedView_pageIndicator=0;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.launcher3:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:overlapAnchor
     */
    public static int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.launcher3:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:state_above_anchor
     */
    public static int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.android.launcher3:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.android.launcher3:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.android.launcher3:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.android.launcher3:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enableCopying com.android.launcher3:enableCopying}</code></td><td>Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.android.launcher3:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.android.launcher3:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon com.android.launcher3:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.android.launcher3:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_isPreferenceVisible com.android.launcher3:isPreferenceVisible}</code></td><td>Whether the Preference is visible.</td></tr>
     * <tr><td><code>{@link #Preference_key com.android.launcher3:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_layout com.android.launcher3:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.android.launcher3:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.android.launcher3:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.android.launcher3:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.android.launcher3:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.android.launcher3:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.android.launcher3:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.android.launcher3:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.android.launcher3:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enableCopying
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_isPreferenceVisible
     * @see #Preference_key
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
      0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
      0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
      0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:allowDividerAbove
     */
    public static int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:allowDividerBelow
     */
    public static int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:defaultValue
     */
    public static int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:dependency
     */
    public static int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:enableCopying
     */
    public static int Preference_enableCopying=20;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:enabled
     */
    public static int Preference_enabled=21;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fragment
     */
    public static int Preference_fragment=22;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:icon
     */
    public static int Preference_icon=23;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:iconSpaceReserved
     */
    public static int Preference_iconSpaceReserved=24;
    /**
     * <p>
     * @attr description
     * Whether the Preference is visible. By default, this is set to true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:isPreferenceVisible
     */
    public static int Preference_isPreferenceVisible=25;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:key
     */
    public static int Preference_key=26;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout
     */
    public static int Preference_layout=27;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:order
     */
    public static int Preference_order=28;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:persistent
     */
    public static int Preference_persistent=29;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:selectable
     */
    public static int Preference_selectable=30;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:shouldDisableView
     */
    public static int Preference_shouldDisableView=31;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:singleLineTitle
     */
    public static int Preference_singleLineTitle=32;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summary
     */
    public static int Preference_summary=33;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:title
     */
    public static int Preference_title=34;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:widgetLayout
     */
    public static int Preference_widgetLayout=35;
    /**
     * Attributes that can be used with a PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.android.launcher3:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
      0x010100f2, 0x01010129, 0x0101012a, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:allowDividerAfterLastItem
     */
    public static int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceFragmentCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.android.launcher3:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
      0x010100f2, 0x01010129, 0x0101012a, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:allowDividerAfterLastItem
     */
    public static int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_initialExpandedChildrenCount com.android.launcher3:initialExpandedChildrenCount}</code></td><td>The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden.</td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.android.launcher3:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_initialExpandedChildrenCount
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
      0x010101e7, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:initialExpandedChildrenCount
     */
    public static int PreferenceGroup_initialExpandedChildrenCount=1;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:orderingFromXml
     */
    public static int PreferenceGroup_orderingFromXml=2;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.android.launcher3:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.android.launcher3:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
      0x0101011f, 0x01010120, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxHeight
     */
    public static int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxWidth
     */
    public static int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.android.launcher3:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.android.launcher3:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.android.launcher3:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.android.launcher3:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.android.launcher3:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextAppearance com.android.launcher3:preferenceCategoryTitleTextAppearance}</code></td><td>The preferred TextAppearance for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextColor com.android.launcher3:preferenceCategoryTitleTextColor}</code></td><td>The preferred color for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.android.launcher3:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.android.launcher3:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.android.launcher3:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.android.launcher3:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.android.launcher3:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.android.launcher3:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.android.launcher3:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.android.launcher3:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.android.launcher3:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.android.launcher3:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceCategoryTitleTextAppearance
     * @see #PreferenceTheme_preferenceCategoryTitleTextColor
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     */
    public static final int[] PreferenceTheme={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:checkBoxPreferenceStyle
     */
    public static int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dialogPreferenceStyle
     */
    public static int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:dropdownPreferenceStyle
     */
    public static int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:editTextPreferenceStyle
     */
    public static int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceCategoryStyle
     */
    public static int PreferenceTheme_preferenceCategoryStyle=4;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceCategoryTitleTextAppearance
     */
    public static int PreferenceTheme_preferenceCategoryTitleTextAppearance=5;
    /**
     * <p>
     * @attr description
     * The preferred color for the title displayed in a PreferenceCategory.
     * If this is not specified by a developer, we use ?android:attr/colorAccent above
     * Lollipop, and ?attr/colorAccent below Lollipop (when using an AppCompat theme).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:preferenceCategoryTitleTextColor
     */
    public static int PreferenceTheme_preferenceCategoryTitleTextColor=6;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceFragmentCompatStyle
     */
    public static int PreferenceTheme_preferenceFragmentCompatStyle=7;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceFragmentListStyle
     */
    public static int PreferenceTheme_preferenceFragmentListStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceFragmentStyle
     */
    public static int PreferenceTheme_preferenceFragmentStyle=9;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceInformationStyle
     */
    public static int PreferenceTheme_preferenceInformationStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceScreenStyle
     */
    public static int PreferenceTheme_preferenceScreenStyle=11;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceStyle
     */
    public static int PreferenceTheme_preferenceStyle=12;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:preferenceTheme
     */
    public static int PreferenceTheme_preferenceTheme=13;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:seekBarPreferenceStyle
     */
    public static int PreferenceTheme_seekBarPreferenceStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:switchPreferenceCompatStyle
     */
    public static int PreferenceTheme_switchPreferenceCompatStyle=15;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:switchPreferenceStyle
     */
    public static int PreferenceTheme_switchPreferenceStyle=16;
    /**
     * Attributes that can be used with a PreviewFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreviewFragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreviewFragment_android_id android:id}</code></td><td></td></tr>
     * </table>
     * @see #PreviewFragment_android_name
     * @see #PreviewFragment_android_id
     */
    public static final int[] PreviewFragment={
      0x01010003, 0x010100d0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #PreviewFragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static int PreviewFragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #PreviewFragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int PreviewFragment_android_id=1;
    /**
     * Attributes that can be used with a ProfileDisplayOption.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_allAppsCellSpacingDps com.android.launcher3:allAppsCellSpacingDps}</code></td><td>allAppsCellSpacingDps defaults to borderSpaceDps, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_allAppsIconSize com.android.launcher3:allAppsIconSize}</code></td><td>allAppsIconSize defaults to iconSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_allAppsIconTextSize com.android.launcher3:allAppsIconTextSize}</code></td><td>allAppsIconTextSize defaults to iconTextSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_borderSpaceDps com.android.launcher3:borderSpaceDps}</code></td><td>space to be used horizontally and vertically</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_borderSpaceHorizontalDps com.android.launcher3:borderSpaceHorizontalDps}</code></td><td>space to the right of the cell, defaults to borderSpaceDps if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_borderSpaceVerticalDps com.android.launcher3:borderSpaceVerticalDps}</code></td><td>space below the cell, defaults to borderSpaceDps if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_canBeDefault com.android.launcher3:canBeDefault}</code></td><td>If set, this display option is used to determine the default grid</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_horizontalMargin com.android.launcher3:horizontalMargin}</code></td><td>Margin on left and right of the workspace when GridDisplayOption#isScalable is true</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_iconImageSize com.android.launcher3:iconImageSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_iconTextSize com.android.launcher3:iconTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_landscapeIconSize com.android.launcher3:landscapeIconSize}</code></td><td>landscapeIconSize defaults to iconImageSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_landscapeIconTextSize com.android.launcher3:landscapeIconTextSize}</code></td><td>landscapeIconTextSize defaults to iconTextSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_minCellHeightDps com.android.launcher3:minCellHeightDps}</code></td><td>These min cell values are only used if GridDisplayOption#isScalable is true</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_minCellWidthDps com.android.launcher3:minCellWidthDps}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_minHeightDps com.android.launcher3:minHeightDps}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_minWidthDps com.android.launcher3:minWidthDps}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_name com.android.launcher3:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeBorderSpaceDps com.android.launcher3:twoPanelLandscapeBorderSpaceDps}</code></td><td>space to be used horizontally and vertically in two panels,
     * defaults to borderSpaceDps if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeBorderSpaceHorizontalDps com.android.launcher3:twoPanelLandscapeBorderSpaceHorizontalDps}</code></td><td>space to the right of the cell in two panels, defaults to
     * twoPanelLandscapeBorderSpaceDps if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeBorderSpaceVerticalDps com.android.launcher3:twoPanelLandscapeBorderSpaceVerticalDps}</code></td><td>space below the cell in two panels, defaults to twoPanelLandscapeBorderSpaceDps
     * if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeHorizontalMargin com.android.launcher3:twoPanelLandscapeHorizontalMargin}</code></td><td>twoPanelLandscapeHorizontalMargin defaults to horizontalMargin if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeIconSize com.android.launcher3:twoPanelLandscapeIconSize}</code></td><td>twoPanelLandscapeIconSize defaults to iconImageSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeIconTextSize com.android.launcher3:twoPanelLandscapeIconTextSize}</code></td><td>twoPanelLandscapeIconTextSize defaults to iconTextSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeMinCellHeightDps com.android.launcher3:twoPanelLandscapeMinCellHeightDps}</code></td><td>twoPanelLandscapeMinCellHeightDps defaults to minCellHeightDps, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelLandscapeMinCellWidthDps com.android.launcher3:twoPanelLandscapeMinCellWidthDps}</code></td><td>twoPanelLandscapeMinCellWidthDps defaults to minCellWidthDps, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitBorderSpaceDps com.android.launcher3:twoPanelPortraitBorderSpaceDps}</code></td><td>space to be used horizontally and vertically in two panels,
     * defaults to borderSpaceDps if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitBorderSpaceHorizontalDps com.android.launcher3:twoPanelPortraitBorderSpaceHorizontalDps}</code></td><td>space to the right of the cell in two panels, defaults to
     * twoPanelPortraitBorderSpaceDps if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitBorderSpaceVerticalDps com.android.launcher3:twoPanelPortraitBorderSpaceVerticalDps}</code></td><td>space below the cell in two panels, defaults to twoPanelPortraitBorderSpaceDps
     * if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitHorizontalMargin com.android.launcher3:twoPanelPortraitHorizontalMargin}</code></td><td>twoPanelPortraitHorizontalMargin defaults to horizontalMargin if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitIconSize com.android.launcher3:twoPanelPortraitIconSize}</code></td><td>twoPanelPortraitIconSize defaults to iconImageSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitIconTextSize com.android.launcher3:twoPanelPortraitIconTextSize}</code></td><td>twoPanelPortraitIconTextSize defaults to iconTextSize, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitMinCellHeightDps com.android.launcher3:twoPanelPortraitMinCellHeightDps}</code></td><td>twoPanelPortraitMinCellWidthDps defaults to minCellHeightDps, if not specified</td></tr>
     * <tr><td><code>{@link #ProfileDisplayOption_twoPanelPortraitMinCellWidthDps com.android.launcher3:twoPanelPortraitMinCellWidthDps}</code></td><td>twoPanelPortraitMinCellHeightDps defaults to minCellWidthDps, if not specified</td></tr>
     * </table>
     * @see #ProfileDisplayOption_allAppsCellSpacingDps
     * @see #ProfileDisplayOption_allAppsIconSize
     * @see #ProfileDisplayOption_allAppsIconTextSize
     * @see #ProfileDisplayOption_borderSpaceDps
     * @see #ProfileDisplayOption_borderSpaceHorizontalDps
     * @see #ProfileDisplayOption_borderSpaceVerticalDps
     * @see #ProfileDisplayOption_canBeDefault
     * @see #ProfileDisplayOption_horizontalMargin
     * @see #ProfileDisplayOption_iconImageSize
     * @see #ProfileDisplayOption_iconTextSize
     * @see #ProfileDisplayOption_landscapeIconSize
     * @see #ProfileDisplayOption_landscapeIconTextSize
     * @see #ProfileDisplayOption_minCellHeightDps
     * @see #ProfileDisplayOption_minCellWidthDps
     * @see #ProfileDisplayOption_minHeightDps
     * @see #ProfileDisplayOption_minWidthDps
     * @see #ProfileDisplayOption_name
     * @see #ProfileDisplayOption_twoPanelLandscapeBorderSpaceDps
     * @see #ProfileDisplayOption_twoPanelLandscapeBorderSpaceHorizontalDps
     * @see #ProfileDisplayOption_twoPanelLandscapeBorderSpaceVerticalDps
     * @see #ProfileDisplayOption_twoPanelLandscapeHorizontalMargin
     * @see #ProfileDisplayOption_twoPanelLandscapeIconSize
     * @see #ProfileDisplayOption_twoPanelLandscapeIconTextSize
     * @see #ProfileDisplayOption_twoPanelLandscapeMinCellHeightDps
     * @see #ProfileDisplayOption_twoPanelLandscapeMinCellWidthDps
     * @see #ProfileDisplayOption_twoPanelPortraitBorderSpaceDps
     * @see #ProfileDisplayOption_twoPanelPortraitBorderSpaceHorizontalDps
     * @see #ProfileDisplayOption_twoPanelPortraitBorderSpaceVerticalDps
     * @see #ProfileDisplayOption_twoPanelPortraitHorizontalMargin
     * @see #ProfileDisplayOption_twoPanelPortraitIconSize
     * @see #ProfileDisplayOption_twoPanelPortraitIconTextSize
     * @see #ProfileDisplayOption_twoPanelPortraitMinCellHeightDps
     * @see #ProfileDisplayOption_twoPanelPortraitMinCellWidthDps
     */
    public static final int[] ProfileDisplayOption={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * allAppsCellSpacingDps defaults to borderSpaceDps, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:allAppsCellSpacingDps
     */
    public static int ProfileDisplayOption_allAppsCellSpacingDps=0;
    /**
     * <p>
     * @attr description
     * allAppsIconSize defaults to iconSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:allAppsIconSize
     */
    public static int ProfileDisplayOption_allAppsIconSize=1;
    /**
     * <p>
     * @attr description
     * allAppsIconTextSize defaults to iconTextSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:allAppsIconTextSize
     */
    public static int ProfileDisplayOption_allAppsIconTextSize=2;
    /**
     * <p>
     * @attr description
     * space to be used horizontally and vertically
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:borderSpaceDps
     */
    public static int ProfileDisplayOption_borderSpaceDps=3;
    /**
     * <p>
     * @attr description
     * space to the right of the cell, defaults to borderSpaceDps if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:borderSpaceHorizontalDps
     */
    public static int ProfileDisplayOption_borderSpaceHorizontalDps=4;
    /**
     * <p>
     * @attr description
     * space below the cell, defaults to borderSpaceDps if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:borderSpaceVerticalDps
     */
    public static int ProfileDisplayOption_borderSpaceVerticalDps=5;
    /**
     * <p>
     * @attr description
     * If set, this display option is used to determine the default grid
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:canBeDefault
     */
    public static int ProfileDisplayOption_canBeDefault=6;
    /**
     * <p>
     * @attr description
     * Margin on left and right of the workspace when GridDisplayOption#isScalable is true
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:horizontalMargin
     */
    public static int ProfileDisplayOption_horizontalMargin=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconImageSize}
     * attribute's value can be found in the {@link #ProfileDisplayOption} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:iconImageSize
     */
    public static int ProfileDisplayOption_iconImageSize=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#iconTextSize}
     * attribute's value can be found in the {@link #ProfileDisplayOption} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:iconTextSize
     */
    public static int ProfileDisplayOption_iconTextSize=9;
    /**
     * <p>
     * @attr description
     * landscapeIconSize defaults to iconImageSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:landscapeIconSize
     */
    public static int ProfileDisplayOption_landscapeIconSize=10;
    /**
     * <p>
     * @attr description
     * landscapeIconTextSize defaults to iconTextSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:landscapeIconTextSize
     */
    public static int ProfileDisplayOption_landscapeIconTextSize=11;
    /**
     * <p>
     * @attr description
     * These min cell values are only used if GridDisplayOption#isScalable is true
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:minCellHeightDps
     */
    public static int ProfileDisplayOption_minCellHeightDps=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minCellWidthDps}
     * attribute's value can be found in the {@link #ProfileDisplayOption} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:minCellWidthDps
     */
    public static int ProfileDisplayOption_minCellWidthDps=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minHeightDps}
     * attribute's value can be found in the {@link #ProfileDisplayOption} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:minHeightDps
     */
    public static int ProfileDisplayOption_minHeightDps=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#minWidthDps}
     * attribute's value can be found in the {@link #ProfileDisplayOption} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:minWidthDps
     */
    public static int ProfileDisplayOption_minWidthDps=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#name}
     * attribute's value can be found in the {@link #ProfileDisplayOption} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:name
     */
    public static int ProfileDisplayOption_name=16;
    /**
     * <p>
     * @attr description
     * space to be used horizontally and vertically in two panels,
     * defaults to borderSpaceDps if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeBorderSpaceDps
     */
    public static int ProfileDisplayOption_twoPanelLandscapeBorderSpaceDps=17;
    /**
     * <p>
     * @attr description
     * space to the right of the cell in two panels, defaults to
     * twoPanelLandscapeBorderSpaceDps if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeBorderSpaceHorizontalDps
     */
    public static int ProfileDisplayOption_twoPanelLandscapeBorderSpaceHorizontalDps=18;
    /**
     * <p>
     * @attr description
     * space below the cell in two panels, defaults to twoPanelLandscapeBorderSpaceDps
     * if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeBorderSpaceVerticalDps
     */
    public static int ProfileDisplayOption_twoPanelLandscapeBorderSpaceVerticalDps=19;
    /**
     * <p>
     * @attr description
     * twoPanelLandscapeHorizontalMargin defaults to horizontalMargin if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeHorizontalMargin
     */
    public static int ProfileDisplayOption_twoPanelLandscapeHorizontalMargin=20;
    /**
     * <p>
     * @attr description
     * twoPanelLandscapeIconSize defaults to iconImageSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeIconSize
     */
    public static int ProfileDisplayOption_twoPanelLandscapeIconSize=21;
    /**
     * <p>
     * @attr description
     * twoPanelLandscapeIconTextSize defaults to iconTextSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeIconTextSize
     */
    public static int ProfileDisplayOption_twoPanelLandscapeIconTextSize=22;
    /**
     * <p>
     * @attr description
     * twoPanelLandscapeMinCellHeightDps defaults to minCellHeightDps, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeMinCellHeightDps
     */
    public static int ProfileDisplayOption_twoPanelLandscapeMinCellHeightDps=23;
    /**
     * <p>
     * @attr description
     * twoPanelLandscapeMinCellWidthDps defaults to minCellWidthDps, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelLandscapeMinCellWidthDps
     */
    public static int ProfileDisplayOption_twoPanelLandscapeMinCellWidthDps=24;
    /**
     * <p>
     * @attr description
     * space to be used horizontally and vertically in two panels,
     * defaults to borderSpaceDps if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitBorderSpaceDps
     */
    public static int ProfileDisplayOption_twoPanelPortraitBorderSpaceDps=25;
    /**
     * <p>
     * @attr description
     * space to the right of the cell in two panels, defaults to
     * twoPanelPortraitBorderSpaceDps if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitBorderSpaceHorizontalDps
     */
    public static int ProfileDisplayOption_twoPanelPortraitBorderSpaceHorizontalDps=26;
    /**
     * <p>
     * @attr description
     * space below the cell in two panels, defaults to twoPanelPortraitBorderSpaceDps
     * if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitBorderSpaceVerticalDps
     */
    public static int ProfileDisplayOption_twoPanelPortraitBorderSpaceVerticalDps=27;
    /**
     * <p>
     * @attr description
     * twoPanelPortraitHorizontalMargin defaults to horizontalMargin if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitHorizontalMargin
     */
    public static int ProfileDisplayOption_twoPanelPortraitHorizontalMargin=28;
    /**
     * <p>
     * @attr description
     * twoPanelPortraitIconSize defaults to iconImageSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitIconSize
     */
    public static int ProfileDisplayOption_twoPanelPortraitIconSize=29;
    /**
     * <p>
     * @attr description
     * twoPanelPortraitIconTextSize defaults to iconTextSize, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitIconTextSize
     */
    public static int ProfileDisplayOption_twoPanelPortraitIconTextSize=30;
    /**
     * <p>
     * @attr description
     * twoPanelPortraitMinCellWidthDps defaults to minCellHeightDps, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitMinCellHeightDps
     */
    public static int ProfileDisplayOption_twoPanelPortraitMinCellHeightDps=31;
    /**
     * <p>
     * @attr description
     * twoPanelPortraitMinCellHeightDps defaults to minCellWidthDps, if not specified
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:twoPanelPortraitMinCellWidthDps
     */
    public static int ProfileDisplayOption_twoPanelPortraitMinCellWidthDps=32;
    /**
     * Attributes that can be used with a PropertySet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PropertySet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_layout_constraintTag com.android.launcher3:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_motionProgress com.android.launcher3:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_visibilityMode com.android.launcher3:visibilityMode}</code></td><td></td></tr>
     * </table>
     * @see #PropertySet_android_visibility
     * @see #PropertySet_android_alpha
     * @see #PropertySet_layout_constraintTag
     * @see #PropertySet_motionProgress
     * @see #PropertySet_visibilityMode
     */
    public static final int[] PropertySet={
      0x010100dc, 0x0101031f, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static int PropertySet_android_visibility=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static int PropertySet_android_alpha=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layout_constraintTag
     */
    public static int PropertySet_layout_constraintTag=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionProgress}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:motionProgress
     */
    public static int PropertySet_motionProgress=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#visibilityMode}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:visibilityMode
     */
    public static int PropertySet_visibilityMode=4;
    /**
     * Attributes that can be used with a RadialViewGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadialViewGroup_materialCircleRadius com.android.launcher3:materialCircleRadius}</code></td><td></td></tr>
     * </table>
     * @see #RadialViewGroup_materialCircleRadius
     */
    public static final int[] RadialViewGroup={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Radius indicating how far away from the center of the group the
     * children are positioned
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:materialCircleRadius
     */
    public static int RadialViewGroup_materialCircleRadius=0;
    /**
     * Attributes that can be used with a RangeSlider.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RangeSlider_minSeparation com.android.launcher3:minSeparation}</code></td><td>If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen</td></tr>
     * <tr><td><code>{@link #RangeSlider_values com.android.launcher3:values}</code></td><td></td></tr>
     * </table>
     * @see #RangeSlider_minSeparation
     * @see #RangeSlider_values
     */
    public static final int[] RangeSlider={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:minSeparation
     */
    public static int RangeSlider_minSeparation=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#values}
     * attribute's value can be found in the {@link #RangeSlider} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:values
     */
    public static int RangeSlider_values=1;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.launcher3:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.launcher3:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:paddingBottomNoButtons
     */
    public static int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:paddingTopNoTitle
     */
    public static int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_clipToPadding android:clipToPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.launcher3:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.launcher3:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.launcher3:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.launcher3:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.launcher3:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.launcher3:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.launcher3:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.launcher3:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.launcher3:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_clipToPadding
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100eb, 0x010100f1, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#clipToPadding}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:clipToPadding
     */
    public static int RecyclerView_android_clipToPadding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static int RecyclerView_android_descendantFocusability=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:fastScrollEnabled
     */
    public static int RecyclerView_fastScrollEnabled=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollHorizontalThumbDrawable
     */
    public static int RecyclerView_fastScrollHorizontalThumbDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollHorizontalTrackDrawable
     */
    public static int RecyclerView_fastScrollHorizontalTrackDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollVerticalThumbDrawable
     */
    public static int RecyclerView_fastScrollVerticalThumbDrawable=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:fastScrollVerticalTrackDrawable
     */
    public static int RecyclerView_fastScrollVerticalTrackDrawable=7;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:layoutManager
     */
    public static int RecyclerView_layoutManager=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:reverseLayout
     */
    public static int RecyclerView_reverseLayout=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:spanCount
     */
    public static int RecyclerView_spanCount=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:stackFromEnd
     */
    public static int RecyclerView_stackFromEnd=11;
    /**
     * Attributes that can be used with a RecyclerViewFastScroller.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerViewFastScroller_canThumbDetach com.android.launcher3:canThumbDetach}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerViewFastScroller_canThumbDetach
     */
    public static final int[] RecyclerViewFastScroller={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#canThumbDetach}
     * attribute's value can be found in the {@link #RecyclerViewFastScroller} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:canThumbDetach
     */
    public static int RecyclerViewFastScroller_canThumbDetach=0;
    /**
     * Attributes that can be used with a RowStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RowStyle_actionDividerHeight com.android.launcher3:actionDividerHeight}</code></td><td>Height to use for action divider in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_bottomDividerEndPadding com.android.launcher3:bottomDividerEndPadding}</code></td><td>Padding to the end edge of the bottom divider in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_bottomDividerStartPadding com.android.launcher3:bottomDividerStartPadding}</code></td><td>Padding to the start edge of the bottom divider in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_contentEndPadding com.android.launcher3:contentEndPadding}</code></td><td>Padding to the end edge of the content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_contentStartPadding com.android.launcher3:contentStartPadding}</code></td><td>Padding to the start edge of the content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_disableRecyclerViewItemAnimator com.android.launcher3:disableRecyclerViewItemAnimator}</code></td><td>Control whether RecyclerView item animator is disable or not, true for disable
     * otherwise enable.</td></tr>
     * <tr><td><code>{@link #RowStyle_endItemEndPadding com.android.launcher3:endItemEndPadding}</code></td><td>Padding to the end edge of the collection of items shown at the end of the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_endItemStartPadding com.android.launcher3:endItemStartPadding}</code></td><td>Padding to the start edge of the collection of items shown at the end of the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_iconSize com.android.launcher3:iconSize}</code></td><td>Size of icon.</td></tr>
     * <tr><td><code>{@link #RowStyle_imageSize com.android.launcher3:imageSize}</code></td><td>Size of small images in a slice.</td></tr>
     * <tr><td><code>{@link #RowStyle_progressBarEndPadding com.android.launcher3:progressBarEndPadding}</code></td><td>Padding to the end edge of the progress bar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_progressBarInlineWidth com.android.launcher3:progressBarInlineWidth}</code></td><td>Width to use for inline progress bar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_progressBarStartPadding com.android.launcher3:progressBarStartPadding}</code></td><td>Padding to the start edge of the progress bar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_seekBarInlineWidth com.android.launcher3:seekBarInlineWidth}</code></td><td>Width to use for inline SeekBar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_subContentEndPadding com.android.launcher3:subContentEndPadding}</code></td><td>Padding to the end edge of the sub content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_subContentStartPadding com.android.launcher3:subContentStartPadding}</code></td><td>Padding to the start edge of the sub content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_subtitleColor com.android.launcher3:subtitleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RowStyle_textActionPadding com.android.launcher3:textActionPadding}</code></td><td>Padding to the edge of the button in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_tintColor com.android.launcher3:tintColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RowStyle_titleColor com.android.launcher3:titleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RowStyle_titleEndPadding com.android.launcher3:titleEndPadding}</code></td><td>Padding to the end edge of the title in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_titleItemEndPadding com.android.launcher3:titleItemEndPadding}</code></td><td>Padding to the end edge of title items shown in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_titleItemStartPadding com.android.launcher3:titleItemStartPadding}</code></td><td>Padding to the start edge of title items shown in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_titleStartPadding com.android.launcher3:titleStartPadding}</code></td><td>Padding to the start edge of the title in the row.</td></tr>
     * </table>
     * @see #RowStyle_actionDividerHeight
     * @see #RowStyle_bottomDividerEndPadding
     * @see #RowStyle_bottomDividerStartPadding
     * @see #RowStyle_contentEndPadding
     * @see #RowStyle_contentStartPadding
     * @see #RowStyle_disableRecyclerViewItemAnimator
     * @see #RowStyle_endItemEndPadding
     * @see #RowStyle_endItemStartPadding
     * @see #RowStyle_iconSize
     * @see #RowStyle_imageSize
     * @see #RowStyle_progressBarEndPadding
     * @see #RowStyle_progressBarInlineWidth
     * @see #RowStyle_progressBarStartPadding
     * @see #RowStyle_seekBarInlineWidth
     * @see #RowStyle_subContentEndPadding
     * @see #RowStyle_subContentStartPadding
     * @see #RowStyle_subtitleColor
     * @see #RowStyle_textActionPadding
     * @see #RowStyle_tintColor
     * @see #RowStyle_titleColor
     * @see #RowStyle_titleEndPadding
     * @see #RowStyle_titleItemEndPadding
     * @see #RowStyle_titleItemStartPadding
     * @see #RowStyle_titleStartPadding
     */
    public static final int[] RowStyle={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Height to use for action divider in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:actionDividerHeight
     */
    public static int RowStyle_actionDividerHeight=0;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the bottom divider in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:bottomDividerEndPadding
     */
    public static int RowStyle_bottomDividerEndPadding=1;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the bottom divider in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:bottomDividerStartPadding
     */
    public static int RowStyle_bottomDividerStartPadding=2;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentEndPadding
     */
    public static int RowStyle_contentEndPadding=3;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentStartPadding
     */
    public static int RowStyle_contentStartPadding=4;
    /**
     * <p>
     * @attr description
     * Control whether RecyclerView item animator is disable or not, true for disable
     * otherwise enable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:disableRecyclerViewItemAnimator
     */
    public static int RowStyle_disableRecyclerViewItemAnimator=5;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the collection of items shown at the end of the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:endItemEndPadding
     */
    public static int RowStyle_endItemEndPadding=6;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the collection of items shown at the end of the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:endItemStartPadding
     */
    public static int RowStyle_endItemStartPadding=7;
    /**
     * <p>
     * @attr description
     * Size of icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:iconSize
     */
    public static int RowStyle_iconSize=8;
    /**
     * <p>
     * @attr description
     * Size of small images in a slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:imageSize
     */
    public static int RowStyle_imageSize=9;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the progress bar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:progressBarEndPadding
     */
    public static int RowStyle_progressBarEndPadding=10;
    /**
     * <p>
     * @attr description
     * Width to use for inline progress bar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:progressBarInlineWidth
     */
    public static int RowStyle_progressBarInlineWidth=11;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the progress bar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:progressBarStartPadding
     */
    public static int RowStyle_progressBarStartPadding=12;
    /**
     * <p>
     * @attr description
     * Width to use for inline SeekBar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:seekBarInlineWidth
     */
    public static int RowStyle_seekBarInlineWidth=13;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the sub content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:subContentEndPadding
     */
    public static int RowStyle_subContentEndPadding=14;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the sub content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:subContentStartPadding
     */
    public static int RowStyle_subContentStartPadding=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#subtitleColor}
     * attribute's value can be found in the {@link #RowStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:subtitleColor
     */
    public static int RowStyle_subtitleColor=16;
    /**
     * <p>
     * @attr description
     * Padding to the edge of the button in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:textActionPadding
     */
    public static int RowStyle_textActionPadding=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#tintColor}
     * attribute's value can be found in the {@link #RowStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tintColor
     */
    public static int RowStyle_tintColor=18;
    /**
     * <p>
     * @attr description
     * These override the corresponding styles from SliceView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:titleColor
     */
    public static int RowStyle_titleColor=19;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the title in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleEndPadding
     */
    public static int RowStyle_titleEndPadding=20;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of title items shown in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleItemEndPadding
     */
    public static int RowStyle_titleItemEndPadding=21;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of title items shown in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleItemStartPadding
     */
    public static int RowStyle_titleItemStartPadding=22;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the title in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleStartPadding
     */
    public static int RowStyle_titleStartPadding=23;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground com.android.launcher3:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:insetForeground
     */
    public static int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop com.android.launcher3:behavior_overlapTop}</code></td><td>The amount that the scrolling view should overlap the bottom of any AppBarLayout</td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:behavior_overlapTop
     */
    public static int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    /**
     * Attributes that can be used with a SearchResultSuggestion.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchResultSuggestion_customIcon com.android.launcher3:customIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchResultSuggestion_matchTextInsetWithQuery com.android.launcher3:matchTextInsetWithQuery}</code></td><td></td></tr>
     * </table>
     * @see #SearchResultSuggestion_customIcon
     * @see #SearchResultSuggestion_matchTextInsetWithQuery
     */
    public static final int[] SearchResultSuggestion={
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#customIcon}
     * attribute's value can be found in the {@link #SearchResultSuggestion} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:customIcon
     */
    public static int SearchResultSuggestion_customIcon=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#matchTextInsetWithQuery}
     * attribute's value can be found in the {@link #SearchResultSuggestion} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:matchTextInsetWithQuery
     */
    public static int SearchResultSuggestion_matchTextInsetWithQuery=1;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.launcher3:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.launcher3:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.launcher3:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.launcher3:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.launcher3:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.launcher3:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.launcher3:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.launcher3:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.launcher3:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.launcher3:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.launcher3:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.launcher3:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.launcher3:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:closeIcon
     */
    public static int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:commitIcon
     */
    public static int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:defaultQueryHint
     */
    public static int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:goIcon
     */
    public static int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:iconifiedByDefault
     */
    public static int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:layout
     */
    public static int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:queryBackground
     */
    public static int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:queryHint
     */
    public static int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:searchHintIcon
     */
    public static int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:searchIcon
     */
    public static int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:submitBackground
     */
    public static int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:suggestionRowLayout
     */
    public static int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:voiceIcon
     */
    public static int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.android.launcher3:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.android.launcher3:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.android.launcher3:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.android.launcher3:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_updatesContinuously com.android.launcher3:updatesContinuously}</code></td><td>Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     * @see #SeekBarPreference_updatesContinuously
     */
    public static final int[] SeekBarPreference={
      0x010100f2, 0x01010136, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:adjustable
     */
    public static int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:min
     */
    public static int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:seekBarIncrement
     */
    public static int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:showSeekBarValue
     */
    public static int SeekBarPreference_showSeekBarValue=5;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:updatesContinuously
     */
    public static int SeekBarPreference_updatesContinuously=6;
    /**
     * Attributes that can be used with a ShadowDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShadowDrawable_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowDrawable_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowDrawable_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowDrawable_darkTintColor com.android.launcher3:darkTintColor}</code></td><td></td></tr>
     * </table>
     * @see #ShadowDrawable_android_src
     * @see #ShadowDrawable_android_shadowColor
     * @see #ShadowDrawable_android_elevation
     * @see #ShadowDrawable_darkTintColor
     */
    public static final int[] ShadowDrawable={
      0x01010119, 0x01010161, 0x01010440, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static int ShadowDrawable_android_src=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static int ShadowDrawable_android_shadowColor=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int ShadowDrawable_android_elevation=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#darkTintColor}
     * attribute's value can be found in the {@link #ShadowDrawable} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:darkTintColor
     */
    public static int ShadowDrawable_darkTintColor=3;
    /**
     * Attributes that can be used with a ShadowInfo.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShadowInfo_ambientShadowBlur com.android.launcher3:ambientShadowBlur}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_ambientShadowColor com.android.launcher3:ambientShadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowBlur com.android.launcher3:keyShadowBlur}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowColor com.android.launcher3:keyShadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowOffsetX com.android.launcher3:keyShadowOffsetX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShadowInfo_keyShadowOffsetY com.android.launcher3:keyShadowOffsetY}</code></td><td></td></tr>
     * </table>
     * @see #ShadowInfo_ambientShadowBlur
     * @see #ShadowInfo_ambientShadowColor
     * @see #ShadowInfo_keyShadowBlur
     * @see #ShadowInfo_keyShadowColor
     * @see #ShadowInfo_keyShadowOffsetX
     * @see #ShadowInfo_keyShadowOffsetY
     */
    public static final int[] ShadowInfo={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#ambientShadowBlur}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:ambientShadowBlur
     */
    public static int ShadowInfo_ambientShadowBlur=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#ambientShadowColor}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:ambientShadowColor
     */
    public static int ShadowInfo_ambientShadowColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowBlur}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:keyShadowBlur
     */
    public static int ShadowInfo_keyShadowBlur=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowColor}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:keyShadowColor
     */
    public static int ShadowInfo_keyShadowColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowOffsetX}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:keyShadowOffsetX
     */
    public static int ShadowInfo_keyShadowOffsetX=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#keyShadowOffsetY}
     * attribute's value can be found in the {@link #ShadowInfo} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:keyShadowOffsetY
     */
    public static int ShadowInfo_keyShadowOffsetY=5;
    /**
     * Attributes that can be used with a ShapeAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamily com.android.launcher3:cornerFamily}</code></td><td>Corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomLeft com.android.launcher3:cornerFamilyBottomLeft}</code></td><td>Bottom left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomRight com.android.launcher3:cornerFamilyBottomRight}</code></td><td>Bottom right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopLeft com.android.launcher3:cornerFamilyTopLeft}</code></td><td>Top left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopRight com.android.launcher3:cornerFamilyTopRight}</code></td><td>Top right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSize com.android.launcher3:cornerSize}</code></td><td>Corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomLeft com.android.launcher3:cornerSizeBottomLeft}</code></td><td>Bottom left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomRight com.android.launcher3:cornerSizeBottomRight}</code></td><td>Bottom right corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopLeft com.android.launcher3:cornerSizeTopLeft}</code></td><td>Top left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopRight com.android.launcher3:cornerSizeTopRight}</code></td><td>Top right corner size to be used in the ShapeAppearance.</td></tr>
     * </table>
     * @see #ShapeAppearance_cornerFamily
     * @see #ShapeAppearance_cornerFamilyBottomLeft
     * @see #ShapeAppearance_cornerFamilyBottomRight
     * @see #ShapeAppearance_cornerFamilyTopLeft
     * @see #ShapeAppearance_cornerFamilyTopRight
     * @see #ShapeAppearance_cornerSize
     * @see #ShapeAppearance_cornerSizeBottomLeft
     * @see #ShapeAppearance_cornerSizeBottomRight
     * @see #ShapeAppearance_cornerSizeTopLeft
     * @see #ShapeAppearance_cornerSizeTopRight
     */
    public static final int[] ShapeAppearance={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:cornerFamily
     */
    public static int ShapeAppearance_cornerFamily=0;
    /**
     * <p>
     * @attr description
     * Bottom left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:cornerFamilyBottomLeft
     */
    public static int ShapeAppearance_cornerFamilyBottomLeft=1;
    /**
     * <p>
     * @attr description
     * Bottom right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:cornerFamilyBottomRight
     */
    public static int ShapeAppearance_cornerFamilyBottomRight=2;
    /**
     * <p>
     * @attr description
     * Top left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:cornerFamilyTopLeft
     */
    public static int ShapeAppearance_cornerFamilyTopLeft=3;
    /**
     * <p>
     * @attr description
     * Top right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:cornerFamilyTopRight
     */
    public static int ShapeAppearance_cornerFamilyTopRight=4;
    /**
     * <p>
     * @attr description
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:cornerSize
     */
    public static int ShapeAppearance_cornerSize=5;
    /**
     * <p>
     * @attr description
     * Bottom left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:cornerSizeBottomLeft
     */
    public static int ShapeAppearance_cornerSizeBottomLeft=6;
    /**
     * <p>
     * @attr description
     * Bottom right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:cornerSizeBottomRight
     */
    public static int ShapeAppearance_cornerSizeBottomRight=7;
    /**
     * <p>
     * @attr description
     * Top left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:cornerSizeTopLeft
     */
    public static int ShapeAppearance_cornerSizeTopLeft=8;
    /**
     * <p>
     * @attr description
     * Top right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:cornerSizeTopRight
     */
    public static int ShapeAppearance_cornerSizeTopRight=9;
    /**
     * Attributes that can be used with a ShapeableImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPadding com.android.launcher3:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingBottom com.android.launcher3:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingEnd com.android.launcher3:contentPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingLeft com.android.launcher3:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingRight com.android.launcher3:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingStart com.android.launcher3:contentPaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingTop com.android.launcher3:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_strokeColor com.android.launcher3:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_strokeWidth com.android.launcher3:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #ShapeableImageView_contentPadding
     * @see #ShapeableImageView_contentPaddingBottom
     * @see #ShapeableImageView_contentPaddingEnd
     * @see #ShapeableImageView_contentPaddingLeft
     * @see #ShapeableImageView_contentPaddingRight
     * @see #ShapeableImageView_contentPaddingStart
     * @see #ShapeableImageView_contentPaddingTop
     * @see #ShapeableImageView_shapeAppearance
     * @see #ShapeableImageView_shapeAppearanceOverlay
     * @see #ShapeableImageView_strokeColor
     * @see #ShapeableImageView_strokeWidth
     */
    public static final int[] ShapeableImageView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Attributes for padding the image, since android:padding is applied to the background
     * for ShapeableImageView
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPadding
     */
    public static int ShapeableImageView_contentPadding=0;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingBottom
     */
    public static int ShapeableImageView_contentPaddingBottom=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#contentPaddingEnd}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingEnd
     */
    public static int ShapeableImageView_contentPaddingEnd=2;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingLeft
     */
    public static int ShapeableImageView_contentPaddingLeft=3;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingRight
     */
    public static int ShapeableImageView_contentPaddingRight=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#contentPaddingStart}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingStart
     */
    public static int ShapeableImageView_contentPaddingStart=5;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentPaddingTop
     */
    public static int ShapeableImageView_contentPaddingTop=6;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for ShapeableImageView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int ShapeableImageView_shapeAppearance=7;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for ShapeableImageView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int ShapeableImageView_shapeAppearanceOverlay=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#strokeColor}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:strokeColor
     */
    public static int ShapeableImageView_strokeColor=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:strokeWidth
     */
    public static int ShapeableImageView_strokeWidth=10;
    /**
     * Attributes that can be used with a SliceView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SliceView_expandToAvailableHeight com.android.launcher3:expandToAvailableHeight}</code></td><td>Removes the height restriction of slices in MODE_LARGE.</td></tr>
     * <tr><td><code>{@link #SliceView_gridBottomPadding com.android.launcher3:gridBottomPadding}</code></td><td>A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice.</td></tr>
     * <tr><td><code>{@link #SliceView_gridSubtitleSize com.android.launcher3:gridSubtitleSize}</code></td><td>Text size to use for the subtitle text in a grid row of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_gridTextVerticalPadding com.android.launcher3:gridTextVerticalPadding}</code></td><td>Vertical padding to use between title text and subtitle text in a grid cell.</td></tr>
     * <tr><td><code>{@link #SliceView_gridTitleSize com.android.launcher3:gridTitleSize}</code></td><td>Text size to use for title text in a grid row of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_gridTopPadding com.android.launcher3:gridTopPadding}</code></td><td>A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice.</td></tr>
     * <tr><td><code>{@link #SliceView_headerSubtitleSize com.android.launcher3:headerSubtitleSize}</code></td><td>Text size to use for subtitle text in the header of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_headerTextVerticalPadding com.android.launcher3:headerTextVerticalPadding}</code></td><td>Vertical padding to use between header title text and header subtitle text.</td></tr>
     * <tr><td><code>{@link #SliceView_headerTitleSize com.android.launcher3:headerTitleSize}</code></td><td>Text size to use for title text in the header of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_hideHeaderRow com.android.launcher3:hideHeaderRow}</code></td><td>Hide the slice's header row unless the slice only has a single row.</td></tr>
     * <tr><td><code>{@link #SliceView_imageCornerRadius com.android.launcher3:imageCornerRadius}</code></td><td>The corner radius to be applied to each corner of large images.</td></tr>
     * <tr><td><code>{@link #SliceView_rowInlineRangeHeight com.android.launcher3:rowInlineRangeHeight}</code></td><td>Size of row view when range is inline</td></tr>
     * <tr><td><code>{@link #SliceView_rowMaxHeight com.android.launcher3:rowMaxHeight}</code></td><td>Size of row view with two lines of text</td></tr>
     * <tr><td><code>{@link #SliceView_rowMinHeight com.android.launcher3:rowMinHeight}</code></td><td>Min height of row view; default size if one line of text</td></tr>
     * <tr><td><code>{@link #SliceView_rowRangeHeight com.android.launcher3:rowRangeHeight}</code></td><td>Size of range area in a row to fit a slider or progress bar</td></tr>
     * <tr><td><code>{@link #SliceView_rowRangeSingleTextHeight com.android.launcher3:rowRangeSingleTextHeight}</code></td><td>Size of text area row with one line of text and then a range element</td></tr>
     * <tr><td><code>{@link #SliceView_rowStyle com.android.launcher3:rowStyle}</code></td><td>To apply a style for all slice rows shown within an activity or app you
     * may set this in your app theme pointing to your custom RowView style.</td></tr>
     * <tr><td><code>{@link #SliceView_subtitleColor com.android.launcher3:subtitleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SliceView_subtitleSize com.android.launcher3:subtitleSize}</code></td><td>Text size to use for subtitle text in a non-header row of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_textVerticalPadding com.android.launcher3:textVerticalPadding}</code></td><td>Vertical padding to use between title text and subtitle text.</td></tr>
     * <tr><td><code>{@link #SliceView_tintColor com.android.launcher3:tintColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SliceView_titleColor com.android.launcher3:titleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SliceView_titleSize com.android.launcher3:titleSize}</code></td><td>Text size to use for title text in a non-header row of the slice.</td></tr>
     * </table>
     * @see #SliceView_expandToAvailableHeight
     * @see #SliceView_gridBottomPadding
     * @see #SliceView_gridSubtitleSize
     * @see #SliceView_gridTextVerticalPadding
     * @see #SliceView_gridTitleSize
     * @see #SliceView_gridTopPadding
     * @see #SliceView_headerSubtitleSize
     * @see #SliceView_headerTextVerticalPadding
     * @see #SliceView_headerTitleSize
     * @see #SliceView_hideHeaderRow
     * @see #SliceView_imageCornerRadius
     * @see #SliceView_rowInlineRangeHeight
     * @see #SliceView_rowMaxHeight
     * @see #SliceView_rowMinHeight
     * @see #SliceView_rowRangeHeight
     * @see #SliceView_rowRangeSingleTextHeight
     * @see #SliceView_rowStyle
     * @see #SliceView_subtitleColor
     * @see #SliceView_subtitleSize
     * @see #SliceView_textVerticalPadding
     * @see #SliceView_tintColor
     * @see #SliceView_titleColor
     * @see #SliceView_titleSize
     */
    public static final int[] SliceView={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Removes the height restriction of slices in MODE_LARGE. If the slice
     * is smaller than the available height, wrap_content decides whether the slice takes
     * up the entire height or only the required height. If the slice is bigger than
     * the available height, the height mode decides whether the slice fills the height
     * (height mode AT_MOST/EXACTLY), or expands to fit all items (height mode UNSPECIFIED).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:expandToAvailableHeight
     */
    public static int SliceView_expandToAvailableHeight=0;
    /**
     * <p>
     * @attr description
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the bottom of the grid row in
     * this situation.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:gridBottomPadding
     */
    public static int SliceView_gridBottomPadding=1;
    /**
     * <p>
     * @attr description
     * Text size to use for the subtitle text in a grid row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:gridSubtitleSize
     */
    public static int SliceView_gridSubtitleSize=2;
    /**
     * <p>
     * @attr description
     * Vertical padding to use between title text and subtitle text in a grid cell.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:gridTextVerticalPadding
     */
    public static int SliceView_gridTextVerticalPadding=3;
    /**
     * <p>
     * @attr description
     * Text size to use for title text in a grid row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:gridTitleSize
     */
    public static int SliceView_gridTitleSize=4;
    /**
     * <p>
     * @attr description
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the top of the grid row in
     * this situation.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:gridTopPadding
     */
    public static int SliceView_gridTopPadding=5;
    /**
     * <p>
     * @attr description
     * Text size to use for subtitle text in the header of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:headerSubtitleSize
     */
    public static int SliceView_headerSubtitleSize=6;
    /**
     * <p>
     * @attr description
     * Vertical padding to use between header title text and header subtitle text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:headerTextVerticalPadding
     */
    public static int SliceView_headerTextVerticalPadding=7;
    /**
     * <p>
     * @attr description
     * Text size to use for title text in the header of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:headerTitleSize
     */
    public static int SliceView_headerTitleSize=8;
    /**
     * <p>
     * @attr description
     * Hide the slice's header row unless the slice only has a single row. Note that if
     * the slice doesn't have an explicit header row, the first row is considered the header row.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:hideHeaderRow
     */
    public static int SliceView_hideHeaderRow=9;
    /**
     * <p>
     * @attr description
     * The corner radius to be applied to each corner of large images.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:imageCornerRadius
     */
    public static int SliceView_imageCornerRadius=10;
    /**
     * <p>
     * @attr description
     * Size of row view when range is inline
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:rowInlineRangeHeight
     */
    public static int SliceView_rowInlineRangeHeight=11;
    /**
     * <p>
     * @attr description
     * Size of row view with two lines of text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:rowMaxHeight
     */
    public static int SliceView_rowMaxHeight=12;
    /**
     * <p>
     * @attr description
     * Min height of row view; default size if one line of text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:rowMinHeight
     */
    public static int SliceView_rowMinHeight=13;
    /**
     * <p>
     * @attr description
     * Size of range area in a row to fit a slider or progress bar
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:rowRangeHeight
     */
    public static int SliceView_rowRangeHeight=14;
    /**
     * <p>
     * @attr description
     * Size of text area row with one line of text and then a range element
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:rowRangeSingleTextHeight
     */
    public static int SliceView_rowRangeSingleTextHeight=15;
    /**
     * <p>
     * @attr description
     * To apply a style for all slice rows shown within an activity or app you
     * may set this in your app theme pointing to your custom RowView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:rowStyle
     */
    public static int SliceView_rowStyle=16;
    /**
     * <p>
     * @attr description
     * Color to use for any other text within the slice.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:subtitleColor
     */
    public static int SliceView_subtitleColor=17;
    /**
     * <p>
     * @attr description
     * Text size to use for subtitle text in a non-header row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:subtitleSize
     */
    public static int SliceView_subtitleSize=18;
    /**
     * <p>
     * @attr description
     * Vertical padding to use between title text and subtitle text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:textVerticalPadding
     */
    public static int SliceView_textVerticalPadding=19;
    /**
     * <p>
     * @attr description
     * Color to use for tinting elements within the slice. Normally an app
     * providing a slice is able to specify a color to use for tinting, specifying
     * a tint color here will override the app supplied color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tintColor
     */
    public static int SliceView_tintColor=20;
    /**
     * <p>
     * @attr description
     * Color to use for any title text within the slice.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:titleColor
     */
    public static int SliceView_titleColor=21;
    /**
     * <p>
     * @attr description
     * Text size to use for title text in a non-header row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleSize
     */
    public static int SliceView_titleSize=22;
    /**
     * Attributes that can be used with a Slider.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Slider_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_value android:value}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_stepSize android:stepSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_valueFrom android:valueFrom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_valueTo android:valueTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_haloColor com.android.launcher3:haloColor}</code></td><td>The color of the slider's halo.</td></tr>
     * <tr><td><code>{@link #Slider_haloRadius com.android.launcher3:haloRadius}</code></td><td>The radius of the halo.</td></tr>
     * <tr><td><code>{@link #Slider_labelBehavior com.android.launcher3:labelBehavior}</code></td><td>Determines if Slider should increase its default height to include space for the label.</td></tr>
     * <tr><td><code>{@link #Slider_labelStyle com.android.launcher3:labelStyle}</code></td><td>The style used for the label TooltipDrawable.</td></tr>
     * <tr><td><code>{@link #Slider_thumbColor com.android.launcher3:thumbColor}</code></td><td>The color of the slider's thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbElevation com.android.launcher3:thumbElevation}</code></td><td>The elevation of the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbRadius com.android.launcher3:thumbRadius}</code></td><td>The radius of the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbStrokeColor com.android.launcher3:thumbStrokeColor}</code></td><td>The stroke color for the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbStrokeWidth com.android.launcher3:thumbStrokeWidth}</code></td><td>The stroke width for the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_tickColor com.android.launcher3:tickColor}</code></td><td>The color of the slider's tick marks.</td></tr>
     * <tr><td><code>{@link #Slider_tickColorActive com.android.launcher3:tickColorActive}</code></td><td>The color of the slider's tick marks for the active portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_tickColorInactive com.android.launcher3:tickColorInactive}</code></td><td>The color of the slider's tick marks for the inactive portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_tickVisible com.android.launcher3:tickVisible}</code></td><td>Whether to show the tick marks.</td></tr>
     * <tr><td><code>{@link #Slider_trackColor com.android.launcher3:trackColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_trackColorActive com.android.launcher3:trackColorActive}</code></td><td>The color of active portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_trackColorInactive com.android.launcher3:trackColorInactive}</code></td><td>The color of inactive portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_trackHeight com.android.launcher3:trackHeight}</code></td><td>The height of the track.</td></tr>
     * </table>
     * @see #Slider_android_enabled
     * @see #Slider_android_value
     * @see #Slider_android_stepSize
     * @see #Slider_android_valueFrom
     * @see #Slider_android_valueTo
     * @see #Slider_haloColor
     * @see #Slider_haloRadius
     * @see #Slider_labelBehavior
     * @see #Slider_labelStyle
     * @see #Slider_thumbColor
     * @see #Slider_thumbElevation
     * @see #Slider_thumbRadius
     * @see #Slider_thumbStrokeColor
     * @see #Slider_thumbStrokeWidth
     * @see #Slider_tickColor
     * @see #Slider_tickColorActive
     * @see #Slider_tickColorInactive
     * @see #Slider_tickVisible
     * @see #Slider_trackColor
     * @see #Slider_trackColorActive
     * @see #Slider_trackColorInactive
     * @see #Slider_trackHeight
     */
    public static final int[] Slider={
      0x0101000e, 0x01010024, 0x01010146, 0x010102de, 
      0x010102df, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the Slider is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static int Slider_android_enabled=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#value}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:value
     */
    public static int Slider_android_value=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#stepSize}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:stepSize
     */
    public static int Slider_android_stepSize=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#valueFrom}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:valueFrom
     */
    public static int Slider_android_valueFrom=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#valueTo}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:valueTo
     */
    public static int Slider_android_valueTo=4;
    /**
     * <p>
     * @attr description
     * The color of the slider's halo.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:haloColor
     */
    public static int Slider_haloColor=5;
    /**
     * <p>
     * @attr description
     * The radius of the halo.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:haloRadius
     */
    public static int Slider_haloRadius=6;
    /**
     * <p>
     * @attr description
     * Determines if Slider should increase its default height to include space for the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>floating</td><td>0</td><td>Mode that draws the label floating above the bounds of this view.</td></tr>
     * <tr><td>gone</td><td>2</td><td>Mode that prevents the label from being drawn</td></tr>
     * <tr><td>withinBounds</td><td>1</td><td>Mode that draws the label within the bounds of the view.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:labelBehavior
     */
    public static int Slider_labelBehavior=7;
    /**
     * <p>
     * @attr description
     * The style used for the label TooltipDrawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:labelStyle
     */
    public static int Slider_labelStyle=8;
    /**
     * <p>
     * @attr description
     * The color of the slider's thumb.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:thumbColor
     */
    public static int Slider_thumbColor=9;
    /**
     * <p>
     * @attr description
     * The elevation of the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:thumbElevation
     */
    public static int Slider_thumbElevation=10;
    /**
     * <p>
     * @attr description
     * The radius of the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:thumbRadius
     */
    public static int Slider_thumbRadius=11;
    /**
     * <p>
     * @attr description
     * The stroke color for the thumb.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:thumbStrokeColor
     */
    public static int Slider_thumbStrokeColor=12;
    /**
     * <p>
     * @attr description
     * The stroke width for the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:thumbStrokeWidth
     */
    public static int Slider_thumbStrokeWidth=13;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks. Only used when the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tickColor
     */
    public static int Slider_tickColor=14;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks for the active portion of the track. Only used when
     * the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tickColorActive
     */
    public static int Slider_tickColorActive=15;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks for the inactive portion of the track. Only used when
     * the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tickColorInactive
     */
    public static int Slider_tickColorInactive=16;
    /**
     * <p>
     * @attr description
     * Whether to show the tick marks. Only used when the slider is in discrete mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:tickVisible
     */
    public static int Slider_tickVisible=17;
    /**
     * <p>
     * @attr description
     * The color of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:trackColor
     */
    public static int Slider_trackColor=18;
    /**
     * <p>
     * @attr description
     * The color of active portion of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:trackColorActive
     */
    public static int Slider_trackColorActive=19;
    /**
     * <p>
     * @attr description
     * The color of inactive portion of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:trackColorInactive
     */
    public static int Slider_trackColorInactive=20;
    /**
     * <p>
     * @attr description
     * The height of the track.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:trackHeight
     */
    public static int Slider_trackHeight=21;
    /**
     * Attributes that can be used with a Snackbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Snackbar_snackbarButtonStyle com.android.launcher3:snackbarButtonStyle}</code></td><td>Style to use for action button within a Snackbar in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarStyle com.android.launcher3:snackbarStyle}</code></td><td>Style to use for Snackbars in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarTextViewStyle com.android.launcher3:snackbarTextViewStyle}</code></td><td>Style to use for message text within a Snackbar in this theme.</td></tr>
     * </table>
     * @see #Snackbar_snackbarButtonStyle
     * @see #Snackbar_snackbarStyle
     * @see #Snackbar_snackbarTextViewStyle
     */
    public static final int[] Snackbar={
      0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Style to use for action button within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:snackbarButtonStyle
     */
    public static int Snackbar_snackbarButtonStyle=0;
    /**
     * <p>
     * @attr description
     * Style to use for Snackbars in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:snackbarStyle
     */
    public static int Snackbar_snackbarStyle=1;
    /**
     * <p>
     * @attr description
     * Style to use for message text within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:snackbarTextViewStyle
     */
    public static int Snackbar_snackbarTextViewStyle=2;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_actionTextColorAlpha com.android.launcher3:actionTextColorAlpha}</code></td><td>Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_animationMode com.android.launcher3:animationMode}</code></td><td>Sets the enter and exit animations for a Snackbar.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundOverlayColorAlpha com.android.launcher3:backgroundOverlayColorAlpha}</code></td><td>Alpha level for the color that is overlaid on top of the background color.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundTintMode com.android.launcher3:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation com.android.launcher3:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth com.android.launcher3:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_actionTextColorAlpha
     * @see #SnackbarLayout_animationMode
     * @see #SnackbarLayout_backgroundOverlayColorAlpha
     * @see #SnackbarLayout_backgroundTint
     * @see #SnackbarLayout_backgroundTintMode
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
      0x0101011f, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:actionTextColorAlpha
     */
    public static int SnackbarLayout_actionTextColorAlpha=1;
    /**
     * <p>
     * @attr description
     * Sets the enter and exit animations for a Snackbar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:animationMode
     */
    public static int SnackbarLayout_animationMode=2;
    /**
     * <p>
     * @attr description
     * Alpha level for the color that is overlaid on top of the background color. Ignored if
     * backgroundTint is set.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:backgroundOverlayColorAlpha
     */
    public static int SnackbarLayout_backgroundOverlayColorAlpha=3;
    /**
     * <p>
     * @attr description
     * Background tint used by the Snackbar background drawable. Accepts a ColorStateList or
     * ColorInt.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int SnackbarLayout_backgroundTint=4;
    /**
     * <p>
     * @attr description
     * Background tint mode used by the Snackbar background drawable.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:backgroundTintMode
     */
    public static int SnackbarLayout_backgroundTintMode=5;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:elevation
     */
    public static int SnackbarLayout_elevation=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxActionInlineWidth
     */
    public static int SnackbarLayout_maxActionInlineWidth=7;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.launcher3:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:popupTheme
     */
    public static int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a State.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #State_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #State_constraints com.android.launcher3:constraints}</code></td><td></td></tr>
     * </table>
     * @see #State_android_id
     * @see #State_constraints
     */
    public static final int[] State={
      0x010100d0, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #State} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int State_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraints}
     * attribute's value can be found in the {@link #State} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:constraints
     */
    public static int State_constraints=1;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a StateSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateSet_defaultState com.android.launcher3:defaultState}</code></td><td></td></tr>
     * </table>
     * @see #StateSet_defaultState
     */
    public static final int[] StateSet={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#defaultState}
     * attribute's value can be found in the {@link #StateSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:defaultState
     */
    public static int StateSet_defaultState=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.launcher3:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.launcher3:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.launcher3:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.launcher3:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.launcher3:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.launcher3:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.launcher3:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.launcher3:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.launcher3:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.launcher3:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.launcher3:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:showText
     */
    public static int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:splitTrack
     */
    public static int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:switchMinWidth
     */
    public static int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:switchPadding
     */
    public static int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:switchTextAppearance
     */
    public static int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:thumbTextPadding
     */
    public static int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:thumbTint
     */
    public static int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:thumbTintMode
     */
    public static int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:track
     */
    public static int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:trackTint
     */
    public static int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:trackTintMode
     */
    public static int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchMaterial.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchMaterial_useMaterialThemeColors com.android.launcher3:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #SwitchMaterial_useMaterialThemeColors
     */
    public static final int[] SwitchMaterial={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * When set to true, SwitchMaterial will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:useMaterialThemeColors
     */
    public static int SwitchMaterial_useMaterialThemeColors=0;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.android.launcher3:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.android.launcher3:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.android.launcher3:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.android.launcher3:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.android.launcher3:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:disableDependentsState
     */
    public static int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summaryOff
     */
    public static int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summaryOn
     */
    public static int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:switchTextOff
     */
    public static int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:switchTextOn
     */
    public static int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.android.launcher3:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.android.launcher3:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.android.launcher3:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.android.launcher3:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.android.launcher3:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:disableDependentsState
     */
    public static int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summaryOff
     */
    public static int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:summaryOn
     */
    public static int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:switchTextOff
     */
    public static int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:switchTextOn
     */
    public static int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
      0x01010002, 0x010100f2, 0x0101014f
    };
    /**
     * <p>
     * @attr description
     * Icon to display in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static int TabItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * A reference to a layout resource to be displayed in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int TabItem_android_layout=1;
    /**
     * <p>
     * @attr description
     * Text to display in the tab.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground com.android.launcher3:tabBackground}</code></td><td>Reference to a background to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart com.android.launcher3:tabContentStart}</code></td><td>Position in the Y axis from the starting edge that tabs should be positioned from.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity com.android.launcher3:tabGravity}</code></td><td>Gravity constant for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTint com.android.launcher3:tabIconTint}</code></td><td>Tint to apply to tab icons, if present.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTintMode com.android.launcher3:tabIconTintMode}</code></td><td>Blending mode to apply to tab icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicator com.android.launcher3:tabIndicator}</code></td><td>Reference to a drawable to use as selection indicator for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationDuration com.android.launcher3:tabIndicatorAnimationDuration}</code></td><td>Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationMode com.android.launcher3:tabIndicatorAnimationMode}</code></td><td>The animation mode used to animate the selection indicator between
     * destinations.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor com.android.launcher3:tabIndicatorColor}</code></td><td>Color of the indicator used to show the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorFullWidth com.android.launcher3:tabIndicatorFullWidth}</code></td><td>Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorGravity com.android.launcher3:tabIndicatorGravity}</code></td><td>Gravity constant for tab selection indicator.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight com.android.launcher3:tabIndicatorHeight}</code></td><td>{@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabInlineLabel com.android.launcher3:tabInlineLabel}</code></td><td>Whether to display tab labels horizontally inline with icons, or underneath icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth com.android.launcher3:tabMaxWidth}</code></td><td>The maximum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth com.android.launcher3:tabMinWidth}</code></td><td>The minimum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode com.android.launcher3:tabMode}</code></td><td>The behavior mode for the Tabs in this layout</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding com.android.launcher3:tabPadding}</code></td><td>The preferred padding along all edges of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom com.android.launcher3:tabPaddingBottom}</code></td><td>The preferred padding along the bottom edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd com.android.launcher3:tabPaddingEnd}</code></td><td>The preferred padding along the end edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart com.android.launcher3:tabPaddingStart}</code></td><td>The preferred padding along the start edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop com.android.launcher3:tabPaddingTop}</code></td><td>The preferred padding along the top edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabRippleColor com.android.launcher3:tabRippleColor}</code></td><td>Ripple color for the tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor com.android.launcher3:tabSelectedTextColor}</code></td><td>{@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance com.android.launcher3:tabTextAppearance}</code></td><td>A reference to a TextAppearance style to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor com.android.launcher3:tabTextColor}</code></td><td>The default text color to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabUnboundedRipple com.android.launcher3:tabUnboundedRipple}</code></td><td>Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.</td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIconTint
     * @see #TabLayout_tabIconTintMode
     * @see #TabLayout_tabIndicator
     * @see #TabLayout_tabIndicatorAnimationDuration
     * @see #TabLayout_tabIndicatorAnimationMode
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorFullWidth
     * @see #TabLayout_tabIndicatorGravity
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabInlineLabel
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabRippleColor
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     * @see #TabLayout_tabUnboundedRipple
     */
    @Deprecated
    public static final int[] TabLayout={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Reference to a background to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:tabBackground
     */
    public static int TabLayout_tabBackground=0;
    /**
     * <p>
     * @attr description
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabContentStart
     */
    public static int TabLayout_tabContentStart=1;
    /**
     * <p>
     * @attr description
     * Gravity constant for tabs.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tabGravity
     */
    public static int TabLayout_tabGravity=2;
    /**
     * <p>
     * @attr description
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tabIconTint
     */
    public static int TabLayout_tabIconTint=3;
    /**
     * <p>
     * @attr description
     * Blending mode to apply to tab icons.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tabIconTintMode
     */
    public static int TabLayout_tabIconTintMode=4;
    /**
     * <p>
     * @attr description
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:tabIndicator
     */
    public static int TabLayout_tabIndicator=5;
    /**
     * <p>
     * @attr description
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:tabIndicatorAnimationDuration
     */
    public static int TabLayout_tabIndicatorAnimationDuration=6;
    /**
     * <p>
     * @attr description
     * The animation mode used to animate the selection indicator between
     * destinations.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>elastic</td><td>1</td><td>Animate the selection indicator's left and right bounds out of step
     * with each other, decelerating the front and accelerating the back.
     * This causes the indicator to look like it stretches between destinations
     * an then shrinks back down to fit the size of it's target tab.</td></tr>
     * <tr><td>linear</td><td>0</td><td>Animate the selection indicator's left and right bounds in step with
     * each other.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tabIndicatorAnimationMode
     */
    public static int TabLayout_tabIndicatorAnimationMode=7;
    /**
     * <p>
     * @attr description
     * Color of the indicator used to show the currently selected tab.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tabIndicatorColor
     */
    public static int TabLayout_tabIndicatorColor=8;
    /**
     * <p>
     * @attr description
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:tabIndicatorFullWidth
     */
    public static int TabLayout_tabIndicatorFullWidth=9;
    /**
     * <p>
     * @attr description
     * Gravity constant for tab selection indicator.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tabIndicatorGravity
     */
    public static int TabLayout_tabIndicatorGravity=10;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabIndicatorHeight
     */
    @Deprecated
    public static int TabLayout_tabIndicatorHeight=11;
    /**
     * <p>
     * @attr description
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:tabInlineLabel
     */
    public static int TabLayout_tabInlineLabel=12;
    /**
     * <p>
     * @attr description
     * The maximum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabMaxWidth
     */
    public static int TabLayout_tabMaxWidth=13;
    /**
     * <p>
     * @attr description
     * The minimum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabMinWidth
     */
    public static int TabLayout_tabMinWidth=14;
    /**
     * <p>
     * @attr description
     * The behavior mode for the Tabs in this layout
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:tabMode
     */
    public static int TabLayout_tabMode=15;
    /**
     * <p>
     * @attr description
     * The preferred padding along all edges of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabPadding
     */
    public static int TabLayout_tabPadding=16;
    /**
     * <p>
     * @attr description
     * The preferred padding along the bottom edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabPaddingBottom
     */
    public static int TabLayout_tabPaddingBottom=17;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabPaddingEnd
     */
    public static int TabLayout_tabPaddingEnd=18;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabPaddingStart
     */
    public static int TabLayout_tabPaddingStart=19;
    /**
     * <p>
     * @attr description
     * The preferred padding along the top edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:tabPaddingTop
     */
    public static int TabLayout_tabPaddingTop=20;
    /**
     * <p>
     * @attr description
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tabRippleColor
     */
    public static int TabLayout_tabRippleColor=21;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tabSelectedTextColor
     */
    @Deprecated
    public static int TabLayout_tabSelectedTextColor=22;
    /**
     * <p>
     * @attr description
     * A reference to a TextAppearance style to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:tabTextAppearance
     */
    public static int TabLayout_tabTextAppearance=23;
    /**
     * <p>
     * @attr description
     * The default text color to be applied to tabs.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:tabTextColor
     */
    public static int TabLayout_tabTextColor=24;
    /**
     * <p>
     * @attr description
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:tabUnboundedRipple
     */
    public static int TabLayout_tabUnboundedRipple=25;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.launcher3:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.android.launcher3:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.launcher3:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.android.launcher3:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontFamily
     */
    public static int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:fontVariationSettings
     */
    public static int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:textAllCaps
     */
    public static int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:textLocale
     */
    public static int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a TextInputEditText.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputEditText_textInputLayoutFocusedRectEnabled com.android.launcher3:textInputLayoutFocusedRectEnabled}</code></td><td>Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.</td></tr>
     * </table>
     * @see #TextInputEditText_textInputLayoutFocusedRectEnabled
     */
    public static final int[] TextInputEditText={
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:textInputLayoutFocusedRectEnabled
     */
    public static int TextInputEditText_textInputLayoutFocusedRectEnabled=0;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundColor com.android.launcher3:boxBackgroundColor}</code></td><td>The color to use for the box's background color when in filled box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundMode com.android.launcher3:boxBackgroundMode}</code></td><td>Whether the text input area should be drawn as a filled box, an outline box, or not as a box.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCollapsedPaddingTop com.android.launcher3:boxCollapsedPaddingTop}</code></td><td>Value to use for the EditText's collapsed top padding in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomEnd com.android.launcher3:boxCornerRadiusBottomEnd}</code></td><td>The value to use for the box's bottom end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomStart com.android.launcher3:boxCornerRadiusBottomStart}</code></td><td>The value to use for the box's bottom start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopEnd com.android.launcher3:boxCornerRadiusTopEnd}</code></td><td>The value to use for the box's top end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopStart com.android.launcher3:boxCornerRadiusTopStart}</code></td><td>The value to use for the box's top start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeColor com.android.launcher3:boxStrokeColor}</code></td><td>The color to use for the box's stroke when in outline box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeErrorColor com.android.launcher3:boxStrokeErrorColor}</code></td><td>The color to use for the box's stroke in outline box mode when an error
     * is being displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidth com.android.launcher3:boxStrokeWidth}</code></td><td>The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidthFocused com.android.launcher3:boxStrokeWidthFocused}</code></td><td>The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled com.android.launcher3:counterEnabled}</code></td><td>Whether the layout is laid out as if the character counter will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength com.android.launcher3:counterMaxLength}</code></td><td>The max length to display in the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance com.android.launcher3:counterOverflowTextAppearance}</code></td><td>TextAppearance of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextColor com.android.launcher3:counterOverflowTextColor}</code></td><td>Text color of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance com.android.launcher3:counterTextAppearance}</code></td><td>TextAppearance of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextColor com.android.launcher3:counterTextColor}</code></td><td>Text color of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconCheckable com.android.launcher3:endIconCheckable}</code></td><td>Whether the end icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconContentDescription com.android.launcher3:endIconContentDescription}</code></td><td>Text to set as the content description for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconDrawable com.android.launcher3:endIconDrawable}</code></td><td>Drawable to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconMode com.android.launcher3:endIconMode}</code></td><td>The end icon mode of the TextInputLayout.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTint com.android.launcher3:endIconTint}</code></td><td>Tint color to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTintMode com.android.launcher3:endIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorContentDescription com.android.launcher3:errorContentDescription}</code></td><td>Text to set as the content description for the error view.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled com.android.launcher3:errorEnabled}</code></td><td>Whether the layout is laid out as if an error will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconDrawable com.android.launcher3:errorIconDrawable}</code></td><td>End icon to be shown when an error is displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTint com.android.launcher3:errorIconTint}</code></td><td>Tint color to use for the error icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTintMode com.android.launcher3:errorIconTintMode}</code></td><td>Blending mode used to apply the error icon tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance com.android.launcher3:errorTextAppearance}</code></td><td>TextAppearance of any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextColor com.android.launcher3:errorTextColor}</code></td><td>Text color for any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_expandedHintEnabled com.android.launcher3:expandedHintEnabled}</code></td><td>Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperText com.android.launcher3:helperText}</code></td><td>The text to display as helper text underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextEnabled com.android.launcher3:helperTextEnabled}</code></td><td>Whether the layout's helper text functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextAppearance com.android.launcher3:helperTextTextAppearance}</code></td><td>TextAppearance of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextColor com.android.launcher3:helperTextTextColor}</code></td><td>Text color of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled com.android.launcher3:hintAnimationEnabled}</code></td><td>Whether to animate hint state changes.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled com.android.launcher3:hintEnabled}</code></td><td>Whether the layout's floating label functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance com.android.launcher3:hintTextAppearance}</code></td><td>TextAppearance of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextColor com.android.launcher3:hintTextColor}</code></td><td>Text color of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription com.android.launcher3:passwordToggleContentDescription}</code></td><td>Text to set as the content description for the password input visibility toggle.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable com.android.launcher3:passwordToggleDrawable}</code></td><td>Drawable to use as the password input visibility toggle icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled com.android.launcher3:passwordToggleEnabled}</code></td><td>Whether the view will display a toggle when the EditText has a password.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint com.android.launcher3:passwordToggleTint}</code></td><td>Icon to use for the password input visibility toggle
     * Deprecated.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode com.android.launcher3:passwordToggleTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderText com.android.launcher3:placeholderText}</code></td><td>The text to display as placeholder text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderTextAppearance com.android.launcher3:placeholderTextAppearance}</code></td><td>TextAppearance of the placeholder text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderTextColor com.android.launcher3:placeholderTextColor}</code></td><td>Text color of the placeholder text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixText com.android.launcher3:prefixText}</code></td><td>The text to display as prefix text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixTextAppearance com.android.launcher3:prefixTextAppearance}</code></td><td>TextAppearance of the prefix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixTextColor com.android.launcher3:prefixTextColor}</code></td><td>Text color of the prefix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearance com.android.launcher3:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearanceOverlay com.android.launcher3:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconCheckable com.android.launcher3:startIconCheckable}</code></td><td>Whether the start icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconContentDescription com.android.launcher3:startIconContentDescription}</code></td><td>Text to set as the content description for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconDrawable com.android.launcher3:startIconDrawable}</code></td><td>Drawable to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTint com.android.launcher3:startIconTint}</code></td><td>Tint color to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTintMode com.android.launcher3:startIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixText com.android.launcher3:suffixText}</code></td><td>The text to display as suffix text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixTextAppearance com.android.launcher3:suffixTextAppearance}</code></td><td>TextAppearance of the suffix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixTextColor com.android.launcher3:suffixTextColor}</code></td><td>Text color of the suffix text displayed in the text input area.</td></tr>
     * </table>
     * @see #TextInputLayout_android_enabled
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_maxWidth
     * @see #TextInputLayout_android_minWidth
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_boxBackgroundColor
     * @see #TextInputLayout_boxBackgroundMode
     * @see #TextInputLayout_boxCollapsedPaddingTop
     * @see #TextInputLayout_boxCornerRadiusBottomEnd
     * @see #TextInputLayout_boxCornerRadiusBottomStart
     * @see #TextInputLayout_boxCornerRadiusTopEnd
     * @see #TextInputLayout_boxCornerRadiusTopStart
     * @see #TextInputLayout_boxStrokeColor
     * @see #TextInputLayout_boxStrokeErrorColor
     * @see #TextInputLayout_boxStrokeWidth
     * @see #TextInputLayout_boxStrokeWidthFocused
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterOverflowTextColor
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_counterTextColor
     * @see #TextInputLayout_endIconCheckable
     * @see #TextInputLayout_endIconContentDescription
     * @see #TextInputLayout_endIconDrawable
     * @see #TextInputLayout_endIconMode
     * @see #TextInputLayout_endIconTint
     * @see #TextInputLayout_endIconTintMode
     * @see #TextInputLayout_errorContentDescription
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorIconDrawable
     * @see #TextInputLayout_errorIconTint
     * @see #TextInputLayout_errorIconTintMode
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_errorTextColor
     * @see #TextInputLayout_expandedHintEnabled
     * @see #TextInputLayout_helperText
     * @see #TextInputLayout_helperTextEnabled
     * @see #TextInputLayout_helperTextTextAppearance
     * @see #TextInputLayout_helperTextTextColor
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_hintTextColor
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     * @see #TextInputLayout_placeholderText
     * @see #TextInputLayout_placeholderTextAppearance
     * @see #TextInputLayout_placeholderTextColor
     * @see #TextInputLayout_prefixText
     * @see #TextInputLayout_prefixTextAppearance
     * @see #TextInputLayout_prefixTextColor
     * @see #TextInputLayout_shapeAppearance
     * @see #TextInputLayout_shapeAppearanceOverlay
     * @see #TextInputLayout_startIconCheckable
     * @see #TextInputLayout_startIconContentDescription
     * @see #TextInputLayout_startIconDrawable
     * @see #TextInputLayout_startIconTint
     * @see #TextInputLayout_startIconTintMode
     * @see #TextInputLayout_suffixText
     * @see #TextInputLayout_suffixTextAppearance
     * @see #TextInputLayout_suffixTextColor
     */
    public static final int[] TextInputLayout={
      0x0101000e, 0x0101009a, 0x0101011f, 0x0101013f, 
      0x01010150, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Whether the layout is enabled
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static int TextInputLayout_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The text color for the hint when the text field is not activated (such
     * as for the resting and disabled states).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static int TextInputLayout_android_textColorHint=1;
    /**
     * <p>
     * @attr description
     * Makes the text field be at most this dimension wide if its width is set
     * to wrap_content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static int TextInputLayout_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Makes the text field be at least this dimension wide if its width is
     * set to wrap_content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int TextInputLayout_android_minWidth=3;
    /**
     * <p>
     * @attr description
     * The hint to display in the floating label.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static int TextInputLayout_android_hint=4;
    /**
     * <p>
     * @attr description
     * The color to use for the box's background color when in filled box mode.
     * If a non-stateful color resource is specified, default colors will be used for the hover
     * and disabled states.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:boxBackgroundColor
     */
    public static int TextInputLayout_boxBackgroundColor=5;
    /**
     * <p>
     * @attr description
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:boxBackgroundMode
     */
    public static int TextInputLayout_boxBackgroundMode=6;
    /**
     * <p>
     * @attr description
     * Value to use for the EditText's collapsed top padding in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxCollapsedPaddingTop
     */
    public static int TextInputLayout_boxCollapsedPaddingTop=7;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxCornerRadiusBottomEnd
     */
    public static int TextInputLayout_boxCornerRadiusBottomEnd=8;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxCornerRadiusBottomStart
     */
    public static int TextInputLayout_boxCornerRadiusBottomStart=9;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxCornerRadiusTopEnd
     */
    public static int TextInputLayout_boxCornerRadiusTopEnd=10;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxCornerRadiusTopStart
     */
    public static int TextInputLayout_boxCornerRadiusTopStart=11;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke when in outline box mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:boxStrokeColor
     */
    public static int TextInputLayout_boxStrokeColor=12;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke in outline box mode when an error
     * is being displayed. If not set, it defaults to errorTextColor if on
     * error state, or to counterOverflowTextColor if on overflow state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:boxStrokeErrorColor
     */
    public static int TextInputLayout_boxStrokeErrorColor=13;
    /**
     * <p>
     * @attr description
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxStrokeWidth
     */
    public static int TextInputLayout_boxStrokeWidth=14;
    /**
     * <p>
     * @attr description
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:boxStrokeWidthFocused
     */
    public static int TextInputLayout_boxStrokeWidthFocused=15;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if the character counter will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:counterEnabled
     */
    public static int TextInputLayout_counterEnabled=16;
    /**
     * <p>
     * @attr description
     * The max length to display in the character counter.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:counterMaxLength
     */
    public static int TextInputLayout_counterMaxLength=17;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter when the text is longer than the max.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:counterOverflowTextAppearance
     */
    public static int TextInputLayout_counterOverflowTextAppearance=18;
    /**
     * <p>
     * @attr description
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:counterOverflowTextColor
     */
    public static int TextInputLayout_counterOverflowTextColor=19;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:counterTextAppearance
     */
    public static int TextInputLayout_counterTextAppearance=20;
    /**
     * <p>
     * @attr description
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:counterTextColor
     */
    public static int TextInputLayout_counterTextColor=21;
    /**
     * <p>
     * @attr description
     * Whether the end icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:endIconCheckable
     */
    public static int TextInputLayout_endIconCheckable=22;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the end icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:endIconContentDescription
     */
    public static int TextInputLayout_endIconContentDescription=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the end icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:endIconDrawable
     */
    public static int TextInputLayout_endIconDrawable=24;
    /**
     * <p>
     * @attr description
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:endIconMode
     */
    public static int TextInputLayout_endIconMode=25;
    /**
     * <p>
     * @attr description
     * Tint color to use for the end icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:endIconTint
     */
    public static int TextInputLayout_endIconTint=26;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:endIconTintMode
     */
    public static int TextInputLayout_endIconTintMode=27;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the error view.
     * Should be set when the error message has special characters that a
     * screen reader is not able to announce properly.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:errorContentDescription
     */
    public static int TextInputLayout_errorContentDescription=28;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if an error will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:errorEnabled
     */
    public static int TextInputLayout_errorEnabled=29;
    /**
     * <p>
     * @attr description
     * End icon to be shown when an error is displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:errorIconDrawable
     */
    public static int TextInputLayout_errorIconDrawable=30;
    /**
     * <p>
     * @attr description
     * Tint color to use for the error icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:errorIconTint
     */
    public static int TextInputLayout_errorIconTint=31;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the error icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:errorIconTintMode
     */
    public static int TextInputLayout_errorIconTintMode=32;
    /**
     * <p>
     * @attr description
     * TextAppearance of any error message displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:errorTextAppearance
     */
    public static int TextInputLayout_errorTextAppearance=33;
    /**
     * <p>
     * @attr description
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:errorTextColor
     */
    public static int TextInputLayout_errorTextColor=34;
    /**
     * <p>
     * @attr description
     * Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:expandedHintEnabled
     */
    public static int TextInputLayout_expandedHintEnabled=35;
    /**
     * <p>
     * @attr description
     * The text to display as helper text underneath the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:helperText
     */
    public static int TextInputLayout_helperText=36;
    /**
     * <p>
     * @attr description
     * Whether the layout's helper text functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:helperTextEnabled
     */
    public static int TextInputLayout_helperTextEnabled=37;
    /**
     * <p>
     * @attr description
     * TextAppearance of the helper text displayed underneath the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:helperTextTextAppearance
     */
    public static int TextInputLayout_helperTextTextAppearance=38;
    /**
     * <p>
     * @attr description
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:helperTextTextColor
     */
    public static int TextInputLayout_helperTextTextColor=39;
    /**
     * <p>
     * @attr description
     * Whether to animate hint state changes.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:hintAnimationEnabled
     */
    public static int TextInputLayout_hintAnimationEnabled=40;
    /**
     * <p>
     * @attr description
     * Whether the layout's floating label functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:hintEnabled
     */
    public static int TextInputLayout_hintEnabled=41;
    /**
     * <p>
     * @attr description
     * TextAppearance of the hint in the collapsed floating label.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:hintTextAppearance
     */
    public static int TextInputLayout_hintTextAppearance=42;
    /**
     * <p>
     * @attr description
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:hintTextColor
     */
    public static int TextInputLayout_hintTextColor=43;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:passwordToggleContentDescription
     */
    public static int TextInputLayout_passwordToggleContentDescription=44;
    /**
     * <p>
     * @attr description
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:passwordToggleDrawable
     */
    public static int TextInputLayout_passwordToggleDrawable=45;
    /**
     * <p>
     * @attr description
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:passwordToggleEnabled
     */
    public static int TextInputLayout_passwordToggleEnabled=46;
    /**
     * <p>
     * @attr description
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:passwordToggleTint
     */
    public static int TextInputLayout_passwordToggleTint=47;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:passwordToggleTintMode
     */
    public static int TextInputLayout_passwordToggleTintMode=48;
    /**
     * <p>
     * @attr description
     * The text to display as placeholder text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:placeholderText
     */
    public static int TextInputLayout_placeholderText=49;
    /**
     * <p>
     * @attr description
     * TextAppearance of the placeholder text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:placeholderTextAppearance
     */
    public static int TextInputLayout_placeholderTextAppearance=50;
    /**
     * <p>
     * @attr description
     * Text color of the placeholder text displayed in the text input area.
     * If set, this takes precedence over placeholderTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:placeholderTextColor
     */
    public static int TextInputLayout_placeholderTextColor=51;
    /**
     * <p>
     * @attr description
     * The text to display as prefix text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:prefixText
     */
    public static int TextInputLayout_prefixText=52;
    /**
     * <p>
     * @attr description
     * TextAppearance of the prefix text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:prefixTextAppearance
     */
    public static int TextInputLayout_prefixTextAppearance=53;
    /**
     * <p>
     * @attr description
     * Text color of the prefix text displayed in the text input area.
     * If set, this takes precedence over prefixTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:prefixTextColor
     */
    public static int TextInputLayout_prefixTextColor=54;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for TextInputLayout. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearance
     */
    public static int TextInputLayout_shapeAppearance=55;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for TextInputLayout. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:shapeAppearanceOverlay
     */
    public static int TextInputLayout_shapeAppearanceOverlay=56;
    /**
     * <p>
     * @attr description
     * Whether the start icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:startIconCheckable
     */
    public static int TextInputLayout_startIconCheckable=57;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the start icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:startIconContentDescription
     */
    public static int TextInputLayout_startIconContentDescription=58;
    /**
     * <p>
     * @attr description
     * Drawable to use for the start icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:startIconDrawable
     */
    public static int TextInputLayout_startIconDrawable=59;
    /**
     * <p>
     * @attr description
     * Tint color to use for the start icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:startIconTint
     */
    public static int TextInputLayout_startIconTint=60;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:startIconTintMode
     */
    public static int TextInputLayout_startIconTintMode=61;
    /**
     * <p>
     * @attr description
     * The text to display as suffix text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:suffixText
     */
    public static int TextInputLayout_suffixText=62;
    /**
     * <p>
     * @attr description
     * TextAppearance of the suffix text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:suffixTextAppearance
     */
    public static int TextInputLayout_suffixTextAppearance=63;
    /**
     * <p>
     * @attr description
     * Text color of the suffix text displayed in the text input area.
     * If set, this takes precedence over suffixTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:suffixTextColor
     */
    public static int TextInputLayout_suffixTextColor=64;
    /**
     * Attributes that can be used with a ThemeEnforcement.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ThemeEnforcement_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceMaterialTheme com.android.launcher3:enforceMaterialTheme}</code></td><td>Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.</td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceTextAppearance com.android.launcher3:enforceTextAppearance}</code></td><td>Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.</td></tr>
     * </table>
     * @see #ThemeEnforcement_android_textAppearance
     * @see #ThemeEnforcement_enforceMaterialTheme
     * @see #ThemeEnforcement_enforceTextAppearance
     */
    public static final int[] ThemeEnforcement={
      0x01010034, 0x00000000, 0x00000000
    };
    /**
     * <p>
     * @attr description
     * Attribute used to check that a component has a TextAppearance specified on it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static int ThemeEnforcement_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:enforceMaterialTheme
     */
    public static int ThemeEnforcement_enforceMaterialTheme=1;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:enforceTextAppearance
     */
    public static int ThemeEnforcement_enforceTextAppearance=2;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.launcher3:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.launcher3:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.launcher3:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.launcher3:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.launcher3:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.launcher3:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.launcher3:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.launcher3:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.launcher3:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.launcher3:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.launcher3:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.launcher3:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.android.launcher3:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.launcher3:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.launcher3:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.launcher3:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.launcher3:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.launcher3:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.launcher3:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.launcher3:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.launcher3:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.launcher3:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.launcher3:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.launcher3:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.launcher3:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.launcher3:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.launcher3:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.launcher3:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:buttonGravity
     */
    public static int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:collapseContentDescription
     */
    public static int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:collapseIcon
     */
    public static int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetEnd
     */
    public static int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetEndWithActions
     */
    public static int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetLeft
     */
    public static int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetRight
     */
    public static int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetStart
     */
    public static int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:contentInsetStartWithNavigation
     */
    public static int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:logo
     */
    public static int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:logoDescription
     */
    public static int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:maxButtonHeight
     */
    public static int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:menu
     */
    public static int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:navigationContentDescription
     */
    public static int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:navigationIcon
     */
    public static int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:popupTheme
     */
    public static int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:subtitle
     */
    public static int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:subtitleTextAppearance
     */
    public static int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:subtitleTextColor
     */
    public static int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:title
     */
    public static int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleMargin
     */
    public static int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleMarginBottom
     */
    public static int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleMarginEnd
     */
    public static int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleMarginStart
     */
    public static int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleMarginTop
     */
    public static int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:titleMargins
     */
    @Deprecated
    public static int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:titleTextAppearance
     */
    public static int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:titleTextColor
     */
    public static int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a Tooltip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Tooltip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_padding android:padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_layout_margin android:layout_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * </table>
     * @see #Tooltip_android_textAppearance
     * @see #Tooltip_android_padding
     * @see #Tooltip_android_layout_margin
     * @see #Tooltip_android_minWidth
     * @see #Tooltip_android_minHeight
     * @see #Tooltip_android_text
     * @see #Tooltip_backgroundTint
     */
    public static final int[] Tooltip={
      0x01010034, 0x010100d5, 0x010100f6, 0x0101013f, 
      0x01010140, 0x0101014f, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static int Tooltip_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#padding}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:padding
     */
    public static int Tooltip_android_padding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_margin}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_margin
     */
    public static int Tooltip_android_layout_margin=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static int Tooltip_android_minWidth=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static int Tooltip_android_minHeight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static int Tooltip_android_text=5;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int Tooltip_backgroundTint=6;
    /**
     * Attributes that can be used with a Transform.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Transform_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_pivotAnchor com.android.launcher3:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_pivotX com.android.launcher3:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_pivotY com.android.launcher3:pivotY}</code></td><td></td></tr>
     * </table>
     * @see #Transform_android_transformPivotX
     * @see #Transform_android_transformPivotY
     * @see #Transform_android_translationX
     * @see #Transform_android_translationY
     * @see #Transform_android_scaleX
     * @see #Transform_android_scaleY
     * @see #Transform_android_rotation
     * @see #Transform_android_rotationX
     * @see #Transform_android_rotationY
     * @see #Transform_android_translationZ
     * @see #Transform_android_elevation
     * @see #Transform_pivotAnchor
     * @see #Transform_pivotX
     * @see #Transform_pivotY
     */
    public static final int[] Transform={
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103fa, 0x01010440, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static int Transform_android_transformPivotX=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static int Transform_android_transformPivotY=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static int Transform_android_translationX=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static int Transform_android_translationY=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static int Transform_android_scaleX=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static int Transform_android_scaleY=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static int Transform_android_rotation=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static int Transform_android_rotationX=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static int Transform_android_rotationY=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static int Transform_android_translationZ=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static int Transform_android_elevation=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pivotAnchor
     */
    public static int Transform_pivotAnchor=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pivotX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:pivotX
     */
    public static int Transform_pivotX=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pivotY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.launcher3:pivotY
     */
    public static int Transform_pivotY=13;
    /**
     * Attributes that can be used with a Transition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Transition_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_autoTransition com.android.launcher3:autoTransition}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_constraintSetEnd com.android.launcher3:constraintSetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_constraintSetStart com.android.launcher3:constraintSetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_duration com.android.launcher3:duration}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_layoutDuringTransition com.android.launcher3:layoutDuringTransition}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_motionInterpolator com.android.launcher3:motionInterpolator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_pathMotionArc com.android.launcher3:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_staggered com.android.launcher3:staggered}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_transitionDisable com.android.launcher3:transitionDisable}</code></td><td></td></tr>
     * </table>
     * @see #Transition_android_id
     * @see #Transition_autoTransition
     * @see #Transition_constraintSetEnd
     * @see #Transition_constraintSetStart
     * @see #Transition_duration
     * @see #Transition_layoutDuringTransition
     * @see #Transition_motionInterpolator
     * @see #Transition_pathMotionArc
     * @see #Transition_staggered
     * @see #Transition_transitionDisable
     */
    public static final int[] Transition={
      0x010100d0, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int Transition_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#autoTransition}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>animateToEnd</td><td>4</td><td></td></tr>
     * <tr><td>animateToStart</td><td>3</td><td></td></tr>
     * <tr><td>jumpToEnd</td><td>2</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:autoTransition
     */
    public static int Transition_autoTransition=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraintSetEnd}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:constraintSetEnd
     */
    public static int Transition_constraintSetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraintSetStart}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:constraintSetStart
     */
    public static int Transition_constraintSetStart=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#duration}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:duration
     */
    public static int Transition_duration=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#layoutDuringTransition}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:layoutDuringTransition
     */
    public static int Transition_layoutDuringTransition=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#motionInterpolator}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>5</td><td></td></tr>
     * <tr><td>easeIn</td><td>1</td><td></td></tr>
     * <tr><td>easeInOut</td><td>0</td><td></td></tr>
     * <tr><td>easeOut</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:motionInterpolator
     */
    public static int Transition_motionInterpolator=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:pathMotionArc
     */
    public static int Transition_pathMotionArc=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#staggered}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher3:staggered
     */
    public static int Transition_staggered=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#transitionDisable}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:transitionDisable
     */
    public static int Transition_transitionDisable=9;
    /**
     * Attributes that can be used with a Variant.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Variant_constraints com.android.launcher3:constraints}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_heightLessThan com.android.launcher3:region_heightLessThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_heightMoreThan com.android.launcher3:region_heightMoreThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_widthLessThan com.android.launcher3:region_widthLessThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_widthMoreThan com.android.launcher3:region_widthMoreThan}</code></td><td></td></tr>
     * </table>
     * @see #Variant_constraints
     * @see #Variant_region_heightLessThan
     * @see #Variant_region_heightMoreThan
     * @see #Variant_region_widthLessThan
     * @see #Variant_region_widthMoreThan
     */
    public static final int[] Variant={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#constraints}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:constraints
     */
    public static int Variant_constraints=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#region_heightLessThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:region_heightLessThan
     */
    public static int Variant_region_heightLessThan=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#region_heightMoreThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:region_heightMoreThan
     */
    public static int Variant_region_heightMoreThan=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#region_widthLessThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:region_widthLessThan
     */
    public static int Variant_region_widthLessThan=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#region_widthMoreThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:region_widthMoreThan
     */
    public static int Variant_region_widthMoreThan=4;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.launcher3:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.launcher3:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.launcher3:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:paddingEnd
     */
    public static int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:paddingStart
     */
    public static int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:theme
     */
    public static int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.launcher3:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.launcher3:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x00000000, 0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher3:backgroundTint
     */
    public static int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.launcher3:backgroundTintMode
     */
    public static int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewPager2.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewPager2_android_orientation android:orientation}</code></td><td></td></tr>
     * </table>
     * @see #ViewPager2_android_orientation
     */
    public static final int[] ViewPager2={
      0x010100c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ViewPager2} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static int ViewPager2_android_orientation=0;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static int ViewStubCompat_android_inflatedId=2;
    /**
     * Attributes that can be used with a WidgetSections.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WidgetSections_alsoKeepInApp com.android.launcher3:alsoKeepInApp}</code></td><td>If true, keep the app widget under its app listing in addition to the widget category
     * in the widget picker.</td></tr>
     * <tr><td><code>{@link #WidgetSections_category com.android.launcher3:category}</code></td><td>The category of an app widget provider.</td></tr>
     * <tr><td><code>{@link #WidgetSections_provider com.android.launcher3:provider}</code></td><td>Component name of an app widget provider.</td></tr>
     * <tr><td><code>{@link #WidgetSections_sectionDrawable com.android.launcher3:sectionDrawable}</code></td><td>The icon drawable of a widget category.</td></tr>
     * <tr><td><code>{@link #WidgetSections_sectionTitle com.android.launcher3:sectionTitle}</code></td><td>The title name of a widget category.</td></tr>
     * </table>
     * @see #WidgetSections_alsoKeepInApp
     * @see #WidgetSections_category
     * @see #WidgetSections_provider
     * @see #WidgetSections_sectionDrawable
     * @see #WidgetSections_sectionTitle
     */
    public static final int[] WidgetSections={
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 
      0x00000000
    };
    /**
     * <p>
     * @attr description
     * If true, keep the app widget under its app listing in addition to the widget category
     * in the widget picker. Defaults to false if not specified.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.launcher3:alsoKeepInApp
     */
    public static int WidgetSections_alsoKeepInApp=0;
    /**
     * <p>
     * @attr description
     * The category of an app widget provider. Defaults to -1 if not specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher3:category
     */
    public static int WidgetSections_category=1;
    /**
     * <p>
     * @attr description
     * Component name of an app widget provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher3:provider
     */
    public static int WidgetSections_provider=2;
    /**
     * <p>
     * @attr description
     * The icon drawable of a widget category.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:sectionDrawable
     */
    public static int WidgetSections_sectionDrawable=3;
    /**
     * <p>
     * @attr description
     * The title name of a widget category.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher3:sectionTitle
     */
    public static int WidgetSections_sectionTitle=4;
    /**
     * Attributes that can be used with a WidgetsListRowHeader.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WidgetsListRowHeader_appIconSize com.android.launcher3:appIconSize}</code></td><td></td></tr>
     * </table>
     * @see #WidgetsListRowHeader_appIconSize
     */
    public static final int[] WidgetsListRowHeader={
      0x00000000
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher3.R.attr#appIconSize}
     * attribute's value can be found in the {@link #WidgetsListRowHeader} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher3:appIconSize
     */
    public static int WidgetsListRowHeader_appIconSize=0;
  }
  public static final class xml {
    public static int backupscheme=0x00000000;
    public static int default_workspace_2x2=0x00000000;
    public static int default_workspace_3x3=0x00000000;
    public static int default_workspace_4x5=0x00000000;
    public static int default_workspace_5x5=0x00000000;
    public static int default_workspace_5x6=0x00000000;
    public static int default_workspace_5x7=0x00000000;
    public static int default_workspace_6x5=0x00000000;
    public static int default_workspace_6x6=0x00000000;
    public static int device_profiles=0x00000000;
    public static int dynamic_resources=0x00000000;
    public static int folder_shapes=0x00000000;
    public static int indexable_launcher_prefs=0x00000000;
    public static int launcher_preferences=0x00000000;
    public static int overview_file_provider_paths=0x00000000;
    public static int standalone_badge=0x00000000;
    public static int standalone_badge_gravity_bottom_end=0x00000000;
    public static int standalone_badge_gravity_bottom_start=0x00000000;
    public static int standalone_badge_gravity_top_start=0x00000000;
    public static int standalone_badge_offset=0x00000000;
    public static int widget_sections=0x00000000;
  }
}