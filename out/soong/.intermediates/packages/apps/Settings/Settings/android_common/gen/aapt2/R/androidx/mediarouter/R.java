/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package androidx.mediarouter;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int btn_checkbox_to_checked_box_inner_merged_animation=0x7f01000c;
    public static final int btn_checkbox_to_checked_box_outer_merged_animation=0x7f01000d;
    public static final int btn_checkbox_to_checked_icon_null_animation=0x7f01000e;
    public static final int btn_checkbox_to_unchecked_box_inner_merged_animation=0x7f01000f;
    public static final int btn_checkbox_to_unchecked_check_path_merged_animation=0x7f010010;
    public static final int btn_checkbox_to_unchecked_icon_null_animation=0x7f010011;
    public static final int btn_radio_to_off_mtrl_dot_group_animation=0x7f010012;
    public static final int btn_radio_to_off_mtrl_ring_outer_animation=0x7f010013;
    public static final int btn_radio_to_off_mtrl_ring_outer_path_animation=0x7f010014;
    public static final int btn_radio_to_on_mtrl_dot_group_animation=0x7f010015;
    public static final int btn_radio_to_on_mtrl_ring_outer_animation=0x7f010016;
    public static final int btn_radio_to_on_mtrl_ring_outer_path_animation=0x7f010017;
    public static final int confirm_credential_biometric_transition_exit=0x7f010018;
    public static final int confirm_credential_close_enter=0x7f010019;
    public static final int confirm_credential_close_exit=0x7f01001a;
    public static final int confirm_credential_open_enter=0x7f01001b;
    public static final int confirm_credential_open_exit=0x7f01001c;
    public static final int design_bottom_sheet_slide_in=0x7f01001d;
    public static final int design_bottom_sheet_slide_out=0x7f01001e;
    public static final int design_snackbar_in=0x7f01001f;
    public static final int design_snackbar_out=0x7f010020;
    public static final int enrollment_fingerprint_background_1_path_animation=0x7f010021;
    public static final int enrollment_fingerprint_background_2_path_animation=0x7f010022;
    public static final int enrollment_fingerprint_background_5_path_animation=0x7f010023;
    public static final int enrollment_fingerprint_background_6_path_animation=0x7f010024;
    public static final int enrollment_fingerprint_background_7_path_animation=0x7f010025;
    public static final int enrollment_fingerprint_isolated_ridge_1_path_animation=0x7f010026;
    public static final int enrollment_fingerprint_isolated_ridge_2_path_animation=0x7f010027;
    public static final int enrollment_fingerprint_isolated_ridge_5_path_animation=0x7f010028;
    public static final int enrollment_fingerprint_isolated_ridge_6_path_animation=0x7f010029;
    public static final int enrollment_fingerprint_isolated_ridge_7_path_animation=0x7f01002a;
    public static final int fragment_fast_out_extra_slow_in=0x7f01002b;
    public static final int item_animation_fade_in=0x7f01002c;
    public static final int layout_animation_fade_in=0x7f01002d;
    public static final int mtrl_bottom_sheet_slide_in=0x7f01002e;
    public static final int mtrl_bottom_sheet_slide_out=0x7f01002f;
    public static final int mtrl_card_lowers_interpolator=0x7f010030;
    public static final int progress_indeterminate_horizontal_rect1_copy=0x7f010031;
    public static final int progress_indeterminate_horizontal_rect2_copy=0x7f010032;
    public static final int sud_interpolator=0x7f010033;
    public static final int sud_pre_p_activity_close_enter=0x7f010034;
    public static final int sud_pre_p_activity_close_exit=0x7f010035;
    public static final int sud_pre_p_activity_open_enter=0x7f010036;
    public static final int sud_pre_p_activity_open_exit=0x7f010037;
    public static final int sud_slide_back_in=0x7f010038;
    public static final int sud_slide_back_out=0x7f010039;
    public static final int sud_slide_next_in=0x7f01003a;
    public static final int sud_slide_next_out=0x7f01003b;
    public static final int sud_stay=0x7f01003c;
  }
  public static final class animator {
    public static final int design_appbar_state_list_animator=0x7f020000;
    public static final int design_fab_hide_motion_spec=0x7f020001;
    public static final int design_fab_show_motion_spec=0x7f020002;
    public static final int fragment_close_enter=0x7f020003;
    public static final int fragment_close_exit=0x7f020004;
    public static final int fragment_fade_enter=0x7f020005;
    public static final int fragment_fade_exit=0x7f020006;
    public static final int fragment_open_enter=0x7f020007;
    public static final int fragment_open_exit=0x7f020008;
    public static final int linear_indeterminate_line1_head_interpolator=0x7f020009;
    public static final int linear_indeterminate_line1_tail_interpolator=0x7f02000a;
    public static final int linear_indeterminate_line2_head_interpolator=0x7f02000b;
    public static final int linear_indeterminate_line2_tail_interpolator=0x7f02000c;
    public static final int mtrl_btn_state_list_anim=0x7f02000d;
    public static final int mtrl_btn_unelevated_state_list_anim=0x7f02000e;
    public static final int mtrl_card_state_list_anim=0x7f02000f;
    public static final int mtrl_chip_state_list_anim=0x7f020010;
    public static final int mtrl_extended_fab_change_size_collapse_motion_spec=0x7f020011;
    public static final int mtrl_extended_fab_change_size_expand_motion_spec=0x7f020012;
    public static final int mtrl_extended_fab_hide_motion_spec=0x7f020013;
    public static final int mtrl_extended_fab_show_motion_spec=0x7f020014;
    public static final int mtrl_extended_fab_state_list_animator=0x7f020015;
    public static final int mtrl_fab_hide_motion_spec=0x7f020016;
    public static final int mtrl_fab_show_motion_spec=0x7f020017;
    public static final int mtrl_fab_transformation_sheet_collapse_spec=0x7f020018;
    public static final int mtrl_fab_transformation_sheet_expand_spec=0x7f020019;
    public static final int sud_slide_back_in=0x7f02001a;
    public static final int sud_slide_back_out=0x7f02001b;
    public static final int sud_slide_next_in=0x7f02001c;
    public static final int sud_slide_next_out=0x7f02001d;
  }
  public static final class array {
    /**
     * Keys for the list of accessibility auto click xml.
     */
    public static final int accessibility_autoclick_control_selector_keys=0x7f030000;
    /**
     * Values for the list of accessibility auto click, pairs to Keys .
     */
    public static final int accessibility_autoclick_selector_values=0x7f030001;
    /**
     * Titles for the accessibility button or gesture. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_gesture_selector_titles=0x7f030002;
    /**
     * Should Keep in sync with Settings.Secure.ACCESSIBILITY_BUTTON_MODE_*
     */
    public static final int accessibility_button_gesture_selector_values=0x7f030003;
    /**
     * Titles for the accessibility button location. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_location_selector_titles=0x7f030004;
    /**
     * Should Keep in sync with Settings.Secure.ACCESSIBILITY_BUTTON_MODE_*
     */
    public static final int accessibility_button_location_selector_values=0x7f030005;
    /**
     * Titles for the accessibility button size. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_size_selector_titles=0x7f030006;
    /**
     * Values for the accessibility button size.
     */
    public static final int accessibility_button_size_selector_values=0x7f030007;
    /**
     * Keys for the list of accessibility timeouts xml.
     */
    public static final int accessibility_timeout_control_selector_keys=0x7f030008;
    /**
     * Values for the list of accessibility timeouts, pairs to Keys .
     */
    public static final int accessibility_timeout_selector_values=0x7f030009;
    /**
     * Summaries of accessibility timeout, pairs to Values
     */
    public static final int accessibility_timeout_summaries=0x7f03000a;
    /**
     * Titles for animator duration scale preference. [CHAR LIMIT=35]
     */
    public static final int animator_duration_scale_entries=0x7f03000b;
    /**
     * Values for animator duration scale preference.
     */
    public static final int animator_duration_scale_values=0x7f03000c;
    /**
     * Authentication Types used in APN editor
     */
    public static final int apn_auth_entries=0x7f03000d;
    public static final int apn_auth_values=0x7f03000e;
    /**
     * Authentication Types used in APN editor
     */
    public static final int apn_protocol_entries=0x7f03000f;
    public static final int apn_protocol_values=0x7f030010;
    /**
     * Apps on SD installation location options in ApplicationSettings
     */
    public static final int app_install_location_entries=0x7f030011;
    /**
     * Do not translate.
     */
    public static final int app_install_location_values=0x7f030012;
    /**
     * Per-app notification settings: Timeout period in which the app notifications are muted. These are shown in a list dialog.
     */
    public static final int app_notification_sound_timeout_entries=0x7f030013;
    /**
     * Do not translate.
     */
    public static final int app_notification_sound_timeout_values=0x7f030014;
    /**
     * Names of categories of app ops tabs
     */
    public static final int app_ops_categories=0x7f030015;
    /**
     * User display names for app ops codes
     */
    public static final int app_ops_labels=0x7f030016;
    /**
     * User display names for app ops codes
     */
    public static final int app_ops_summaries=0x7f030017;
    /**
     * Titles for app process limit preference. [CHAR LIMIT=35]
     */
    public static final int app_process_limit_entries=0x7f030018;
    /**
     * Values for app process limit preference.
     */
    public static final int app_process_limit_values=0x7f030019;
    /**
     * Titles for autofill logging level preference. [CHAR LIMIT=50]
     */
    public static final int autofill_logging_level_entries=0x7f03001a;
    /**
     * Values for autofill logging level preference.
     */
    public static final int autofill_logging_level_values=0x7f03001b;
    /**
     * Automatic storage management settings. The amount of days for the automatic storage manager
     * to retain. These are shown in a list dialog. [CHAR LIMIT=70]
     */
    public static final int automatic_storage_management_days=0x7f03001c;
    public static final int automatic_storage_management_days_values=0x7f03001d;
    /**
     * Do not translate.
     */
    public static final int background_style1=0x7f03001e;
    /**
     * Do not translate.
     */
    public static final int background_style2=0x7f03001f;
    /**
     * Do not translate.
     */
    public static final int background_style3=0x7f030020;
    /**
     * Do not translate.
     */
    public static final int background_style4=0x7f030021;
    /**
     * Labels on the side of batter graph in Quick Settings and Settings [CHAR LIMIT=8]
     */
    public static final int battery_labels=0x7f030022;
    /**
     * Battery saver mode: allowable trigger threshold levels.
     */
    public static final int battery_saver_trigger_values=0x7f030023;
    public static final int batterymeter_bolt_points=0x7f030024;
    /**
     * BatteryMeterView parameters
     */
    public static final int batterymeter_color_levels=0x7f030025;
    public static final int batterymeter_color_values=0x7f030026;
    public static final int batterymeter_plus_points=0x7f030027;
    /**
     * Bearer Info used in APN editor
     */
    public static final int bearer_entries=0x7f030028;
    public static final int bearer_values=0x7f030029;
    /**
     * Summaries for Bluetooth Audio Codec Bits Per Sample selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_bits_per_sample_summaries=0x7f03002a;
    /**
     * Titles for Bluetooth Audio Codec Bits Per Sample selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_bits_per_sample_titles=0x7f03002b;
    /**
     * Values for Bluetooth Audio Codec Bits Per Sample selection preference.
     */
    public static final int bluetooth_a2dp_codec_bits_per_sample_values=0x7f03002c;
    /**
     * Summaries for Bluetooth Audio Codec Channel Mode selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_channel_mode_summaries=0x7f03002d;
    /**
     * Titles for Bluetooth Audio Codec Channel Mode selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_channel_mode_titles=0x7f03002e;
    /**
     * Values for Bluetooth Audio Codec Channel Mode selection preference.
     */
    public static final int bluetooth_a2dp_codec_channel_mode_values=0x7f03002f;
    /**
     * Summaries for Bluetooth Audio Codec LDAC Playback Quality selection preference. [CHAR LIMIT=70]
     */
    public static final int bluetooth_a2dp_codec_ldac_playback_quality_summaries=0x7f030030;
    /**
     * Titles for Bluetooth Audio Codec LDAC Playback Quality selection preference. [CHAR LIMIT=70]
     */
    public static final int bluetooth_a2dp_codec_ldac_playback_quality_titles=0x7f030031;
    /**
     * Values for Bluetooth Audio Codec LDAC Playback Quaility selection preference.
     */
    public static final int bluetooth_a2dp_codec_ldac_playback_quality_values=0x7f030032;
    /**
     * Summaries for Bluetooth Audio Codec Sample Rate selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_sample_rate_summaries=0x7f030033;
    /**
     * Titles for Bluetooth Audio Codec Sample Rate selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_sample_rate_titles=0x7f030034;
    /**
     * Values for Bluetooth Audio Codec Sample Rate selection preference.
     */
    public static final int bluetooth_a2dp_codec_sample_rate_values=0x7f030035;
    /**
     * Summaries for Bluetooth Audio Codec selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_summaries=0x7f030036;
    /**
     * Summaries for Bluetooth Audio Codec selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_summaries_cm=0x7f030037;
    /**
     * Titles for Bluetooth Audio Codec selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_titles=0x7f030038;
    /**
     * Titles for Bluetooth Audio Codec selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_titles_cm=0x7f030039;
    /**
     * Values for Bluetooth Audio Codec selection preference.
     */
    public static final int bluetooth_a2dp_codec_values=0x7f03003a;
    /**
     * Summaries for Android Auto Bluetooth Audio Active Device status. [CHAR LIMIT=50]
     */
    public static final int bluetooth_audio_active_device_summaries=0x7f03003b;
    /**
     * Values for Bluetooth AVRCP Versions
     */
    public static final int bluetooth_avrcp_version_values=0x7f03003c;
    /**
     * Titles for Bluetooth AVRCP Versions
     */
    public static final int bluetooth_avrcp_versions=0x7f03003d;
    /**
     * Values for Bluetooth MAP Versions
     */
    public static final int bluetooth_map_version_values=0x7f03003e;
    /**
     * Titles for Bluetooth MAP Versions
     */
    public static final int bluetooth_map_versions=0x7f03003f;
    /**
     * Bluetooth developer settings: Titles for maximum number of connected audio devices
     */
    public static final int bluetooth_max_connected_audio_devices=0x7f030040;
    /**
     * Bluetooth developer settings: Values for maximum number of connected audio devices
     */
    public static final int bluetooth_max_connected_audio_devices_values=0x7f030041;
    /**
     * Discoverable mode timeout options
     */
    public static final int bluetooth_visibility_timeout_entries=0x7f030042;
    /**
     * Titles for Bluetooth HCI Snoop Logging
     */
    public static final int bt_hci_snoop_log_entries=0x7f030043;
    /**
     * Values for Bluetooth HCI Snoop Logging
     */
    public static final int bt_hci_snoop_log_values=0x7f030044;
    /**
     * Bluetooth icon background colors
     */
    public static final int bt_icon_bg_colors=0x7f030045;
    /**
     * Bluetooth icon foreground colors
     */
    public static final int bt_icon_fg_colors=0x7f030046;
    public static final int bytes_picker_sizes=0x7f030047;
    /**
     * Cached apps freezer modes
     */
    public static final int cached_apps_freezer_entries=0x7f030048;
    /**
     * Values for cached apps freezer modes
     */
    public static final int cached_apps_freezer_values=0x7f030049;
    /**
     * Titles for captioning color preference.
     */
    public static final int captioning_color_selector_titles=0x7f03004a;
    /**
     * Values for captioning color preference.
     */
    public static final int captioning_color_selector_values=0x7f03004b;
    /**
     * Titles for captioning character edge type preference. [CHAR LIMIT=35]
     */
    public static final int captioning_edge_type_selector_titles=0x7f03004c;
    /**
     * Values for captioning character edge type preference.
     */
    public static final int captioning_edge_type_selector_values=0x7f03004d;
    /**
     * Summary for Captions settings, explaining important settings under it. [CHAR LIMIT=NONE]
     */
    public static final int captioning_font_size_selector_summaries=0x7f03004e;
    /**
     * Titles for captioning font size preference. [CHAR LIMIT=35]
     */
    public static final int captioning_font_size_selector_titles=0x7f03004f;
    /**
     * Values for captioning font size preference.
     */
    public static final int captioning_font_size_selector_values=0x7f030050;
    /**
     * Titles for captioning opacity preference. [CHAR LIMIT=35]
     */
    public static final int captioning_opacity_selector_titles=0x7f030051;
    /**
     * Values for captioning opacity preference.
     */
    public static final int captioning_opacity_selector_values=0x7f030052;
    /**
     * Titles for captioning text style preset preference. [CHAR LIMIT=35]
     */
    public static final int captioning_preset_selector_titles=0x7f030053;
    /**
     * Values for captioning text style preset preference.
     */
    public static final int captioning_preset_selector_values=0x7f030054;
    /**
     * Titles for captioning typeface preference. [CHAR LIMIT=35]
     */
    public static final int captioning_typeface_selector_titles=0x7f030055;
    /**
     * Values for captioning typeface preference.
     */
    public static final int captioning_typeface_selector_values=0x7f030056;
    /**
     * Choices for CDMA subscription
     */
    public static final int cdma_subscription_choices=0x7f030057;
    /**
     * Values for CDMA subscription
     */
    public static final int cdma_subscription_values=0x7f030058;
    public static final int cdma_system_select_choices=0x7f030059;
    public static final int cdma_system_select_values=0x7f03005a;
    /**
     * Description of each color mode for the display. [CHAR LIMIT=NONE]
     */
    public static final int color_mode_descriptions=0x7f03005b;
    /**
     * IDs for each color mode. The values must match the corresponding constants in
     * android.view.Display
     */
    public static final int color_mode_ids=0x7f03005c;
    /**
     * Name of each color mode for the display. [CHAR LIMIT=40]
     */
    public static final int color_mode_names=0x7f03005d;
    /**
     * Array of titles for sim color for multi-sim
     */
    public static final int color_picker=0x7f03005e;
    /**
     * Display settings screen, Color mode options. Must be the same length and order as
     * config_color_mode_options_values below. Only the values that also appear in
     * frameworks/base/core/res/res/values/config.xml's config_availableColorModes are shown.
     */
    public static final int config_color_mode_options_strings=0x7f03005f;
    /**
     * Display settings screen, Color mode options. Must be the same length and order as
     * config_color_mode_options_strings above. Only the values that also appear in
     * frameworks/base/core/res/res/values/config.xml's config_availableColorModes are shown.
     */
    public static final int config_color_mode_options_values=0x7f030060;
    public static final int config_ignored_backup_transports=0x7f030061;
    /**
     * List containing the order of services in audio and caption category by preference key
     * or componentname. All preference keys in a category need to be specified to guarantee
     * correct behavior.
     */
    public static final int config_order_audio_services=0x7f030062;
    /**
     * List containing the order of services in captions category by preference key or
     * componentname. All preference keys in a category need to be specified to guarantee correct
     * behavior.
     */
    public static final int config_order_captions_services=0x7f030063;
    /**
     * List containing the order of services in display category by preference key
     * or componentname. All preference keys in a category need to be specified to guarantee
     * correct behavior.
     */
    public static final int config_order_display_services=0x7f030064;
    /**
     * List containing the order of services in interaction control category by preference key
     * or componentname. All preference keys in a category need to be specified to guarantee
     * correct behavior.
     */
    public static final int config_order_interaction_control_services=0x7f030065;
    /**
     * List containing the order of services in screen reader category by componentname.
     * All componentnames in a category need to be specified to guarantee correct behavior.
     */
    public static final int config_order_screen_reader_services=0x7f030066;
    /**
     * Settings panel keeps observe this uri
     */
    public static final int config_panel_keep_observe_uri=0x7f030067;
    /**
     * List containing the component names of pre-installed audio and captioning services.
     */
    public static final int config_preinstalled_audio_services=0x7f030068;
    /**
     * List containing the component names of pre-installed captioning services.
     */
    public static final int config_preinstalled_captions_services=0x7f030069;
    /**
     * List containing the component names of pre-installed display services.
     */
    public static final int config_preinstalled_display_services=0x7f03006a;
    /**
     * List containing the component names of pre-installed interaction control services.
     */
    public static final int config_preinstalled_interaction_control_services=0x7f03006b;
    /**
     * List containing the component names of pre-installed screen reader services.
     */
    public static final int config_preinstalled_screen_reader_services=0x7f03006c;
    /**
     * List of a11y components on the device allowed to be enabled by Settings Slices
     */
    public static final int config_settings_slices_accessibility_components=0x7f03006d;
    /**
     * Reset application package name
     */
    public static final int config_skip_reset_apps_package_name=0x7f03006e;
    /**
     * List containing the injected tile keys which are suppressed.
     */
    public static final int config_suppress_injected_tile_keys=0x7f03006f;
    /**
     * Keys for color space adjustment modes for accessibility
     */
    public static final int daltonizer_mode_keys=0x7f030070;
    /**
     * Summary for color space adjustment modes for accessibility
     */
    public static final int daltonizer_mode_summaries=0x7f030071;
    /**
     * Values for display color space adjustment modes for accessibility
     */
    public static final int daltonizer_type_values=0x7f030072;
    /**
     * Titles for ui dark mode preference.
     */
    public static final int dark_ui_mode_entries=0x7f030073;
    /**
     * Values for ui dark mode preference.
     */
    public static final int dark_ui_mode_values=0x7f030074;
    /**
     * Dark theme scheduling preferences  [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_scheduler_preference_titles=0x7f030075;
    /**
     * Data Usage settings. Range of data usage.
     */
    public static final int data_usage_data_range=0x7f030076;
    /**
     * Titles for debug overdraw preference. [CHAR LIMIT=50]
     */
    public static final int debug_hw_overdraw_entries=0x7f030077;
    /**
     * Values for debug overdraw preference.
     */
    public static final int debug_hw_overdraw_values=0x7f030078;
    /**
     * Display settings.  The delay in inactivity before the dream is shown. These are shown in a list dialog.
     */
    public static final int dream_timeout_entries=0x7f030079;
    /**
     * Do not translate.
     */
    public static final int dream_timeout_values=0x7f03007a;
    /**
     * Type of EAP method when EAP SIM, AKA, AKA' are not supported
     */
    public static final int eap_method_without_sim_auth=0x7f03007b;
    /**
     * Type of OCSP
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     * no translation found for wifi_tether_security:3 (5512131148045414341)
     */
    public static final int eap_ocsp_type=0x7f03007c;
    /**
     * Titles for OpenGL traces preference. [CHAR LIMIT=35]
     */
    public static final int enable_opengl_traces_entries=0x7f03007d;
    /**
     * Values for OpenGL traces preference.
     */
    public static final int enable_opengl_traces_values=0x7f03007e;
    public static final int enabled_networks_4g_choices=0x7f03007f;
    public static final int enabled_networks_cdma_no_lte_values=0x7f030080;
    public static final int enabled_networks_cdma_only_lte_values=0x7f030081;
    public static final int enabled_networks_cdma_values=0x7f030082;
    public static final int enabled_networks_choices=0x7f030083;
    public static final int enabled_networks_except_gsm_lte_values=0x7f030084;
    public static final int enabled_networks_except_gsm_values=0x7f030085;
    public static final int enabled_networks_except_lte_values=0x7f030086;
    public static final int enabled_networks_tdscdma_values=0x7f030087;
    public static final int enabled_networks_values=0x7f030088;
    /**
     * Carrier variant of Enhaced 4G LTE Mode summary.  [CHAR LIMIT=NONE]
     */
    public static final int enhanced_4g_lte_mode_sumary_variant=0x7f030089;
    /**
     * Carrier variant of Enhaced 4G LTE Mode title.  [CHAR LIMIT=NONE]
     */
    public static final int enhanced_4g_lte_mode_title_variant=0x7f03008a;
    public static final int entries_font_size=0x7f03008b;
    public static final int entryvalues_font_size=0x7f03008c;
    public static final int gesture_prevent_ringing_entries=0x7f03008d;
    /**
     * Keep in sync with Settings.Secure.VOLUME_HUSH_*
     */
    public static final int gesture_prevent_ringing_values=0x7f03008e;
    /**
     * All the graphics driver preference values for all apps globally [CHAR LIMIT=50]
     */
    public static final int graphics_driver_all_apps_preference_values=0x7f03008f;
    /**
     * All the values of graphics driver for app preference [CHAR LIMIT=50]
     */
    public static final int graphics_driver_app_preference_values=0x7f030090;
    /**
     * Summaries for HDCP checking preference. [CHAR LIMIT=100]
     */
    public static final int hdcp_checking_summaries=0x7f030091;
    /**
     * Titles for HDCP checking preference. [CHAR LIMIT=35]
     */
    public static final int hdcp_checking_titles=0x7f030092;
    /**
     * Values for HDCP checking preference.
     */
    public static final int hdcp_checking_values=0x7f030093;
    public static final int input_method_selector_titles=0x7f030094;
    public static final int input_method_selector_values=0x7f030095;
    /**
     * Security settings.  The delay after screen is turned off until device locks.
     * These are shown in a list dialog.
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     * no translation found for dark_ui_scheduler_preference_titles:2 (8842756744447000897)
     */
    public static final int lock_after_timeout_entries=0x7f030096;
    /**
     * Do not translate.
     */
    public static final int lock_after_timeout_values=0x7f030097;
    /**
     * Titles for the list of long press timeout options in preference.
     */
    public static final int long_press_timeout_selector_list_titles=0x7f030098;
    /**
     * Titles for the list of long press timeout options.
     */
    public static final int long_press_timeout_selector_titles=0x7f030099;
    /**
     * Values for the list of long press timeout options.
     */
    public static final int long_press_timeout_selector_values=0x7f03009a;
    /**
     * Summary for magnification adjustment modes for accessibility
     */
    public static final int magnification_mode_summaries=0x7f03009b;
    /**
     * Values for magnification adjustment modes for accessibility
     */
    public static final int magnification_mode_values=0x7f03009c;
    /**
     * MVNO Info used in APN editor
     */
    public static final int mvno_type_entries=0x7f03009d;
    public static final int mvno_type_values=0x7f03009e;
    /**
     * Array of titles list for notification listener notification types. [DO NOT TRANSLATE]
     */
    public static final int notif_types_titles=0x7f03009f;
    /**
     * Values of list for notification listener notification types. Values need to match
     * android.service.notification.NotificationListenerService. [DO NOT TRANSLATE]
     */
    public static final int notif_types_values=0x7f0300a0;
    /**
     * Values of list for one-handed timeout options. [DO NOT TRANSLATE]
     */
    public static final int one_handed_timeout_values=0x7f0300a1;
    /**
     * Titles for overlay display devices preference. [CHAR LIMIT=35]
     */
    public static final int overlay_display_devices_entries=0x7f0300a2;
    /**
     * Values for overlay display devices preference.
     */
    public static final int overlay_display_devices_values=0x7f0300a3;
    /**
     * The preferred network modes in Mobile network settings
     */
    public static final int preferred_network_mode_choices=0x7f0300a4;
    /**
     * The preferred network modes RIL constants, in order of the modes above,
     * e.g. the choice "GSM/WCDMA preferred" has the corresponding value "0"
     */
    public static final int preferred_network_mode_values=0x7f0300a5;
    public static final int preferred_network_mode_values_world_mode=0x7f0300a6;
    /**
     * Process stats memory use details: labels for memory states
     */
    public static final int proc_stats_memory_states=0x7f0300a7;
    /**
     * Process stats memory use details: labels for process
     */
    public static final int proc_stats_process_states=0x7f0300a8;
    /**
     * [CHAR LIMIT=40] Labels for memory states
     */
    public static final int ram_states=0x7f0300a9;
    /**
     * String arrays for showing the rtt settings options
     */
    public static final int rtt_setting_mode=0x7f0300aa;
    /**
     * Display settings.  The delay in inactivity before the screen is turned off. These are shown in a list dialog.
     */
    public static final int screen_timeout_entries=0x7f0300ab;
    /**
     * Do not translate.
     */
    public static final int screen_timeout_values=0x7f0300ac;
    /**
     * Values for premium SMS permission selector [CHAR LIMIT=30]
     */
    public static final int security_settings_premium_sms_values=0x7f0300ad;
    /**
     * Titles for logd limit size lowram selection preference. [CHAR LIMIT=14]
     */
    public static final int select_logd_size_lowram_titles=0x7f0300ae;
    /**
     * Summaries for logd limit size selection preference. [CHAR LIMIT=50]
     */
    public static final int select_logd_size_summaries=0x7f0300af;
    /**
     * Titles for logd limit size selection preference. [CHAR LIMIT=14]
     */
    public static final int select_logd_size_titles=0x7f0300b0;
    /**
     * Values for logd limit size selection preference.
     */
    public static final int select_logd_size_values=0x7f0300b1;
    /**
     * Summaries for logpersist state selection preference. [CHAR LIMIT=50]
     */
    public static final int select_logpersist_summaries=0x7f0300b2;
    /**
     * Titles for logpersist state selection preference. [CHAR LIMIT=26]
     */
    public static final int select_logpersist_titles=0x7f0300b3;
    /**
     * Values for logpersist state selection preference.
     */
    public static final int select_logpersist_values=0x7f0300b4;
    /**
     * Values for palette list view preference.
     */
    public static final int setting_palette_colors=0x7f0300b5;
    /**
     * Array of titles palette list for accessibility.
     */
    public static final int setting_palette_data=0x7f0300b6;
    /**
     * Titles for non-rectangular clipping preference. [CHAR LIMIT=35]
     */
    public static final int show_non_rect_clip_entries=0x7f0300b7;
    /**
     * Values for non-rectangular clipping preference.
     */
    public static final int show_non_rect_clip_values=0x7f0300b8;
    /**
     * Array of color for sim color for multi-sim in light mode
     */
    public static final int sim_color_light=0x7f0300b9;
    /**
     * Display color space adjustment modes for developers
     */
    public static final int simulate_color_space_entries=0x7f0300ba;
    /**
     * Values for display color space adjustment modes for developers
     */
    public static final int simulate_color_space_values=0x7f0300bb;
    /**
     * List of packages that should be allowlisted for slice uri access. Do not translate
     */
    public static final int slice_allowlist_package_names=0x7f0300bc;
    /**
     * String arrays for notification swipe direction
     */
    public static final int swipe_direction_titles=0x7f0300bd;
    /**
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     * no translation found for swipe_direction_titles:1 (3175804938330683021)
     */
    public static final int swipe_direction_values=0x7f0300be;
    /**
     * The time zone picker screen has two levels.  The first level allows the user to choose a region.
     */
    public static final int timezone_filters=0x7f0300bf;
    /**
     * Titles for frame time tracking preference. [CHAR LIMIT=50]
     */
    public static final int track_frame_time_entries=0x7f0300c0;
    /**
     * Values for frame time tracking preference.
     */
    public static final int track_frame_time_values=0x7f0300c1;
    /**
     * Titles for transition animation scale preference. [CHAR LIMIT=35]
     */
    public static final int transition_animation_scale_entries=0x7f0300c2;
    /**
     * Values for transition animation scale preference.
     */
    public static final int transition_animation_scale_values=0x7f0300c3;
    /**
     * Do not translate.
     */
    public static final int tts_demo_string_langs=0x7f0300c4;
    /**
     * Do not translate.
     */
    public static final int tts_demo_strings=0x7f0300c5;
    /**
     * Default speech rate choices
     */
    public static final int tts_rate_entries=0x7f0300c6;
    /**
     * Do not translate.
     */
    public static final int tts_rate_values=0x7f0300c7;
    /**
     * Display options for UsageStats class
     */
    public static final int usage_stats_display_order_types=0x7f0300c8;
    /**
     * USB configuration names for Developer Settings.
     * This can be overridden by devices with additional USB configurations.
     */
    public static final int usb_configuration_titles=0x7f0300c9;
    /**
     * USB configuration values for Developer Settings.
     * These are lists of USB functions passed to the USB Manager to change USB configuraton.
     * This can be overridden by devices with additional USB configurations.
     * Do not translate.
     */
    public static final int usb_configuration_values=0x7f0300ca;
    /**
     * User content ratings for restricted users [CHAR LIMIT=30]
     */
    public static final int user_content_ratings_entries=0x7f0300cb;
    /**
     * Values for user content ratings for restricted users
     */
    public static final int user_content_ratings_values=0x7f0300cc;
    /**
     * VPN proxy settings.
     */
    public static final int vpn_proxy_settings=0x7f0300cd;
    /**
     * Status for a VPN network. [CHAR LIMIT=100]
     */
    public static final int vpn_states=0x7f0300ce;
    /**
     * Short names for each VPN type, not really translatable. [CHAR LIMIT=20]
     */
    public static final int vpn_types=0x7f0300cf;
    /**
     * Longer descriptions for each VPN type. [CHAR LIMIT=100]
     */
    public static final int vpn_types_long=0x7f0300d0;
    public static final int when_to_start_screensaver_entries=0x7f0300d1;
    public static final int when_to_start_screensaver_values=0x7f0300d2;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_ap_band=0x7f0300d3;
    public static final int wifi_ap_band_config_2G_only=0x7f0300d4;
    public static final int wifi_ap_band_summary=0x7f0300d5;
    public static final int wifi_calling_mode_choices=0x7f0300d6;
    public static final int wifi_calling_mode_choices_v2=0x7f0300d7;
    public static final int wifi_calling_mode_choices_v2_without_wifi_only=0x7f0300d8;
    public static final int wifi_calling_mode_choices_without_wifi_only=0x7f0300d9;
    /**
     * WiFi calling mode array
     */
    public static final int wifi_calling_mode_summaries=0x7f0300da;
    /**
     * WiFi calling mode array without wifi only mode
     */
    public static final int wifi_calling_mode_summaries_without_wifi_only=0x7f0300db;
    public static final int wifi_calling_mode_values=0x7f0300dc;
    public static final int wifi_calling_mode_values_without_wifi_only=0x7f0300dd;
    /**
     * EAP method
     */
    public static final int wifi_eap_entries=0x7f0300de;
    /**
     * Wi-Fi settings.  The type of EAP method a Wi-Fi network has.
     */
    public static final int wifi_eap_method=0x7f0300df;
    /**
     * Note that this array length should be same as the wifi_eap_method_tts_strings
     */
    public static final int wifi_eap_method_target_strings=0x7f0300e0;
    /**
     * Note that this array length should be same as the wifi_eap_method_target_strings
     */
    public static final int wifi_eap_method_tts_strings=0x7f0300e1;
    public static final int wifi_hidden_entries=0x7f0300e2;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_ip_settings=0x7f0300e3;
    public static final int wifi_metered_entries=0x7f0300e4;
    public static final int wifi_metered_values=0x7f0300e5;
    /**
     * Wi-Fi p2p settings device status message
     */
    public static final int wifi_p2p_status=0x7f0300e6;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_p2p_wps_setup=0x7f0300e7;
    /**
     * Phase 2 options for PEAP
     */
    public static final int wifi_peap_phase2_entries=0x7f0300e8;
    /**
     * Type of EAP method when EAP SIM, AKA, AKA' are supported
     */
    public static final int wifi_peap_phase2_entries_with_sim_auth=0x7f0300e9;
    public static final int wifi_privacy_entries=0x7f0300ea;
    public static final int wifi_privacy_values=0x7f0300eb;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_proxy_settings=0x7f0300ec;
    /**
     * Wi-Fi settings. The signal strength a Wi-Fi network has.
     */
    public static final int wifi_signal=0x7f0300ed;
    /**
     * Wi-Fi settings. The status messages when the network is unknown.
     */
    public static final int wifi_status=0x7f0300ee;
    /**
     * Wi-Fi settings. The status messages when the network is known.
     */
    public static final int wifi_status_with_ssid=0x7f0300ef;
    /**
     * Security types for wireless tether
     */
    public static final int wifi_tether_security=0x7f0300f0;
    /**
     * Values for security type for wireless tether
     */
    public static final int wifi_tether_security_values=0x7f0300f1;
    /**
     * Phase 2 options for TTLS
     */
    public static final int wifi_ttls_phase2_entries=0x7f0300f2;
    /**
     * Wi-Fi settings. The status messages when the network is unknown.
     */
    public static final int wifitrackerlib_wifi_status=0x7f0300f3;
    /**
     * Titles for window animation scale preference. [CHAR LIMIT=35]
     */
    public static final int window_animation_scale_entries=0x7f0300f4;
    /**
     * Values for window animation scale preference.
     */
    public static final int window_animation_scale_values=0x7f0300f5;
    public static final int zen_mode_contacts_calls_entries=0x7f0300f6;
    public static final int zen_mode_contacts_messages_entries=0x7f0300f7;
    public static final int zen_mode_contacts_values=0x7f0300f8;
    public static final int zen_mode_conversations_entries=0x7f0300f9;
    /**
     * these values correspond with ZenPolicy.ConversationSenders
     */
    public static final int zen_mode_conversations_values=0x7f0300fa;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Height to use for action divider in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int actionDividerHeight=0x7f04000c;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000d;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000e;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000f;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f040010;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040011;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040012;
    /**
     * Content description to use for the close action mode button
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionModeCloseContentDescription=0x7f040013;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040014;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040015;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040016;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040017;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040018;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040019;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f04001a;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f04001b;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001d;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeTheme=0x7f04001e;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f040020;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f040021;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f040022;
    /**
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int actionTextColorAlpha=0x7f040023;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040024;
    /**
     * Action used for activity launch. May be empty. Must not contain wildcards.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int activityAction=0x7f040025;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040026;
    /**
     * Component name of the primary activity in the split. Must be non-empty. Can contain a
     * single wildcard at the end.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int activityName=0x7f040027;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f040028;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040029;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f04002a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f04002b;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f04002c;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f04002d;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f04002e;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f04002f;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f040030;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f040031;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f040032;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int altSrc=0x7f040033;
    /**
     * Whether the activity should always be expanded on launch.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alwaysExpand=0x7f040034;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int animate_relativeTo=0x7f040035;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int animation=0x7f040036;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int animationDuration=0x7f040037;
    /**
     * Sets the enter and exit animations for a Snackbar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     */
    public static final int animationMode=0x7f040038;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int apnPreferenceStyle=0x7f040039;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int appBarLayoutStyle=0x7f04003a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int applyMotionScene=0x7f04003b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>2</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>1</td><td></td></tr>
     * <tr><td>startVertical</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int arcMode=0x7f04003c;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f04003d;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f04003e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int aspectRatio=0x7f04003f;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>high</td><td>0</td><td></td></tr>
     * <tr><td>low</td><td>2</td><td></td></tr>
     * <tr><td>medium</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int attentionLevel=0x7f040040;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int attributeName=0x7f040041;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f040042;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040043;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040044;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040045;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040046;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040047;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>animateToEnd</td><td>4</td><td></td></tr>
     * <tr><td>animateToStart</td><td>3</td><td></td></tr>
     * <tr><td>jumpToEnd</td><td>2</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int autoTransition=0x7f040048;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040049;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundColor=0x7f04004a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetBottom=0x7f04004b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetEnd=0x7f04004c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetStart=0x7f04004d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int backgroundInsetTop=0x7f04004e;
    /**
     * Alpha level for the color that is overlaid on top of the background color. Ignored if
     * backgroundTint is set.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int backgroundOverlayColorAlpha=0x7f04004f;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f040050;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f040051;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f040052;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f040053;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     */
    public static final int badgeGravity=0x7f040054;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int badgeStyle=0x7f040055;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int badgeTextColor=0x7f040056;
    /**
     * The color of bar view
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int barColor=0x7f040057;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f040058;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int barrierAllowsGoneWidgets=0x7f040059;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int barrierDirection=0x7f04005a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barrierMargin=0x7f04005b;
    /**
     * Whether the FAB should automatically hide when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoHide=0x7f04005c;
    /**
     * Whether the extended FAB should automatically shrink when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoShrink=0x7f04005d;
    /**
     * Whether this bottom sheet is draggable. If not, the app will have to supply different
     * means to expand and collapse the sheet
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_draggable=0x7f04005e;
    /**
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_expandedOffset=0x7f04005f;
    /**
     * Whether height of expanded sheet wraps content or not
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_fitToContents=0x7f040060;
    /**
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int behavior_halfExpandedRatio=0x7f040061;
    /**
     * Whether this bottom sheet can be hidden by dragging it further downwards
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_hideable=0x7f040062;
    /**
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_overlapTop=0x7f040063;
    /**
     * The height of the bottom sheet when it is collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     */
    public static final int behavior_peekHeight=0x7f040064;
    /**
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     */
    public static final int behavior_saveFlags=0x7f040065;
    /**
     * Skip the collapsed state once expanded; no effect unless it is hideable
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_skipCollapsed=0x7f040066;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderDrawable=0x7f040067;
    /**
     * The width of the border around the FAB.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f040068;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f040069;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomAppBarStyle=0x7f04006a;
    /**
     * Padding to the end edge of the bottom divider in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bottomDividerEndPadding=0x7f04006b;
    /**
     * Padding to the start edge of the bottom divider in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bottomDividerStartPadding=0x7f04006c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomLabels=0x7f04006d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomNavigationStyle=0x7f04006e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetDialogTheme=0x7f04006f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetStyle=0x7f040070;
    /**
     * The color to use for the box's background color when in filled box mode.
     * If a non-stateful color resource is specified, default colors will be used for the hover
     * and disabled states.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxBackgroundColor=0x7f040071;
    /**
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     */
    public static final int boxBackgroundMode=0x7f040072;
    /**
     * Value to use for the EditText's collapsed top padding in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCollapsedPaddingTop=0x7f040073;
    /**
     * The value to use for the box's bottom end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomEnd=0x7f040074;
    /**
     * The value to use for the box's bottom start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomStart=0x7f040075;
    /**
     * The value to use for the box's top end corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopEnd=0x7f040076;
    /**
     * The value to use for the box's top start corner radius when in box mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopStart=0x7f040077;
    /**
     * The color to use for the box's stroke when in outline box mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeColor=0x7f040078;
    /**
     * The color to use for the box's stroke in outline box mode when an error
     * is being displayed. If not set, it defaults to errorTextColor if on
     * error state, or to counterOverflowTextColor if on overflow state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeErrorColor=0x7f040079;
    /**
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidth=0x7f04007a;
    /**
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidthFocused=0x7f04007b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int brightness=0x7f04007c;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f04007d;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f04007e;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f04007f;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040080;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040081;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonCompat=0x7f040082;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f040083;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f040084;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f040085;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f040086;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f040087;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f040088;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f040089;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f04008a;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f04008b;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f04008c;
    /**
     * Foreground color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardForegroundColor=0x7f04008d;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f04008e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardPreferenceStyle=0x7f04008f;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f040090;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f040091;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardViewStyle=0x7f040092;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chainUseRtl=0x7f040093;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f040094;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f040095;
    /**
     * The id of the child button that should be checked by default within this button group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedButton=0x7f040096;
    /**
     * The id of the child chip that should be checked by default within this chip group.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedChip=0x7f040097;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedIcon=0x7f040098;
    /**
     * Deprecated. Use checkedIconVisible instead
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconEnabled=0x7f040099;
    /**
     * Check icon margin for Checkable Cards
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int checkedIconMargin=0x7f04009a;
    /**
     * Check icon size for Checkable Cards
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int checkedIconSize=0x7f04009b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int checkedIconTint=0x7f04009c;
    /**
     * Whether to show the checked icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconVisible=0x7f04009d;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f04009e;
    /**
     * Background color to apply to the chip.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipBackgroundColor=0x7f04009f;
    /**
     * Corner radius to apply to the chip's shape.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipCornerRadius=0x7f0400a0;
    /**
     * Padding at the end of the chip, after the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipEndPadding=0x7f0400a1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipGroupStyle=0x7f0400a2;
    /**
     * Icon drawable to display at the start of the chip.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipIcon=0x7f0400a3;
    /**
     * Deprecated. Use chipIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconEnabled=0x7f0400a4;
    /**
     * Size of the chip's icon and checked icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipIconSize=0x7f0400a5;
    /**
     * Tint to apply to the chip icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipIconTint=0x7f0400a6;
    /**
     * Whether to show the chip icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconVisible=0x7f0400a7;
    /**
     * Min height to apply to the chip. Total height includes stroke width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinHeight=0x7f0400a8;
    /**
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinTouchTargetSize=0x7f0400a9;
    /**
     * Horizontal and vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacing=0x7f0400aa;
    /**
     * Horizontal spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingHorizontal=0x7f0400ab;
    /**
     * Vertical spacing between chips in this group.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingVertical=0x7f0400ac;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStandaloneStyle=0x7f0400ad;
    /**
     * Padding at the start of the chip, before the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStartPadding=0x7f0400ae;
    /**
     * Stroke color to apply to the chip's outline.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipStrokeColor=0x7f0400af;
    /**
     * Stroke width to apply to the chip's outline.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStrokeWidth=0x7f0400b0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStyle=0x7f0400b1;
    /**
     * Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipSurfaceColor=0x7f0400b2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int circleRadius=0x7f0400b3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int circularProgressIndicatorStyle=0x7f0400b4;
    /**
     * If there is an existing split with the same primary container, indicates whether the
     * existing secondary container on top and all activities in it should be destroyed when a new
     * split is created using this rule. Otherwise the new secondary will appear on top. Defaults
     * to "false".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int clearTop=0x7f0400b5;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>jumpToEnd</td><td>100</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1000</td><td></td></tr>
     * <tr><td>toggle</td><td>11</td><td></td></tr>
     * <tr><td>transitionToEnd</td><td>1</td><td></td></tr>
     * <tr><td>transitionToStart</td><td>10</td><td></td></tr>
     * </table>
     */
    public static final int clickAction=0x7f0400b6;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int clockFaceBackgroundColor=0x7f0400b7;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int clockHandColor=0x7f0400b8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int clockIcon=0x7f0400b9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int clockNumberTextColor=0x7f0400ba;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f0400bb;
    /**
     * Deprecated. Use closeIconVisible instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconEnabled=0x7f0400bc;
    /**
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconEndPadding=0x7f0400bd;
    /**
     * Size of the chip's close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconSize=0x7f0400be;
    /**
     * Padding at the start of the close icon, after the text. If close icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconStartPadding=0x7f0400bf;
    /**
     * Tint to apply to the chip's close icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int closeIconTint=0x7f0400c0;
    /**
     * Whether to show the close icon.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconVisible=0x7f0400c1;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f0400c2;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f0400c3;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f0400c4;
    /**
     * FAB size when collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int collapsedSize=0x7f0400c5;
    /**
     * Specifies how the title should be positioned when collapsed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int collapsedTitleGravity=0x7f0400c6;
    /**
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsedTitleTextAppearance=0x7f0400c7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsingToolbarLayoutStyle=0x7f0400c8;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f0400c9;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f0400ca;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f0400cb;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f0400cc;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f0400cd;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f0400ce;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f0400cf;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f0400d0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int colorOnBackground=0x7f0400d1;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnError=0x7f0400d2;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnPrimary=0x7f0400d3;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnPrimarySurface=0x7f0400d4;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnSecondary=0x7f0400d5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorOnSurface=0x7f0400d6;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f0400d7;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f0400d8;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimarySurface=0x7f0400d9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryVariant=0x7f0400da;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondary=0x7f0400db;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondaryVariant=0x7f0400dc;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSurface=0x7f0400dd;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f0400de;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f0400df;
    /**
     * Confirm device credentials screen
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int confirmDeviceCredentialsSideMargin=0x7f0400e0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int confirmDeviceCredentialsTopMargin=0x7f0400e1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSet=0x7f0400e2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSetEnd=0x7f0400e3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraintSetStart=0x7f0400e4;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int constraint_referenced_ids=0x7f0400e5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int constraints=0x7f0400e6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int content=0x7f0400e7;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f0400e8;
    /**
     * Padding to the end edge of the content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentEndPadding=0x7f0400e9;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f0400ea;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f0400eb;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f0400ec;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f0400ed;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f0400ee;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f0400ef;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f0400f0;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f0400f1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingEnd=0x7f0400f2;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f0400f3;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f0400f4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingStart=0x7f0400f5;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f0400f6;
    /**
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int contentScrim=0x7f0400f7;
    /**
     * Padding to the start edge of the content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentStartPadding=0x7f0400f8;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int contrast=0x7f0400f9;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f0400fa;
    /**
     * Classname of a PreferenceController corresponding to the preference
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int controller=0x7f0400fb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f0400fc;
    /**
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamily=0x7f0400fd;
    /**
     * Bottom left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyBottomLeft=0x7f0400fe;
    /**
     * Bottom right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyBottomRight=0x7f0400ff;
    /**
     * Top left corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyTopLeft=0x7f040100;
    /**
     * Top right corner family to be used in the ShapeAppearance.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cornerFamilyTopRight=0x7f040101;
    /**
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f040102;
    /**
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSize=0x7f040103;
    /**
     * Bottom left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeBottomLeft=0x7f040104;
    /**
     * Bottom right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeBottomRight=0x7f040105;
    /**
     * Top left corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeTopLeft=0x7f040106;
    /**
     * Top right corner size to be used in the ShapeAppearance.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int cornerSizeTopRight=0x7f040107;
    /**
     * Whether the layout is laid out as if the character counter will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int counterEnabled=0x7f040108;
    /**
     * The max length to display in the character counter.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int counterMaxLength=0x7f040109;
    /**
     * TextAppearance of the character counter when the text is longer than the max.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextAppearance=0x7f04010a;
    /**
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextColor=0x7f04010b;
    /**
     * TextAppearance of the character counter.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextAppearance=0x7f04010c;
    /**
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextColor=0x7f04010d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int crossfade=0x7f04010e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int currentPageIndicatorColor=0x7f04010f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int currentState=0x7f040110;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int curveFit=0x7f040111;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int customBoolean=0x7f040112;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int customColorDrawableValue=0x7f040113;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int customColorValue=0x7f040114;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int customDimension=0x7f040115;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int customFloatValue=0x7f040116;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int customIntegerValue=0x7f040117;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f040118;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int customPixelDimension=0x7f040119;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int customStringValue=0x7f04011a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayInvalidStyle=0x7f04011b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int daySelectedStyle=0x7f04011c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayStyle=0x7f04011d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dayTodayStyle=0x7f04011e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int defaultDuration=0x7f04011f;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f040120;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int defaultState=0x7f040121;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f040122;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int deltaPolarAngle=0x7f040123;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int deltaPolarRadius=0x7f040124;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f040125;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int deriveConstraintsFrom=0x7f040126;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int description=0x7f040127;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f040128;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f040129;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f04012a;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f04012b;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f04012c;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f04012d;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f04012e;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f04012f;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f040130;
    /**
     * Control whether RecyclerView item animator is disable or not, true for disable
     * otherwise enable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableRecyclerViewItemAnimator=0x7f040131;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int disabledIconAlpha=0x7f040132;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f040133;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f040134;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f040135;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f040136;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f040137;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dotDiameter=0x7f040138;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dotGap=0x7f040139;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dragDown</td><td>1</td><td></td></tr>
     * <tr><td>dragEnd</td><td>5</td><td></td></tr>
     * <tr><td>dragLeft</td><td>2</td><td></td></tr>
     * <tr><td>dragRight</td><td>3</td><td></td></tr>
     * <tr><td>dragStart</td><td>4</td><td></td></tr>
     * <tr><td>dragUp</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int dragDirection=0x7f04013a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int dragScale=0x7f04013b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     */
    public static final int drawPath=0x7f04013c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableBottomCompat=0x7f04013d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableEndCompat=0x7f04013e;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableLeftCompat=0x7f04013f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableRightCompat=0x7f040140;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f040141;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableStartCompat=0x7f040142;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int drawableTint=0x7f040143;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int drawableTintMode=0x7f040144;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableTopCompat=0x7f040145;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f040146;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerLayoutStyle=0x7f040147;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f040148;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f040149;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f04014a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int duration=0x7f04014b;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f04014c;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f04014d;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f04014e;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f04014f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f040150;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int elevationOverlayColor=0x7f040151;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int elevationOverlayEnabled=0x7f040152;
    /**
     * Background color
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int emptyColor=0x7f040153;
    /**
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enableCopying=0x7f040154;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enableEdgeToEdge=0x7f040155;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f040156;
    /**
     * Whether the end icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int endIconCheckable=0x7f040157;
    /**
     * Text to set as the content description for the end icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int endIconContentDescription=0x7f040158;
    /**
     * Drawable to use for the end icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int endIconDrawable=0x7f040159;
    /**
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     */
    public static final int endIconMode=0x7f04015a;
    /**
     * Tint color to use for the end icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int endIconTint=0x7f04015b;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int endIconTintMode=0x7f04015c;
    /**
     * Padding to the end edge of the collection of items shown at the end of the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int endItemEndPadding=0x7f04015d;
    /**
     * Padding to the start edge of the collection of items shown at the end of the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int endItemStartPadding=0x7f04015e;
    /**
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceMaterialTheme=0x7f04015f;
    /**
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceTextAppearance=0x7f040160;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int ensureMinTouchTargetSize=0x7f040161;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f040162;
    /**
     * Summaries of entry
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entrySummaries=0x7f040163;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f040164;
    /**
     * Text to set as the content description for the error view.
     * Should be set when the error message has special characters that a
     * screen reader is not able to announce properly.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int errorContentDescription=0x7f040165;
    /**
     * Whether the layout is laid out as if an error will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int errorEnabled=0x7f040166;
    /**
     * End icon to be shown when an error is displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorIconDrawable=0x7f040167;
    /**
     * Tint color to use for the error icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorIconTint=0x7f040168;
    /**
     * Blending mode used to apply the error icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int errorIconTintMode=0x7f040169;
    /**
     * TextAppearance of any error message displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorTextAppearance=0x7f04016a;
    /**
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int errorTextColor=0x7f04016b;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f04016c;
    /**
     * Removes the height restriction of slices in MODE_LARGE. If the slice
     * is smaller than the available height, wrap_content decides whether the slice takes
     * up the entire height or only the required height. If the slice is bigger than
     * the available height, the height mode decides whether the slice fills the height
     * (height mode AT_MOST/EXACTLY), or expands to fit all items (height mode UNSPECIFIED).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expandToAvailableHeight=0x7f04016d;
    /**
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expanded=0x7f04016e;
    /**
     * Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expandedHintEnabled=0x7f04016f;
    /**
     * Specifies how the title should be positioned when expanded.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int expandedTitleGravity=0x7f040170;
    /**
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMargin=0x7f040171;
    /**
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginBottom=0x7f040172;
    /**
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginEnd=0x7f040173;
    /**
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginStart=0x7f040174;
    /**
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginTop=0x7f040175;
    /**
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandedTitleTextAppearance=0x7f040176;
    /**
     * Motion spec for extend animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int extendMotionSpec=0x7f040177;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int extendedFloatingActionButtonStyle=0x7f040178;
    /**
     * This drawable is a state list where the "checked" state
     * indicates active media routing.  Checkable indicates connecting
     * and non-checked / non-checkable indicates
     * that media is playing to the local device only.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int externalRouteEnabledDrawable=0x7f040179;
    /**
     * This drawable is a static version of the above animation drawable.
     * In order to speed up the inflation, the static drawable is loaded first
     * and the animation drawable will be loaded lazily in a worker thread
     * when the user taps the button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int externalRouteEnabledDrawableStatic=0x7f04017a;
    /**
     * Whether extra height should be added when the title text spans across
     * multiple lines. Experimental Feature.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int extraMultilineHeightEnabled=0x7f04017b;
    /**
     * The alignment of the fab relative to the BottomAppBar.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     */
    public static final int fabAlignmentMode=0x7f04017c;
    /**
     * The animation mode that should be used when the fab animates between alignment modes.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     */
    public static final int fabAnimationMode=0x7f04017d;
    /**
     * The margin between the semi-circular cradle for the fab and the fab.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleMargin=0x7f04017e;
    /**
     * The radius of the rounded corners on each side of the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleRoundedCornerRadius=0x7f04017f;
    /**
     * The vertical offset between the fab from the cradle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleVerticalOffset=0x7f040180;
    /**
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCustomSize=0x7f040181;
    /**
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     */
    public static final int fabSize=0x7f040182;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int face_layout_theme=0x7f040183;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f040184;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f040185;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f040186;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f040187;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f040188;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fingerprint_layout_theme=0x7f040189;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int finishPrimaryWithSecondary=0x7f04018a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int finishSecondaryWithPrimary=0x7f04018b;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f04018c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int floatingActionButtonStyle=0x7f04018d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_firstHorizontalBias=0x7f04018e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_firstHorizontalStyle=0x7f04018f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_firstVerticalBias=0x7f040190;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_firstVerticalStyle=0x7f040191;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int flow_horizontalAlign=0x7f040192;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_horizontalBias=0x7f040193;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int flow_horizontalGap=0x7f040194;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_horizontalStyle=0x7f040195;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_lastHorizontalBias=0x7f040196;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_lastHorizontalStyle=0x7f040197;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_lastVerticalBias=0x7f040198;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_lastVerticalStyle=0x7f040199;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int flow_maxElementsWrap=0x7f04019a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int flow_padding=0x7f04019b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int flow_verticalAlign=0x7f04019c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int flow_verticalBias=0x7f04019d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int flow_verticalGap=0x7f04019e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int flow_verticalStyle=0x7f04019f;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int flow_wrapMode=0x7f0401a0;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int followAxis=0x7f0401a1;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0401a2;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0401a3;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0401a4;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0401a5;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0401a6;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0401a7;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0401a8;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0401a9;
    /**
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderSystemFontFamily=0x7f0401aa;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f0401ab;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f0401ac;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f0401ad;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int footerPreferenceStyle=0x7f0401ae;
    /**
     * Whether or not the preference is for work profile, by default it's false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int forWork=0x7f0401af;
    /**
     * Whether the system window inset top should be applied regardless of
     * what the layout_height is set to. Experimental Feature.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int forceApplySystemWindowInsetTop=0x7f0401b0;
    /**
     * Do not expose publicly, used by ForegroundLinearLayout but never set by any style.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int foregroundInsidePadding=0x7f0401b1;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f0401b2;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int framePosition=0x7f0401b3;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f0401b4;
    /**
     * Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above. Value is false (insets respected) by default.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int gestureInsetBottomIgnored=0x7f0401b5;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f0401b6;
    /**
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the bottom of the grid row in
     * this situation.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridBottomPadding=0x7f0401b7;
    /**
     * Text size to use for the subtitle text in a grid row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridSubtitleSize=0x7f0401b8;
    /**
     * Vertical padding to use between title text and subtitle text in a grid cell.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridTextVerticalPadding=0x7f0401b9;
    /**
     * Text size to use for title text in a grid row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridTitleSize=0x7f0401ba;
    /**
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the top of the grid row in
     * this situation.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gridTopPadding=0x7f0401bb;
    /**
     * The color of the slider's halo.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int haloColor=0x7f0401bc;
    /**
     * The radius of the halo.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int haloRadius=0x7f0401bd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerLayout=0x7f0401be;
    /**
     * Text size to use for subtitle text in the header of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int headerSubtitleSize=0x7f0401bf;
    /**
     * Vertical padding to use between header title text and header subtitle text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int headerTextVerticalPadding=0x7f0401c0;
    /**
     * Text size to use for title text in the header of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int headerTitleSize=0x7f0401c1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f0401c2;
    /**
     * The text to display as helper text underneath the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int helperText=0x7f0401c3;
    /**
     * Whether the layout's helper text functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int helperTextEnabled=0x7f0401c4;
    /**
     * TextAppearance of the helper text displayed underneath the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int helperTextTextAppearance=0x7f0401c5;
    /**
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int helperTextTextColor=0x7f0401c6;
    /**
     * The animation behavior to hide the indicator and track.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Collapses from the top edge to the bottom edge for the linear type;
     * collapses from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; disappears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Collapses from the bottom edge to the top edge for the linear type;
     * collapses from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     */
    public static final int hideAnimationBehavior=0x7f0401c7;
    /**
     * Hide the slice's header row unless the slice only has a single row. Note that if
     * the slice doesn't have an explicit header row, the first row is considered the header row.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideHeaderRow=0x7f0401c8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hideMotionSpec=0x7f0401c9;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f0401ca;
    /**
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnScroll=0x7f0401cb;
    /**
     * Identifier for highlighting the menu preference on 2-pane
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int highlightableMenuKey=0x7f0401cc;
    /**
     * Whether to animate hint state changes.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintAnimationEnabled=0x7f0401cd;
    /**
     * Whether the layout's floating label functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintEnabled=0x7f0401ce;
    /**
     * TextAppearance of the hint in the collapsed floating label.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hintTextAppearance=0x7f0401cf;
    /**
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int hintTextColor=0x7f0401d0;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f0401d1;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0401d2;
    /**
     * Offset moves the badge towards the center of its anchor.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int horizontalOffset=0x7f0401d3;
    /**
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int hoveredFocusedTranslationZ=0x7f0401d4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ic_menu_moreoverflow=0x7f0401d5;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0401d6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconBackgroundColor=0x7f0401d7;
    /**
     * Padding at the end of the icon, before the text. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconEndPadding=0x7f0401d8;
    /**
     * Specifies how the icon should be positioned on the X axis.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textTop</td><td>20</td><td>Push the icon to the top of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>top</td><td>10</td><td>Push the icon to the top of the button.</td></tr>
     * </table>
     */
    public static final int iconGravity=0x7f0401d9;
    /**
     * Padding between icon and button text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconPadding=0x7f0401da;
    /**
     * Specifies the width and height to use for the icon drawable.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconSize=0x7f0401db;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f0401dc;
    /**
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconStartPadding=0x7f0401dd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconText=0x7f0401de;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTextColor=0x7f0401df;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0401e0;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0401e1;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0401e2;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0401e3;
    /**
     * The corner radius to be applied to each corner of large images.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int imageCornerRadius=0x7f0401e4;
    /**
     * Size of small images in a slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int imageSize=0x7f0401e5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int incoming=0x7f0401e6;
    /**
     * The animation style of the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>contiguous</td><td>0</td><td>The track will be filled with three adjacent segments in iterative different colors.
     * This type is only available when there are three or more indicator
     * colors.</td></tr>
     * <tr><td>disjoint</td><td>1</td><td>There will be two disjoint segments in the same color per cycle. The color iterates between cycles.</td></tr>
     * </table>
     */
    public static final int indeterminateAnimationType=0x7f0401e7;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0401e8;
    /**
     * The indicator color (or colors in an array). By default, it uses theme
     * primary color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int indicatorColor=0x7f0401e9;
    /**
     * The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clockwise</td><td>0</td><td>In the indeterminate mode, the spinner will spin clockwise; in the
     * determinate mode, the indicator will progress from the top (12 o'clock)
     * clockwise.</td></tr>
     * <tr><td>counterclockwise</td><td>1</td><td>In the indeterminate mode, the spinner will spin counter-clockwise; in
     * the determinate mode, the indicator will progress from the top (12
     * o'clock) counter-clockwise.</td></tr>
     * </table>
     */
    public static final int indicatorDirectionCircular=0x7f0401ea;
    /**
     * The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>endToStart</td><td>3</td><td>Animated from the end position to the start position of the track.
     * This will be same as the rightToLeft for API before 17.</td></tr>
     * <tr><td>leftToRight</td><td>0</td><td>Animated from the left end to the right end of the track.</td></tr>
     * <tr><td>rightToLeft</td><td>1</td><td>Animated from the right end to the left end of the track.</td></tr>
     * <tr><td>startToEnd</td><td>2</td><td>Animated from the start position to the end position of the track.
     * This will be same as the leftToRight for API before 17.</td></tr>
     * </table>
     */
    public static final int indicatorDirectionLinear=0x7f0401eb;
    /**
     * The extra space from the outer edge of the indicator to the edge of the
     * canvas. Ignored for linear progress indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int indicatorInset=0x7f0401ec;
    /**
     * Defines the size (outer diameter) of the circular progress indicator. This
     * uses the central line of the indicator as reference. Ignored for linear
     * progress indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int indicatorSize=0x7f0401ed;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0401ee;
    /**
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int initialExpandedChildrenCount=0x7f0401ef;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int insetForeground=0x7f0401f0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0401f1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isMaterialTheme=0x7f0401f2;
    /**
     * Whether the Preference is visible. By default, this is set to true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isPreferenceVisible=0x7f0401f3;
    /**
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemBackground=0x7f0401f4;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemFillColor=0x7f0401f5;
    /**
     * Horizontal padding (left and right) of navigation items, around the icon & text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemHorizontalPadding=0x7f0401f6;
    /**
     * Whether the items translate horizontally when in "selected" label visibility mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int itemHorizontalTranslationEnabled=0x7f0401f7;
    /**
     * Padding between the icon and the text for navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconPadding=0x7f0401f8;
    /**
     * The size of the icon navigation items that display an icon
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconSize=0x7f0401f9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemIconTint=0x7f0401fa;
    /**
     * Makes the TextView of the item text be at most this many lines tall.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int itemMaxLines=0x7f0401fb;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0401fc;
    /**
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemRippleColor=0x7f0401fd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemShapeAppearance=0x7f0401fe;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemShapeAppearanceOverlay=0x7f0401ff;
    /**
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemShapeFillColor=0x7f040200;
    /**
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetBottom=0x7f040201;
    /**
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetEnd=0x7f040202;
    /**
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetStart=0x7f040203;
    /**
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemShapeInsetTop=0x7f040204;
    /**
     * Horizontal spacing between two items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemSpacing=0x7f040205;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemStrokeColor=0x7f040206;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemStrokeWidth=0x7f040207;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearance=0x7f040208;
    /**
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceActive=0x7f040209;
    /**
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceInactive=0x7f04020a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemTextColor=0x7f04020b;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f04020c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>deltaRelative</td><td>0</td><td></td></tr>
     * <tr><td>parentRelative</td><td>2</td><td></td></tr>
     * <tr><td>pathRelative</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int keyPositionType=0x7f04020d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keyboardIcon=0x7f04020e;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f04020f;
    /**
     * Synonyms for search results
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keywords=0x7f040210;
    /**
     * Determines if Slider should increase its default height to include space for the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>floating</td><td>0</td><td>Mode that draws the label floating above the bounds of this view.</td></tr>
     * <tr><td>gone</td><td>2</td><td>Mode that prevents the label from being drawn</td></tr>
     * <tr><td>withinBounds</td><td>1</td><td>Mode that draws the label within the bounds of the view.</td></tr>
     * </table>
     */
    public static final int labelBehavior=0x7f040211;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int labelColor=0x7f040212;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int labelSize=0x7f040213;
    /**
     * The style used for the label TooltipDrawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int labelStyle=0x7f040214;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int labelTemplate=0x7f040215;
    /**
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     */
    public static final int labelVisibilityMode=0x7f040216;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f040217;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f040218;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layoutDescription=0x7f040219;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layoutDuringTransition=0x7f04021a;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f04021b;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f04021c;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f04021d;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f04021e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     */
    public static final int layout_collapseMode=0x7f04021f;
    /**
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_collapseParallaxMultiplier=0x7f040220;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int layout_constrainedHeight=0x7f040221;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int layout_constrainedWidth=0x7f040222;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintBaseline_creator=0x7f040223;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBaseline_toBaselineOf=0x7f040224;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintBottom_creator=0x7f040225;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBottom_toBottomOf=0x7f040226;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintBottom_toTopOf=0x7f040227;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_constraintCircle=0x7f040228;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintCircleAngle=0x7f040229;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintCircleRadius=0x7f04022a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_constraintDimensionRatio=0x7f04022b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintEnd_toEndOf=0x7f04022c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintEnd_toStartOf=0x7f04022d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintGuide_begin=0x7f04022e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_constraintGuide_end=0x7f04022f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintGuide_percent=0x7f040230;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_default=0x7f040231;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_max=0x7f040232;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHeight_min=0x7f040233;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHeight_percent=0x7f040234;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHorizontal_bias=0x7f040235;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintHorizontal_chainStyle=0x7f040236;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintHorizontal_weight=0x7f040237;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintLeft_creator=0x7f040238;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintLeft_toLeftOf=0x7f040239;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintLeft_toRightOf=0x7f04023a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintRight_creator=0x7f04023b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintRight_toLeftOf=0x7f04023c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintRight_toRightOf=0x7f04023d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintStart_toEndOf=0x7f04023e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintStart_toStartOf=0x7f04023f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_constraintTag=0x7f040240;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_constraintTop_creator=0x7f040241;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintTop_toBottomOf=0x7f040242;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintTop_toTopOf=0x7f040243;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintVertical_bias=0x7f040244;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintVertical_chainStyle=0x7f040245;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintVertical_weight=0x7f040246;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_default=0x7f040247;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_max=0x7f040248;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     */
    public static final int layout_constraintWidth_min=0x7f040249;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_constraintWidth_percent=0x7f04024a;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f04024b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_editor_absoluteX=0x7f04024c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_editor_absoluteY=0x7f04024d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginBottom=0x7f04024e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginEnd=0x7f04024f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginLeft=0x7f040250;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginRight=0x7f040251;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginStart=0x7f040252;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int layout_goneMarginTop=0x7f040253;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f040254;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f040255;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>graph</td><td>40</td><td></td></tr>
     * <tr><td>graph_wrap</td><td>80</td><td></td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>ratio</td><td>10</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     */
    public static final int layout_optimizationLevel=0x7f040256;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     */
    public static final int layout_scrollFlags=0x7f040257;
    /**
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_scrollInterpolator=0x7f040258;
    /**
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int liftOnScroll=0x7f040259;
    /**
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int liftOnScrollTargetViewId=0x7f04025a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int limitBoundsTo=0x7f04025b;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f04025c;
    /**
     * Vertical Spacing between two lines of items being laid out.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineSpacing=0x7f04025d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int linearProgressIndicatorStyle=0x7f04025e;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f04025f;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorMultipleAnimated=0x7f040260;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorSingleAnimated=0x7f040261;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f040262;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f040263;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f040264;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f040265;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f040266;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f040267;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f040268;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f040269;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingEnd=0x7f04026a;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f04026b;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f04026c;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingStart=0x7f04026d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int loadingIconColor=0x7f04026e;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f04026f;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f040270;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_autoPlay=0x7f040271;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_cacheComposition=0x7f040272;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int lottie_colorFilter=0x7f040273;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_enableMergePathsForKitKatAndAbove=0x7f040274;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int lottie_fallbackRes=0x7f040275;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int lottie_fileName=0x7f040276;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int lottie_imageAssetsFolder=0x7f040277;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int lottie_loop=0x7f040278;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lottie_progress=0x7f040279;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int lottie_rawRes=0x7f04027a;
    /**
     * These values must be kept in sync with the RenderMode enum
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>hardware</td><td>1</td><td></td></tr>
     * <tr><td>software</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lottie_renderMode=0x7f04027b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int lottie_repeatCount=0x7f04027c;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>restart</td><td>1</td><td></td></tr>
     * <tr><td>reverse</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int lottie_repeatMode=0x7f04027d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lottie_scale=0x7f04027e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lottie_speed=0x7f04027f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int lottie_url=0x7f040280;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogBodyTextStyle=0x7f040281;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTheme=0x7f040282;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitleIconStyle=0x7f040283;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitlePanelStyle=0x7f040284;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialAlertDialogTitleTextStyle=0x7f040285;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonOutlinedStyle=0x7f040286;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonStyle=0x7f040287;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonToggleGroupStyle=0x7f040288;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarDay=0x7f040289;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarFullscreenTheme=0x7f04028a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderCancelButton=0x7f04028b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderConfirmButton=0x7f04028c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderDivider=0x7f04028d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderLayout=0x7f04028e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderSelection=0x7f04028f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderTitle=0x7f040290;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarHeaderToggleButton=0x7f040291;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarMonth=0x7f040292;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarMonthNavigationButton=0x7f040293;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarStyle=0x7f040294;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarTheme=0x7f040295;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCalendarYearNavigationButton=0x7f040296;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCardViewStyle=0x7f040297;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int materialCircleRadius=0x7f040298;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialClockStyle=0x7f040299;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialThemeOverlay=0x7f04029a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialTimePickerStyle=0x7f04029b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialTimePickerTheme=0x7f04029c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int maxAcceleration=0x7f04029d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxActionInlineWidth=0x7f04029e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f04029f;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxCharacterCount=0x7f0402a0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f0402a1;
    /**
     * Maximum icon image size.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxImageSize=0x7f0402a2;
    /**
     * The maximum number of lines to display in the expanded state. Experimental Feature.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxLines=0x7f0402a3;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int maxVelocity=0x7f0402a4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f0402a5;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0402a6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteAudioTrackDrawable=0x7f0402a7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteBodyTextAppearance=0x7f0402a8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteButtonStyle=0x7f0402a9;
    /**
     * Tint to apply to the media route button
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mediaRouteButtonTint=0x7f0402aa;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteCloseDrawable=0x7f0402ab;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteControlPanelThemeOverlay=0x7f0402ac;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteDefaultIconDrawable=0x7f0402ad;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mediaRouteDividerColor=0x7f0402ae;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteHeaderTextAppearance=0x7f0402af;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRoutePauseDrawable=0x7f0402b0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRoutePlayDrawable=0x7f0402b1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteSpeakerGroupIconDrawable=0x7f0402b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteSpeakerIconDrawable=0x7f0402b3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteStopDrawable=0x7f0402b4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteTheme=0x7f0402b5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int mediaRouteTvIconDrawable=0x7f0402b6;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f0402b7;
    /**
     * Specifies how the navigation rail destinations should be aligned as a group.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>51</td><td>Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL</td></tr>
     * <tr><td>center</td><td>11</td><td>Gravity.CENTER</td></tr>
     * <tr><td>top</td><td>31</td><td>Gravity.TOP | Gravity.CENTER_HORIZONTAL</td></tr>
     * </table>
     */
    public static final int menuGravity=0x7f0402b8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int messageText=0x7f0402b9;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f0402ba;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minHeight=0x7f0402bb;
    /**
     * The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started. If set to zero or negative
     * values (-1 as default), the requested hide action will start immediately.
     * This value is capped to a limit defined in ProgressIndicator class.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int minHideDelay=0x7f0402bc;
    /**
     * If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minSeparation=0x7f0402bd;
    /**
     * Minimum tick width for each slice in the bar chart.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minTickWidth=0x7f0402be;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minTouchTargetSize=0x7f0402bf;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minWidth=0x7f0402c0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mock_diagonalsColor=0x7f0402c1;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int mock_label=0x7f0402c2;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mock_labelBackgroundColor=0x7f0402c3;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int mock_labelColor=0x7f0402c4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int mock_showDiagonals=0x7f0402c5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int mock_showLabel=0x7f0402c6;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>NO_DEBUG</td><td>0</td><td></td></tr>
     * <tr><td>SHOW_ALL</td><td>3</td><td></td></tr>
     * <tr><td>SHOW_PATH</td><td>2</td><td></td></tr>
     * <tr><td>SHOW_PROGRESS</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int motionDebug=0x7f0402c7;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int motionDurationLong1=0x7f0402c8;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int motionDurationLong2=0x7f0402c9;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int motionDurationMedium1=0x7f0402ca;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int motionDurationMedium2=0x7f0402cb;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int motionDurationShort1=0x7f0402cc;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int motionDurationShort2=0x7f0402cd;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionEasingAccelerated=0x7f0402ce;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionEasingDecelerated=0x7f0402cf;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionEasingEmphasized=0x7f0402d0;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionEasingLinear=0x7f0402d1;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionEasingStandard=0x7f0402d2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>5</td><td></td></tr>
     * <tr><td>easeIn</td><td>1</td><td></td></tr>
     * <tr><td>easeInOut</td><td>0</td><td></td></tr>
     * <tr><td>easeOut</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int motionInterpolator=0x7f0402d3;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>arc</td><td>1</td><td></td></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int motionPath=0x7f0402d4;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int motionPathRotate=0x7f0402d5;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int motionProgress=0x7f0402d6;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int motionStagger=0x7f0402d7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int motionTarget=0x7f0402d8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int motion_postLayoutCollision=0x7f0402d9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int motion_triggerOnCollision=0x7f0402da;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int moveWhenScrollAtTop=0x7f0402db;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f0402dc;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f0402dd;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f0402de;
    /**
     * The tint color for the navigation button icon drawable corresponding to
     * the "app:navigationIcon" attribute.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int navigationIconTint=0x7f0402df;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f0402e0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationRailStyle=0x7f0402e1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationViewStyle=0x7f0402e2;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f0402e3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int neighborMargin=0x7f0402e4;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disablePostScroll</td><td>1</td><td></td></tr>
     * <tr><td>disableScroll</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int nestedScrollFlags=0x7f0402e5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int nestedScrollViewStyle=0x7f0402e6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int nestedScrollable=0x7f0402e7;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int number=0x7f0402e8;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f0402e9;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int onCross=0x7f0402ea;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int onHide=0x7f0402eb;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int onNegativeCross=0x7f0402ec;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int onPositiveCross=0x7f0402ed;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int onShow=0x7f0402ee;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>autoComplete</td><td>0</td><td></td></tr>
     * <tr><td>autoCompleteToEnd</td><td>2</td><td></td></tr>
     * <tr><td>autoCompleteToStart</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>4</td><td></td></tr>
     * <tr><td>decelerateAndComplete</td><td>5</td><td></td></tr>
     * <tr><td>stop</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int onTouchUp=0x7f0402ef;
    /**
     * optimal width of the chart
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int optimalWidth=0x7f0402f0;
    /**
     * how to weight extra space beyond optimal width
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int optimalWidthWeight=0x7f0402f1;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f0402f2;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f0402f3;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f0402f4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlay=0x7f0402f5;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f0402f6;
    /**
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingBottomSystemWindowInsets=0x7f0402f7;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f0402f8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingLeftSystemWindowInsets=0x7f0402f9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingRightSystemWindowInsets=0x7f0402fa;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f0402fb;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f0402fc;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int paddingTopSystemWindowInsets=0x7f0402fd;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int pageIndicatorColor=0x7f0402fe;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f0402ff;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f040300;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f040301;
    /**
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int passwordToggleContentDescription=0x7f040302;
    /**
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int passwordToggleDrawable=0x7f040303;
    /**
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordToggleEnabled=0x7f040304;
    /**
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int passwordToggleTint=0x7f040305;
    /**
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int passwordToggleTintMode=0x7f040306;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int pathMotionArc=0x7f040307;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int path_percent=0x7f040308;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentHeight=0x7f040309;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentWidth=0x7f04030a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentX=0x7f04030b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int percentY=0x7f04030c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int perpendicularPath_percent=0x7f04030d;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f04030e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int pivotAnchor=0x7f04030f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int pivotX=0x7f040310;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int pivotY=0x7f040311;
    /**
     * Component name of the placeholder activity in the split. Must be non-empty.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int placeholderActivityName=0x7f040312;
    /**
     * The text to display as placeholder text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int placeholderText=0x7f040313;
    /**
     * TextAppearance of the placeholder text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int placeholderTextAppearance=0x7f040314;
    /**
     * Text color of the placeholder text displayed in the text input area.
     * If set, this takes precedence over placeholderTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int placeholderTextColor=0x7f040315;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>8</td><td></td></tr>
     * <tr><td>invisible</td><td>4</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int placeholder_emptyVisibility=0x7f040316;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuBackground=0x7f040317;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f040318;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f040319;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f04031a;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f04031b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preferenceBackgroundColor=0x7f04031c;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f04031d;
    /**
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryTitleTextAppearance=0x7f04031e;
    /**
     * The preferred color for the title displayed in a PreferenceCategory.
     * If this is not specified by a developer, we use ?android:attr/colorAccent above
     * Lollipop, and ?attr/colorAccent below Lollipop (when using an AppCompat theme).
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preferenceCategoryTitleTextColor=0x7f04031f;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f040320;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f040321;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f040322;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f040323;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f040324;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f040325;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f040326;
    /**
     * The text to display as prefix text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int prefixText=0x7f040327;
    /**
     * TextAppearance of the prefix text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int prefixTextAppearance=0x7f040328;
    /**
     * Text color of the prefix text displayed in the text input area.
     * If set, this takes precedence over prefixTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int prefixTextColor=0x7f040329;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f04032a;
    /**
     * TranslationZ value for the FAB when pressed
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pressedTranslationZ=0x7f04032b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preview=0x7f04032c;
    /**
     * Component name of the primary activity in the split. Must be non-empty. Can contain a
     * wildcard at the end or instead of package name and/or class name.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int primaryActivityName=0x7f04032d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int primaryDrawable=0x7f04032e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int progress=0x7f04032f;
    /**
     * Padding to the end edge of the progress bar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarEndPadding=0x7f040330;
    /**
     * Width to use for inline progress bar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarInlineWidth=0x7f040331;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f040332;
    /**
     * Padding to the start edge of the progress bar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarStartPadding=0x7f040333;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f040334;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f040335;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f040336;
    /**
     * Resource reference to the string array of query patterns for a custom capability.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryPatterns=0x7f040337;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f040338;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rangeFillColor=0x7f040339;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f04033a;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f04033b;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f04033c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int recyclerViewStyle=0x7f04033d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_heightLessThan=0x7f04033e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_heightMoreThan=0x7f04033f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_widthLessThan=0x7f040340;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int region_widthMoreThan=0x7f040341;
    /**
     * This is used as summary for restricted switch preferences, default value is
     * @string/disabled_by_admin (Disabled by administrator).
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int restrictedSwitchSummary=0x7f040342;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f040343;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rippleColor=0x7f040344;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int round=0x7f040345;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int roundPercent=0x7f040346;
    /**
     * Size of row view when range is inline
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rowInlineRangeHeight=0x7f040347;
    /**
     * Size of row view with two lines of text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rowMaxHeight=0x7f040348;
    /**
     * Min height of row view; default size if one line of text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rowMinHeight=0x7f040349;
    /**
     * Size of range area in a row to fit a slider or progress bar
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rowRangeHeight=0x7f04034a;
    /**
     * Size of text area row with one line of text and then a range element
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rowRangeSingleTextHeight=0x7f04034b;
    /**
     * To apply a style for all slice rows shown within an activity or app you
     * may set this in your app theme pointing to your custom RowView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int rowStyle=0x7f04034c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int safeRegion=0x7f04034d;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int saturation=0x7f04034e;
    /**
     * Specifies the duration used for scrim visibility animations.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int scrimAnimationDuration=0x7f04034f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int scrimBackground=0x7f040350;
    /**
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrimVisibleHeightTrigger=0x7f040351;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f040352;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f040353;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f040354;
    /**
     * Whether or not the preference is searchable, by default it's true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int searchable=0x7f040355;
    /**
     * Action used for secondary activity launch. May be empty. Must not contain wildcards.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int secondaryActivityAction=0x7f040356;
    /**
     * Component name of the secondary activity in the split. Must be non-empty. Can contain a
     * wildcard at the end or instead of package name and/or class name.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int secondaryActivityName=0x7f040357;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int secondaryDrawable=0x7f040358;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f040359;
    /**
     * Width to use for inline SeekBar in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int seekBarInlineWidth=0x7f04035a;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f04035b;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f04035c;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f04035d;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f04035e;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f04035f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectionRequired=0x7f040360;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int selectorSize=0x7f040361;
    /**
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearance=0x7f040362;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceLargeComponent=0x7f040363;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceMediumComponent=0x7f040364;
    /**
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceOverlay=0x7f040365;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shapeAppearanceSmallComponent=0x7f040366;
    /**
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shortcutMatchRequired=0x7f040367;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f040368;
    /**
     * The animation behavior to show the indicator and track.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Expands from the top edge to the bottom edge for the linear type;
     * expands from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; appears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Expands from the bottom edge to the top edge for the linear type;
     * expands from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     */
    public static final int showAnimationBehavior=0x7f040369;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f04036a;
    /**
     * The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called. If set to zero or negative values (-1 as default),
     * the show action will start immediately.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int showDelay=0x7f04036b;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f04036c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int showMotionSpec=0x7f04036d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showPaths=0x7f04036e;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f04036f;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f040370;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f040371;
    /**
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int shrinkMotionSpec=0x7f040372;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sideLabels=0x7f040373;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int side_margin=0x7f040374;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f040375;
    /**
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLine=0x7f040376;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f040377;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleSelection=0x7f040378;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sizePercent=0x7f040379;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int slicePreferenceStyle=0x7f04037a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sliceViewStyle=0x7f04037b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sliderStyle=0x7f04037c;
    /**
     * Style to use for action button within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarButtonStyle=0x7f04037d;
    /**
     * Style to use for Snackbars in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarStyle=0x7f04037e;
    /**
     * Style to use for message text within a Snackbar in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarTextViewStyle=0x7f04037f;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f040380;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f040381;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f040382;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f040383;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>locale</td><td>0</td><td></td></tr>
     * <tr><td>ltr</td><td>1</td><td></td></tr>
     * <tr><td>rtl</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int splitLayoutDirection=0x7f040384;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int splitMinSmallestWidth=0x7f040385;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int splitMinWidth=0x7f040386;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int splitRatio=0x7f040387;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f040388;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f040389;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f04038a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int staggered=0x7f04038b;
    /**
     * Whether the start icon is checkable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int startIconCheckable=0x7f04038c;
    /**
     * Text to set as the content description for the start icon.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int startIconContentDescription=0x7f04038d;
    /**
     * Drawable to use for the start icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int startIconDrawable=0x7f04038e;
    /**
     * Tint color to use for the start icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int startIconTint=0x7f04038f;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int startIconTintMode=0x7f040390;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f040391;
    /**
     * @deprecated in favor of {@link R.attr#state_lifted}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static final int state_collapsed=0x7f040392;
    /**
     * @deprecated in favor of {@link R.attr#state_liftable}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    @Deprecated
    public static final int state_collapsible=0x7f040393;
    /**
     * State when a Card is being dragged.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_dragged=0x7f040394;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_encrypted=0x7f040395;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_liftable=0x7f040396;
    /**
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_lifted=0x7f040397;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_metered=0x7f040398;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_saved=0x7f040399;
    /**
     * Determines if static preferences defined in addStaticPreferences are added before or after the radio buttons
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>append</td><td>1</td><td></td></tr>
     * <tr><td>prepend</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int staticPreferenceLocation=0x7f04039a;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f04039b;
    /**
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarForeground=0x7f04039c;
    /**
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarScrim=0x7f04039d;
    /**
     * Determines whether the placeholder will show on top in a smaller window size after
     * it first appeared in a split with sufficient minimum width.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stickyPlaceholder=0x7f04039e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f04039f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int strokeWidth=0x7f0403a0;
    /**
     * Padding to the end edge of the sub content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int subContentEndPadding=0x7f0403a1;
    /**
     * Padding to the start edge of the sub content in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int subContentStartPadding=0x7f0403a2;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f0403a3;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f0403a4;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f0403a5;
    /**
     * Whether the subtitle text corresponding to the "app:subtitle" attribute
     * should be centered horizontally within the toolbar. Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int subtitleCentered=0x7f0403a6;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleColor=0x7f0403a7;
    /**
     * Text size to use for subtitle text in a non-header row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int subtitleSize=0x7f0403a8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f0403a9;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f0403aa;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f0403ab;
    /**
     * Next value: 9
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add_another</td><td>1</td><td></td></tr>
     * <tr><td>cancel</td><td>2</td><td></td></tr>
     * <tr><td>clear</td><td>3</td><td></td></tr>
     * <tr><td>done</td><td>4</td><td></td></tr>
     * <tr><td>next</td><td>5</td><td></td></tr>
     * <tr><td>opt_in</td><td>6</td><td></td></tr>
     * <tr><td>other</td><td>0</td><td></td></tr>
     * <tr><td>skip</td><td>7</td><td></td></tr>
     * <tr><td>stop</td><td>8</td><td></td></tr>
     * </table>
     */
    public static final int sucButtonType=0x7f0403ac;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sucContainer=0x7f0403ad;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sucFooterBarButtonAllCaps=0x7f0403ae;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucFooterBarButtonColorControlHighlight=0x7f0403af;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucFooterBarButtonColorControlHighlightRipple=0x7f0403b0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarButtonCornerRadius=0x7f0403b1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int sucFooterBarButtonFontFamily=0x7f0403b2;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sucFooterBarButtonHighlightAlpha=0x7f0403b3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarMinHeight=0x7f0403b4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarPaddingBottom=0x7f0403b5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarPaddingEnd=0x7f0403b6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarPaddingStart=0x7f0403b7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarPaddingTop=0x7f0403b8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterBarPaddingVertical=0x7f0403b9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucFooterBarPrimaryFooterBackground=0x7f0403ba;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sucFooterBarPrimaryFooterButton=0x7f0403bb;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucFooterBarSecondaryFooterBackground=0x7f0403bc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sucFooterBarSecondaryFooterButton=0x7f0403bd;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterButtonPaddingEnd=0x7f0403be;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucFooterButtonPaddingStart=0x7f0403bf;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sucFullDynamicColor=0x7f0403c0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucGlifHeaderMarginBottom=0x7f0403c1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucGlifHeaderMarginTop=0x7f0403c2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucGlifIconMarginTop=0x7f0403c3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sucHeaderContainerMarginBottom=0x7f0403c4;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int sucHeaderText=0x7f0403c5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucHeaderTextColor=0x7f0403c6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sucLayoutFullscreen=0x7f0403c7;
    /**
     * Theme attributes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sucLayoutTheme=0x7f0403c8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sucLightStatusBar=0x7f0403c9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sucLightSystemNavBar=0x7f0403ca;
    /**
     * The color for the status bar. For this to take effect,
     * "android:windowDrawsSystemBarBackgrounds" should be set to true and
     * "android:windowTranslucentStatus" should be set to false. Also,
     * View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN should be set to true and
     * android:statusBarColor should be transparent.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucStatusBarBackground=0x7f0403cb;
    /**
     * The color for the system navigation bar. For this to take effect,
     * "android:windowDrawsSystemBarBackgrounds" should be set to true and
     * "android:windowTranslucentNavigation" should be set to false.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucSystemNavBarBackgroundColor=0x7f0403cc;
    /**
     * The color for the system navigation bar divider. For this to take effect,
     * "android:windowDrawsSystemBarBackgrounds" should be set to true and
     * "android:windowTranslucentNavigation" should be set to false.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sucSystemNavBarDividerColor=0x7f0403cd;
    /**
     * When set to false, prevents the layout applying partner resource. This attribute is
     * particularly useful when the layout would like to apply their customized attributes.
     * This attribute will be ignored and use partner resource when inside setup wizard flow.
     * The default value is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sucUsePartnerResource=0x7f0403ce;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sudAspectRatio=0x7f0403cf;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudBackground=0x7f0403d0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudBackgroundBaseColor=0x7f0403d1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudBackgroundPatterned=0x7f0403d2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudBackgroundTile=0x7f0403d3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudButtonAllCaps=0x7f0403d4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudButtonCornerRadius=0x7f0403d5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int sudButtonFontFamily=0x7f0403d6;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sudButtonHighlightAlpha=0x7f0403d7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudCardBackground=0x7f0403d8;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int sudCollapsedSummary=0x7f0403d9;
    /**
     * Custom view attributes
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudColorPrimary=0x7f0403da;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudContainer=0x7f0403db;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudContentFramePaddingBottom=0x7f0403dc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudContentFramePaddingTop=0x7f0403dd;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudContentIllustrationMaxHeight=0x7f0403de;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudContentIllustrationMaxWidth=0x7f0403df;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudContentIllustrationPaddingBottom=0x7f0403e0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudContentIllustrationPaddingTop=0x7f0403e1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudDecorPaddingTop=0x7f0403e2;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int sudDescriptionText=0x7f0403e3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudDescriptionTextColor=0x7f0403e4;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>1</td><td></td></tr>
     * <tr><td>either</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int sudDividerCondition=0x7f0403e5;
    /**
     * Deprecated. Use sudDividerInsetStart and sudDividerInsetEnd instead
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudDividerInset=0x7f0403e6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudDividerInsetEnd=0x7f0403e7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudDividerInsetStart=0x7f0403e8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudDividerInsetStartNoIcon=0x7f0403e9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudEditTextBackgroundColor=0x7f0403ea;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int sudExpandedSummary=0x7f0403eb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudFillContentLayoutStyle=0x7f0403ec;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudGlifDescriptionMarginBottom=0x7f0403ed;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudGlifDescriptionMarginTop=0x7f0403ee;
    /**
     * Subset of values in "gravity" in frameworks/base/core/res/res/values/attrs.xml. Only
     * horizontal values are listed here as the header does not support vertical gravity.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int sudGlifHeaderGravity=0x7f0403ef;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudGlifIconSize=0x7f0403f0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudGlifIconStyle=0x7f0403f1;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int sudGlifSubtitleGravity=0x7f0403f2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudHasStableIds=0x7f0403f3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudHeader=0x7f0403f4;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td>Values in the enum has to be the same as in android.view.Gravity</td></tr>
     * </table>
     */
    public static final int sudIconGravity=0x7f0403f5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudIconTint=0x7f0403f6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudIllustration=0x7f0403f7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int sudIllustrationAspectRatio=0x7f0403f8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudIllustrationHorizontalTile=0x7f0403f9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudIllustrationImage=0x7f0403fa;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudItemDescriptionStyle=0x7f0403fb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudItemDescriptionTitleStyle=0x7f0403fc;
    /**
     * Theme attributes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudLayoutTheme=0x7f0403fd;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudListItemIconColor=0x7f0403fe;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudLoadingContentFramePaddingBottom=0x7f0403ff;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudLoadingContentFramePaddingEnd=0x7f040400;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudLoadingContentFramePaddingStart=0x7f040401;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudLoadingContentFramePaddingTop=0x7f040402;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudLoadingHeaderHeight=0x7f040403;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudMarginEnd=0x7f040404;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int sudMarginStart=0x7f040405;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudNavBarBackgroundColor=0x7f040406;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudNavBarButtonBackground=0x7f040407;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudNavBarTextColor=0x7f040408;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudNavBarTheme=0x7f040409;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudPauseVideoWhenFinished=0x7f04040a;
    /**
     * Custom the scroll bar indicator
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudScrollBarThumb=0x7f04040b;
    /**
     * Values copied from frameworks/base/core/res/res/values/attrs.xml
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>2</td><td>Displays bottom scroll indicator when vew can be scrolled down.</td></tr>
     * <tr><td>end</td><td>20</td><td>Displays right scroll indicator when vew can be scrolled in the
     * end direction.</td></tr>
     * <tr><td>left</td><td>4</td><td>Displays left scroll indicator when vew can be scrolled left.</td></tr>
     * <tr><td>none</td><td>0</td><td>No scroll indicators are displayed.</td></tr>
     * <tr><td>right</td><td>8</td><td>Displays right scroll indicator when vew can be scrolled right.</td></tr>
     * <tr><td>start</td><td>10</td><td>Displays right scroll indicator when vew can be scrolled in the
     * start direction.</td></tr>
     * <tr><td>top</td><td>1</td><td>Displays top scroll indicator when view can be scrolled up.</td></tr>
     * </table>
     */
    public static final int sudScrollIndicators=0x7f04040c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudStickyHeader=0x7f04040d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudSwitchBarThumbOffColor=0x7f04040e;
    /**
     * Glif Switch Bar style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudSwitchBarThumbOnColor=0x7f04040f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudSwitchBarTrackOffColor=0x7f040410;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int sudSwitchBarTrackOnColor=0x7f040411;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudUpscaleIcon=0x7f040412;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudUseBottomProgressBar=0x7f040413;
    /**
     * This attribute is false by default. When set to true, the layout will apply partner
     * customizations to Header, Icon and Description. This attribute will be ignored when
     * GlifLayout.shouldApplyPartnerResource() returns false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int sudUsePartnerHeavyTheme=0x7f040414;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sudVideo=0x7f040415;
    /**
     * The text to display as suffix text in the text input area.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suffixText=0x7f040416;
    /**
     * TextAppearance of the suffix text displayed in the text input area.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suffixTextAppearance=0x7f040417;
    /**
     * Text color of the suffix text displayed in the text input area.
     * If set, this takes precedence over suffixTextAppearance.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suffixTextColor=0x7f040418;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f040419;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f04041a;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int summaryLineCount=0x7f04041b;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f04041c;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f04041d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sweepDrawable=0x7f04041e;
    /**
     * Background color for SwipeRefreshLayout progress spinner.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int swipeRefreshLayoutProgressSpinnerBackgroundColor=0x7f04041f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int switchBarBackgroundActivatedColor=0x7f040420;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int switchBarBackgroundColor=0x7f040421;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchBarMarginEnd=0x7f040422;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchBarMarginStart=0x7f040423;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchBarRestrictionIcon=0x7f040424;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchBarTheme=0x7f040425;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f040426;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f040427;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f040428;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f040429;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f04042a;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f04042b;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f04042c;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f04042d;
    /**
     * Reference to a background to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabBackground=0x7f04042e;
    /**
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabContentStart=0x7f04042f;
    /**
     * Gravity constant for tabs.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int tabGravity=0x7f040430;
    /**
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIconTint=0x7f040431;
    /**
     * Blending mode to apply to tab icons.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int tabIconTintMode=0x7f040432;
    /**
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabIndicator=0x7f040433;
    /**
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int tabIndicatorAnimationDuration=0x7f040434;
    /**
     * The animation mode used to animate the selection indicator between
     * destinations.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>elastic</td><td>1</td><td>Animate the selection indicator's left and right bounds out of step
     * with each other, decelerating the front and accelerating the back.
     * This causes the indicator to look like it stretches between destinations
     * an then shrinks back down to fit the size of it's target tab.</td></tr>
     * <tr><td>linear</td><td>0</td><td>Animate the selection indicator's left and right bounds in step with
     * each other.</td></tr>
     * </table>
     */
    public static final int tabIndicatorAnimationMode=0x7f040435;
    /**
     * Color of the indicator used to show the currently selected tab.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIndicatorColor=0x7f040436;
    /**
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabIndicatorFullWidth=0x7f040437;
    /**
     * Gravity constant for tab selection indicator.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     */
    public static final int tabIndicatorGravity=0x7f040438;
    /**
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int tabIndicatorHeight=0x7f040439;
    /**
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabInlineLabel=0x7f04043a;
    /**
     * The maximum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMaxWidth=0x7f04043b;
    /**
     * The minimum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMinWidth=0x7f04043c;
    /**
     * The behavior mode for the Tabs in this layout
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabMode=0x7f04043d;
    /**
     * The preferred padding along all edges of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPadding=0x7f04043e;
    /**
     * The preferred padding along the bottom edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingBottom=0x7f04043f;
    /**
     * The preferred padding along the end edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingEnd=0x7f040440;
    /**
     * The preferred padding along the start edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingStart=0x7f040441;
    /**
     * The preferred padding along the top edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingTop=0x7f040442;
    /**
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabRippleColor=0x7f040443;
    /**
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    @Deprecated
    public static final int tabSelectedTextColor=0x7f040444;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabStyle=0x7f040445;
    /**
     * A reference to a TextAppearance style to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabTextAppearance=0x7f040446;
    /**
     * The default text color to be applied to tabs.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabTextColor=0x7f040447;
    /**
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabUnboundedRipple=0x7f040448;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int targetId=0x7f040449;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int telltales_tailColor=0x7f04044a;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int telltales_tailScale=0x7f04044b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>layout</td><td>0</td><td></td></tr>
     * <tr><td>postLayout</td><td>1</td><td></td></tr>
     * <tr><td>staticLayout</td><td>3</td><td></td></tr>
     * <tr><td>staticPostLayout</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int telltales_velocityMode=0x7f04044c;
    /**
     * Padding to the edge of the button in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textActionPadding=0x7f04044d;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f04044e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody1=0x7f04044f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody2=0x7f040450;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceButton=0x7f040451;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceCaption=0x7f040452;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline1=0x7f040453;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline2=0x7f040454;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline3=0x7f040455;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline4=0x7f040456;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline5=0x7f040457;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline6=0x7f040458;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f040459;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAppearanceLineHeightEnabled=0x7f04045a;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f04045b;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f04045c;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f04045d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceOverline=0x7f04045e;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f04045f;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f040460;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f040461;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f040462;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle1=0x7f040463;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle2=0x7f040464;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColor=0x7f040465;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f040466;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f040467;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textEnd=0x7f040468;
    /**
     * Padding at the end of the text, before the close icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textEndPadding=0x7f040469;
    /**
     * Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textInputLayoutFocusedRectEnabled=0x7f04046a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textInputStyle=0x7f04046b;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int textLocale=0x7f04046c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textOff=0x7f04046d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textOn=0x7f04046e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textStart=0x7f04046f;
    /**
     * Padding at the start of the text, after the icon.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textStartPadding=0x7f040470;
    /**
     * Vertical padding to use between title text and subtitle text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textVerticalPadding=0x7f040471;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f040472;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int themeLineHeight=0x7f040473;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f040474;
    /**
     * The color of the slider's thumb.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbColor=0x7f040475;
    /**
     * The elevation of the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbElevation=0x7f040476;
    /**
     * The radius of the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbRadius=0x7f040477;
    /**
     * The stroke color for the thumb.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbStrokeColor=0x7f040478;
    /**
     * The stroke width for the thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbStrokeWidth=0x7f040479;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f04047a;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f04047b;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f04047c;
    /**
     * The color of the slider's tick marks. Only used when the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickColor=0x7f04047d;
    /**
     * The color of the slider's tick marks for the active portion of the track. Only used when
     * the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickColorActive=0x7f04047e;
    /**
     * The color of the slider's tick marks for the inactive portion of the track. Only used when
     * the slider is in discrete mode.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickColorInactive=0x7f04047f;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040480;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f040481;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f040482;
    /**
     * Whether to show the tick marks. Only used when the slider is in discrete mode.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tickVisible=0x7f040483;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int timestampText=0x7f040484;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f040485;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tintColor=0x7f040486;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f040487;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int title=0x7f040488;
    /**
     * Whether the title text corresponding to the "app:title" attribute
     * should be centered horizontally within the toolbar. Default is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleCentered=0x7f040489;
    /**
     * Mode to specify the effect used to collapse and expand the title text.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>The expanded title will fade out and translate, and the collapsed title will fade in.</td></tr>
     * <tr><td>scale</td><td>0</td><td>The expanded title will continuously scale and translate to its final collapsed position.</td></tr>
     * </table>
     */
    public static final int titleCollapseMode=0x7f04048a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleColor=0x7f04048b;
    /**
     * Whether the CollapsingToolbarLayout should draw its own collapsing title.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleEnabled=0x7f04048c;
    /**
     * Padding to the end edge of the title in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleEndPadding=0x7f04048d;
    /**
     * Padding to the end edge of title items shown in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleItemEndPadding=0x7f04048e;
    /**
     * Padding to the start edge of title items shown in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleItemStartPadding=0x7f04048f;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f040490;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f040491;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f040492;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f040493;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f040494;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f040495;
    /**
     * Text size to use for title text in a non-header row of the slice.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleSize=0x7f040496;
    /**
     * Padding to the start edge of the title in the row.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleStartPadding=0x7f040497;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f040498;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f040499;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f04049a;
    /**
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarId=0x7f04049b;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f04049c;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f04049d;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f04049e;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f04049f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipStyle=0x7f0404a0;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f0404a1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int touchAnchorId=0x7f0404a2;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>middle</td><td>4</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int touchAnchorSide=0x7f0404a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int touchRegionId=0x7f0404a4;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f0404a5;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackColor=0x7f0404a6;
    /**
     * The color of active portion of the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackColorActive=0x7f0404a7;
    /**
     * The color of inactive portion of the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackColorInactive=0x7f0404a8;
    /**
     * The radius of each corner of both the indicator and the track. A radius
     * larger than half of the track width will throw exceptions during
     * initialization.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int trackCornerRadius=0x7f0404a9;
    /**
     * The height of the track.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int trackHeight=0x7f0404aa;
    /**
     * The thickness of the progress track and indicator.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int trackThickness=0x7f0404ab;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f0404ac;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f0404ad;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int transitionDisable=0x7f0404ae;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int transitionEasing=0x7f0404af;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int transitionPathRotate=0x7f0404b0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int transitionShapeAppearance=0x7f0404b1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int triggerId=0x7f0404b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int triggerReceiver=0x7f0404b3;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int triggerSlack=0x7f0404b4;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f0404b5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int twoStateButtonPreferenceStyle=0x7f0404b6;
    /**
     * Customized subtitle if it's an unavailable slice
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int unavailableSliceSubtitle=0x7f0404b7;
    /**
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int updatesContinuously=0x7f0404b8;
    /**
     * If true, an additional summary will be added in addition to the existing summary and
     * this will be used for enabled/disabled by admin strings leaving android.R.id.summary untouched.
     * As such when this is true, useAdminDisabledSummary will be overwritten to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useAdditionalSummary=0x7f0404b9;
    /**
     * If true then we can use enabled/disabled by admin strings for summary (android.R.id.summary).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useAdminDisabledSummary=0x7f0404ba;
    /**
     * Enable compat padding.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useCompatPadding=0x7f0404bb;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useMaterialThemeColors=0x7f0404bc;
    /**
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useSimpleSummaryProvider=0x7f0404bd;
    /**
     * The user restriction on which the preference disabled by admin state will be based on.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int userRestriction=0x7f0404be;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int values=0x7f0404bf;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int vectorAnimation=0x7f0404c0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int verticalOffset=0x7f0404c1;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f0404c2;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int visibilityMode=0x7f0404c3;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f0404c4;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int warmth=0x7f0404c5;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int waveDecay=0x7f0404c6;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int waveOffset=0x7f0404c7;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int wavePeriod=0x7f0404c8;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int waveShape=0x7f0404c9;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>position</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int waveVariesBy=0x7f0404ca;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f0404cb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int wifi_friction=0x7f0404cc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int wifi_signal=0x7f0404cd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int wifi_signal_color=0x7f0404ce;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f0404cf;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f0404d0;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f0404d1;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f0404d2;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f0404d3;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f0404d4;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f0404d5;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f0404d6;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f0404d7;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f0404d8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearSelectedStyle=0x7f0404d9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearStyle=0x7f0404da;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yearTodayStyle=0x7f0404db;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    public static final int abc_config_actionMenuItemAllCaps=0x7f050001;
    /**
     * Whether the bluetooth activation confirmation dialogs should be auto dismissed.
     * Can be overridden for specific product builds.
     */
    public static final int auto_confirm_bluetooth_activation_dialog=0x7f050002;
    /**
     * Display additional System Update menu if true
     */
    public static final int config_additional_system_update_setting_enable=0x7f050003;
    /**
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     */
    public static final int config_allow_edit_carrier_enabled=0x7f050004;
    /**
     * Whether to disable "Uninstall Updates" menu item for System apps or not.
     */
    public static final int config_disable_uninstall_update=0x7f050005;
    /**
     * Whether or not App & Notification screen should display recently used apps
     */
    public static final int config_display_recent_apps=0x7f050006;
    /**
     * When true enable color temperature setting.
     */
    public static final int config_enableColorTemperature=0x7f050007;
    /**
     * Whether or not extra preview panels should be used for screen zoom setting.
     */
    public static final int config_enable_extra_screen_zoom_preview=0x7f050008;
    /**
     * Whether to use the Lottie animation for the face education enrollment screen
     */
    public static final int config_face_education_use_lottie=0x7f050009;
    /**
     * Whether to show the "less secure" info section on the face enroll intro screen
     */
    public static final int config_face_intro_show_less_secure=0x7f05000a;
    /**
     * Whether to show the "require eyes" info section on the face enroll intro screen
     */
    public static final int config_face_intro_show_require_eyes=0x7f05000b;
    /**
     * Whether or not TopLevelSettings should force rounded icon for injected tiles
     */
    public static final int config_force_rounded_icon_TopLevelSettings=0x7f05000c;
    /**
     * When true enable gesture setting.
     */
    public static final int config_gesture_settings_enabled=0x7f05000d;
    /**
     * Whether to handle slot change events
     */
    public static final int config_handle_sim_slot_change=0x7f05000e;
    /**
     * Whether help links are defined.
     */
    public static final int config_has_help=0x7f05000f;
    /**
     * Whether none security option is hide or not  (country specific).
     * Whether none security option is hide or not  (country specific).
     */
    public static final int config_hide_none_security_option=0x7f050010;
    /**
     * Whether swipe security option is hidden or not
     */
    public static final int config_hide_swipe_security_option=0x7f050011;
    /**
     * Control whether status bar should distinguish HSPA data icon form UMTS
     * data icon on devices
     */
    public static final int config_hspa_data_distinguishable=0x7f050012;
    /**
     * Indicates whether device has a front facing fingerprint sensor (not udfps).
     */
    public static final int config_is_front_facing_fps=0x7f050013;
    /**
     * Whether dismissal timestamp should be kept before deletion
     */
    public static final int config_keep_contextual_card_dismissal_timestamp=0x7f050014;
    /**
     * Whether location mode is available or not.
     */
    public static final int config_location_mode_available=0x7f050015;
    /**
     * Whether to use a UI variant that minimizes the number of UI elements on screen. This is
     * typically used when there is not enough space to display everything, because pattern view
     * doesn't interact well with scroll view
     * Whether to use a UI variant that minimizes the number of UI elements on screen. This is
     * typically used when there is not enough space to display everything, because pattern view
     * doesn't interact well with scroll view
     */
    public static final int config_lock_pattern_minimal_ui=0x7f050016;
    public static final int config_materialPreferenceIconSpaceReserved=0x7f050017;
    /**
     * If false, MIN is displayed. If true, MSID is displayed.
     */
    public static final int config_msid_enable=0x7f050018;
    /**
     * Whether to aggregate for network selection list
     */
    public static final int config_network_selection_list_aggregation_enabled=0x7f050019;
    /**
     * Whether nfc detection point preview image is available or not.
     */
    public static final int config_nfc_detection_point=0x7f05001a;
    /**
     * Whether or not to show the night light suggestion.
     */
    public static final int config_night_light_suggestion_enabled=0x7f05001b;
    /**
     * When true, show 1/2G networks as 3G.
     */
    public static final int config_showMin3G=0x7f05001c;
    /**
     * Whether to enable "show operator name in the status bar" setting
     */
    public static final int config_showOperatorNameInStatusBar=0x7f05001d;
    /**
     * Whether to show the Preference for Adaptive connectivity
     */
    public static final int config_show_adaptive_connectivity=0x7f05001e;
    /**
     * Whether alarm_volume should be shown or not.
     */
    public static final int config_show_alarm_volume=0x7f05001f;
    /**
     * Whether battery from app_info_settings is available or not.
     */
    public static final int config_show_app_info_settings_battery=0x7f050020;
    /**
     * Whether memory from app_info_settings is available or not.
     */
    public static final int config_show_app_info_settings_memory=0x7f050021;
    /**
     * Whether assist_and_voice_input should be shown or not.
     */
    public static final int config_show_assist_and_voice_input=0x7f050022;
    /**
     * Whether or not homepage should display user's account avatar
     */
    public static final int config_show_avatar_in_homepage=0x7f050023;
    /**
     * Whether or not branded account info tile should display in device info page
     */
    public static final int config_show_branded_account_in_device_info=0x7f050024;
    /**
     * Whether call_volume should be shown or not.
     */
    public static final int config_show_call_volume=0x7f050025;
    /**
     * Whether to show Camera laser sensor switch in Developer Options
     */
    public static final int config_show_camera_laser_sensor=0x7f050026;
    /**
     * Whether charging_sounds should be shown or not.
     */
    public static final int config_show_charging_sounds=0x7f050027;
    /**
     * Whether data_saver should be shown or not.
     */
    public static final int config_show_data_saver=0x7f050028;
    /**
     * Whether or not device header widget tile should display in device info page
     */
    public static final int config_show_device_header_in_device_info=0x7f050029;
    /**
     * Whether device_model should be shown or not.
     */
    public static final int config_show_device_model=0x7f05002a;
    /**
     * Whether the device name is shown in About device or not
     */
    public static final int config_show_device_name=0x7f05002b;
    /**
     * Whether to show emergency gesture in Settings
     */
    public static final int config_show_emergency_gesture_settings=0x7f05002c;
    /**
     * Whether or not emergency info tile should display in device info page
     */
    public static final int config_show_emergency_info_in_device_info=0x7f05002d;
    /**
     * Whether enabled_vr_listeners should be shown or not.
     */
    public static final int config_show_enabled_vr_listeners=0x7f05002e;
    /**
     * Whether encryption_and_credentials_encryption_status should be shown or not.
     */
    public static final int config_show_encryption_and_credentials_encryption_status=0x7f05002f;
    /**
     * Whether high_power_apps should be shown or not.
     */
    public static final int config_show_high_power_apps=0x7f050030;
    /**
     * Whether location scanning is available or not.
     */
    public static final int config_show_location_scanning=0x7f050031;
    /**
     * Whether manage_device_admin should be shown or not.
     */
    public static final int config_show_manage_device_admin=0x7f050032;
    /**
     * Whether manage_trust_agents should be shown or not.
     */
    public static final int config_show_manage_trust_agents=0x7f050033;
    /**
     * Whether to show a preference item for the manual in About phone
     */
    public static final int config_show_manual=0x7f050034;
    /**
     * Whether media_volume should be shown or not.
     */
    public static final int config_show_media_volume=0x7f050035;
    /**
     * Whether to show min refresh rate in display settings
     */
    public static final int config_show_min_refresh_rate_switch=0x7f050036;
    /**
     * Whether to show a preference item for mobile plan
     */
    public static final int config_show_mobile_plan=0x7f050037;
    /**
     * Whether notification_ringtone should be shown or not.
     */
    public static final int config_show_notification_ringtone=0x7f050038;
    /**
     * Whether notification_volume should be shown or not.
     */
    public static final int config_show_notification_volume=0x7f050039;
    /**
     * Whether to show peak refresh rate in display settings
     */
    public static final int config_show_peak_refresh_rate_switch=0x7f05003a;
    /**
     * Whether phone_language should be shown or not.
     */
    public static final int config_show_phone_language=0x7f05003b;
    /**
     * Whether physical_keyboard_pref should be shown or not.
     */
    public static final int config_show_physical_keyboard_pref=0x7f05003c;
    /**
     * Whether pointer_speed should be shown or not.
     */
    public static final int config_show_pointer_speed=0x7f05003d;
    /**
     * Whether premium_sms should be shown or not.
     */
    public static final int config_show_premium_sms=0x7f05003e;
    /**
     * Whether private_dns_settings is available or not.
     */
    public static final int config_show_private_dns_settings=0x7f05003f;
    /**
     * Whether to show a preference item for regulatory information in About phone
     */
    public static final int config_show_regulatory_info=0x7f050040;
    /**
     * Whether reset_dashboard should be shown or not.
     */
    public static final int config_show_reset_dashboard=0x7f050041;
    /**
     * Whether screen_locking_sounds should be shown or not.
     */
    public static final int config_show_screen_locking_sounds=0x7f050042;
    /**
     * Whether screen_pinning_settings should be shown or not.
     */
    public static final int config_show_screen_pinning_settings=0x7f050043;
    /**
     * Whether show_password should be shown or not.
     */
    public static final int config_show_show_password=0x7f050044;
    /**
     * Whether to show Smart Storage toggle
     */
    public static final int config_show_smart_storage_toggle=0x7f050045;
    /**
     * Whether to show Smooth Display feature in Settings Options
     */
    public static final int config_show_smooth_display=0x7f050046;
    /**
     * Whether spellcheckers_settings should be shown or not.
     */
    public static final int config_show_spellcheckers_settings=0x7f050047;
    /**
     * Whether system_update_settings should be shown or not.
     */
    public static final int config_show_system_update_settings=0x7f050048;
    /**
     * Whether toggle_airplane is available or not.
     */
    public static final int config_show_toggle_airplane=0x7f050049;
    /**
     * Whether top_level_accessibility should be shown or not.
     */
    public static final int config_show_top_level_accessibility=0x7f05004a;
    /**
     * Whether top_level_battery should be shown or not.
     */
    public static final int config_show_top_level_battery=0x7f05004b;
    /**
     * Whether top_level_connected_devices should be shown or not.
     */
    public static final int config_show_top_level_connected_devices=0x7f05004c;
    /**
     * Whether top_level_display should be shown or not.
     */
    public static final int config_show_top_level_display=0x7f05004d;
    /**
     * Whether touch_sounds should be shown or not.
     */
    public static final int config_show_touch_sounds=0x7f05004e;
    /**
     * Whether trust_agent_click_intent should be shown or not.
     */
    public static final int config_show_trust_agent_click_intent=0x7f05004f;
    /**
     * Whether tts_settings_summary should be shown or not.
     */
    public static final int config_show_tts_settings_summary=0x7f050050;
    /**
     * Whether unlock_set_or_change should be shown or not.
     */
    public static final int config_show_unlock_set_or_change=0x7f050051;
    /**
     * Whether vibrate_input_devices should be shown or not.
     */
    public static final int config_show_vibrate_input_devices=0x7f050052;
    /**
     * Whether virtual_keyboard_pref should be shown or not.
     */
    public static final int config_show_virtual_keyboard_pref=0x7f050053;
    /**
     * Whether wallpaper attribution should be shown or not.
     */
    public static final int config_show_wallpaper_attribution=0x7f050054;
    /**
     * Whether wifi_ip_address should be shown or not.
     */
    public static final int config_show_wifi_ip_address=0x7f050055;
    /**
     * Whether wifi_mac_address should be shown or not.
     */
    public static final int config_show_wifi_mac_address=0x7f050056;
    /**
     * Whether Wi-Fi settings should be shown or not.
     * This also controls whether Wi-fi related sub-settings (e.g. Wi-Fi preferences) will
     * surface in search results or not.
     */
    public static final int config_show_wifi_settings=0x7f050057;
    /**
     * Whether the confirmation for sim deletion is defaulted to be on or off
     */
    public static final int config_sim_deletion_confirmation_default_on=0x7f050058;
    /**
     * If the Storage Manager settings are enabled.
     */
    public static final int config_storage_manager_settings_enabled=0x7f050059;
    /**
     * whether use partner overlay theme for outside setupwizard flow
     */
    public static final int config_suc_use_partner_resource=0x7f05005a;
    /**
     * If the support features are enabled.
     */
    public static final int config_support_enabled=0x7f05005b;
    /**
     * Whether to support large screen
     * Whether to support large screen
     */
    public static final int config_supported_large_screen=0x7f05005c;
    /**
     * Whether suw to support two panes
     */
    public static final int config_suw_supported_two_panes=0x7f05005d;
    /**
     * Whether or not the homepage should be powered by legacy suggestion (versus contextual cards)
     * Default to true as not all devices support contextual cards.
     */
    public static final int config_use_legacy_suggestion=0x7f05005e;
    /**
     * Whether or not the device is capable of multiple levels of vibration intensity.
     * Note that this is different from whether it can control the vibration amplitude as some
     * devices will be able to vary their amplitude but do not possess enough dynamic range to
     * have distinct intensity levels
     */
    public static final int config_vibration_supports_multiple_intensities=0x7f05005f;
    /**
     * CryptKeeper allow rotation
     */
    public static final int crypt_keeper_allow_rotation=0x7f050060;
    public static final int dynamic_color_enabled=0x7f050061;
    public static final int extended_partner_config_enabled=0x7f050062;
    /**
     * Whether there is a boot sounds checkbox
     */
    public static final int has_boot_sounds=0x7f050063;
    /**
     * Whether or not the dock settings are to be displayed for this device when docked
     */
    public static final int has_dock_settings=0x7f050064;
    /**
     * Whether there is a silent mode checkbox
     * Whether there is a silent mode checkbox
     */
    public static final int has_silent_mode=0x7f050065;
    public static final int is_tablet=0x7f050066;
    /**
     * Whether the given language capitalizes nouns
     */
    public static final int language_capitalizes_nouns=0x7f050067;
    public static final int mtrl_btn_textappearance_all_caps=0x7f050068;
    public static final int settingslib_config_allow_divider=0x7f050069;
    public static final int settingslib_config_icon_space_reserved=0x7f05006a;
    public static final int setup_compat_light_navigation_bar=0x7f05006b;
    public static final int setup_compat_light_status_bar=0x7f05006c;
    public static final int setup_design_header_auto_size_enabled=0x7f05006d;
    public static final int setup_design_items_divider_shown=0x7f05006e;
    public static final int simple_cache_enable_im_memory=0x7f05006f;
    /**
     * Whether to use tablet layout
     * Whether to use tablet layout
     */
    public static final int sudUseTabletLayout=0x7f050070;
  }
  public static final class color {
    /**
     * Material Teal 700
     */
    public static final int SIM_color_blue=0x7f060000;
    /**
     * Material Custom Cyan
     */
    public static final int SIM_color_blue800=0x7f060001;
    /**
     * SIM colors updated for GAR
     */
    public static final int SIM_color_cyan=0x7f060002;
    /**
     * Material Blue 800
     */
    public static final int SIM_color_green800=0x7f060003;
    /**
     * Material Blue 700
     */
    public static final int SIM_color_indigo=0x7f060004;
    /**
     * Material Pink 800
     */
    public static final int SIM_color_orange=0x7f060005;
    /**
     * Material Purple 700
     */
    public static final int SIM_color_pink=0x7f060006;
    /**
     * Material Purple 800
     */
    public static final int SIM_color_pink800=0x7f060007;
    /**
     * Material Indigo 700
     */
    public static final int SIM_color_purple=0x7f060008;
    /**
     * Material Green 800
     */
    public static final int SIM_color_purple800=0x7f060009;
    /**
     * Material Pink 700
     */
    public static final int SIM_color_red=0x7f06000a;
    /**
     * SIM colors
     */
    public static final int SIM_color_teal=0x7f06000b;
    /**
     * Material Cyan 300
     */
    public static final int SIM_dark_mode_color_blue=0x7f06000c;
    /**
     * Dark mode SIM colors
     */
    public static final int SIM_dark_mode_color_cyan=0x7f06000d;
    /**
     * Material Blue 300
     */
    public static final int SIM_dark_mode_color_green=0x7f06000e;
    /**
     * Material Pink 300
     */
    public static final int SIM_dark_mode_color_orange=0x7f06000f;
    /**
     * Material Purple 300
     */
    public static final int SIM_dark_mode_color_pink=0x7f060010;
    /**
     * Material Green 300
     */
    public static final int SIM_dark_mode_color_purple=0x7f060011;
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060012;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060013;
    public static final int abc_btn_colored_borderless_text_material=0x7f060014;
    public static final int abc_btn_colored_text_material=0x7f060015;
    public static final int abc_color_highlight_material=0x7f060016;
    public static final int abc_decor_view_status_guard=0x7f060017;
    public static final int abc_decor_view_status_guard_light=0x7f060018;
    public static final int abc_hint_foreground_material_dark=0x7f060019;
    public static final int abc_hint_foreground_material_light=0x7f06001a;
    public static final int abc_primary_text_disable_only_material_dark=0x7f06001b;
    public static final int abc_primary_text_disable_only_material_light=0x7f06001c;
    public static final int abc_primary_text_material_dark=0x7f06001d;
    public static final int abc_primary_text_material_light=0x7f06001e;
    public static final int abc_search_url_text=0x7f06001f;
    public static final int abc_search_url_text_normal=0x7f060020;
    public static final int abc_search_url_text_pressed=0x7f060021;
    public static final int abc_search_url_text_selected=0x7f060022;
    public static final int abc_secondary_text_material_dark=0x7f060023;
    public static final int abc_secondary_text_material_light=0x7f060024;
    public static final int abc_tint_btn_checkable=0x7f060025;
    public static final int abc_tint_default=0x7f060026;
    public static final int abc_tint_edittext=0x7f060027;
    public static final int abc_tint_seek_thumb=0x7f060028;
    public static final int abc_tint_spinner=0x7f060029;
    public static final int abc_tint_switch_track=0x7f06002a;
    public static final int accent_material_dark=0x7f06002b;
    public static final int accent_material_light=0x7f06002c;
    public static final int accessibility_color_inversion_background=0x7f06002d;
    public static final int accessibility_daltonizer_background=0x7f06002e;
    /**
     * Accessibility Settings icon background colors
     */
    public static final int accessibility_feature_background=0x7f06002f;
    /**
     * Google grey 700
     */
    public static final int accessibility_magnification_background=0x7f060030;
    /**
     * icon outline color
     */
    public static final int advanced_icon_color=0x7f060031;
    /**
     * icon outline color
     */
    public static final int advanced_outline_color=0x7f060032;
    public static final int androidx_core_ripple_material_light=0x7f060033;
    public static final int androidx_core_secondary_text_default_material_light=0x7f060034;
    public static final int audio_icon=0x7f060035;
    /**
     * Blue 400
     */
    public static final int back_gesture_indicator=0x7f060036;
    public static final int background_floating_material_dark=0x7f060037;
    public static final int background_floating_material_light=0x7f060038;
    public static final int background_material_dark=0x7f060039;
    public static final int background_material_light=0x7f06003a;
    /**
     * green card background
     * green card background
     */
    public static final int banner_accent_attention_high=0x7f06003b;
    /**
     * yellow accent color
     * yellow accent color
     */
    public static final int banner_accent_attention_low=0x7f06003c;
    /**
     * red accent color
     * red accent color
     */
    public static final int banner_accent_attention_medium=0x7f06003d;
    public static final int banner_background_attention_high=0x7f06003e;
    /**
     * yellow card background
     * yellow card background
     */
    public static final int banner_background_attention_low=0x7f06003f;
    /**
     * red card background
     * red card background
     */
    public static final int banner_background_attention_medium=0x7f060040;
    /**
     * Material Yellow 600
     */
    public static final int battery_bad_color_dark=0x7f060041;
    /**
     * Material Orange 800
     */
    public static final int battery_bad_color_light=0x7f060042;
    /**
     * Material Red 500
     */
    public static final int battery_good_color_dark=0x7f060043;
    public static final int battery_good_color_light=0x7f060044;
    public static final int battery_icon_color_error=0x7f060045;
    /**
     * Battery error text color
     */
    public static final int battery_info_error_color_black=0x7f060046;
    public static final int battery_info_error_color_red=0x7f060047;
    /**
     * Material Green 500
     */
    public static final int battery_maybe_color_dark=0x7f060048;
    /**
     * Material Green 600
     */
    public static final int battery_maybe_color_light=0x7f060049;
    public static final int batterymeter_bolt_color=0x7f06004a;
    public static final int batterymeter_plus_color=0x7f06004b;
    /**
     * Face and fingerprint enrollment
     * Face and fingerprint enrollment
     */
    public static final int biometric_enroll_intro_color_bar=0x7f06004c;
    public static final int biometric_enroll_intro_color_icon=0x7f06004d;
    public static final int biometric_enroll_intro_color_outline=0x7f06004e;
    public static final int bottom_navigation_colors=0x7f06004f;
    public static final int bright_foreground_disabled_material_dark=0x7f060050;
    public static final int bright_foreground_disabled_material_light=0x7f060051;
    public static final int bright_foreground_inverse_material_dark=0x7f060052;
    public static final int bright_foreground_inverse_material_light=0x7f060053;
    public static final int bright_foreground_material_dark=0x7f060054;
    public static final int bright_foreground_material_light=0x7f060055;
    /**
     * 72% Material Cyan 900
     */
    public static final int bt_color_bg_1=0x7f060056;
    /**
     * Material Red 100
     */
    public static final int bt_color_bg_2=0x7f060057;
    /**
     * Material Green 100
     */
    public static final int bt_color_bg_3=0x7f060058;
    /**
     * Material Yellow 100
     */
    public static final int bt_color_bg_4=0x7f060059;
    /**
     * Material Orange 100
     */
    public static final int bt_color_bg_5=0x7f06005a;
    /**
     * Material Pink 100
     */
    public static final int bt_color_bg_6=0x7f06005b;
    /**
     * Material Purple 100
     */
    public static final int bt_color_bg_7=0x7f06005c;
    public static final int bt_color_icon_1=0x7f06005d;
    /**
     * 72% Material Red 900
     */
    public static final int bt_color_icon_2=0x7f06005e;
    /**
     * 72% Material Green 900
     */
    public static final int bt_color_icon_3=0x7f06005f;
    /**
     * 72% Material Yellow 900
     */
    public static final int bt_color_icon_4=0x7f060060;
    /**
     * 72% Material Orange 900
     */
    public static final int bt_color_icon_5=0x7f060061;
    /**
     * 72% Material Pink 900
     */
    public static final int bt_color_icon_6=0x7f060062;
    /**
     * 72% Material Purple 900
     */
    public static final int bt_color_icon_7=0x7f060063;
    public static final int bt_outline_color=0x7f060064;
    public static final int button_material_dark=0x7f060065;
    public static final int button_material_light=0x7f060066;
    public static final int cardview_dark_background=0x7f060067;
    public static final int cardview_light_background=0x7f060068;
    public static final int cardview_shadow_end_color=0x7f060069;
    public static final int cardview_shadow_start_color=0x7f06006a;
    public static final int checkbox_themeable_attribute_color=0x7f06006b;
    public static final int circle_outline_color=0x7f06006c;
    /**
     * Top app bar colors
     */
    public static final int color_surface_header=0x7f06006d;
    public static final int confirm_device_credential_transparent_black=0x7f06006e;
    public static final int contextual_card_background=0x7f06006f;
    public static final int contextual_card_dismissal_background=0x7f060070;
    public static final int crypt_keeper_clock_am_pm=0x7f060071;
    public static final int crypt_keeper_clock_background=0x7f060072;
    public static final int crypt_keeper_clock_foreground=0x7f060073;
    public static final int crypt_keeper_password_background=0x7f060074;
    public static final int dark_mode_icon_color_dual_tone_background=0x7f060075;
    public static final int dark_mode_icon_color_dual_tone_fill=0x7f060076;
    /**
     * Material Cyan 100
     */
    public static final int dark_mode_icon_color_single_tone=0x7f060077;
    public static final int design_bottom_navigation_shadow_color=0x7f060078;
    public static final int design_box_stroke_color=0x7f060079;
    public static final int design_dark_default_color_background=0x7f06007a;
    public static final int design_dark_default_color_error=0x7f06007b;
    public static final int design_dark_default_color_on_background=0x7f06007c;
    public static final int design_dark_default_color_on_error=0x7f06007d;
    public static final int design_dark_default_color_on_primary=0x7f06007e;
    public static final int design_dark_default_color_on_secondary=0x7f06007f;
    public static final int design_dark_default_color_on_surface=0x7f060080;
    public static final int design_dark_default_color_primary=0x7f060081;
    public static final int design_dark_default_color_primary_dark=0x7f060082;
    public static final int design_dark_default_color_primary_variant=0x7f060083;
    public static final int design_dark_default_color_secondary=0x7f060084;
    public static final int design_dark_default_color_secondary_variant=0x7f060085;
    public static final int design_dark_default_color_surface=0x7f060086;
    public static final int design_default_color_background=0x7f060087;
    public static final int design_default_color_error=0x7f060088;
    public static final int design_default_color_on_background=0x7f060089;
    public static final int design_default_color_on_error=0x7f06008a;
    public static final int design_default_color_on_primary=0x7f06008b;
    public static final int design_default_color_on_secondary=0x7f06008c;
    public static final int design_default_color_on_surface=0x7f06008d;
    public static final int design_default_color_primary=0x7f06008e;
    public static final int design_default_color_primary_dark=0x7f06008f;
    public static final int design_default_color_primary_variant=0x7f060090;
    public static final int design_default_color_secondary=0x7f060091;
    public static final int design_default_color_secondary_variant=0x7f060092;
    public static final int design_default_color_surface=0x7f060093;
    public static final int design_error=0x7f060094;
    public static final int design_fab_shadow_end_color=0x7f060095;
    public static final int design_fab_shadow_mid_color=0x7f060096;
    public static final int design_fab_shadow_start_color=0x7f060097;
    public static final int design_fab_stroke_end_inner_color=0x7f060098;
    public static final int design_fab_stroke_end_outer_color=0x7f060099;
    public static final int design_fab_stroke_top_inner_color=0x7f06009a;
    public static final int design_fab_stroke_top_outer_color=0x7f06009b;
    public static final int design_icon_tint=0x7f06009c;
    public static final int design_snackbar_background_color=0x7f06009d;
    public static final int dim_foreground_disabled_material_dark=0x7f06009e;
    public static final int dim_foreground_disabled_material_light=0x7f06009f;
    public static final int dim_foreground_material_dark=0x7f0600a0;
    public static final int dim_foreground_material_light=0x7f0600a1;
    public static final int disabled_text_color=0x7f0600a2;
    public static final int divider_color=0x7f0600a3;
    public static final int error_color_material_dark=0x7f0600a4;
    public static final int error_color_material_light=0x7f0600a5;
    /**
     * TODO: Figure out colors
     */
    public static final int face_anim_particle_color_1=0x7f0600a6;
    /**
     * Material Cyan 500
     */
    public static final int face_anim_particle_color_2=0x7f0600a7;
    /**
     * Material Orange 800
     */
    public static final int face_anim_particle_color_3=0x7f0600a8;
    /**
     * Material Green 500
     */
    public static final int face_anim_particle_color_4=0x7f0600a9;
    /**
     * Material Yellow 600
     */
    public static final int face_anim_particle_error=0x7f0600aa;
    public static final int face_enroll_icon_color=0x7f0600ab;
    public static final int fallback_color_device_default_dark=0x7f0600ac;
    public static final int fallback_color_device_default_light=0x7f0600ad;
    /**
     * The fallback color for tinting icons. Only used when colorControlNormal is unavailable
     */
    public static final int fallback_tintColor=0x7f0600ae;
    /**
     * Fingerprint enrollment color
     */
    public static final int fingerprint_enrollment_finish_color_outline=0x7f0600af;
    public static final int fingerprint_message_color=0x7f0600b0;
    public static final int fingerprint_title_area_bg=0x7f0600b1;
    public static final int fingerprint_title_color=0x7f0600b2;
    public static final int foreground_material_dark=0x7f0600b3;
    public static final int foreground_material_light=0x7f0600b4;
    /**
     * Gestures settings
     */
    public static final int gestures_setting_background_color=0x7f0600b5;
    public static final int highlighted_text_material_dark=0x7f0600b6;
    public static final int highlighted_text_material_light=0x7f0600b7;
    public static final int homepage_about_background=0x7f0600b8;
    public static final int homepage_accessibility_background=0x7f0600b9;
    public static final int homepage_accounts_background=0x7f0600ba;
    public static final int homepage_app_and_notification_background=0x7f0600bb;
    public static final int homepage_battery_background=0x7f0600bc;
    public static final int homepage_card_dismissal_background=0x7f0600bd;
    public static final int homepage_connected_device_background=0x7f0600be;
    public static final int homepage_display_background=0x7f0600bf;
    public static final int homepage_emergency_background=0x7f0600c0;
    public static final int homepage_generic_icon_background=0x7f0600c1;
    public static final int homepage_location_background=0x7f0600c2;
    /**
     * Dashboard/homepage icon background colors
     */
    public static final int homepage_network_background=0x7f0600c3;
    public static final int homepage_notification_background=0x7f0600c4;
    public static final int homepage_privacy_background=0x7f0600c5;
    public static final int homepage_security_background=0x7f0600c6;
    public static final int homepage_sound_background=0x7f0600c7;
    public static final int homepage_storage_background=0x7f0600c8;
    public static final int homepage_support_background=0x7f0600c9;
    public static final int homepage_system_background=0x7f0600ca;
    public static final int homepage_wallpaper_background=0x7f0600cb;
    /**
     * Accent color that matches the settings launcher icon
     */
    public static final int icon_accent=0x7f0600cc;
    /**
     * launcher icon color
     */
    public static final int icon_launcher_setting_color=0x7f0600cd;
    /**
     * Yellow 600, used for highlighting "important" conversations in settings & notifications
     */
    public static final int important_conversation=0x7f0600ce;
    public static final int legacy_icon_background=0x7f0600cf;
    public static final int light_mode_icon_color_dual_tone_background=0x7f0600d0;
    public static final int light_mode_icon_color_dual_tone_fill=0x7f0600d1;
    public static final int light_mode_icon_color_single_tone=0x7f0600d2;
    public static final int list_divider_color=0x7f0600d3;
    public static final int lock_pattern_background=0x7f0600d4;
    public static final int lock_pattern_view_success_color=0x7f0600d5;
    /**
     * Accessibility SUW colors
     */
    public static final int material_blue_500=0x7f0600d6;
    public static final int material_blue_700=0x7f0600d7;
    public static final int material_blue_grey_800=0x7f0600d8;
    public static final int material_blue_grey_900=0x7f0600d9;
    public static final int material_blue_grey_950=0x7f0600da;
    public static final int material_cursor_color=0x7f0600db;
    public static final int material_deep_teal_200=0x7f0600dc;
    public static final int material_deep_teal_500=0x7f0600dd;
    public static final int material_grey_100=0x7f0600de;
    public static final int material_grey_200=0x7f0600df;
    public static final int material_grey_300=0x7f0600e0;
    public static final int material_grey_50=0x7f0600e1;
    public static final int material_grey_600=0x7f0600e2;
    public static final int material_grey_800=0x7f0600e3;
    public static final int material_grey_850=0x7f0600e4;
    public static final int material_grey_900=0x7f0600e5;
    public static final int material_on_background_disabled=0x7f0600e6;
    public static final int material_on_background_emphasis_high_type=0x7f0600e7;
    public static final int material_on_background_emphasis_medium=0x7f0600e8;
    public static final int material_on_primary_disabled=0x7f0600e9;
    public static final int material_on_primary_emphasis_high_type=0x7f0600ea;
    public static final int material_on_primary_emphasis_medium=0x7f0600eb;
    public static final int material_on_surface_disabled=0x7f0600ec;
    public static final int material_on_surface_emphasis_high_type=0x7f0600ed;
    public static final int material_on_surface_emphasis_medium=0x7f0600ee;
    public static final int material_on_surface_stroke=0x7f0600ef;
    public static final int material_slider_active_tick_marks_color=0x7f0600f0;
    public static final int material_slider_active_track_color=0x7f0600f1;
    public static final int material_slider_halo_color=0x7f0600f2;
    public static final int material_slider_inactive_tick_marks_color=0x7f0600f3;
    public static final int material_slider_inactive_track_color=0x7f0600f4;
    public static final int material_slider_thumb_color=0x7f0600f5;
    public static final int material_timepicker_button_background=0x7f0600f6;
    public static final int material_timepicker_button_stroke=0x7f0600f7;
    public static final int material_timepicker_clock_text_color=0x7f0600f8;
    public static final int material_timepicker_clockface=0x7f0600f9;
    public static final int material_timepicker_modebutton_tint=0x7f0600fa;
    public static final int message_bubble_incoming=0x7f0600fb;
    public static final int message_bubble_outgoing=0x7f0600fc;
    public static final int message_icon_background_incoming=0x7f0600fd;
    public static final int message_icon_background_outgoing=0x7f0600fe;
    public static final int message_icon_text_incoming=0x7f0600ff;
    public static final int message_icon_text_outgoing=0x7f060100;
    public static final int message_text_incoming=0x7f060101;
    public static final int message_text_outgoing=0x7f060102;
    public static final int meter_background_color=0x7f060103;
    public static final int meter_consumed_color=0x7f060104;
    public static final int mr_cast_meta_black_scrim=0x7f060105;
    public static final int mr_cast_meta_default_background=0x7f060106;
    public static final int mr_cast_meta_default_text_color=0x7f060107;
    public static final int mr_cast_progressbar_background_dark=0x7f060108;
    public static final int mr_cast_progressbar_background_light=0x7f060109;
    public static final int mr_cast_progressbar_progress_and_thumb_dark=0x7f06010a;
    public static final int mr_cast_progressbar_progress_and_thumb_light=0x7f06010b;
    public static final int mr_cast_route_divider_dark=0x7f06010c;
    public static final int mr_cast_route_divider_light=0x7f06010d;
    public static final int mr_dynamic_dialog_background_dark=0x7f06010e;
    public static final int mr_dynamic_dialog_background_light=0x7f06010f;
    public static final int mr_dynamic_dialog_header_text_color_dark=0x7f060110;
    public static final int mr_dynamic_dialog_header_text_color_light=0x7f060111;
    public static final int mr_dynamic_dialog_icon_dark=0x7f060112;
    public static final int mr_dynamic_dialog_icon_light=0x7f060113;
    public static final int mr_dynamic_dialog_route_text_color_dark=0x7f060114;
    public static final int mr_dynamic_dialog_route_text_color_light=0x7f060115;
    public static final int mtrl_btn_bg_color_selector=0x7f060116;
    public static final int mtrl_btn_ripple_color=0x7f060117;
    public static final int mtrl_btn_stroke_color_selector=0x7f060118;
    public static final int mtrl_btn_text_btn_bg_color_selector=0x7f060119;
    public static final int mtrl_btn_text_btn_ripple_color=0x7f06011a;
    public static final int mtrl_btn_text_color_disabled=0x7f06011b;
    public static final int mtrl_btn_text_color_selector=0x7f06011c;
    public static final int mtrl_btn_transparent_bg_color=0x7f06011d;
    public static final int mtrl_calendar_item_stroke_color=0x7f06011e;
    public static final int mtrl_calendar_selected_range=0x7f06011f;
    public static final int mtrl_card_view_foreground=0x7f060120;
    public static final int mtrl_card_view_ripple=0x7f060121;
    public static final int mtrl_chip_background_color=0x7f060122;
    public static final int mtrl_chip_close_icon_tint=0x7f060123;
    public static final int mtrl_chip_surface_color=0x7f060124;
    public static final int mtrl_chip_text_color=0x7f060125;
    public static final int mtrl_choice_chip_background_color=0x7f060126;
    public static final int mtrl_choice_chip_ripple_color=0x7f060127;
    public static final int mtrl_choice_chip_text_color=0x7f060128;
    public static final int mtrl_error=0x7f060129;
    public static final int mtrl_fab_bg_color_selector=0x7f06012a;
    public static final int mtrl_fab_icon_text_color_selector=0x7f06012b;
    public static final int mtrl_fab_ripple_color=0x7f06012c;
    public static final int mtrl_filled_background_color=0x7f06012d;
    public static final int mtrl_filled_icon_tint=0x7f06012e;
    public static final int mtrl_filled_stroke_color=0x7f06012f;
    public static final int mtrl_indicator_text_color=0x7f060130;
    public static final int mtrl_navigation_bar_colored_item_tint=0x7f060131;
    public static final int mtrl_navigation_bar_colored_ripple_color=0x7f060132;
    public static final int mtrl_navigation_bar_item_tint=0x7f060133;
    public static final int mtrl_navigation_bar_ripple_color=0x7f060134;
    public static final int mtrl_navigation_item_background_color=0x7f060135;
    public static final int mtrl_navigation_item_icon_tint=0x7f060136;
    public static final int mtrl_navigation_item_text_color=0x7f060137;
    public static final int mtrl_on_primary_text_btn_text_color_selector=0x7f060138;
    public static final int mtrl_on_surface_ripple_color=0x7f060139;
    public static final int mtrl_outlined_icon_tint=0x7f06013a;
    public static final int mtrl_outlined_stroke_color=0x7f06013b;
    public static final int mtrl_popupmenu_overlay_color=0x7f06013c;
    public static final int mtrl_scrim_color=0x7f06013d;
    public static final int mtrl_tabs_colored_ripple_color=0x7f06013e;
    public static final int mtrl_tabs_icon_color_selector=0x7f06013f;
    public static final int mtrl_tabs_icon_color_selector_colored=0x7f060140;
    public static final int mtrl_tabs_legacy_text_color_selector=0x7f060141;
    public static final int mtrl_tabs_ripple_color=0x7f060142;
    public static final int mtrl_text_btn_text_color_selector=0x7f060143;
    public static final int mtrl_textinput_default_box_stroke_color=0x7f060144;
    public static final int mtrl_textinput_disabled_color=0x7f060145;
    public static final int mtrl_textinput_filled_box_default_background_color=0x7f060146;
    public static final int mtrl_textinput_focused_box_stroke_color=0x7f060147;
    public static final int mtrl_textinput_hovered_box_stroke_color=0x7f060148;
    public static final int notification_action_color_filter=0x7f060149;
    public static final int notification_alert_color=0x7f06014a;
    /**
     * notification settings
     */
    public static final int notification_block_color=0x7f06014b;
    public static final int notification_history_background=0x7f06014c;
    public static final int notification_icon_bg_color=0x7f06014d;
    public static final int notification_importance_button_selected=0x7f06014e;
    /**
     * material blue 200
     */
    public static final int notification_importance_button_unselected=0x7f06014f;
    /**
     * material blue 700
     */
    public static final int notification_importance_selection_bg=0x7f060150;
    public static final int notification_material_background_media_default_color=0x7f060151;
    public static final int notification_silence_color=0x7f060152;
    /**
     * Material Cyan 600
     */
    public static final int palette_list_color_blue=0x7f060153;
    /**
     * Material Green 600
     */
    public static final int palette_list_color_cyan=0x7f060154;
    /**
     * Material Purple 600
     */
    public static final int palette_list_color_gray=0x7f060155;
    /**
     * Material Yellow 600
     */
    public static final int palette_list_color_green=0x7f060156;
    /**
     * Material Red 600
     */
    public static final int palette_list_color_orange=0x7f060157;
    /**
     * Material Blue 600
     */
    public static final int palette_list_color_purple=0x7f060158;
    public static final int palette_list_color_red=0x7f060159;
    /**
     * Material Orange 600
     */
    public static final int palette_list_color_yellow=0x7f06015a;
    /**
     * Material Cyan 300
     */
    public static final int palette_list_dark_mode_color_blue=0x7f06015b;
    /**
     * Material Green 300
     */
    public static final int palette_list_dark_mode_color_cyan=0x7f06015c;
    /**
     * Material Purple 300
     */
    public static final int palette_list_dark_mode_color_gray=0x7f06015d;
    /**
     * Material Yellow 300
     */
    public static final int palette_list_dark_mode_color_green=0x7f06015e;
    /**
     * Material Red 300
     */
    public static final int palette_list_dark_mode_color_orange=0x7f06015f;
    /**
     * Material Blue 300
     */
    public static final int palette_list_dark_mode_color_purple=0x7f060160;
    /**
     * Palette list preference dark mode colors.
     */
    public static final int palette_list_dark_mode_color_red=0x7f060161;
    /**
     * Material Orange 300
     */
    public static final int palette_list_dark_mode_color_yellow=0x7f060162;
    /**
     * Palette list preference colors.
     * Palette list preference colors.
     */
    public static final int palette_list_gradient_background=0x7f060163;
    public static final int preference_fallback_accent_color=0x7f060164;
    public static final int preference_highlight_color=0x7f060165;
    public static final int primary_dark_material_dark=0x7f060166;
    public static final int primary_dark_material_light=0x7f060167;
    public static final int primary_material_dark=0x7f060168;
    public static final int primary_material_light=0x7f060169;
    public static final int primary_text_default_material_dark=0x7f06016a;
    public static final int primary_text_default_material_light=0x7f06016b;
    public static final int primary_text_disabled_material_dark=0x7f06016c;
    public static final int primary_text_disabled_material_light=0x7f06016d;
    public static final int qr_background_color=0x7f06016e;
    /**
     * QR code scanner colors
     */
    public static final int qr_corner_line_color=0x7f06016f;
    public static final int qr_focused_corner_line_color=0x7f060170;
    public static final int radiobutton_themeable_attribute_color=0x7f060171;
    public static final int ripple_color=0x7f060172;
    public static final int ripple_material_dark=0x7f060173;
    /**
     * Material inverse ripple color, useful for inverted backgrounds.
     * Material inverse ripple color, useful for inverted backgrounds.
     */
    public static final int ripple_material_inverse=0x7f060174;
    public static final int ripple_material_light=0x7f060175;
    public static final int running_processes_free_ram=0x7f060176;
    public static final int running_processes_system_ram=0x7f060177;
    /**
     * Search bar background color
     */
    public static final int search_bar_background=0x7f060178;
    public static final int secondary_text_default_material_dark=0x7f060179;
    public static final int secondary_text_default_material_light=0x7f06017a;
    public static final int secondary_text_disabled_material_dark=0x7f06017b;
    public static final int secondary_text_disabled_material_light=0x7f06017c;
    public static final int settings_bar_view_1_color=0x7f06017d;
    public static final int settings_bar_view_2_color=0x7f06017e;
    public static final int settings_bar_view_3_color=0x7f06017f;
    public static final int settings_bar_view_4_color=0x7f060180;
    /**
     * Dialog error color.
     * Dialog error color.
     */
    public static final int settings_dialog_colorError=0x7f060181;
    public static final int settingslib_accent_device_default_dark=0x7f060182;
    public static final int settingslib_accent_device_default_light=0x7f060183;
    public static final int settingslib_accent_primary_device_default=0x7f060184;
    /**
     * copy from accent_primary_variant_light_device_default
     * copy from accent_primary_variant_dark_device_default
     */
    public static final int settingslib_accent_primary_variant=0x7f060185;
    public static final int settingslib_accent_secondary_device_default=0x7f060186;
    public static final int settingslib_background_device_default_dark=0x7f060187;
    public static final int settingslib_background_device_default_light=0x7f060188;
    public static final int settingslib_colorSurfaceHeader=0x7f060189;
    /**
     * Red 600
     * Red 300
     */
    public static final int settingslib_colorSurfaceVariant=0x7f06018a;
    public static final int settingslib_color_blue100=0x7f06018b;
    public static final int settingslib_color_blue300=0x7f06018c;
    public static final int settingslib_color_blue400=0x7f06018d;
    public static final int settingslib_color_blue50=0x7f06018e;
    /**
     * Dynamic colors
     */
    public static final int settingslib_color_blue600=0x7f06018f;
    public static final int settingslib_color_cyan100=0x7f060190;
    public static final int settingslib_color_cyan300=0x7f060191;
    public static final int settingslib_color_cyan400=0x7f060192;
    public static final int settingslib_color_cyan600=0x7f060193;
    public static final int settingslib_color_green100=0x7f060194;
    public static final int settingslib_color_green400=0x7f060195;
    public static final int settingslib_color_green50=0x7f060196;
    public static final int settingslib_color_green600=0x7f060197;
    public static final int settingslib_color_grey200=0x7f060198;
    public static final int settingslib_color_grey300=0x7f060199;
    public static final int settingslib_color_grey400=0x7f06019a;
    public static final int settingslib_color_grey600=0x7f06019b;
    public static final int settingslib_color_grey700=0x7f06019c;
    public static final int settingslib_color_grey800=0x7f06019d;
    public static final int settingslib_color_grey900=0x7f06019e;
    public static final int settingslib_color_orange100=0x7f06019f;
    public static final int settingslib_color_orange300=0x7f0601a0;
    public static final int settingslib_color_orange400=0x7f0601a1;
    public static final int settingslib_color_orange600=0x7f0601a2;
    public static final int settingslib_color_pink100=0x7f0601a3;
    public static final int settingslib_color_pink300=0x7f0601a4;
    public static final int settingslib_color_pink400=0x7f0601a5;
    public static final int settingslib_color_pink600=0x7f0601a6;
    public static final int settingslib_color_purple100=0x7f0601a7;
    public static final int settingslib_color_purple300=0x7f0601a8;
    public static final int settingslib_color_purple400=0x7f0601a9;
    public static final int settingslib_color_purple600=0x7f0601aa;
    public static final int settingslib_color_red100=0x7f0601ab;
    public static final int settingslib_color_red400=0x7f0601ac;
    public static final int settingslib_color_red50=0x7f0601ad;
    public static final int settingslib_color_red600=0x7f0601ae;
    public static final int settingslib_color_yellow100=0x7f0601af;
    public static final int settingslib_color_yellow400=0x7f0601b0;
    public static final int settingslib_color_yellow50=0x7f0601b1;
    public static final int settingslib_color_yellow600=0x7f0601b2;
    /**
     * Dialog accent color
     * Dialog accent color
     */
    public static final int settingslib_dialog_accent=0x7f0601b3;
    /**
     * Dialog background color
     * Dialog background color.
     */
    public static final int settingslib_dialog_background=0x7f0601b4;
    /**
     * Dialog error color.
     * Dialog error color.
     */
    public static final int settingslib_dialog_colorError=0x7f0601b5;
    public static final int settingslib_primary_dark_device_default_settings=0x7f0601b6;
    public static final int settingslib_primary_device_default_settings_light=0x7f0601b7;
    public static final int settingslib_protection_color=0x7f0601b8;
    /**
     * Material next state off color
     */
    public static final int settingslib_state_off_color=0x7f0601b9;
    /**
     * Material next state on color
     */
    public static final int settingslib_state_on_color=0x7f0601ba;
    public static final int settingslib_surface_light=0x7f0601bb;
    public static final int settingslib_switch_thumb_color=0x7f0601bc;
    public static final int settingslib_switch_track_color=0x7f0601bd;
    public static final int settingslib_switch_track_off=0x7f0601be;
    public static final int settingslib_switch_track_on=0x7f0601bf;
    public static final int settingslib_switchbar_switch_thumb_tint=0x7f0601c0;
    public static final int settingslib_switchbar_switch_track_tint=0x7f0601c1;
    public static final int settingslib_text_color_primary_device_default=0x7f0601c2;
    /**
     * Material next thumb disable color
     * Material next thumb disable color
     */
    public static final int settingslib_thumb_disabled_color=0x7f0601c3;
    /**
     * Material next thumb off color
     * Material next thumb off color
     */
    public static final int settingslib_thumb_off_color=0x7f0601c4;
    /**
     * Material next track off color
     * Material next track off color
     */
    public static final int settingslib_track_off_color=0x7f0601c5;
    /**
     * Material next track on color
     * Material next track on color
     */
    public static final int settingslib_track_on_color=0x7f0601c6;
    public static final int setup_wizard_wifi_color_dark=0x7f0601c7;
    public static final int setup_wizard_wifi_color_light=0x7f0601c8;
    /**
     * Color for the background of the shortcut icons.
     */
    public static final int shortcut_background=0x7f0601c9;
    public static final int sim_noitification=0x7f0601ca;
    public static final int sliding_tab_title_text_color=0x7f0601cb;
    public static final int storage_wizard_button=0x7f0601cc;
    public static final int storage_wizard_button_red=0x7f0601cd;
    public static final int suc_customization_button_highlight_default=0x7f0601ce;
    public static final int suc_customization_button_highlight_ripple=0x7f0601cf;
    public static final int success_color_device_default_dark=0x7f0601d0;
    public static final int success_color_device_default_light=0x7f0601d1;
    /**
     * General colors
     */
    public static final int sud_color_accent_dark=0x7f0601d2;
    /**
     * GLIF colors
     */
    public static final int sud_color_accent_glif_dark=0x7f0601d3;
    public static final int sud_color_accent_glif_light=0x7f0601d4;
    /**
     * Default color for BC
     */
    public static final int sud_color_accent_glif_v3_dark=0x7f0601d5;
    public static final int sud_color_accent_glif_v3_light=0x7f0601d6;
    public static final int sud_color_accent_light=0x7f0601d7;
    public static final int sud_color_background_dark=0x7f0601d8;
    public static final int sud_color_background_light=0x7f0601d9;
    /**
     * Color for error text
     */
    public static final int sud_color_error_text_dark=0x7f0601da;
    public static final int sud_color_error_text_light=0x7f0601db;
    /**
     * Accent color
     * Accent color
     */
    public static final int sud_dynamic_color_accent_glif_v3=0x7f0601dc;
    public static final int sud_dynamic_color_accent_glif_v3_dark=0x7f0601dd;
    public static final int sud_dynamic_color_accent_glif_v3_light=0x7f0601de;
    public static final int sud_dynamic_switch_thumb_off_dark=0x7f0601df;
    public static final int sud_dynamic_switch_thumb_off_light=0x7f0601e0;
    public static final int sud_dynamic_switch_thumb_on_dark=0x7f0601e1;
    public static final int sud_dynamic_switch_thumb_on_light=0x7f0601e2;
    public static final int sud_dynamic_switch_track_off_dark=0x7f0601e3;
    public static final int sud_dynamic_switch_track_off_light=0x7f0601e4;
    public static final int sud_dynamic_switch_track_on_dark=0x7f0601e5;
    public static final int sud_dynamic_switch_track_on_light=0x7f0601e6;
    public static final int sud_error_warning_default_dark=0x7f0601e7;
    public static final int sud_error_warning_default_light=0x7f0601e8;
    public static final int sud_flat_button_highlight=0x7f0601e9;
    public static final int sud_glif_background_color_dark=0x7f0601ea;
    public static final int sud_glif_background_color_light=0x7f0601eb;
    public static final int sud_glif_edit_text_bg_dark_color=0x7f0601ec;
    public static final int sud_glif_edit_text_bg_light_color=0x7f0601ed;
    public static final int sud_glif_v3_dialog_background_color_dark=0x7f0601ee;
    public static final int sud_glif_v3_dialog_background_color_light=0x7f0601ef;
    public static final int sud_glif_v3_nav_bar_color_dark=0x7f0601f0;
    public static final int sud_glif_v3_nav_bar_color_light=0x7f0601f1;
    public static final int sud_glif_v3_nav_bar_divider_color_dark=0x7f0601f2;
    public static final int sud_glif_v3_nav_bar_divider_color_light=0x7f0601f3;
    public static final int sud_glif_v3_text_color_dark=0x7f0601f4;
    public static final int sud_glif_v3_text_color_light=0x7f0601f5;
    public static final int sud_glif_window_bg_dark_color=0x7f0601f6;
    public static final int sud_glif_window_bg_light_color=0x7f0601f7;
    public static final int sud_inactive_default_dark=0x7f0601f8;
    public static final int sud_inactive_default_light=0x7f0601f9;
    public static final int sud_link_color_dark=0x7f0601fa;
    public static final int sud_link_color_light=0x7f0601fb;
    public static final int sud_list_item_icon_color_dark=0x7f0601fc;
    public static final int sud_list_item_icon_color_light=0x7f0601fd;
    /**
     * Navigation bar colors
     */
    public static final int sud_navbar_bg_dark=0x7f0601fe;
    public static final int sud_navbar_bg_light=0x7f0601ff;
    public static final int sud_portal_pending_progress=0x7f060200;
    public static final int sud_portal_pending_progress_dark=0x7f060201;
    public static final int sud_portal_pending_progress_light=0x7f060202;
    public static final int sud_primary_default_text_dark=0x7f060203;
    public static final int sud_primary_default_text_light=0x7f060204;
    public static final int sud_progress_bar_color_dark=0x7f060205;
    public static final int sud_progress_bar_color_light=0x7f060206;
    public static final int sud_secondary_default_text_dark=0x7f060207;
    public static final int sud_secondary_default_text_light=0x7f060208;
    public static final int sud_switch_thumb_off=0x7f060209;
    public static final int sud_switch_thumb_off_dark=0x7f06020a;
    public static final int sud_switch_thumb_off_light=0x7f06020b;
    public static final int sud_switch_thumb_on=0x7f06020c;
    public static final int sud_switch_thumb_on_dark=0x7f06020d;
    public static final int sud_switch_thumb_on_light=0x7f06020e;
    public static final int sud_switch_track_off=0x7f06020f;
    public static final int sud_switch_track_off_dark=0x7f060210;
    public static final int sud_switch_track_off_light=0x7f060211;
    public static final int sud_switch_track_on=0x7f060212;
    public static final int sud_switch_track_on_dark=0x7f060213;
    public static final int sud_switch_track_on_light=0x7f060214;
    public static final int sud_system_accent1_100=0x7f060215;
    public static final int sud_system_accent1_200=0x7f060216;
    public static final int sud_system_accent1_300=0x7f060217;
    public static final int sud_system_accent1_600=0x7f060218;
    public static final int sud_system_accent_icon_text_button=0x7f060219;
    public static final int sud_system_background_surface=0x7f06021a;
    public static final int sud_system_button_surface=0x7f06021b;
    public static final int sud_system_button_text=0x7f06021c;
    public static final int sud_system_dividing_line=0x7f06021d;
    public static final int sud_system_error_warning=0x7f06021e;
    public static final int sud_system_fallback_accent=0x7f06021f;
    public static final int sud_system_neutral1_0=0x7f060220;
    public static final int sud_system_neutral1_400=0x7f060221;
    public static final int sud_system_neutral1_50=0x7f060222;
    public static final int sud_system_neutral1_700=0x7f060223;
    public static final int sud_system_neutral1_800=0x7f060224;
    public static final int sud_system_neutral1_900=0x7f060225;
    public static final int sud_system_neutral2_100=0x7f060226;
    public static final int sud_system_neutral2_200=0x7f060227;
    public static final int sud_system_neutral2_300=0x7f060228;
    public static final int sud_system_neutral2_400=0x7f060229;
    public static final int sud_system_neutral2_50=0x7f06022a;
    public static final int sud_system_neutral2_500=0x7f06022b;
    public static final int sud_system_neutral2_700=0x7f06022c;
    public static final int sud_system_primary_text=0x7f06022d;
    public static final int sud_system_secondary_text=0x7f06022e;
    public static final int sud_system_success_done=0x7f06022f;
    public static final int sud_system_tertiary_text_inactive=0x7f060230;
    public static final int sud_uniformity_backdrop_color=0x7f060231;
    public static final int switch_thumb_disabled_material_dark=0x7f060232;
    public static final int switch_thumb_disabled_material_light=0x7f060233;
    public static final int switch_thumb_material_dark=0x7f060234;
    public static final int switch_thumb_material_light=0x7f060235;
    public static final int switch_thumb_normal_material_dark=0x7f060236;
    public static final int switch_thumb_normal_material_light=0x7f060237;
    /**
     * End of dashboard/homepage icon background colors
     */
    public static final int switchbar_background_color=0x7f060238;
    public static final int switchbar_switch_thumb_tint=0x7f060239;
    public static final int switchbar_switch_track_tint=0x7f06023a;
    public static final int test_mtrl_calendar_day=0x7f06023b;
    public static final int test_mtrl_calendar_day_selected=0x7f06023c;
    public static final int timestamp_text_incoming=0x7f06023d;
    public static final int timestamp_text_outgoing=0x7f06023e;
    public static final int title_color=0x7f06023f;
    public static final int tooltip_background_dark=0x7f060240;
    public static final int tooltip_background_light=0x7f060241;
    public static final int unlock_pattern_view_success_color=0x7f060242;
    /**
     * 38% black
     */
    public static final int usage_graph_dots=0x7f060243;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    public static final int abc_action_bar_default_height_material=0x7f070002;
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    public static final int abc_action_bar_stacked_max_height=0x7f070009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000c;
    public static final int abc_action_button_min_height_material=0x7f07000d;
    public static final int abc_action_button_min_width_material=0x7f07000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f07000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f070010;
    public static final int abc_alert_dialog_button_dimen=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    public static final int abc_button_padding_vertical_material=0x7f070015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    public static final int abc_config_prefDialogWidth=0x7f070017;
    public static final int abc_control_corner_material=0x7f070018;
    public static final int abc_control_inset_material=0x7f070019;
    public static final int abc_control_padding_material=0x7f07001a;
    public static final int abc_dialog_corner_radius_material=0x7f07001b;
    public static final int abc_dialog_fixed_height_major=0x7f07001c;
    public static final int abc_dialog_fixed_height_minor=0x7f07001d;
    public static final int abc_dialog_fixed_width_major=0x7f07001e;
    public static final int abc_dialog_fixed_width_minor=0x7f07001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f070020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070021;
    public static final int abc_dialog_min_width_major=0x7f070022;
    public static final int abc_dialog_min_width_minor=0x7f070023;
    public static final int abc_dialog_padding_material=0x7f070024;
    public static final int abc_dialog_padding_top_material=0x7f070025;
    public static final int abc_dialog_title_divider_material=0x7f070026;
    public static final int abc_disabled_alpha_material_dark=0x7f070027;
    public static final int abc_disabled_alpha_material_light=0x7f070028;
    public static final int abc_dropdownitem_icon_width=0x7f070029;
    public static final int abc_dropdownitem_text_padding_left=0x7f07002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002d;
    public static final int abc_edit_text_inset_top_material=0x7f07002e;
    public static final int abc_floating_window_z=0x7f07002f;
    public static final int abc_list_item_height_large_material=0x7f070030;
    public static final int abc_list_item_height_material=0x7f070031;
    public static final int abc_list_item_height_small_material=0x7f070032;
    public static final int abc_list_item_padding_horizontal_material=0x7f070033;
    public static final int abc_panel_menu_list_width=0x7f070034;
    public static final int abc_progress_bar_height_material=0x7f070035;
    public static final int abc_search_view_preferred_height=0x7f070036;
    public static final int abc_search_view_preferred_width=0x7f070037;
    public static final int abc_seekbar_track_background_height_material=0x7f070038;
    public static final int abc_seekbar_track_progress_height_material=0x7f070039;
    public static final int abc_select_dialog_padding_start_material=0x7f07003a;
    public static final int abc_slice_action_row_height=0x7f07003b;
    public static final int abc_slice_big_pic_max_height=0x7f07003c;
    public static final int abc_slice_big_pic_min_height=0x7f07003d;
    public static final int abc_slice_grid_gutter=0x7f07003e;
    public static final int abc_slice_grid_image_min_width=0x7f07003f;
    public static final int abc_slice_grid_image_only_height=0x7f070040;
    public static final int abc_slice_grid_image_text_height=0x7f070041;
    public static final int abc_slice_grid_max_height=0x7f070042;
    public static final int abc_slice_grid_min_height=0x7f070043;
    public static final int abc_slice_grid_raw_image_text_offset=0x7f070044;
    public static final int abc_slice_grid_small_image_text_height=0x7f070045;
    public static final int abc_slice_grid_text_inner_padding=0x7f070046;
    public static final int abc_slice_grid_text_padding=0x7f070047;
    public static final int abc_slice_icon_size=0x7f070048;
    public static final int abc_slice_large_height=0x7f070049;
    public static final int abc_slice_padding=0x7f07004a;
    public static final int abc_slice_row_active_input_height=0x7f07004b;
    public static final int abc_slice_row_max_height=0x7f07004c;
    public static final int abc_slice_row_min_height=0x7f07004d;
    public static final int abc_slice_row_range_height=0x7f07004e;
    public static final int abc_slice_row_range_inline_height=0x7f07004f;
    public static final int abc_slice_row_range_multi_text_height=0x7f070050;
    public static final int abc_slice_row_range_single_text_height=0x7f070051;
    public static final int abc_slice_row_selection_height=0x7f070052;
    public static final int abc_slice_row_selection_multi_text_height=0x7f070053;
    public static final int abc_slice_row_selection_single_text_height=0x7f070054;
    public static final int abc_slice_shortcut_size=0x7f070055;
    public static final int abc_slice_small_height=0x7f070056;
    public static final int abc_slice_small_image_size=0x7f070057;
    public static final int abc_star_big=0x7f070058;
    public static final int abc_star_medium=0x7f070059;
    public static final int abc_star_small=0x7f07005a;
    public static final int abc_switch_padding=0x7f07005b;
    public static final int abc_text_size_body_1_material=0x7f07005c;
    public static final int abc_text_size_body_2_material=0x7f07005d;
    public static final int abc_text_size_button_material=0x7f07005e;
    public static final int abc_text_size_caption_material=0x7f07005f;
    public static final int abc_text_size_display_1_material=0x7f070060;
    public static final int abc_text_size_display_2_material=0x7f070061;
    public static final int abc_text_size_display_3_material=0x7f070062;
    public static final int abc_text_size_display_4_material=0x7f070063;
    public static final int abc_text_size_headline_material=0x7f070064;
    public static final int abc_text_size_large_material=0x7f070065;
    public static final int abc_text_size_medium_material=0x7f070066;
    public static final int abc_text_size_menu_header_material=0x7f070067;
    public static final int abc_text_size_menu_material=0x7f070068;
    public static final int abc_text_size_small_material=0x7f070069;
    public static final int abc_text_size_subhead_material=0x7f07006a;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f07006b;
    public static final int abc_text_size_title_material=0x7f07006c;
    public static final int abc_text_size_title_material_toolbar=0x7f07006d;
    public static final int accessibility_button_preference_padding_top_bottom=0x7f07006e;
    public static final int accessibility_button_preview_height=0x7f07006f;
    public static final int accessibility_icon_foreground_size=0x7f070070;
    /**
     * Accessibility icon
     */
    public static final int accessibility_icon_size=0x7f070071;
    public static final int accessibility_imageview_size=0x7f070072;
    /**
     * Accessibility Settings
     */
    public static final int accessibility_layout_margin_start_end=0x7f070073;
    /**
     * The margin between two Textviews
     */
    public static final int accessibility_textview_layout_margin_bottom=0x7f070074;
    public static final int action_bar_size=0x7f070075;
    public static final int action_bar_switch_padding=0x7f070076;
    /**
     * ActionBar contentInsetStart
     * ActionBar contentInsetStart
     * ActionBar contentInsetStart
     * ActionBar contentInsetStart
     */
    public static final int actionbar_contentInsetStart=0x7f070077;
    /**
     * ActionBar height
     * ActionBar height
     * ActionBar height
     */
    public static final int actionbar_size=0x7f070078;
    public static final int actionbar_subsettings_contentInsetStart=0x7f070079;
    /**
     * Stroke size of adaptive outline
     */
    public static final int adaptive_outline_stroke=0x7f07007a;
    public static final int admin_details_dialog_icon_size=0x7f07007b;
    public static final int admin_details_dialog_learn_more_button_minWidth=0x7f07007c;
    public static final int admin_details_dialog_learn_more_button_padding=0x7f07007d;
    public static final int admin_details_dialog_learn_more_button_top_margin=0x7f07007e;
    public static final int admin_details_dialog_link_padding_top=0x7f07007f;
    /**
     * Admin support contact details dialog.
     */
    public static final int admin_details_dialog_padding=0x7f070080;
    public static final int admin_details_dialog_padding_bottom=0x7f070081;
    public static final int admin_details_dialog_title_bottom_padding=0x7f070082;
    public static final int advanced_bluetooth_battery_height=0x7f070083;
    public static final int advanced_bluetooth_battery_meter_height=0x7f070084;
    /**
     * Battery meter icon size of advanced bluetooth device
     */
    public static final int advanced_bluetooth_battery_meter_width=0x7f070085;
    public static final int advanced_bluetooth_battery_right_margin=0x7f070086;
    public static final int advanced_bluetooth_battery_width=0x7f070087;
    /**
     * Header title size of advanced bluetooth device
     */
    public static final int advanced_bluetooth_header_title_text_size=0x7f070088;
    /**
     * Advanced dashboard foreground image inset (from background edge to foreground edge)
     */
    public static final int advanced_dashboard_tile_foreground_image_inset=0x7f070089;
    /**
     * Size of advanced icon
     */
    public static final int advanced_icon_size=0x7f07008a;
    /**
     * Internet Preferences
     */
    public static final int airplane_mode_message_margin_vertical=0x7f07008b;
    public static final int app_icon_min_width=0x7f07008c;
    public static final int app_icon_size=0x7f07008d;
    public static final int app_preference_padding_start=0x7f07008e;
    public static final int appcompat_dialog_background_inset=0x7f07008f;
    /**
     * The y translation to apply at the start in appear animations.
     */
    public static final int appear_y_translation_start=0x7f070090;
    public static final int appwidget_height=0x7f070091;
    public static final int appwidget_width=0x7f070092;
    public static final int autoclick_preview_height=0x7f070093;
    /**
     * Avatar
     */
    public static final int avatar_length=0x7f070094;
    public static final int avatar_margin_end=0x7f070095;
    public static final int avatar_margin_top=0x7f070096;
    public static final int back_gesture_indicator_width=0x7f070097;
    public static final int badge_size=0x7f070098;
    public static final int balance_seekbar_center_marker_height=0x7f070099;
    public static final int balance_seekbar_center_marker_width=0x7f07009a;
    public static final int battery_height=0x7f07009b;
    public static final int battery_history_chart_height=0x7f07009c;
    public static final int battery_meter_height=0x7f07009d;
    /**
     * Battery meter view size
     */
    public static final int battery_meter_width=0x7f07009e;
    public static final int battery_powersave_outline_thickness=0x7f07009f;
    public static final int battery_width=0x7f0700a0;
    public static final int bind_app_widget_dialog_checkbox_bottom_padding=0x7f0700a1;
    public static final int bluetooth_checkbox_padding=0x7f0700a2;
    /**
     * CompanionAppWidgetPreferencce Padding
     */
    public static final int bluetooth_companion_app_widget=0x7f0700a3;
    /**
     * Bluetooth Preferences
     */
    public static final int bluetooth_dialog_padding=0x7f0700a4;
    public static final int bluetooth_dialog_padding_top=0x7f0700a5;
    public static final int bluetooth_pairing_edittext_padding=0x7f0700a6;
    public static final int bluetooth_pairing_padding=0x7f0700a7;
    public static final int bt_battery_padding=0x7f0700a8;
    /**
     * Elevation of bluetooth icon
     */
    public static final int bt_icon_elevation=0x7f0700a9;
    /**
     * Size of nearby icon
     */
    public static final int bt_nearby_icon_size=0x7f0700aa;
    /**
     * Default text size for caption preview samples. Uses dp rather than sp because captions are not scaled.
     */
    public static final int caption_preview_text_size=0x7f0700ab;
    public static final int captioning_preview_height=0x7f0700ac;
    public static final int cardview_compat_inset_shadow=0x7f0700ad;
    public static final int cardview_default_elevation=0x7f0700ae;
    public static final int cardview_default_radius=0x7f0700af;
    public static final int chartview_divider_height=0x7f0700b0;
    public static final int chartview_divider_width=0x7f0700b1;
    /**
     * Battery usage chart view component
     */
    public static final int chartview_text_padding=0x7f0700b2;
    public static final int chartview_trapezoid_margin_bottom=0x7f0700b3;
    public static final int chartview_trapezoid_margin_start=0x7f0700b4;
    public static final int chartview_trapezoid_radius=0x7f0700b5;
    public static final int checkbox_layout_padding=0x7f0700b6;
    /**
     * CheckBoxPreference
     */
    public static final int checkbox_widget_min_width=0x7f0700b7;
    /**
     * Minimum height for setting a lock pattern
     */
    public static final int choose_lockscreen_min_height=0x7f0700b8;
    public static final int circle_avatar_size=0x7f0700b9;
    public static final int clock_face_margin_start=0x7f0700ba;
    public static final int color_mode_preview_height=0x7f0700bb;
    /**
     * Color picker
     */
    public static final int color_swatch_size=0x7f0700bc;
    public static final int color_swatch_stroke_width=0x7f0700bd;
    public static final int compat_button_inset_horizontal_material=0x7f0700be;
    public static final int compat_button_inset_vertical_material=0x7f0700bf;
    public static final int compat_button_padding_horizontal_material=0x7f0700c0;
    public static final int compat_button_padding_vertical_material=0x7f0700c1;
    public static final int compat_control_corner_material=0x7f0700c2;
    public static final int compat_notification_large_icon_max_height=0x7f0700c3;
    public static final int compat_notification_large_icon_max_width=0x7f0700c4;
    public static final int confirm_credentials_layout_width=0x7f0700c5;
    /**
     * Confirm device credentials
     */
    public static final int confirm_credentials_security_method_margin=0x7f0700c6;
    public static final int confirm_credentials_side_margin=0x7f0700c7;
    public static final int confirm_credentials_top_margin=0x7f0700c8;
    public static final int confirm_credentials_top_padding=0x7f0700c9;
    public static final int content_margin_left=0x7f0700ca;
    public static final int contextual_card_corner_radius=0x7f0700cb;
    public static final int contextual_card_dismissal_button_margin_end=0x7f0700cc;
    public static final int contextual_card_dismissal_button_margin_start=0x7f0700cd;
    /**
     * Homepage dismissal cards size and padding
     */
    public static final int contextual_card_dismissal_margin_top=0x7f0700ce;
    public static final int contextual_card_dismissal_side_margin=0x7f0700cf;
    public static final int contextual_card_icon_padding_start=0x7f0700d0;
    /**
     * Homepage cards size and padding
     */
    public static final int contextual_card_icon_size=0x7f0700d1;
    public static final int contextual_card_padding_end=0x7f0700d2;
    public static final int contextual_card_side_margin=0x7f0700d3;
    public static final int contextual_card_text_padding_start=0x7f0700d4;
    public static final int contextual_card_vertical_margin=0x7f0700d5;
    /**
     * Condition cards size and padding
     */
    public static final int contextual_condition_card_title_margin_bottom=0x7f0700d6;
    public static final int contextual_condition_footer_height=0x7f0700d7;
    public static final int contextual_condition_footer_padding_end=0x7f0700d8;
    public static final int contextual_condition_footer_padding_top=0x7f0700d9;
    public static final int contextual_condition_full_card_padding_bottom=0x7f0700da;
    public static final int contextual_condition_full_card_padding_end=0x7f0700db;
    public static final int contextual_condition_full_card_padding_start=0x7f0700dc;
    public static final int contextual_condition_full_card_padding_top=0x7f0700dd;
    public static final int contextual_condition_half_card_padding_top=0x7f0700de;
    public static final int contextual_condition_half_card_summary_margin_bottom=0x7f0700df;
    public static final int contextual_condition_half_card_title_margin_top=0x7f0700e0;
    public static final int contextual_condition_header_icon_margin_end=0x7f0700e1;
    public static final int contextual_condition_header_icon_width_height=0x7f0700e2;
    public static final int contextual_condition_header_icons_margin_start=0x7f0700e3;
    public static final int contextual_condition_header_indicator_padding_end=0x7f0700e4;
    public static final int contextual_condition_header_indicator_padding_start=0x7f0700e5;
    public static final int contextual_condition_header_indicator_padding_top=0x7f0700e6;
    public static final int contextual_condition_header_padding_bottom=0x7f0700e7;
    public static final int contextual_condition_header_padding_top=0x7f0700e8;
    public static final int contextual_full_card_padding_end=0x7f0700e9;
    public static final int contextual_half_card_padding_bottom=0x7f0700ea;
    public static final int contextual_half_card_padding_top=0x7f0700eb;
    public static final int contextual_half_card_title_margin_top=0x7f0700ec;
    public static final int conversation_bubble_width_snap=0x7f0700ed;
    public static final int conversation_icon_size=0x7f0700ee;
    public static final int conversation_message_contact_icon_text_size=0x7f0700ef;
    /**
     * Display, Screen zoom
     */
    public static final int conversation_message_list_padding=0x7f0700f0;
    public static final int conversation_message_text_size=0x7f0700f1;
    public static final int conversation_status_text_size=0x7f0700f2;
    public static final int crypt_clock_size=0x7f0700f3;
    /**
     * CryptKeeper edit text ime icon padding
     */
    public static final int crypt_keeper_edit_text_ime_padding=0x7f0700f4;
    /**
     * CryptKeeper emergency call button dimensions
     */
    public static final int crypt_keeper_emergency_call_space_above=0x7f0700f5;
    /**
     * CryptKeeper top margin for password/pin screen
     * CryptKeeper top margin for password/pin screen
     * CryptKeeper top margin for password/pin screen
     */
    public static final int crypt_keeper_password_top_margin=0x7f0700f6;
    /**
     * CryptKeeper password/pin width
     * CryptKeeper password/pin width
     */
    public static final int crypt_keeper_password_width=0x7f0700f7;
    /**
     * CryptKeeper pattern margin on phone
     */
    public static final int crypt_keeper_pattern_margin=0x7f0700f8;
    /**
     * CryptKeeper separation between status and pattern
     */
    public static final int crypt_keeper_pattern_separator=0x7f0700f9;
    /**
     * CryptKeeper pattern size for tablet
     */
    public static final int crypt_keeper_pattern_size=0x7f0700fa;
    /**
     * CryptKeeper top margin for pattern screen
     * CryptKeeper top margin for pattern screen
     * CryptKeeper top margin for pattern screen
     */
    public static final int crypt_keeper_pattern_top_margin=0x7f0700fb;
    /**
     * Dashboard foreground image inset (from background edge to foreground edge)
     */
    public static final int dashboard_tile_foreground_image_inset=0x7f0700fc;
    /**
     * Dashboard foreground image size
     */
    public static final int dashboard_tile_foreground_image_size=0x7f0700fd;
    /**
     * Dashboard image tile size
     */
    public static final int dashboard_tile_image_size=0x7f0700fe;
    public static final int data_usage_chart_height=0x7f0700ff;
    public static final int data_usage_chart_optimalWidth=0x7f070100;
    public static final int datetime_margin_bottom=0x7f070101;
    public static final int datetime_margin_top=0x7f070102;
    public static final int def_drawer_elevation=0x7f070103;
    public static final int default_dimension=0x7f070104;
    /**
     * Various configurations to control the simple cache implementation
     */
    public static final int default_icon_bitmap_size=0x7f070105;
    public static final int delete_profile_dialog_padding_left_right=0x7f070106;
    /**
     * Delete managed profile dialog
     */
    public static final int delete_profile_dialog_padding_top=0x7f070107;
    public static final int description_margin_sides=0x7f070108;
    public static final int description_margin_top=0x7f070109;
    public static final int design_appbar_elevation=0x7f07010a;
    public static final int design_bottom_navigation_active_item_max_width=0x7f07010b;
    public static final int design_bottom_navigation_active_item_min_width=0x7f07010c;
    public static final int design_bottom_navigation_active_text_size=0x7f07010d;
    public static final int design_bottom_navigation_elevation=0x7f07010e;
    public static final int design_bottom_navigation_height=0x7f07010f;
    public static final int design_bottom_navigation_icon_size=0x7f070110;
    public static final int design_bottom_navigation_item_max_width=0x7f070111;
    public static final int design_bottom_navigation_item_min_width=0x7f070112;
    public static final int design_bottom_navigation_label_padding=0x7f070113;
    public static final int design_bottom_navigation_margin=0x7f070114;
    public static final int design_bottom_navigation_shadow_height=0x7f070115;
    public static final int design_bottom_navigation_text_size=0x7f070116;
    public static final int design_bottom_sheet_elevation=0x7f070117;
    public static final int design_bottom_sheet_modal_elevation=0x7f070118;
    public static final int design_bottom_sheet_peek_height_min=0x7f070119;
    public static final int design_fab_border_width=0x7f07011a;
    public static final int design_fab_elevation=0x7f07011b;
    public static final int design_fab_image_size=0x7f07011c;
    public static final int design_fab_size_mini=0x7f07011d;
    public static final int design_fab_size_normal=0x7f07011e;
    public static final int design_fab_translation_z_hovered_focused=0x7f07011f;
    public static final int design_fab_translation_z_pressed=0x7f070120;
    public static final int design_navigation_elevation=0x7f070121;
    public static final int design_navigation_icon_padding=0x7f070122;
    public static final int design_navigation_icon_size=0x7f070123;
    public static final int design_navigation_item_horizontal_padding=0x7f070124;
    public static final int design_navigation_item_icon_padding=0x7f070125;
    public static final int design_navigation_max_width=0x7f070126;
    public static final int design_navigation_padding_bottom=0x7f070127;
    public static final int design_navigation_separator_vertical_padding=0x7f070128;
    public static final int design_snackbar_action_inline_max_width=0x7f070129;
    public static final int design_snackbar_action_text_color_alpha=0x7f07012a;
    public static final int design_snackbar_background_corner_radius=0x7f07012b;
    public static final int design_snackbar_elevation=0x7f07012c;
    public static final int design_snackbar_extra_spacing_horizontal=0x7f07012d;
    public static final int design_snackbar_max_width=0x7f07012e;
    public static final int design_snackbar_min_width=0x7f07012f;
    public static final int design_snackbar_padding_horizontal=0x7f070130;
    public static final int design_snackbar_padding_vertical=0x7f070131;
    public static final int design_snackbar_padding_vertical_2lines=0x7f070132;
    public static final int design_snackbar_text_size=0x7f070133;
    public static final int design_tab_max_width=0x7f070134;
    public static final int design_tab_scrollable_min_width=0x7f070135;
    public static final int design_tab_text_size=0x7f070136;
    public static final int design_tab_text_size_2line=0x7f070137;
    public static final int design_textinput_caption_translate_y=0x7f070138;
    /**
     * Developer option bluetooth settings dialog
     */
    public static final int developer_option_dialog_margin_start=0x7f070139;
    public static final int developer_option_dialog_margin_top=0x7f07013a;
    public static final int developer_option_dialog_min_height=0x7f07013b;
    public static final int developer_option_dialog_padding_start=0x7f07013c;
    public static final int device_memory_usage_button_height=0x7f07013d;
    public static final int device_memory_usage_button_width=0x7f07013e;
    public static final int disabled_alpha_material_dark=0x7f07013f;
    public static final int disabled_alpha_material_light=0x7f070140;
    /**
     * The translation for disappearing security views after having solved them.
     */
    public static final int disappear_y_translation=0x7f070141;
    public static final int divider_height=0x7f070142;
    public static final int divider_margin_bottom=0x7f070143;
    public static final int divider_margin_top=0x7f070144;
    /**
     * Text padding for EmptyTextSettings
     */
    public static final int empty_text_padding=0x7f070145;
    public static final int expanded_title_margin_end=0x7f070146;
    public static final int expanded_title_margin_start=0x7f070147;
    public static final int face_preview_scale=0x7f070148;
    public static final int face_preview_translate_x=0x7f070149;
    /**
     * Face
     */
    public static final int face_preview_translate_y=0x7f07014a;
    public static final int fastscroll_default_thickness=0x7f07014b;
    public static final int fastscroll_margin=0x7f07014c;
    public static final int fastscroll_minimum_range=0x7f07014d;
    public static final int fingerprint_animation_size=0x7f07014e;
    public static final int fingerprint_decor_padding_top=0x7f07014f;
    /**
     * Fingerprint
     */
    public static final int fingerprint_dot_radius=0x7f070150;
    public static final int fingerprint_enrolling_content_margin_vertical=0x7f070151;
    public static final int fingerprint_error_text_appear_distance=0x7f070152;
    public static final int fingerprint_error_text_disappear_distance=0x7f070153;
    public static final int fingerprint_find_sensor_graphic_size=0x7f070154;
    /**
     * Fingerprint
     */
    public static final int fingerprint_find_sensor_padding_top=0x7f070155;
    /**
     * To be the same size as fingerprint progress bar:
     * fingerprint_finish_max_size = fingerprint_progress_bar_max_size
     * + (fingerprint_enrolling_content_margin_vertical x 2)
     */
    public static final int fingerprint_finish_max_size=0x7f070156;
    /**
     * Fingerprint
     */
    public static final int fingerprint_illustration_aspect_ratio=0x7f070157;
    public static final int fingerprint_progress_bar_max_size=0x7f070158;
    public static final int fingerprint_progress_bar_min_size=0x7f070159;
    public static final int fingerprint_pulse_radius=0x7f07015a;
    /**
     * padding for font size preview in large screen
     */
    public static final int font_size_preview_padding_start=0x7f07015b;
    public static final int gestures_play_button_size=0x7f07015c;
    /**
     * Padding for Gestures settings screen
     */
    public static final int gestures_settings_padding_top_bottom=0x7f07015d;
    public static final int highlight_alpha_material_colored=0x7f07015e;
    public static final int highlight_alpha_material_dark=0x7f07015f;
    public static final int highlight_alpha_material_light=0x7f070160;
    public static final int hint_alpha_material_dark=0x7f070161;
    public static final int hint_alpha_material_light=0x7f070162;
    public static final int hint_pressed_alpha_material_dark=0x7f070163;
    public static final int hint_pressed_alpha_material_light=0x7f070164;
    public static final int homepage_menu_entry_corner_radius=0x7f070165;
    /**
     * Homepage menu entry
     */
    public static final int homepage_menu_entry_padding_horizontal=0x7f070166;
    /**
     * Homepage title
     */
    public static final int homepage_title_margin_bottom=0x7f070167;
    public static final int homepage_title_margin_horizontal=0x7f070168;
    /**
     * Horizontal divider size and margin
     */
    public static final int horizontal_divider_height=0x7f070169;
    public static final int installed_app_details_bullet_offset=0x7f07016a;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f07016b;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f07016c;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f07016d;
    /**
     * Developer options shared data screens related dimensions
     */
    public static final int list_preferred_item_padding=0x7f07016e;
    public static final int match_parent=0x7f07016f;
    public static final int material_bottom_sheet_max_width=0x7f070170;
    public static final int material_clock_display_padding=0x7f070171;
    public static final int material_clock_face_margin_top=0x7f070172;
    public static final int material_clock_hand_center_dot_radius=0x7f070173;
    public static final int material_clock_hand_padding=0x7f070174;
    public static final int material_clock_hand_stroke_width=0x7f070175;
    public static final int material_clock_number_text_size=0x7f070176;
    public static final int material_clock_period_toggle_height=0x7f070177;
    public static final int material_clock_period_toggle_margin_left=0x7f070178;
    public static final int material_clock_period_toggle_width=0x7f070179;
    public static final int material_clock_size=0x7f07017a;
    public static final int material_cursor_inset_bottom=0x7f07017b;
    public static final int material_cursor_inset_top=0x7f07017c;
    public static final int material_cursor_width=0x7f07017d;
    public static final int material_emphasis_disabled=0x7f07017e;
    public static final int material_emphasis_high_type=0x7f07017f;
    public static final int material_emphasis_medium=0x7f070180;
    public static final int material_filled_edittext_font_1_3_padding_bottom=0x7f070181;
    public static final int material_filled_edittext_font_1_3_padding_top=0x7f070182;
    public static final int material_filled_edittext_font_2_0_padding_bottom=0x7f070183;
    public static final int material_filled_edittext_font_2_0_padding_top=0x7f070184;
    public static final int material_font_1_3_box_collapsed_padding_top=0x7f070185;
    public static final int material_font_2_0_box_collapsed_padding_top=0x7f070186;
    public static final int material_helper_text_default_padding_top=0x7f070187;
    public static final int material_helper_text_font_1_3_padding_horizontal=0x7f070188;
    public static final int material_helper_text_font_1_3_padding_top=0x7f070189;
    public static final int material_input_text_to_prefix_suffix_padding=0x7f07018a;
    public static final int material_text_view_test_line_height=0x7f07018b;
    public static final int material_text_view_test_line_height_override=0x7f07018c;
    public static final int material_textinput_default_width=0x7f07018d;
    public static final int material_textinput_max_width=0x7f07018e;
    public static final int material_textinput_min_width=0x7f07018f;
    public static final int material_time_picker_minimum_screen_height=0x7f070190;
    public static final int material_time_picker_minimum_screen_width=0x7f070191;
    public static final int material_timepicker_dialog_buttons_margin_top=0x7f070192;
    public static final int mdm_app_icon_width_height=0x7f070193;
    public static final int mdm_app_info_height=0x7f070194;
    public static final int mdm_app_info_padding_top_bottom=0x7f070195;
    public static final int mdm_app_name_padding_left=0x7f070196;
    public static final int message_bubble_arrow_width=0x7f070197;
    public static final int message_metadata_top_padding=0x7f070198;
    public static final int message_padding_default=0x7f070199;
    public static final int message_text_bottom_padding=0x7f07019a;
    public static final int message_text_left_right_padding=0x7f07019b;
    public static final int message_text_top_padding=0x7f07019c;
    /**
     * Define minimal size of the tap area
     */
    public static final int min_tap_target_size=0x7f07019d;
    public static final int mr_cast_group_volume_seekbar_height=0x7f07019e;
    public static final int mr_cast_meta_art_size=0x7f07019f;
    public static final int mr_cast_meta_subtitle_text_size=0x7f0701a0;
    public static final int mr_cast_route_volume_seekbar_height=0x7f0701a1;
    public static final int mr_cast_seekbar_thumb_size=0x7f0701a2;
    public static final int mr_controller_volume_group_list_item_height=0x7f0701a3;
    public static final int mr_controller_volume_group_list_item_icon_size=0x7f0701a4;
    public static final int mr_controller_volume_group_list_max_height=0x7f0701a5;
    public static final int mr_controller_volume_group_list_padding_top=0x7f0701a6;
    public static final int mr_dialog_fixed_width_major=0x7f0701a7;
    public static final int mr_dialog_fixed_width_minor=0x7f0701a8;
    public static final int mr_dynamic_dialog_header_text_size=0x7f0701a9;
    public static final int mr_dynamic_dialog_route_text_size=0x7f0701aa;
    public static final int mr_dynamic_dialog_row_height=0x7f0701ab;
    public static final int mr_dynamic_volume_group_list_item_height=0x7f0701ac;
    public static final int mtrl_alert_dialog_background_inset_bottom=0x7f0701ad;
    public static final int mtrl_alert_dialog_background_inset_end=0x7f0701ae;
    public static final int mtrl_alert_dialog_background_inset_start=0x7f0701af;
    public static final int mtrl_alert_dialog_background_inset_top=0x7f0701b0;
    public static final int mtrl_alert_dialog_picker_background_inset=0x7f0701b1;
    public static final int mtrl_badge_horizontal_edge_offset=0x7f0701b2;
    public static final int mtrl_badge_long_text_horizontal_padding=0x7f0701b3;
    public static final int mtrl_badge_radius=0x7f0701b4;
    public static final int mtrl_badge_text_horizontal_edge_offset=0x7f0701b5;
    public static final int mtrl_badge_text_size=0x7f0701b6;
    public static final int mtrl_badge_toolbar_action_menu_item_horizontal_offset=0x7f0701b7;
    public static final int mtrl_badge_toolbar_action_menu_item_vertical_offset=0x7f0701b8;
    public static final int mtrl_badge_with_text_radius=0x7f0701b9;
    public static final int mtrl_bottomappbar_fabOffsetEndMode=0x7f0701ba;
    public static final int mtrl_bottomappbar_fab_bottom_margin=0x7f0701bb;
    public static final int mtrl_bottomappbar_fab_cradle_margin=0x7f0701bc;
    public static final int mtrl_bottomappbar_fab_cradle_rounded_corner_radius=0x7f0701bd;
    public static final int mtrl_bottomappbar_fab_cradle_vertical_offset=0x7f0701be;
    public static final int mtrl_bottomappbar_height=0x7f0701bf;
    public static final int mtrl_btn_corner_radius=0x7f0701c0;
    public static final int mtrl_btn_dialog_btn_min_width=0x7f0701c1;
    public static final int mtrl_btn_disabled_elevation=0x7f0701c2;
    public static final int mtrl_btn_disabled_z=0x7f0701c3;
    public static final int mtrl_btn_elevation=0x7f0701c4;
    public static final int mtrl_btn_focused_z=0x7f0701c5;
    public static final int mtrl_btn_hovered_z=0x7f0701c6;
    public static final int mtrl_btn_icon_btn_padding_left=0x7f0701c7;
    public static final int mtrl_btn_icon_padding=0x7f0701c8;
    public static final int mtrl_btn_inset=0x7f0701c9;
    public static final int mtrl_btn_letter_spacing=0x7f0701ca;
    public static final int mtrl_btn_max_width=0x7f0701cb;
    public static final int mtrl_btn_padding_bottom=0x7f0701cc;
    public static final int mtrl_btn_padding_left=0x7f0701cd;
    public static final int mtrl_btn_padding_right=0x7f0701ce;
    public static final int mtrl_btn_padding_top=0x7f0701cf;
    public static final int mtrl_btn_pressed_z=0x7f0701d0;
    public static final int mtrl_btn_snackbar_margin_horizontal=0x7f0701d1;
    public static final int mtrl_btn_stroke_size=0x7f0701d2;
    public static final int mtrl_btn_text_btn_icon_padding=0x7f0701d3;
    public static final int mtrl_btn_text_btn_padding_left=0x7f0701d4;
    public static final int mtrl_btn_text_btn_padding_right=0x7f0701d5;
    public static final int mtrl_btn_text_size=0x7f0701d6;
    public static final int mtrl_btn_z=0x7f0701d7;
    public static final int mtrl_calendar_action_confirm_button_min_width=0x7f0701d8;
    public static final int mtrl_calendar_action_height=0x7f0701d9;
    public static final int mtrl_calendar_action_padding=0x7f0701da;
    public static final int mtrl_calendar_bottom_padding=0x7f0701db;
    public static final int mtrl_calendar_content_padding=0x7f0701dc;
    public static final int mtrl_calendar_day_corner=0x7f0701dd;
    public static final int mtrl_calendar_day_height=0x7f0701de;
    public static final int mtrl_calendar_day_horizontal_padding=0x7f0701df;
    public static final int mtrl_calendar_day_today_stroke=0x7f0701e0;
    public static final int mtrl_calendar_day_vertical_padding=0x7f0701e1;
    public static final int mtrl_calendar_day_width=0x7f0701e2;
    public static final int mtrl_calendar_days_of_week_height=0x7f0701e3;
    public static final int mtrl_calendar_dialog_background_inset=0x7f0701e4;
    public static final int mtrl_calendar_header_content_padding=0x7f0701e5;
    public static final int mtrl_calendar_header_content_padding_fullscreen=0x7f0701e6;
    public static final int mtrl_calendar_header_divider_thickness=0x7f0701e7;
    public static final int mtrl_calendar_header_height=0x7f0701e8;
    public static final int mtrl_calendar_header_height_fullscreen=0x7f0701e9;
    public static final int mtrl_calendar_header_selection_line_height=0x7f0701ea;
    public static final int mtrl_calendar_header_text_padding=0x7f0701eb;
    public static final int mtrl_calendar_header_toggle_margin_bottom=0x7f0701ec;
    public static final int mtrl_calendar_header_toggle_margin_top=0x7f0701ed;
    public static final int mtrl_calendar_landscape_header_width=0x7f0701ee;
    public static final int mtrl_calendar_maximum_default_fullscreen_minor_axis=0x7f0701ef;
    public static final int mtrl_calendar_month_horizontal_padding=0x7f0701f0;
    public static final int mtrl_calendar_month_vertical_padding=0x7f0701f1;
    public static final int mtrl_calendar_navigation_bottom_padding=0x7f0701f2;
    public static final int mtrl_calendar_navigation_height=0x7f0701f3;
    public static final int mtrl_calendar_navigation_top_padding=0x7f0701f4;
    public static final int mtrl_calendar_pre_l_text_clip_padding=0x7f0701f5;
    public static final int mtrl_calendar_selection_baseline_to_top_fullscreen=0x7f0701f6;
    public static final int mtrl_calendar_selection_text_baseline_to_bottom=0x7f0701f7;
    public static final int mtrl_calendar_selection_text_baseline_to_bottom_fullscreen=0x7f0701f8;
    public static final int mtrl_calendar_selection_text_baseline_to_top=0x7f0701f9;
    public static final int mtrl_calendar_text_input_padding_top=0x7f0701fa;
    public static final int mtrl_calendar_title_baseline_to_top=0x7f0701fb;
    public static final int mtrl_calendar_title_baseline_to_top_fullscreen=0x7f0701fc;
    public static final int mtrl_calendar_year_corner=0x7f0701fd;
    public static final int mtrl_calendar_year_height=0x7f0701fe;
    public static final int mtrl_calendar_year_horizontal_padding=0x7f0701ff;
    public static final int mtrl_calendar_year_vertical_padding=0x7f070200;
    public static final int mtrl_calendar_year_width=0x7f070201;
    public static final int mtrl_card_checked_icon_margin=0x7f070202;
    public static final int mtrl_card_checked_icon_size=0x7f070203;
    public static final int mtrl_card_corner_radius=0x7f070204;
    public static final int mtrl_card_dragged_z=0x7f070205;
    public static final int mtrl_card_elevation=0x7f070206;
    public static final int mtrl_card_spacing=0x7f070207;
    public static final int mtrl_chip_pressed_translation_z=0x7f070208;
    public static final int mtrl_chip_text_size=0x7f070209;
    public static final int mtrl_edittext_rectangle_top_offset=0x7f07020a;
    public static final int mtrl_exposed_dropdown_menu_popup_elevation=0x7f07020b;
    public static final int mtrl_exposed_dropdown_menu_popup_vertical_offset=0x7f07020c;
    public static final int mtrl_exposed_dropdown_menu_popup_vertical_padding=0x7f07020d;
    public static final int mtrl_extended_fab_bottom_padding=0x7f07020e;
    public static final int mtrl_extended_fab_corner_radius=0x7f07020f;
    public static final int mtrl_extended_fab_disabled_elevation=0x7f070210;
    public static final int mtrl_extended_fab_disabled_translation_z=0x7f070211;
    public static final int mtrl_extended_fab_elevation=0x7f070212;
    public static final int mtrl_extended_fab_end_padding=0x7f070213;
    public static final int mtrl_extended_fab_end_padding_icon=0x7f070214;
    public static final int mtrl_extended_fab_icon_size=0x7f070215;
    public static final int mtrl_extended_fab_icon_text_spacing=0x7f070216;
    public static final int mtrl_extended_fab_min_height=0x7f070217;
    public static final int mtrl_extended_fab_min_width=0x7f070218;
    public static final int mtrl_extended_fab_start_padding=0x7f070219;
    public static final int mtrl_extended_fab_start_padding_icon=0x7f07021a;
    public static final int mtrl_extended_fab_top_padding=0x7f07021b;
    public static final int mtrl_extended_fab_translation_z_base=0x7f07021c;
    public static final int mtrl_extended_fab_translation_z_hovered_focused=0x7f07021d;
    public static final int mtrl_extended_fab_translation_z_pressed=0x7f07021e;
    public static final int mtrl_fab_elevation=0x7f07021f;
    public static final int mtrl_fab_min_touch_target=0x7f070220;
    public static final int mtrl_fab_translation_z_hovered_focused=0x7f070221;
    public static final int mtrl_fab_translation_z_pressed=0x7f070222;
    public static final int mtrl_high_ripple_default_alpha=0x7f070223;
    public static final int mtrl_high_ripple_focused_alpha=0x7f070224;
    public static final int mtrl_high_ripple_hovered_alpha=0x7f070225;
    public static final int mtrl_high_ripple_pressed_alpha=0x7f070226;
    public static final int mtrl_large_touch_target=0x7f070227;
    public static final int mtrl_low_ripple_default_alpha=0x7f070228;
    public static final int mtrl_low_ripple_focused_alpha=0x7f070229;
    public static final int mtrl_low_ripple_hovered_alpha=0x7f07022a;
    public static final int mtrl_low_ripple_pressed_alpha=0x7f07022b;
    public static final int mtrl_min_touch_target_size=0x7f07022c;
    public static final int mtrl_navigation_bar_item_default_icon_size=0x7f07022d;
    public static final int mtrl_navigation_bar_item_default_margin=0x7f07022e;
    public static final int mtrl_navigation_elevation=0x7f07022f;
    public static final int mtrl_navigation_item_horizontal_padding=0x7f070230;
    public static final int mtrl_navigation_item_icon_padding=0x7f070231;
    public static final int mtrl_navigation_item_icon_size=0x7f070232;
    public static final int mtrl_navigation_item_shape_horizontal_margin=0x7f070233;
    public static final int mtrl_navigation_item_shape_vertical_margin=0x7f070234;
    public static final int mtrl_navigation_rail_active_text_size=0x7f070235;
    public static final int mtrl_navigation_rail_compact_width=0x7f070236;
    public static final int mtrl_navigation_rail_default_width=0x7f070237;
    public static final int mtrl_navigation_rail_elevation=0x7f070238;
    public static final int mtrl_navigation_rail_icon_margin=0x7f070239;
    public static final int mtrl_navigation_rail_icon_size=0x7f07023a;
    public static final int mtrl_navigation_rail_margin=0x7f07023b;
    public static final int mtrl_navigation_rail_text_bottom_margin=0x7f07023c;
    public static final int mtrl_navigation_rail_text_size=0x7f07023d;
    public static final int mtrl_progress_circular_inset=0x7f07023e;
    public static final int mtrl_progress_circular_inset_extra_small=0x7f07023f;
    public static final int mtrl_progress_circular_inset_medium=0x7f070240;
    public static final int mtrl_progress_circular_inset_small=0x7f070241;
    public static final int mtrl_progress_circular_radius=0x7f070242;
    public static final int mtrl_progress_circular_size=0x7f070243;
    public static final int mtrl_progress_circular_size_extra_small=0x7f070244;
    public static final int mtrl_progress_circular_size_medium=0x7f070245;
    public static final int mtrl_progress_circular_size_small=0x7f070246;
    public static final int mtrl_progress_circular_track_thickness_extra_small=0x7f070247;
    public static final int mtrl_progress_circular_track_thickness_medium=0x7f070248;
    public static final int mtrl_progress_circular_track_thickness_small=0x7f070249;
    public static final int mtrl_progress_indicator_full_rounded_corner_radius=0x7f07024a;
    public static final int mtrl_progress_track_thickness=0x7f07024b;
    public static final int mtrl_shape_corner_size_large_component=0x7f07024c;
    public static final int mtrl_shape_corner_size_medium_component=0x7f07024d;
    public static final int mtrl_shape_corner_size_small_component=0x7f07024e;
    public static final int mtrl_slider_halo_radius=0x7f07024f;
    public static final int mtrl_slider_label_padding=0x7f070250;
    public static final int mtrl_slider_label_radius=0x7f070251;
    public static final int mtrl_slider_label_square_side=0x7f070252;
    public static final int mtrl_slider_thumb_elevation=0x7f070253;
    public static final int mtrl_slider_thumb_radius=0x7f070254;
    public static final int mtrl_slider_track_height=0x7f070255;
    public static final int mtrl_slider_track_side_padding=0x7f070256;
    public static final int mtrl_slider_track_top=0x7f070257;
    public static final int mtrl_slider_widget_height=0x7f070258;
    public static final int mtrl_snackbar_action_text_color_alpha=0x7f070259;
    public static final int mtrl_snackbar_background_corner_radius=0x7f07025a;
    public static final int mtrl_snackbar_background_overlay_color_alpha=0x7f07025b;
    public static final int mtrl_snackbar_margin=0x7f07025c;
    public static final int mtrl_snackbar_message_margin_horizontal=0x7f07025d;
    public static final int mtrl_snackbar_padding_horizontal=0x7f07025e;
    public static final int mtrl_switch_thumb_elevation=0x7f07025f;
    public static final int mtrl_textinput_box_corner_radius_medium=0x7f070260;
    public static final int mtrl_textinput_box_corner_radius_small=0x7f070261;
    public static final int mtrl_textinput_box_label_cutout_padding=0x7f070262;
    public static final int mtrl_textinput_box_stroke_width_default=0x7f070263;
    public static final int mtrl_textinput_box_stroke_width_focused=0x7f070264;
    public static final int mtrl_textinput_counter_margin_start=0x7f070265;
    public static final int mtrl_textinput_end_icon_margin_start=0x7f070266;
    public static final int mtrl_textinput_outline_box_expanded_padding=0x7f070267;
    public static final int mtrl_textinput_start_icon_margin_end=0x7f070268;
    public static final int mtrl_toolbar_default_height=0x7f070269;
    public static final int mtrl_tooltip_arrowSize=0x7f07026a;
    public static final int mtrl_tooltip_cornerSize=0x7f07026b;
    public static final int mtrl_tooltip_minHeight=0x7f07026c;
    public static final int mtrl_tooltip_minWidth=0x7f07026d;
    public static final int mtrl_tooltip_padding=0x7f07026e;
    public static final int mtrl_transition_shared_axis_slide_distance=0x7f07026f;
    public static final int nfc_detection_point_height=0x7f070270;
    public static final int notification_action_icon_size=0x7f070271;
    public static final int notification_action_text_size=0x7f070272;
    public static final int notification_app_icon_badge_margin=0x7f070273;
    public static final int notification_app_icon_badge_size=0x7f070274;
    public static final int notification_app_icon_size=0x7f070275;
    public static final int notification_big_circle_margin=0x7f070276;
    public static final int notification_content_margin_start=0x7f070277;
    public static final int notification_history_header_drawable_start=0x7f070278;
    public static final int notification_importance_button_horiz_padding=0x7f070279;
    public static final int notification_importance_button_padding=0x7f07027a;
    public static final int notification_importance_button_separation=0x7f07027b;
    public static final int notification_importance_button_text=0x7f07027c;
    public static final int notification_importance_button_width=0x7f07027d;
    public static final int notification_importance_description_padding=0x7f07027e;
    public static final int notification_importance_description_text=0x7f07027f;
    public static final int notification_importance_drawable_padding=0x7f070280;
    public static final int notification_importance_text_marginTop=0x7f070281;
    public static final int notification_importance_toggle_marginBottom=0x7f070282;
    public static final int notification_importance_toggle_marginTop=0x7f070283;
    public static final int notification_importance_toggle_size=0x7f070284;
    public static final int notification_large_icon_height=0x7f070285;
    public static final int notification_large_icon_width=0x7f070286;
    public static final int notification_main_column_padding_top=0x7f070287;
    public static final int notification_media_narrow_margin=0x7f070288;
    public static final int notification_right_icon_size=0x7f070289;
    public static final int notification_right_side_padding_top=0x7f07028a;
    public static final int notification_small_icon_background_padding=0x7f07028b;
    public static final int notification_small_icon_size_as_large=0x7f07028c;
    public static final int notification_subtext_size=0x7f07028d;
    public static final int notification_top_pad=0x7f07028e;
    public static final int notification_top_pad_large_text=0x7f07028f;
    public static final int output_switcher_panel_icon_corner_radius=0x7f070290;
    public static final int output_switcher_panel_icon_size=0x7f070291;
    public static final int output_switcher_slice_max_height=0x7f070292;
    /**
     * Output switcher panel related dimensions
     */
    public static final int output_switcher_slice_padding_top=0x7f070293;
    public static final int pager_tabs_padding=0x7f070294;
    public static final int pager_tabs_selected_indicator_height=0x7f070295;
    public static final int pager_tabs_title_padding=0x7f070296;
    public static final int panel_slice_Horizontal_padding=0x7f070297;
    /**
     * Panel slices dimensions
     */
    public static final int panel_slice_vertical_padding=0x7f070298;
    public static final int password_requirement_textsize=0x7f070299;
    public static final int preference_dropdown_padding_start=0x7f07029a;
    /**
     * Preference icon foreground image inset (from background edge to foreground edge)
     */
    public static final int preference_icon_foreground_image_inset=0x7f07029b;
    public static final int preference_icon_minWidth=0x7f07029c;
    public static final int preference_no_icon_padding_start=0x7f07029d;
    public static final int preference_seekbar_padding_horizontal=0x7f07029e;
    public static final int preference_seekbar_padding_vertical=0x7f07029f;
    public static final int preference_seekbar_value_minWidth=0x7f0702a0;
    /**
     * Display Size and Font Size preview screen
     */
    public static final int preview_pager_padding=0x7f0702a1;
    /**
     * Top margin for preview view pager
     */
    public static final int preview_size_top_margin=0x7f0702a2;
    public static final int profile_badge_size=0x7f0702a3;
    public static final int qrcode_preview_size=0x7f0702a4;
    /**
     * QR code picture size
     */
    public static final int qrcode_size=0x7f0702a5;
    public static final int rect_button_radius=0x7f0702a6;
    /**
     * Padding between the radio buttons/checkbox and text on the redaction interstitial
     */
    public static final int redaction_padding_start=0x7f0702a7;
    /**
     * RedactionInterstitial
     * RedactionInterstitial
     */
    public static final int redaction_vertical_margins=0x7f0702a8;
    public static final int reset_button_margin_end=0x7f0702a9;
    /**
     * Padding for the reset screens
     */
    public static final int reset_checkbox_padding_end=0x7f0702aa;
    public static final int reset_checkbox_summary_padding_top=0x7f0702ab;
    public static final int reset_checkbox_summary_text_size=0x7f0702ac;
    public static final int reset_checkbox_title_padding_top=0x7f0702ad;
    public static final int reset_checkbox_title_text_size=0x7f0702ae;
    public static final int reset_internet_ring_progress_right_margin=0x7f0702af;
    public static final int reset_network_margin_end=0x7f0702b0;
    /**
     * Margin for the reset screens
     */
    public static final int reset_network_margin_start=0x7f0702b1;
    /**
     * Restricted icon in switch bar
     */
    public static final int restricted_icon_margin_end=0x7f0702b2;
    /**
     * Lock icon for preferences locked by admin
     */
    public static final int restricted_icon_padding=0x7f0702b3;
    /**
     * Restricted icon size in switch bar
     */
    public static final int restricted_icon_size=0x7f0702b4;
    public static final int ring_progress_bar_thickness=0x7f0702b5;
    public static final int screen_margin_bottom=0x7f0702b6;
    public static final int screen_margin_sides=0x7f0702b7;
    public static final int screen_margin_top=0x7f0702b8;
    public static final int screen_pinning_padding_end=0x7f0702b9;
    /**
     * Padding for screen pinning
     * Padding for screen pinning
     * Padding for screen pinning
     */
    public static final int screen_pinning_padding_start=0x7f0702ba;
    /**
     * Display, Screen zoom
     */
    public static final int screen_zoom_preview_height=0x7f0702bb;
    public static final int search_bar_content_inset=0x7f0702bc;
    public static final int search_bar_corner_radius=0x7f0702bd;
    public static final int search_bar_half_height=0x7f0702be;
    public static final int search_bar_height=0x7f0702bf;
    /**
     * Search bar
     */
    public static final int search_bar_margin=0x7f0702c0;
    public static final int search_bar_text_size=0x7f0702c1;
    public static final int secondary_app_icon_size=0x7f0702c2;
    public static final int select_dialog_item_margin_start=0x7f0702c3;
    /**
     * Select dialog
     */
    public static final int select_dialog_padding_start=0x7f0702c4;
    public static final int select_dialog_summary_padding_bottom=0x7f0702c5;
    public static final int settings_bar_view_icon_size=0x7f0702c6;
    public static final int settings_bar_view_max_height=0x7f0702c7;
    /**
     * Settings panel related dimensions
     */
    public static final int settings_panel_corner_radius=0x7f0702c8;
    public static final int settings_panel_title_margin=0x7f0702c9;
    public static final int settings_panel_title_margin_bottom=0x7f0702ca;
    public static final int settings_panel_width=0x7f0702cb;
    public static final int settingslib_dialogCornerRadius=0x7f0702cc;
    public static final int settingslib_illustration_height=0x7f0702cd;
    /**
     * Padding of illustration
     */
    public static final int settingslib_illustration_padding=0x7f0702ce;
    public static final int settingslib_illustration_width=0x7f0702cf;
    /**
     * Minimum width of switch bar
     */
    public static final int settingslib_min_switch_bar_height=0x7f0702d0;
    /**
     * Minimum width of switch
     */
    public static final int settingslib_min_switch_width=0x7f0702d1;
    public static final int settingslib_preferred_minimum_touch_target=0x7f0702d2;
    /**
     * Restricted icon in switch bar
     */
    public static final int settingslib_restricted_icon_margin_end=0x7f0702d3;
    /**
     * Restricted icon size in switch bar
     */
    public static final int settingslib_restricted_icon_size=0x7f0702d4;
    public static final int settingslib_scrim_visible_height_trigger=0x7f0702d5;
    /**
     * Radius of switch bar
     */
    public static final int settingslib_switch_bar_radius=0x7f0702d6;
    /**
     * Size of title margin
     */
    public static final int settingslib_switch_title_margin=0x7f0702d7;
    /**
     * Size of layout margin
     */
    public static final int settingslib_switchbar_margin=0x7f0702d8;
    /**
     * Size of layout margin left
     */
    public static final int settingslib_switchbar_padding_left=0x7f0702d9;
    /**
     * Size of layout margin right
     */
    public static final int settingslib_switchbar_padding_right=0x7f0702da;
    public static final int settingslib_switchbar_subsettings_margin_end=0x7f0702db;
    /**
     * SwitchBar sub settings margin start / end
     * SwitchBar sub settings margin start / end
     * SwitchBar sub settings margin start / end
     */
    public static final int settingslib_switchbar_subsettings_margin_start=0x7f0702dc;
    /**
     * Collapsing toolbar layout dimensions
     */
    public static final int settingslib_toolbar_layout_height=0x7f0702dd;
    public static final int setup_compat_footer_button_min_height=0x7f0702de;
    public static final int setup_compat_footer_button_padding_bottom=0x7f0702df;
    public static final int setup_compat_footer_button_padding_top=0x7f0702e0;
    public static final int setup_compat_footer_button_radius=0x7f0702e1;
    public static final int setup_compat_footer_button_text_size=0x7f0702e2;
    public static final int setup_design_content_info_icon_margin_end=0x7f0702e3;
    public static final int setup_design_content_info_icon_size=0x7f0702e4;
    public static final int setup_design_content_info_line_spacing_extra=0x7f0702e5;
    public static final int setup_design_content_info_padding_bottom=0x7f0702e6;
    public static final int setup_design_content_info_padding_top=0x7f0702e7;
    public static final int setup_design_content_info_text_size=0x7f0702e8;
    public static final int setup_design_content_padding_top=0x7f0702e9;
    public static final int setup_design_content_text_size=0x7f0702ea;
    public static final int setup_design_description_text_margin_bottom=0x7f0702eb;
    public static final int setup_design_description_text_margin_top=0x7f0702ec;
    public static final int setup_design_description_text_size=0x7f0702ed;
    public static final int setup_design_header_auto_size_line_spacing_extra=0x7f0702ee;
    public static final int setup_design_header_auto_size_max_text_size=0x7f0702ef;
    public static final int setup_design_header_auto_size_min_text_size=0x7f0702f0;
    public static final int setup_design_header_container_margin_bottom=0x7f0702f1;
    public static final int setup_design_header_text_margin_bottom=0x7f0702f2;
    public static final int setup_design_header_text_margin_top=0x7f0702f3;
    public static final int setup_design_header_text_size=0x7f0702f4;
    public static final int setup_design_icon_margin_top=0x7f0702f5;
    public static final int setup_design_icon_size=0x7f0702f6;
    public static final int setup_design_items_min_height=0x7f0702f7;
    public static final int setup_design_items_padding_bottom=0x7f0702f8;
    public static final int setup_design_items_padding_top=0x7f0702f9;
    public static final int setup_design_items_summary_margin_top=0x7f0702fa;
    public static final int setup_design_items_summary_text_size=0x7f0702fb;
    public static final int setup_design_items_title_text_size=0x7f0702fc;
    public static final int setup_design_layout_margin_end=0x7f0702fd;
    public static final int setup_design_layout_margin_start=0x7f0702fe;
    public static final int shortcut_icon_size=0x7f0702ff;
    public static final int shortcut_size=0x7f070300;
    /**
     * Launcher Icons
     */
    public static final int shortcut_size_maskable=0x7f070301;
    /**
     * SignalDrawable
     */
    public static final int signal_icon_size=0x7f070302;
    /**
     * Signal icon in NetworkSelectSetting
     */
    public static final int signal_strength_icon_size=0x7f070303;
    public static final int sim_color_spinner_padding=0x7f070304;
    public static final int sim_content_padding=0x7f070305;
    /**
     * SIM Dialog Margin bottom
     */
    public static final int sim_dialog_margin_bottom=0x7f070306;
    /**
     * SIM Dialog Margin top
     */
    public static final int sim_dialog_margin_top=0x7f070307;
    /**
     * SIM Dialog padding
     */
    public static final int sim_dialog_padding=0x7f070308;
    public static final int sim_label_padding=0x7f070309;
    public static final int spinner_height=0x7f07030a;
    public static final int spinner_padding_top_or_bottom=0x7f07030b;
    /**
     * Choose SIM Activity dimens
     */
    public static final int subtitle_bottom_padding=0x7f07030c;
    /**
     * Dialog button bar button text size
     */
    public static final int sud_alert_dialog_button_bar_button_text_size=0x7f07030d;
    /**
     * Dialog button bar height
     * Dialog button bar height
     */
    public static final int sud_alert_dialog_button_bar_height=0x7f07030e;
    /**
     * Dialog button bar width
     */
    public static final int sud_alert_dialog_button_bar_width=0x7f07030f;
    /**
     * Dialog title text size
     */
    public static final int sud_alert_dialog_title_text_size=0x7f070310;
    /**
     * Card layout (for tablets)
     */
    public static final int sud_card_corner_radius=0x7f070311;
    public static final int sud_card_elevation=0x7f070312;
    public static final int sud_card_land_header_text_margin_top=0x7f070313;
    public static final int sud_card_port_margin_sides=0x7f070314;
    public static final int sud_card_title_padding_bottom=0x7f070315;
    /**
     * Card layout (for tablets)
     */
    public static final int sud_card_title_padding_end=0x7f070316;
    public static final int sud_card_title_padding_start=0x7f070317;
    public static final int sud_card_title_padding_top=0x7f070318;
    /**
     * Content styles
     */
    public static final int sud_check_box_line_spacing_extra=0x7f070319;
    public static final int sud_check_box_margin_bottom=0x7f07031a;
    public static final int sud_check_box_margin_start=0x7f07031b;
    public static final int sud_check_box_margin_top=0x7f07031c;
    public static final int sud_check_box_padding_start=0x7f07031d;
    public static final int sud_content_frame_padding_bottom=0x7f07031e;
    public static final int sud_content_frame_padding_top=0x7f07031f;
    public static final int sud_content_glif_margin_bottom=0x7f070320;
    public static final int sud_content_glif_margin_top=0x7f070321;
    public static final int sud_content_illustration_max_height=0x7f070322;
    public static final int sud_content_illustration_max_width=0x7f070323;
    public static final int sud_content_illustration_min_height=0x7f070324;
    public static final int sud_content_illustration_min_width=0x7f070325;
    public static final int sud_content_illustration_padding_vertical=0x7f070326;
    public static final int sud_content_info_icon_margin_end=0x7f070327;
    public static final int sud_content_info_icon_size=0x7f070328;
    public static final int sud_content_info_line_spacing_extra=0x7f070329;
    public static final int sud_content_info_padding_bottom=0x7f07032a;
    public static final int sud_content_info_padding_top=0x7f07032b;
    /**
     * Glif Content info text
     */
    public static final int sud_content_info_text_size=0x7f07032c;
    public static final int sud_content_loading_frame_padding_bottom=0x7f07032d;
    public static final int sud_content_loading_frame_padding_end=0x7f07032e;
    public static final int sud_content_loading_frame_padding_start=0x7f07032f;
    /**
     * Loading content styles
     */
    public static final int sud_content_loading_frame_padding_top=0x7f070330;
    /**
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     */
    public static final int sud_decor_padding_top=0x7f070331;
    public static final int sud_description_glif_margin_bottom_lists=0x7f070332;
    /**
     * TODO: Remove sud_description_glif_margin_xxx once all apps migrate to sud_glif_description_margin_xxx
     */
    public static final int sud_description_glif_margin_top=0x7f070333;
    public static final int sud_description_line_spacing_extra=0x7f070334;
    public static final int sud_description_margin_bottom=0x7f070335;
    public static final int sud_description_margin_bottom_extra=0x7f070336;
    public static final int sud_description_margin_bottom_lists=0x7f070337;
    public static final int sud_description_margin_top=0x7f070338;
    /**
     * This value is the margin bottom difference between DescriptionItem and DescriptionMixin.
     */
    public static final int sud_description_margin_top_extra=0x7f070339;
    public static final int sud_description_text_size=0x7f07033a;
    /**
     * Edit Text dimensions
     */
    public static final int sud_edit_text_min_height=0x7f07033b;
    public static final int sud_edit_text_padding_horizontal=0x7f07033c;
    /**
     * ExpandableSwithItem
     */
    public static final int sud_expand_arrow_drawable_padding=0x7f07033d;
    public static final int sud_glif_alert_dialog_corner_radius=0x7f07033e;
    public static final int sud_glif_button_corner_radius=0x7f07033f;
    /**
     * Calculated by (sud_glif_margin_start - 4dp internal padding of button)
     * Calculated by (sud_glif_margin_start - 4dp internal padding of button)
     */
    public static final int sud_glif_button_margin_end=0x7f070340;
    /**
     * Calculated by (sud_glif_margin_start - sud_glif_button_padding)
     * Calculated by (sud_glif_margin_start - sud_glif_button_padding)
     */
    public static final int sud_glif_button_margin_start=0x7f070341;
    /**
     * General
     */
    public static final int sud_glif_button_min_height=0x7f070342;
    public static final int sud_glif_button_padding=0x7f070343;
    /**
     * GLIF card layout (for tablets)
     */
    public static final int sud_glif_card_elevation=0x7f070344;
    public static final int sud_glif_card_height=0x7f070345;
    /**
     * GLIF card layout (for tablets)
     */
    public static final int sud_glif_card_width=0x7f070346;
    public static final int sud_glif_description_margin_bottom=0x7f070347;
    /**
     * This value leverages sud_description_glif_margin_top
     */
    public static final int sud_glif_description_margin_top=0x7f070348;
    public static final int sud_glif_device_default_dialog_corner_radius=0x7f070349;
    public static final int sud_glif_footer_min_height=0x7f07034a;
    /**
     * Calculated by (sud_glif_margin_end - 4dp internal padding of button)
     * Calculated by (sud_glif_margin_end - 4dp internal padding of button)
     */
    public static final int sud_glif_footer_padding_end=0x7f07034b;
    /**
     * General
     */
    public static final int sud_glif_footer_padding_start=0x7f07034c;
    public static final int sud_glif_footer_padding_vertical=0x7f07034d;
    public static final int sud_glif_header_title_margin_bottom=0x7f07034e;
    public static final int sud_glif_header_title_margin_top=0x7f07034f;
    public static final int sud_glif_icon_margin_top=0x7f070350;
    public static final int sud_glif_icon_max_height=0x7f070351;
    public static final int sud_glif_land_content_area_weight=0x7f070352;
    public static final int sud_glif_land_header_area_weight=0x7f070353;
    public static final int sud_glif_land_middle_horizontal_spacing=0x7f070354;
    public static final int sud_glif_margin_end=0x7f070355;
    public static final int sud_glif_margin_start=0x7f070356;
    /**
     * Negative of sud_glif_button_padding
     */
    public static final int sud_glif_negative_button_padding=0x7f070357;
    public static final int sud_glif_progress_bar_margin_vertical=0x7f070358;
    public static final int sud_glif_progress_bar_padding=0x7f070359;
    public static final int sud_glif_v3_button_corner_radius=0x7f07035a;
    public static final int sud_header_container_margin_bottom=0x7f07035b;
    /**
     * Hack to force the header (and its shadow) to be drawn on top of the list contents
     */
    public static final int sud_header_elevation_hack=0x7f07035c;
    /**
     * This is the extra spacing required to make the leading exactly 32sp
     */
    public static final int sud_header_title_line_spacing_extra=0x7f07035d;
    public static final int sud_header_title_margin_bottom=0x7f07035e;
    public static final int sud_header_title_padding_bottom=0x7f07035f;
    public static final int sud_header_title_padding_top=0x7f070360;
    public static final int sud_header_title_size=0x7f070361;
    public static final int sud_horizontal_icon_height=0x7f070362;
    /**
     * Set 0dp since we don't want shadow.
     */
    public static final int sud_icon_uniformity_elevation=0x7f070363;
    /**
     * Illustration
     * Illustration
     * Illustration
     */
    public static final int sud_illustration_aspect_ratio=0x7f070364;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_items_glif_icon_divider_inset=0x7f070365;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_items_glif_text_divider_inset=0x7f070366;
    /**
     * Items
     */
    public static final int sud_items_icon_container_width=0x7f070367;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_items_icon_divider_inset=0x7f070368;
    public static final int sud_items_padding_bottom=0x7f070369;
    /**
     * Extra padding in the bottom to compensate for difference between descent and (top) internal leading
     */
    public static final int sud_items_padding_bottom_extra=0x7f07036a;
    public static final int sud_items_padding_top=0x7f07036b;
    /**
     * TODO: Remove it when all attributes being used migrated into new one.
     */
    public static final int sud_items_padding_vertical=0x7f07036c;
    public static final int sud_items_preferred_height=0x7f07036d;
    public static final int sud_items_summary_margin_top=0x7f07036e;
    public static final int sud_items_summary_text_size=0x7f07036f;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_items_text_divider_inset=0x7f070370;
    public static final int sud_items_title_text_size=0x7f070371;
    public static final int sud_items_verbose_padding_bottom_extra=0x7f070372;
    public static final int sud_items_verbose_padding_vertical=0x7f070373;
    /**
     * General
     */
    public static final int sud_layout_margin_sides=0x7f070374;
    public static final int sud_loading_header_height=0x7f070375;
    /**
     * TODO: Move this dimen to gingerbread, or see if it should be in platform style as well
     */
    public static final int sud_navbar_button_drawable_padding=0x7f070376;
    public static final int sud_navbar_button_padding_sides=0x7f070377;
    public static final int sud_navbar_height=0x7f070378;
    public static final int sud_navbar_ic_intrinsic_size=0x7f070379;
    public static final int sud_navbar_padding_sides=0x7f07037a;
    public static final int sud_navbar_text_size=0x7f07037b;
    public static final int sud_progress_bar_margin_bottom=0x7f07037c;
    public static final int sud_progress_bar_margin_top=0x7f07037d;
    /**
     * The margin to compensate for the padding built-in to the widget itself
     */
    public static final int sud_progress_bar_margin_vertical=0x7f07037e;
    public static final int sud_radio_button_line_spacing_extra=0x7f07037f;
    public static final int sud_radio_button_margin_bottom=0x7f070380;
    /**
     * Margin on the start to offset for margin in the drawable
     */
    public static final int sud_radio_button_margin_start=0x7f070381;
    public static final int sud_radio_button_margin_top=0x7f070382;
    public static final int sud_radio_button_padding_start=0x7f070383;
    public static final int sud_switch_content_padding_end=0x7f070384;
    public static final int sud_switch_divider_height=0x7f070385;
    public static final int sud_switch_divider_padding_top=0x7f070386;
    /**
     * Minimum width of switch
     */
    public static final int sud_switch_min_width=0x7f070387;
    public static final int sud_switch_padding_end=0x7f070388;
    /**
     * SwitchItem
     */
    public static final int sud_switch_padding_start=0x7f070389;
    public static final int sud_switch_padding_top=0x7f07038a;
    /**
     * Margin of switch thumb
     */
    public static final int sud_switch_thumb_margin=0x7f07038b;
    /**
     * Size of switch thumb
     */
    public static final int sud_switch_thumb_size=0x7f07038c;
    /**
     * Height of switch track
     */
    public static final int sud_switch_track_height=0x7f07038d;
    /**
     * Radius of switch track
     */
    public static final int sud_switch_track_radius=0x7f07038e;
    /**
     * Width of switch track
     */
    public static final int sud_switch_track_width=0x7f07038f;
    /**
     * Header layout (for phones)
     */
    public static final int sud_title_area_elevation=0x7f070390;
    /**
     * Suggestion cards
     */
    public static final int suggestion_card_padding_bottom_one_card=0x7f070391;
    public static final int support_escalation_card_padding_end=0x7f070392;
    public static final int support_escalation_card_padding_start=0x7f070393;
    public static final int switchbar_margin_end=0x7f070394;
    /**
     * SwitchBar margin start / end
     */
    public static final int switchbar_margin_start=0x7f070395;
    public static final int switchbar_subsettings_margin_end=0x7f070396;
    /**
     * SwitchBar sub settings margin start / end
     * SwitchBar sub settings margin start / end
     * SwitchBar sub settings margin start / end
     */
    public static final int switchbar_subsettings_margin_start=0x7f070397;
    /**
     * System navigation settings illustration height
     */
    public static final int system_navigation_illustration_height=0x7f070398;
    public static final int test_mtrl_calendar_day_cornerSize=0x7f070399;
    public static final int test_navigation_bar_active_item_max_width=0x7f07039a;
    public static final int test_navigation_bar_active_item_min_width=0x7f07039b;
    public static final int test_navigation_bar_active_text_size=0x7f07039c;
    public static final int test_navigation_bar_elevation=0x7f07039d;
    public static final int test_navigation_bar_height=0x7f07039e;
    public static final int test_navigation_bar_icon_size=0x7f07039f;
    public static final int test_navigation_bar_item_max_width=0x7f0703a0;
    public static final int test_navigation_bar_item_min_width=0x7f0703a1;
    public static final int test_navigation_bar_label_padding=0x7f0703a2;
    public static final int test_navigation_bar_shadow_height=0x7f0703a3;
    public static final int test_navigation_bar_text_size=0x7f0703a4;
    public static final int tooltip_corner_radius=0x7f0703a5;
    public static final int tooltip_horizontal_padding=0x7f0703a6;
    public static final int tooltip_margin=0x7f0703a7;
    public static final int tooltip_precise_anchor_extra_offset=0x7f0703a8;
    public static final int tooltip_precise_anchor_threshold=0x7f0703a9;
    public static final int tooltip_vertical_padding=0x7f0703aa;
    public static final int tooltip_y_offset_non_touch=0x7f0703ab;
    public static final int tooltip_y_offset_touch=0x7f0703ac;
    public static final int two_target_min_width=0x7f0703ad;
    public static final int two_target_pref_medium_icon_size=0x7f0703ae;
    public static final int two_target_pref_small_icon_size=0x7f0703af;
    public static final int udfps_lottie_translate_y=0x7f0703b0;
    /**
     * Minimum width for the popup for updating a user's photo.
     */
    public static final int update_user_photo_popup_min_width=0x7f0703b1;
    /**
     * Usage graph dimens
     */
    public static final int usage_graph_area_height=0x7f0703b2;
    public static final int usage_graph_divider_size=0x7f0703b3;
    public static final int usage_graph_dot_interval=0x7f0703b4;
    public static final int usage_graph_dot_size=0x7f0703b5;
    public static final int usage_graph_labels_padding=0x7f0703b6;
    public static final int usage_graph_labels_width=0x7f0703b7;
    public static final int usage_graph_line_corner_radius=0x7f0703b8;
    public static final int usage_graph_line_width=0x7f0703b9;
    public static final int usage_graph_margin_top_bottom=0x7f0703ba;
    public static final int usage_number_text_size=0x7f0703bb;
    /**
     * Height of a user icon view
     */
    public static final int user_icon_view_height=0x7f0703bc;
    /**
     * User spinner
     */
    public static final int user_spinner_height=0x7f0703bd;
    public static final int user_spinner_item_height=0x7f0703be;
    public static final int user_spinner_padding=0x7f0703bf;
    public static final int user_spinner_padding_sides=0x7f0703c0;
    /**
     * Vertical divider size
     */
    public static final int vertical_divider_width=0x7f0703c1;
    /**
     * Visible vertical space we want to show below password edittext field when ime is shown.
     * The unit is sp as it is related to the text size of password requirement item.
     */
    public static final int visible_vertical_space_below_password=0x7f0703c2;
    public static final int volume_seekbar_side_margin=0x7f0703c3;
    public static final int wifi_ap_band_checkbox_padding=0x7f0703c4;
    public static final int wifi_assistant_height=0x7f0703c5;
    public static final int wifi_assistant_image_start=0x7f0703c6;
    public static final int wifi_assistant_image_top=0x7f0703c7;
    public static final int wifi_assistant_padding=0x7f0703c8;
    public static final int wifi_assistant_padding_start_end=0x7f0703c9;
    /**
     * Dimensions for Wifi Assistant Card
     * Dimensions for Wifi Assistant Card
     * Dimensions for Wifi Assistant Card
     */
    public static final int wifi_assistant_padding_top_bottom=0x7f0703ca;
    public static final int wifi_assistant_text_padding=0x7f0703cb;
    public static final int wifi_detail_page_header_image_size=0x7f0703cc;
    /**
     * WiFi Preferences
     */
    public static final int wifi_divider_height=0x7f0703cd;
    public static final int wifi_preference_badge_padding=0x7f0703ce;
    public static final int zen_conversations_icon_offset=0x7f0703cf;
    public static final int zen_conversations_icon_size=0x7f0703d0;
    public static final int zen_conversations_image_margin_vertical=0x7f0703d1;
    /**
     * Zen mode panel: bottom padding, a bit less than qs_panel_padding
     */
    public static final int zen_mode_condition_detail_bottom_padding=0x7f0703d2;
    /**
     * Zen mode panel: condition item button padding
     */
    public static final int zen_mode_condition_detail_button_padding=0x7f0703d3;
    /**
     * Zen mode panel: spacing between two-line condition upper and lower lines
     */
    public static final int zen_mode_condition_detail_item_interline_spacing=0x7f0703d4;
    /**
     * Zen mode panel: spacing between condition items
     */
    public static final int zen_mode_condition_detail_item_spacing=0x7f0703d5;
    public static final int zen_mode_icon_margin=0x7f0703d6;
    public static final int zen_mode_icon_size=0x7f0703d7;
    public static final int zen_mode_settings_button_margin_vertical=0x7f0703d8;
    public static final int zen_schedule_day_margin=0x7f0703d9;
    public static final int zen_schedule_rule_checkbox_padding=0x7f0703da;
    public static final int zen_senders_image_margin_vertical=0x7f0703db;
  }
  public static final class drawable {
    public static final int aab_brightness=0x7f08002f;
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080030;
    public static final int abc_action_bar_item_background_material=0x7f080031;
    public static final int abc_btn_borderless_material=0x7f080032;
    public static final int abc_btn_check_material=0x7f080033;
    public static final int abc_btn_check_material_anim=0x7f080034;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f080035;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f080036;
    public static final int abc_btn_colored_material=0x7f080037;
    public static final int abc_btn_default_mtrl_shape=0x7f080038;
    public static final int abc_btn_radio_material=0x7f080039;
    public static final int abc_btn_radio_material_anim=0x7f08003a;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f08003b;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f08003c;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f08003d;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f08003e;
    public static final int abc_cab_background_internal_bg=0x7f08003f;
    public static final int abc_cab_background_top_material=0x7f080040;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f080041;
    public static final int abc_control_background_material=0x7f080042;
    public static final int abc_dialog_material_background=0x7f080043;
    public static final int abc_edit_text_material=0x7f080044;
    public static final int abc_ic_ab_back_material=0x7f080045;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f080046;
    public static final int abc_ic_arrow_forward=0x7f080047;
    public static final int abc_ic_clear_material=0x7f080048;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f080049;
    public static final int abc_ic_go_search_api_material=0x7f08004a;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f08004b;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f08004c;
    public static final int abc_ic_menu_overflow_material=0x7f08004d;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f08004e;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f08004f;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f080050;
    public static final int abc_ic_permission=0x7f080051;
    public static final int abc_ic_search_api_material=0x7f080052;
    public static final int abc_ic_slice_send=0x7f080053;
    public static final int abc_ic_voice_search_api_material=0x7f080054;
    public static final int abc_item_background_holo_dark=0x7f080055;
    public static final int abc_item_background_holo_light=0x7f080056;
    public static final int abc_list_divider_material=0x7f080057;
    public static final int abc_list_divider_mtrl_alpha=0x7f080058;
    public static final int abc_list_focused_holo=0x7f080059;
    public static final int abc_list_longpressed_holo=0x7f08005a;
    public static final int abc_list_pressed_holo_dark=0x7f08005b;
    public static final int abc_list_pressed_holo_light=0x7f08005c;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f08005d;
    public static final int abc_list_selector_background_transition_holo_light=0x7f08005e;
    public static final int abc_list_selector_disabled_holo_dark=0x7f08005f;
    public static final int abc_list_selector_disabled_holo_light=0x7f080060;
    public static final int abc_list_selector_holo_dark=0x7f080061;
    public static final int abc_list_selector_holo_light=0x7f080062;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080063;
    public static final int abc_popup_background_mtrl_mult=0x7f080064;
    public static final int abc_ratingbar_indicator_material=0x7f080065;
    public static final int abc_ratingbar_material=0x7f080066;
    public static final int abc_ratingbar_small_material=0x7f080067;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f080068;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f080069;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f08006a;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f08006b;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f08006c;
    public static final int abc_seekbar_thumb_material=0x7f08006d;
    public static final int abc_seekbar_tick_mark_material=0x7f08006e;
    public static final int abc_seekbar_track_material=0x7f08006f;
    public static final int abc_slice_gradient=0x7f080070;
    public static final int abc_slice_remote_input_bg=0x7f080071;
    public static final int abc_slice_ripple_drawable=0x7f080072;
    public static final int abc_slice_see_more_bg=0x7f080073;
    public static final int abc_spinner_mtrl_am_alpha=0x7f080074;
    public static final int abc_spinner_textfield_background_material=0x7f080075;
    public static final int abc_star_black_48dp=0x7f080076;
    public static final int abc_star_half_black_48dp=0x7f080077;
    public static final int abc_switch_thumb_material=0x7f080078;
    public static final int abc_switch_track_mtrl_alpha=0x7f080079;
    public static final int abc_tab_indicator_material=0x7f08007a;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f08007b;
    public static final int abc_text_cursor_material=0x7f08007c;
    public static final int abc_text_select_handle_left_mtrl=0x7f08007d;
    public static final int abc_text_select_handle_middle_mtrl=0x7f08007e;
    public static final int abc_text_select_handle_right_mtrl=0x7f08007f;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f080080;
    public static final int abc_textfield_default_mtrl_alpha=0x7f080081;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f080082;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f080083;
    public static final int abc_textfield_search_material=0x7f080084;
    public static final int abc_vector_test=0x7f080085;
    public static final int accessibility_button_navigation=0x7f080086;
    public static final int accessibility_button_preview_base=0x7f080087;
    public static final int accessibility_button_preview_large_floating_menu=0x7f080088;
    public static final int accessibility_button_preview_small_floating_menu=0x7f080089;
    public static final int accessibility_button_preview_three_finger=0x7f08008a;
    public static final int accessibility_button_preview_two_finger=0x7f08008b;
    public static final int accessibility_captions_banner=0x7f08008c;
    public static final int accessibility_dwell=0x7f08008d;
    public static final int accessibility_shortcut_type_hardware=0x7f08008e;
    public static final int accessibility_shortcut_type_software=0x7f08008f;
    public static final int accessibility_shortcut_type_software_floating=0x7f080090;
    public static final int accessibility_shortcut_type_software_gesture=0x7f080091;
    public static final int accessibility_shortcut_type_software_gesture_talkback=0x7f080092;
    public static final int action_bar_dropshadow=0x7f080093;
    public static final int adaptive_icon_drawable_wrapper=0x7f080094;
    public static final int adaptive_sleep=0x7f080095;
    public static final int app_filter_spinner_background=0x7f080096;
    public static final int arrow_drop_down=0x7f080097;
    public static final int auto_awesome_battery=0x7f080098;
    public static final int avd_hide_password=0x7f080099;
    public static final int avd_show_password=0x7f08009a;
    public static final int btn_checkbox_checked_mtrl=0x7f08009b;
    public static final int btn_checkbox_checked_to_unchecked_mtrl_animation=0x7f08009c;
    public static final int btn_checkbox_unchecked_mtrl=0x7f08009d;
    public static final int btn_checkbox_unchecked_to_checked_mtrl_animation=0x7f08009e;
    public static final int btn_radio_off_mtrl=0x7f08009f;
    public static final int btn_radio_off_to_on_mtrl_animation=0x7f0800a0;
    public static final int btn_radio_on_mtrl=0x7f0800a1;
    public static final int btn_radio_on_to_off_mtrl_animation=0x7f0800a2;
    public static final int button_border_selected=0x7f0800a3;
    public static final int button_border_unselected=0x7f0800a4;
    public static final int button_ripple_radius=0x7f0800a5;
    public static final int caption_background=0x7f0800a6;
    public static final int circle=0x7f0800a7;
    public static final int circle_outline=0x7f0800a8;
    public static final int color_bar_progress=0x7f0800a9;
    public static final int color_mode_preview1=0x7f0800aa;
    public static final int color_mode_preview2=0x7f0800ab;
    public static final int color_mode_preview3=0x7f0800ac;
    public static final int contextual_card_background=0x7f0800ad;
    public static final int conversation_message_icon=0x7f0800ae;
    public static final int dark_theme=0x7f0800af;
    public static final int data_grid_border=0x7f0800b0;
    public static final int data_sweep_limit=0x7f0800b1;
    public static final int data_sweep_warning=0x7f0800b2;
    public static final int data_usage_sweep_background=0x7f0800b3;
    public static final int default_preference_background=0x7f0800b4;
    public static final int design_fab_background=0x7f0800b5;
    public static final int design_ic_visibility=0x7f0800b6;
    public static final int design_ic_visibility_off=0x7f0800b7;
    public static final int design_password_eye=0x7f0800b8;
    public static final int design_snackbar_background=0x7f0800b9;
    public static final int drag_handle=0x7f0800ba;
    public static final int empty_icon=0x7f0800bb;
    public static final int encroid_progress=0x7f0800bc;
    public static final int encroid_resignin=0x7f0800bd;
    public static final int encroid_waiting=0x7f0800be;
    public static final int enrollment_fingerprint_isolated=0x7f0800bf;
    public static final int enrollment_fingerprint_isolated_animation=0x7f0800c0;
    public static final int face_enroll_icon_large=0x7f0800c1;
    public static final int face_enroll_intro_illustration=0x7f0800c2;
    public static final int fallback_home_unprovisioned_background=0x7f0800c3;
    public static final int fingerprint_enroll_finish=0x7f0800c4;
    public static final int fingerprint_enroll_introduction=0x7f0800c5;
    public static final int fingerprint_sensor_location=0x7f0800c6;
    public static final int fingerprint_sensor_location_front_overlay=0x7f0800c7;
    public static final int flip_camera_for_selfie=0x7f0800c8;
    public static final int fp_illustration=0x7f0800c9;
    public static final int fp_illustration_enrollment=0x7f0800ca;
    public static final int fp_illustration_enrollment_animation=0x7f0800cb;
    public static final int gentle_notifications_shade=0x7f0800cc;
    public static final int gentle_notifications_shade_lock=0x7f0800cd;
    public static final int gentle_notifications_shade_status=0x7f0800ce;
    public static final int gentle_notifications_shade_status_lock=0x7f0800cf;
    public static final int gesture_ambient_lift=0x7f0800d0;
    public static final int gesture_ambient_tap=0x7f0800d1;
    public static final int gesture_ambient_tap_screen=0x7f0800d2;
    public static final int gesture_ambient_wake_lock_screen=0x7f0800d3;
    public static final int gesture_ambient_wake_screen=0x7f0800d4;
    public static final int gesture_assist=0x7f0800d5;
    public static final int gesture_double_tap=0x7f0800d6;
    public static final int gesture_fingerprint_swipe=0x7f0800d7;
    public static final int gesture_prevent_ringing=0x7f0800d8;
    public static final int gesture_twist=0x7f0800d9;
    public static final int half_rounded_left_bk=0x7f0800da;
    public static final int half_rounded_right_bk=0x7f0800db;
    public static final int homepage_highlighted_item_background=0x7f0800dc;
    public static final int ic_1x_mobiledata=0x7f0800dd;
    public static final int ic_3g_mobiledata=0x7f0800de;
    public static final int ic_4g_mobiledata=0x7f0800df;
    public static final int ic_4g_plus_mobiledata=0x7f0800e0;
    public static final int ic_5g_e_mobiledata=0x7f0800e1;
    public static final int ic_5g_mobiledata=0x7f0800e2;
    public static final int ic_5g_plus_mobiledata=0x7f0800e3;
    public static final int ic_5g_uc_mobiledata=0x7f0800e4;
    public static final int ic_5g_uw_mobiledata=0x7f0800e5;
    public static final int ic_accessibility_generic=0x7f0800e6;
    public static final int ic_accessibility_illustration_colorblind=0x7f0800e7;
    public static final int ic_accessibility_magnification=0x7f0800e8;
    public static final int ic_accessibility_new=0x7f0800e9;
    public static final int ic_accessibility_page_indicator=0x7f0800ea;
    public static final int ic_accessibility_suggestion=0x7f0800eb;
    public static final int ic_accessibility_visibility=0x7f0800ec;
    public static final int ic_account_circle_24dp=0x7f0800ed;
    public static final int ic_add_24dp=0x7f0800ee;
    public static final int ic_add_40dp=0x7f0800ef;
    public static final int ic_add_blue_24dp=0x7f0800f0;
    public static final int ic_add_to_home=0x7f0800f1;
    public static final int ic_adv_audio=0x7f0800f2;
    public static final int ic_airplane_safe_networks_24dp=0x7f0800f3;
    public static final int ic_airplanemode_active=0x7f0800f4;
    public static final int ic_alert_red=0x7f0800f5;
    public static final int ic_analytics_grey=0x7f0800f6;
    public static final int ic_android=0x7f0800f7;
    public static final int ic_apps=0x7f0800f8;
    public static final int ic_apps_alt=0x7f0800f9;
    public static final int ic_apps_filter_settings_24dp=0x7f0800fa;
    public static final int ic_arrow_back=0x7f0800fb;
    public static final int ic_arrow_down_24dp=0x7f0800fc;
    public static final int ic_arrow_downward=0x7f0800fd;
    public static final int ic_arrow_forward=0x7f0800fe;
    public static final int ic_attach_money_black_24dp=0x7f0800ff;
    public static final int ic_audio_adjustment=0x7f080100;
    public static final int ic_audio_ring=0x7f080101;
    public static final int ic_audiotrack_dark=0x7f080102;
    public static final int ic_audiotrack_light=0x7f080103;
    public static final int ic_auto_wifi=0x7f080104;
    public static final int ic_battery_alert_24dp=0x7f080105;
    public static final int ic_battery_charging_full=0x7f080106;
    public static final int ic_battery_circle=0x7f080107;
    public static final int ic_battery_low=0x7f080108;
    public static final int ic_battery_saver_accent_24dp=0x7f080109;
    public static final int ic_battery_status_bad_24dp=0x7f08010a;
    public static final int ic_battery_status_good_24dp=0x7f08010b;
    public static final int ic_battery_status_maybe_24dp=0x7f08010c;
    public static final int ic_bluetooth_disabled=0x7f08010d;
    public static final int ic_bubble_all=0x7f08010e;
    public static final int ic_bubble_none=0x7f08010f;
    public static final int ic_bubble_selected=0x7f080110;
    public static final int ic_call_24dp=0x7f080111;
    public static final int ic_call_grey_24dp=0x7f080112;
    public static final int ic_calls_sms=0x7f080113;
    public static final int ic_cancel=0x7f080114;
    public static final int ic_captioning=0x7f080115;
    public static final int ic_carrier_wifi=0x7f080116;
    public static final int ic_cast_24dp=0x7f080117;
    public static final int ic_cellular_1_bar=0x7f080118;
    public static final int ic_cellular_off=0x7f080119;
    public static final int ic_check_box_anim=0x7f08011a;
    public static final int ic_check_box_blue_24dp=0x7f08011b;
    public static final int ic_check_box_outline_24dp=0x7f08011c;
    public static final int ic_check_circle_green=0x7f08011d;
    public static final int ic_check_green_24dp=0x7f08011e;
    public static final int ic_checked_checkbox=0x7f08011f;
    public static final int ic_chevron_right_24dp=0x7f080120;
    public static final int ic_clear=0x7f080121;
    public static final int ic_clock_black_24dp=0x7f080122;
    public static final int ic_color_arrow_left_lt=0x7f080123;
    public static final int ic_color_arrow_right_lt=0x7f080124;
    public static final int ic_color_inversion=0x7f080125;
    public static final int ic_color_page_indicator_focused=0x7f080126;
    public static final int ic_color_page_indicator_unfocused=0x7f080127;
    public static final int ic_content_copy_grey600_24dp=0x7f080128;
    public static final int ic_create_bubble=0x7f080129;
    public static final int ic_daltonizer=0x7f08012a;
    public static final int ic_dark_ui=0x7f08012b;
    public static final int ic_data_saver=0x7f08012c;
    public static final int ic_delete=0x7f08012d;
    public static final int ic_delete_accent=0x7f08012e;
    public static final int ic_delete_x=0x7f08012f;
    public static final int ic_demote_conversation=0x7f080130;
    public static final int ic_device_locked_24dp=0x7f080131;
    public static final int ic_devices_check_circle_green_32dp=0x7f080132;
    public static final int ic_devices_other=0x7f080133;
    public static final int ic_devices_other_32dp=0x7f080134;
    public static final int ic_dialog_close_dark=0x7f080135;
    public static final int ic_dialog_close_light=0x7f080136;
    public static final int ic_do_not_disturb_on_24dp=0x7f080137;
    public static final int ic_download_for_offline=0x7f080138;
    public static final int ic_e_mobiledata=0x7f080139;
    public static final int ic_eject_24dp=0x7f08013a;
    public static final int ic_emergency_gesture_24dp=0x7f08013b;
    public static final int ic_enhanced_connectivity=0x7f08013c;
    public static final int ic_enterprise=0x7f08013d;
    public static final int ic_event=0x7f08013e;
    public static final int ic_event_white=0x7f08013f;
    public static final int ic_expand=0x7f080140;
    public static final int ic_expand_less=0x7f080141;
    public static final int ic_expand_more_inverse=0x7f080142;
    public static final int ic_face_24dp=0x7f080143;
    public static final int ic_face_enroll_introduction_detail=0x7f080144;
    public static final int ic_face_enroll_introduction_glasses=0x7f080145;
    public static final int ic_face_enroll_introduction_people=0x7f080146;
    public static final int ic_face_enroll_introduction_visibility=0x7f080147;
    public static final int ic_face_header=0x7f080148;
    public static final int ic_feedback_24dp=0x7f080149;
    public static final int ic_files_go_round=0x7f08014a;
    public static final int ic_find_device_disabled=0x7f08014b;
    public static final int ic_find_device_enabled=0x7f08014c;
    public static final int ic_find_in_page_24px=0x7f08014d;
    public static final int ic_fingerprint=0x7f08014e;
    public static final int ic_fingerprint_24dp=0x7f08014f;
    public static final int ic_fingerprint_header=0x7f080150;
    public static final int ic_fingerprint_introduction_shield_24dp=0x7f080151;
    public static final int ic_fingerprint_list_icon=0x7f080152;
    public static final int ic_fingerprint_success=0x7f080153;
    public static final int ic_folder_vd_theme_24=0x7f080154;
    public static final int ic_font_size=0x7f080155;
    public static final int ic_font_size_16dp=0x7f080156;
    public static final int ic_font_size_24dp=0x7f080157;
    public static final int ic_force_bold=0x7f080158;
    public static final int ic_frequency_antenna=0x7f080159;
    public static final int ic_friction_lock_closed=0x7f08015a;
    public static final int ic_friction_money=0x7f08015b;
    public static final int ic_g_mobiledata=0x7f08015c;
    public static final int ic_gesture_play_button=0x7f08015d;
    public static final int ic_gray_scale_24dp=0x7f08015e;
    public static final int ic_group_collapse_00=0x7f08015f;
    public static final int ic_group_collapse_01=0x7f080160;
    public static final int ic_group_collapse_02=0x7f080161;
    public static final int ic_group_collapse_03=0x7f080162;
    public static final int ic_group_collapse_04=0x7f080163;
    public static final int ic_group_collapse_05=0x7f080164;
    public static final int ic_group_collapse_06=0x7f080165;
    public static final int ic_group_collapse_07=0x7f080166;
    public static final int ic_group_collapse_08=0x7f080167;
    public static final int ic_group_collapse_09=0x7f080168;
    public static final int ic_group_collapse_10=0x7f080169;
    public static final int ic_group_collapse_11=0x7f08016a;
    public static final int ic_group_collapse_12=0x7f08016b;
    public static final int ic_group_collapse_13=0x7f08016c;
    public static final int ic_group_collapse_14=0x7f08016d;
    public static final int ic_group_collapse_15=0x7f08016e;
    public static final int ic_group_expand_00=0x7f08016f;
    public static final int ic_group_expand_01=0x7f080170;
    public static final int ic_group_expand_02=0x7f080171;
    public static final int ic_group_expand_03=0x7f080172;
    public static final int ic_group_expand_04=0x7f080173;
    public static final int ic_group_expand_05=0x7f080174;
    public static final int ic_group_expand_06=0x7f080175;
    public static final int ic_group_expand_07=0x7f080176;
    public static final int ic_group_expand_08=0x7f080177;
    public static final int ic_group_expand_09=0x7f080178;
    public static final int ic_group_expand_10=0x7f080179;
    public static final int ic_group_expand_11=0x7f08017a;
    public static final int ic_group_expand_12=0x7f08017b;
    public static final int ic_group_expand_13=0x7f08017c;
    public static final int ic_group_expand_14=0x7f08017d;
    public static final int ic_group_expand_15=0x7f08017e;
    public static final int ic_h_mobiledata=0x7f08017f;
    public static final int ic_h_plus_mobiledata=0x7f080180;
    public static final int ic_hand_gesture=0x7f080181;
    public static final int ic_headphone=0x7f080182;
    public static final int ic_hearing=0x7f080183;
    public static final int ic_hearing_aid=0x7f080184;
    public static final int ic_help=0x7f080185;
    public static final int ic_help_actionbar=0x7f080186;
    public static final int ic_help_outline_32=0x7f080187;
    public static final int ic_history=0x7f080188;
    public static final int ic_homepage_about=0x7f080189;
    public static final int ic_homepage_accessibility=0x7f08018a;
    public static final int ic_homepage_accounts=0x7f08018b;
    public static final int ic_homepage_apps=0x7f08018c;
    public static final int ic_homepage_battery=0x7f08018d;
    public static final int ic_homepage_connected_device=0x7f08018e;
    public static final int ic_homepage_display=0x7f08018f;
    public static final int ic_homepage_emergency=0x7f080190;
    public static final int ic_homepage_location=0x7f080191;
    public static final int ic_homepage_network=0x7f080192;
    public static final int ic_homepage_night_display=0x7f080193;
    public static final int ic_homepage_notification=0x7f080194;
    public static final int ic_homepage_privacy=0x7f080195;
    public static final int ic_homepage_search=0x7f080196;
    public static final int ic_homepage_security=0x7f080197;
    public static final int ic_homepage_sound=0x7f080198;
    public static final int ic_homepage_storage=0x7f080199;
    public static final int ic_homepage_support=0x7f08019a;
    public static final int ic_homepage_system_dashboard=0x7f08019b;
    public static final int ic_homepage_wallpaper=0x7f08019c;
    public static final int ic_hotspot=0x7f08019d;
    public static final int ic_illustration_adaptive_connectivity=0x7f08019e;
    public static final int ic_illustration_fullscreen=0x7f08019f;
    public static final int ic_illustration_switch=0x7f0801a0;
    public static final int ic_illustration_window=0x7f0801a1;
    public static final int ic_important_outline=0x7f0801a2;
    public static final int ic_info=0x7f0801a3;
    public static final int ic_info_outline_24=0x7f0801a4;
    public static final int ic_info_outline_24dp=0x7f0801a5;
    public static final int ic_info_selector=0x7f0801a6;
    public static final int ic_instant_app_badge=0x7f0801a7;
    public static final int ic_keyboard_arrow_down=0x7f0801a8;
    public static final int ic_keyboard_black_24dp=0x7f0801a9;
    public static final int ic_label=0x7f0801aa;
    public static final int ic_launcher_background=0x7f0801ab;
    public static final int ic_launcher_foreground=0x7f0801ac;
    public static final int ic_launcher_settings=0x7f0801ad;
    public static final int ic_lightbulb_outline_24=0x7f0801ae;
    public static final int ic_link_24dp=0x7f0801af;
    public static final int ic_list_sync_anim=0x7f0801b0;
    public static final int ic_live_caption=0x7f0801b1;
    public static final int ic_local_movies=0x7f0801b2;
    public static final int ic_local_phone_24_lib=0x7f0801b3;
    public static final int ic_lock=0x7f0801b4;
    public static final int ic_lock_closed=0x7f0801b5;
    public static final int ic_lock_list_icon=0x7f0801b6;
    public static final int ic_lock_none=0x7f0801b7;
    public static final int ic_lock_pin=0x7f0801b8;
    public static final int ic_lock_swipe=0x7f0801b9;
    public static final int ic_lte_mobiledata=0x7f0801ba;
    public static final int ic_lte_plus_mobiledata=0x7f0801bb;
    public static final int ic_media_display_device=0x7f0801bc;
    public static final int ic_media_group_device=0x7f0801bd;
    public static final int ic_media_pause_dark=0x7f0801be;
    public static final int ic_media_pause_light=0x7f0801bf;
    public static final int ic_media_play_dark=0x7f0801c0;
    public static final int ic_media_play_light=0x7f0801c1;
    public static final int ic_media_speaker_device=0x7f0801c2;
    public static final int ic_media_stop_dark=0x7f0801c3;
    public static final int ic_media_stop_light=0x7f0801c4;
    public static final int ic_media_stream=0x7f0801c5;
    public static final int ic_media_stream_off=0x7f0801c6;
    public static final int ic_menu_add_activated_tint=0x7f0801c7;
    public static final int ic_mobile_call_strength_0=0x7f0801c8;
    public static final int ic_mobile_call_strength_1=0x7f0801c9;
    public static final int ic_mobile_call_strength_2=0x7f0801ca;
    public static final int ic_mobile_call_strength_3=0x7f0801cb;
    public static final int ic_mobile_call_strength_4=0x7f0801cc;
    public static final int ic_mode_edit=0x7f0801cd;
    public static final int ic_mr_button_connected_00_dark=0x7f0801ce;
    public static final int ic_mr_button_connected_00_light=0x7f0801cf;
    public static final int ic_mr_button_connected_01_dark=0x7f0801d0;
    public static final int ic_mr_button_connected_01_light=0x7f0801d1;
    public static final int ic_mr_button_connected_02_dark=0x7f0801d2;
    public static final int ic_mr_button_connected_02_light=0x7f0801d3;
    public static final int ic_mr_button_connected_03_dark=0x7f0801d4;
    public static final int ic_mr_button_connected_03_light=0x7f0801d5;
    public static final int ic_mr_button_connected_04_dark=0x7f0801d6;
    public static final int ic_mr_button_connected_04_light=0x7f0801d7;
    public static final int ic_mr_button_connected_05_dark=0x7f0801d8;
    public static final int ic_mr_button_connected_05_light=0x7f0801d9;
    public static final int ic_mr_button_connected_06_dark=0x7f0801da;
    public static final int ic_mr_button_connected_06_light=0x7f0801db;
    public static final int ic_mr_button_connected_07_dark=0x7f0801dc;
    public static final int ic_mr_button_connected_07_light=0x7f0801dd;
    public static final int ic_mr_button_connected_08_dark=0x7f0801de;
    public static final int ic_mr_button_connected_08_light=0x7f0801df;
    public static final int ic_mr_button_connected_09_dark=0x7f0801e0;
    public static final int ic_mr_button_connected_09_light=0x7f0801e1;
    public static final int ic_mr_button_connected_10_dark=0x7f0801e2;
    public static final int ic_mr_button_connected_10_light=0x7f0801e3;
    public static final int ic_mr_button_connected_11_dark=0x7f0801e4;
    public static final int ic_mr_button_connected_11_light=0x7f0801e5;
    public static final int ic_mr_button_connected_12_dark=0x7f0801e6;
    public static final int ic_mr_button_connected_12_light=0x7f0801e7;
    public static final int ic_mr_button_connected_13_dark=0x7f0801e8;
    public static final int ic_mr_button_connected_13_light=0x7f0801e9;
    public static final int ic_mr_button_connected_14_dark=0x7f0801ea;
    public static final int ic_mr_button_connected_14_light=0x7f0801eb;
    public static final int ic_mr_button_connected_15_dark=0x7f0801ec;
    public static final int ic_mr_button_connected_15_light=0x7f0801ed;
    public static final int ic_mr_button_connected_16_dark=0x7f0801ee;
    public static final int ic_mr_button_connected_16_light=0x7f0801ef;
    public static final int ic_mr_button_connected_17_dark=0x7f0801f0;
    public static final int ic_mr_button_connected_17_light=0x7f0801f1;
    public static final int ic_mr_button_connected_18_dark=0x7f0801f2;
    public static final int ic_mr_button_connected_18_light=0x7f0801f3;
    public static final int ic_mr_button_connected_19_dark=0x7f0801f4;
    public static final int ic_mr_button_connected_19_light=0x7f0801f5;
    public static final int ic_mr_button_connected_20_dark=0x7f0801f6;
    public static final int ic_mr_button_connected_20_light=0x7f0801f7;
    public static final int ic_mr_button_connected_21_dark=0x7f0801f8;
    public static final int ic_mr_button_connected_21_light=0x7f0801f9;
    public static final int ic_mr_button_connected_22_dark=0x7f0801fa;
    public static final int ic_mr_button_connected_22_light=0x7f0801fb;
    public static final int ic_mr_button_connected_23_dark=0x7f0801fc;
    public static final int ic_mr_button_connected_23_light=0x7f0801fd;
    public static final int ic_mr_button_connected_24_dark=0x7f0801fe;
    public static final int ic_mr_button_connected_24_light=0x7f0801ff;
    public static final int ic_mr_button_connected_25_dark=0x7f080200;
    public static final int ic_mr_button_connected_25_light=0x7f080201;
    public static final int ic_mr_button_connected_26_dark=0x7f080202;
    public static final int ic_mr_button_connected_26_light=0x7f080203;
    public static final int ic_mr_button_connected_27_dark=0x7f080204;
    public static final int ic_mr_button_connected_27_light=0x7f080205;
    public static final int ic_mr_button_connected_28_dark=0x7f080206;
    public static final int ic_mr_button_connected_28_light=0x7f080207;
    public static final int ic_mr_button_connected_29_dark=0x7f080208;
    public static final int ic_mr_button_connected_29_light=0x7f080209;
    public static final int ic_mr_button_connected_30_dark=0x7f08020a;
    public static final int ic_mr_button_connected_30_light=0x7f08020b;
    public static final int ic_mr_button_connecting_00_dark=0x7f08020c;
    public static final int ic_mr_button_connecting_00_light=0x7f08020d;
    public static final int ic_mr_button_connecting_01_dark=0x7f08020e;
    public static final int ic_mr_button_connecting_01_light=0x7f08020f;
    public static final int ic_mr_button_connecting_02_dark=0x7f080210;
    public static final int ic_mr_button_connecting_02_light=0x7f080211;
    public static final int ic_mr_button_connecting_03_dark=0x7f080212;
    public static final int ic_mr_button_connecting_03_light=0x7f080213;
    public static final int ic_mr_button_connecting_04_dark=0x7f080214;
    public static final int ic_mr_button_connecting_04_light=0x7f080215;
    public static final int ic_mr_button_connecting_05_dark=0x7f080216;
    public static final int ic_mr_button_connecting_05_light=0x7f080217;
    public static final int ic_mr_button_connecting_06_dark=0x7f080218;
    public static final int ic_mr_button_connecting_06_light=0x7f080219;
    public static final int ic_mr_button_connecting_07_dark=0x7f08021a;
    public static final int ic_mr_button_connecting_07_light=0x7f08021b;
    public static final int ic_mr_button_connecting_08_dark=0x7f08021c;
    public static final int ic_mr_button_connecting_08_light=0x7f08021d;
    public static final int ic_mr_button_connecting_09_dark=0x7f08021e;
    public static final int ic_mr_button_connecting_09_light=0x7f08021f;
    public static final int ic_mr_button_connecting_10_dark=0x7f080220;
    public static final int ic_mr_button_connecting_10_light=0x7f080221;
    public static final int ic_mr_button_connecting_11_dark=0x7f080222;
    public static final int ic_mr_button_connecting_11_light=0x7f080223;
    public static final int ic_mr_button_connecting_12_dark=0x7f080224;
    public static final int ic_mr_button_connecting_12_light=0x7f080225;
    public static final int ic_mr_button_connecting_13_dark=0x7f080226;
    public static final int ic_mr_button_connecting_13_light=0x7f080227;
    public static final int ic_mr_button_connecting_14_dark=0x7f080228;
    public static final int ic_mr_button_connecting_14_light=0x7f080229;
    public static final int ic_mr_button_connecting_15_dark=0x7f08022a;
    public static final int ic_mr_button_connecting_15_light=0x7f08022b;
    public static final int ic_mr_button_connecting_16_dark=0x7f08022c;
    public static final int ic_mr_button_connecting_16_light=0x7f08022d;
    public static final int ic_mr_button_connecting_17_dark=0x7f08022e;
    public static final int ic_mr_button_connecting_17_light=0x7f08022f;
    public static final int ic_mr_button_connecting_18_dark=0x7f080230;
    public static final int ic_mr_button_connecting_18_light=0x7f080231;
    public static final int ic_mr_button_connecting_19_dark=0x7f080232;
    public static final int ic_mr_button_connecting_19_light=0x7f080233;
    public static final int ic_mr_button_connecting_20_dark=0x7f080234;
    public static final int ic_mr_button_connecting_20_light=0x7f080235;
    public static final int ic_mr_button_connecting_21_dark=0x7f080236;
    public static final int ic_mr_button_connecting_21_light=0x7f080237;
    public static final int ic_mr_button_connecting_22_dark=0x7f080238;
    public static final int ic_mr_button_connecting_22_light=0x7f080239;
    public static final int ic_mr_button_connecting_23_dark=0x7f08023a;
    public static final int ic_mr_button_connecting_23_light=0x7f08023b;
    public static final int ic_mr_button_connecting_24_dark=0x7f08023c;
    public static final int ic_mr_button_connecting_24_light=0x7f08023d;
    public static final int ic_mr_button_connecting_25_dark=0x7f08023e;
    public static final int ic_mr_button_connecting_25_light=0x7f08023f;
    public static final int ic_mr_button_connecting_26_dark=0x7f080240;
    public static final int ic_mr_button_connecting_26_light=0x7f080241;
    public static final int ic_mr_button_connecting_27_dark=0x7f080242;
    public static final int ic_mr_button_connecting_27_light=0x7f080243;
    public static final int ic_mr_button_connecting_28_dark=0x7f080244;
    public static final int ic_mr_button_connecting_28_light=0x7f080245;
    public static final int ic_mr_button_connecting_29_dark=0x7f080246;
    public static final int ic_mr_button_connecting_29_light=0x7f080247;
    public static final int ic_mr_button_connecting_30_dark=0x7f080248;
    public static final int ic_mr_button_connecting_30_light=0x7f080249;
    public static final int ic_mr_button_disabled_dark=0x7f08024a;
    public static final int ic_mr_button_disabled_light=0x7f08024b;
    public static final int ic_mr_button_disconnected_dark=0x7f08024c;
    public static final int ic_mr_button_disconnected_light=0x7f08024d;
    public static final int ic_mr_button_grey=0x7f08024e;
    public static final int ic_mtrl_checked_circle=0x7f08024f;
    public static final int ic_mtrl_chip_checked_black=0x7f080250;
    public static final int ic_mtrl_chip_checked_circle=0x7f080251;
    public static final int ic_mtrl_chip_close_circle=0x7f080252;
    public static final int ic_network_cell=0x7f080253;
    public static final int ic_network_setup=0x7f080254;
    public static final int ic_network_signal_blue=0x7f080255;
    public static final int ic_nfc=0x7f080256;
    public static final int ic_no_internet_available=0x7f080257;
    public static final int ic_no_internet_unavailable=0x7f080258;
    public static final int ic_no_internet_wifi_signal_0=0x7f080259;
    public static final int ic_no_internet_wifi_signal_1=0x7f08025a;
    public static final int ic_no_internet_wifi_signal_2=0x7f08025b;
    public static final int ic_no_internet_wifi_signal_3=0x7f08025c;
    public static final int ic_no_internet_wifi_signal_4=0x7f08025d;
    public static final int ic_notification_alert=0x7f08025e;
    public static final int ic_notification_block=0x7f08025f;
    public static final int ic_notification_dot=0x7f080260;
    public static final int ic_notification_min=0x7f080261;
    public static final int ic_notification_peek=0x7f080262;
    public static final int ic_notification_silence=0x7f080263;
    public static final int ic_notification_vis_override=0x7f080264;
    public static final int ic_notifications=0x7f080265;
    public static final int ic_notifications_alert=0x7f080266;
    public static final int ic_notifications_off_24dp=0x7f080267;
    public static final int ic_notifications_white=0x7f080268;
    public static final int ic_ongoing_notification=0x7f080269;
    public static final int ic_open_wifi_autoconnect=0x7f08026a;
    public static final int ic_open_wifi_notifications=0x7f08026b;
    public static final int ic_ota_update_available=0x7f08026c;
    public static final int ic_ota_update_current=0x7f08026d;
    public static final int ic_ota_update_none=0x7f08026e;
    public static final int ic_ota_update_stale=0x7f08026f;
    public static final int ic_package_verifier_disabled=0x7f080270;
    public static final int ic_package_verifier_enabled=0x7f080271;
    public static final int ic_package_verifier_removed=0x7f080272;
    public static final int ic_pan_tool_18dp=0x7f080273;
    public static final int ic_partial_system_update_current=0x7f080274;
    public static final int ic_partial_system_update_stale=0x7f080275;
    public static final int ic_password=0x7f080276;
    public static final int ic_pattern=0x7f080277;
    public static final int ic_perm_device_information_green_24dp=0x7f080278;
    public static final int ic_perm_device_information_red_24dp=0x7f080279;
    public static final int ic_phone=0x7f08027a;
    public static final int ic_phone_info=0x7f08027b;
    public static final int ic_photo_library=0x7f08027c;
    public static final int ic_pin=0x7f08027d;
    public static final int ic_power_system=0x7f08027e;
    public static final int ic_preference_location=0x7f08027f;
    public static final int ic_privacy_shield_24dp=0x7f080280;
    public static final int ic_promote_conversation=0x7f080281;
    public static final int ic_qrcode_24dp=0x7f080282;
    public static final int ic_qrcode_32dp=0x7f080283;
    public static final int ic_radio_button_checked_black_24dp=0x7f080284;
    public static final int ic_radio_button_unchecked_black_24dp=0x7f080285;
    public static final int ic_redo_24=0x7f080286;
    public static final int ic_reduce_bright_colors=0x7f080287;
    public static final int ic_remove_24dp=0x7f080288;
    public static final int ic_remove_circle=0x7f080289;
    public static final int ic_repair_24dp=0x7f08028a;
    public static final int ic_restore=0x7f08028b;
    public static final int ic_rtt_settings=0x7f08028c;
    public static final int ic_scan_24dp=0x7f08028d;
    public static final int ic_scan_32dp=0x7f08028e;
    public static final int ic_screen_zoom=0x7f08028f;
    public static final int ic_sd_card=0x7f080290;
    public static final int ic_search_24dp=0x7f080291;
    public static final int ic_security_lock_24dp=0x7f080292;
    public static final int ic_security_pattern_3x3=0x7f080293;
    public static final int ic_security_pattern_4x4=0x7f080294;
    public static final int ic_security_pattern_5x5=0x7f080295;
    public static final int ic_security_pattern_6x6=0x7f080296;
    public static final int ic_settings_24dp=0x7f080297;
    public static final int ic_settings_about=0x7f080298;
    public static final int ic_settings_accent=0x7f080299;
    public static final int ic_settings_accessibility=0x7f08029a;
    public static final int ic_settings_accounts=0x7f08029b;
    public static final int ic_settings_adaptive_sleep=0x7f08029c;
    public static final int ic_settings_all=0x7f08029d;
    public static final int ic_settings_aod=0x7f08029e;
    public static final int ic_settings_applications=0x7f08029f;
    public static final int ic_settings_backup=0x7f0802a0;
    public static final int ic_settings_backup_restore=0x7f0802a1;
    public static final int ic_settings_battery=0x7f0802a2;
    public static final int ic_settings_battery_white=0x7f0802a3;
    public static final int ic_settings_camera=0x7f0802a4;
    public static final int ic_settings_cell_standby=0x7f0802a5;
    public static final int ic_settings_close=0x7f0802a6;
    public static final int ic_settings_data_usage=0x7f0802a7;
    public static final int ic_settings_date_time=0x7f0802a8;
    public static final int ic_settings_delete=0x7f0802a9;
    public static final int ic_settings_development=0x7f0802aa;
    public static final int ic_settings_disable=0x7f0802ab;
    public static final int ic_settings_display=0x7f0802ac;
    public static final int ic_settings_display_white=0x7f0802ad;
    public static final int ic_settings_emergency=0x7f0802ae;
    public static final int ic_settings_enable=0x7f0802af;
    public static final int ic_settings_ethernet=0x7f0802b0;
    public static final int ic_settings_expand_less=0x7f0802b1;
    public static final int ic_settings_expand_more=0x7f0802b2;
    public static final int ic_settings_force_stop=0x7f0802b3;
    public static final int ic_settings_gestures=0x7f0802b4;
    public static final int ic_settings_home=0x7f0802b5;
    public static final int ic_settings_install=0x7f0802b6;
    public static final int ic_settings_language=0x7f0802b7;
    public static final int ic_settings_location=0x7f0802b8;
    public static final int ic_settings_memory=0x7f0802b9;
    public static final int ic_settings_multiuser=0x7f0802ba;
    public static final int ic_settings_nfc_payment=0x7f0802bb;
    public static final int ic_settings_night_display=0x7f0802bc;
    public static final int ic_settings_night_display_white=0x7f0802bd;
    public static final int ic_settings_open=0x7f0802be;
    public static final int ic_settings_personal=0x7f0802bf;
    public static final int ic_settings_phone_idle=0x7f0802c0;
    public static final int ic_settings_print=0x7f0802c1;
    public static final int ic_settings_privacy=0x7f0802c2;
    public static final int ic_settings_security=0x7f0802c3;
    public static final int ic_settings_security_white=0x7f0802c4;
    public static final int ic_settings_sign_in=0x7f0802c5;
    public static final int ic_settings_sim=0x7f0802c6;
    public static final int ic_settings_sound=0x7f0802c7;
    public static final int ic_settings_sync=0x7f0802c8;
    public static final int ic_settings_sync_disabled=0x7f0802c9;
    public static final int ic_settings_sync_failed=0x7f0802ca;
    public static final int ic_settings_system_dashboard_white=0x7f0802cb;
    public static final int ic_settings_voice_calls=0x7f0802cc;
    public static final int ic_settings_wallpaper_white=0x7f0802cd;
    public static final int ic_settings_widget_background=0x7f0802ce;
    public static final int ic_settings_wireless=0x7f0802cf;
    public static final int ic_settings_wireless_white=0x7f0802d0;
    public static final int ic_shortcut_battery=0x7f0802d1;
    public static final int ic_shortcut_data_usage=0x7f0802d2;
    public static final int ic_shortcut_wireless=0x7f0802d3;
    public static final int ic_show_x_wifi_signal_0=0x7f0802d4;
    public static final int ic_show_x_wifi_signal_1=0x7f0802d5;
    public static final int ic_show_x_wifi_signal_2=0x7f0802d6;
    public static final int ic_show_x_wifi_signal_3=0x7f0802d7;
    public static final int ic_show_x_wifi_signal_4=0x7f0802d8;
    public static final int ic_signal_flashlight=0x7f0802d9;
    public static final int ic_signal_strength_4g=0x7f0802da;
    public static final int ic_signal_strength_zero_bar_no_internet=0x7f0802db;
    public static final int ic_signal_workmode_enable=0x7f0802dc;
    public static final int ic_sim_alert=0x7f0802dd;
    public static final int ic_sim_card=0x7f0802de;
    public static final int ic_sim_sd=0x7f0802df;
    public static final int ic_skip=0x7f0802e0;
    public static final int ic_smartphone=0x7f0802e1;
    public static final int ic_sms=0x7f0802e2;
    public static final int ic_snooze=0x7f0802e3;
    public static final int ic_speaker_group_black_24dp=0x7f0802e4;
    public static final int ic_storage=0x7f0802e5;
    public static final int ic_storage_apps=0x7f0802e6;
    public static final int ic_storage_grey=0x7f0802e7;
    public static final int ic_storage_white=0x7f0802e8;
    public static final int ic_storage_wizard_external=0x7f0802e9;
    public static final int ic_storage_wizard_internal=0x7f0802ea;
    public static final int ic_suggested_notifications=0x7f0802eb;
    public static final int ic_suggestion_close_button=0x7f0802ec;
    public static final int ic_suggestion_dnd=0x7f0802ed;
    public static final int ic_suggestion_fingerprint=0x7f0802ee;
    public static final int ic_suggestion_night_display=0x7f0802ef;
    public static final int ic_suggestion_security=0x7f0802f0;
    public static final int ic_suggestion_wireless=0x7f0802f1;
    public static final int ic_support_24dp=0x7f0802f2;
    public static final int ic_swap=0x7f0802f3;
    public static final int ic_swap_horiz=0x7f0802f4;
    public static final int ic_swap_horiz_blue=0x7f0802f5;
    public static final int ic_swap_horiz_grey=0x7f0802f6;
    public static final int ic_sync=0x7f0802f7;
    public static final int ic_sync_problem_24dp=0x7f0802f8;
    public static final int ic_system_controls=0x7f0802f9;
    public static final int ic_system_update=0x7f0802fa;
    public static final int ic_tap_assistance=0x7f0802fb;
    public static final int ic_text_and_display=0x7f0802fc;
    public static final int ic_text_dot=0x7f0802fd;
    public static final int ic_theme=0x7f0802fe;
    public static final int ic_timelapse=0x7f0802ff;
    public static final int ic_timelapse_white=0x7f080300;
    public static final int ic_today=0x7f080301;
    public static final int ic_translate_24dp=0x7f080302;
    public static final int ic_trash_can=0x7f080303;
    public static final int ic_unchecked_checkbox=0x7f080304;
    public static final int ic_undo_24=0x7f080305;
    public static final int ic_upload=0x7f080306;
    public static final int ic_usb=0x7f080307;
    public static final int ic_vibration=0x7f080308;
    public static final int ic_videogame_vd_theme_24=0x7f080309;
    public static final int ic_visibility_18dp=0x7f08030a;
    public static final int ic_vol_mute=0x7f08030b;
    public static final int ic_vol_type_speaker_dark=0x7f08030c;
    public static final int ic_vol_type_speaker_group_dark=0x7f08030d;
    public static final int ic_vol_type_speaker_group_light=0x7f08030e;
    public static final int ic_vol_type_speaker_light=0x7f08030f;
    public static final int ic_vol_type_tv_dark=0x7f080310;
    public static final int ic_vol_type_tv_light=0x7f080311;
    public static final int ic_vol_unmute=0x7f080312;
    public static final int ic_volume_remote=0x7f080313;
    public static final int ic_volume_remote_mute=0x7f080314;
    public static final int ic_volume_ringer_vibrate=0x7f080315;
    public static final int ic_volume_up_24dp=0x7f080316;
    public static final int ic_vpn_key=0x7f080317;
    public static final int ic_wallpaper=0x7f080318;
    public static final int ic_warning=0x7f080319;
    public static final int ic_warning_24dp=0x7f08031a;
    public static final int ic_warning_circle_24dp=0x7f08031b;
    public static final int ic_wifi_call_strength_0=0x7f08031c;
    public static final int ic_wifi_call_strength_1=0x7f08031d;
    public static final int ic_wifi_call_strength_2=0x7f08031e;
    public static final int ic_wifi_call_strength_3=0x7f08031f;
    public static final int ic_wifi_call_strength_4=0x7f080320;
    public static final int ic_wifi_off=0x7f080321;
    public static final int ic_wifi_privacy_24dp=0x7f080322;
    public static final int ic_wifi_signal_0=0x7f080323;
    public static final int ic_wifi_signal_1=0x7f080324;
    public static final int ic_wifi_signal_2=0x7f080325;
    public static final int ic_wifi_signal_3=0x7f080326;
    public static final int ic_wifi_signal_4=0x7f080327;
    public static final int ic_wifi_signal_4_32dp=0x7f080328;
    public static final int ic_wifi_signal_lock=0x7f080329;
    public static final int ic_wifi_tethering=0x7f08032a;
    public static final int illustration_accessibility_button=0x7f08032b;
    public static final int illustration_accessibility_gesture_three_finger=0x7f08032c;
    public static final int illustration_accessibility_gesture_two_finger=0x7f08032d;
    public static final int left_rounded_ripple=0x7f08032e;
    public static final int line=0x7f08032f;
    public static final int line_drawable=0x7f080330;
    public static final int material_cursor_drawable=0x7f080331;
    public static final int material_ic_calendar_black_24dp=0x7f080332;
    public static final int material_ic_clear_black_24dp=0x7f080333;
    public static final int material_ic_edit_black_24dp=0x7f080334;
    public static final int material_ic_keyboard_arrow_left_black_24dp=0x7f080335;
    public static final int material_ic_keyboard_arrow_next_black_24dp=0x7f080336;
    public static final int material_ic_keyboard_arrow_previous_black_24dp=0x7f080337;
    public static final int material_ic_keyboard_arrow_right_black_24dp=0x7f080338;
    public static final int material_ic_menu_arrow_down_black_24dp=0x7f080339;
    public static final int material_ic_menu_arrow_up_black_24dp=0x7f08033a;
    public static final int mr_button_connected_dark=0x7f08033b;
    public static final int mr_button_connected_light=0x7f08033c;
    public static final int mr_button_connecting_dark=0x7f08033d;
    public static final int mr_button_connecting_light=0x7f08033e;
    public static final int mr_button_dark=0x7f08033f;
    public static final int mr_button_dark_static=0x7f080340;
    public static final int mr_button_light=0x7f080341;
    public static final int mr_button_light_static=0x7f080342;
    public static final int mr_cast_checkbox=0x7f080343;
    public static final int mr_cast_group_seekbar_track=0x7f080344;
    public static final int mr_cast_mute_button=0x7f080345;
    public static final int mr_cast_route_seekbar_track=0x7f080346;
    public static final int mr_cast_stop=0x7f080347;
    public static final int mr_cast_thumb=0x7f080348;
    public static final int mr_dialog_close_dark=0x7f080349;
    public static final int mr_dialog_close_light=0x7f08034a;
    public static final int mr_dialog_material_background_dark=0x7f08034b;
    public static final int mr_dialog_material_background_light=0x7f08034c;
    public static final int mr_group_collapse=0x7f08034d;
    public static final int mr_group_expand=0x7f08034e;
    public static final int mr_media_pause_dark=0x7f08034f;
    public static final int mr_media_pause_light=0x7f080350;
    public static final int mr_media_play_dark=0x7f080351;
    public static final int mr_media_play_light=0x7f080352;
    public static final int mr_media_stop_dark=0x7f080353;
    public static final int mr_media_stop_light=0x7f080354;
    public static final int mr_vol_type_audiotrack_dark=0x7f080355;
    public static final int mr_vol_type_audiotrack_light=0x7f080356;
    public static final int msg_bubble_incoming=0x7f080357;
    public static final int msg_bubble_outgoing=0x7f080358;
    public static final int mtrl_dialog_background=0x7f080359;
    public static final int mtrl_dropdown_arrow=0x7f08035a;
    public static final int mtrl_ic_arrow_drop_down=0x7f08035b;
    public static final int mtrl_ic_arrow_drop_up=0x7f08035c;
    public static final int mtrl_ic_cancel=0x7f08035d;
    public static final int mtrl_ic_error=0x7f08035e;
    public static final int mtrl_navigation_bar_item_background=0x7f08035f;
    public static final int mtrl_popupmenu_background=0x7f080360;
    public static final int mtrl_popupmenu_background_dark=0x7f080361;
    public static final int mtrl_tabs_default_indicator=0x7f080362;
    public static final int navigation_empty_icon=0x7f080363;
    public static final int nfc_detection_point=0x7f080364;
    public static final int nfc_how_it_works=0x7f080365;
    public static final int notification_action_background=0x7f080366;
    public static final int notification_bg=0x7f080367;
    public static final int notification_bg_low=0x7f080368;
    public static final int notification_bg_low_normal=0x7f080369;
    public static final int notification_bg_low_pressed=0x7f08036a;
    public static final int notification_bg_normal=0x7f08036b;
    public static final int notification_bg_normal_pressed=0x7f08036c;
    public static final int notification_icon_background=0x7f08036d;
    public static final int notification_template_icon_bg=0x7f08036e;
    public static final int notification_template_icon_low_bg=0x7f08036f;
    public static final int notification_tile_bg=0x7f080370;
    public static final int notify_panel_notification_icon_bg=0x7f080371;
    public static final int one_handed_guideline=0x7f080372;
    public static final int preference_background=0x7f080373;
    public static final int preference_highlight=0x7f080374;
    public static final int preference_list_divider_material=0x7f080375;
    public static final int preview_seek_bar_outline=0x7f080376;
    public static final int progress_indeterminate_horizontal_material_trimmed=0x7f080377;
    public static final int protection_background=0x7f080378;
    public static final int quickly_open_camera=0x7f080379;
    public static final int radio_button_check=0x7f08037a;
    public static final int regulatory_info=0x7f08037b;
    public static final int right_rounded_ripple=0x7f08037c;
    public static final int ring_notif_increasing=0x7f08037d;
    public static final int ring_progress=0x7f08037e;
    public static final int rounded_bg=0x7f08037f;
    public static final int rounded_bk=0x7f080380;
    public static final int rounded_ripple=0x7f080381;
    public static final int search_bar_selected_background=0x7f080382;
    public static final int selectable_card=0x7f080383;
    public static final int settings_panel_background=0x7f080384;
    public static final int settings_panel_rounded_top_corner_background=0x7f080385;
    public static final int settings_spinner_background=0x7f080386;
    public static final int settings_spinner_dropdown_background=0x7f080387;
    public static final int settingslib_card_background=0x7f080388;
    public static final int settingslib_ic_cross=0x7f080389;
    public static final int settingslib_ic_info_outline_24=0x7f08038a;
    public static final int settingslib_progress_horizontal=0x7f08038b;
    public static final int settingslib_switch_bar_bg_disabled=0x7f08038c;
    public static final int settingslib_switch_bar_bg_off=0x7f08038d;
    public static final int settingslib_switch_bar_bg_on=0x7f08038e;
    public static final int settingslib_switch_thumb=0x7f08038f;
    public static final int settingslib_switch_track=0x7f080390;
    public static final int shortcut_base=0x7f080391;
    public static final int signal_strength_1x=0x7f080392;
    public static final int signal_strength_3g=0x7f080393;
    public static final int signal_strength_5g=0x7f080394;
    public static final int signal_strength_g=0x7f080395;
    public static final int signal_strength_lte=0x7f080396;
    public static final int square_bk=0x7f080397;
    public static final int square_ripple=0x7f080398;
    public static final int stat_sys_airplane_mode=0x7f080399;
    public static final int sud_card_bg=0x7f08039a;
    public static final int sud_card_bg_dark=0x7f08039b;
    public static final int sud_card_bg_light=0x7f08039c;
    public static final int sud_dialog_background_dark=0x7f08039d;
    public static final int sud_dialog_background_light=0x7f08039e;
    public static final int sud_edit_text_bg=0x7f08039f;
    public static final int sud_edit_text_bg_shape=0x7f0803a0;
    public static final int sud_fourcolor_progress_bar=0x7f0803a1;
    public static final int sud_ic_expand=0x7f0803a2;
    public static final int sud_ic_expand_less=0x7f0803a3;
    public static final int sud_ic_expand_more=0x7f0803a4;
    public static final int sud_layout_background=0x7f0803a5;
    public static final int sud_navbar_btn_bg=0x7f0803a6;
    public static final int sud_navbar_btn_bg_dark=0x7f0803a7;
    public static final int sud_navbar_btn_bg_light=0x7f0803a8;
    public static final int sud_navbar_ic_back=0x7f0803a9;
    public static final int sud_navbar_ic_down_arrow=0x7f0803aa;
    public static final int sud_navbar_ic_left_arrow=0x7f0803ab;
    public static final int sud_navbar_ic_more=0x7f0803ac;
    public static final int sud_navbar_ic_next=0x7f0803ad;
    public static final int sud_navbar_ic_right_arrow=0x7f0803ae;
    public static final int sud_scroll_bar_dark=0x7f0803af;
    public static final int sud_scroll_bar_light=0x7f0803b0;
    public static final int sud_switch_thumb_off=0x7f0803b1;
    public static final int sud_switch_thumb_on=0x7f0803b2;
    public static final int sud_switch_thumb_selector=0x7f0803b3;
    public static final int sud_switch_track_off_background=0x7f0803b4;
    public static final int sud_switch_track_on_background=0x7f0803b5;
    public static final int sud_switch_track_selector=0x7f0803b6;
    public static final int switchbar_background=0x7f0803b7;
    public static final int system_nav_2_button=0x7f0803b8;
    public static final int system_nav_3_button=0x7f0803b9;
    public static final int system_nav_fully_gestural=0x7f0803ba;
    public static final int tabs_indicator_background=0x7f0803bb;
    public static final int tapandpay_emptystate=0x7f0803bc;
    public static final int test_custom_background=0x7f0803bd;
    public static final int thumb=0x7f0803be;
    public static final int thumb_drawable=0x7f0803bf;
    public static final int tile_icon_animation_speed=0x7f0803c0;
    public static final int tile_icon_debugging_wireless=0x7f0803c1;
    public static final int tile_icon_force_rtl=0x7f0803c2;
    public static final int tile_icon_graphics=0x7f0803c3;
    public static final int tile_icon_sensors_off=0x7f0803c4;
    public static final int tile_icon_show_layout=0x7f0803c5;
    public static final int tile_icon_show_taps=0x7f0803c6;
    public static final int tile_icon_winscope_trace=0x7f0803c7;
    public static final int tooltip_frame_dark=0x7f0803c8;
    public static final int tooltip_frame_light=0x7f0803c9;
    public static final int transparency=0x7f0803ca;
    public static final int transparency_tileable=0x7f0803cb;
    public static final int vector_drawable_progress_indeterminate_horizontal_trimmed=0x7f0803cc;
    public static final int volume_dialog_button_background_outline=0x7f0803cd;
    public static final int volume_dialog_button_background_solid=0x7f0803ce;
    public static final int wifi_dpp_error=0x7f0803cf;
    public static final int wifi_dpp_success=0x7f0803d0;
    public static final int wifi_friction=0x7f0803d1;
    public static final int wifi_signal=0x7f0803d2;
    public static final int work_challenge_background=0x7f0803d3;
    public static final int zen_calls_any=0x7f0803d4;
    public static final int zen_calls_contacts=0x7f0803d5;
    public static final int zen_calls_none=0x7f0803d6;
    public static final int zen_calls_starred=0x7f0803d7;
    public static final int zen_messages_any=0x7f0803d8;
    public static final int zen_messages_contacts=0x7f0803d9;
    public static final int zen_messages_none=0x7f0803da;
    public static final int zen_messages_starred=0x7f0803db;
  }
  public static final class fraction {
    /**
     * Margin on the right side of the system icon group on Keyguard.
     */
    public static final int battery_button_height_fraction=0x7f090000;
    /**
     * Fraction value to smooth the edges of the battery icon. The path will be inset by this
     * fraction of a pixel.
     */
    public static final int battery_subpixel_smoothing_left=0x7f090001;
    public static final int battery_subpixel_smoothing_right=0x7f090002;
    /**
     * Ratio between height of button part and height of total
     */
    public static final int bt_battery_button_height_fraction=0x7f090003;
    /**
     * Ratio between width and height
     */
    public static final int bt_battery_ratio_fraction=0x7f090004;
    /**
     * Ratio of height between battery icon and bluetooth icon
     */
    public static final int bt_battery_scale_fraction=0x7f090005;
    public static final int fingerprint_sensor_location_fraction_x=0x7f090006;
    public static final int fingerprint_sensor_location_fraction_y=0x7f090007;
  }
  public static final class id {
    public static final int ALT=0x7f0a0000;
    public static final int BOTTOM_END=0x7f0a0001;
    public static final int BOTTOM_START=0x7f0a0002;
    public static final int CTRL=0x7f0a0003;
    public static final int FUNCTION=0x7f0a0004;
    public static final int META=0x7f0a0005;
    public static final int NO_DEBUG=0x7f0a0006;
    public static final int SHIFT=0x7f0a0007;
    public static final int SHOW_ALL=0x7f0a0008;
    public static final int SHOW_PATH=0x7f0a0009;
    public static final int SHOW_PROGRESS=0x7f0a000a;
    public static final int SYM=0x7f0a000b;
    public static final int TOP_END=0x7f0a000c;
    public static final int TOP_START=0x7f0a000d;
    public static final int abc_icon_frame=0x7f0a000e;
    public static final int accelerate=0x7f0a000f;
    public static final int accept=0x7f0a0010;
    public static final int accessibility_action_clickable_span=0x7f0a0011;
    public static final int accessibility_button=0x7f0a0012;
    public static final int accessibility_custom_action_0=0x7f0a0013;
    public static final int accessibility_custom_action_1=0x7f0a0014;
    public static final int accessibility_custom_action_10=0x7f0a0015;
    public static final int accessibility_custom_action_11=0x7f0a0016;
    public static final int accessibility_custom_action_12=0x7f0a0017;
    public static final int accessibility_custom_action_13=0x7f0a0018;
    public static final int accessibility_custom_action_14=0x7f0a0019;
    public static final int accessibility_custom_action_15=0x7f0a001a;
    public static final int accessibility_custom_action_16=0x7f0a001b;
    public static final int accessibility_custom_action_17=0x7f0a001c;
    public static final int accessibility_custom_action_18=0x7f0a001d;
    public static final int accessibility_custom_action_19=0x7f0a001e;
    public static final int accessibility_custom_action_2=0x7f0a001f;
    public static final int accessibility_custom_action_20=0x7f0a0020;
    public static final int accessibility_custom_action_21=0x7f0a0021;
    public static final int accessibility_custom_action_22=0x7f0a0022;
    public static final int accessibility_custom_action_23=0x7f0a0023;
    public static final int accessibility_custom_action_24=0x7f0a0024;
    public static final int accessibility_custom_action_25=0x7f0a0025;
    public static final int accessibility_custom_action_26=0x7f0a0026;
    public static final int accessibility_custom_action_27=0x7f0a0027;
    public static final int accessibility_custom_action_28=0x7f0a0028;
    public static final int accessibility_custom_action_29=0x7f0a0029;
    public static final int accessibility_custom_action_3=0x7f0a002a;
    public static final int accessibility_custom_action_30=0x7f0a002b;
    public static final int accessibility_custom_action_31=0x7f0a002c;
    public static final int accessibility_custom_action_4=0x7f0a002d;
    public static final int accessibility_custom_action_5=0x7f0a002e;
    public static final int accessibility_custom_action_6=0x7f0a002f;
    public static final int accessibility_custom_action_7=0x7f0a0030;
    public static final int accessibility_custom_action_8=0x7f0a0031;
    public static final int accessibility_custom_action_9=0x7f0a0032;
    public static final int account=0x7f0a0033;
    public static final int account_avatar=0x7f0a0034;
    public static final int account_avatar_two_pane_version=0x7f0a0035;
    public static final int account_settings_menu_auto_sync=0x7f0a0036;
    public static final int account_settings_menu_auto_sync_personal=0x7f0a0037;
    public static final int account_settings_menu_auto_sync_work=0x7f0a0038;
    public static final int accounts=0x7f0a0039;
    public static final int accounts_label=0x7f0a003a;
    public static final int action=0x7f0a003b;
    public static final int action0=0x7f0a003c;
    public static final int action_bar=0x7f0a003d;
    public static final int action_bar_activity_content=0x7f0a003e;
    public static final int action_bar_container=0x7f0a003f;
    public static final int action_bar_root=0x7f0a0040;
    public static final int action_bar_spinner=0x7f0a0041;
    public static final int action_bar_subtitle=0x7f0a0042;
    public static final int action_bar_title=0x7f0a0043;
    public static final int action_button=0x7f0a0044;
    public static final int action_container=0x7f0a0045;
    public static final int action_context_bar=0x7f0a0046;
    public static final int action_delete=0x7f0a0047;
    public static final int action_divider=0x7f0a0048;
    public static final int action_drag_move_bottom=0x7f0a0049;
    public static final int action_drag_move_down=0x7f0a004a;
    public static final int action_drag_move_top=0x7f0a004b;
    /**
     * Used for custom accessibility actions in the Drag-and-Drop locale list
     */
    public static final int action_drag_move_up=0x7f0a004c;
    public static final int action_drag_remove=0x7f0a004d;
    public static final int action_image=0x7f0a004e;
    public static final int action_menu_divider=0x7f0a004f;
    public static final int action_menu_presenter=0x7f0a0050;
    public static final int action_mode_bar=0x7f0a0051;
    public static final int action_mode_bar_stub=0x7f0a0052;
    public static final int action_mode_close_button=0x7f0a0053;
    public static final int action_select_all=0x7f0a0054;
    public static final int action_sent_indicator=0x7f0a0055;
    public static final int action_text=0x7f0a0056;
    public static final int actions=0x7f0a0057;
    public static final int active_layout=0x7f0a0058;
    public static final int activity_chooser_view_content=0x7f0a0059;
    public static final int add=0x7f0a005a;
    public static final int add_another=0x7f0a005b;
    public static final int add_language=0x7f0a005c;
    public static final int add_msg=0x7f0a005d;
    public static final int add_msg_expander=0x7f0a005e;
    public static final int add_msg_simplified=0x7f0a005f;
    public static final int add_network_button_bar=0x7f0a0060;
    public static final int add_new_service=0x7f0a0061;
    public static final int add_preference_widget=0x7f0a0062;
    public static final int additional_summary=0x7f0a0063;
    public static final int adjacent=0x7f0a0064;
    public static final int admin_description=0x7f0a0065;
    public static final int admin_disabled_other_options=0x7f0a0066;
    public static final int admin_icon=0x7f0a0067;
    public static final int admin_more_details_link=0x7f0a0068;
    public static final int admin_name=0x7f0a0069;
    public static final int admin_policies=0x7f0a006a;
    public static final int admin_support_dialog_title=0x7f0a006b;
    public static final int admin_support_icon=0x7f0a006c;
    public static final int admin_support_message=0x7f0a006d;
    public static final int admin_support_msg=0x7f0a006e;
    public static final int admin_warning=0x7f0a006f;
    public static final int admin_warning_simplified=0x7f0a0070;
    public static final int advanced=0x7f0a0071;
    public static final int advanced_shortcut=0x7f0a0072;
    public static final int agree_button=0x7f0a0073;
    public static final int alert=0x7f0a0074;
    public static final int alertTitle=0x7f0a0075;
    public static final int alert_icon=0x7f0a0076;
    public static final int alert_label=0x7f0a0077;
    public static final int alert_summary=0x7f0a0078;
    public static final int alerted_icon=0x7f0a0079;
    public static final int alias=0x7f0a007a;
    public static final int aligned=0x7f0a007b;
    public static final int all=0x7f0a007c;
    public static final int all_details=0x7f0a007d;
    public static final int allow_button=0x7f0a007e;
    public static final int alphanumeric_pin=0x7f0a007f;
    public static final int also_erases_esim=0x7f0a0080;
    public static final int also_erases_external=0x7f0a0081;
    public static final int always=0x7f0a0082;
    public static final int always_on_invalid_reason=0x7f0a0083;
    public static final int always_on_vpn=0x7f0a0084;
    public static final int androidx_window_activity_scope=0x7f0a0085;
    public static final int animateToEnd=0x7f0a0086;
    public static final int animateToStart=0x7f0a0087;
    public static final int anonymous=0x7f0a0088;
    public static final int apn_radiobutton=0x7f0a0089;
    public static final int app1_view=0x7f0a008a;
    public static final int app2_view=0x7f0a008b;
    public static final int app3_view=0x7f0a008c;
    public static final int app_background=0x7f0a008d;
    public static final int app_bar=0x7f0a008e;
    public static final int app_bar_container=0x7f0a008f;
    public static final int app_data_content=0x7f0a0090;
    public static final int app_data_icon=0x7f0a0091;
    public static final int app_data_summary=0x7f0a0092;
    public static final int app_data_text=0x7f0a0093;
    public static final int app_data_title=0x7f0a0094;
    public static final int app_detail=0x7f0a0095;
    public static final int app_details=0x7f0a0096;
    public static final int app_entities_header=0x7f0a0097;
    public static final int app_foreground=0x7f0a0098;
    public static final int app_header=0x7f0a0099;
    public static final int app_icon=0x7f0a009a;
    public static final int app_name=0x7f0a009b;
    public static final int app_restrictions_pref=0x7f0a009c;
    public static final int app_restrictions_settings=0x7f0a009d;
    public static final int app_screen_time=0x7f0a009e;
    public static final int app_settings=0x7f0a009f;
    public static final int app_summary=0x7f0a00a0;
    public static final int app_switches=0x7f0a00a1;
    public static final int app_title=0x7f0a00a2;
    public static final int app_titles=0x7f0a00a3;
    public static final int app_views_container=0x7f0a00a4;
    public static final int append=0x7f0a00a5;
    public static final int appendix=0x7f0a00a6;
    public static final int appops_content=0x7f0a00a7;
    public static final int apps=0x7f0a00a8;
    public static final int appsSize=0x7f0a00a9;
    public static final int appsSizePrefix=0x7f0a00aa;
    public static final int apps_list=0x7f0a00ab;
    public static final int arc=0x7f0a00ac;
    public static final int arrow_next=0x7f0a00ad;
    public static final int arrow_previous=0x7f0a00ae;
    public static final int asConfigured=0x7f0a00af;
    public static final int async=0x7f0a00b0;
    public static final int auto=0x7f0a00b1;
    public static final int autoComplete=0x7f0a00b2;
    public static final int autoCompleteToEnd=0x7f0a00b3;
    public static final int autoCompleteToStart=0x7f0a00b4;
    public static final int auto_launch=0x7f0a00b5;
    public static final int autoclick_delay=0x7f0a00b6;
    public static final int automatic=0x7f0a00b7;
    public static final int back=0x7f0a00b8;
    public static final int back_button=0x7f0a00b9;
    public static final int background_image=0x7f0a00ba;
    public static final int background_view=0x7f0a00bb;
    public static final int backup_pw_cancel_button=0x7f0a00bc;
    public static final int backup_pw_set_button=0x7f0a00bd;
    public static final int banner_dismiss_btn=0x7f0a00be;
    public static final int banner_icon=0x7f0a00bf;
    public static final int banner_negative_btn=0x7f0a00c0;
    public static final int banner_positive_btn=0x7f0a00c1;
    public static final int banner_subtitle=0x7f0a00c2;
    public static final int banner_summary=0x7f0a00c3;
    public static final int banner_title=0x7f0a00c4;
    public static final int bar_chart_details=0x7f0a00c5;
    public static final int bar_chart_title=0x7f0a00c6;
    public static final int bar_summary=0x7f0a00c7;
    public static final int bar_title=0x7f0a00c8;
    public static final int bar_view=0x7f0a00c9;
    public static final int bar_view1=0x7f0a00ca;
    public static final int bar_view2=0x7f0a00cb;
    public static final int bar_view3=0x7f0a00cc;
    public static final int bar_view4=0x7f0a00cd;
    public static final int bar_views_container=0x7f0a00ce;
    public static final int barrier=0x7f0a00cf;
    public static final int baseline=0x7f0a00d0;
    public static final int battery_active=0x7f0a00d1;
    public static final int battery_chart=0x7f0a00d2;
    public static final int battery_entity_header=0x7f0a00d3;
    public static final int battery_header_icon=0x7f0a00d4;
    public static final int battery_icon=0x7f0a00d5;
    public static final int battery_info_layout=0x7f0a00d6;
    public static final int battery_percent=0x7f0a00d7;
    public static final int battery_usage=0x7f0a00d8;
    public static final int beginning=0x7f0a00d9;
    public static final int biometric_header_description=0x7f0a00da;
    public static final int blob_expiry=0x7f0a00db;
    public static final int blob_id=0x7f0a00dc;
    public static final int blob_label=0x7f0a00dd;
    public static final int blob_size=0x7f0a00de;
    public static final int blocking=0x7f0a00df;
    public static final int bluetooth_audio_bit_per_sample_16=0x7f0a00e0;
    public static final int bluetooth_audio_bit_per_sample_24=0x7f0a00e1;
    public static final int bluetooth_audio_bit_per_sample_32=0x7f0a00e2;
    public static final int bluetooth_audio_bit_per_sample_default=0x7f0a00e3;
    public static final int bluetooth_audio_bit_per_sample_radio_group=0x7f0a00e4;
    public static final int bluetooth_audio_channel_mode_default=0x7f0a00e5;
    public static final int bluetooth_audio_channel_mode_mono=0x7f0a00e6;
    public static final int bluetooth_audio_channel_mode_radio_group=0x7f0a00e7;
    public static final int bluetooth_audio_channel_mode_stereo=0x7f0a00e8;
    public static final int bluetooth_audio_codec_aac=0x7f0a00e9;
    public static final int bluetooth_audio_codec_aptx=0x7f0a00ea;
    public static final int bluetooth_audio_codec_aptx_adaptive=0x7f0a00eb;
    public static final int bluetooth_audio_codec_aptx_hd=0x7f0a00ec;
    public static final int bluetooth_audio_codec_aptx_twsp=0x7f0a00ed;
    public static final int bluetooth_audio_codec_default=0x7f0a00ee;
    public static final int bluetooth_audio_codec_help_info=0x7f0a00ef;
    public static final int bluetooth_audio_codec_ldac=0x7f0a00f0;
    public static final int bluetooth_audio_codec_radio_group=0x7f0a00f1;
    public static final int bluetooth_audio_codec_sbc=0x7f0a00f2;
    public static final int bluetooth_audio_quality_best_effort=0x7f0a00f3;
    public static final int bluetooth_audio_quality_default=0x7f0a00f4;
    public static final int bluetooth_audio_quality_optimized_connection=0x7f0a00f5;
    public static final int bluetooth_audio_quality_optimized_quality=0x7f0a00f6;
    public static final int bluetooth_audio_quality_radio_group=0x7f0a00f7;
    public static final int bluetooth_audio_sample_rate_441=0x7f0a00f8;
    public static final int bluetooth_audio_sample_rate_480=0x7f0a00f9;
    public static final int bluetooth_audio_sample_rate_882=0x7f0a00fa;
    public static final int bluetooth_audio_sample_rate_960=0x7f0a00fb;
    public static final int bluetooth_audio_sample_rate_default=0x7f0a00fc;
    public static final int bluetooth_audio_sample_rate_radio_group=0x7f0a00fd;
    public static final int bluetooth_fragment_settings=0x7f0a00fe;
    public static final int body=0x7f0a00ff;
    public static final int both=0x7f0a0100;
    public static final int bottom=0x7f0a0101;
    public static final int bottom_divider=0x7f0a0102;
    public static final int bottom_label_group=0x7f0a0103;
    public static final int bottom_label_space=0x7f0a0104;
    public static final int bottom_summary=0x7f0a0105;
    public static final int bounce=0x7f0a0106;
    public static final int box_2g=0x7f0a0107;
    public static final int box_5g=0x7f0a0108;
    public static final int bssid=0x7f0a0109;
    public static final int bt_battery_icon=0x7f0a010a;
    public static final int bt_battery_prediction=0x7f0a010b;
    public static final int bt_battery_summary=0x7f0a010c;
    public static final int bubble_all=0x7f0a010d;
    public static final int bubble_all_icon=0x7f0a010e;
    public static final int bubble_all_label=0x7f0a010f;
    public static final int bubble_none=0x7f0a0110;
    public static final int bubble_none_icon=0x7f0a0111;
    public static final int bubble_none_label=0x7f0a0112;
    public static final int bubble_selected=0x7f0a0113;
    public static final int bubble_selected_icon=0x7f0a0114;
    public static final int bubble_selected_label=0x7f0a0115;
    public static final int bugreport_option_full_summary=0x7f0a0116;
    public static final int bugreport_option_full_title=0x7f0a0117;
    public static final int bugreport_option_interactive_summary=0x7f0a0118;
    public static final int bugreport_option_interactive_title=0x7f0a0119;
    public static final int button=0x7f0a011a;
    public static final int button1=0x7f0a011b;
    public static final int button2=0x7f0a011c;
    public static final int button3=0x7f0a011d;
    public static final int button4=0x7f0a011e;
    public static final int buttonPanel=0x7f0a011f;
    public static final int button_bar=0x7f0a0120;
    public static final int button_confirm_convert_fbe=0x7f0a0121;
    public static final int button_convert_fbe=0x7f0a0122;
    public static final int button_icon=0x7f0a0123;
    public static final int button_panel=0x7f0a0124;
    public static final int button_tutorial_image=0x7f0a0125;
    public static final int button_tutorial_message=0x7f0a0126;
    public static final int button_tutorial_title=0x7f0a0127;
    public static final int buttons=0x7f0a0128;
    public static final int buttons_spacer_left=0x7f0a0129;
    public static final int bytes=0x7f0a012a;
    public static final int ca_cert=0x7f0a012b;
    public static final int camera_group=0x7f0a012c;
    public static final int camera_layout=0x7f0a012d;
    public static final int cancel=0x7f0a012e;
    public static final int cancelButton=0x7f0a012f;
    public static final int cancel_action=0x7f0a0130;
    public static final int cancel_button=0x7f0a0131;
    public static final int card_container=0x7f0a0132;
    public static final int carrier_and_update=0x7f0a0133;
    public static final int cdma_settings=0x7f0a0134;
    public static final int cell_network_group=0x7f0a0135;
    public static final int center=0x7f0a0136;
    public static final int center_horizontal=0x7f0a0137;
    public static final int center_vertical=0x7f0a0138;
    public static final int cert_list=0x7f0a0139;
    public static final int cert_remove_button=0x7f0a013a;
    public static final int chain=0x7f0a013b;
    public static final int chains=0x7f0a013c;
    public static final int charge=0x7f0a013d;
    public static final int charging_group=0x7f0a013e;
    public static final int chart_summary=0x7f0a013f;
    public static final int checkbox=0x7f0a0140;
    public static final int checkboxWidget=0x7f0a0141;
    public static final int checkbox_container=0x7f0a0142;
    public static final int checkbox_frame=0x7f0a0143;
    public static final int checked=0x7f0a0144;
    public static final int chip=0x7f0a0145;
    public static final int chip1=0x7f0a0146;
    public static final int chip2=0x7f0a0147;
    public static final int chip3=0x7f0a0148;
    public static final int chip_group=0x7f0a0149;
    public static final int choose_different_network=0x7f0a014a;
    public static final int chronometer=0x7f0a014b;
    public static final int circle_center=0x7f0a014c;
    public static final int circle_view=0x7f0a014d;
    public static final int clear=0x7f0a014e;
    public static final int clear_activities_button=0x7f0a014f;
    public static final int clear_button=0x7f0a0150;
    public static final int clear_data=0x7f0a0151;
    public static final int clear_text=0x7f0a0152;
    public static final int clickable=0x7f0a0153;
    public static final int clip_horizontal=0x7f0a0154;
    public static final int clip_vertical=0x7f0a0155;
    public static final int clockwise=0x7f0a0156;
    public static final int close_button=0x7f0a0157;
    public static final int collapseActionView=0x7f0a0158;
    public static final int collapse_button=0x7f0a0159;
    public static final int collapsing_toolbar=0x7f0a015a;
    public static final int color_bar=0x7f0a015b;
    public static final int color_icon=0x7f0a015c;
    public static final int color_label=0x7f0a015d;
    public static final int color_preview=0x7f0a015e;
    public static final int color_spinner=0x7f0a015f;
    public static final int color_swatch=0x7f0a0160;
    public static final int comp_description=0x7f0a0161;
    public static final int companion_text=0x7f0a0162;
    public static final int config_list=0x7f0a0163;
    public static final int confirm=0x7f0a0164;
    public static final int confirm_button=0x7f0a0165;
    public static final int confirm_new_backup_pw=0x7f0a0166;
    public static final int connect=0x7f0a0167;
    public static final int container=0x7f0a0168;
    public static final int container_layout=0x7f0a0169;
    public static final int container_material=0x7f0a016a;
    public static final int content=0x7f0a016b;
    public static final int contentPanel=0x7f0a016c;
    public static final int content_frame=0x7f0a016d;
    public static final int content_parent=0x7f0a016e;
    public static final int contents=0x7f0a016f;
    public static final int contents_cacrt=0x7f0a0170;
    public static final int contents_title=0x7f0a0171;
    public static final int contents_usercrt=0x7f0a0172;
    public static final int contents_userkey=0x7f0a0173;
    public static final int contextual_cards_content=0x7f0a0174;
    public static final int contiguous=0x7f0a0175;
    public static final int controlScreen_description=0x7f0a0176;
    public static final int controlScreen_icon=0x7f0a0177;
    public static final int controlScreen_title=0x7f0a0178;
    public static final int control_buttons_panel=0x7f0a0179;
    public static final int conversation_icon=0x7f0a017a;
    public static final int conversation_settings_clear_recents=0x7f0a017b;
    public static final int coordinator=0x7f0a017c;
    public static final int cos=0x7f0a017d;
    public static final int count=0x7f0a017e;
    public static final int counterclockwise=0x7f0a017f;
    public static final int cpu_group=0x7f0a0180;
    public static final int credential_container=0x7f0a0181;
    public static final int credential_management_app_description=0x7f0a0182;
    public static final int credential_management_app_icon=0x7f0a0183;
    public static final int credential_management_app_title=0x7f0a0184;
    public static final int current_backup_pw=0x7f0a0185;
    public static final int current_label=0x7f0a0186;
    public static final int current_time=0x7f0a0187;
    public static final int custom=0x7f0a0188;
    public static final int customPanel=0x7f0a0189;
    public static final int custom_content=0x7f0a018a;
    public static final int custom_negative_button=0x7f0a018b;
    public static final int custom_positive_button=0x7f0a018c;
    public static final int cut=0x7f0a018d;
    public static final int cycle_day=0x7f0a018e;
    public static final int cycle_left_time=0x7f0a018f;
    public static final int cycles_spinner=0x7f0a0190;
    public static final int data=0x7f0a0191;
    public static final int data_limits=0x7f0a0192;
    public static final int data_network_type_label=0x7f0a0193;
    public static final int data_network_type_value=0x7f0a0194;
    public static final int data_remaining_view=0x7f0a0195;
    public static final int data_state_label=0x7f0a0196;
    public static final int data_state_value=0x7f0a0197;
    public static final int data_usage=0x7f0a0198;
    public static final int data_usage_view=0x7f0a0199;
    public static final int date_picker_actions=0x7f0a019a;
    public static final int decelerate=0x7f0a019b;
    public static final int decelerateAndComplete=0x7f0a019c;
    public static final int decor_content_parent=0x7f0a019d;
    public static final int decorate_view=0x7f0a019e;
    public static final int defaultView=0x7f0a019f;
    public static final int default_activity_button=0x7f0a01a0;
    public static final int default_content_container=0x7f0a01a1;
    public static final int default_label=0x7f0a01a2;
    public static final int delete=0x7f0a01a3;
    public static final int delete_button=0x7f0a01a4;
    public static final int delete_managed_profile_closing_paragraph=0x7f0a01a5;
    public static final int delete_managed_profile_device_manager_name=0x7f0a01a6;
    public static final int delete_managed_profile_mdm_icon_view=0x7f0a01a7;
    public static final int delete_managed_profile_opening_paragraph=0x7f0a01a8;
    public static final int deltaRelative=0x7f0a01a9;
    public static final int description=0x7f0a01aa;
    public static final int description_text=0x7f0a01ab;
    public static final int design_bottom_sheet=0x7f0a01ac;
    public static final int design_menu_item_action_area=0x7f0a01ad;
    public static final int design_menu_item_action_area_stub=0x7f0a01ae;
    public static final int design_menu_item_text=0x7f0a01af;
    public static final int design_navigation_view=0x7f0a01b0;
    public static final int determinateBar=0x7f0a01b1;
    public static final int dialog_alert_subtitle=0x7f0a01b2;
    public static final int dialog_button=0x7f0a01b3;
    public static final int dialog_container=0x7f0a01b4;
    public static final int dialog_message=0x7f0a01b5;
    public static final int dialog_scrollview=0x7f0a01b6;
    public static final int dialog_title=0x7f0a01b7;
    public static final int dimensions=0x7f0a01b8;
    public static final int direct=0x7f0a01b9;
    public static final int disableHome=0x7f0a01ba;
    public static final int disablePostScroll=0x7f0a01bb;
    public static final int disableScroll=0x7f0a01bc;
    public static final int disagree_button=0x7f0a01bd;
    public static final int disclaimer_desc=0x7f0a01be;
    public static final int disclaimer_item_list=0x7f0a01bf;
    public static final int disclaimer_title=0x7f0a01c0;
    public static final int disjoint=0x7f0a01c1;
    public static final int dismissal_icon_end=0x7f0a01c2;
    public static final int dismissal_icon_start=0x7f0a01c3;
    public static final int dismissal_swipe_background=0x7f0a01c4;
    public static final int dismissal_view=0x7f0a01c5;
    public static final int divider=0x7f0a01c6;
    public static final int divider1=0x7f0a01c7;
    public static final int divider2=0x7f0a01c8;
    public static final int divider3=0x7f0a01c9;
    public static final int dns1=0x7f0a01ca;
    public static final int dns2=0x7f0a01cb;
    public static final int dns_servers=0x7f0a01cc;
    public static final int dock_audio_media_enable_cb=0x7f0a01cd;
    public static final int domain=0x7f0a01ce;
    public static final int domain_name=0x7f0a01cf;
    public static final int done=0x7f0a01d0;
    public static final int dont_allow_button=0x7f0a01d1;
    public static final int dragDown=0x7f0a01d2;
    public static final int dragEnd=0x7f0a01d3;
    public static final int dragHandle=0x7f0a01d4;
    public static final int dragLeft=0x7f0a01d5;
    public static final int dragList=0x7f0a01d6;
    public static final int dragRight=0x7f0a01d7;
    public static final int dragStart=0x7f0a01d8;
    public static final int dragUp=0x7f0a01d9;
    public static final int drawable=0x7f0a01da;
    public static final int dream_start_now_button=0x7f0a01db;
    public static final int dropdown_menu=0x7f0a01dc;
    public static final int eap=0x7f0a01dd;
    public static final int easeIn=0x7f0a01de;
    public static final int easeInOut=0x7f0a01df;
    public static final int easeOut=0x7f0a01e0;
    public static final int edit_query=0x7f0a01e1;
    /**
     * For a menu item allowing users to edit a SIM display name
     */
    public static final int edit_sim_name=0x7f0a01e2;
    public static final int editor=0x7f0a01e3;
    public static final int edittext=0x7f0a01e4;
    public static final int eight=0x7f0a01e5;
    public static final int either=0x7f0a01e6;
    public static final int elastic=0x7f0a01e7;
    public static final int emergencyCallButton=0x7f0a01e8;
    public static final int emergency_gesture_number_override=0x7f0a01e9;
    public static final int empty_body=0x7f0a01ea;
    public static final int empty_header=0x7f0a01eb;
    public static final int empty_view=0x7f0a01ec;
    public static final int encroid=0x7f0a01ed;
    public static final int encrypt_dont_require_password=0x7f0a01ee;
    public static final int encryption_warning=0x7f0a01ef;
    public static final int end=0x7f0a01f0;
    public static final int endToStart=0x7f0a01f1;
    public static final int end_padder=0x7f0a01f2;
    public static final int enterAlways=0x7f0a01f3;
    public static final int enterAlwaysCollapsed=0x7f0a01f4;
    public static final int entity_header=0x7f0a01f5;
    public static final int entity_header_content=0x7f0a01f6;
    public static final int entity_header_icon=0x7f0a01f7;
    public static final int entity_header_icon_personal=0x7f0a01f8;
    public static final int entity_header_icon_work=0x7f0a01f9;
    public static final int entity_header_second_summary=0x7f0a01fa;
    public static final int entity_header_summary=0x7f0a01fb;
    public static final int entity_header_swap_horiz=0x7f0a01fc;
    public static final int entity_header_title=0x7f0a01fd;
    public static final int erase_esim=0x7f0a01fe;
    public static final int erase_esim_container=0x7f0a01ff;
    public static final int erase_external=0x7f0a0200;
    public static final int erase_external_container=0x7f0a0201;
    public static final int erase_external_option_text=0x7f0a0202;
    public static final int errorText=0x7f0a0203;
    public static final int error_message=0x7f0a0204;
    public static final int error_text=0x7f0a0205;
    public static final int esim_id_label=0x7f0a0206;
    public static final int esim_id_value=0x7f0a0207;
    public static final int estimation=0x7f0a0208;
    public static final int exclusionlist=0x7f0a0209;
    public static final int execute_encrypt=0x7f0a020a;
    public static final int execute_reset_network=0x7f0a020b;
    public static final int exitUntilCollapsed=0x7f0a020c;
    public static final int expand=0x7f0a020d;
    public static final int expand_activities_button=0x7f0a020e;
    public static final int expand_icon=0x7f0a020f;
    public static final int expand_indicator=0x7f0a0210;
    public static final int expand_title=0x7f0a0211;
    public static final int expanded_menu=0x7f0a0212;
    public static final int extended_fab=0x7f0a0213;
    public static final int extra=0x7f0a0214;
    public static final int factory_reset=0x7f0a0215;
    public static final int fade=0x7f0a0216;
    public static final int fill=0x7f0a0217;
    public static final int fill_horizontal=0x7f0a0218;
    public static final int fill_vertical=0x7f0a0219;
    public static final int filled=0x7f0a021a;
    public static final int filter_settings=0x7f0a021b;
    public static final int filter_spinner=0x7f0a021c;
    public static final int fingerprint_animation=0x7f0a021d;
    public static final int fingerprint_background=0x7f0a021e;
    public static final int fingerprint_in_app_indicator=0x7f0a021f;
    public static final int fingerprint_progress_bar=0x7f0a0220;
    public static final int fingerprint_rename_field=0x7f0a0221;
    public static final int fingerprint_sensor_location=0x7f0a0222;
    public static final int fingerprint_sensor_location_animation=0x7f0a0223;
    public static final int fingerprint_sensor_location_front_overlay=0x7f0a0224;
    public static final int first_action=0x7f0a0225;
    public static final int fitToContents=0x7f0a0226;
    public static final int five=0x7f0a0227;
    public static final int fixed=0x7f0a0228;
    public static final int flashlight_group=0x7f0a0229;
    public static final int flip=0x7f0a022a;
    public static final int floating=0x7f0a022b;
    public static final int font_size_preview_text_group=0x7f0a022c;
    public static final int footer=0x7f0a022d;
    public static final int footerText=0x7f0a022e;
    public static final int footer_divider=0x7f0a022f;
    public static final int footer_message_2=0x7f0a0230;
    public static final int footer_message_3=0x7f0a0231;
    public static final int footer_message_4=0x7f0a0232;
    public static final int footer_message_5=0x7f0a0233;
    public static final int footer_message_learn_more=0x7f0a0234;
    public static final int footer_title_1=0x7f0a0235;
    public static final int footer_title_2=0x7f0a0236;
    public static final int fore=0x7f0a0237;
    public static final int forever=0x7f0a0238;
    public static final int forget_button=0x7f0a0239;
    public static final int forgotButton=0x7f0a023a;
    public static final int four=0x7f0a023b;
    public static final int fragment_container=0x7f0a023c;
    public static final int fragment_container_view_tag=0x7f0a023d;
    public static final int fragment_settings=0x7f0a023e;
    public static final int frame=0x7f0a023f;
    public static final int freeSize=0x7f0a0240;
    public static final int freeSizePrefix=0x7f0a0241;
    public static final int friction_icon=0x7f0a0242;
    public static final int gateway=0x7f0a0243;
    public static final int gesture_animation_view=0x7f0a0244;
    public static final int gesture_tutorial_message=0x7f0a0245;
    public static final int gesture_tutorial_title=0x7f0a0246;
    public static final int ghost_view=0x7f0a0247;
    public static final int ghost_view_holder=0x7f0a0248;
    public static final int glif_layout=0x7f0a0249;
    public static final int go_to_location_setting=0x7f0a024a;
    public static final int gone=0x7f0a024b;
    public static final int gps_group=0x7f0a024c;
    public static final int graph=0x7f0a024d;
    public static final int graph_label_group=0x7f0a024e;
    public static final int graph_wrap=0x7f0a024f;
    public static final int group_divider=0x7f0a0250;
    public static final int group_indicator=0x7f0a0251;
    public static final int groups=0x7f0a0252;
    public static final int gsm_settings=0x7f0a0253;
    public static final int guideline=0x7f0a0254;
    public static final int hardware=0x7f0a0255;
    public static final int hardware_shortcut=0x7f0a0256;
    public static final int header=0x7f0a0257;
    public static final int headerText=0x7f0a0258;
    public static final int header_content_container=0x7f0a0259;
    public static final int header_details=0x7f0a025a;
    public static final int header_divider=0x7f0a025b;
    public static final int header_icon=0x7f0a025c;
    public static final int header_icons_container=0x7f0a025d;
    public static final int header_layout=0x7f0a025e;
    public static final int header_subtitle=0x7f0a025f;
    public static final int header_title=0x7f0a0260;
    public static final int header_view=0x7f0a0261;
    public static final int hidden_settings=0x7f0a0262;
    public static final int hidden_settings_field=0x7f0a0263;
    public static final int hidden_settings_title=0x7f0a0264;
    public static final int hidden_settings_warning=0x7f0a0265;
    public static final int hidden_ssid=0x7f0a0266;
    public static final int hide_all=0x7f0a0267;
    public static final int hide_system=0x7f0a0268;
    public static final int hideable=0x7f0a0269;
    public static final int high=0x7f0a026a;
    public static final int history_image=0x7f0a026b;
    public static final int history_image_on=0x7f0a026c;
    public static final int history_off=0x7f0a026d;
    public static final int history_off_summary=0x7f0a026e;
    public static final int history_off_title=0x7f0a026f;
    public static final int history_on=0x7f0a0270;
    public static final int history_on_empty=0x7f0a0271;
    public static final int history_toggled_on_summary=0x7f0a0272;
    public static final int history_toggled_on_title=0x7f0a0273;
    public static final int home=0x7f0a0274;
    public static final int homeAsUp=0x7f0a0275;
    public static final int homepage_all_settings=0x7f0a0276;
    public static final int homepage_app_bar_regular_phone_view=0x7f0a0277;
    public static final int homepage_app_bar_two_pane_view=0x7f0a0278;
    public static final int homepage_container=0x7f0a0279;
    public static final int homepage_personal_settings=0x7f0a027a;
    public static final int homepage_title=0x7f0a027b;
    public static final int honorRequest=0x7f0a027c;
    public static final int horizontal=0x7f0a027d;
    public static final int hostname=0x7f0a027e;
    public static final int how_message=0x7f0a027f;
    public static final int httpClientTest=0x7f0a0280;
    public static final int icc_id_label=0x7f0a0281;
    public static final int icc_id_value=0x7f0a0282;
    public static final int icon=0x7f0a0283;
    public static final int icon_button=0x7f0a0284;
    public static final int icon_container=0x7f0a0285;
    public static final int icon_device_locked=0x7f0a0286;
    public static final int icon_fingerprint=0x7f0a0287;
    public static final int icon_frame=0x7f0a0288;
    public static final int icon_glasses=0x7f0a0289;
    public static final int icon_group=0x7f0a028a;
    public static final int icon_info=0x7f0a028b;
    public static final int icon_label_container=0x7f0a028c;
    public static final int icon_less_secure=0x7f0a028d;
    public static final int icon_link=0x7f0a028e;
    public static final int icon_looking=0x7f0a028f;
    public static final int icon_require_eyes=0x7f0a0290;
    public static final int icon_text=0x7f0a0291;
    public static final int icon_trash_can=0x7f0a0292;
    public static final int icon_view=0x7f0a0293;
    public static final int identity=0x7f0a0294;
    public static final int ifRoom=0x7f0a0295;
    public static final int ignore=0x7f0a0296;
    public static final int ignoreRequest=0x7f0a0297;
    public static final int ignore_off=0x7f0a0298;
    public static final int ignore_on=0x7f0a0299;
    public static final int illustration_accessibility=0x7f0a029a;
    public static final int illustration_default=0x7f0a029b;
    public static final int illustration_frame=0x7f0a029c;
    public static final int illustration_lottie=0x7f0a029d;
    public static final int image=0x7f0a029e;
    public static final int image1=0x7f0a029f;
    public static final int image2=0x7f0a02a0;
    public static final int image3=0x7f0a02a1;
    public static final int image_background=0x7f0a02a2;
    public static final int imei_label=0x7f0a02a3;
    public static final int imei_sv_label=0x7f0a02a4;
    public static final int imei_sv_value=0x7f0a02a5;
    public static final int imei_value=0x7f0a02a6;
    public static final int ims_reg_state_label=0x7f0a02a7;
    public static final int ims_reg_state_value=0x7f0a02a8;
    public static final int indicator_container=0x7f0a02a9;
    public static final int indicator_left=0x7f0a02aa;
    public static final int indicator_right=0x7f0a02ab;
    public static final int info=0x7f0a02ac;
    public static final int info_button=0x7f0a02ad;
    public static final int info_message_glasses=0x7f0a02ae;
    public static final int info_message_less_secure=0x7f0a02af;
    public static final int info_message_looking=0x7f0a02b0;
    public static final int info_message_require_eyes=0x7f0a02b1;
    public static final int info_row_less_secure=0x7f0a02b2;
    public static final int info_row_require_eyes=0x7f0a02b3;
    public static final int initiate_encrypt=0x7f0a02b4;
    public static final int initiate_reset_network=0x7f0a02b5;
    public static final int install=0x7f0a02b6;
    public static final int install_type=0x7f0a02b7;
    public static final int instant_app_button_container=0x7f0a02b8;
    public static final int instruction=0x7f0a02b9;
    public static final int intent=0x7f0a02ba;
    public static final int interact_across_profiles_consent_dialog_summary=0x7f0a02bb;
    public static final int interact_across_profiles_consent_dialog_title=0x7f0a02bc;
    public static final int interact_across_profiles_dialog=0x7f0a02bd;
    public static final int interact_across_profiles_dialog_layout=0x7f0a02be;
    public static final int invisible=0x7f0a02bf;
    public static final int inward=0x7f0a02c0;
    public static final int ip_addr=0x7f0a02c1;
    public static final int ip_fields=0x7f0a02c2;
    public static final int ip_settings=0x7f0a02c3;
    public static final int ipaddr=0x7f0a02c4;
    public static final int ipaddress=0x7f0a02c5;
    public static final int ipsec_ca_cert=0x7f0a02c6;
    public static final int ipsec_identifier=0x7f0a02c7;
    public static final int ipsec_peer=0x7f0a02c8;
    public static final int ipsec_psk=0x7f0a02c9;
    public static final int ipsec_secret=0x7f0a02ca;
    public static final int ipsec_server_cert=0x7f0a02cb;
    public static final int ipsec_user=0x7f0a02cc;
    public static final int ipsec_user_cert=0x7f0a02cd;
    public static final int italic=0x7f0a02ce;
    public static final int item_textview=0x7f0a02cf;
    public static final int item_touch_helper_previous_elevation=0x7f0a02d0;
    public static final int jumpToEnd=0x7f0a02d1;
    public static final int jumpToStart=0x7f0a02d2;
    public static final int keep=0x7f0a02d3;
    public static final int l10nWarn=0x7f0a02d4;
    public static final int l2tp=0x7f0a02d5;
    public static final int l2tp_secret=0x7f0a02d6;
    public static final int l_adbwirelessdialog=0x7f0a02d7;
    public static final int l_anonymous=0x7f0a02d8;
    public static final int l_ca_cert=0x7f0a02d9;
    public static final int l_domain=0x7f0a02da;
    public static final int l_identity=0x7f0a02db;
    public static final int l_method=0x7f0a02dc;
    public static final int l_ocsp=0x7f0a02dd;
    public static final int l_pairing_failed=0x7f0a02de;
    public static final int l_pairing_six_digit=0x7f0a02df;
    public static final int l_phase2=0x7f0a02e0;
    public static final int l_qrcode_pairing_failed=0x7f0a02e1;
    public static final int l_sim=0x7f0a02e2;
    public static final int l_user_cert=0x7f0a02e3;
    public static final int l_wifidialog=0x7f0a02e4;
    public static final int label=0x7f0a02e5;
    public static final int label_bar=0x7f0a02e6;
    public static final int label_bottom=0x7f0a02e7;
    public static final int label_end=0x7f0a02e8;
    public static final int label_group=0x7f0a02e9;
    public static final int label_middle=0x7f0a02ea;
    public static final int label_start=0x7f0a02eb;
    public static final int label_top=0x7f0a02ec;
    public static final int labeled=0x7f0a02ed;
    public static final int larger=0x7f0a02ee;
    public static final int last_time_used=0x7f0a02ef;
    public static final int last_updated=0x7f0a02f0;
    public static final int latest_area_info_label=0x7f0a02f1;
    public static final int latest_area_info_value=0x7f0a02f2;
    public static final int launch=0x7f0a02f3;
    public static final int launch_mdp_app_button=0x7f0a02f4;
    public static final int layout=0x7f0a02f5;
    public static final int layout_footer_learn_more=0x7f0a02f6;
    public static final int layout_left=0x7f0a02f7;
    public static final int layout_middle=0x7f0a02f8;
    public static final int layout_right=0x7f0a02f9;
    public static final int lease_desc=0x7f0a02fa;
    public static final int lease_expiry=0x7f0a02fb;
    public static final int lease_package=0x7f0a02fc;
    public static final int left=0x7f0a02fd;
    public static final int leftToRight=0x7f0a02fe;
    public static final int left_button=0x7f0a02ff;
    public static final int left_text=0x7f0a0300;
    public static final int line1=0x7f0a0301;
    public static final int line3=0x7f0a0302;
    public static final int linear=0x7f0a0303;
    public static final int link_text=0x7f0a0304;
    public static final int listContainer=0x7f0a0305;
    public static final int listHeader=0x7f0a0306;
    public static final int listMode=0x7f0a0307;
    public static final int list_item=0x7f0a0308;
    public static final int loading_container=0x7f0a0309;
    public static final int locale=0x7f0a030a;
    public static final int locale_picker_fragment=0x7f0a030b;
    public static final int lockPattern=0x7f0a030c;
    public static final int lock_none=0x7f0a030d;
    public static final int lock_password=0x7f0a030e;
    public static final int lock_pattern_size_3=0x7f0a030f;
    public static final int lock_pattern_size_4=0x7f0a0310;
    public static final int lock_pattern_size_5=0x7f0a0311;
    public static final int lock_pattern_size_6=0x7f0a0312;
    public static final int lock_pin=0x7f0a0313;
    public static final int lockscreen_remote_input=0x7f0a0314;
    public static final int longer=0x7f0a0315;
    public static final int lottie_layer_name=0x7f0a0316;
    public static final int lottie_view=0x7f0a0317;
    public static final int low=0x7f0a0318;
    public static final int ltr=0x7f0a0319;
    public static final int macaddr=0x7f0a031a;
    public static final int main_clear_container=0x7f0a031b;
    public static final int main_clear_scrollview=0x7f0a031c;
    public static final int main_content=0x7f0a031d;
    public static final int main_content_scrollable_container=0x7f0a031e;
    public static final int main_frame=0x7f0a031f;
    public static final int main_switch_bar=0x7f0a0320;
    public static final int mask=0x7f0a0321;
    public static final int masked=0x7f0a0322;
    public static final int material_clock_display=0x7f0a0323;
    public static final int material_clock_face=0x7f0a0324;
    public static final int material_clock_hand=0x7f0a0325;
    public static final int material_clock_period_am_button=0x7f0a0326;
    public static final int material_clock_period_pm_button=0x7f0a0327;
    public static final int material_clock_period_toggle=0x7f0a0328;
    public static final int material_hour_text_input=0x7f0a0329;
    public static final int material_hour_tv=0x7f0a032a;
    public static final int material_label=0x7f0a032b;
    public static final int material_minute_text_input=0x7f0a032c;
    public static final int material_minute_tv=0x7f0a032d;
    public static final int material_textinput_timepicker=0x7f0a032e;
    public static final int material_timepicker_cancel_button=0x7f0a032f;
    public static final int material_timepicker_container=0x7f0a0330;
    public static final int material_timepicker_edit_text=0x7f0a0331;
    public static final int material_timepicker_mode_button=0x7f0a0332;
    public static final int material_timepicker_ok_button=0x7f0a0333;
    public static final int material_timepicker_view=0x7f0a0334;
    public static final int material_value_index=0x7f0a0335;
    public static final int media_actions=0x7f0a0336;
    public static final int media_controller_compat_view_tag=0x7f0a0337;
    public static final int medium=0x7f0a0338;
    public static final int meid_number_label=0x7f0a0339;
    public static final int meid_number_value=0x7f0a033a;
    public static final int message=0x7f0a033b;
    public static final int message_below_pin=0x7f0a033c;
    public static final int message_content=0x7f0a033d;
    public static final int message_in_control=0x7f0a033e;
    public static final int message_status=0x7f0a033f;
    public static final int message_text=0x7f0a0340;
    public static final int message_text_and_info=0x7f0a0341;
    public static final int metered_settings=0x7f0a0342;
    public static final int metered_settings_fields=0x7f0a0343;
    public static final int metered_settings_title=0x7f0a0344;
    public static final int method=0x7f0a0345;
    public static final int middle=0x7f0a0346;
    public static final int middleground_layout=0x7f0a0347;
    public static final int min_number_label=0x7f0a0348;
    public static final int min_number_value=0x7f0a0349;
    public static final int mini=0x7f0a034a;
    public static final int miniLabel=0x7f0a034b;
    public static final int month_grid=0x7f0a034c;
    public static final int month_navigation_bar=0x7f0a034d;
    public static final int month_navigation_fragment_toggle=0x7f0a034e;
    public static final int month_navigation_next=0x7f0a034f;
    public static final int month_navigation_previous=0x7f0a0350;
    public static final int month_title=0x7f0a0351;
    public static final int more_info=0x7f0a0352;
    public static final int motion_base=0x7f0a0353;
    public static final int mppe=0x7f0a0354;
    public static final int mr_art=0x7f0a0355;
    public static final int mr_cast_checkbox=0x7f0a0356;
    public static final int mr_cast_close_button=0x7f0a0357;
    public static final int mr_cast_divider=0x7f0a0358;
    public static final int mr_cast_group_icon=0x7f0a0359;
    public static final int mr_cast_group_name=0x7f0a035a;
    public static final int mr_cast_group_progress_bar=0x7f0a035b;
    public static final int mr_cast_header_name=0x7f0a035c;
    public static final int mr_cast_list=0x7f0a035d;
    public static final int mr_cast_meta_art=0x7f0a035e;
    public static final int mr_cast_meta_background=0x7f0a035f;
    public static final int mr_cast_meta_black_scrim=0x7f0a0360;
    public static final int mr_cast_meta_subtitle=0x7f0a0361;
    public static final int mr_cast_meta_title=0x7f0a0362;
    public static final int mr_cast_mute_button=0x7f0a0363;
    public static final int mr_cast_route_icon=0x7f0a0364;
    public static final int mr_cast_route_name=0x7f0a0365;
    public static final int mr_cast_route_progress_bar=0x7f0a0366;
    public static final int mr_cast_stop_button=0x7f0a0367;
    public static final int mr_cast_volume_layout=0x7f0a0368;
    public static final int mr_cast_volume_slider=0x7f0a0369;
    public static final int mr_chooser_list=0x7f0a036a;
    public static final int mr_chooser_route_desc=0x7f0a036b;
    public static final int mr_chooser_route_icon=0x7f0a036c;
    public static final int mr_chooser_route_name=0x7f0a036d;
    public static final int mr_chooser_route_progress_bar=0x7f0a036e;
    public static final int mr_chooser_title=0x7f0a036f;
    public static final int mr_close=0x7f0a0370;
    public static final int mr_control_divider=0x7f0a0371;
    public static final int mr_control_playback_ctrl=0x7f0a0372;
    public static final int mr_control_subtitle=0x7f0a0373;
    public static final int mr_control_title=0x7f0a0374;
    public static final int mr_control_title_container=0x7f0a0375;
    public static final int mr_custom_control=0x7f0a0376;
    public static final int mr_default_control=0x7f0a0377;
    public static final int mr_dialog_area=0x7f0a0378;
    public static final int mr_expandable_area=0x7f0a0379;
    public static final int mr_group_expand_collapse=0x7f0a037a;
    public static final int mr_group_volume_route_name=0x7f0a037b;
    public static final int mr_media_main_control=0x7f0a037c;
    public static final int mr_name=0x7f0a037d;
    public static final int mr_picker_close_button=0x7f0a037e;
    public static final int mr_picker_header_name=0x7f0a037f;
    public static final int mr_picker_list=0x7f0a0380;
    public static final int mr_picker_route_icon=0x7f0a0381;
    public static final int mr_picker_route_name=0x7f0a0382;
    public static final int mr_picker_route_progress_bar=0x7f0a0383;
    public static final int mr_playback_control=0x7f0a0384;
    public static final int mr_title_bar=0x7f0a0385;
    public static final int mr_volume_control=0x7f0a0386;
    public static final int mr_volume_group_list=0x7f0a0387;
    public static final int mr_volume_item_icon=0x7f0a0388;
    public static final int mr_volume_slider=0x7f0a0389;
    public static final int mtrl_anchor_parent=0x7f0a038a;
    public static final int mtrl_calendar_day_selector_frame=0x7f0a038b;
    public static final int mtrl_calendar_days_of_week=0x7f0a038c;
    public static final int mtrl_calendar_frame=0x7f0a038d;
    public static final int mtrl_calendar_main_pane=0x7f0a038e;
    public static final int mtrl_calendar_months=0x7f0a038f;
    public static final int mtrl_calendar_selection_frame=0x7f0a0390;
    public static final int mtrl_calendar_text_input_frame=0x7f0a0391;
    public static final int mtrl_calendar_year_selector_frame=0x7f0a0392;
    public static final int mtrl_card_checked_layer_id=0x7f0a0393;
    public static final int mtrl_child_content_container=0x7f0a0394;
    public static final int mtrl_internal_children_alpha_tag=0x7f0a0395;
    public static final int mtrl_motion_snapshot_view=0x7f0a0396;
    public static final int mtrl_picker_fullscreen=0x7f0a0397;
    public static final int mtrl_picker_header=0x7f0a0398;
    public static final int mtrl_picker_header_selection_text=0x7f0a0399;
    public static final int mtrl_picker_header_title_and_selection=0x7f0a039a;
    public static final int mtrl_picker_header_toggle=0x7f0a039b;
    public static final int mtrl_picker_text_input_date=0x7f0a039c;
    public static final int mtrl_picker_text_input_range_end=0x7f0a039d;
    public static final int mtrl_picker_text_input_range_start=0x7f0a039e;
    public static final int mtrl_picker_title_text=0x7f0a039f;
    public static final int mtrl_view_tag_bottom_padding=0x7f0a03a0;
    public static final int multiple_networks=0x7f0a03a1;
    public static final int multiply=0x7f0a03a2;
    public static final int name=0x7f0a03a3;
    public static final int name_edittext=0x7f0a03a4;
    public static final int name_label=0x7f0a03a5;
    public static final int navigation_bar_item_icon_view=0x7f0a03a6;
    public static final int navigation_bar_item_labels_group=0x7f0a03a7;
    public static final int navigation_bar_item_large_label_view=0x7f0a03a8;
    public static final int navigation_bar_item_small_label_view=0x7f0a03a9;
    public static final int navigation_header_container=0x7f0a03aa;
    public static final int network_options=0x7f0a03ab;
    public static final int network_prefix_length=0x7f0a03ac;
    public static final int network_request_summary_text=0x7f0a03ad;
    public static final int network_request_title_progress=0x7f0a03ae;
    public static final int network_request_title_text=0x7f0a03af;
    public static final int network_state=0x7f0a03b0;
    public static final int networkid=0x7f0a03b1;
    public static final int never=0x7f0a03b2;
    public static final int new_backup_pw=0x7f0a03b3;
    public static final int next=0x7f0a03b4;
    public static final int next_button=0x7f0a03b5;
    public static final int nfc_how_it_works_button=0x7f0a03b6;
    public static final int nfc_how_it_works_content=0x7f0a03b7;
    public static final int nfc_how_it_works_image=0x7f0a03b8;
    public static final int nfc_how_it_works_image_text=0x7f0a03b9;
    public static final int nfc_how_it_works_title=0x7f0a03ba;
    public static final int nfc_payment_pref=0x7f0a03bb;
    public static final int nine=0x7f0a03bc;
    public static final int noScroll=0x7f0a03bd;
    public static final int no_ca_cert_warning=0x7f0a03be;
    public static final int no_cancel_mobile_plan=0x7f0a03bf;
    public static final int no_domain_warning=0x7f0a03c0;
    public static final int no_user_cert_warning=0x7f0a03c1;
    public static final int none=0x7f0a03c2;
    public static final int normal=0x7f0a03c3;
    public static final int notification_background=0x7f0a03c4;
    public static final int notification_extra=0x7f0a03c5;
    public static final int notification_list=0x7f0a03c6;
    public static final int notification_list_wrapper=0x7f0a03c7;
    public static final int notification_main_column=0x7f0a03c8;
    public static final int notification_main_column_container=0x7f0a03c9;
    public static final int number_label=0x7f0a03ca;
    public static final int number_of_uris=0x7f0a03cb;
    public static final int number_value=0x7f0a03cc;
    public static final int ocsp=0x7f0a03cd;
    public static final int off=0x7f0a03ce;
    public static final int ok=0x7f0a03cf;
    public static final int on=0x7f0a03d0;
    public static final int onboarding=0x7f0a03d1;
    public static final int one=0x7f0a03d2;
    public static final int op_icon=0x7f0a03d3;
    public static final int op_name=0x7f0a03d4;
    public static final int op_switch=0x7f0a03d5;
    public static final int op_time=0x7f0a03d6;
    public static final int operator_name_label=0x7f0a03d7;
    public static final int operator_name_value=0x7f0a03d8;
    public static final int opt_in=0x7f0a03d9;
    public static final int options=0x7f0a03da;
    public static final int options_ipsec_identity=0x7f0a03db;
    public static final int other=0x7f0a03dc;
    public static final int other_users_present=0x7f0a03dd;
    public static final int outline=0x7f0a03de;
    public static final int outward=0x7f0a03df;
    public static final int overlay_see_more=0x7f0a03e0;
    public static final int owner_info=0x7f0a03e1;
    public static final int owner_info_edit_text=0x7f0a03e2;
    public static final int package_name=0x7f0a03e3;
    public static final int packed=0x7f0a03e4;
    public static final int page_indicator=0x7f0a03e5;
    public static final int pairing_caption=0x7f0a03e6;
    public static final int pairing_code=0x7f0a03e7;
    public static final int pairing_code_message=0x7f0a03e8;
    public static final int pairing_failed_label=0x7f0a03e9;
    public static final int pairing_subhead=0x7f0a03ea;
    public static final int palette_view=0x7f0a03eb;
    public static final int panel_container=0x7f0a03ec;
    public static final int panel_header=0x7f0a03ed;
    public static final int panel_parent_layout=0x7f0a03ee;
    public static final int panel_title=0x7f0a03ef;
    public static final int parallax=0x7f0a03f0;
    public static final int parent=0x7f0a03f1;
    public static final int parentPanel=0x7f0a03f2;
    public static final int parentRelative=0x7f0a03f3;
    public static final int parent_matrix=0x7f0a03f4;
    public static final int password=0x7f0a03f5;
    public static final int passwordEntry=0x7f0a03f6;
    public static final int password_container=0x7f0a03f7;
    public static final int password_entry=0x7f0a03f8;
    public static final int password_label=0x7f0a03f9;
    public static final int password_layout=0x7f0a03fa;
    public static final int password_requirements_view=0x7f0a03fb;
    public static final int password_toggle=0x7f0a03fc;
    public static final int path=0x7f0a03fd;
    public static final int pathRelative=0x7f0a03fe;
    public static final int pattern_sizes=0x7f0a03ff;
    public static final int peekHeight=0x7f0a0400;
    public static final int percent=0x7f0a0401;
    public static final int performAction_description=0x7f0a0402;
    public static final int performAction_icon=0x7f0a0403;
    public static final int performAction_title=0x7f0a0404;
    public static final int perm_icon=0x7f0a0405;
    public static final int permissionDialog_description=0x7f0a0406;
    public static final int permissionDialog_icon=0x7f0a0407;
    public static final int permissionDialog_title=0x7f0a0408;
    public static final int permission_enable_allow_button=0x7f0a0409;
    public static final int permission_enable_deny_button=0x7f0a040a;
    public static final int permission_enable_uninstall_button=0x7f0a040b;
    public static final int permission_group=0x7f0a040c;
    public static final int permission_list=0x7f0a040d;
    public static final int permissions_content=0x7f0a040e;
    public static final int permissions_icon=0x7f0a040f;
    public static final int permissions_summary=0x7f0a0410;
    public static final int permissions_text=0x7f0a0411;
    public static final int permissions_title=0x7f0a0412;
    public static final int phase2=0x7f0a0413;
    public static final int phonebook_sharing_message_confirm_pin=0x7f0a0414;
    public static final int phonebook_sharing_message_entry_pin=0x7f0a0415;
    public static final int pin=0x7f0a0416;
    public static final int pin_values_hint=0x7f0a0417;
    public static final int pingHostname=0x7f0a0418;
    public static final int ping_test=0x7f0a0419;
    public static final int pinned_header=0x7f0a041a;
    public static final int pkg_list=0x7f0a041b;
    public static final int pkgicon=0x7f0a041c;
    public static final int pkgname=0x7f0a041d;
    public static final int port=0x7f0a041e;
    public static final int position=0x7f0a041f;
    public static final int postLayout=0x7f0a0420;
    public static final int preference_highlighted=0x7f0a0421;
    public static final int prefs_container=0x7f0a0422;
    public static final int prepend=0x7f0a0423;
    public static final int preview=0x7f0a0424;
    public static final int preview_pager=0x7f0a0425;
    public static final int preview_text=0x7f0a0426;
    public static final int preview_view=0x7f0a0427;
    public static final int preview_viewport=0x7f0a0428;
    public static final int preview_window=0x7f0a0429;
    public static final int print_menu_item_add_printer=0x7f0a042a;
    public static final int print_menu_item_search=0x7f0a042b;
    public static final int print_menu_item_settings=0x7f0a042c;
    public static final int priority_group=0x7f0a042d;
    public static final int privacy_settings=0x7f0a042e;
    public static final int privacy_settings_fields=0x7f0a042f;
    public static final int privacy_settings_title=0x7f0a0430;
    public static final int private_dns_help_info=0x7f0a0431;
    public static final int private_dns_mode_off=0x7f0a0432;
    public static final int private_dns_mode_opportunistic=0x7f0a0433;
    public static final int private_dns_mode_provider=0x7f0a0434;
    public static final int private_dns_mode_provider_hostname=0x7f0a0435;
    public static final int private_dns_radio_group=0x7f0a0436;
    public static final int prl_version_label=0x7f0a0437;
    public static final int prl_version_value=0x7f0a0438;
    public static final int process=0x7f0a0439;
    public static final int profile_badge=0x7f0a043a;
    public static final int profile_owner_warning=0x7f0a043b;
    public static final int profile_spinner=0x7f0a043c;
    public static final int progress_bar=0x7f0a043d;
    public static final int progress_bar_animation=0x7f0a043e;
    public static final int progress_bar_background=0x7f0a043f;
    public static final int progress_circle=0x7f0a0440;
    public static final int progress_circle_container=0x7f0a0441;
    public static final int progress_circular=0x7f0a0442;
    public static final int progress_horizontal=0x7f0a0443;
    public static final int prompt1=0x7f0a0444;
    public static final int prompt2=0x7f0a0445;
    public static final int prompt3=0x7f0a0446;
    public static final int proxy_exclusionlist=0x7f0a0447;
    public static final int proxy_fields=0x7f0a0448;
    public static final int proxy_hostname=0x7f0a0449;
    public static final int proxy_pac=0x7f0a044a;
    public static final int proxy_pac_field=0x7f0a044b;
    public static final int proxy_port=0x7f0a044c;
    public static final int proxy_settings=0x7f0a044d;
    public static final int proxy_settings_fields=0x7f0a044e;
    public static final int proxy_settings_title=0x7f0a044f;
    public static final int proxy_warning_limited_support=0x7f0a0450;
    public static final int purpose=0x7f0a0451;
    public static final int qrcode_view=0x7f0a0452;
    public static final int radio=0x7f0a0453;
    public static final int radioButton=0x7f0a0454;
    public static final int radio_extra_widget=0x7f0a0455;
    public static final int radio_extra_widget_container=0x7f0a0456;
    public static final int radio_extra_widget_divider=0x7f0a0457;
    public static final int radio_group=0x7f0a0458;
    public static final int ramp_up_time=0x7f0a0459;
    public static final int ramp_up_time_label=0x7f0a045a;
    public static final int ramp_up_time_value=0x7f0a045b;
    public static final int ranking_extra=0x7f0a045c;
    public static final int ratio=0x7f0a045d;
    public static final int recently_dismissed_list=0x7f0a045e;
    public static final int rectangles=0x7f0a045f;
    public static final int recycler_view=0x7f0a0460;
    public static final int redact_sensitive=0x7f0a0461;
    public static final int regulatoryInfo=0x7f0a0462;
    public static final int remember=0x7f0a0463;
    public static final int remote_input=0x7f0a0464;
    public static final int remote_input_progress=0x7f0a0465;
    public static final int remote_input_send=0x7f0a0466;
    public static final int remote_input_text=0x7f0a0467;
    public static final int remove=0x7f0a0468;
    public static final int remove_button=0x7f0a0469;
    public static final int request_background_location_permission=0x7f0a046a;
    public static final int reset_app_preferences=0x7f0a046b;
    public static final int reset_importance_button=0x7f0a046c;
    public static final int reset_network_confirm=0x7f0a046d;
    public static final int reset_network_subscription=0x7f0a046e;
    public static final int resource=0x7f0a046f;
    public static final int restart=0x7f0a0470;
    public static final int restricted_action=0x7f0a0471;
    public static final int restricted_icon=0x7f0a0472;
    public static final int restricted_lock_icon=0x7f0a0473;
    public static final int restricted_lock_icon_remote_input=0x7f0a0474;
    public static final int reverse=0x7f0a0475;
    public static final int reverseSawtooth=0x7f0a0476;
    public static final int right=0x7f0a0477;
    public static final int rightToLeft=0x7f0a0478;
    public static final int right_button=0x7f0a0479;
    public static final int right_icon=0x7f0a047a;
    public static final int right_side=0x7f0a047b;
    public static final int right_text=0x7f0a047c;
    public static final int roaming_state_label=0x7f0a047d;
    public static final int roaming_state_value=0x7f0a047e;
    public static final int root=0x7f0a047f;
    public static final int rounded=0x7f0a0480;
    public static final int routes=0x7f0a0481;
    public static final int row_divider=0x7f0a0482;
    public static final int row_index_key=0x7f0a0483;
    public static final int row_view=0x7f0a0484;
    public static final int rssi=0x7f0a0485;
    public static final int rtl=0x7f0a0486;
    public static final int rule_container=0x7f0a0487;
    public static final int running_processes=0x7f0a0488;
    public static final int rx_link_speed=0x7f0a0489;
    public static final int save=0x7f0a048a;
    public static final int save_login=0x7f0a048b;
    public static final int save_non_transition_alpha=0x7f0a048c;
    public static final int save_overlay_view=0x7f0a048d;
    public static final int sawtooth=0x7f0a048e;
    public static final int scale=0x7f0a048f;
    public static final int scan_links_progressbar=0x7f0a0490;
    public static final int scan_list=0x7f0a0491;
    public static final int scanning_progress=0x7f0a0492;
    public static final int screen=0x7f0a0493;
    public static final int screen_lock_options=0x7f0a0494;
    public static final int screen_on_group=0x7f0a0495;
    public static final int scroll=0x7f0a0496;
    public static final int scrollIndicatorDown=0x7f0a0497;
    public static final int scrollIndicatorUp=0x7f0a0498;
    public static final int scrollView=0x7f0a0499;
    public static final int scrollable=0x7f0a049a;
    public static final int search_action_bar=0x7f0a049b;
    public static final int search_action_bar_title=0x7f0a049c;
    public static final int search_action_bar_two_pane=0x7f0a049d;
    public static final int search_app_list_menu=0x7f0a049e;
    public static final int search_badge=0x7f0a049f;
    public static final int search_bar=0x7f0a04a0;
    public static final int search_button=0x7f0a04a1;
    public static final int search_close_btn=0x7f0a04a2;
    public static final int search_domains=0x7f0a04a3;
    public static final int search_edit_frame=0x7f0a04a4;
    public static final int search_go_btn=0x7f0a04a5;
    public static final int search_mag_icon=0x7f0a04a6;
    public static final int search_plate=0x7f0a04a7;
    public static final int search_src_text=0x7f0a04a8;
    public static final int search_voice_btn=0x7f0a04a9;
    public static final int security=0x7f0a04aa;
    public static final int security_fields=0x7f0a04ab;
    public static final int security_settings_face_settings_enroll_button=0x7f0a04ac;
    public static final int security_settings_face_settings_remove_button=0x7f0a04ad;
    public static final int see_more=0x7f0a04ae;
    public static final int seek_bar=0x7f0a04af;
    public static final int seekbar=0x7f0a04b0;
    public static final int seekbar_value=0x7f0a04b1;
    public static final int select_dialog_listview=0x7f0a04b2;
    public static final int selected=0x7f0a04b3;
    public static final int selection_type=0x7f0a04b4;
    public static final int sendbroadcast=0x7f0a04b5;
    public static final int server=0x7f0a04b6;
    public static final int service=0x7f0a04b7;
    public static final int service_state_label=0x7f0a04b8;
    public static final int service_state_value=0x7f0a04b9;
    public static final int settings=0x7f0a04ba;
    public static final int settings_button=0x7f0a04bb;
    public static final int settings_button_no_background=0x7f0a04bc;
    public static final int settings_divider=0x7f0a04bd;
    public static final int settings_homepage_container=0x7f0a04be;
    public static final int settings_icon=0x7f0a04bf;
    public static final int settings_title=0x7f0a04c0;
    public static final int settings_title_divider=0x7f0a04c1;
    public static final int settings_title_panel=0x7f0a04c2;
    public static final int settings_title_template=0x7f0a04c3;
    public static final int settingslib_learn_more=0x7f0a04c4;
    public static final int settingslib_main_switch_bar=0x7f0a04c5;
    public static final int setup_wizard_layout=0x7f0a04c6;
    public static final int seven=0x7f0a04c7;
    public static final int shared=0x7f0a04c8;
    public static final int shortcut=0x7f0a04c9;
    public static final int shorter=0x7f0a04ca;
    public static final int showCustom=0x7f0a04cb;
    public static final int showHome=0x7f0a04cc;
    public static final int showTitle=0x7f0a04cd;
    public static final int show_all=0x7f0a04ce;
    public static final int show_options=0x7f0a04cf;
    public static final int show_password=0x7f0a04d0;
    public static final int show_password_layout=0x7f0a04d1;
    public static final int show_system=0x7f0a04d2;
    public static final int signal=0x7f0a04d3;
    public static final int signal_strength=0x7f0a04d4;
    public static final int signal_strength_label=0x7f0a04d5;
    public static final int signal_strength_value=0x7f0a04d6;
    public static final int signin_button=0x7f0a04d7;
    public static final int silence=0x7f0a04d8;
    public static final int silence_icon=0x7f0a04d9;
    public static final int silence_label=0x7f0a04da;
    public static final int silence_summary=0x7f0a04db;
    public static final int sim=0x7f0a04dc;
    public static final int sin=0x7f0a04dd;
    public static final int single_network=0x7f0a04de;
    public static final int single_ssid=0x7f0a04df;
    public static final int single_status=0x7f0a04e0;
    public static final int six=0x7f0a04e1;
    public static final int size_spinner=0x7f0a04e2;
    public static final int skip=0x7f0a04e3;
    public static final int skipCollapsed=0x7f0a04e4;
    public static final int skip_button=0x7f0a04e5;
    public static final int slice_slider_layout=0x7f0a04e6;
    public static final int slice_view=0x7f0a04e7;
    public static final int slide=0x7f0a04e8;
    public static final int sliding_tab_selected_indicator=0x7f0a04e9;
    public static final int sliding_tabs=0x7f0a04ea;
    public static final int smaller=0x7f0a04eb;
    public static final int snackbar_action=0x7f0a04ec;
    public static final int snackbar_text=0x7f0a04ed;
    public static final int snap=0x7f0a04ee;
    public static final int snapMargins=0x7f0a04ef;
    public static final int snippet=0x7f0a04f0;
    public static final int snoozed_list=0x7f0a04f1;
    public static final int software=0x7f0a04f2;
    public static final int software_shortcut=0x7f0a04f3;
    public static final int sort_order_alpha=0x7f0a04f4;
    public static final int sort_order_frequent_notification=0x7f0a04f5;
    public static final int sort_order_recent_notification=0x7f0a04f6;
    public static final int sort_order_size=0x7f0a04f7;
    public static final int space1=0x7f0a04f8;
    public static final int space2=0x7f0a04f9;
    public static final int spacer=0x7f0a04fa;
    public static final int special_effects_controller_view_tag=0x7f0a04fb;
    public static final int spinner=0x7f0a04fc;
    public static final int spline=0x7f0a04fd;
    public static final int split_action_bar=0x7f0a04fe;
    public static final int spread=0x7f0a04ff;
    public static final int spread_inside=0x7f0a0500;
    public static final int square=0x7f0a0501;
    public static final int src_atop=0x7f0a0502;
    public static final int src_in=0x7f0a0503;
    public static final int src_over=0x7f0a0504;
    public static final int ssid=0x7f0a0505;
    public static final int ssid_scanner_button=0x7f0a0506;
    public static final int ssid_too_long_warning=0x7f0a0507;
    public static final int standard=0x7f0a0508;
    public static final int start=0x7f0a0509;
    public static final int startHorizontal=0x7f0a050a;
    public static final int startToEnd=0x7f0a050b;
    public static final int startVertical=0x7f0a050c;
    public static final int start_volume=0x7f0a050d;
    public static final int start_volume_label=0x7f0a050e;
    public static final int startactivity=0x7f0a050f;
    public static final int state_off_button=0x7f0a0510;
    public static final int state_on_button=0x7f0a0511;
    public static final int staticLayout=0x7f0a0512;
    public static final int staticPostLayout=0x7f0a0513;
    public static final int staticip=0x7f0a0514;
    public static final int status=0x7f0a0515;
    public static final int status_bar_latest_event_content=0x7f0a0516;
    public static final int stop=0x7f0a0517;
    public static final int storage_forget=0x7f0a0518;
    public static final int storage_format=0x7f0a0519;
    public static final int storage_format_as_internal=0x7f0a051a;
    public static final int storage_format_as_portable=0x7f0a051b;
    public static final int storage_free=0x7f0a051c;
    public static final int storage_migrate=0x7f0a051d;
    public static final int storage_mount=0x7f0a051e;
    public static final int storage_rename=0x7f0a051f;
    public static final int storage_unmount=0x7f0a0520;
    public static final int storage_wizard_aux=0x7f0a0521;
    public static final int storage_wizard_body=0x7f0a0522;
    public static final int storage_wizard_init_external=0x7f0a0523;
    public static final int storage_wizard_init_internal=0x7f0a0524;
    public static final int storage_wizard_migrate_v2_checklist_media=0x7f0a0525;
    public static final int storage_wizard_progress=0x7f0a0526;
    public static final int storage_wizard_progress_summary=0x7f0a0527;
    public static final int stretch=0x7f0a0528;
    public static final int subcontent=0x7f0a0529;
    public static final int submenuarrow=0x7f0a052a;
    public static final int submit_area=0x7f0a052b;
    public static final int subtitle=0x7f0a052c;
    /**
     * ID used with View#setTag to store the original weight on a ButtonBar
     */
    public static final int suc_customization_original_weight=0x7f0a052d;
    public static final int suc_footer_button_bar=0x7f0a052e;
    public static final int suc_layout_content=0x7f0a052f;
    public static final int suc_layout_footer=0x7f0a0530;
    public static final int suc_layout_status=0x7f0a0531;
    public static final int suc_layout_title=0x7f0a0532;
    public static final int sud_bottom_scroll_view=0x7f0a0533;
    public static final int sud_content_info_container=0x7f0a0534;
    public static final int sud_content_info_description=0x7f0a0535;
    public static final int sud_content_info_icon=0x7f0a0536;
    public static final int sud_content_info_icon_container=0x7f0a0537;
    public static final int sud_glif_progress_bar=0x7f0a0538;
    public static final int sud_header_scroll_view=0x7f0a0539;
    public static final int sud_illustration_video_view=0x7f0a053a;
    public static final int sud_items_expandable_switch_content=0x7f0a053b;
    public static final int sud_items_icon=0x7f0a053c;
    public static final int sud_items_icon_container=0x7f0a053d;
    public static final int sud_items_summary=0x7f0a053e;
    public static final int sud_items_switch=0x7f0a053f;
    public static final int sud_items_switch_divider=0x7f0a0540;
    public static final int sud_items_title=0x7f0a0541;
    public static final int sud_landscape_content_area=0x7f0a0542;
    public static final int sud_landscape_header_area=0x7f0a0543;
    public static final int sud_large_progress_bar=0x7f0a0544;
    public static final int sud_layout_content=0x7f0a0545;
    public static final int sud_layout_decor=0x7f0a0546;
    public static final int sud_layout_description=0x7f0a0547;
    public static final int sud_layout_header=0x7f0a0548;
    public static final int sud_layout_icon=0x7f0a0549;
    public static final int sud_layout_icon_container=0x7f0a054a;
    public static final int sud_layout_illustration_progress_stub=0x7f0a054b;
    public static final int sud_layout_navigation_bar=0x7f0a054c;
    public static final int sud_layout_progress=0x7f0a054d;
    public static final int sud_layout_progress_illustration=0x7f0a054e;
    public static final int sud_layout_progress_stub=0x7f0a054f;
    public static final int sud_layout_sticky_header=0x7f0a0550;
    public static final int sud_layout_subtitle=0x7f0a0551;
    public static final int sud_layout_template_content=0x7f0a0552;
    public static final int sud_navbar_back=0x7f0a0553;
    public static final int sud_navbar_more=0x7f0a0554;
    public static final int sud_navbar_next=0x7f0a0555;
    public static final int sud_progress_bar=0x7f0a0556;
    public static final int sud_progress_illustration=0x7f0a0557;
    public static final int sud_recycler_view=0x7f0a0558;
    public static final int sud_scroll_view=0x7f0a0559;
    public static final int suggestion_card=0x7f0a055a;
    public static final int suggestion_content=0x7f0a055b;
    public static final int summary=0x7f0a055c;
    public static final int summary1=0x7f0a055d;
    public static final int summary_container=0x7f0a055e;
    public static final int summary_frame=0x7f0a055f;
    public static final int summary_text=0x7f0a0560;
    public static final int supplicant_state=0x7f0a0561;
    public static final int suppression_text=0x7f0a0562;
    public static final int switchWidget=0x7f0a0563;
    public static final int switch_bar=0x7f0a0564;
    public static final int switch_ime_button=0x7f0a0565;
    public static final int switch_text=0x7f0a0566;
    public static final int switch_widget=0x7f0a0567;
    public static final int sync_active=0x7f0a0568;
    public static final int sync_failed=0x7f0a0569;
    public static final int systemSize=0x7f0a056a;
    public static final int systemSizePrefix=0x7f0a056b;
    public static final int system_content=0x7f0a056c;
    public static final int system_default_label=0x7f0a056d;
    public static final int system_label=0x7f0a056e;
    public static final int system_progress=0x7f0a056f;
    public static final int system_tab=0x7f0a0570;
    public static final int tabMode=0x7f0a0571;
    public static final int tab_container=0x7f0a0572;
    public static final int tabs=0x7f0a0573;
    public static final int tabs_container=0x7f0a0574;
    public static final int tag_accessibility_actions=0x7f0a0575;
    public static final int tag_accessibility_clickable_spans=0x7f0a0576;
    public static final int tag_accessibility_heading=0x7f0a0577;
    public static final int tag_accessibility_pane_title=0x7f0a0578;
    public static final int tag_on_apply_window_listener=0x7f0a0579;
    public static final int tag_on_receive_content_listener=0x7f0a057a;
    public static final int tag_on_receive_content_mime_types=0x7f0a057b;
    public static final int tag_screen_reader_focusable=0x7f0a057c;
    public static final int tag_state_description=0x7f0a057d;
    public static final int tag_transition_group=0x7f0a057e;
    public static final int tag_unhandled_key_event_manager=0x7f0a057f;
    public static final int tag_unhandled_key_listeners=0x7f0a0580;
    public static final int tag_window_insets_animation_callback=0x7f0a0581;
    public static final int test_checkbox_android_button_tint=0x7f0a0582;
    public static final int test_checkbox_app_button_tint=0x7f0a0583;
    public static final int test_radiobutton_android_button_tint=0x7f0a0584;
    public static final int test_radiobutton_app_button_tint=0x7f0a0585;
    public static final int text=0x7f0a0586;
    public static final int text1=0x7f0a0587;
    public static final int text2=0x7f0a0588;
    public static final int textEnd=0x7f0a0589;
    public static final int textSpacerNoButtons=0x7f0a058a;
    public static final int textSpacerNoTitle=0x7f0a058b;
    public static final int textStart=0x7f0a058c;
    public static final int textTop=0x7f0a058d;
    public static final int text_input_end_icon=0x7f0a058e;
    public static final int text_input_error_icon=0x7f0a058f;
    public static final int text_input_start_icon=0x7f0a0590;
    public static final int text_layout=0x7f0a0591;
    public static final int text_overlay=0x7f0a0592;
    public static final int text_see_more=0x7f0a0593;
    public static final int text_see_more_count=0x7f0a0594;
    public static final int textinput_counter=0x7f0a0595;
    public static final int textinput_error=0x7f0a0596;
    public static final int textinput_helper_text=0x7f0a0597;
    public static final int textinput_placeholder=0x7f0a0598;
    public static final int textinput_prefix_text=0x7f0a0599;
    public static final int textinput_suffix_text=0x7f0a059a;
    public static final int texture_view=0x7f0a059b;
    public static final int three=0x7f0a059c;
    public static final int time=0x7f0a059d;
    public static final int time_zone_search_menu=0x7f0a059e;
    public static final int timestamp=0x7f0a059f;
    public static final int tint_overlay=0x7f0a05a0;
    public static final int title=0x7f0a05a1;
    public static final int titleDivider=0x7f0a05a2;
    public static final int titleDividerNoCustom=0x7f0a05a3;
    public static final int title_group=0x7f0a05a4;
    public static final int title_icon=0x7f0a05a5;
    public static final int title_in_control=0x7f0a05a6;
    public static final int title_template=0x7f0a05a7;
    public static final int today_list=0x7f0a05a8;
    public static final int toggle=0x7f0a05a9;
    public static final int toggle_diversity=0x7f0a05aa;
    public static final int top=0x7f0a05ab;
    public static final int topLayout=0x7f0a05ac;
    public static final int topPanel=0x7f0a05ad;
    public static final int top_divider=0x7f0a05ae;
    public static final int top_row=0x7f0a05af;
    public static final int tos_content=0x7f0a05b0;
    public static final int total_summary=0x7f0a05b1;
    public static final int touch_outside=0x7f0a05b2;
    public static final int transitionToEnd=0x7f0a05b3;
    public static final int transitionToStart=0x7f0a05b4;
    public static final int transition_current_scene=0x7f0a05b5;
    public static final int transition_layout_save=0x7f0a05b6;
    public static final int transition_position=0x7f0a05b7;
    public static final int transition_scene_layoutid_cache=0x7f0a05b8;
    public static final int transition_transform=0x7f0a05b9;
    public static final int triangle=0x7f0a05ba;
    public static final int triple_tap_shortcut=0x7f0a05bb;
    public static final int trusted_credential_status=0x7f0a05bc;
    public static final int trusted_credential_subject_primary=0x7f0a05bd;
    public static final int trusted_credential_subject_secondary=0x7f0a05be;
    public static final int trusted_devices_prompt_layout=0x7f0a05bf;
    public static final int two=0x7f0a05c0;
    public static final int two_pane_suggestion_content=0x7f0a05c1;
    public static final int two_target_divider=0x7f0a05c2;
    public static final int tx_link_speed=0x7f0a05c3;
    public static final int type=0x7f0a05c4;
    public static final int typeSpinner=0x7f0a05c5;
    public static final int tz_item_details=0x7f0a05c6;
    public static final int tz_item_dst=0x7f0a05c7;
    public static final int tz_item_name=0x7f0a05c8;
    public static final int tz_item_time=0x7f0a05c9;
    public static final int unchecked=0x7f0a05ca;
    public static final int uniform=0x7f0a05cb;
    public static final int uninstall_button=0x7f0a05cc;
    public static final int unlabeled=0x7f0a05cd;
    public static final int up=0x7f0a05ce;
    public static final int update=0x7f0a05cf;
    public static final int uri_name=0x7f0a05d0;
    public static final int uris=0x7f0a05d1;
    public static final int usage_graph=0x7f0a05d2;
    public static final int usage_layout=0x7f0a05d3;
    public static final int usage_summary=0x7f0a05d4;
    public static final int usage_time=0x7f0a05d5;
    public static final int usage_title=0x7f0a05d6;
    public static final int useLogo=0x7f0a05d7;
    public static final int user_cert=0x7f0a05d8;
    public static final int user_content=0x7f0a05d9;
    public static final int user_dict_settings_add_dialog_top=0x7f0a05da;
    public static final int user_dictionary_add_shortcut=0x7f0a05db;
    public static final int user_dictionary_add_shortcut_label=0x7f0a05dc;
    public static final int user_dictionary_add_word_grid=0x7f0a05dd;
    public static final int user_dictionary_add_word_text=0x7f0a05de;
    public static final int user_name=0x7f0a05df;
    public static final int user_photo=0x7f0a05e0;
    public static final int user_progress=0x7f0a05e1;
    public static final int user_tab=0x7f0a05e2;
    public static final int username=0x7f0a05e3;
    public static final int userpass=0x7f0a05e4;
    public static final int value=0x7f0a05e5;
    public static final int verified_links_widget=0x7f0a05e6;
    public static final int verifying_layout=0x7f0a05e7;
    public static final int verifying_progress=0x7f0a05e8;
    public static final int verifying_textview=0x7f0a05e9;
    public static final int vertical=0x7f0a05ea;
    public static final int video_container=0x7f0a05eb;
    public static final int video_play_button=0x7f0a05ec;
    public static final int video_preview_image=0x7f0a05ed;
    public static final int video_texture_view=0x7f0a05ee;
    public static final int viewGroup=0x7f0a05ef;
    public static final int view_offset_helper=0x7f0a05f0;
    public static final int view_pager=0x7f0a05f1;
    public static final int view_tree_lifecycle_owner=0x7f0a05f2;
    public static final int view_tree_saved_state_registry_owner=0x7f0a05f3;
    public static final int view_tree_view_model_store_owner=0x7f0a05f4;
    public static final int viewpager=0x7f0a05f5;
    public static final int visible=0x7f0a05f6;
    public static final int visible_removing_fragment_view_tag=0x7f0a05f7;
    public static final int voice_network_type_label=0x7f0a05f8;
    public static final int voice_network_type_value=0x7f0a05f9;
    public static final int volume_item_container=0x7f0a05fa;
    public static final int vpn_create=0x7f0a05fb;
    public static final int vpn_proxy_fields=0x7f0a05fc;
    public static final int vpn_proxy_host=0x7f0a05fd;
    public static final int vpn_proxy_port=0x7f0a05fe;
    public static final int vpn_proxy_settings=0x7f0a05ff;
    public static final int vpn_proxy_settings_title=0x7f0a0600;
    public static final int warning_button=0x7f0a0601;
    public static final int warning_low_charge=0x7f0a0602;
    public static final int warning_unplugged=0x7f0a0603;
    public static final int widget_summary=0x7f0a0604;
    public static final int widget_summary1=0x7f0a0605;
    public static final int widget_summary2=0x7f0a0606;
    public static final int wifi_advanced_fields=0x7f0a0607;
    public static final int wifi_advanced_toggle=0x7f0a0608;
    public static final int wifi_advanced_togglebox=0x7f0a0609;
    public static final int wifi_ap_picture_view=0x7f0a060a;
    public static final int wifi_dialog_frame=0x7f0a060b;
    public static final int wifi_dpp_layout=0x7f0a060c;
    public static final int wifi_group=0x7f0a060d;
    public static final int wifi_network_list_container=0x7f0a060e;
    public static final int wifi_state=0x7f0a060f;
    public static final int wifi_wps=0x7f0a0610;
    public static final int withText=0x7f0a0611;
    public static final int withinBounds=0x7f0a0612;
    public static final int wrap=0x7f0a0613;
    public static final int wrap_content=0x7f0a0614;
    public static final int zen_alarm_warning=0x7f0a0615;
    public static final int zen_automatic_rule_widget=0x7f0a0616;
    public static final int zen_conditions=0x7f0a0617;
    public static final int zen_custom_settings_dialog_alarms=0x7f0a0618;
    public static final int zen_custom_settings_dialog_alarms_allow=0x7f0a0619;
    public static final int zen_custom_settings_dialog_calls=0x7f0a061a;
    public static final int zen_custom_settings_dialog_calls_allow=0x7f0a061b;
    public static final int zen_custom_settings_dialog_events=0x7f0a061c;
    public static final int zen_custom_settings_dialog_events_allow=0x7f0a061d;
    public static final int zen_custom_settings_dialog_media=0x7f0a061e;
    public static final int zen_custom_settings_dialog_media_allow=0x7f0a061f;
    public static final int zen_custom_settings_dialog_messages=0x7f0a0620;
    public static final int zen_custom_settings_dialog_messages_allow=0x7f0a0621;
    public static final int zen_custom_settings_dialog_notifications=0x7f0a0622;
    public static final int zen_custom_settings_dialog_reminders=0x7f0a0623;
    public static final int zen_custom_settings_dialog_reminders_allow=0x7f0a0624;
    public static final int zen_custom_settings_dialog_show_notifications=0x7f0a0625;
    public static final int zen_custom_settings_dialog_system=0x7f0a0626;
    public static final int zen_custom_settings_dialog_system_allow=0x7f0a0627;
    public static final int zen_duration_conditions=0x7f0a0628;
    public static final int zen_duration_container=0x7f0a0629;
    public static final int zen_duration_dialog_container=0x7f0a062a;
    public static final int zen_mode_button=0x7f0a062b;
    public static final int zen_mode_rule_name=0x7f0a062c;
    public static final int zen_mode_rule_name_warning=0x7f0a062d;
    public static final int zen_mode_settings_senders_image=0x7f0a062e;
    public static final int zen_mode_settings_senders_overlay_view=0x7f0a062f;
    public static final int zen_mode_settings_turn_off_button=0x7f0a0630;
    public static final int zen_mode_settings_turn_on_button=0x7f0a0631;
    public static final int zen_onboarding_choices=0x7f0a0632;
    public static final int zen_onboarding_current_setting=0x7f0a0633;
    public static final int zen_onboarding_current_setting_button=0x7f0a0634;
    public static final int zen_onboarding_current_setting_summary=0x7f0a0635;
    public static final int zen_onboarding_current_setting_title=0x7f0a0636;
    public static final int zen_onboarding_new_setting=0x7f0a0637;
    public static final int zen_onboarding_new_setting_button=0x7f0a0638;
    public static final int zen_onboarding_new_setting_summary=0x7f0a0639;
    public static final int zen_onboarding_new_setting_title=0x7f0a063a;
    public static final int zen_radio_buttons=0x7f0a063b;
    public static final int zen_radio_buttons_content=0x7f0a063c;
    public static final int zero=0x7f0a063d;
    public static final int zero_corner_chip=0x7f0a063e;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0b0000;
    public static final int abc_config_activityShortDur=0x7f0b0001;
    public static final int app_bar_elevation_anim_duration=0x7f0b0002;
    public static final int bottom_sheet_slide_duration=0x7f0b0003;
    public static final int cancel_button_image_alpha=0x7f0b0004;
    /**
     * Threshold in micro watts above which a charger is rated as "fast"; 1.5A @ 5V
     */
    public static final int config_chargingFastThreshold=0x7f0b0005;
    /**
     * Threshold in micro watts below which a charger is rated as "slow"; 1A @ 5V
     */
    public static final int config_chargingSlowlyThreshold=0x7f0b0006;
    /**
     * Max network scan search time in seconds
     */
    public static final int config_network_scan_helper_max_search_time_sec=0x7f0b0007;
    public static final int config_tooltipAnimTime=0x7f0b0008;
    /**
     * Dashboard number of columns
     * Dashboard number of columns
     * Dashboard number of columns
     */
    public static final int dashboard_num_columns=0x7f0b0009;
    public static final int design_snackbar_text_max_lines=0x7f0b000a;
    public static final int design_tab_indicator_anim_duration_ms=0x7f0b000b;
    public static final int device_index_update=0x7f0b000c;
    public static final int hide_password_duration=0x7f0b000d;
    /**
     * Reserve all the job ids in settings
     */
    public static final int job_anomaly_clean_up=0x7f0b000e;
    public static final int job_anomaly_config_update=0x7f0b000f;
    public static final int job_anomaly_detection=0x7f0b0010;
    public static final int material_motion_duration_long_1=0x7f0b0011;
    public static final int material_motion_duration_long_2=0x7f0b0012;
    public static final int material_motion_duration_medium_1=0x7f0b0013;
    public static final int material_motion_duration_medium_2=0x7f0b0014;
    public static final int material_motion_duration_short_1=0x7f0b0015;
    public static final int material_motion_duration_short_2=0x7f0b0016;
    public static final int material_motion_path=0x7f0b0017;
    /**
     * TODO: This is purely enforced by the interface, and does not affect what
     * strings may be inserted into the actual content provider.
     * With the addition of shortcuts, it seems more likely that users will
     * find this limiting; it would be good to have the interface work with
     * very long strings too.
     */
    public static final int maximum_user_dictionary_word_length=0x7f0b0018;
    public static final int mr_cast_volume_slider_layout_animation_duration_ms=0x7f0b0019;
    public static final int mr_controller_volume_group_list_animation_duration_ms=0x7f0b001a;
    public static final int mr_controller_volume_group_list_fade_in_duration_ms=0x7f0b001b;
    public static final int mr_controller_volume_group_list_fade_out_duration_ms=0x7f0b001c;
    public static final int mr_update_routes_delay_ms=0x7f0b001d;
    public static final int mtrl_badge_max_character_count=0x7f0b001e;
    public static final int mtrl_btn_anim_delay_ms=0x7f0b001f;
    public static final int mtrl_btn_anim_duration_ms=0x7f0b0020;
    public static final int mtrl_calendar_header_orientation=0x7f0b0021;
    public static final int mtrl_calendar_selection_text_lines=0x7f0b0022;
    public static final int mtrl_calendar_year_selector_span=0x7f0b0023;
    public static final int mtrl_card_anim_delay_ms=0x7f0b0024;
    public static final int mtrl_card_anim_duration_ms=0x7f0b0025;
    public static final int mtrl_chip_anim_duration=0x7f0b0026;
    public static final int mtrl_tab_indicator_anim_duration_ms=0x7f0b0027;
    /**
     * Weight of the left pane in a multi-pane preference layout.
     * Weight of the left pane in a multi-pane preference layout.
     */
    public static final int preferences_left_pane_weight=0x7f0b0028;
    /**
     * Weight of the right pane in a multi-pane preference layout. So the split is 40:60
     * Weight of the right pane in a multi-pane preference layout. So the split is 1:2
     */
    public static final int preferences_right_pane_weight=0x7f0b0029;
    public static final int setup_design_header_auto_size_max_line_of_max_size=0x7f0b002a;
    public static final int show_password_duration=0x7f0b002b;
    /**
     * Sim Card Name length
     */
    public static final int sim_name_length=0x7f0b002c;
    public static final int sim_notification_send=0x7f0b002d;
    public static final int status_bar_notification_info_maxnum=0x7f0b002e;
    /**
     * The duration (in milliseconds) of activity transitions
     */
    public static final int sudTransitionDuration=0x7f0b002f;
    /**
     * Controls the maximum number of faces enrollable during SUW
     */
    public static final int suw_max_faces_enrollable=0x7f0b0030;
    /**
     * Controls the maximum number of fingerprints enrollable during SUW
     */
    public static final int suw_max_fingerprints_enrollable=0x7f0b0031;
  }
  public static final class interpolator {
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_0=0x7f0c0000;
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_1=0x7f0c0001;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x7f0c0002;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x7f0c0003;
    public static final int btn_radio_to_off_mtrl_animation_interpolator_0=0x7f0c0004;
    public static final int btn_radio_to_on_mtrl_animation_interpolator_0=0x7f0c0005;
    public static final int enrollment_fingerprint_isolated_animation_interpolator_0=0x7f0c0006;
    public static final int enrollment_fingerprint_isolated_animation_interpolator_1=0x7f0c0007;
    public static final int enrollment_fingerprint_isolated_animation_interpolator_2=0x7f0c0008;
    public static final int fast_out_slow_in=0x7f0c0009;
    public static final int mr_fast_out_slow_in=0x7f0c000a;
    public static final int mr_linear_out_slow_in=0x7f0c000b;
    public static final int mtrl_fast_out_linear_in=0x7f0c000c;
    public static final int mtrl_fast_out_slow_in=0x7f0c000d;
    public static final int mtrl_linear=0x7f0c000e;
    public static final int mtrl_linear_out_slow_in=0x7f0c000f;
    public static final int progress_indeterminate_horizontal_rect1_scalex_copy=0x7f0c0010;
    public static final int progress_indeterminate_horizontal_rect1_translatex_copy=0x7f0c0011;
    public static final int progress_indeterminate_horizontal_rect2_scalex_copy=0x7f0c0012;
    public static final int progress_indeterminate_horizontal_rect2_translatex_copy=0x7f0c0013;
    public static final int sud_accelerate_quart=0x7f0c0014;
    public static final int sud_decelerate_quart=0x7f0c0015;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0d0000;
    public static final int abc_action_bar_up_container=0x7f0d0001;
    public static final int abc_action_menu_item_layout=0x7f0d0002;
    public static final int abc_action_menu_layout=0x7f0d0003;
    public static final int abc_action_mode_bar=0x7f0d0004;
    public static final int abc_action_mode_close_item_material=0x7f0d0005;
    public static final int abc_activity_chooser_view=0x7f0d0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0d0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0d0008;
    public static final int abc_alert_dialog_material=0x7f0d0009;
    public static final int abc_alert_dialog_title_material=0x7f0d000a;
    public static final int abc_cascading_menu_item_layout=0x7f0d000b;
    public static final int abc_dialog_title_material=0x7f0d000c;
    public static final int abc_expanded_menu_layout=0x7f0d000d;
    public static final int abc_list_menu_item_checkbox=0x7f0d000e;
    public static final int abc_list_menu_item_icon=0x7f0d000f;
    public static final int abc_list_menu_item_layout=0x7f0d0010;
    public static final int abc_list_menu_item_radio=0x7f0d0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0d0012;
    public static final int abc_popup_menu_item_layout=0x7f0d0013;
    public static final int abc_screen_content_include=0x7f0d0014;
    public static final int abc_screen_simple=0x7f0d0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0d0016;
    public static final int abc_screen_toolbar=0x7f0d0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0d0018;
    public static final int abc_search_view=0x7f0d0019;
    public static final int abc_select_dialog_material=0x7f0d001a;
    public static final int abc_slice_grid=0x7f0d001b;
    public static final int abc_slice_grid_see_more=0x7f0d001c;
    public static final int abc_slice_grid_see_more_overlay=0x7f0d001d;
    public static final int abc_slice_grid_text_overlay_image=0x7f0d001e;
    public static final int abc_slice_message=0x7f0d001f;
    public static final int abc_slice_message_local=0x7f0d0020;
    public static final int abc_slice_permission_request=0x7f0d0021;
    public static final int abc_slice_progress_inline_view=0x7f0d0022;
    public static final int abc_slice_progress_view=0x7f0d0023;
    public static final int abc_slice_remote_input=0x7f0d0024;
    public static final int abc_slice_row_selection=0x7f0d0025;
    public static final int abc_slice_row_selection_dropdown_text=0x7f0d0026;
    public static final int abc_slice_row_selection_text=0x7f0d0027;
    public static final int abc_slice_row_show_more=0x7f0d0028;
    public static final int abc_slice_secondary_text=0x7f0d0029;
    public static final int abc_slice_seekbar_view=0x7f0d002a;
    public static final int abc_slice_small_template=0x7f0d002b;
    public static final int abc_slice_switch=0x7f0d002c;
    public static final int abc_slice_title=0x7f0d002d;
    public static final int abc_tooltip=0x7f0d002e;
    public static final int access_point_friction_widget=0x7f0d002f;
    public static final int accessibility_autoclick_custom_seekbar=0x7f0d0030;
    public static final int accessibility_edit_magnification_shortcut=0x7f0d0031;
    public static final int accessibility_edit_shortcut=0x7f0d0032;
    public static final int accessibility_edit_shortcut_component=0x7f0d0033;
    public static final int accessibility_edit_shortcut_magnification=0x7f0d0034;
    public static final int accessibility_launch_activity_preference=0x7f0d0035;
    public static final int accessibility_lottie_animation_view=0x7f0d0036;
    public static final int accessibility_magnification_mode_header=0x7f0d0037;
    public static final int accessibility_screen_size_setup_wizard=0x7f0d0038;
    public static final int accessibility_shortcut_secondary_action=0x7f0d0039;
    public static final int accessibility_shortcut_tutorial_dialog=0x7f0d003a;
    public static final int adaptive_connectivity_header=0x7f0d003b;
    public static final int adb_qrcode_scanner_fragment=0x7f0d003c;
    public static final int adb_wireless_dialog=0x7f0d003d;
    public static final int admin_disabled_other_options_footer=0x7f0d003e;
    public static final int admin_support_details_dialog=0x7f0d003f;
    public static final int advanced_bt_entity_header=0x7f0d0040;
    public static final int advanced_bt_entity_sub=0x7f0d0041;
    public static final int airplane_mode_message_preference=0x7f0d0042;
    public static final int apn_preference_layout=0x7f0d0043;
    public static final int app_authentication_item=0x7f0d0044;
    public static final int app_authentication_uri_item=0x7f0d0045;
    public static final int app_domains_dialog=0x7f0d0046;
    public static final int app_domains_item=0x7f0d0047;
    public static final int app_entities_header=0x7f0d0048;
    public static final int app_high_usage_item=0x7f0d0049;
    public static final int app_launch_progress=0x7f0d004a;
    public static final int app_launch_verified_links_title=0x7f0d004b;
    public static final int app_ops_details_item=0x7f0d004c;
    public static final int app_ops_item=0x7f0d004d;
    public static final int app_permission_item=0x7f0d004e;
    public static final int app_preference_item=0x7f0d004f;
    public static final int app_preferred_settings=0x7f0d0050;
    public static final int app_view=0x7f0d0051;
    public static final int apps_filter_spinner=0x7f0d0052;
    public static final int back_gesture_indicator_container=0x7f0d0053;
    public static final int background_check_summary=0x7f0d0054;
    public static final int battery_active_view=0x7f0d0055;
    public static final int battery_chart_graph=0x7f0d0056;
    public static final int battery_header=0x7f0d0057;
    public static final int battery_history_detail=0x7f0d0058;
    public static final int battery_saver_schedule_percentage_seekbar=0x7f0d0059;
    public static final int battery_usage_graph=0x7f0d005a;
    public static final int biometric_handoff=0x7f0d005b;
    public static final int blob_list_item_view=0x7f0d005c;
    public static final int bluetooth_access=0x7f0d005d;
    public static final int bluetooth_audio_bit_per_sample_dialog=0x7f0d005e;
    public static final int bluetooth_audio_channel_mode_dialog=0x7f0d005f;
    public static final int bluetooth_audio_codec_dialog=0x7f0d0060;
    public static final int bluetooth_audio_quality_dialog=0x7f0d0061;
    public static final int bluetooth_audio_sample_rate_dialog=0x7f0d0062;
    public static final int bluetooth_device_picker=0x7f0d0063;
    public static final int bluetooth_pin_confirm=0x7f0d0064;
    public static final int bluetooth_pin_entry=0x7f0d0065;
    public static final int bubble_conversation_remove_button=0x7f0d0066;
    public static final int bubble_preference=0x7f0d0067;
    public static final int bugreport_options_dialog=0x7f0d0068;
    public static final int ca_certificate_warning_dialog=0x7f0d0069;
    public static final int cancel_pref_widget=0x7f0d006a;
    public static final int captioning_preview=0x7f0d006b;
    public static final int card_preference_layout=0x7f0d006c;
    public static final int choose_lock_dialog_item=0x7f0d006d;
    public static final int choose_lock_generic_biometric_header=0x7f0d006e;
    public static final int choose_lock_password=0x7f0d006f;
    public static final int choose_lock_pattern=0x7f0d0070;
    public static final int choose_lock_pattern_common=0x7f0d0071;
    public static final int choose_sim_activity=0x7f0d0072;
    public static final int collapsing_toolbar_base_layout=0x7f0d0073;
    public static final int color_mode_preview=0x7f0d0074;
    public static final int color_mode_view1=0x7f0d0075;
    public static final int color_mode_view2=0x7f0d0076;
    public static final int color_mode_view3=0x7f0d0077;
    public static final int color_picker_item=0x7f0d0078;
    public static final int companion_apps_remove_button_widget=0x7f0d0079;
    public static final int conditional_card_footer=0x7f0d007a;
    public static final int conditional_card_full_tile=0x7f0d007b;
    public static final int conditional_card_half_tile=0x7f0d007c;
    public static final int conditional_card_header=0x7f0d007d;
    public static final int conditional_card_header_icon=0x7f0d007e;
    public static final int confirm_convert_fbe=0x7f0d007f;
    public static final int confirm_lock_background_base=0x7f0d0080;
    public static final int confirm_lock_password=0x7f0d0081;
    public static final int confirm_lock_password_base=0x7f0d0082;
    public static final int confirm_lock_password_normal=0x7f0d0083;
    public static final int confirm_lock_pattern=0x7f0d0084;
    public static final int confirm_lock_pattern_base=0x7f0d0085;
    public static final int confirm_lock_pattern_normal=0x7f0d0086;
    public static final int confirm_lock_pattern_normal_base=0x7f0d0087;
    public static final int contextual_card_dismissal_view=0x7f0d0088;
    public static final int contextual_slice_full_tile=0x7f0d0089;
    public static final int contextual_slice_half_tile=0x7f0d008a;
    public static final int contextual_slice_sticky_tile=0x7f0d008b;
    public static final int conversation_message_content=0x7f0d008c;
    public static final int conversation_message_icon=0x7f0d008d;
    public static final int conversation_onboarding=0x7f0d008e;
    public static final int conversations_clear_recents=0x7f0d008f;
    public static final int convert_fbe=0x7f0d0090;
    public static final int credential_management_app_policy=0x7f0d0091;
    public static final int cross_profiles_settings_entity_header=0x7f0d0092;
    public static final int crypt_keeper_blank=0x7f0d0093;
    public static final int crypt_keeper_confirm=0x7f0d0094;
    public static final int crypt_keeper_emergency_button=0x7f0d0095;
    public static final int crypt_keeper_password_entry=0x7f0d0096;
    public static final int crypt_keeper_password_field=0x7f0d0097;
    public static final int crypt_keeper_pattern_entry=0x7f0d0098;
    public static final int crypt_keeper_pattern_field=0x7f0d0099;
    public static final int crypt_keeper_pattern_sizes=0x7f0d009a;
    public static final int crypt_keeper_pin_entry=0x7f0d009b;
    public static final int crypt_keeper_pin_field=0x7f0d009c;
    public static final int crypt_keeper_progress=0x7f0d009d;
    public static final int crypt_keeper_settings=0x7f0d009e;
    public static final int crypt_keeper_status=0x7f0d009f;
    public static final int crypt_keeper_switch_input_method=0x7f0d00a0;
    public static final int custom_dialog=0x7f0d00a1;
    public static final int daltonizer_preview=0x7f0d00a2;
    public static final int data_usage_bytes_editor=0x7f0d00a3;
    public static final int data_usage_cycle_editor=0x7f0d00a4;
    public static final int data_usage_cycles=0x7f0d00a5;
    public static final int data_usage_detail=0x7f0d00a6;
    public static final int data_usage_graph=0x7f0d00a7;
    public static final int data_usage_spinner_item=0x7f0d00a8;
    public static final int data_usage_summary=0x7f0d00a9;
    public static final int data_usage_summary_preference=0x7f0d00aa;
    public static final int delete_managed_profile_dialog=0x7f0d00ab;
    public static final int design_bottom_navigation_item=0x7f0d00ac;
    public static final int design_bottom_sheet_dialog=0x7f0d00ad;
    public static final int design_layout_snackbar=0x7f0d00ae;
    public static final int design_layout_snackbar_include=0x7f0d00af;
    public static final int design_layout_tab_icon=0x7f0d00b0;
    public static final int design_layout_tab_text=0x7f0d00b1;
    public static final int design_menu_item_action_area=0x7f0d00b2;
    public static final int design_navigation_item=0x7f0d00b3;
    public static final int design_navigation_item_header=0x7f0d00b4;
    public static final int design_navigation_item_separator=0x7f0d00b5;
    public static final int design_navigation_item_subheader=0x7f0d00b6;
    public static final int design_navigation_menu=0x7f0d00b7;
    public static final int design_navigation_menu_item=0x7f0d00b8;
    public static final int design_text_input_end_icon=0x7f0d00b9;
    public static final int design_text_input_start_icon=0x7f0d00ba;
    public static final int device_admin_add=0x7f0d00bb;
    public static final int dialog_edittext=0x7f0d00bc;
    public static final int dialog_imei_info=0x7f0d00bd;
    public static final int dialog_mobile_network_color_picker_item=0x7f0d00be;
    public static final int dialog_mobile_network_rename=0x7f0d00bf;
    public static final int dialog_sim_status=0x7f0d00c0;
    public static final int dialog_single_radio_choice_list_item=0x7f0d00c1;
    public static final int dismissal_swipe_background=0x7f0d00c2;
    public static final int dock_audio_media_enable_dialog=0x7f0d00c3;
    public static final int drawable_layout=0x7f0d00c4;
    public static final int dream_start_button=0x7f0d00c5;
    public static final int dsu_terms_of_service=0x7f0d00c6;
    public static final int edit_user_info_dialog_content=0x7f0d00c7;
    public static final int emergency_gesture_number_override_dialog=0x7f0d00c8;
    public static final int empty_print_state=0x7f0d00c9;
    public static final int empty_printers_list_service_enabled=0x7f0d00ca;
    public static final int empty_view=0x7f0d00cb;
    public static final int enable_accessibility_service_dialog_content=0x7f0d00cc;
    public static final int encryption_interstitial=0x7f0d00cd;
    public static final int expand_button=0x7f0d00ce;
    public static final int face_enroll_accessibility_toggle=0x7f0d00cf;
    public static final int face_enroll_button=0x7f0d00d0;
    public static final int face_enroll_education=0x7f0d00d1;
    public static final int face_enroll_enrolling=0x7f0d00d2;
    public static final int face_enroll_finish=0x7f0d00d3;
    public static final int face_enroll_introduction=0x7f0d00d4;
    public static final int face_remove_button=0x7f0d00d5;
    public static final int fallback_home_finishing_boot=0x7f0d00d6;
    public static final int fingerprint_enroll_enrolling=0x7f0d00d7;
    public static final int fingerprint_enroll_enrolling_base=0x7f0d00d8;
    public static final int fingerprint_enroll_enrolling_content=0x7f0d00d9;
    public static final int fingerprint_enroll_find_sensor=0x7f0d00da;
    public static final int fingerprint_enroll_find_sensor_base=0x7f0d00db;
    public static final int fingerprint_enroll_find_sensor_graphic=0x7f0d00dc;
    public static final int fingerprint_enroll_finish=0x7f0d00dd;
    public static final int fingerprint_enroll_finish_base=0x7f0d00de;
    public static final int fingerprint_enroll_introduction=0x7f0d00df;
    public static final int fingerprint_rename_dialog=0x7f0d00e0;
    public static final int font_size_activity=0x7f0d00e1;
    public static final int font_size_preview=0x7f0d00e2;
    public static final int forgot_password_activity=0x7f0d00e3;
    public static final int grid_picker_dialog=0x7f0d00e4;
    public static final int homepage_preference=0x7f0d00e5;
    public static final int horizontal_divider=0x7f0d00e6;
    public static final int horizontal_preference=0x7f0d00e7;
    public static final int hotspot_ap_band_selection_dialog=0x7f0d00e8;
    public static final int icc_lock_tabs=0x7f0d00e9;
    public static final int ignore_optimizations_content=0x7f0d00ea;
    public static final int illustration_preference=0x7f0d00eb;
    public static final int image_frame=0x7f0d00ec;
    public static final int instant_app_buttons=0x7f0d00ed;
    public static final int intent_sender=0x7f0d00ee;
    public static final int interact_across_profiles_consent_dialog=0x7f0d00ef;
    public static final int keyboard_layout_dialog_switch_hint=0x7f0d00f0;
    public static final int layout_preference_frame=0x7f0d00f1;
    public static final int lease_list_item_view=0x7f0d00f2;
    public static final int legacy_suggestion_tile=0x7f0d00f3;
    public static final int loading_container=0x7f0d00f4;
    public static final int locale_drag_cell=0x7f0d00f5;
    public static final int locale_order_list=0x7f0d00f6;
    public static final int locale_picker=0x7f0d00f7;
    public static final int lockscreen_remote_input=0x7f0d00f8;
    public static final int main_clear=0x7f0d00f9;
    public static final int main_clear_account=0x7f0d00fa;
    public static final int main_clear_confirm=0x7f0d00fb;
    public static final int main_clear_disallowed_screen=0x7f0d00fc;
    public static final int manage_applications_apps=0x7f0d00fd;
    public static final int manage_applications_apps_unsupported=0x7f0d00fe;
    public static final int manage_applications_running=0x7f0d00ff;
    public static final int manage_apps_filter_spinner=0x7f0d0100;
    public static final int material_chip_input_combo=0x7f0d0101;
    public static final int material_clock_display=0x7f0d0102;
    public static final int material_clock_display_divider=0x7f0d0103;
    public static final int material_clock_period_toggle=0x7f0d0104;
    public static final int material_clock_period_toggle_land=0x7f0d0105;
    public static final int material_clockface_textview=0x7f0d0106;
    public static final int material_clockface_view=0x7f0d0107;
    public static final int material_radial_view_group=0x7f0d0108;
    public static final int material_textinput_timepicker=0x7f0d0109;
    public static final int material_time_chip=0x7f0d010a;
    public static final int material_time_input=0x7f0d010b;
    public static final int material_timepicker=0x7f0d010c;
    public static final int material_timepicker_dialog=0x7f0d010d;
    public static final int material_timepicker_textinput_display=0x7f0d010e;
    public static final int more_settings_button=0x7f0d010f;
    public static final int mr_cast_dialog=0x7f0d0110;
    public static final int mr_cast_group_item=0x7f0d0111;
    public static final int mr_cast_group_volume_item=0x7f0d0112;
    public static final int mr_cast_header_item=0x7f0d0113;
    public static final int mr_cast_media_metadata=0x7f0d0114;
    public static final int mr_cast_route_item=0x7f0d0115;
    public static final int mr_chooser_dialog=0x7f0d0116;
    public static final int mr_chooser_list_item=0x7f0d0117;
    public static final int mr_controller_material_dialog_b=0x7f0d0118;
    public static final int mr_controller_volume_item=0x7f0d0119;
    public static final int mr_picker_dialog=0x7f0d011a;
    public static final int mr_picker_header_item=0x7f0d011b;
    public static final int mr_picker_route_item=0x7f0d011c;
    public static final int mr_playback_control=0x7f0d011d;
    public static final int mr_volume_control=0x7f0d011e;
    public static final int mtrl_alert_dialog=0x7f0d011f;
    public static final int mtrl_alert_dialog_actions=0x7f0d0120;
    public static final int mtrl_alert_dialog_title=0x7f0d0121;
    public static final int mtrl_alert_select_dialog_item=0x7f0d0122;
    public static final int mtrl_alert_select_dialog_multichoice=0x7f0d0123;
    public static final int mtrl_alert_select_dialog_singlechoice=0x7f0d0124;
    public static final int mtrl_calendar_day=0x7f0d0125;
    public static final int mtrl_calendar_day_of_week=0x7f0d0126;
    public static final int mtrl_calendar_days_of_week=0x7f0d0127;
    public static final int mtrl_calendar_horizontal=0x7f0d0128;
    public static final int mtrl_calendar_month=0x7f0d0129;
    public static final int mtrl_calendar_month_labeled=0x7f0d012a;
    public static final int mtrl_calendar_month_navigation=0x7f0d012b;
    public static final int mtrl_calendar_months=0x7f0d012c;
    public static final int mtrl_calendar_vertical=0x7f0d012d;
    public static final int mtrl_calendar_year=0x7f0d012e;
    public static final int mtrl_layout_snackbar=0x7f0d012f;
    public static final int mtrl_layout_snackbar_include=0x7f0d0130;
    public static final int mtrl_navigation_rail_item=0x7f0d0131;
    public static final int mtrl_picker_actions=0x7f0d0132;
    public static final int mtrl_picker_dialog=0x7f0d0133;
    public static final int mtrl_picker_fullscreen=0x7f0d0134;
    public static final int mtrl_picker_header_dialog=0x7f0d0135;
    public static final int mtrl_picker_header_fullscreen=0x7f0d0136;
    public static final int mtrl_picker_header_selection_text=0x7f0d0137;
    public static final int mtrl_picker_header_title_text=0x7f0d0138;
    public static final int mtrl_picker_header_toggle=0x7f0d0139;
    public static final int mtrl_picker_text_input_date=0x7f0d013a;
    public static final int mtrl_picker_text_input_date_range=0x7f0d013b;
    public static final int network_request_dialog_title=0x7f0d013c;
    public static final int network_reset_disallowed_screen=0x7f0d013d;
    public static final int nfc_detection_point=0x7f0d013e;
    public static final int nfc_payment_empty=0x7f0d013f;
    public static final int nfc_payment_how_it_works=0x7f0d0140;
    public static final int nfc_payment_option=0x7f0d0141;
    public static final int notif_importance_preference=0x7f0d0142;
    public static final int notif_priority_conversation_preference=0x7f0d0143;
    public static final int notification_action=0x7f0d0144;
    public static final int notification_action_tombstone=0x7f0d0145;
    public static final int notification_app=0x7f0d0146;
    public static final int notification_channel_panel=0x7f0d0147;
    public static final int notification_history=0x7f0d0148;
    public static final int notification_history_app_layout=0x7f0d0149;
    public static final int notification_history_log_row=0x7f0d014a;
    public static final int notification_log_row=0x7f0d014b;
    public static final int notification_media_action=0x7f0d014c;
    public static final int notification_media_cancel_action=0x7f0d014d;
    public static final int notification_sbn_log_row=0x7f0d014e;
    public static final int notification_template_big_media=0x7f0d014f;
    public static final int notification_template_big_media_custom=0x7f0d0150;
    public static final int notification_template_big_media_narrow=0x7f0d0151;
    public static final int notification_template_big_media_narrow_custom=0x7f0d0152;
    public static final int notification_template_custom_big=0x7f0d0153;
    public static final int notification_template_icon_group=0x7f0d0154;
    public static final int notification_template_lines_media=0x7f0d0155;
    public static final int notification_template_media=0x7f0d0156;
    public static final int notification_template_media_custom=0x7f0d0157;
    public static final int notification_template_part_chronometer=0x7f0d0158;
    public static final int notification_template_part_time=0x7f0d0159;
    public static final int one_handed_header=0x7f0d015a;
    public static final int ownerinfo=0x7f0d015b;
    public static final int palette_listview_item=0x7f0d015c;
    public static final int panel_layout=0x7f0d015d;
    public static final int panel_slice_list=0x7f0d015e;
    public static final int panel_slice_row=0x7f0d015f;
    public static final int panel_slice_slider_row=0x7f0d0160;
    public static final int partner_customization_layout=0x7f0d0161;
    public static final int password_requirement_item=0x7f0d0162;
    public static final int pick_item=0x7f0d0163;
    public static final int preference=0x7f0d0164;
    public static final int preference_access_point=0x7f0d0165;
    public static final int preference_app=0x7f0d0166;
    public static final int preference_app_restrictions=0x7f0d0167;
    public static final int preference_balance_slider=0x7f0d0168;
    public static final int preference_battery_error=0x7f0d0169;
    public static final int preference_bluetooth_profile_category=0x7f0d016a;
    public static final int preference_category=0x7f0d016b;
    public static final int preference_category_divider=0x7f0d016c;
    public static final int preference_category_material=0x7f0d016d;
    public static final int preference_category_material_settings_with_divider=0x7f0d016e;
    public static final int preference_category_no_label=0x7f0d016f;
    public static final int preference_checkable_two_target=0x7f0d0170;
    public static final int preference_color=0x7f0d0171;
    public static final int preference_companion_app=0x7f0d0172;
    public static final int preference_dialog_edittext=0x7f0d0173;
    public static final int preference_dialog_seekbar_material=0x7f0d0174;
    public static final int preference_dropdown=0x7f0d0175;
    public static final int preference_dropdown_material=0x7f0d0176;
    public static final int preference_empty_list=0x7f0d0177;
    public static final int preference_expand_divider=0x7f0d0178;
    public static final int preference_footer=0x7f0d0179;
    public static final int preference_icon=0x7f0d017a;
    public static final int preference_increasing_ring=0x7f0d017b;
    public static final int preference_information=0x7f0d017c;
    public static final int preference_information_material=0x7f0d017d;
    public static final int preference_labeled_slider=0x7f0d017e;
    public static final int preference_list_fragment=0x7f0d017f;
    public static final int preference_material=0x7f0d0180;
    public static final int preference_multiline_title=0x7f0d0181;
    public static final int preference_progress_category=0x7f0d0182;
    public static final int preference_radio=0x7f0d0183;
    public static final int preference_radio_with_extra_widget=0x7f0d0184;
    public static final int preference_recyclerview=0x7f0d0185;
    public static final int preference_single_target=0x7f0d0186;
    public static final int preference_static_text=0x7f0d0187;
    public static final int preference_two_target=0x7f0d0188;
    public static final int preference_two_target_divider=0x7f0d0189;
    public static final int preference_two_target_radio=0x7f0d018a;
    public static final int preference_usage_progress_bar=0x7f0d018b;
    public static final int preference_volume_slider=0x7f0d018c;
    public static final int preference_widget_add=0x7f0d018d;
    public static final int preference_widget_checkbox=0x7f0d018e;
    public static final int preference_widget_clear=0x7f0d018f;
    public static final int preference_widget_delete=0x7f0d0190;
    public static final int preference_widget_dialog_radiobutton=0x7f0d0191;
    public static final int preference_widget_dialog_summary=0x7f0d0192;
    public static final int preference_widget_gear=0x7f0d0193;
    public static final int preference_widget_gear_no_bg=0x7f0d0194;
    public static final int preference_widget_gear_optional_background=0x7f0d0195;
    public static final int preference_widget_info=0x7f0d0196;
    public static final int preference_widget_main_switch=0x7f0d0197;
    public static final int preference_widget_primary_checkbox=0x7f0d0198;
    public static final int preference_widget_primary_switch=0x7f0d0199;
    public static final int preference_widget_radiobutton=0x7f0d019a;
    public static final int preference_widget_seekbar=0x7f0d019b;
    public static final int preference_widget_seekbar_material=0x7f0d019c;
    public static final int preference_widget_seekbar_settings=0x7f0d019d;
    public static final int preference_widget_summary=0x7f0d019e;
    public static final int preference_widget_switch=0x7f0d019f;
    public static final int preference_widget_switch_compat=0x7f0d01a0;
    public static final int preference_widget_sync_toggle=0x7f0d01a1;
    public static final int preference_widget_two_summary=0x7f0d01a2;
    public static final int preference_widget_warning=0x7f0d01a3;
    public static final int preference_widget_wifi_signal=0x7f0d01a4;
    public static final int preset_picker_item=0x7f0d01a5;
    public static final int preview_seek_bar_view_pager=0x7f0d01a6;
    public static final int print_job_summary=0x7f0d01a7;
    public static final int printer_dropdown_item=0x7f0d01a8;
    public static final int private_dns_mode_dialog=0x7f0d01a9;
    public static final int profile_owner_add=0x7f0d01aa;
    public static final int profile_select_tablayout=0x7f0d01ab;
    public static final int progress_header=0x7f0d01ac;
    public static final int proxy=0x7f0d01ad;
    public static final int radio_list_container=0x7f0d01ae;
    public static final int radio_with_summary=0x7f0d01af;
    public static final int recycler_view=0x7f0d01b0;
    public static final int redaction_interstitial=0x7f0d01b1;
    public static final int regulatory_info=0x7f0d01b2;
    public static final int remember_dock_setting=0x7f0d01b3;
    public static final int remove_account_button=0x7f0d01b4;
    public static final int request_manage_credentials=0x7f0d01b5;
    public static final int request_manage_credentials_header=0x7f0d01b6;
    public static final int reset_esim_checkbox=0x7f0d01b7;
    public static final int reset_importance_button=0x7f0d01b8;
    public static final int reset_network=0x7f0d01b9;
    public static final int reset_network_confirm=0x7f0d01ba;
    public static final int resetting_internet=0x7f0d01bb;
    public static final int restricted_dialog_singlechoice=0x7f0d01bc;
    public static final int restricted_icon=0x7f0d01bd;
    public static final int restricted_popup_menu_item=0x7f0d01be;
    public static final int restricted_preference_dropdown=0x7f0d01bf;
    public static final int restricted_preference_widget_primary_switch=0x7f0d01c0;
    public static final int restricted_radio_with_summary=0x7f0d01c1;
    public static final int restricted_switch_preference=0x7f0d01c2;
    public static final int restricted_switch_widget=0x7f0d01c3;
    public static final int running_processes_header=0x7f0d01c4;
    public static final int running_processes_item=0x7f0d01c5;
    public static final int running_processes_view=0x7f0d01c6;
    public static final int running_service_details=0x7f0d01c7;
    public static final int running_service_details_process=0x7f0d01c8;
    public static final int running_service_details_service=0x7f0d01c9;
    public static final int running_services_app_item=0x7f0d01ca;
    public static final int screen_zoom_activity=0x7f0d01cb;
    public static final int screen_zoom_preview_1=0x7f0d01cc;
    public static final int screen_zoom_preview_2=0x7f0d01cd;
    public static final int screen_zoom_preview_app_icon=0x7f0d01ce;
    public static final int screen_zoom_preview_settings=0x7f0d01cf;
    public static final int search_bar=0x7f0d01d0;
    public static final int search_bar_two_pane_version=0x7f0d01d1;
    public static final int select_account_list_item=0x7f0d01d2;
    public static final int select_dialog_item_material=0x7f0d01d3;
    public static final int select_dialog_multichoice_material=0x7f0d01d4;
    public static final int select_dialog_singlechoice_material=0x7f0d01d5;
    public static final int set_backup_pw=0x7f0d01d6;
    public static final int settings_bar_chart=0x7f0d01d7;
    public static final int settings_bar_view=0x7f0d01d8;
    public static final int settings_base_layout=0x7f0d01d9;
    public static final int settings_dialog_title=0x7f0d01da;
    public static final int settings_entity_header=0x7f0d01db;
    public static final int settings_homepage=0x7f0d01dc;
    public static final int settings_homepage_app_bar_regular_phone_layout=0x7f0d01dd;
    public static final int settings_homepage_app_bar_two_pane_layout=0x7f0d01de;
    public static final int settings_homepage_container=0x7f0d01df;
    public static final int settings_main_prefs=0x7f0d01e0;
    public static final int settings_panel=0x7f0d01e1;
    public static final int settings_spinner_dropdown_view=0x7f0d01e2;
    public static final int settings_spinner_preference=0x7f0d01e3;
    public static final int settings_spinner_view=0x7f0d01e4;
    public static final int settings_summary_preference=0x7f0d01e5;
    public static final int settingslib_action_buttons=0x7f0d01e6;
    public static final int settingslib_banner_message=0x7f0d01e7;
    public static final int settingslib_dropdown_preference=0x7f0d01e8;
    public static final int settingslib_icon_frame=0x7f0d01e9;
    public static final int settingslib_main_switch_bar=0x7f0d01ea;
    public static final int settingslib_main_switch_layout=0x7f0d01eb;
    public static final int settingslib_preference=0x7f0d01ec;
    public static final int setup_choose_lock_generic_biometrics_header=0x7f0d01ed;
    public static final int setup_choose_lock_generic_header=0x7f0d01ee;
    public static final int setup_preference=0x7f0d01ef;
    public static final int setup_screen_lock_fingerprint_details=0x7f0d01f0;
    public static final int shortcut_badge=0x7f0d01f1;
    public static final int shortcut_badge_maskable=0x7f0d01f2;
    public static final int single_button_panel=0x7f0d01f3;
    public static final int slice_preference_layout=0x7f0d01f4;
    public static final int sliding_tab_indicator_view=0x7f0d01f5;
    public static final int sliding_tab_title_view=0x7f0d01f6;
    public static final int space_preference=0x7f0d01f7;
    public static final int spinner_dropdown_restricted_item=0x7f0d01f8;
    public static final int spinner_view=0x7f0d01f9;
    public static final int storage_internal_forget=0x7f0d01fa;
    public static final int storage_internal_format=0x7f0d01fb;
    public static final int storage_internal_unmount=0x7f0d01fc;
    public static final int storage_item=0x7f0d01fd;
    public static final int storage_summary=0x7f0d01fe;
    public static final int storage_wizard_checklist=0x7f0d01ff;
    public static final int storage_wizard_generic=0x7f0d0200;
    public static final int storage_wizard_init=0x7f0d0201;
    public static final int storage_wizard_progress=0x7f0d0202;
    public static final int styled_switch_bar=0x7f0d0203;
    public static final int suc_button=0x7f0d0204;
    public static final int suc_footer_button_bar=0x7f0d0205;
    public static final int sud_button=0x7f0d0206;
    public static final int sud_content_info=0x7f0d0207;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_glif_blank_template=0x7f0d0208;
    public static final int sud_glif_blank_template_card=0x7f0d0209;
    public static final int sud_glif_blank_template_compact=0x7f0d020a;
    public static final int sud_glif_blank_template_content=0x7f0d020b;
    public static final int sud_glif_header=0x7f0d020c;
    public static final int sud_glif_illustration_loading_screen=0x7f0d020d;
    public static final int sud_glif_list_template=0x7f0d020e;
    public static final int sud_glif_list_template_card=0x7f0d020f;
    public static final int sud_glif_list_template_compact=0x7f0d0210;
    public static final int sud_glif_list_template_content=0x7f0d0211;
    public static final int sud_glif_loading_screen=0x7f0d0212;
    public static final int sud_glif_preference_recycler_view=0x7f0d0213;
    public static final int sud_glif_preference_template=0x7f0d0214;
    public static final int sud_glif_preference_template_card=0x7f0d0215;
    public static final int sud_glif_preference_template_compact=0x7f0d0216;
    public static final int sud_glif_preference_template_content=0x7f0d0217;
    public static final int sud_glif_recycler_template=0x7f0d0218;
    public static final int sud_glif_recycler_template_card=0x7f0d0219;
    public static final int sud_glif_recycler_template_compact=0x7f0d021a;
    public static final int sud_glif_recycler_template_content=0x7f0d021b;
    public static final int sud_glif_template=0x7f0d021c;
    public static final int sud_glif_template_card=0x7f0d021d;
    public static final int sud_glif_template_compact=0x7f0d021e;
    public static final int sud_glif_template_content=0x7f0d021f;
    public static final int sud_items_button_bar=0x7f0d0220;
    public static final int sud_items_default=0x7f0d0221;
    public static final int sud_items_description=0x7f0d0222;
    public static final int sud_items_expandable_switch=0x7f0d0223;
    public static final int sud_items_progress_bar=0x7f0d0224;
    public static final int sud_items_switch=0x7f0d0225;
    public static final int sud_items_switch_verbose=0x7f0d0226;
    public static final int sud_items_verbose=0x7f0d0227;
    public static final int sud_list_header=0x7f0d0228;
    public static final int sud_list_template=0x7f0d0229;
    public static final int sud_list_template_card=0x7f0d022a;
    public static final int sud_list_template_card_wide=0x7f0d022b;
    public static final int sud_list_template_header=0x7f0d022c;
    public static final int sud_list_template_header_collapsed=0x7f0d022d;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_list_template_short=0x7f0d022e;
    public static final int sud_navbar_view=0x7f0d022f;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_no_scroll_template=0x7f0d0230;
    public static final int sud_no_scroll_template_card=0x7f0d0231;
    public static final int sud_no_scroll_template_card_wide=0x7f0d0232;
    public static final int sud_no_scroll_template_header=0x7f0d0233;
    public static final int sud_no_scroll_template_header_collapsed=0x7f0d0234;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_no_scroll_template_short=0x7f0d0235;
    public static final int sud_preference_recycler_view=0x7f0d0236;
    public static final int sud_preference_recycler_view_header=0x7f0d0237;
    public static final int sud_preference_recycler_view_normal=0x7f0d0238;
    public static final int sud_preference_template=0x7f0d0239;
    public static final int sud_preference_template_header=0x7f0d023a;
    public static final int sud_progress_bar=0x7f0d023b;
    public static final int sud_progress_bar_stub=0x7f0d023c;
    public static final int sud_progress_illustration_layout=0x7f0d023d;
    public static final int sud_recycler_template=0x7f0d023e;
    public static final int sud_recycler_template_card=0x7f0d023f;
    public static final int sud_recycler_template_card_wide=0x7f0d0240;
    public static final int sud_recycler_template_header=0x7f0d0241;
    public static final int sud_recycler_template_header_collapsed=0x7f0d0242;
    public static final int sud_recycler_template_short=0x7f0d0243;
    public static final int sud_template=0x7f0d0244;
    public static final int sud_template_card=0x7f0d0245;
    public static final int sud_template_card_wide=0x7f0d0246;
    public static final int sud_template_header=0x7f0d0247;
    public static final int sud_template_header_collapsed=0x7f0d0248;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int sud_template_short=0x7f0d0249;
    public static final int support_simple_spinner_dropdown_item=0x7f0d024a;
    public static final int supported_links_dialog_item=0x7f0d024b;
    public static final int suw_font_size_fragment=0x7f0d024c;
    public static final int suw_preview_seek_bar_view_pager=0x7f0d024d;
    public static final int suw_screen_zoom_fragment=0x7f0d024e;
    public static final int switch_bar=0x7f0d024f;
    public static final int tab_widget=0x7f0d0250;
    public static final int test_action_chip=0x7f0d0251;
    public static final int test_chip_zero_corner_radius=0x7f0d0252;
    public static final int test_design_checkbox=0x7f0d0253;
    public static final int test_design_radiobutton=0x7f0d0254;
    public static final int test_navigation_bar_item_layout=0x7f0d0255;
    public static final int test_reflow_chipgroup=0x7f0d0256;
    public static final int test_toolbar=0x7f0d0257;
    public static final int test_toolbar_custom_background=0x7f0d0258;
    public static final int test_toolbar_elevation=0x7f0d0259;
    public static final int test_toolbar_surface=0x7f0d025a;
    public static final int text_description_preference=0x7f0d025b;
    public static final int text_view_with_line_height_from_appearance=0x7f0d025c;
    public static final int text_view_with_line_height_from_layout=0x7f0d025d;
    public static final int text_view_with_line_height_from_style=0x7f0d025e;
    public static final int text_view_with_theme_line_height=0x7f0d025f;
    public static final int text_view_without_line_height=0x7f0d0260;
    public static final int time_zone_list_item=0x7f0d0261;
    public static final int time_zone_search_header=0x7f0d0262;
    public static final int time_zone_search_item=0x7f0d0263;
    public static final int top_intro_preference=0x7f0d0264;
    public static final int trust_agent_item=0x7f0d0265;
    public static final int trusted_credential=0x7f0d0266;
    public static final int trusted_credential_details=0x7f0d0267;
    public static final int trusted_credential_list_container=0x7f0d0268;
    public static final int trusted_credentials=0x7f0d0269;
    public static final int tutorial_dialog_launch_by_gesture_navigation_settings=0x7f0d026a;
    public static final int tutorial_dialog_launch_service_by_accessibility_button=0x7f0d026b;
    public static final int tutorial_dialog_launch_service_by_gesture_navigation=0x7f0d026c;
    public static final int twelve_key_entry=0x7f0d026d;
    public static final int twilight_mode_location_off=0x7f0d026e;
    public static final int two_buttons_panel=0x7f0d026f;
    public static final int two_line_list_item=0x7f0d0270;
    public static final int two_state_button=0x7f0d0271;
    public static final int udfps_enroll_enrolling=0x7f0d0272;
    public static final int udfps_enroll_enrolling_land=0x7f0d0273;
    public static final int udfps_enroll_find_sensor_layout=0x7f0d0274;
    public static final int usage_bottom_label=0x7f0d0275;
    public static final int usage_side_label=0x7f0d0276;
    public static final int usage_stats=0x7f0d0277;
    public static final int usage_stats_item=0x7f0d0278;
    public static final int usage_view=0x7f0d0279;
    public static final int user_creation_progress_dialog=0x7f0d027a;
    public static final int user_credential=0x7f0d027b;
    public static final int user_credential_dialog=0x7f0d027c;
    public static final int user_credential_preference=0x7f0d027d;
    public static final int user_dictionary_add_word=0x7f0d027e;
    public static final int user_dictionary_add_word_fullscreen=0x7f0d027f;
    public static final int user_dictionary_item=0x7f0d0280;
    public static final int user_preference=0x7f0d0281;
    public static final int verified_links_widget=0x7f0d0282;
    public static final int vertical_divider=0x7f0d0283;
    public static final int video_preference=0x7f0d0284;
    public static final int vpn_dialog=0x7f0d0285;
    public static final int vpn_lockdown_editor=0x7f0d0286;
    public static final int wfc_disclaimer_fragment=0x7f0d0287;
    public static final int wfc_simple_disclaimer_item=0x7f0d0288;
    public static final int wifi_add_app_networks=0x7f0d0289;
    public static final int wifi_add_network_view=0x7f0d028a;
    public static final int wifi_api_test=0x7f0d028b;
    public static final int wifi_button_preference_widget=0x7f0d028c;
    public static final int wifi_calling_settings_preferences=0x7f0d028d;
    public static final int wifi_calling_settings_tabs=0x7f0d028e;
    public static final int wifi_config_info=0x7f0d028f;
    public static final int wifi_dialog=0x7f0d0290;
    public static final int wifi_dialog_row=0x7f0d0291;
    public static final int wifi_display_options=0x7f0d0292;
    public static final int wifi_dpp_activity=0x7f0d0293;
    public static final int wifi_dpp_add_device_fragment=0x7f0d0294;
    public static final int wifi_dpp_choose_saved_wifi_network_fragment=0x7f0d0295;
    public static final int wifi_dpp_qrcode_generator_fragment=0x7f0d0296;
    public static final int wifi_dpp_qrcode_scanner_fragment=0x7f0d0297;
    public static final int wifi_network_details_two_buttons_panel=0x7f0d0298;
    public static final int wifi_notify_scan_mode=0x7f0d0299;
    public static final int wifi_settings_scanning_required_view=0x7f0d029a;
    public static final int wifi_setup_custom_list_item_1=0x7f0d029b;
    public static final int wifi_status_test=0x7f0d029c;
    public static final int write_wifi_config_to_nfc=0x7f0d029d;
    public static final int zen_custom_settings_dialog=0x7f0d029e;
    public static final int zen_mode_button=0x7f0d029f;
    public static final int zen_mode_condition=0x7f0d02a0;
    public static final int zen_mode_duration_dialog=0x7f0d02a1;
    public static final int zen_mode_radio_button=0x7f0d02a2;
    public static final int zen_mode_senders_image=0x7f0d02a3;
    public static final int zen_mode_senders_overlay_image=0x7f0d02a4;
    public static final int zen_mode_settings_button=0x7f0d02a5;
    public static final int zen_mode_turn_on_dialog_container=0x7f0d02a6;
    public static final int zen_onboarding=0x7f0d02a7;
    public static final int zen_rule_name=0x7f0d02a8;
    public static final int zen_rule_type=0x7f0d02a9;
    public static final int zen_rule_type_selection=0x7f0d02aa;
    public static final int zen_rule_widget=0x7f0d02ab;
    public static final int zen_schedule_rule_day=0x7f0d02ac;
  }
  public static final class menu {
    public static final int account_settings=0x7f0e0000;
    public static final int home_bottom_navigation=0x7f0e0001;
    public static final int manage_apps=0x7f0e0002;
    public static final int misc_files_menu=0x7f0e0003;
    public static final int print_service_settings=0x7f0e0004;
    public static final int storage_volume=0x7f0e0005;
    public static final int time_zone_base_search_menu=0x7f0e0006;
    public static final int vpn=0x7f0e0007;
    public static final int wifi_setup=0x7f0e0008;
    public static final int zen_mode_rule=0x7f0e0009;
  }
  public static final class plurals {
    public static final int abc_slice_duration_days=0x7f0f0000;
    public static final int abc_slice_duration_min=0x7f0f0001;
    public static final int abc_slice_duration_years=0x7f0f0002;
    /**
     * Summary for the accessibility usage preference in the Privacy page.  [CHAR LIMIT=NONE]
     */
    public static final int accessibility_usage_summary=0x7f0f0003;
    /**
     * Summary for autoclick seekbar settings preference when user selected custom item. [CHAR LIMIT=35]
     */
    public static final int accessibilty_autoclick_delay_unit_second=0x7f0f0004;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_long_delay=0x7f0f0005;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_medium_delay=0x7f0f0006;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_short_delay=0x7f0f0007;
    /**
     * Title and button for supported links dialog.
     */
    public static final int app_launch_supported_links_title=0x7f0f0008;
    public static final int app_launch_verified_links_message=0x7f0f0009;
    /**
     * Title, message and button for verified links dialog.
     */
    public static final int app_launch_verified_links_title=0x7f0f000a;
    /**
     * Summary for allow app to open supported links [CHAR LIMIT=42]
     */
    public static final int app_link_open_always_summary=0x7f0f000b;
    /**
     * [CHAR LIMIT=45] App notification listing summary, blocked apps
     */
    public static final int app_notification_listing_summary_others=0x7f0f000c;
    /**
     * Summary for passwords settings that shows how many passwords are saved for each autofill
     * service. [CHAR LIMIT=NONE]
     */
    public static final int autofill_passwords_count=0x7f0f000d;
    /**
     * Summary for battery manager, showing app restricted
     */
    public static final int battery_manager_app_restricted=0x7f0f000e;
    /**
     * Title for dialog to restrict the app [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_app_dialog_title=0x7f0f000f;
    /**
     * Summary for restricted app preference, showing the impact of the apps [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_handled_summary=0x7f0f0010;
    /**
     * Title for restricted app preference, showing how many app been restricted [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_handled_title=0x7f0f0011;
    /**
     * Summary for restricted app preference, showing the impact of the apps [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_summary=0x7f0f0012;
    /**
     * Title for restricted app preference, showing how many app need to be restricted [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_title=0x7f0f0013;
    /**
     * Informational text about time left in billing cycle [CHAR LIMIT=60]
     */
    public static final int billing_cycle_days_left=0x7f0f0014;
    /**
     * Description of number of apps allowed to ignore Data Saver [CHAR LIMIT=NONE]
     */
    public static final int data_saver_unrestricted_summary=0x7f0f0015;
    /**
     * Title for the apps that have been set as default handlers of camera-related intents. [CHAR LIMIT=30]
     */
    public static final int default_camera_app_title=0x7f0f0016;
    /**
     * Title for the apps that have been set as default handlers of new email intents. [CHAR LIMIT=30]
     */
    public static final int default_email_app_title=0x7f0f0017;
    /**
     * Title for the apps that have been set as default handlers of call-related intents. [CHAR LIMIT=30]
     */
    public static final int default_phone_app_title=0x7f0f0018;
    /**
     * [CHAR LIMIT=NONE] Footer listing a count of deleted channels.
     */
    public static final int deleted_channels=0x7f0f0019;
    /**
     * The title of the confirmation dialog shown when the user selects one / several languages and tries to remove them [CHAR LIMIT=60]
     */
    public static final int dlg_remove_locales_title=0x7f0f001a;
    /**
     * Summary of open web links settings when at least one app can open supported links [CHAR LIMIT=NONE]
     */
    public static final int domain_urls_apps_summary_on=0x7f0f001b;
    /**
     * Summary indicating the number of trusted CA certificates installed by the admin. The number shown is a minimum as there may be additional CA certificates we do not know about. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_ca_certs=0x7f0f001c;
    /**
     * Summary indicating the number of mistyped passwords after which the device or work profile wipes itself. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_failed_password_wipe=0x7f0f001d;
    /**
     * Summary indicating the number of apps that a label (e.g. installed apps or apps granted a particular permission) refers to. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_packages=0x7f0f001e;
    /**
     * Summary indicating the number of apps that a label (e.g. installed apps or apps granted a particular permission) refers to. The number shown is a minimum as there may be additional apps we do not know about. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_packages_lower_bound=0x7f0f001f;
    /**
     * Time in hours
     */
    public static final int hours=0x7f0f0020;
    /**
     * Summary of preference to manage connected work and personal apps, informing the user how many apps are connected
     */
    public static final int interact_across_profiles_number_of_connected_apps=0x7f0f0021;
    /**
     * Summary for Location settings when location is on, explaining how many apps have location
     * permission.
     * Please note that the distinction between singular and plural of this sentence only depends on
     * the quantity of "permitted_location_app_count" ("has" vs "have"). The quantity of
     * "total_location_app_count" is almost always greater than 1, so "apps" is always in plural form.
     * [CHAR LIMIT=NONE]
     */
    public static final int location_app_permission_summary_location_on=0x7f0f0022;
    /**
     * Summary for Location settings when location is on, explaining how many apps have location permission [CHAR LIMIT=NONE]
     */
    public static final int location_settings_summary_location_on=0x7f0f0023;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of letters
     */
    public static final int lockpassword_password_requires_letters=0x7f0f0024;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of lowercase letters
     */
    public static final int lockpassword_password_requires_lowercase=0x7f0f0025;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of non-letter characters
     */
    public static final int lockpassword_password_requires_nonletter=0x7f0f0026;
    public static final int lockpassword_password_requires_nonnumerical=0x7f0f0027;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of numerical digits
     */
    public static final int lockpassword_password_requires_numeric=0x7f0f0028;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of special symbols
     */
    public static final int lockpassword_password_requires_symbols=0x7f0f0029;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of uppercase letters
     */
    public static final int lockpassword_password_requires_uppercase=0x7f0f002a;
    /**
     * Error shown in popup when password is too long
     */
    public static final int lockpassword_password_too_long=0x7f0f002b;
    /**
     * Hint shown in dialog screen when password is too short
     */
    public static final int lockpassword_password_too_short=0x7f0f002c;
    /**
     * Error shown in popup when PIN is too long
     */
    public static final int lockpassword_pin_too_long=0x7f0f002d;
    /**
     * Hint shown in dialog screen when PIN is too short
     */
    public static final int lockpassword_pin_too_short=0x7f0f002e;
    /**
     * Summary of preference to manage notification listeners, when one or more are enabled
     * and are therefore able to read the user's notifications
     */
    public static final int manage_notification_access_summary_nonzero=0x7f0f002f;
    /**
     * Summary of preference to manage device policies when there is trust agent
     */
    public static final int manage_trust_agents_summary_on=0x7f0f0030;
    /**
     * Description of number of apps using memory [CHAR LIMIT=NONE]
     */
    public static final int memory_usage_apps_summary=0x7f0f0031;
    /**
     * Time in minutes
     */
    public static final int minutes=0x7f0f0032;
    /**
     * Summary of the 'Mobile network' item on the Network & internet page when there is more than
     * one mobile service configured (aka "dual SIM") - it shows a count of SIM/eSIM and tapping
     * it leads to a page showing a list of the mobile service subscriptions. [CHAR LIMIT=40]
     */
    public static final int mobile_network_summary_count=0x7f0f0033;
    public static final int mtrl_badge_content_description=0x7f0f0034;
    /**
     * Summary showing how many networks restrictions [CHAR LIMIT=NONE]
     */
    public static final int network_restrictions_summary=0x7f0f0035;
    /**
     * [CHAR LIMIT=45] App notification settings, group summary
     */
    public static final int notification_group_summary=0x7f0f0036;
    /**
     * app summary of notification app list screen [CHAR LIMIT=100]
     */
    public static final int notification_history_count=0x7f0f0037;
    /**
     * Summary of notifications [CHAR LIMIT=NONE]
     */
    public static final int notification_summary=0x7f0f0038;
    /**
     * Permissions preference summary [CHAR LIMIT=40]
     */
    public static final int notifications_categories_off=0x7f0f0039;
    /**
     * app summary of notification app list screen [CHAR LIMIT=100]
     */
    public static final int notifications_sent_daily=0x7f0f003a;
    public static final int notifications_sent_weekly=0x7f0f003b;
    /**
     * Summary of preference to manage device admin apps, informing the user how many device admin apps are installed and active
     */
    public static final int number_of_device_admins=0x7f0f003c;
    /**
     * List item found in the credential management app's authentication policy [CHAR LIMIT=NONE]
     */
    public static final int number_of_urls=0x7f0f003d;
    public static final int permission_bar_chart_label=0x7f0f003e;
    /**
     * Permissions preference summary [CHAR LIMIT=40]
     */
    public static final int permissions_summary=0x7f0f003f;
    /**
     * Summary for high usage item, showing app/apps are behaving abnormally [CHAR LIMIT=80]
     */
    public static final int power_high_usage_summary=0x7f0f0040;
    /**
     * Title for high usage item, showing app/apps are draining battery [CHAR LIMIT=80]
     */
    public static final int power_high_usage_title=0x7f0f0041;
    /**
     * Print setting summary in settings screenm indicating how many print jobs are active [CHAR LIMIT=None]
     */
    public static final int print_jobs_summary=0x7f0f0042;
    /**
     * Print setting summary in settings screen [CHAR LIMIT=50]
     */
    public static final int print_settings_summary=0x7f0f0043;
    /**
     * [CHAR LIMIT=100] summary text on link to 'all conversations' page, some conversations are priority
     */
    public static final int priority_conversation_count=0x7f0f0044;
    /**
     * Summary for restricted app preference, clicking it will goes to restricted app list [CHAR LIMIT=NONE]
     */
    public static final int restricted_app_summary=0x7f0f0045;
    /**
     * Runtime permissions preference summary.  Number of additional permissions granted. [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_additional_count=0x7f0f0046;
    /**
     * Runtime permissions preference summary [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_summary=0x7f0f0047;
    /**
     * Time in seconds
     */
    public static final int seconds=0x7f0f0048;
    /**
     * Message showing the current number of fingerprints set up. Shown for a menu item that launches fingerprint settings or enrollment.
     */
    public static final int security_settings_fingerprint_preference_summary=0x7f0f0049;
    /**
     * Preference title for showing all apps on device [CHAR_LIMIT=50]
     */
    public static final int see_all_apps_title=0x7f0f004a;
    /**
     * Text to describe the items to be expanded as suggested settings [CHAR LIMIT=none]
     */
    public static final int settings_suggestion_header_summary_hidden_items=0x7f0f004b;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings
     */
    public static final int show_dev_countdown=0x7f0f004c;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings
     */
    public static final int show_dev_countdown_cm=0x7f0f004d;
    /**
     * Summary for the accessibility preference for hearing aid when there are saved devices. [CHAR LIMIT=50]
     */
    public static final int show_number_hearingaid_count=0x7f0f004e;
    /**
     * Summary for special access settings [CHAR_LIMIT=NONE]
     */
    public static final int special_access_summary=0x7f0f004f;
    /**
     * Title of Dialog warning users of SSL monitoring. [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_dialog_title=0x7f0f0050;
    /**
     * Text of message to show to work profile users whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_info_message=0x7f0f0051;
    /**
     * Text of message to show to device owner user whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_info_message_device_owner=0x7f0f0052;
    /**
     * Label on button that will take the user to the Trusted Credentials settings page.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_settings_button=0x7f0f0053;
    /**
     * Summary for the collapsed suggestions section on the dashboard, representing number of suggestions. [CHAR LIMIT=30]
     */
    public static final int suggestions_collapsed_summary=0x7f0f0054;
    /**
     * Title for the collapsed suggestions section on the dashboard, representing number of suggestions. [CHAR LIMIT=30]
     */
    public static final int suggestions_collapsed_title=0x7f0f0055;
    /**
     * Summary of number of apps that have not been used for months. [CHAR LIMIT=40]
     */
    public static final int unused_apps_summary=0x7f0f0056;
    /**
     * Manage applications, individual application info storage screen. Describes the number of URIs (directories or files) an app has been granted access (by another apps)
     */
    public static final int uri_permissions_text=0x7f0f0057;
    /**
     * Wi-Fi settings screen, Saved networks summary.  This shows below the "Saved networks" item and indicates the number of networks, not including passpoint network, a user has saved. [CHAR LIMIT=30]
     */
    public static final int wifi_saved_access_points_summary=0x7f0f0058;
    /**
     * Wi-Fi settings screen, Saved networks summary.  This shows below the "Saved networks" item and indicates number of whole kinds networks, if there are both normal saved networks and saved passpoint networks. The number will be at least 2, so the one case is only to prevent lint error. [CHAR LIMIT=60]
     */
    public static final int wifi_saved_all_access_points_summary=0x7f0f0059;
    /**
     * Wi-Fi settings screen, Saved networks summary.  This shows below the "Saved networks" item and indicates the number of passpoint networks a user has saved. [CHAR LIMIT=30]
     */
    public static final int wifi_saved_passpoint_access_points_summary=0x7f0f005a;
    /**
     * Summary to show how many devices are connected in wifi hotspot [CHAR LIMIT=NONE]
     */
    public static final int wifi_tether_connected_summary=0x7f0f005b;
    /**
     * Instructions telling the user that they entered the wrong SIM PIN while trying to unlock the keyguard.  Displayed in a dialog box.  [CHAR LIMIT=100]
     */
    public static final int wrong_pin_code=0x7f0f005c;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for N hours.
     */
    public static final int zen_mode_summary_alarms_only_by_hour=0x7f0f005d;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for < 60 minutes.
     */
    public static final int zen_mode_summary_alarms_only_by_minute=0x7f0f005e;
  }
  public static final class raw {
    public static final int aab_brightness=0x7f100000;
    public static final int accessibility_color_inversion_banner=0x7f100001;
    public static final int accessibility_magnification_banner=0x7f100002;
    public static final int accessibility_screen_magnification=0x7f100003;
    public static final int accessibility_shortcut_type_triple_tap=0x7f100004;
    public static final int accessibility_timeout_banner=0x7f100005;
    public static final int adaptive_sleep=0x7f100006;
    public static final int auto_awesome_battery=0x7f100007;
    public static final int auto_awesome_battery_lottie=0x7f100008;
    public static final int bubble_notification_animation=0x7f100009;
    public static final int extra_dim_banner=0x7f10000a;
    public static final int face_education=0x7f10000b;
    public static final int face_education_lottie=0x7f10000c;
    public static final int face_enroll_introduction_animation=0x7f10000d;
    public static final int face_settings=0x7f10000e;
    public static final int fingerprint_location_animation=0x7f10000f;
    public static final int gesture_ambient_lift=0x7f100010;
    public static final int gesture_ambient_tap=0x7f100011;
    public static final int gesture_ambient_tap_screen=0x7f100012;
    public static final int gesture_ambient_wake_lock_screen=0x7f100013;
    public static final int gesture_ambient_wake_screen=0x7f100014;
    public static final int gesture_assist=0x7f100015;
    public static final int gesture_double_tap=0x7f100016;
    public static final int gesture_fingerprint_swipe=0x7f100017;
    public static final int gesture_global_actions_panel=0x7f100018;
    public static final int gesture_prevent_ringing=0x7f100019;
    public static final int gesture_twist=0x7f10001a;
    public static final int lottie_adaptive_battery=0x7f10001b;
    public static final int lottie_adaptive_brightness=0x7f10001c;
    public static final int lottie_bubbles=0x7f10001d;
    public static final int lottie_lift_to_check_phone=0x7f10001e;
    public static final int lottie_one_hand_mode=0x7f10001f;
    public static final int lottie_power_menu=0x7f100020;
    public static final int lottie_prevent_ringing=0x7f100021;
    public static final int lottie_swipe_fingerprint=0x7f100022;
    public static final int lottie_swipe_for_notifications=0x7f100023;
    public static final int lottie_system_nav_2_button=0x7f100024;
    public static final int lottie_system_nav_3_button=0x7f100025;
    public static final int lottie_system_nav_fully_gestural=0x7f100026;
    public static final int lottie_tap_to_check_phone=0x7f100027;
    public static final int media_volume=0x7f100028;
    public static final int notification_interruption_model=0x7f100029;
    public static final int system_nav_2_button=0x7f10002a;
    public static final int system_nav_3_button=0x7f10002b;
    public static final int system_nav_fully_gestural=0x7f10002c;
    public static final int udfps_edge_hint_lottie=0x7f10002d;
    public static final int udfps_edu_a11y_lottie=0x7f10002e;
    public static final int udfps_edu_lottie=0x7f10002f;
    public static final int udfps_tip_hint_lottie=0x7f100030;
  }
  public static final class string {
    /**
     * Main Settings screen setting option title for the item to take you to the Accounts screen [CHAR LIMIT=22]
     */
    public static final int Accounts_settings_title=0x7f110000;
    public static final int abc_action_bar_home_description=0x7f110001;
    public static final int abc_action_bar_up_description=0x7f110002;
    public static final int abc_action_menu_overflow_description=0x7f110003;
    public static final int abc_action_mode_done=0x7f110004;
    public static final int abc_activity_chooser_view_see_all=0x7f110005;
    public static final int abc_activitychooserview_choose_application=0x7f110006;
    public static final int abc_capital_off=0x7f110007;
    public static final int abc_capital_on=0x7f110008;
    public static final int abc_menu_alt_shortcut_label=0x7f110009;
    public static final int abc_menu_ctrl_shortcut_label=0x7f11000a;
    public static final int abc_menu_delete_shortcut_label=0x7f11000b;
    public static final int abc_menu_enter_shortcut_label=0x7f11000c;
    public static final int abc_menu_function_shortcut_label=0x7f11000d;
    public static final int abc_menu_meta_shortcut_label=0x7f11000e;
    public static final int abc_menu_shift_shortcut_label=0x7f11000f;
    public static final int abc_menu_space_shortcut_label=0x7f110010;
    public static final int abc_menu_sym_shortcut_label=0x7f110011;
    public static final int abc_prepend_shortcut_label=0x7f110012;
    public static final int abc_search_hint=0x7f110013;
    public static final int abc_searchview_description_clear=0x7f110014;
    public static final int abc_searchview_description_query=0x7f110015;
    public static final int abc_searchview_description_search=0x7f110016;
    public static final int abc_searchview_description_submit=0x7f110017;
    public static final int abc_searchview_description_voice=0x7f110018;
    public static final int abc_shareactionprovider_share_with=0x7f110019;
    public static final int abc_shareactionprovider_share_with_application=0x7f11001a;
    public static final int abc_slice_error=0x7f11001b;
    public static final int abc_slice_more=0x7f11001c;
    public static final int abc_slice_more_content=0x7f11001d;
    public static final int abc_slice_permission_allow=0x7f11001e;
    public static final int abc_slice_permission_checkbox=0x7f11001f;
    public static final int abc_slice_permission_deny=0x7f110020;
    public static final int abc_slice_permission_text_1=0x7f110021;
    public static final int abc_slice_permission_text_2=0x7f110022;
    public static final int abc_slice_permission_title=0x7f110023;
    public static final int abc_slice_show_more=0x7f110024;
    public static final int abc_slice_updated=0x7f110025;
    public static final int abc_slices_permission_request=0x7f110026;
    public static final int abc_toolbar_collapse_description=0x7f110027;
    /**
     * Warning text about the visibility of device name. [CHAR LIMIT=NONE]
     */
    public static final int about_phone_device_name_warning=0x7f110028;
    /**
     * Main settings screen, setting title for the user to go into the About phone screen
     */
    public static final int about_settings=0x7f110029;
    /**
     * Main settings screen, setting summary for the user to go into the About phone screen
     */
    public static final int about_settings_summary=0x7f11002a;
    /**
     * Sound & display settings screen, accelerometer-based rotation summary text when check box is clear
     */
    public static final int accelerometer_summary_off=0x7f11002b;
    /**
     * Sound & display settings screen, accelerometer-based rotation summary text when check box is selected
     */
    public static final int accelerometer_summary_on=0x7f11002c;
    /**
     * Sound & display settings screen, accelerometer-based rotation check box label
     */
    public static final int accelerometer_title=0x7f11002d;
    /**
     * Access point names title.  [CHAR LIMIT=50]
     */
    public static final int access_point_names=0x7f11002e;
    /**
     * Title for the accessibility audio adjustment page. [CHAR LIMIT=50]
     */
    public static final int accessibility_audio_adjustment_title=0x7f11002f;
    /**
     * Title for accessibility dwell timing footer. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_autoclick_about_title=0x7f110030;
    /**
     * Option heading to leave the auto click requirement for accessibility users at its custom level. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_custom_title=0x7f110031;
    /**
     * Option heading to leave the auto click requirement for accessibility users at its default level. [CHAR LIMIT=50]
     */
    public static final int accessibility_autoclick_default_title=0x7f110032;
    /**
     * Footer text to explain what autoclick does
     */
    public static final int accessibility_autoclick_description=0x7f110033;
    /**
     * Accessibility dwell timing footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_autoclick_footer_learn_more_content_description=0x7f110034;
    /**
     * Option summary text for the auto click delay 1 second radio button. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_long_summary=0x7f110035;
    /**
     * Option heading to leave the auto click requirement for accessibility users at its long level. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_long_title=0x7f110036;
    /**
     * Description for the button that longer auto click time. [CHAR_LIMIT=NONE]
     */
    public static final int accessibility_autoclick_longer_desc=0x7f110037;
    /**
     * Option summary text for the auto click delay 0.6 seconds radio button. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_medium_summary=0x7f110038;
    /**
     * Option heading to leave the auto click requirement for accessibility users at its medium level. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_medium_title=0x7f110039;
    /**
     * Title for accessibility preference for configuring feature that performs click action soon after mouse/trackpad pointer stops moving. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_autoclick_preference_title=0x7f11003a;
    /**
     * Description for the seekbar that adjust auto click time. [CHAR_LIMIT=NONE]
     */
    public static final int accessibility_autoclick_seekbar_desc=0x7f11003b;
    /**
     * Option summary text for the auto click delay 0.2 seconds radio button. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_short_summary=0x7f11003c;
    /**
     * Option heading to leave the auto click requirement for accessibility users at its short level. [CHAR LIMIT=35]
     */
    public static final int accessibility_autoclick_short_title=0x7f11003d;
    /**
     * Description for the button that shorter auto click time. [CHAR_LIMIT=NONE]
     */
    public static final int accessibility_autoclick_shorter_desc=0x7f11003e;
    /**
     * Content description of the dismiss button on a banner message for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_banner_message_dismiss=0x7f11003f;
    /**
     * Title for the accessibility button footer. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_about_title=0x7f110040;
    /**
     * Description for the accessibility button page. Explain how this page works. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_button_description=0x7f110041;
    /**
     * Summary for the fade of the accessibility button. [CHAR LIMIT=80]
     */
    public static final int accessibility_button_fade_summary=0x7f110042;
    /**
     * Title for the fade of the accessibility button. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_fade_title=0x7f110043;
    /**
     * Title for the accessibility button & gesture footer. [CHAR LIMIT=55]
     */
    public static final int accessibility_button_gesture_about_title=0x7f110044;
    /**
     * Description for the accessibility button in gesture navigation. Explain how this page works. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_button_gesture_description=0x7f110045;
    /**
     * Accessibility button & gestures footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_button_gesture_footer_learn_more_content_description=0x7f110046;
    /**
     * Title for the accessibility button & gesture page. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_gesture_title=0x7f110047;
    /**
     * Label on the right side of transparency adjustment slider [CHAR LIMIT=30]
     */
    public static final int accessibility_button_high_label=0x7f110048;
    /**
     * Intro for the accessibility button page. [CHAR LIMIT=100]
     */
    public static final int accessibility_button_intro=0x7f110049;
    /**
     * Title for the location of the accessibility button. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_location_title=0x7f11004a;
    /**
     * Label on the left side of transparency adjustment slider [CHAR LIMIT=30]
     */
    public static final int accessibility_button_low_label=0x7f11004b;
    /**
     * Title for the transparency of the accessibility button. Will become fade when not interact with the accessibility button. [CHAR LIMIT=40]
     */
    public static final int accessibility_button_opacity_title=0x7f11004c;
    /**
     * Title for the button or gesture of the accessibility button. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_or_gesture_title=0x7f11004d;
    /**
     * Title for the size of the accessibility button. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_size_title=0x7f11004e;
    /**
     * Summary text for the accessibility button preference. [CHAR LIMIT=50]
     */
    public static final int accessibility_button_summary=0x7f11004f;
    /**
     * Title for the accessibility button page. [CHAR LIMIT=35]
     */
    public static final int accessibility_button_title=0x7f110050;
    /**
     * Used in the Captions preference to tell users that the setting doesn't support all apps. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_caption_preference_summary=0x7f110051;
    /**
     * Summary for Captions settings screen to control turning on/off the feature entirely [CHAR LIMIT=NONE]
     */
    public static final int accessibility_caption_primary_switch_summary=0x7f110052;
    /**
     * Title for Captions settings screen to control turning on/off the feature entirely [CHAR LIMIT=60]
     */
    public static final int accessibility_caption_primary_switch_title=0x7f110053;
    /**
     * Title for accessibility captioning footer. [CHAR LIMIT=60]
     */
    public static final int accessibility_captioning_about_title=0x7f110054;
    /**
     * Accessibility captioning footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_captioning_footer_learn_more_content_description=0x7f110055;
    /**
     * Title for the accessibility preference screen to enable video captioning. [CHAR LIMIT=35]
     */
    public static final int accessibility_captioning_title=0x7f110056;
    /**
     * Content description for personal profile accounts group [CHAR LIMIT=NONE]
     */
    public static final int accessibility_category_personal=0x7f110057;
    /**
     * Content description for work profile accounts group [CHAR LIMIT=NONE]
     */
    public static final int accessibility_category_work=0x7f110058;
    /**
     * Title for Color inversion footer. [CHAR LIMIT=35]
     */
    public static final int accessibility_color_inversion_about_title=0x7f110059;
    /**
     * Color correction footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_color_inversion_footer_learn_more_content_description=0x7f11005a;
    /**
     * Title for accessibility timeout footer. [CHAR LIMIT=65]
     */
    public static final int accessibility_control_timeout_about_title=0x7f11005b;
    /**
     * Accessibility timeout footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_control_timeout_footer_learn_more_content_description=0x7f11005c;
    /**
     * Descriptive text for accessibility preference to accessibility control timeout. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_control_timeout_preference_summary=0x7f11005d;
    /**
     * Title for accessibility preference to accessibility timeout. [CHAR LIMIT=35]
     */
    public static final int accessibility_control_timeout_preference_title=0x7f11005e;
    /**
     * Title for Color correction footer. [CHAR LIMIT=35]
     */
    public static final int accessibility_daltonizer_about_title=0x7f11005f;
    /**
     * Color inversion footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_daltonizer_footer_learn_more_content_description=0x7f110060;
    /**
     * Used in the Color correction settings screen to control turning on/off the feature entirely [CHAR LIMIT=60]
     */
    public static final int accessibility_daltonizer_primary_switch_title=0x7f110061;
    /**
     * Title for accessibility shortcut preference for color correction. [CHAR LIMIT=60]
     */
    public static final int accessibility_daltonizer_shortcut_title=0x7f110062;
    /**
     * Content description of the data signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_data_one_bar=0x7f110063;
    /**
     * Content description of the data signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_data_signal_full=0x7f110064;
    /**
     * Content description of the data signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_data_three_bars=0x7f110065;
    /**
     * Content description of the data signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_data_two_bars=0x7f110066;
    /**
     * Accessibility service's description when enabled but not running (like maybe it crashed).
     */
    public static final int accessibility_description_state_stopped=0x7f110067;
    /**
     * String for the allow button in accessibility permission dialog. [CHAR LIMIT=10]
     */
    public static final int accessibility_dialog_button_allow=0x7f110068;
    /**
     * String for the deny button in accessibility permission dialog. [CHAR LIMIT=10]
     */
    public static final int accessibility_dialog_button_cancel=0x7f110069;
    /**
     * String for the deny button in accessibility permission dialog. [CHAR LIMIT=10]
     */
    public static final int accessibility_dialog_button_deny=0x7f11006a;
    /**
     * String for the allow button in accessibility permission dialog. [CHAR LIMIT=10]
     */
    public static final int accessibility_dialog_button_stop=0x7f11006b;
    /**
     * Title for the accessibility preference for disabling animations. [CHAR LIMIT=35]
     */
    public static final int accessibility_disable_animations=0x7f11006c;
    /**
     * Subtitle for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_daltonizer_preference_subtitle=0x7f11006d;
    /**
     * Title for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_daltonizer_preference_title=0x7f11006e;
    /**
     * Subtitle for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_inversion_preference_subtitle=0x7f11006f;
    /**
     * Title for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_inversion_preference_title=0x7f110070;
    /**
     * Title for accessibility shortcut preference for color inversion. [CHAR LIMIT=60]
     */
    public static final int accessibility_display_inversion_shortcut_title=0x7f110071;
    /**
     * Used in the accessibility service settings to control turning display color inversion on/off entirely. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_inversion_switch_title=0x7f110072;
    /**
     * Content description of the Ethernet connection when connected for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_ethernet_connected=0x7f110073;
    /**
     * Content description of the Ethernet connection when disconnected for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_ethernet_disconnected=0x7f110074;
    /**
     * Summary for the disabled state of an accessibility feature. [CHAR LIMIT=10]
     */
    public static final int accessibility_feature_state_off=0x7f110075;
    /**
     * Summary for the enabled state of an accessibility feature. [CHAR LIMIT=10]
     */
    public static final int accessibility_feature_state_on=0x7f110076;
    /**
     * Title for the preference to configure the accessibility shortcut, which uses the volume keys. [CHAR LIMIT=35]
     */
    public static final int accessibility_global_gesture_preference_title=0x7f110077;
    /**
     * Summary for the accessibility preference for hearing aid when there is an active device. [CHAR LIMIT=50]
     */
    public static final int accessibility_hearingaid_active_device_summary=0x7f110078;
    /**
     * Summary for the accessibility preference for hearing aid when adding new devices. [CHAR LIMIT=50]
     */
    public static final int accessibility_hearingaid_adding_summary=0x7f110079;
    /**
     * Button text for the accessibility dialog continue to the next screen for hearing aid. [CHAR LIMIT=32]
     */
    public static final int accessibility_hearingaid_instruction_continue_button=0x7f11007a;
    /**
     * Summary for the accessibility preference for hearing aid when not connected. [CHAR LIMIT=50]
     */
    public static final int accessibility_hearingaid_not_connected_summary=0x7f11007b;
    /**
     * Message to ask the user to make sure that their hearing aid devices are in pairing mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_hearingaid_pair_instructions_message=0x7f11007c;
    /**
     * Title for the accessibility preference for hearing aid. [CHAR LIMIT=35]
     */
    public static final int accessibility_hearingaid_title=0x7f11007d;
    /**
     * Title for the footer text to explain what accessibility service does. [CHAR LIMIT=35]
     */
    public static final int accessibility_introduction_title=0x7f11007e;
    /**
     * Number of characters used for lock screen text [CHAR LIMIT=NONE]
     */
    public static final int accessibility_lock_screen_progress=0x7f11007f;
    /**
     * Title for accessibility preference to choose long-press delay i.e. timeout before it is detected. [CHAR LIMIT=35]
     */
    public static final int accessibility_long_press_timeout_preference_title=0x7f110080;
    /**
     * Summary for the accessibility preference screen to edit full and partial screen. [CHAR LIMIT=none]
     */
    public static final int accessibility_magnification_area_settings_all_summary=0x7f110081;
    /**
     * Summary for the accessibility preference screen to edit full screen. [CHAR LIMIT=none]
     */
    public static final int accessibility_magnification_area_settings_full_screen_summary=0x7f110082;
    /**
     * Message for the accessibility preference screen to edit magnification area dialog. [CHAR LIMIT=none]
     */
    public static final int accessibility_magnification_area_settings_message=0x7f110083;
    /**
     * Message of the magnification mode option to choose the magnification mode. [CHAR LIMIT=none]
     */
    public static final int accessibility_magnification_area_settings_mode_switch_summary=0x7f110084;
    /**
     * Summary for the accessibility preference screen to edit partial screen. [CHAR LIMIT=none]
     */
    public static final int accessibility_magnification_area_settings_window_screen_summary=0x7f110085;
    /**
     * Option title of full-screen magnification mode in the mode selection dialog. [CHAR LIMIT=50]
     */
    public static final int accessibility_magnification_mode_dialog_option_full_screen=0x7f110086;
    /**
     * Option title of full magnification mode in the mode selection dialog. [CHAR LIMIT=50]
     */
    public static final int accessibility_magnification_mode_dialog_option_switch=0x7f110087;
    /**
     * Option title of window magnification mode in the mode selection dialog. [CHAR LIMIT=50]
     */
    public static final int accessibility_magnification_mode_dialog_option_window=0x7f110088;
    /**
     * dialog title for magnification mode  selection. [CHAR LIMIT=35]
     */
    public static final int accessibility_magnification_mode_dialog_title=0x7f110089;
    /**
     * Title for the accessibility preference screen to edit magnification area. [CHAR LIMIT=35]
     */
    public static final int accessibility_magnification_mode_title=0x7f11008a;
    /**
     * Title for the accessibility preference screen to enable screen magnification settings. [CHAR LIMIT=35]
     */
    public static final int accessibility_magnification_service_settings_title=0x7f11008b;
    /**
     * Message for the accessibility magnification switch shortcut dialog. [CHAR LIMIT=none]
     */
    public static final int accessibility_magnification_switch_shortcut_message=0x7f11008c;
    /**
     * Title for the cancel button in accessibility switch shortcut dialog to keep the config shortcut value. [CHAR LIMIT=54]
     */
    public static final int accessibility_magnification_switch_shortcut_negative_button=0x7f11008d;
    /**
     * Title for the switch shortcut button in accessibility switch shortcut dialog to change the config shortcut value. [CHAR LIMIT=45]
     */
    public static final int accessibility_magnification_switch_shortcut_positive_button=0x7f11008e;
    /**
     * Title for the accessibility magnification switch shortcut dialog. [CHAR LIMIT=48]
     */
    public static final int accessibility_magnification_switch_shortcut_title=0x7f11008f;
    /**
     * Content description of zen mode time condition minus button (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_manual_zen_less_time=0x7f110090;
    /**
     * Content description of zen mode time condition plus button (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_manual_zen_more_time=0x7f110091;
    /**
     * Title for accessibility menu item to launch a settings activity. [CHAR LIMIT=15]
     */
    public static final int accessibility_menu_item_settings=0x7f110092;
    /**
     * Content description of the no calling for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_no_calling=0x7f110093;
    /**
     * Content description of the data signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_no_data=0x7f110094;
    /**
     * Content description of the phone signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_no_phone=0x7f110095;
    /**
     * Title for the accessibility shortcut's summary if no service is selected for use with the shortcut. [CHAR LIMIT=50]
     */
    public static final int accessibility_no_service_selected=0x7f110096;
    /**
     * Title for the prompt shown as a placeholder if no accessibility services are installed. [CHAR LIMIT=50]
     */
    public static final int accessibility_no_services_installed=0x7f110097;
    /**
     * Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_no_wifi=0x7f110098;
    /**
     * Title for accessibility preference for configuring notification vibrations.
     */
    public static final int accessibility_notification_vibration_title=0x7f110099;
    /**
     * Content description for personal profile details page title [CHAR LIMIT=NONE]
     */
    public static final int accessibility_personal_account_title=0x7f11009a;
    /**
     * Content description of the phone signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_phone_one_bar=0x7f11009b;
    /**
     * Content description of the phone signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_phone_signal_full=0x7f11009c;
    /**
     * Content description of the phone signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_phone_three_bars=0x7f11009d;
    /**
     * Content description of the phone signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_phone_two_bars=0x7f11009e;
    /**
     * Title for the accessibility preference to power button to end a call. [CHAR LIMIT=35]
     */
    public static final int accessibility_power_button_ends_call_prerefence_title=0x7f11009f;
    /**
     * Summary for the accessibility preference to enable screen magnification. [CHAR LIMIT=25]
     */
    public static final int accessibility_preference_magnification_summary=0x7f1100a0;
    /**
     * Title for accessibility preference for configuring ring vibrations. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_ring_vibration_title=0x7f1100a1;
    /**
     * Title for screen magnification footer. [CHAR LIMIT=60]
     */
    public static final int accessibility_screen_magnification_about_title=0x7f1100a2;
    /**
     * Screen magnification footer link content description [CHAR LIMIT=NONE]
     */
    public static final int accessibility_screen_magnification_footer_learn_more_content_description=0x7f1100a3;
    /**
     * Summary text appearing on the accessibility preference screen to enable screen magnification from the nav bar when the feature is enabled, but the accessibility button is not configured correctly for the feature to be used [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_gesture_navigation_warning=0x7f1100a4;
    /**
     * Title for the accessibility preference screen to enable triple-tap gesture screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_magnification_gestures_title=0x7f1100a5;
    /**
     * Summary text appearing on the accessibility preference screen to enable screen magnification from the nav bar when the feature is enabled, but the accessibility button is not configured correctly for the feature to be used [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_navbar_configuration_warning=0x7f1100a6;
    /**
     * Short summary for nav bar Magnification. Tells the user that this feature allows the user to magnify the screen using a button in the nav bar
     */
    public static final int accessibility_screen_magnification_navbar_short_summary=0x7f1100a7;
    /**
     * Summary for the accessibility preference screen to enable screen magnification via the nav bar. [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_navbar_summary=0x7f1100a8;
    /**
     * Title for the accessibility preference screen to enable navigation bar screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_magnification_navbar_title=0x7f1100a9;
    /**
     * Short summary for Magnification gesture. Tells the user that this feature allows the user to magnify the screen by tapping 3 times. Appears in accessibility portion of setup wizard
     */
    public static final int accessibility_screen_magnification_short_summary=0x7f1100aa;
    /**
     * Title for accessibility shortcut preference for magnification. [CHAR LIMIT=60]
     */
    public static final int accessibility_screen_magnification_shortcut_title=0x7f1100ab;
    /**
     * Summary for the accessibility magnification setting indicating both "Magnify with button" and "Magnify with triple-tap" are enabled [CHAR LIMIT=50]
     */
    public static final int accessibility_screen_magnification_state_navbar_gesture=0x7f1100ac;
    /**
     * Summary for the accessibility preference screen to enable screen magnification gestures. [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_summary=0x7f1100ad;
    /**
     * Title for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_magnification_title=0x7f1100ae;
    /**
     * Title for the footer text to explain what option accessibility service does. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_option=0x7f1100af;
    /**
     * Description for the action perform in accessibility dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_action_perform_description=0x7f1100b0;
    /**
     * Title for the action perform in accessibility dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_action_perform_title=0x7f1100b1;
    /**
     * Default description for an accessibility service if the latter doesn't provide one. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_default_description=0x7f1100b2;
    /**
     * Used in the accessibility service settings to open the activity. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_primary_open_title=0x7f1100b3;
    /**
     * Used in the accessibility service settings to control turning on/off the service entirely [CHAR LIMIT=60]
     */
    public static final int accessibility_service_primary_switch_title=0x7f1100b4;
    /**
     * Description for the screen control in accessibility dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_screen_control_description=0x7f1100b5;
    /**
     * Title for the screen control in accessibility dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_screen_control_title=0x7f1100b6;
    /**
     * Warning that explains that accessibility services have a lot of access to user data [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_warning=0x7f1100b7;
    /**
     * Warning description that explains that it's appropriate for accessibility
     * services to have full control to help users with accessibility needs. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_warning_description=0x7f1100b8;
    /**
     * Title for accessibility settings timeout item. [CHAR LIMIT=43]
     */
    public static final int accessibility_setting_item_control_timeout_title=0x7f1100b9;
    /**
     * Settings title in main settings screen for accessibility settings
     */
    public static final int accessibility_settings=0x7f1100ba;
    /**
     * Summary for Accessibility settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int accessibility_settings_summary=0x7f1100bb;
    /**
     * Settings title for accessibility settings screen
     */
    public static final int accessibility_settings_title=0x7f1100bc;
    /**
     * Description of accessibility shortcut. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_description=0x7f1100bd;
    /**
     * Summary for hardware shortcut in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_summary_hardware=0x7f1100be;
    /**
     * Summary for software shortcut in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_summary_software=0x7f1100bf;
    /**
     * Summary for software shortcut in accessibility edit shortcut dialog when user had enabled the accessibility floating button mode (Floating over other apps). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_summary_software_floating=0x7f1100c0;
    /**
     * Summary for software shortcut in gesture mode in accessibility edit shortcut dialog while using gesture navigation is enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_summary_software_gesture=0x7f1100c1;
    /**
     * Summary for software shortcut in gesture mode in accessibility edit shortcut dialog while using gesture navigation and touch exploration are enabled [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_summary_software_gesture_talkback=0x7f1100c2;
    /**
     * Summary for triple tap shortcut in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_summary_triple_tap=0x7f1100c3;
    /**
     * Title for the accessibility edit shortcut dialog to save the preference when user clicks it. [CHAR LIMIT=20]
     */
    public static final int accessibility_shortcut_edit_dialog_title_advance=0x7f1100c4;
    /**
     * Title for hardware shortcut in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_title_hardware=0x7f1100c5;
    /**
     * Summary for accessibility shortcut preference for software shortcut type. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_title_software=0x7f1100c6;
    /**
     * Summary for accessibility shortcut preference for software shortcut gesture type. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_title_software_by_gesture=0x7f1100c7;
    /**
     * Title for software shortcut in gesture mode in accessibility edit shortcut dialog while using gesture navigation is enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_title_software_gesture=0x7f1100c8;
    /**
     * Title for software shortcut in gesture mode in accessibility edit shortcut dialog while using gesture navigation and touch exploration are enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_title_software_gesture_talkback=0x7f1100c9;
    /**
     * Title for triple tap shortcut in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_dialog_title_triple_tap=0x7f1100ca;
    /**
     * Title for software shortcut in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_summary_software=0x7f1100cb;
    /**
     * Title for software shortcut gesture in accessibility edit shortcut dialog. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_edit_summary_software_gesture=0x7f1100cc;
    /**
     * Part of list to compose user's accessibility shortcut list. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_hardware_keyword=0x7f1100cd;
    /**
     * Title for the switch preference that controls whether or not the accessibility shortcut works on the lock screen. [CHAR LIMIT=50]
     */
    public static final int accessibility_shortcut_service_on_lock_screen_title=0x7f1100ce;
    /**
     * Title for the preference to choose the service that is turned on and off by the accessibility shortcut. [CHAR LIMIT=35]
     */
    public static final int accessibility_shortcut_service_title=0x7f1100cf;
    /**
     * Label for shortcut settings button. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_settings=0x7f1100d0;
    /**
     * Title for accessibility shortcut preference for accessibility apps. [CHAR LIMIT=40]
     */
    public static final int accessibility_shortcut_title=0x7f1100d1;
    /**
     * Part of list to compose user's accessibility shortcut list. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_triple_tap_keyword=0x7f1100d2;
    /**
     * Summary for accessibility shortcut preference for hardware shortcut type. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_type_hardware=0x7f1100d3;
    /**
     * Summary for accessibility shortcut preference for software shortcut type. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_type_software=0x7f1100d4;
    /**
     * Summary for accessibility shortcut preference for software shortcut type when gesture mode is on. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_type_software_gesture=0x7f1100d5;
    /**
     * Summary for accessibility shortcut preference for magnification triple tap shortcut type. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_type_triple_tap=0x7f1100d6;
    /**
     * Title for the accessibility shortcuts settings page. [CHAR LIMIT=50]
     */
    public static final int accessibility_shortcuts_settings_title=0x7f1100d7;
    /**
     * Preference's shortcut when disabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_summary_shortcut_disabled=0x7f1100d8;
    /**
     * Preference's shortcut when enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_summary_shortcut_enabled=0x7f1100d9;
    /**
     * Preference's state when disabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_summary_state_disabled=0x7f1100da;
    /**
     * Preference's state when enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_summary_state_enabled=0x7f1100db;
    /**
     * Accessibility service's preference's state when enabled but not running (like maybe it crashed).
     */
    public static final int accessibility_summary_state_stopped=0x7f1100dc;
    /**
     * Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_disabled=0x7f1100dd;
    /**
     * Content description of the enabled sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_enabled=0x7f1100de;
    /**
     * Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_error=0x7f1100df;
    /**
     * Content description of the in progress sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_in_progress=0x7f1100e0;
    /**
     * Title for the accessibility system controls page. [CHAR LIMIT=50]
     */
    public static final int accessibility_system_controls_title=0x7f1100e1;
    /**
     * Title for the accessibility tap assistance page. [CHAR LIMIT=50]
     */
    public static final int accessibility_tap_assistance_title=0x7f1100e2;
    /**
     * Title for the accessibility text options page. [CHAR LIMIT=50]
     */
    public static final int accessibility_text_and_display_title=0x7f1100e3;
    /**
     * Option heading to leave the timeout requirement for accessibility users at 10 secs. [CHAR LIMIT=35]
     */
    public static final int accessibility_timeout_10secs=0x7f1100e4;
    /**
     * Option heading to leave the timeout requirement for accessibility users at 1 min. [CHAR LIMIT=35]
     */
    public static final int accessibility_timeout_1min=0x7f1100e5;
    /**
     * Option heading to leave the timeout requirement for accessibility users at 2 mins. [CHAR LIMIT=35]
     */
    public static final int accessibility_timeout_2mins=0x7f1100e6;
    /**
     * Option heading to leave the timeout requirement for accessibility users at 30 secs. [CHAR LIMIT=35]
     */
    public static final int accessibility_timeout_30secs=0x7f1100e7;
    /**
     * Option heading to leave the timeout requirement for accessibility users at its default level. [CHAR LIMIT=35]
     */
    public static final int accessibility_timeout_default=0x7f1100e8;
    /**
     * Title for the accessibility preference to high contrast text. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_high_text_contrast_preference_title=0x7f1100e9;
    /**
     * Title for the accessibility preference for enabling/disabling large icons for mouse/trackpad pointers. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_large_pointer_icon_title=0x7f1100ea;
    /**
     * 'Left' balance text for the accessibility preference for primary balance. [CHAR LIMIT=20]
     */
    public static final int accessibility_toggle_primary_balance_left_label=0x7f1100eb;
    /**
     * 'Right' balance text for the accessibility preference for primary balance. [CHAR LIMIT=20]
     */
    public static final int accessibility_toggle_primary_balance_right_label=0x7f1100ec;
    /**
     * Title for the accessibility preference for primary balance. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_primary_balance_title=0x7f1100ed;
    /**
     * Summary for the accessibility preference for primary mono. [CHAR LIMIT=60]
     */
    public static final int accessibility_toggle_primary_mono_summary=0x7f1100ee;
    /**
     * Title for the accessibility preference for primary mono. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_primary_mono_title=0x7f1100ef;
    /**
     * Summary for the accessibility preference to auto update screen magnification. [CHAR LIMIT=50]
     */
    public static final int accessibility_toggle_screen_magnification_auto_update_preference_summary=0x7f1100f0;
    /**
     * Title for the accessibility preference to auto update screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_screen_magnification_auto_update_preference_title=0x7f1100f1;
    /**
     * Title for accessibility preference for configuring touch feedback vibrations.
     */
    public static final int accessibility_touch_vibration_title=0x7f1100f2;
    /**
     * Title for the accessibility text options page. [CHAR LIMIT=50]
     */
    public static final int accessibility_turn_screen_darker_title=0x7f1100f3;
    /**
     * Button for the accessibility tutorial dialog to dismiss the dialog when user clicks it. [CHAR LIMIT=10]
     */
    public static final int accessibility_tutorial_dialog_button=0x7f1100f4;
    /**
     * Message for the accessibility tutorial dialog when user enables an accessibility service while using the 3-button nav bar. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_tutorial_dialog_message_button=0x7f1100f5;
    /**
     * Message for the accessibility tutorial dialog when user enables an accessibility service while using the accessibility floating button. [CHAR LIMIT=100]
     */
    public static final int accessibility_tutorial_dialog_message_floating_button=0x7f1100f6;
    /**
     * Message for the accessibility tutorial dialog when user enables an accessibility service while using gesture navigation and touch exploration is not enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_tutorial_dialog_message_gesture=0x7f1100f7;
    /**
     * Message for the accessibility tutorial dialog when user chooses gesture navigation in navigation settings, an accessibility service is using the accessibility button, and touch exploration is disabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_tutorial_dialog_message_gesture_settings=0x7f1100f8;
    /**
     * Message for the accessibility tutorial dialog when user chooses gesture navigation in navigation settings, an accessibility service is using the accessibility button, and touch exploration is enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_tutorial_dialog_message_gesture_settings_talkback=0x7f1100f9;
    /**
     * Message for the accessibility tutorial dialog when user enables an accessibility service while using gesture navigation and touch exploration is enabled. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_tutorial_dialog_message_gesture_talkback=0x7f1100fa;
    /**
     * Instruction for the accessibility tutorial dialog in accessibility service with triple tap. [CHAR LIMIT=100]
     */
    public static final int accessibility_tutorial_dialog_message_triple=0x7f1100fb;
    /**
     * Instruction for the accessibility tutorial dialog in accessibility service with volume keys. [CHAR LIMIT=100]
     */
    public static final int accessibility_tutorial_dialog_message_volume=0x7f1100fc;
    /**
     * Title for the accessibility tutorial dialog in accessibility service with button. [CHAR LIMIT=50]
     */
    public static final int accessibility_tutorial_dialog_title_button=0x7f1100fd;
    /**
     * Title for the accessibility tutorial dialog in accessibility service with gesture. [CHAR LIMIT=50]
     */
    public static final int accessibility_tutorial_dialog_title_gesture=0x7f1100fe;
    /**
     * Title for the accessibility tutorial dialog in gesture navigation settings. [CHAR LIMIT=50]
     */
    public static final int accessibility_tutorial_dialog_title_gesture_settings=0x7f1100ff;
    /**
     * Title for the accessibility tutorial dialog in accessibility service with triple tap. [CHAR LIMIT=100]
     */
    public static final int accessibility_tutorial_dialog_title_triple=0x7f110100;
    /**
     * Title for the accessibility tutorial dialog in accessibility service with volume keys. [CHAR LIMIT=100]
     */
    public static final int accessibility_tutorial_dialog_title_volume=0x7f110101;
    /**
     * Accessibility label for paging indicator in accessibility tutorial page. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_tutorial_pager=0x7f110102;
    /**
     * Title for the accessibility usage preference in the Privacy page.  [CHAR LIMIT=NONE]
     */
    public static final int accessibility_usage_title=0x7f110103;
    /**
     * Label describing a high intensity vibration option. [CHAR LIMIT=15]
     */
    public static final int accessibility_vibration_intensity_high=0x7f110104;
    /**
     * Label describing a low intensity vibration option. [CHAR LIMIT=15]
     */
    public static final int accessibility_vibration_intensity_low=0x7f110105;
    /**
     * Label describing a medium intensity vibration option. [CHAR LIMIT=15]
     */
    public static final int accessibility_vibration_intensity_medium=0x7f110106;
    /**
     * Label describing an option turning vibrations off. [CHAR LIMIT=15]
     */
    public static final int accessibility_vibration_intensity_off=0x7f110107;
    /**
     * Title for accessibility preference screen for configuring vibrations.
     */
    public static final int accessibility_vibration_settings_title=0x7f110108;
    /**
     * Summary for vibration settings preference when notification vibration and haptic feedback intensity are set. [CHAR LIMIT=50]
     */
    public static final int accessibility_vibration_summary=0x7f110109;
    /**
     * Summary for vibration settings preference when ring & notification are set to high
     */
    public static final int accessibility_vibration_summary_high=0x7f11010a;
    /**
     * Summary for vibration settings preference when ring & notification are set to low
     */
    public static final int accessibility_vibration_summary_low=0x7f11010b;
    /**
     * Summary for vibration settings preference when ring & notification are set to medium
     */
    public static final int accessibility_vibration_summary_medium=0x7f11010c;
    /**
     * Summary for vibration settings preference when ring & notification are set to off
     */
    public static final int accessibility_vibration_summary_off=0x7f11010d;
    /**
     * Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_off=0x7f11010e;
    /**
     * Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_one_bar=0x7f11010f;
    /**
     * Content description of the Wi-Fi security type. This message indicates this is an open Wi-Fi (no password needed) [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_security_type_none=0x7f110110;
    /**
     * Content description of the Wi-Fi security type. This message indicates this is a secured Wi-Fi (password needed) [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_security_type_secured=0x7f110111;
    /**
     * Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_signal_full=0x7f110112;
    /**
     * Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_three_bars=0x7f110113;
    /**
     * Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_two_bars=0x7f110114;
    /**
     * Content description for work profile details page title [CHAR LIMIT=NONE]
     */
    public static final int accessibility_work_account_title=0x7f110115;
    /**
     * A content description for work profile app [CHAR LIMIT=35]
     */
    public static final int accessibility_work_profile_app_description=0x7f110116;
    /**
     * Shared data: label to indicate when the lease acquired by an app expires [CHAR LIMIT=80]
     */
    public static final int accessor_expires_text=0x7f110117;
    /**
     * Shared data: title for screen showing list of packages accessing some shared data [CHAR LIMIT=50]
     */
    public static final int accessor_info_title=0x7f110118;
    /**
     * Shared data: text indicating that no description was provided by the app for this shared data [CHAR LIMIT=80]
     */
    public static final int accessor_no_description_text=0x7f110119;
    /**
     * Class to target for Account credential confirmation. This will allow users to
     * remind/rediscover their backup account password prior to a reset. Empty for AOSP.
     * [DO NOT TRANSLATE]
     */
    public static final int account_confirmation_class=0x7f11011a;
    /**
     * Package to target for Account credential confirmation. This will allow users to
     * remind/rediscover their backup account password prior to a reset. Empty for AOSP.
     * [DO NOT TRANSLATE]
     */
    public static final int account_confirmation_package=0x7f11011b;
    /**
     * Summary for setting tile leading to saved autofill passwords, autofill, and account settings [CHAR LIMIT=NONE]
     */
    public static final int account_dashboard_default_summary=0x7f11011c;
    /**
     * Title for setting tile leading to saved autofill passwords, autofill, and account settings [CHAR LIMIT=40]
     */
    public static final int account_dashboard_title=0x7f11011d;
    /**
     * Accounts for section header [CHAR LIMIT=30]
     */
    public static final int account_for_section_header=0x7f11011e;
    /**
     * Account settings header. [CHAR LIMIT=30]
     */
    public static final int account_settings=0x7f11011f;
    /**
     * Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30]
     */
    public static final int account_settings_menu_auto_sync=0x7f110120;
    /**
     * Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30]
     */
    public static final int account_settings_menu_auto_sync_personal=0x7f110121;
    /**
     * Title for menu option to enable global auto-sync of work account data [CHAR LIMIT=30]
     */
    public static final int account_settings_menu_auto_sync_work=0x7f110122;
    /**
     * Main Settings screen setting option title for the item to take you to the accounts screen [CHAR LIMIT=22]
     */
    public static final int account_settings_title=0x7f110123;
    /**
     * Account specific sync settings title [CHAR LIMIT=35]
     */
    public static final int account_sync_settings_title=0x7f110124;
    /**
     * Preference summary for account sync when syncing is off for everything [CHAR LIMIT=NONE]
     */
    public static final int account_sync_summary_all_off=0x7f110125;
    /**
     * Preference summary for account sync when syncing is on for everything [CHAR LIMIT=NONE]
     */
    public static final int account_sync_summary_all_on=0x7f110126;
    /**
     * Preference summary for account sync when syncing is on for some items [CHAR LIMIT=NONE]
     */
    public static final int account_sync_summary_some_on=0x7f110127;
    /**
     * Preference label to sync account [CHAR LIMIT=60]
     */
    public static final int account_sync_title=0x7f110128;
    /**
     * Account type associated with the backup account. Empty for AOSP. [DO NOT TRANSLATE]
     */
    public static final int account_type=0x7f110129;
    /**
     * Label for an accessibility action that moves a language to the bottom of the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_bottom=0x7f11012a;
    /**
     * Label for an accessibility action that moves a language down in the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_down=0x7f11012b;
    /**
     * Label for an accessibility action that moves a language to the top of the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_top=0x7f11012c;
    /**
     * Label for an accessibility action that moves a language up in the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_up=0x7f11012d;
    /**
     * Label for an accessibility action that removes the currently selected language from the the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_remove=0x7f11012e;
    /**
     * Label for screen showing the active device admin apps
     */
    public static final int active_device_admin_msg=0x7f11012f;
    /**
     * Title for settings of active input methods in each IME [CHAR LIMIT=35]
     */
    public static final int active_input_method_subtypes=0x7f110130;
    /**
     * Displayed when user launches a widget configuration activity that was uninstalled
     */
    public static final int activity_not_found=0x7f110131;
    /**
     * The title of the dialog to pick an activity.  This is shown when there are multiple activities that can do a particular action.  For example, suppose you click on the "Share" menu item in the Browser.  Since you can share the webpage URL via many communication methods, this dialog would come up with choices like "Email", "IM", etc.  This is a generic message, and the previous example is a single possible scenario (so please don't assume it's for the browser or anything :) ).
     */
    public static final int activity_picker_label=0x7f110132;
    /**
     * Title for Adaptive Battery main switch preferences. [CHAR LIMIT=50]
     */
    public static final int adaptive_battery_main_switch_title=0x7f110133;
    /**
     * Title for adaptive brightness main switch preferences. [CHAR LIMIT=50]
     */
    public static final int adaptive_brightness_main_switch_title=0x7f110134;
    /**
     * Summary of Adaptive connectivity preference. [CHAR LIMIT=NONE]
     */
    public static final int adaptive_connectivity_summary=0x7f110135;
    /**
     * Switch off text of Adaptive connectivity preference. [CHAR LIMIT=NONE]
     */
    public static final int adaptive_connectivity_switch_off=0x7f110136;
    /**
     * Switch on text of Adaptive connectivity preference. [CHAR LIMIT=NONE]
     */
    public static final int adaptive_connectivity_switch_on=0x7f110137;
    /**
     * Title of Adaptive connectivity. Adaptive connectivity is a feature which automatically manages network connections for better battery life and performance. [CHAR LIMIT=60]
     */
    public static final int adaptive_connectivity_title=0x7f110138;
    /**
     * screen_timeout settings screen, summary about the camera being disabled [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_camera_lock_summary=0x7f110139;
    /**
     * Description about the contextual adaptive sleep card [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_contextual_slice_summary=0x7f11013a;
    /**
     * Title of the contextual adaptive sleep card [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_contextual_slice_title=0x7f11013b;
    /**
     * Description about the feature adaptive sleep [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_description=0x7f11013c;
    /**
     * adaptive_sleep settings screen, text for the camera permission button [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_manage_permission_button=0x7f11013d;
    /**
     * Description feature's privacy sensitive details to make sure users understand what feature users, what it saves/sends etc [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_privacy=0x7f11013e;
    /**
     * adaptive_sleep settings screen, subtitle when permission is missing [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_summary_no_permission=0x7f11013f;
    /**
     * Setting option summary when adaptive sleep is off [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_summary_off=0x7f110140;
    /**
     * Setting option summary when adaptive sleep is on [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_summary_on=0x7f110141;
    /**
     * Display settings screen, setting option name to enable adaptive sleep [CHAR LIMIT=30]
     */
    public static final int adaptive_sleep_title=0x7f110142;
    /**
     * adaptive_sleep settings screen, title about the required permission is missing [CHAR LIMIT=NONE]
     */
    public static final int adaptive_sleep_title_no_permission=0x7f110143;
    /**
     * [CHAR LIMIT=NONE] Setting summary explaining the disablement of the automatic adb authorization timeout.
     */
    public static final int adb_authorization_timeout_summary=0x7f110144;
    /**
     * [CHAR LIMIT=50] Setting title to disable the adb authorization timeout feature.
     */
    public static final int adb_authorization_timeout_title=0x7f110145;
    /**
     * [CHAR LIMIT=50] Title format for mac address preference in adb device details fragment
     */
    public static final int adb_device_fingerprint_title_format=0x7f110146;
    /**
     * [CHAR LIMIT=16] Button label to forget an adb device
     */
    public static final int adb_device_forget=0x7f110147;
    /**
     * Android debugging as root
     */
    public static final int adb_enable_root=0x7f110148;
    public static final int adb_enable_summary_root=0x7f110149;
    /**
     * Message of dialog confirming that user wants to revoke access to adb from all computers they have authorized
     */
    public static final int adb_keys_warning_message=0x7f11014a;
    /**
     * [CHAR LIMIT=NONE] Summary for adb wireless pair by pairing code preference
     */
    public static final int adb_pair_method_code_summary=0x7f11014b;
    /**
     * [CHAR LIMIT=50] Title for adb wireless pair by pairing code preference
     */
    public static final int adb_pair_method_code_title=0x7f11014c;
    /**
     * [CHAR LIMIT=NONE] Summary for adb wireless pair by QR code preference
     */
    public static final int adb_pair_method_qrcode_summary=0x7f11014d;
    /**
     * [CHAR LIMIT=50] Title for adb wireless pair by QR code preference
     */
    public static final int adb_pair_method_qrcode_title=0x7f11014e;
    /**
     * [CHAR LIMIT=50] Title for adb wireless paired devices category
     */
    public static final int adb_paired_devices_title=0x7f11014f;
    /**
     * [CHAR LIMIT=NONE] Adb wireless pairing device failed dialog message
     */
    public static final int adb_pairing_device_dialog_failed_msg=0x7f110150;
    /**
     * [CHAR LIMIT=50] Adb Wireless pairing device failed dialog title
     */
    public static final int adb_pairing_device_dialog_failed_title=0x7f110151;
    /**
     * [CHAR LIMIT=32] Adb wireless pairing device dialog pairing code label
     */
    public static final int adb_pairing_device_dialog_pairing_code_label=0x7f110152;
    /**
     * [CHAR LIMIT=32] Adb wireless pairing device dialog title
     */
    public static final int adb_pairing_device_dialog_title=0x7f110153;
    /**
     * [CHAR LIMIT=NONE] Adb wireless QR code failed message
     */
    public static final int adb_qrcode_pairing_device_failed_msg=0x7f110154;
    /**
     * Warning text to user about the implications of enabling USB debugging
     */
    public static final int adb_warning_message=0x7f110155;
    /**
     * Title of warning dialog about the implications of enabling USB debugging
     */
    public static final int adb_warning_title=0x7f110156;
    /**
     * [CHAR LIMIT=NONE] Message for adb wireless connection failed dialog
     */
    public static final int adb_wireless_connection_failed_message=0x7f110157;
    /**
     * [CHAR LIMIT=50] Title for adb wireless connection failed dialog
     */
    public static final int adb_wireless_connection_failed_title=0x7f110158;
    /**
     * [CHAR LIMIT=50] Summary for adb wireless paired device preference
     */
    public static final int adb_wireless_device_connected_summary=0x7f110159;
    /**
     * [CHAR LIMIT=50] Title for the adb device details fragment
     */
    public static final int adb_wireless_device_details_title=0x7f11015a;
    /**
     * [CHAR LIMIT=32] Summary text when ADB wireless has error
     */
    public static final int adb_wireless_error=0x7f11015b;
    /**
     * [CHAR LIMIT=50] Adb Wireless ip address and port title
     */
    public static final int adb_wireless_ip_addr_preference_title=0x7f11015c;
    /**
     * [CHAR LIMIT=NONE] Wireless debugging settings. text displayed when wireless debugging is off and network list is empty.
     */
    public static final int adb_wireless_list_empty_off=0x7f11015d;
    /**
     * [CHAR LIMIT=NONE] Toast message when trying to enable Wi-Fi debugging and no Wi-Fi network connected
     */
    public static final int adb_wireless_no_network_msg=0x7f11015e;
    /**
     * [CHAR LIMIT=NONE] Adb Wireless QR code pairing description
     */
    public static final int adb_wireless_qrcode_pairing_description=0x7f11015f;
    /**
     * [CHAR LIMIT=NONE] Adb Wireless QR code pairing scanner title
     */
    public static final int adb_wireless_qrcode_pairing_title=0x7f110160;
    /**
     * [CHAR LIMIT=NONE] Adb wireless qr code scanner description
     */
    public static final int adb_wireless_qrcode_summary=0x7f110161;
    /**
     * [CHAR LIMIT=32] Setting title for ADB wireless fragment
     */
    public static final int adb_wireless_settings=0x7f110162;
    /**
     * [CHAR LIMIT=NONE] Adb wireless QR code pairing in progress text
     */
    public static final int adb_wireless_verifying_qrcode_text=0x7f110163;
    /**
     * Warning text to user about the implications of enabling USB debugging [CHAR LIMIT=NONE]
     */
    public static final int adbwifi_warning_message=0x7f110164;
    /**
     * Title of warning dialog about the implications of enabling USB debugging [CHAR LIMIT=NONE]
     */
    public static final int adbwifi_warning_title=0x7f110165;
    /**
     * Button label for generic add action [CHAR LIMIT=20]
     */
    public static final int add=0x7f110166;
    /**
     * "Button" that opens a language picker. The selected language gets added to the language list. [CHAR LIMIT=30]
     */
    public static final int add_a_language=0x7f110167;
    /**
     * Button label to add an account [CHAR LIMIT=20]
     */
    public static final int add_account_label=0x7f110168;
    /**
     * Label for button to set the active device admin [CHAR_LIMIT=80]
     */
    public static final int add_device_admin=0x7f110169;
    /**
     * Title for screen to add a device admin app [CHAR LIMIT=40]
     */
    public static final int add_device_admin_msg=0x7f11016a;
    /**
     * Text shown to notify that the creation of new user has failed. [CHAR LIMIT=40]
     */
    public static final int add_user_failed=0x7f11016b;
    /**
     * Title for the button to trigger the 'Manage keyboards' preference sub-screen, where the user can turn on/off installed virtual keyboards.[CHAR LIMIT=35]
     */
    public static final int add_virtual_keyboard=0x7f11016c;
    /**
     * Warning when trying to add a profile owner admin after setup has completed. [CHAR LIMIT=none]
     */
    public static final int adding_profile_owner_warning=0x7f11016d;
    /**
     * Label for menu to launch a screen showing usage alerts for battery [CHAR LIMIT=30]
     */
    public static final int additional_battery_info=0x7f11016e;
    /**
     * Label for button that leads to more permissions [CHAR LIMIT=40]
     */
    public static final int additional_permissions=0x7f11016f;
    /**
     * Description of how many more permissions to view on next page [CHAR LIMIT=30]
     */
    public static final int additional_permissions_more=0x7f110170;
    public static final int additional_system_update=0x7f110171;
    public static final int additional_system_update_menu=0x7f110172;
    /**
     * A menu item in "About phone" that allows the user to update the phone with settings
     * from their cell phone carrier. The use of the string is similar to the string
     * "system_update_settings_list_item_title" in this project. [CHAR LIMIT=25]
     */
    public static final int additional_system_update_settings_list_item_title=0x7f110173;
    /**
     * Shown in admin details page to warn user about policies the admin can set on a device. [CHAR LIMIT=NONE]
     */
    public static final int admin_device_owner_message=0x7f110174;
    /**
     * Message displayed to let the user know that some of the options are disabled by admin. [CHAR LIMIT=NONE]
     */
    public static final int admin_disabled_other_options=0x7f110175;
    /**
     * Shown in admin details page to warn user about policies the admin can set on a financed device. [CHAR LIMIT=NONE]
     */
    public static final int admin_financed_message=0x7f110176;
    public static final int admin_more_details=0x7f110177;
    /**
     * Shown in admin details page to warn user about policies the admin can set in a work profile. [CHAR LIMIT=NONE]
     */
    public static final int admin_profile_owner_message=0x7f110178;
    /**
     * Shown in admin details page to warn user about policies the admin can set on a user. [CHAR LIMIT=NONE]
     */
    public static final int admin_profile_owner_user_message=0x7f110179;
    /**
     * Shown in dialog to allow user to see more information about the device admin [CHAR LIMIT=30]
     */
    public static final int admin_support_more_info=0x7f11017a;
    /**
     * Title for advanced application management settings [CHAR LIMIT=30]
     */
    public static final int advanced_apps=0x7f11017b;
    /**
     * Graph subtext displayed to user when enhanced battery estimate is being used [CHAR LIMIT=120]
     */
    public static final int advanced_battery_graph_subtext=0x7f11017c;
    /**
     * Preference summary for advanced battery usage, from last full charge [CHAR LIMIT=40]
     */
    public static final int advanced_battery_preference_summary=0x7f11017d;
    /**
     * Preference summary for advanced battery usage, for past 24 hours [CHAR LIMIT=40]
     */
    public static final int advanced_battery_preference_summary_with_hours=0x7f11017e;
    /**
     * Preference title for advanced battery usage [CHAR LIMIT=40]
     */
    public static final int advanced_battery_preference_title=0x7f11017f;
    /**
     * Activity title for advanced battery usage page [CHAR LIMIT=25]
     */
    public static final int advanced_battery_title=0x7f110180;
    public static final int advanced_keyboard_settings_title=0x7f110181;
    /**
     * Configure Notifications: Advanced section header [CHAR LIMIT=30]
     */
    public static final int advanced_section_header=0x7f110182;
    /**
     * Title of preference group for advance security settings [CHAR LIMIT=30]
     */
    public static final int advanced_security_title=0x7f110183;
    /**
     * Applications settings screen, setting check box title. If checked, applications show more settings options.
     */
    public static final int advanced_settings=0x7f110184;
    /**
     * Applications settings screen, setting check box summary.  This is the summary for "Advanced settings" checkbox
     */
    public static final int advanced_settings_summary=0x7f110185;
    /**
     * Wireless controls settings screen, setting check box label
     */
    public static final int airplane_mode=0x7f110186;
    /**
     * Sound: Title for the option defining the default alarm sound. [CHAR LIMIT=30]
     */
    public static final int alarm_ringtone_title=0x7f110187;
    /**
     * Alarm template for near alarms [CHAR LIMIT=25]
     */
    public static final int alarm_template=0x7f110188;
    /**
     * Alarm template for far in the future alarms [CHAR LIMIT=25]
     */
    public static final int alarm_template_far=0x7f110189;
    /**
     * Sound: Title for the option managing alarm volume. [CHAR LIMIT=30]
     */
    public static final int alarm_volume_option_title=0x7f11018a;
    /**
     * Sound settings screen, alarm volume slider title
     */
    public static final int alarm_volume_title=0x7f11018b;
    /**
     * Description that appears below the alarms_and_reminders switch [CHAR LIMIT=NONE]
     */
    public static final int alarms_and_reminders_footer_title=0x7f11018c;
    /**
     * Label for the settings activity for controlling apps that can schedule alarms [CHAR LIMIT=30]
     */
    public static final int alarms_and_reminders_label=0x7f11018d;
    /**
     * Label for the switch to toggler the permission for scheduling alarms [CHAR LIMIT=50]
     */
    public static final int alarms_and_reminders_switch_title=0x7f11018e;
    /**
     * Title for the setting screen for controlling apps that can schedule alarms [CHAR LIMIT=30]
     */
    public static final int alarms_and_reminders_title=0x7f11018f;
    /**
     * All apps screen title, entry name on Apps page for the user to go to the all apps page. [CHAR LIMIT=30]
     */
    public static final int all_apps=0x7f110190;
    /**
     * Provider Model: Summary indicating that no networks available [CHAR LIMIT=50]
     */
    public static final int all_network_unavailable=0x7f110191;
    /**
     * Sound settings screen, volume title
     */
    public static final int all_volume_title=0x7f110192;
    /**
     * Strings for Dialog allow button
     */
    public static final int allow=0x7f110193;
    /**
     * Message in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE]
     */
    public static final int allow_bind_app_widget_activity_allow_bind=0x7f110194;
    /**
     * Title in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE]
     */
    public static final int allow_bind_app_widget_activity_allow_bind_title=0x7f110195;
    /**
     * Text for checkbox that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE]
     */
    public static final int allow_bind_app_widget_activity_always_allow_bind=0x7f110196;
    /**
     * check box to allow data usage when roaming [CHAR LIMIT=41]
     */
    public static final int allow_data_usage_title=0x7f110197;
    /**
     * [CHAR LIMIT=40] Notification importance title. This setting controls how notifications in older apps may alert the user (eg, sound, visual, vibrate).
     */
    public static final int allow_interruption=0x7f110198;
    /**
     * [CHAR LIMIT=180] Notification importance description. More details from allow_interruption string - specifics of how notifications may interrupt.
     */
    public static final int allow_interruption_summary=0x7f110199;
    /**
     * Description for a setting which controls whether an app can manage external storage
     * [CHAR LIMIT=NONE]
     */
    public static final int allow_manage_external_storage_description=0x7f11019a;
    /**
     * Setting Checkbox title whether to allow mock locations
     */
    public static final int allow_mock_location=0x7f11019b;
    /**
     * setting Checkbox summary whether to allow mock locations
     */
    public static final int allow_mock_location_summary=0x7f11019c;
    /**
     * Description of allowing overlay setting [CHAR LIMIT=NONE]
     */
    public static final int allow_overlay_description=0x7f11019d;
    /**
     * Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app was given user permission to create widgets.
     */
    public static final int always_allow_bind_appwidgets_text=0x7f11019e;
    /**
     * Description of app always running [CHAR LIMIT=45]
     */
    public static final int always_running=0x7f11019f;
    /**
     * Amber alerts summary.  [CHAR LIMIT=60]
     */
    public static final int amber_alerts_summary=0x7f1101a0;
    /**
     * Amber alerts title.  [CHAR LIMIT=30]
     */
    public static final int amber_alerts_title=0x7f1101a1;
    /**
     * [CHAR LIMIT=60] Button text for screen attention to turn off battery saver
     */
    public static final int ambient_camera_battery_saver_off=0x7f1101a2;
    /**
     * [CHAR LIMIT=60] Summary string for screen attention explaining why the toggle is disabled by battery saver
     */
    public static final int ambient_camera_summary_battery_saver_on=0x7f1101a3;
    /**
     * [CHAR LIMIT=30] Category title for the settings that control when Ambient display shows.
     */
    public static final int ambient_display_category_triggers=0x7f1101a4;
    /**
     * Summary text for ambient display (device) [CHAR LIMIT=NONE]
     */
    public static final int ambient_display_pickup_summary=0x7f1101a5;
    /**
     * Preference and settings suggestion title text for ambient display pick up (device) [CHAR LIMIT=60]
     */
    public static final int ambient_display_pickup_title=0x7f1101a6;
    /**
     * Summary text for screen off UDFPS [CHAR LIMIT=NONE]
     */
    public static final int ambient_display_screen_off_udfps_summary=0x7f1101a7;
    /**
     * Preference and settings suggestion title text for screen off UDFPS  (device) [CHAR LIMIT=60]
     */
    public static final int ambient_display_screen_off_udfps_title=0x7f1101a8;
    /**
     * [CHAR LIMIT=30] Title of the preference that opens the Ambient display settings screen.
     */
    public static final int ambient_display_screen_title=0x7f1101a9;
    /**
     * Summary text for ambient display double tap [CHAR LIMIT=NONE]
     */
    public static final int ambient_display_summary=0x7f1101aa;
    /**
     * Summary text for ambient display tap [CHAR LIMIT=NONE]
     */
    public static final int ambient_display_tap_screen_summary=0x7f1101ab;
    /**
     * Preference and settings suggestion title text for ambient display tap (device) [CHAR LIMIT=60]
     */
    public static final int ambient_display_tap_screen_title=0x7f1101ac;
    /**
     * Preference and settings suggestion title text for ambient display double tap (device) [CHAR LIMIT=60]
     */
    public static final int ambient_display_title=0x7f1101ad;
    /**
     * Preference and settings suggestion title text for display wake-up gesture [CHAR LIMIT=60]
     */
    public static final int ambient_display_wake_screen_title=0x7f1101ae;
    /**
     * Explanation of the Android Beam feature in the Android Beam settings panel. The use of "beam" here is as a verb and not considered trademarked. [CHAR LIMIT=NONE]
     */
    public static final int android_beam_explained=0x7f1101af;
    /**
     * Used in the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32]
     */
    public static final int android_beam_label=0x7f1101b0;
    /**
     * Used to describe the off state of the Android Beam feature [CHAR LIMIT=NONE]
     */
    public static final int android_beam_off_summary=0x7f1101b1;
    /**
     * Used to describe the on state of the Android Beam feature [CHAR LIMIT=NONE]
     */
    public static final int android_beam_on_summary=0x7f1101b2;
    /**
     * Used to enter the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32]
     */
    public static final int android_beam_settings_title=0x7f1101b3;
    /**
     * Summary of Android version info (when there is a pending upgrade available) [CHAR LIMIT=NONE]
     */
    public static final int android_version_pending_update_summary=0x7f1101b4;
    /**
     * Summary of Android version info [CHAR LIMIT=NONE]
     */
    public static final int android_version_summary=0x7f1101b5;
    /**
     * UI debug setting: select current app to use ANGLE [CHAR LIMIT=100]
     */
    public static final int angle_enabled_app=0x7f1101b6;
    /**
     * UI debug setting: no ANGLE enabled app has been set [CHAR LIMIT=100]
     */
    public static final int angle_enabled_app_not_set=0x7f1101b7;
    /**
     * UI debug setting: ANGLE enabled app has been set [CHAR LIMIT=NONE]
     */
    public static final int angle_enabled_app_set=0x7f1101b8;
    /**
     * UI debug setting: scaling factor for all Animator-based animations [CHAR LIMIT=25]
     */
    public static final int animator_duration_scale_title=0x7f1101b9;
    /**
     * Text of pop up message if the request for a "migrate primary storage" operation
     * (see storage_menu_migrate) is denied as another is already in progress. [CHAR LIMIT=75]
     */
    public static final int another_migration_already_in_progress=0x7f1101ba;
    /**
     * Edit access point labels: The actual access point name
     */
    public static final int apn_apn=0x7f1101bb;
    /**
     * Edit acces  point labels: Authenticaton type
     */
    public static final int apn_auth_type=0x7f1101bc;
    /**
     * Authentication Typs: CHAP
     */
    public static final int apn_auth_type_chap=0x7f1101bd;
    /**
     * Authentication Typs: None
     */
    public static final int apn_auth_type_none=0x7f1101be;
    /**
     * Authentication Typs: PAP
     */
    public static final int apn_auth_type_pap=0x7f1101bf;
    /**
     * Authentication Typs: PAP or CHAP
     */
    public static final int apn_auth_type_pap_chap=0x7f1101c0;
    /**
     * Screen title after user selects APNs setting option
     */
    public static final int apn_edit=0x7f1101c1;
    /**
     * Edit access point labels: The port number of the proxy to use for this APN
     */
    public static final int apn_http_port=0x7f1101c2;
    /**
     * Edit access point labels: The addess of the proxy to use for this APN
     */
    public static final int apn_http_proxy=0x7f1101c3;
    /**
     * Edit access point labels:
     */
    public static final int apn_mcc=0x7f1101c4;
    /**
     * Edit access point labels: The port on the proxy used for MMS
     */
    public static final int apn_mms_port=0x7f1101c5;
    /**
     * Edit access point labels: The proxy to use for MMS (multimedia messages)
     */
    public static final int apn_mms_proxy=0x7f1101c6;
    /**
     * Edit access point labels:
     */
    public static final int apn_mmsc=0x7f1101c7;
    /**
     * Edit access point labels:
     */
    public static final int apn_mnc=0x7f1101c8;
    /**
     * Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others
     */
    public static final int apn_name=0x7f1101c9;
    /**
     * Edit access point label summary text when no value has been set
     * unknown quoting pattern: original -1, translation 1
     */
    public static final int apn_not_set=0x7f1101ca;
    /**
     * Edit access point label summary text when no value has been set for mvno value. [CHAR LIMIT=NONE]
     */
    public static final int apn_not_set_for_mvno=0x7f1101cb;
    /**
     * Edit access point labels: The password that will be used when connecting to this APN
     */
    public static final int apn_password=0x7f1101cc;
    /**
     * Edit access point labels: The protocol of the APN, e.g., "IPv4", "IPv6", or "IPv4/IPv6".
     */
    public static final int apn_protocol=0x7f1101cd;
    /**
     * Edit access point labels: The protocol of the APN when roaming, e.g., "IPv4", "IPv6", or "IPv4/IPv6".
     */
    public static final int apn_roaming_protocol=0x7f1101ce;
    /**
     * Edit access point labels: The server address to conenct to for this APN
     */
    public static final int apn_server=0x7f1101cf;
    /**
     * APN settings screen title
     */
    public static final int apn_settings=0x7f1101d0;
    /**
     * Error message for users that aren't allowed to modify Access Point Names settings [CHAR LIMIT=none]
     */
    public static final int apn_settings_not_available=0x7f1101d1;
    /**
     * Edit access point labels: The type of APN
     */
    public static final int apn_type=0x7f1101d2;
    /**
     * Edit access point labels: The username that will be used when conencting to this APN
     */
    public static final int apn_user=0x7f1101d3;
    /**
     * Summary for Apps & Notification settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int app_and_notification_dashboard_summary=0x7f1101d4;
    /**
     * Title for setting tile leading to Apps & Notification settings [CHAR LIMIT=40]
     */
    public static final int app_and_notification_dashboard_title=0x7f1101d5;
    /**
     * App data usage, as seen from the platform, in data usage screen [CHAR LIMIT=60]
     */
    public static final int app_cellular_data_usage=0x7f1101d6;
    /**
     * Title for setting tile leading to setting UI which allows user set default app to
     * handle actions such as open web page, making phone calls, default SMS apps [CHAR  LIMIT=40]
     */
    public static final int app_default_dashboard_title=0x7f1101d7;
    /**
     * [CHAR LIMIT=30] Manage applications, label for option to disable app
     */
    public static final int app_disable_dlg_positive=0x7f1101d8;
    /**
     * [CHAR LIMIT=NONE] Manage applications, text for dialog when disabling apps
     */
    public static final int app_disable_dlg_text=0x7f1101d9;
    /**
     * [CHAR LIMIT=30] Manage applications, title for dialog when disabling notifications for an app
     */
    public static final int app_disable_notifications_dlg_title=0x7f1101da;
    /**
     * Manage applications, restore updated system application to factory version
     */
    public static final int app_factory_reset=0x7f1101db;
    /**
     * Title for the installed app info storage page. The total storage space taken up by this app. [CHAR LIMIT=40]
     */
    public static final int app_info_storage_title=0x7f1101dc;
    /**
     * Manage applications, individual application info screen, section heading for information about the app installer [CHAR_LIMIT=25]
     */
    public static final int app_install_details_group_title=0x7f1101dd;
    /**
     * Manage applications, individual application info screen, summary for the option which will trigger application info in it's installer [CHAR_LIMIT=50]
     */
    public static final int app_install_details_summary=0x7f1101de;
    /**
     * Manage applications, individual application info screen, title for the option which will trigger application info in it's installer [CHAR_LIMIT=25]
     */
    public static final int app_install_details_title=0x7f1101df;
    /**
     * Manage applications. application installation location summary
     */
    public static final int app_install_location_summary=0x7f1101e0;
    /**
     * Manage applications, application installation location title
     */
    public static final int app_install_location_title=0x7f1101e1;
    /**
     * Preference title for Add link [CHAR LIMIT=60]
     */
    public static final int app_launch_add_link=0x7f1101e2;
    /**
     * Title for Checking other supported links dialog. [CHAR LIMIT=50]
     */
    public static final int app_launch_checking_links_title=0x7f1101e3;
    /**
     * Cancel button for Checking other supported links dialog. [CHAR LIMIT=20]
     */
    public static final int app_launch_dialog_cancel=0x7f1101e4;
    /**
     * OK button for verified links dialog. [CHAR LIMIT=20]
     */
    public static final int app_launch_dialog_ok=0x7f1101e5;
    /**
     * Category name for App Launch
     */
    public static final int app_launch_domain_links_title=0x7f1101e6;
    /**
     * Footer for Open by default. [CHAR LIMIT=NONE]
     */
    public static final int app_launch_footer=0x7f1101e7;
    /**
     * Preference title for Links to open in this app. [CHAR LIMIT=60]
     */
    public static final int app_launch_links_category=0x7f1101e8;
    public static final int app_launch_open_domain_urls_summary=0x7f1101e9;
    public static final int app_launch_open_domain_urls_title=0x7f1101ea;
    public static final int app_launch_other_defaults_title=0x7f1101eb;
    public static final int app_launch_supported_domain_urls_title=0x7f1101ec;
    /**
     * Add button for supported links dialog. [CHAR LIMIT=20]
     */
    public static final int app_launch_supported_links_add=0x7f1101ed;
    /**
     * The subtext of the link title in supported links dialog. [CHAR LIMIT=30]
     */
    public static final int app_launch_supported_links_subtext=0x7f1101ee;
    /**
     * Preference title for Supported links open in this app. [CHAR LIMIT=60]
     */
    public static final int app_launch_top_intro_message=0x7f1101ef;
    /**
     * Info icon description of the verified links. [CHAR LIMIT=NONE]
     */
    public static final int app_launch_verified_links_info_description=0x7f1101f0;
    /**
     * Explanation that the app that will ALWAYS be launched to open web links to domains that it understands
     */
    public static final int app_link_open_always=0x7f1101f1;
    /**
     * Explanation that the user will be asked whether to launch the app to open web links to domains that it understands
     */
    public static final int app_link_open_ask=0x7f1101f2;
    /**
     * Explanation that the app that will NEVER be launched to open web links to domains that it understands
     */
    public static final int app_link_open_never=0x7f1101f3;
    /**
     * Label for app list of memory use [CHAR LIMIT=30]
     */
    public static final int app_list_memory_use=0x7f1101f4;
    /**
     * Label for None item in AppListPreference [CHAR LIMIT=40]
     */
    public static final int app_list_preference_none=0x7f1101f5;
    /**
     * [CHAR LIMIT=NONE] Label for amount of memory use
     */
    public static final int app_memory_use=0x7f1101f6;
    /**
     * label for application name
     */
    public static final int app_name_label=0x7f1101f7;
    /**
     * Template for concatenating two app names
     */
    public static final int app_names_concatenation_template_2=0x7f1101f8;
    /**
     * Template for concatenating three app names
     */
    public static final int app_names_concatenation_template_3=0x7f1101f9;
    /**
     * Manage applications, individual application dialog box message. Shown when the user somehow got into a state where it wants to manage some app that isn't found.
     */
    public static final int app_not_found_dlg_text=0x7f1101fa;
    /**
     * Manage applications, individual application dialog box title. Shown when the user somehow got into a state where it wants to manage some app that isn't found.
     */
    public static final int app_not_found_dlg_title=0x7f1101fb;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Block option description
     */
    public static final int app_notification_block_summary=0x7f1101fc;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Block option title
     */
    public static final int app_notification_block_title=0x7f1101fd;
    /**
     * notification preference for app specific notification settings [CHAR LIMIT=80]
     */
    public static final int app_notification_field=0x7f1101fe;
    /**
     * notification preference summary for app specific notification settings [CHAR LIMIT=120]
     */
    public static final int app_notification_field_summary=0x7f1101ff;
    /**
     * [CHAR LIMIT=150] App notification settings: App notifications Importance title
     */
    public static final int app_notification_importance_title=0x7f110200;
    /**
     * [CHAR LIMIT=45] App notification listing summary, blocked apps
     */
    public static final int app_notification_listing_summary_zero=0x7f110201;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Override DND option description
     */
    public static final int app_notification_override_dnd_summary=0x7f110202;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Override DND option title
     */
    public static final int app_notification_override_dnd_title=0x7f110203;
    /**
     * Link to an apps notification settings [CHAR LIMIT=50]
     */
    public static final int app_notification_preferences=0x7f110204;
    /**
     * [CHAR LIMIT=20] Notification settings: App notifications row summary when allowed
     */
    public static final int app_notification_row_banned=0x7f110205;
    /**
     * [CHAR LIMIT=40] Notification settings: App notifications row summary when high priority
     */
    public static final int app_notification_row_priority=0x7f110206;
    /**
     * [CHAR LIMIT=20] Notification settings: App notifications row summary when sensitive
     */
    public static final int app_notification_row_sensitive=0x7f110207;
    public static final int app_notification_sound_timeout_summary_template=0x7f110208;
    /**
     * Notification sound timeout
     */
    public static final int app_notification_sound_timeout_title=0x7f110209;
    public static final int app_notification_sound_timeout_value_10_seconds=0x7f11020a;
    public static final int app_notification_sound_timeout_value_15_minutes=0x7f11020b;
    public static final int app_notification_sound_timeout_value_1_minute=0x7f11020c;
    public static final int app_notification_sound_timeout_value_30_minutes=0x7f11020d;
    public static final int app_notification_sound_timeout_value_30_seconds=0x7f11020e;
    public static final int app_notification_sound_timeout_value_5_minutes=0x7f11020f;
    public static final int app_notification_sound_timeout_value_none=0x7f110210;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Visibility override option title
     */
    public static final int app_notification_visibility_override_title=0x7f110211;
    /**
     * [CHAR LIMIT=20] Notification settings: App notifications dialog dismiss button caption
     */
    public static final int app_notifications_dialog_done=0x7f110212;
    /**
     * [CHAR LIMIT=NONE] Text appearing when app notifications are off
     */
    public static final int app_notifications_off_desc=0x7f110213;
    /**
     * Notification Settings: Title for the option managing notifications per application. [CHAR LIMIT=30]
     */
    public static final int app_notifications_title=0x7f110214;
    /**
     * [CHAR LIMIT=NONE] Time label for an operation that has never executed.
     */
    public static final int app_ops_never_used=0x7f110215;
    /**
     * [CHAR LIMIT=NONE] Time label for an operation that is currently running.
     */
    public static final int app_ops_running=0x7f110216;
    /**
     * Preference summary text for an app when it is allowed for a permission. [CHAR LIMIT=45]
     */
    public static final int app_permission_summary_allowed=0x7f110217;
    /**
     * Preference summary text for an app when it is disallowed for a permission. [CHAR LIMIT=45]
     */
    public static final int app_permission_summary_not_allowed=0x7f110218;
    /**
     * Label for list that shows all permissions
     */
    public static final int app_permissions=0x7f110219;
    /**
     * Summary of permissions currently granted to apps [CHAR LIMIT=60]
     */
    public static final int app_permissions_summary=0x7f11021a;
    /**
     * Summary of permissions currently granted to apps [CHAR LIMIT=60]
     */
    public static final int app_permissions_summary_more=0x7f11021b;
    /**
     * [CHAR LIMIT=none] Screen pinning introduction
     */
    public static final int app_pinning_intro=0x7f11021c;
    /**
     * Title for app pinning main switch. [CHAR LIMIT=50]
     */
    public static final int app_pinning_main_switch_title=0x7f11021d;
    /**
     * UI debug setting: limit number of running background processes [CHAR LIMIT=25]
     */
    public static final int app_process_limit_title=0x7f11021e;
    /**
     * Preference label for custom restrictions [CHAR LIMIT=35]
     */
    public static final int app_restrictions_custom_label=0x7f11021f;
    /**
     * Summary text for apps that are allowed to access accounts from the primary user [CHAR LIMIT=none]
     */
    public static final int app_sees_restricted_accounts=0x7f110220;
    /**
     * Summary for a case when app entries that are controlled by another entry and app can access user accounts [CHAR LIMIT=none]
     */
    public static final int app_sees_restricted_accounts_and_controlled_by=0x7f110221;
    /**
     * [CHAR LIMIT=NONE] App notification settings: link to app notification settings
     */
    public static final int app_settings_link=0x7f110222;
    /**
     * Title of button for application usage cycle preferences [CHAR LIMIT=40]
     */
    public static final int app_usage_cycle=0x7f110223;
    /**
     * Link to the apps page for app usage settings [CHAR LIMIT=45]
     */
    public static final int app_usage_preference=0x7f110224;
    public static final int appbar_scrolling_view_behavior=0x7f110225;
    /**
     * Manage applications, individual application info screen title. For example, if they click on "Browser" in "Manage applications", the title of the next screen will be this
     */
    public static final int application_info_label=0x7f110226;
    /**
     * Application Restrictions screen title [CHAR LIMIT=45]
     */
    public static final int application_restrictions=0x7f110227;
    /**
     * Manage applications, individual application info screen, label under Storage heading. The amount of space taken up by the application itself (for example, the java compield files and things like that)
     */
    public static final int application_size_label=0x7f110228;
    /**
     * Applications settings title, on main settings screen. If clicked, the user is taken to a settings screen full of application settings
     */
    public static final int applications_settings=0x7f110229;
    /**
     * Applications settings screen heading. The header for the Application settings screen.
     */
    public static final int applications_settings_header=0x7f11022a;
    /**
     * Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen.
     * Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. This is the string to use for devices without a keyboard (so for example, there is no "Quick launch" settings here since that feature requires a keyboard)
     */
    public static final int applications_settings_summary=0x7f11022b;
    /**
     * Button label for generic apply action [CHAR LIMIT=20]
     */
    public static final int apply=0x7f11022c;
    /**
     * Title for setting tile leading to Apps settings [CHAR LIMIT=40]
     */
    public static final int apps_dashboard_title=0x7f11022d;
    /**
     * Title of app storage screen [CHAR LIMIT=30]
     */
    public static final int apps_storage=0x7f11022e;
    /**
     * Summary of apps [CHAR LIMIT=NONE]
     */
    public static final int apps_summary=0x7f11022f;
    /**
     * Example summary of apps used in Setup Wizard preview screen [CHAR LIMIT=NONE]
     */
    public static final int apps_summary_example=0x7f110230;
    /**
     * Applications with restrictions header [CHAR LIMIT=45]
     */
    public static final int apps_with_restrictions_header=0x7f110231;
    /**
     * Applicaitons with restrictions - settings button [CHAR LIMIT=30]
     */
    public static final int apps_with_restrictions_settings_button=0x7f110232;
    /**
     * Debugging developer settings: Enable ART verifier for Debuggable Apps [CHAR LIMIT=NONE]
     */
    public static final int art_verifier_for_debuggable_summary=0x7f110233;
    /**
     * Debugging developer settings: Enable ART verifier for Debuggable Apps [CHAR LIMIT=67]
     */
    public static final int art_verifier_for_debuggable_title=0x7f110234;
    /**
     * Manage applications, individual application screen, checkbox to control asking for compatibility mode.
     */
    public static final int ask_compatibility=0x7f110235;
    /**
     * Summary for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=NONE]
     */
    public static final int assist_access_context_summary=0x7f110236;
    /**
     * Title for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=40]
     */
    public static final int assist_access_context_title=0x7f110237;
    /**
     * Summary for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=NONE]
     */
    public static final int assist_access_screenshot_summary=0x7f110238;
    /**
     * Title for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=40]
     */
    public static final int assist_access_screenshot_title=0x7f110239;
    /**
     * Title for Assist and voice input settings [CHAR LIMIT=30]
     */
    public static final int assist_and_voice_input_title=0x7f11023a;
    /**
     * Summary for the "flash" preference to determine whether a flash is shown on screen when an assistant accesses the contents of the screeen. [CHAR LIMIT=NONE]
     */
    public static final int assist_flash_summary=0x7f11023b;
    /**
     * Title for the "flash" preference to determine whether a flash is shown on screen when an assistant accesses the contents of the screeen. [CHAR LIMIT=40]
     */
    public static final int assist_flash_title=0x7f11023c;
    /**
     * Footer text in the manage assist screen. [CHAR LIMIT=NONE]
     */
    public static final int assist_footer=0x7f11023d;
    /**
     * Title text for the assist gesture [CHAR LIMIT=60] DO NOT TRANSLATE
     */
    public static final int assist_gesture_title=0x7f11023e;
    /**
     * Summary text for swiping from bottom corners to invoke the digital assistant app. [CHAR LIMIT=NONE]
     */
    public static final int assistant_corner_gesture_summary=0x7f11023f;
    /**
     * Title text for swiping from bottom corners to invoke the digital assistant app. [CHAR LIMIT=60]
     */
    public static final int assistant_corner_gesture_title=0x7f110240;
    /**
     * Title for setting category that is shown to enable invoking digital assistant with swipe. [CHAR LIMIT=60]
     */
    public static final int assistant_gesture_category_title=0x7f110241;
    /**
     * [CHAR_LIMIT=NONE] Warning message about security implications of setting an assistant,
     * displayed as a dialog message when the user selects an assistant.
     */
    public static final int assistant_security_warning=0x7f110242;
    /**
     * Label for the button to acknowledge assistant security implications. [CHAR LIMIT=30]
     */
    public static final int assistant_security_warning_agree=0x7f110243;
    /**
     * Label for the button to bail out assistant security implications. [CHAR LIMIT=30]
     */
    public static final int assistant_security_warning_disagree=0x7f110244;
    /**
     * [CHAR_LIMIT=45] Title of the security warning dialog for setting an assitant
     */
    public static final int assistant_security_warning_title=0x7f110245;
    /**
     * Security & location settings screen, setting check box label if Assisted GPS should be enabled
     */
    public static final int assisted_gps=0x7f110246;
    /**
     * Security & location settings screen, setting summary when Assisted GPS check box is clear
     */
    public static final int assisted_gps_disabled=0x7f110247;
    /**
     * Security & location settings screen, setting summary when Assisted GPS check box is selected
     */
    public static final int assisted_gps_enabled=0x7f110248;
    /**
     * Configure Notifications: setting summary [CHAR LIMIT=200]
     */
    public static final int asst_capabilities_actions_replies_summary=0x7f110249;
    /**
     * Configure Notifications: setting title [CHAR LIMIT=80]
     */
    public static final int asst_capabilities_actions_replies_title=0x7f11024a;
    /**
     * Configure Notifications: setting summary [CHAR LIMIT=200]
     */
    public static final int asst_capability_prioritizer_summary=0x7f11024b;
    /**
     * Configure Notifications: setting title [CHAR LIMIT=80 BACKUP_MESSAGE_ID=6691908606916292167]
     */
    public static final int asst_capability_prioritizer_title=0x7f11024c;
    /**
     * Configure Notifications: setting summary [CHAR LIMIT=200]
     */
    public static final int asst_capability_ranking_summary=0x7f11024d;
    /**
     * Configure Notifications: setting title [CHAR LIMIT=80 BACKUP_MESSAGE_ID=6691908606916292167]
     */
    public static final int asst_capability_ranking_title=0x7f11024e;
    /**
     * Configure Notifications: setting summary [CHAR LIMIT=200]
     */
    public static final int asst_feedback_indicator_summary=0x7f11024f;
    /**
     * Configure Notifications: setting title [CHAR LIMIT=80 BACKUP_MESSAGE_ID=6691908606916292167]
     */
    public static final int asst_feedback_indicator_title=0x7f110250;
    /**
     * Configure Notifications: setting summary [CHAR LIMIT=200]
     */
    public static final int asst_importance_reset_summary=0x7f110251;
    /**
     * Configure Notifications: setting title [CHAR LIMIT=80]
     */
    public static final int asst_importance_reset_title=0x7f110252;
    /**
     * Title for the accessibility preference category of audio services and settings. [CHAR LIMIT=50]
     */
    public static final int audio_category_title=0x7f110253;
    /**
     * Sound settings screen, setting option name checkbox to enable/disable audio recording features that improve audio recording in noisy environments
     */
    public static final int audio_record_proc_title=0x7f110254;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers default brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_default_title=0x7f110255;
    /**
     * Description about the feature adaptive brightness
     */
    public static final int auto_brightness_description=0x7f110256;
    /**
     * Adaptive brightness settings screen, disclaimer that explains in more detail about how adaptive brightness works [CHAR LIMIT=150]
     */
    public static final int auto_brightness_disclaimer=0x7f110257;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers high brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_high_title=0x7f110258;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers low brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_low_title=0x7f110259;
    /**
     * Adaptive brightness settings screen, setting option summary to disable adaptive brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_off_summary=0x7f11025a;
    /**
     * Adaptive brightness settings screen, setting option to disable adaptive brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_off_title=0x7f11025b;
    public static final int auto_brightness_one_shot_summary=0x7f11025c;
    /**
     * One shot automatic brightness
     */
    public static final int auto_brightness_one_shot_title=0x7f11025d;
    /**
     * Adaptive brightness settings screen, subtitle [CHAR LIMIT=100]
     */
    public static final int auto_brightness_subtitle=0x7f11025e;
    /**
     * Summary about the feature adaptive brightness [CHAR LIMIT=NONE]
     */
    public static final int auto_brightness_summary=0x7f11025f;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is the default [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_default=0x7f110260;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is high [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_high=0x7f110261;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is low [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_low=0x7f110262;
    /**
     * Setting option summary when adaptive brightness is off [CHAR LIMIT=NONE]
     */
    public static final int auto_brightness_summary_off=0x7f110263;
    /**
     * Setting option summary when adaptive brightness is on [CHAR LIMIT=NONE]
     */
    public static final int auto_brightness_summary_on=0x7f110264;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is very high [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_very_high=0x7f110265;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is very low [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_very_low=0x7f110266;
    /**
     * Sound & display settings screen, setting option name to enable adaptive brightness [CHAR LIMIT=30]
     */
    public static final int auto_brightness_title=0x7f110267;
    /**
     * Adaptive brightness settings screen, setting option summary to enable adaptive brightness when user prefers very high brightness.
     * Meant to make it clear that preferring very high brightness uses more battery. [CHAR LIMIT=100]
     */
    public static final int auto_brightness_very_high_summary=0x7f110268;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers very high brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_very_high_title=0x7f110269;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers very low brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_very_low_title=0x7f11026a;
    /**
     * On Text & language settings screen, setting option name.  title of the setting to enable autocapitalization of entered text.  For example, after the users finish a sentence, the next letter they type will automatically be capitalized. [CHAR LIMIT=25]
     */
    public static final int auto_caps=0x7f11026b;
    /**
     * On Text & language settings screen, setting summary. Summary for the Auto-cap setting. [CHAR LIMIT=100]
     */
    public static final int auto_caps_summary=0x7f11026c;
    /**
     * Manage applications, individual application screen, text under Launch by default heading if the app is NOT a default for actions
     */
    public static final int auto_launch_disable_text=0x7f11026d;
    /**
     * Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app is set as a default for some actions.
     */
    public static final int auto_launch_enable_text=0x7f11026e;
    /**
     * Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions
     */
    public static final int auto_launch_label=0x7f11026f;
    /**
     * Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions *and* whether the app was given permission by the user to create widgets
     */
    public static final int auto_launch_label_generic=0x7f110270;
    /**
     * On Text & language settings screen, setting option name. title of the setting to enable automatic punctuation of entered text.  for example, it will change an entered "youre" to "you're".
     */
    public static final int auto_punctuate=0x7f110271;
    /**
     * On Text & language settings screen, setting summary for the Auto-punctuate setting.
     */
    public static final int auto_punctuate_summary=0x7f110272;
    /**
     * On Text & language settings screen, setting option name. title of the setting to enable autoreplace of entered text. auto replace is a feature that will automatically correct mistyped words.
     */
    public static final int auto_replace=0x7f110273;
    /**
     * On Text & language settings screen, setting summary.  This is the summary for the "Auto-replace" setting.
     */
    public static final int auto_replace_summary=0x7f110274;
    /**
     * Summary text of the "automatic restore" setting
     */
    public static final int auto_restore_summary=0x7f110275;
    /**
     * Auto-restore menu title
     */
    public static final int auto_restore_title=0x7f110276;
    /**
     * Description feature's privacy sensitive details to make sure users understand what feature users, what it saves/sends etc [CHAR LIMIT=NONE]
     */
    public static final int auto_rotate_camera_lock_summary=0x7f110277;
    /**
     * auto_rotate settings screen, title about the camera privacy lock enabled [CHAR LIMIT=NONE]
     */
    public static final int auto_rotate_camera_lock_title=0x7f110278;
    /**
     * auto_rotate settings screen, text for the camera permission button [CHAR LIMIT=NONE]
     */
    public static final int auto_rotate_manage_permission_button=0x7f110279;
    /**
     * Sound & display settings screen, face-based rotation check box label [CHAR LIMIT=30]
     */
    public static final int auto_rotate_option_face_based=0x7f11027a;
    /**
     * Sound & display settings screen, locked rotation check box label [CHAR LIMIT=30]
     */
    public static final int auto_rotate_option_off=0x7f11027b;
    /**
     * Sound & display settings screen, accelerometer-based rotation check box label [CHAR LIMIT=30]
     */
    public static final int auto_rotate_option_on=0x7f11027c;
    /**
     * Auto rotate switchbar title. [CHAR_LIMIT=NONE]
     */
    public static final int auto_rotate_settings_primary_switch_title=0x7f11027d;
    /**
     * auto_rotate settings screen, title about the required permission is missing [CHAR LIMIT=NONE]
     */
    public static final int auto_rotate_summary_no_permission=0x7f11027e;
    /**
     * SmartAutoRotatePreferenceFragment settings screen, face-based rotation switch label [CHAR LIMIT=30]
     */
    public static final int auto_rotate_switch_face_based=0x7f11027f;
    /**
     * Switch summary to enable auto sync account [CHAR LIMIT=NONE]
     */
    public static final int auto_sync_account_summary=0x7f110280;
    /**
     * Switch label to enable auto sync account [CHAR LIMIT=60]
     */
    public static final int auto_sync_account_title=0x7f110281;
    /**
     * Switch label to enable auto sync personal account [CHAR LIMIT=60]
     */
    public static final int auto_sync_personal_account_title=0x7f110282;
    /**
     * Switch label to enable auto sync work account [CHAR LIMIT=60]
     */
    public static final int auto_sync_work_account_title=0x7f110283;
    /**
     * Preference label for choosing auto-fill service. [CHAR LIMIT=60]
     */
    public static final int autofill_app=0x7f110284;
    /**
     * Message of the warning dialog for setting the auto-fill app. [CHAR_LIMIT=NONE]
     */
    public static final int autofill_confirmation_message=0x7f110285;
    /**
     * Keywords for the auto-fill feature. [CHAR LIMIT=NONE]
     */
    public static final int autofill_keywords=0x7f110286;
    /**
     * UI debug setting: logging level for Android Autofill [CHAR LIMIT=25]
     */
    public static final int autofill_logging_level_title=0x7f110287;
    /**
     * Title of developer options to set the maximum number of requests per session [CHAR LIMIT=60]
     */
    public static final int autofill_max_partitions=0x7f110288;
    /**
     * Title of developer options to set the maximum number of visible datasets in the autofill UX [CHAR LIMIT=60]
     */
    public static final int autofill_max_visible_datasets=0x7f110289;
    /**
     * Preference category for showing auto-fill services with saved passwords. [CHAR LIMIT=60]
     */
    public static final int autofill_passwords=0x7f11028a;
    /**
     * DO NOT TRANSLATE Summary placeholder for when the passwords count is still loading or is
     * unavailable.
     */
    public static final int autofill_passwords_count_placeholder=0x7f11028b;
    /**
     * Reset all autofill developer options to their default values.[CHAR_LIMIT=60]
     */
    public static final int autofill_reset_developer_options=0x7f11028c;
    /**
     * Toast message shown when autofill_reset_developer_options has been performed. [CHAR_LIMIT=none]
     */
    public static final int autofill_reset_developer_options_complete=0x7f11028d;
    /**
     * Sound & display settings screen, setting option name to change whether the screen adjusts automatically based on lighting conditions
     */
    public static final int automatic_brightness=0x7f11028e;
    /**
     * Warning when activating the automatic storage manager on legacy devices. [CHAR LIMIT=NONE]
     */
    public static final int automatic_storage_manager_activation_warning=0x7f11028f;
    /**
     * Dropdown preference title for dropdown describing how many days of data to retain.
     */
    public static final int automatic_storage_manager_days_title=0x7f110290;
    /**
     * Warning for when the automatic storage manager is turned off. [CHAR LIMIT=NONE]
     */
    public static final int automatic_storage_manager_deactivation_warning=0x7f110291;
    public static final int automatic_storage_manager_freed_bytes=0x7f110292;
    /**
     * Preference title for the automatic storage manager toggle. [CHAR LIMIT=60]
     */
    public static final int automatic_storage_manager_preference_title=0x7f110293;
    /**
     * Used in the storage manager settings screen to control turning on/off the feature entirely [CHAR LIMIT=60]
     */
    public static final int automatic_storage_manager_primary_switch_title=0x7f110294;
    /**
     * Used as title on the automatic storage manager settings. [CHAR LIMIT=60]
     */
    public static final int automatic_storage_manager_settings=0x7f110295;
    /**
     * Used as wall of text to describe the feature. [CHAR LIMIT=NONE]
     */
    public static final int automatic_storage_manager_text=0x7f110296;
    /**
     * Summary of toggle for whether to enable automatic heap dumps for the system server or not. [CHAR LIMIT=NONE]
     */
    public static final int automatic_system_heap_dump_summary=0x7f110297;
    /**
     * Title of toggle for whether to enable automatic heap dumps for the system server or not. [CHAR LIMIT=NONE]
     */
    public static final int automatic_system_heap_dump_title=0x7f110298;
    /**
     * Status message of Wi-Fi when an available network is a carrier network. [CHAR LIMIT=NONE]
     */
    public static final int available_via_carrier=0x7f110299;
    /**
     * Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE]
     */
    public static final int available_via_passpoint=0x7f11029a;
    /**
     * Title for the 'available virtual keyboard' preference sub-screen. [CHAR LIMIT=35]
     */
    public static final int available_virtual_keyboard_category=0x7f11029b;
    /**
     * Label for average memory use section [CHAR LIMIT=30]
     */
    public static final int average_memory_use=0x7f11029c;
    /**
     * Label for average memory usage of device [CHAR LIMIT=25]
     */
    public static final int average_used=0x7f11029d;
    /**
     * CPU awake time title
     */
    public static final int awake=0x7f11029e;
    /**
     * Summary for preference when Bedtime mode is on [CHAR LIMIT=NONE]
     */
    public static final int aware_summary_when_bedtime_on=0x7f11029f;
    /**
     * Message for the dialog that explains how increasing sensitivity can affect gestures along the edges. [CHAR LIMIT=NONE]
     */
    public static final int back_sensitivity_dialog_message=0x7f1102a0;
    /**
     * Title for the dialog that is shown to adjust the back sensitivity [CHAR LIMIT=60]
     */
    public static final int back_sensitivity_dialog_title=0x7f1102a1;
    /**
     * Dialog message when app can't been restricted because it is not optimized [CHAR_LIMIT=120]
     */
    public static final int background_activity_disabled_dialog_text=0x7f1102a2;
    /**
     * Summary for the background activity [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary=0x7f1102a3;
    /**
     * TODO: Pending UX review. Summary for the background activity when it is allowlisted [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary_allowlisted=0x7f1102a4;
    /**
     * Summary for the background activity when it is disabled [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary_disabled=0x7f1102a5;
    /**
     * Title for the background activity setting, which allows a user to control whether an app can run in the background [CHAR_LIMIT=40]
     */
    public static final int background_activity_title=0x7f1102a6;
    /**
     * TODO: Pending UX review. Text for the warning dialog to show to the user when limiting background activity for an app
     */
    public static final int background_activity_warning_dialog_text=0x7f1102a7;
    /**
     * TODO: Pending UX review. Title for the warning dialog to show to the user when limiting background activity for an app
     */
    public static final int background_activity_warning_dialog_title=0x7f1102a8;
    /**
     * Settings item title for background check prefs [CHAR LIMIT=35]
     */
    public static final int background_check_pref=0x7f1102a9;
    /**
     * Settings screen title for background check prefs [CHAR LIMIT=35]
     */
    public static final int background_check_title=0x7f1102aa;
    /**
     * Data synchronization settings screen, title of setting that controls whether background data should be used [CHAR LIMIT=30]
     */
    public static final int background_data=0x7f1102ab;
    /**
     * Data synchronization settings screen, message of dialog that confirms the user's unchecking of background data [CHAR LIMIT=200]
     */
    public static final int background_data_dialog_message=0x7f1102ac;
    /**
     * Data synchronization settings screen, title of dialog that confirms the user's unchecking of background data [CHAR LIMIT=20]
     */
    public static final int background_data_dialog_title=0x7f1102ad;
    /**
     * Data synchronization settings screen, summary of setting that controls whether background data should be used [CHAR LIMIT=60]
     */
    public static final int background_data_summary=0x7f1102ae;
    /**
     * Running service details, description for background process.
     */
    public static final int background_process_stop_description=0x7f1102af;
    /**
     * Backup calling summary.  [CHAR LIMIT=100]
     */
    public static final int backup_calling_setting_summary=0x7f1102b0;
    /**
     * Mobile network settings screen, title of Backup calling setting.  [CHAR LIMIT=NONE]
     */
    public static final int backup_calling_settings_title=0x7f1102b1;
    /**
     * Default summary text of the "Configure backup account" setting [CHAR LIMIT=80]
     */
    public static final int backup_configure_account_default_summary=0x7f1102b2;
    /**
     * Configure backup account options menu title [CHAR LIMIT=25]
     */
    public static final int backup_configure_account_title=0x7f1102b3;
    /**
     * Configure backup account menu title [CHAR LIMIT=50]
     */
    public static final int backup_data_management_title=0x7f1102b4;
    /**
     * Summary text of the "back up data" setting
     */
    public static final int backup_data_summary=0x7f1102b5;
    /**
     * Backup data menu title
     */
    public static final int backup_data_title=0x7f1102b6;
    /**
     * Backup disabled summary [CHAR LIMIT=NONE]
     */
    public static final int backup_disabled=0x7f1102b7;
    /**
     * Dialog title for confirmation to erase backup data from server
     */
    public static final int backup_erase_dialog_message=0x7f1102b8;
    /**
     * Dialog title for confirmation to erase backup data from server
     */
    public static final int backup_erase_dialog_title=0x7f1102b9;
    /**
     * Title of the preference informing the user about the backup service being inactive [CHAR LIMIT=50]
     */
    public static final int backup_inactive_title=0x7f1102ba;
    /**
     * Button label for cancelling the new-password operation and retaining the user's previous full-backup password
     */
    public static final int backup_pw_cancel_button_text=0x7f1102bb;
    /**
     * Button label for setting the user's new full-backup password
     */
    public static final int backup_pw_set_button_text=0x7f1102bc;
    /**
     * Backup section title
     */
    public static final int backup_section_title=0x7f1102bd;
    /**
     * Summary for the Backup settings when it is turned off.
     */
    public static final int backup_summary_state_off=0x7f1102be;
    /**
     * Summary for the Backup settings when it is turned on.
     */
    public static final int backup_summary_state_on=0x7f1102bf;
    /**
     * Backup Transport selection settings menu and activity title
     */
    public static final int backup_transport_setting_label=0x7f1102c0;
    public static final int backup_transport_title=0x7f1102c1;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int baseband_version=0x7f1102c2;
    /**
     * Label for app details action
     */
    public static final int battery_action_app_details=0x7f1102c3;
    /**
     * Label for app settings action
     */
    public static final int battery_action_app_settings=0x7f1102c4;
    /**
     * Label for bluetooth settings
     */
    public static final int battery_action_bluetooth=0x7f1102c5;
    /**
     * Label for display settings
     */
    public static final int battery_action_display=0x7f1102c6;
    /**
     * Label for force stop action
     */
    public static final int battery_action_stop=0x7f1102c7;
    /**
     * Label for wifi settings
     */
    public static final int battery_action_wifi=0x7f1102c8;
    /**
     * Description for battery usage background time for an app, i.e. Active for 30min. Note: ^1 should be used in all translations [CHAR LIMIT=60]
     */
    public static final int battery_active_for=0x7f1102c9;
    /**
     * [CHAR_LIMIT=NONE] Battery app usage section header
     */
    public static final int battery_app_usage_for=0x7f1102ca;
    /**
     * [CHAR_LIMIT=NONE] Battery app usage section header for past 24 hour
     */
    public static final int battery_app_usage_for_past_24=0x7f1102cb;
    /**
     * Summary for auto restriction toggle
     */
    public static final int battery_auto_restriction_summary=0x7f1102cc;
    /**
     * Title for auto restriction toggle
     */
    public static final int battery_auto_restriction_title=0x7f1102cd;
    /**
     * Description for battery background usage time for an app, i.e. 1 hr 15 min background from last full charge. Note: ^1 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_bg_usage=0x7f1102ce;
    /**
     * Description for battery background usage time for an app, i.e. 1 hr 15 min background for past 24 hr. Note: ^1 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_bg_usage_24hr=0x7f1102cf;
    /**
     * Description for battery background usage time is less than a minute for an app from last full charge [CHAR LIMIT=120]
     */
    public static final int battery_bg_usage_less_minute=0x7f1102d0;
    /**
     * Description for battery background usage time is less than a minute for an app for past 24 hr [CHAR LIMIT=120]
     */
    public static final int battery_bg_usage_less_minute_24hr=0x7f1102d1;
    /**
     * Description for battery background usage time is less than a minute in a time period for an app, i.e. Background less than a minute for 12 am-2 am. Note: ^1 should be used in all translations[CHAR LIMIT=120]
     */
    public static final int battery_bg_usage_less_minute_with_period=0x7f1102d2;
    /**
     * Description for battery background usage time in a time period for an app, i.e. 1 hr 15 min background for 12 am-2 am. Note: ^1 and ^2 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_bg_usage_with_period=0x7f1102d3;
    /**
     * [CHAR LIMIT=50] Description for power consumed by applications
     */
    public static final int battery_desc_apps=0x7f1102d4;
    /**
     * Description for bluetooth power consumption detail
     */
    public static final int battery_desc_bluetooth=0x7f1102d5;
    /**
     * [CHAR_LIMIT=NONE] Description for power consumed by the camera
     */
    public static final int battery_desc_camera=0x7f1102d6;
    /**
     * Description for power consumed by display
     */
    public static final int battery_desc_display=0x7f1102d7;
    /**
     * [CHAR_LIMIT=NONE] Description for power consumed by the flashlight
     */
    public static final int battery_desc_flashlight=0x7f1102d8;
    /**
     * [CHAR LIMIT=50] Description for over-counted power use
     */
    public static final int battery_desc_overcounted=0x7f1102d9;
    /**
     * Description for cell radio detail
     */
    public static final int battery_desc_radio=0x7f1102da;
    /**
     * Description for standby detail
     */
    public static final int battery_desc_standby=0x7f1102db;
    /**
     * [CHAR LIMIT=50] Description for unaccounted power use
     */
    public static final int battery_desc_unaccounted=0x7f1102dc;
    /**
     * [CHAR LIMIT=50] Description for power consumed by users
     */
    public static final int battery_desc_users=0x7f1102dd;
    /**
     * Description for voice call detail
     */
    public static final int battery_desc_voice=0x7f1102de;
    /**
     * Description for wifi connectivity
     */
    public static final int battery_desc_wifi=0x7f1102df;
    /**
     * Title for text that shows the amount of time an app has been running while in the background. [CHAR LIMIT=80]
     */
    public static final int battery_detail_background=0x7f1102e0;
    /**
     * Title for text that shows the amount of time an app has been running while in the foreground. [CHAR LIMIT=80]
     */
    public static final int battery_detail_foreground=0x7f1102e1;
    /**
     * Title for the battery usage group, which means all the battery data are calculated 'since full charge' [CHAR LIMIT=40]
     */
    public static final int battery_detail_info_title=0x7f1102e2;
    /**
     * Title for the battery management group [CHAR LIMIT=40]
     */
    public static final int battery_detail_manage_title=0x7f1102e3;
    /**
     * Title for battery usage amount by this app. [CHAR LIMIT=80]
     */
    public static final int battery_detail_power_usage=0x7f1102e4;
    /**
     * Description for battery usage detail information since last full charge. [CHAR LIMIT=120]
     */
    public static final int battery_detail_since_full_charge=0x7f1102e5;
    /**
     * Activity title for battery usage details for an app. or power consumer
     */
    public static final int battery_details_title=0x7f1102e6;
    /**
     * Description for text in battery footer. [CHAR LIMIT=NONE]
     */
    public static final int battery_footer_summary=0x7f1102e7;
    /**
     * Title for usage time that full charge lasts. [CHAR LIMIT=60]
     */
    public static final int battery_full_charge_last=0x7f1102e8;
    /**
     * Title to display the battery percentage. [CHAR LIMIT=24]
     */
    public static final int battery_header_title_alternate=0x7f1102e9;
    /**
     * [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging from an unknown source.
     */
    public static final int battery_info_status_charging=0x7f1102ea;
    /**
     * [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging speed is fast.
     */
    public static final int battery_info_status_charging_fast=0x7f1102eb;
    /**
     * [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging speed is slow.
     */
    public static final int battery_info_status_charging_slow=0x7f1102ec;
    /**
     * [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging wirelessly.
     */
    public static final int battery_info_status_charging_wireless=0x7f1102ed;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_discharging=0x7f1102ee;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_full=0x7f1102ef;
    /**
     * Battery Info screen. Value for a status item. A state which device is connected with any charger(e.g. USB, Adapter or Wireless) but not charging yet. Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_not_charging=0x7f1102f0;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_unknown=0x7f1102f1;
    /**
     * Title for usage time since last full charge. [CHAR LIMIT=60]
     */
    public static final int battery_last_full_charge=0x7f1102f2;
    /**
     * Phone info screen, section titles:
     */
    public static final int battery_level_title=0x7f1102f3;
    /**
     * Summary for battery manager when it is off
     */
    public static final int battery_manager_off=0x7f1102f4;
    /**
     * Summary for battery manager when it is on
     */
    public static final int battery_manager_summary=0x7f1102f5;
    /**
     * Summary for battery manager when it is on. [CHAR LIMIT=NONE]
     */
    public static final int battery_manager_summary_unsupported=0x7f1102f6;
    /**
     * Glyph to be overlaid atop the battery when the level is extremely low. Do not translate.
     */
    public static final int battery_meter_very_low_overlay_symbol=0x7f1102f7;
    /**
     * Accessibility description for battery missing link. [CHAR LIMIT=NONE]
     */
    public static final int battery_missing_link_a11y_message=0x7f1102f8;
    /**
     * Help text if battery is not present. [CHAR LIMIT=NONE]
     */
    public static final int battery_missing_link_message=0x7f1102f9;
    /**
     * Summary for top level battery tile if battery is not present. [CHAR LIMIT=NONE]
     */
    public static final int battery_missing_message=0x7f1102fa;
    /**
     * [CHAR LIMIT=NONE] Description for unaccounted power use
     */
    public static final int battery_msg_unaccounted=0x7f1102fb;
    /**
     * Description for no any battery usage from last full charge [CHAR LIMIT=120]
     */
    public static final int battery_not_usage=0x7f1102fc;
    /**
     * Description for no any battery usage for past 24 hr [CHAR LIMIT=120]
     */
    public static final int battery_not_usage_24hr=0x7f1102fd;
    /**
     * Description for percentage of battery usage for an app, i.e. Screen: 30% of overall battery. [CHAR LIMIT=60]
     */
    public static final int battery_overall_usage=0x7f1102fe;
    /**
     * [CHAR_LIMIT=40] Battery percentage: Title
     */
    public static final int battery_percentage=0x7f1102ff;
    /**
     * [CHAR_LIMIT=NONE] Battery percentage: Description for preference
     */
    public static final int battery_percentage_description=0x7f110300;
    /**
     * Battery saver: Label for feature, title + menu item [CHAR_LIMIT=40]
     */
    public static final int battery_saver=0x7f110301;
    /**
     * Battery saver: Label for preference to indicate there is no battery saver schedule [CHAR_LIMIT=40]
     */
    public static final int battery_saver_auto_no_schedule=0x7f110302;
    /**
     * Battery saver: Label for preference to indicate there is a percentage based schedule [CHAR_LIMIT=40]
     */
    public static final int battery_saver_auto_percentage=0x7f110303;
    /**
     * Battery saver: Label for seekbar to change battery saver threshold [CHAR_LIMIT=40]
     */
    public static final int battery_saver_auto_percentage_summary=0x7f110304;
    /**
     * Battery saver: Label for preference to indicate there is a routine based schedule [CHAR_LIMIT=40]
     */
    public static final int battery_saver_auto_routine=0x7f110305;
    /**
     * Battery saver: Summary for preference to describe what is meant by a routine based schedule [CHAR_LIMIT=NONE]
     */
    public static final int battery_saver_auto_routine_summary=0x7f110306;
    /**
     * Battery saver: Label for preference to turn on battery saver automatically when battery is low [CHAR_LIMIT=40]
     */
    public static final int battery_saver_auto_title=0x7f110307;
    /**
     * Battery saver: Label for button that will turn off battery saver. [CHAR LIMIT=30]
     */
    public static final int battery_saver_button_turn_off=0x7f110308;
    /**
     * Battery saver: Label for button that will turn on battery saver. [CHAR LIMIT=30]
     */
    public static final int battery_saver_button_turn_on=0x7f110309;
    /**
     * Accessibility description for battery saver learn more link [CHAR LIMIT=NONE]
     */
    public static final int battery_saver_link_a11y=0x7f11030a;
    /**
     * Title for battery saver main switch preferences. [CHAR LIMIT=50]
     */
    public static final int battery_saver_main_switch_title=0x7f11030b;
    /**
     * Used in the Battery Saver settings screen to control turning on/off the feature entirely
     */
    public static final int battery_saver_master_switch_title=0x7f11030c;
    /**
     * Summary of battery saver when it is off and scheduled [CHAR LIMIT=NONE]
     */
    public static final int battery_saver_off_scheduled_summary=0x7f11030d;
    /**
     * Summary of battery saver when it is off and scheduled [CHAR LIMIT=NONE]
     */
    public static final int battery_saver_off_summary=0x7f11030e;
    /**
     * Summary of battery saver when on [CHAR LIMIT=NONE]
     */
    public static final int battery_saver_on_summary=0x7f11030f;
    /**
     * Battery saver: Summary for preference to indicate there is a routine based schedule [CHAR_LIMIT=40]
     */
    public static final int battery_saver_pref_auto_routine_summary=0x7f110310;
    /**
     * Battery saver: Title for battery saver schedule screen [CHAR_LIMIT=40]
     */
    public static final int battery_saver_schedule_settings_title=0x7f110311;
    /**
     * Battery saver: Label for seekbar to change battery saver threshold [CHAR_LIMIT=40]
     */
    public static final int battery_saver_seekbar_title=0x7f110312;
    /**
     * Battery saver: Placeholder label for seekbar to change battery saver threshold [CHAR_LIMIT=40]
     */
    public static final int battery_saver_seekbar_title_placeholder=0x7f110313;
    /**
     * Battery Saver: Description for sticky battery saver preference [CHAR_LIMIT=NONE]
     */
    public static final int battery_saver_sticky_description_new=0x7f110314;
    /**
     * Battery Saver: Title for sticky battery saver preference [CHAR_LIMIT=60]
     */
    public static final int battery_saver_sticky_title_new=0x7f110315;
    /**
     * [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: Never
     */
    public static final int battery_saver_turn_on_automatically_never=0x7f110316;
    /**
     * [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: pct% battery
     */
    public static final int battery_saver_turn_on_automatically_pct=0x7f110317;
    /**
     * [CHAR_LIMIT=40] Battery saver: Title for automatic entry option
     */
    public static final int battery_saver_turn_on_automatically_title=0x7f110318;
    /**
     * Battery saver: Summary text displayed below "Turn on" button for battery saver [CHAR_LIMIT=40]
     */
    public static final int battery_saver_turn_on_summary=0x7f110319;
    /**
     * Description for battery screen usage time for an app, i.e. Screen usage 30min. Note: ^1 should be used in all translations [CHAR LIMIT=60]
     */
    public static final int battery_screen_usage=0x7f11031a;
    /**
     * Battery usage since user reset the stats
     */
    public static final int battery_since_reset=0x7f11031b;
    /**
     * Battery usage since unplugged
     */
    public static final int battery_since_unplugged=0x7f11031c;
    /**
     * Description of battery state and remaining time (e.g. Charging rapidly • 1hr 23 min left until full)
     */
    public static final int battery_state_and_duration=0x7f11031d;
    /**
     * [CHAR LIMIT=25] Label for battery stats camera on state graph
     */
    public static final int battery_stats_camera_on_label=0x7f11031e;
    /**
     * [CHAR LIMIT=25] Label for battery stats charging state graph
     */
    public static final int battery_stats_charging_label=0x7f11031f;
    /**
     * Battery usage duration
     */
    public static final int battery_stats_duration=0x7f110320;
    /**
     * [CHAR LIMIT=25] Label for battery stats flashlight on state graph
     */
    public static final int battery_stats_flashlight_on_label=0x7f110321;
    /**
     * [CHAR LIMIT=25] Label for battery stats gps on state graph
     */
    public static final int battery_stats_gps_on_label=0x7f110322;
    /**
     * Battery usage during last unplugged period
     */
    public static final int battery_stats_last_duration=0x7f110323;
    /**
     * Battery usage on battery duration
     */
    public static final int battery_stats_on_battery=0x7f110324;
    /**
     * [CHAR LIMIT=25] Label for battery stats phone signal strength graph
     */
    public static final int battery_stats_phone_signal_label=0x7f110325;
    /**
     * [CHAR LIMIT=25] Label for battery stats screen on state graph
     */
    public static final int battery_stats_screen_on_label=0x7f110326;
    /**
     * [CHAR LIMIT=25] Label for battery stats wake lock state graph
     */
    public static final int battery_stats_wake_lock_label=0x7f110327;
    /**
     * [CHAR LIMIT=25] Label for battery stats wifi running state graph
     */
    public static final int battery_stats_wifi_running_label=0x7f110328;
    /**
     * Phone info screen, section titles:
     */
    public static final int battery_status_title=0x7f110329;
    /**
     * [CHAR LIMIT=100] Suggestion for getting apps to consume less power due to GPS
     */
    public static final int battery_sugg_apps_gps=0x7f11032a;
    /**
     * Suggestion for exploring application info to stop or uninstall
     */
    public static final int battery_sugg_apps_info=0x7f11032b;
    /**
     * Suggestion for getting apps to consume less power
     */
    public static final int battery_sugg_apps_settings=0x7f11032c;
    /**
     * Suggestion for bluetooth
     */
    public static final int battery_sugg_bluetooth_basic=0x7f11032d;
    /**
     * Suggestion for bluetooth headset
     */
    public static final int battery_sugg_bluetooth_headset=0x7f11032e;
    /**
     * Suggestion for reducing display power
     */
    public static final int battery_sugg_display=0x7f11032f;
    /**
     * Suggestion to switch to airplane mode to save power
     */
    public static final int battery_sugg_radio=0x7f110330;
    /**
     * Suggestion for wifi connectivity power drain
     */
    public static final int battery_sugg_wifi=0x7f110331;
    /**
     * Summary for battery Suggestion. [CHAR LIMIT=55]
     */
    public static final int battery_suggestion_summary=0x7f110332;
    /**
     * Title for battery Suggestion. (device) [CHAR LIMIT=46]
     */
    public static final int battery_suggestion_title=0x7f110333;
    /**
     * Summary of power usage for an app [CHAR LIMIT=NONE]
     */
    public static final int battery_summary=0x7f110334;
    /**
     * Summary of power usage for an app within past 24 hr[CHAR LIMIT=NONE]
     */
    public static final int battery_summary_24hr=0x7f110335;
    /**
     * [CHAR_LIMIT=NONE] Battery system usage section header
     */
    public static final int battery_system_usage_for=0x7f110336;
    /**
     * [CHAR_LIMIT=NONE] Battery system usage section header for past 24 hour
     */
    public static final int battery_system_usage_for_past_24=0x7f110337;
    /**
     * Message for battery tip dialog to show the status about the battery [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_dialog_message=0x7f110338;
    /**
     * Footer message for battery tip dialog to show the status about the battery [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_dialog_message_footer=0x7f110339;
    /**
     * Message for battery tip dialog to show the battery summary
     */
    public static final int battery_tip_dialog_summary_message=0x7f11033a;
    /**
     * Summary when early heads up is solved [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_early_heads_up_done_summary=0x7f11033b;
    /**
     * Title when early heads up is solved [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_early_heads_up_done_title=0x7f11033c;
    /**
     * Summary for the early hedas up tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_early_heads_up_summary=0x7f11033d;
    /**
     * Title for the early heads up tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_early_heads_up_title=0x7f11033e;
    /**
     * Summary for the battery high usage tip, which presents apps with highest usage [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_high_usage_summary=0x7f11033f;
    /**
     * Title for the battery high usage tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_high_usage_title=0x7f110340;
    /**
     * Message of battery limited temporarily tip. [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_limited_temporarily_dialog_msg=0x7f110341;
    /**
     * Text of battery limited temporarily tip resume charge button. [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_limited_temporarily_dialog_resume_charge=0x7f110342;
    /**
     * Summary for the battery limited temporarily tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_limited_temporarily_summary=0x7f110343;
    /**
     * Title for the battery limited temporarily tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_limited_temporarily_title=0x7f110344;
    /**
     * Summary for the low battery tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_low_battery_summary=0x7f110345;
    /**
     * Title for the low battery tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_low_battery_title=0x7f110346;
    /**
     * Message for battery tip dialog to show the info to restrict the app [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_app_dialog_message=0x7f110347;
    /**
     * OK button for battery tip dialog to show the restrict app list [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_app_dialog_ok=0x7f110348;
    /**
     * Message for battery tip dialog to show the info to restrict the app, below it app list will be shown as a view [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_apps_less_than_5_dialog_message=0x7f110349;
    /**
     * Message for battery tip dialog to show the info to restrict the app, below it app list will be shown as raw string[CHAR LIMIT=NONE]
     */
    public static final int battery_tip_restrict_apps_more_than_5_dialog_message=0x7f11034a;
    /**
     * Summary for the smart battery tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_smart_battery_summary=0x7f11034b;
    /**
     * Title for the smart battery tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_smart_battery_title=0x7f11034c;
    /**
     * Summary for the battery summary tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_summary_summary=0x7f11034d;
    /**
     * Title for the battery summary tip [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_summary_title=0x7f11034e;
    /**
     * CANCEL button for dialog to remove restriction for app [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_unrestrict_app_dialog_cancel=0x7f11034f;
    /**
     * Message for  dialog to show the impact if remove restriction for app [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_unrestrict_app_dialog_message=0x7f110350;
    /**
     * OK button for dialog to remove restriction for app [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_unrestrict_app_dialog_ok=0x7f110351;
    /**
     * Title for dialog to remove restriction for the app [CHAR LIMIT=NONE]
     */
    public static final int battery_tip_unrestrict_app_dialog_title=0x7f110352;
    /**
     * Description for battery total and background usage time for an app, i.e. 1 hr 15 min total • 39 min background from last full charge. Note: ^1 and ^2 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_and_bg_usage=0x7f110353;
    /**
     * Description for battery total and background usage time for an app, i.e. 1 hr 15 min total • 39 min background for past 24 hr. Note: ^1 and ^2 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_and_bg_usage_24hr=0x7f110354;
    /**
     * Description for battery total and background usage time in a time period for an app, i.e. 1 hr 15 min total • 39 min background for 12 am-2 am. Note: ^1, ^2 and ^3 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_and_bg_usage_with_period=0x7f110355;
    /**
     * Description for battery total usage time for an app, i.e. 1 hr 15 min total from last full charge. Note: ^1 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_usage=0x7f110356;
    /**
     * Description for battery total usage time for an app, i.e. 1 hr 15 min total for past 24 hr. Note: ^1 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_24hr=0x7f110357;
    /**
     * Description for battery total usage with background usage time less than a minute for an app, i.e. 1 hr 15 min total • background less than a minute from last full charge. Note: ^1 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_and_bg_less_minute_usage=0x7f110358;
    /**
     * Description for battery total usage with background usage time less than a minute for an app, i.e. 1 hr 15 min total • background less than a minute for past 24 hr. Note: ^1 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_and_bg_less_minute_usage_24hr=0x7f110359;
    /**
     * Description for battery total usage with background usage time less than a minute in a time period for an app, i.e. 1 hr 15 min total • background less than a minute for 12 am-2 am. Note: ^1 and ^2 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_and_bg_less_minute_usage_with_period=0x7f11035a;
    /**
     * Description for battery total usage time is less than a minute for an app from last full charge [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_less_minute=0x7f11035b;
    /**
     * Description for battery total usage time is less than a minute for an app for past 24 hr [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_less_minute_24hr=0x7f11035c;
    /**
     * Description for battery total usage time is less than a minute in a time period for an app, i.e. Total less than a minute for 12 am-2 am. Note: ^1 should be used in all translations[CHAR LIMIT=120]
     */
    public static final int battery_total_usage_less_minute_with_period=0x7f11035d;
    /**
     * Description for battery total usage time in a time period for an app, i.e. 1 hr 15 min total for 12 am-2 am. Note: ^1 and ^2 should be used in all translations [CHAR LIMIT=120]
     */
    public static final int battery_total_usage_with_period=0x7f11035e;
    /**
     * [CHAR_LIMIT=NONE] Battery usage item for total background time less than a minute
     */
    public static final int battery_usage_background_less_than_one_minute=0x7f11035f;
    /**
     * [CHAR_LIMIT=NONE] Accessibility content description for battery chart view.
     */
    public static final int battery_usage_chart=0x7f110360;
    /**
     * [CHAR_LIMIT=NONE] Battery usage main screen chart graph hint
     */
    public static final int battery_usage_chart_graph_hint=0x7f110361;
    /**
     * [CHAR_LIMIT=NONE] Battery usage item for background usage time
     */
    public static final int battery_usage_for_background_time=0x7f110362;
    /**
     * [CHAR_LIMIT=NONE] Battery usage item for total usage time
     */
    public static final int battery_usage_for_total_time=0x7f110363;
    /**
     * [CHAR_LIMIT=NONE] Battery usage main screen footer content
     */
    public static final int battery_usage_screen_footer=0x7f110364;
    /**
     * [CHAR_LIMIT=NONE] Battery usage main screen footer for empty content
     */
    public static final int battery_usage_screen_footer_empty=0x7f110365;
    /**
     * [CHAR_LIMIT=NONE] Battery usage item for total usage time less than a minute
     */
    public static final int battery_usage_total_less_than_one_minute=0x7f110366;
    /**
     * Description for no usage time but have battery usage [CHAR LIMIT=120]
     */
    public static final int battery_usage_without_time=0x7f110367;
    /**
     * Description for battery usage info for an app, i.e. 60% used by facebook. [CHAR LIMIT=60]
     */
    public static final int battery_used_by=0x7f110368;
    /**
     * Description for battery usage time for an app, i.e. Used for 30min. Note: ^1 should be used in all translations [CHAR LIMIT=60]
     */
    public static final int battery_used_for=0x7f110369;
    /**
     * Edit Beaerer Info of APN
     */
    public static final int bearer=0x7f11036a;
    public static final int berry_black_theme_summary=0x7f11036b;
    /**
     * Black theme for dark mode
     */
    public static final int berry_black_theme_title=0x7f11036c;
    /**
     * Title of button and screen for billing cycle preferences [CHAR LIMIT=40]
     */
    public static final int billing_cycle=0x7f11036d;
    /**
     * Summary describing when the billing cycle for their phone carrier starts [CHAR LIMIT=NONE]
     */
    public static final int billing_cycle_fragment_summary=0x7f11036e;
    /**
     * Informational text about time left in billing cycle [CHAR LIMIT=60]
     */
    public static final int billing_cycle_less_than_one_day_left=0x7f11036f;
    /**
     * Informational text about time left in billing cycle [CHAR LIMIT=60]
     */
    public static final int billing_cycle_none_left=0x7f110370;
    /**
     * Biometric category title - biometric options for unlocking the device. [CHAR LIMIT=50]
     */
    public static final int biometric_settings_category_ways_to_unlock=0x7f110371;
    /**
     * Message shown during enrollment to prompt a child to give the device to a parent or guardian. [CHAR LIMIT=NONE]
     */
    public static final int biometric_settings_hand_back_to_guardian=0x7f110372;
    /**
     * Button text shown during enrollment to proceed after a child user has handed the device to a parent or guardian. [CHAR LIMIT=22]
     */
    public static final int biometric_settings_hand_back_to_guardian_ok=0x7f110373;
    /**
     * Introduction shown in face and fingerprint page to introduce the biometric feature. [CHAR LIMIT=NONE]
     */
    public static final int biometric_settings_intro=0x7f110374;
    /**
     * Text shown on a toggle which allows or disallows the device to use biometric for authentication. [CHAR LIMIT=50]
     */
    public static final int biometric_settings_use_biometric_for_apps=0x7f110375;
    /**
     * Text shown on a toggle which allows or disallows the device to use biometric for unlocking the device. [CHAR LIMIT=50]
     */
    public static final int biometric_settings_use_biometric_unlock_phone=0x7f110376;
    /**
     * Message for a biometric preference toggle, indicating that an action can be performed by using either Face Unlock or Fingerprint Unlock. [CHAR LIMIT=50]
     */
    public static final int biometric_settings_use_face_or_fingerprint_preference_summary=0x7f110377;
    /**
     * Message for a biometric preference toggle, indicating that an action can only be performed by using Face Unlock. [CHAR LIMIT=50]
     */
    public static final int biometric_settings_use_face_preference_summary=0x7f110378;
    /**
     * Message for a biometric preference toggle, indicating that an action can only be performed by using Fingerprint Unlock. [CHAR LIMIT=50]
     */
    public static final int biometric_settings_use_fingerprint_preference_summary=0x7f110379;
    /**
     * Title for preference that guides the user through creating a backup unlock password for biometrics unlock [CHAR LIMIT=45]
     */
    public static final int biometrics_unlock_set_unlock_password=0x7f11037a;
    /**
     * Title for preference that guides the user through creating a backup unlock pattern for biometrics unlock [CHAR LIMIT=45]
     */
    public static final int biometrics_unlock_set_unlock_pattern=0x7f11037b;
    /**
     * Title for preference that guides the user through creating a backup unlock PIN for biometrics unlock [CHAR LIMIT=45]
     */
    public static final int biometrics_unlock_set_unlock_pin=0x7f11037c;
    /**
     * Title for preference that guides the user to skip face unlock setup [CHAR LIMIT=60]
     */
    public static final int biometrics_unlock_skip_biometrics=0x7f11037d;
    /**
     * Message shown in screen lock picker while setting up the new screen lock with biometrics option. [CHAR LIMIT=NONE]
     */
    public static final int biometrics_unlock_title=0x7f11037e;
    /**
     * Message to describe "BLE scan always available feature" when Bluetooth is off. The
     * place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring
     * the user to "scanning settings" screen.
     */
    public static final int ble_scan_notify_text=0x7f11037f;
    /**
     * Shared data: label to indicate when the shared data expires [CHAR LIMIT=80]
     */
    public static final int blob_expires_text=0x7f110380;
    /**
     * Shared data: shared data id [CHAR LIMIT=50]
     */
    public static final int blob_id_text=0x7f110381;
    /**
     * Used as setting title (for checkbox) on second screen after selecting Bluetooth settings
     */
    public static final int bluetooth=0x7f110382;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected.
     */
    public static final int bluetooth_a2dp_profile_summary_connected=0x7f110383;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred.
     */
    public static final int bluetooth_a2dp_profile_summary_use_for=0x7f110384;
    /**
     * Connected devices settings. Message when Bluetooth is connected and active, showing remote device status and battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_active_battery_level=0x7f110385;
    /**
     * Connected devices settings. Message when Bluetooth is connected and active, showing remote device status and battery level for untethered headset. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_active_battery_level_untethered=0x7f110386;
    /**
     * Connected devices settings. Message when Bluetooth is connected and active but no battery information, showing remote device status. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_active_no_battery_level=0x7f110387;
    /**
     * Bluetooth settings. Title of the advanced bluetooth settings screen [CHAR LIMIT=30]
     */
    public static final int bluetooth_advanced_titlebar=0x7f110388;
    /**
     * This string asks the user whether or not to allow an app to disable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_disablement=0x7f110389;
    /**
     * This string asks the user whether or not to allow an app to disable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_disablement_no_name=0x7f11038a;
    /**
     * Strings for asking to the user whether to allow an app to enable discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_discovery=0x7f11038b;
    /**
     * Strings for asking to the user whether to allow an app to enable discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_discovery_no_name=0x7f11038c;
    /**
     * This string asks the user whether or not to allow an app to enable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_enablement=0x7f11038d;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_discovery=0x7f11038e;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_discovery_no_name=0x7f11038f;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_lasting_discovery=0x7f110390;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_lasting_discovery_no_name=0x7f110391;
    /**
     * This string asks the user whether or not to allow an app to enable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_enablement_no_name=0x7f110392;
    /**
     * Strings for asking to the user whether to allow an app to enable lasting discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_lasting_discovery=0x7f110393;
    /**
     * Strings for asking to the user whether to allow an app to enable lasting discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_lasting_discovery_no_name=0x7f110394;
    /**
     * Connected devices settings. Message when Bluetooth is connected but not in use, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_battery_level=0x7f110395;
    /**
     * Connected devices settings. Message when Bluetooth is connected but not in use, showing remote device battery level for untethered headset. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_battery_level_untethered=0x7f110396;
    /**
     * Bluetooth settings.  Connection options screen.
     * The summary for the profile checkbox preference when BC is connected.
     */
    public static final int bluetooth_bc_profile_summary_connected=0x7f110397;
    /**
     * Bluetooth settings.  Connection options screen.
     * The summary for the BC checkbox preference that describes how checking it
     * will set the BC profile as preferred.
     */
    public static final int bluetooth_bc_profile_summary_use_for=0x7f110398;
    /**
     * Bluetooth broadcasting settings, option to enable/disable broadcasting
     */
    public static final int bluetooth_broadcasting=0x7f110399;
    /**
     * Bluetooth device details companion apps. The body of confirmation dialog for remove association. [CHAR LIMIT=60]
     */
    public static final int bluetooth_companion_app_body=0x7f11039a;
    /**
     * Bluetooth device details companion apps. In the confirmation dialog for removing an associated app, this is the label on the button that will complete the disassociate action. [CHAR LIMIT=80]
     */
    public static final int bluetooth_companion_app_remove_association_confirm_button=0x7f11039b;
    /**
     * Bluetooth device details companion apps. The title of a confirmation dialog for remove an app. [CHAR LIMIT=60]
     */
    public static final int bluetooth_companion_app_remove_association_dialog_title=0x7f11039c;
    /**
     * Message for confirmation of passkey to complete pairing. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_confirm_passkey_msg=0x7f11039d;
    /**
     * Bluetooth connect permission alert for dialog content [CHAR LIMIT=none]
     */
    public static final int bluetooth_connect_access_dialog_content=0x7f11039e;
    /**
     * Strings for Dialog don't connect button
     */
    public static final int bluetooth_connect_access_dialog_negative=0x7f11039f;
    /**
     * Strings for Dialog connect button
     */
    public static final int bluetooth_connect_access_dialog_positive=0x7f1103a0;
    /**
     * Bluetooth connect permission alert for dialog title [CHAR LIMIT=none]
     */
    public static final int bluetooth_connect_access_dialog_title=0x7f1103a1;
    /**
     * Bluetooth connect permission alert for notification content [CHAR LIMIT=none]
     */
    public static final int bluetooth_connect_access_notification_content=0x7f1103a2;
    /**
     * Bluetooth connect permission alert for notification title [CHAR LIMIT=none]
     */
    public static final int bluetooth_connect_access_notification_title=0x7f1103a3;
    /**
     * Bluetooth connecting error message [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connect_failed=0x7f1103a4;
    /**
     * Bluetooth settings.  The title of the screen to pick which profiles to connect to on the device.  For example, headphones may have both A2DP and headset, this allows the users to choose which one they want to connect to.
     */
    public static final int bluetooth_connect_specific_profiles_title=0x7f1103a5;
    /**
     * Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected=0x7f1103a6;
    /**
     * Bluetooth settings.  Message when connected to a device, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_battery_level=0x7f1103a7;
    /**
     * Summary for Bluetooth when connected to multiple devices. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_multiple_devices_summary=0x7f1103a8;
    /**
     * Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_a2dp=0x7f1103a9;
    /**
     * Bluetooth settings.  Message when connected to a device, except for media audio, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_no_a2dp_battery_level=0x7f1103aa;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_headset=0x7f1103ab;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone audio, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_no_headset_battery_level=0x7f1103ac;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_headset_no_a2dp=0x7f1103ad;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone/media audio, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_no_headset_no_a2dp_battery_level=0x7f1103ae;
    /**
     * Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_map=0x7f1103af;
    /**
     * Summary for Bluetooth when connected to one device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_summary=0x7f1103b0;
    /**
     * Bluetooth settings.  Message when connecting to a device
     */
    public static final int bluetooth_connecting=0x7f1103b1;
    /**
     * Message for the error dialog when BT connecting operation fails generically.
     */
    public static final int bluetooth_connecting_error_message=0x7f1103b2;
    /**
     * Bluetooth connection permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_connection_dialog_text=0x7f1103b3;
    /**
     * Notification message when a remote Bluetooth device wants to connect to a Bluetooth profile [CHAR LIMIT=none]
     */
    public static final int bluetooth_connection_notif_message=0x7f1103b4;
    /**
     * Activity label of BluetoothPermissionActivity [CHAR LIMIT=none]
     */
    public static final int bluetooth_connection_permission_request=0x7f1103b5;
    /**
     * Bluetooth settings screen, summary text for Bluetooth device with no name
     */
    public static final int bluetooth_device=0x7f1103b6;
    /**
     * Bluetooth settings. Connection options screen. Title for checkbox to enable incoming file transfers [CHAR LIMIT=30]
     */
    public static final int bluetooth_device_advanced_enable_opp_title=0x7f1103b7;
    /**
     * Bluetooth settings.  Connection options screen.  The summary of the online mode checkbox.  This describes what the setting does in the context of the screen.
     */
    public static final int bluetooth_device_advanced_online_mode_summary=0x7f1103b8;
    /**
     * Bluetooth settings.  Connection options screen.  The title of the checkbox that controls whether the device is in "online" mode or "offline" mode.  This essentially is the checkbox that controls whether any checks / unchecks on a profile should be applied immediately, or next time the device is connected.
     */
    public static final int bluetooth_device_advanced_online_mode_title=0x7f1103b9;
    /**
     * Bluetooth settings.  Connection options screen.  The title of the header that is above all of the profiles.
     * When a user decides what Bluetooth capabilities to use with the device.
     */
    public static final int bluetooth_device_advanced_profile_header_title=0x7f1103ba;
    /**
     * Bluetooth settings. Connection options screen. Title for option to rename the device. [CHAR LIMIT=30]
     */
    public static final int bluetooth_device_advanced_rename_device=0x7f1103bb;
    /**
     * Bluetooth settings.  Connection options screen.  The title of the screen. [CHAR LIMIT=40]
     */
    public static final int bluetooth_device_advanced_title=0x7f1103bc;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will connect to all profiles on the device.
     */
    public static final int bluetooth_device_context_connect=0x7f1103bd;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will take the user to another screen where they can choose exactly which profiles to connect to.
     */
    public static final int bluetooth_device_context_connect_advanced=0x7f1103be;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will disconnect from all profiles on the device.
     */
    public static final int bluetooth_device_context_disconnect=0x7f1103bf;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will disconnect and remove pairing with the device.
     */
    public static final int bluetooth_device_context_disconnect_unpair=0x7f1103c0;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will first pair, and then connect to all profiles on the device.
     */
    public static final int bluetooth_device_context_pair_connect=0x7f1103c1;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will remove pairing with the device.
     */
    public static final int bluetooth_device_context_unpair=0x7f1103c2;
    /**
     * Bluetooth settings screen, image description for device details button. This opens the screen to rename, unpair, etc. a single device.
     */
    public static final int bluetooth_device_details=0x7f1103c3;
    /**
     * Title of the item to show device MAC address
     */
    public static final int bluetooth_device_mac_address=0x7f1103c4;
    /**
     * Bluetooth settings screen, title for the current bluetooth name setting
     */
    public static final int bluetooth_device_name=0x7f1103c5;
    /**
     * Description for bluetooth device name summary [CHAR LIMIT=none]
     */
    public static final int bluetooth_device_name_summary=0x7f1103c6;
    /**
     * Bluetooth settings screen, heading above the list of nearby bluetooth devices. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_devices=0x7f1103c7;
    /**
     * Description about contextual Bluetooth devices card when Bluetooth is off [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_devices_card_off_summary=0x7f1103c8;
    /**
     * Title for contextual Bluetooth devices card when Bluetooth is off [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_devices_card_off_title=0x7f1103c9;
    /**
     * UI debug setting: Disable Bluetooth A2DP hardware offload [CHAR LIMIT=none]
     */
    public static final int bluetooth_disable_a2dp_hw_offload=0x7f1103ca;
    /**
     * UI debug setting: Disable Bluetooth A2DP hardware offload [CHAR LIMIT=none]
     */
    public static final int bluetooth_disable_a2dp_hw_offload_dialog_cancel=0x7f1103cb;
    /**
     * UI debug setting: Disable Bluetooth A2DP hardware offload [CHAR LIMIT=none]
     */
    public static final int bluetooth_disable_a2dp_hw_offload_dialog_confirm=0x7f1103cc;
    /**
     * UI debug setting: Disable Bluetooth A2DP hardware offload [CHAR LIMIT=none]
     */
    public static final int bluetooth_disable_a2dp_hw_offload_dialog_message=0x7f1103cd;
    /**
     * UI debug setting: Disable Bluetooth A2DP hardware offload [CHAR LIMIT=none]
     */
    public static final int bluetooth_disable_a2dp_hw_offload_dialog_title=0x7f1103ce;
    /**
     * Setting Checkbox title for disabling Bluetooth absolute volume
     */
    public static final int bluetooth_disable_absolute_volume=0x7f1103cf;
    /**
     * Summary of checkbox for disabling Bluetooth absolute volume
     */
    public static final int bluetooth_disable_absolute_volume_summary=0x7f1103d0;
    /**
     * Summary for Bluetooth when disabled. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_disabled=0x7f1103d1;
    /**
     * Bluetooth settings.  Message for disconnecting from the A2DP profile. [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_a2dp_profile=0x7f1103d2;
    /**
     * Bluetooth settings.  Message for disconnecting from all profiles of a bluetooth device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_disconnect_all_profiles=0x7f1103d3;
    /**
     * dialog ok button for disconnect dialog [CHAR LIMIT=20]
     */
    public static final int bluetooth_disconnect_dialog_ok=0x7f1103d4;
    /**
     * Bluetooth settings.  Message for disconnecting from the headset profile. [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_headset_profile=0x7f1103d5;
    /**
     * Bluetooth settings.  Message for disconnecting from the HID profile. [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_hid_profile=0x7f1103d6;
    /**
     * Bluetooth settings.  Message for disconnecting from the PAN profile (NAP role). [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_pan_nap_profile=0x7f1103d7;
    /**
     * Bluetooth settings.  Message for disconnecting from the PAN profile (user role). [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_pan_user_profile=0x7f1103d8;
    /**
     * Bluetooth settings.  Dialog title to confirm disconnecting from all profiles of a device. [CHAR LIMIT=30]
     */
    public static final int bluetooth_disconnect_title=0x7f1103d9;
    /**
     * Bluetooth settings.  Message when a device is disconnected
     */
    public static final int bluetooth_disconnected=0x7f1103da;
    /**
     * Bluetooth settings.  Message when disconnecting from a device
     */
    public static final int bluetooth_disconnecting=0x7f1103db;
    /**
     * Message when bluetooth dialog when passkey or pin needs to be displayed.
     */
    public static final int bluetooth_display_passkey_pin_msg=0x7f1103dc;
    /**
     * Bluetooth settings.  Dock Setting Title
     */
    public static final int bluetooth_dock_settings=0x7f1103dd;
    /**
     * Bluetooth settings.  Dock Setting Dialog - Checkbox selection 2: Use dock for media audio
     */
    public static final int bluetooth_dock_settings_a2dp=0x7f1103de;
    /**
     * Bluetooth settings.  Dock Setting Dialog - Checkbox selection 1: Use dock as speaker phone
     */
    public static final int bluetooth_dock_settings_headset=0x7f1103df;
    /**
     * Bluetooth settings.  Dock Setting Dialog - Remember setting and don't ask user again
     */
    public static final int bluetooth_dock_settings_remember=0x7f1103e0;
    /**
     * Bluetooth settings.  Dock Setting Dialog Title
     */
    public static final int bluetooth_dock_settings_title=0x7f1103e1;
    /**
     * Bluetooth settings. Text displayed when Bluetooth is off and device list is empty [CHAR LIMIT=50]
     */
    public static final int bluetooth_empty_list_bluetooth_off=0x7f1103e2;
    /**
     * Bluetooth Settings. text displayed when user has restriction DISALLOW_CONFIG_BLUETOOTH [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_empty_list_user_restricted=0x7f1103e3;
    /**
     * Checkbox label for alphanumeric PIN entry (default is numeric PIN). [CHAR LIMIT=50]
     */
    public static final int bluetooth_enable_alphanumeric_pin=0x7f1103e4;
    /**
     * Setting Checkbox title for enabling Bluetooth Gabeldorsche. [CHAR LIMIT=40]
     */
    public static final int bluetooth_enable_gabeldorsche=0x7f1103e5;
    /**
     * Summary of checkbox for enabling Bluetooth Gabeldorche features [CHAR LIMIT=none]
     */
    public static final int bluetooth_enable_gabeldorsche_summary=0x7f1103e6;
    /**
     * Message when bluetooth dialog for passkey entry is showing. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_enter_passkey_msg=0x7f1103e7;
    /**
     * Pairing dialog text to remind user to enter the passkey on the other device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_enter_passkey_other_device=0x7f1103e8;
    /**
     * Pairing dialog text to remind user to enter the PIN on the other device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_enter_pin_other_device=0x7f1103e9;
    /**
     * Title for BT error dialogs.
     */
    public static final int bluetooth_error_title=0x7f1103ea;
    /**
     * Bluetooth mac address message.  This message shows the bluetooth mac address for this device.  [CHAR LIMIT=120]
     */
    public static final int bluetooth_footer_mac_message=0x7f1103eb;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected.
     */
    public static final int bluetooth_headset_profile_summary_connected=0x7f1103ec;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred.
     */
    public static final int bluetooth_headset_profile_summary_use_for=0x7f1103ed;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the Hearing Aid checkbox preference when Hearing Aid is connected.
     */
    public static final int bluetooth_hearing_aid_profile_summary_connected=0x7f1103ee;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the Hearing Aid checkbox preference that describes how checking it will set the Hearing Aid profile as preferred.
     */
    public static final int bluetooth_hearing_aid_profile_summary_use_for=0x7f1103ef;
    /**
     * Bluetooth settings.  Message when connected to a left-side Hearing Aid device, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_hearingaid_left_battery_level=0x7f1103f0;
    /**
     * Message for telling the user the left-side hearing aid device is doing its pairing operation [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_hearingaid_left_pairing_message=0x7f1103f1;
    /**
     * Bluetooth settings.  Message when connected to a right-side Hearing Aid device, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_hearingaid_right_battery_level=0x7f1103f2;
    /**
     * Message for telling the user the right-side hearing aid device is doing its pairing operation [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_hearingaid_right_pairing_message=0x7f1103f3;
    /**
     * Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected.
     */
    public static final int bluetooth_hid_profile_summary_connected=0x7f1103f4;
    /**
     * Bluetooth settings. Connection options screen. The summary
     * for the HID checkbox preference that describes how checking it
     * will set the HID profile as preferred.
     */
    public static final int bluetooth_hid_profile_summary_use_for=0x7f1103f5;
    /**
     * Message when bluetooth incoming pairing request for (2.1 devices) dialog is showing
     * syntax error in translation for bluetooth_confirm_passkey_msg (327192310468680072) org.xmlpull.v1.XmlPullParserException: name expected (position:START_TAG <null>@1:239 in     <string name="bluetooth_confirm_passkey_msg" msgid="327192310468680072">"Zur Kopplung mit:&gt;&lt;b&gt;<xliff:g id="DEVICE_NAME">%1$s</xliff:g>&lt;/b&gt;&lt;br&gt;&lt;br&gt;Vergewissere dich, dass folgender Zugangscode angezeigt wird:<&lt;br&gt;&lt;b&gt;P<xliff:g id="PASSKEY">%2$s</xliff:g>&lt;/b&gt;."</string>
     * )
     */
    public static final int bluetooth_incoming_pairing_msg=0x7f1103f6;
    /**
     * Bluetooth Visibility disconnect question.  Asks the user if they wish to disconnect a paired bluetooth device.  [CHAR LIMIT=50]
     */
    public static final int bluetooth_is_disconnect_question=0x7f1103f7;
    /**
     * Bluetooth settings screen, summary after selecting Discoverable check box [CHAR LIMIT=50]
     */
    public static final int bluetooth_is_discoverable=0x7f1103f8;
    /**
     * Bluetooth settings screen, summary when Discoverable duration is set to "forever" [CHAR LIMIT=50]
     */
    public static final int bluetooth_is_discoverable_always=0x7f1103f9;
    /**
     * Bluetooth Visibility message.  This message informs the user that their device is now visible to other bluetooth devices.  [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_is_visible_message=0x7f1103fa;
    /**
     * Title for left bluetooth device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_left_name=0x7f1103fb;
    /**
     * Bluetooth settings screen, check box label whether or not to allow
     * bluetooth voice dialing when lock screen is up
     */
    public static final int bluetooth_lock_voice_dialing=0x7f1103fc;
    /**
     * Bluetooth settings screen, lock voice dialing checkbox summary text
     */
    public static final int bluetooth_lock_voice_dialing_summary=0x7f1103fd;
    /**
     * Title for bluetooth main switch. [CHAR LIMIT=50]
     */
    public static final int bluetooth_main_switch_title=0x7f1103fe;
    /**
     * Bluetooth message permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_map_acceptance_dialog_text=0x7f1103ff;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected.
     */
    public static final int bluetooth_map_profile_summary_connected=0x7f110400;
    /**
     * Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred.
     */
    public static final int bluetooth_map_profile_summary_use_for=0x7f110401;
    /**
     * Activity label of BluetoothMessagePermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none]
     */
    public static final int bluetooth_map_request=0x7f110402;
    /**
     * Bluetooth developer settings: Maximum number of connected audio devices
     */
    public static final int bluetooth_max_connected_audio_devices_dialog_title=0x7f110403;
    /**
     * Bluetooth developer settings: Maximum number of connected audio devices
     */
    public static final int bluetooth_max_connected_audio_devices_string=0x7f110404;
    /**
     * Bluetooth settings.  Menu option to Bluetooth advanced settings [CHAR LIMIT=20]
     */
    public static final int bluetooth_menu_advanced=0x7f110405;
    /**
     * Bluetooth message permission alert for dialog content [CHAR LIMIT=none]
     */
    public static final int bluetooth_message_access_dialog_content=0x7f110406;
    /**
     * Bluetooth message permission alert for dialog title [CHAR LIMIT=none]
     */
    public static final int bluetooth_message_access_dialog_title=0x7f110407;
    /**
     * Bluetooth message permission alert for notification content [CHAR LIMIT=none]
     */
    public static final int bluetooth_message_access_notification_content=0x7f110408;
    /**
     * Title for middle bluetooth device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_middle_name=0x7f110409;
    /**
     * Bluetooth settings screen, summary text when there isn't a name set (for the name setting)
     */
    public static final int bluetooth_name_not_set=0x7f11040a;
    /**
     * Bluetooth settings screen, text that appears when scanning for devices is finished and no nearby bluetooth device was found [CHAR LIMIT=40]
     */
    public static final int bluetooth_no_devices_found=0x7f11040b;
    /**
     * Bluetooth settings screen, summary text when not discoverable and no paired devices [CHAR LIMIT=50]
     */
    public static final int bluetooth_not_visible_to_other_devices=0x7f11040c;
    /**
     * Notification message when a Bluetooth device wants to pair with us
     */
    public static final int bluetooth_notif_message=0x7f11040d;
    /**
     * Notification ticker text (shown in the status bar) when a Bluetooth device wants to pair with us
     */
    public static final int bluetooth_notif_ticker=0x7f11040e;
    /**
     * Notification title when a Bluetooth device wants to pair with us
     */
    public static final int bluetooth_notif_title=0x7f11040f;
    /**
     * Footer description for discoverable mode in bluetooth off state [CHAR LIMIT=none]
     */
    public static final int bluetooth_off_footer=0x7f110410;
    /**
     * Bluetooth on time
     */
    public static final int bluetooth_on_time=0x7f110411;
    /**
     * Bluetooth settings screen, summary text when not discoverable with paired devices [CHAR LIMIT=50]
     */
    public static final int bluetooth_only_visible_to_paired_devices=0x7f110412;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected.
     */
    public static final int bluetooth_opp_profile_summary_connected=0x7f110413;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected.
     */
    public static final int bluetooth_opp_profile_summary_not_connected=0x7f110414;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred.
     */
    public static final int bluetooth_opp_profile_summary_use_for=0x7f110415;
    /**
     * Title for paired device group [CHAR LIMIT=none]
     */
    public static final int bluetooth_paired_device_title=0x7f110416;
    /**
     * Bluetooth settings screen, summary text under individual Bluetooth devices when pairing
     */
    public static final int bluetooth_pairing=0x7f110417;
    /**
     * Button text for accepting an incoming pairing request. [CHAR LIMIT=20]
     */
    public static final int bluetooth_pairing_accept=0x7f110418;
    /**
     * Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20]
     */
    public static final int bluetooth_pairing_accept_all_caps=0x7f110419;
    /**
     * Button text for declining an incoming pairing request. [CHAR LIMIT=20]
     */
    public static final int bluetooth_pairing_decline=0x7f11041a;
    /**
     * Message for the error dialog when BT pairing fails because the other device is down.
     */
    public static final int bluetooth_pairing_device_down_error_message=0x7f11041b;
    /**
     * Bluetooth settings: Message informing user that a bluetooth wants to access contant and call history.  [CHAR LIMIT=100]
     */
    public static final int bluetooth_pairing_dialog_contants_request=0x7f11041c;
    /**
     * Bluetooth settings: paring permission message.  [CHAR LIMIT=100]
     */
    public static final int bluetooth_pairing_dialog_paring_request=0x7f11041d;
    /**
     * Bluetooth settings: share phone book title.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_pairing_dialog_sharing_phonebook_title=0x7f11041e;
    /**
     * Bluetooth settings: pairing dialog title.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_pairing_dialog_title=0x7f11041f;
    /**
     * Message for the error dialog when BT pairing fails generically.
     */
    public static final int bluetooth_pairing_error_message=0x7f110420;
    /**
     * Message when bluetooth is informing the user of the pairing key. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_pairing_key_msg=0x7f110421;
    /**
     * Title for pairing bluetooth device page [CHAR LIMIT=none]
     */
    public static final int bluetooth_pairing_page_title=0x7f110422;
    /**
     * Message for the error dialog when BT pairing fails because the PIN /
     * Passkey entered is incorrect.
     */
    public static final int bluetooth_pairing_pin_error_message=0x7f110423;
    /**
     * Title for bluetooth pairing item [CHAR LIMIT=60]
     */
    public static final int bluetooth_pairing_pref_title=0x7f110424;
    /**
     * Message for the error dialog when BT pairing fails because the other device rejected the pairing.
     */
    public static final int bluetooth_pairing_rejected_error_message=0x7f110425;
    /**
     * Title for the dialog to enter PIN. [CHAR LIMIT=40]
     */
    public static final int bluetooth_pairing_request=0x7f110426;
    /**
     * Checkbox message in pairing dialogs.  [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_pairing_shares_phonebook=0x7f110427;
    /**
     * Message in pairing dialogs.  [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_pairing_will_share_phonebook=0x7f110428;
    /**
     * Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
     */
    public static final int bluetooth_pan_nap_profile_summary_connected=0x7f110429;
    /**
     * Bluetooth settings. Connection options screen. The summary
     * for the PAN checkbox preference that describes how checking it
     * will set the PAN profile as preferred.
     */
    public static final int bluetooth_pan_profile_summary_use_for=0x7f11042a;
    /**
     * Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
     */
    public static final int bluetooth_pan_user_profile_summary_connected=0x7f11042b;
    /**
     * Bluetooth phone book permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_pb_acceptance_dialog_text=0x7f11042c;
    /**
     * FIXME SHOULD BE REMOVED AND ALL LANG VERSIONS FIXED TO ABOVE NAME
     */
    public static final int bluetooth_pb_remember_choice=0x7f11042d;
    /**
     * Bluetooth phonebook permission alert for dialog content [CHAR LIMIT=none]
     */
    public static final int bluetooth_phonebook_access_dialog_content=0x7f11042e;
    /**
     * Bluetooth phonebook permission alert for dialog title [CHAR LIMIT=none]
     */
    public static final int bluetooth_phonebook_access_dialog_title=0x7f11042f;
    /**
     * Bluetooth phonebook permission alert for notification content [CHAR LIMIT=none]
     */
    public static final int bluetooth_phonebook_access_notification_content=0x7f110430;
    /**
     * Activity label of BluetoothPbPermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none]
     */
    public static final int bluetooth_phonebook_request=0x7f110431;
    /**
     * Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30]
     */
    public static final int bluetooth_pin_values_hint=0x7f110432;
    /**
     * Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30]
     */
    public static final int bluetooth_pin_values_hint_16_digits=0x7f110433;
    /**
     * Summary for bluetooth item in connection detail page. (device)
     */
    public static final int bluetooth_pref_summary=0x7f110434;
    /**
     * Bluetooth settings: The sub heading for device settings. [CHAR LIMIT=30]
     */
    public static final int bluetooth_preference_device_settings=0x7f110435;
    /**
     * Bluetooth settings: The sub heading for available devices during and after scanning. [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_found_media_devices=0x7f110436;
    /**
     * Bluetooth settings: The message displayed if no Bluetooth devices were found. [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_no_found_devices=0x7f110437;
    /**
     * Bluetooth settings: Checkbox label for enable/disable contacts connection.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_contacts_option=0x7f110438;
    /**
     * Bluetooth settings: Checkbox label for enable/disable internet connection.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_internet_option=0x7f110439;
    /**
     * Bluetooth settings: Checkbox label for enable/disable keyboard connection.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_keyboard_option=0x7f11043a;
    /**
     * Bluetooth settings: Paired dialog title [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_title=0x7f11043b;
    /**
     * Bluetooth settings: The title of the preference (list item) that initiates a scan for devices
     */
    public static final int bluetooth_preference_scan_title=0x7f11043c;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile.
     */
    public static final int bluetooth_profile_a2dp=0x7f11043d;
    /**
     * Bluetooth settings. The user-visible string for the setting controlling whether to use a high-quality codec if the device supports it, along with the name of the codec (eg AAC, LDAC, aptX)
     */
    public static final int bluetooth_profile_a2dp_high_quality=0x7f11043e;
    /**
     * Bluetooth settings. Similar to bluetooth_profile_a2dp_high_quality, but used when the device supports high quality audio but we don't know which codec that will be used.
     */
    public static final int bluetooth_profile_a2dp_high_quality_unknown_codec=0x7f11043f;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever
     * referring to BC profile.
     */
    public static final int bluetooth_profile_bc=0x7f110440;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the Broadcast profile.
     */
    public static final int bluetooth_profile_broadcast=0x7f110441;
    /**
     * Bluetooth settings screen, image description for profile of a device details button.
     */
    public static final int bluetooth_profile_details=0x7f110442;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile.
     */
    public static final int bluetooth_profile_headset=0x7f110443;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the Hearing Aid profile.
     */
    public static final int bluetooth_profile_hearing_aid=0x7f110444;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the HID profile.
     */
    public static final int bluetooth_profile_hid=0x7f110445;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the map profile.
     */
    public static final int bluetooth_profile_map=0x7f110446;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile.
     */
    public static final int bluetooth_profile_opp=0x7f110447;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40]
     */
    public static final int bluetooth_profile_pan=0x7f110448;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40]
     */
    public static final int bluetooth_profile_pan_nap=0x7f110449;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40]
     */
    public static final int bluetooth_profile_pbap=0x7f11044a;
    /**
     * Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60]
     */
    public static final int bluetooth_profile_pbap_summary=0x7f11044b;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card).
     */
    public static final int bluetooth_profile_sap=0x7f11044c;
    /**
     * Bluetooth settings. The user-visible string that is used
     * whenever referring to the vcp profile.
     */
    public static final int bluetooth_profile_vcp=0x7f11044d;
    /**
     * Bluetooth settings check box summary for turning on bluetooth
     */
    public static final int bluetooth_quick_toggle_summary=0x7f11044e;
    /**
     * Bluetooth settings check box title on Main Settings screen
     */
    public static final int bluetooth_quick_toggle_title=0x7f11044f;
    /**
     * Bluetooth phone book permission Alert Activity checkbox text [CHAR LIMIT=none]
     */
    public static final int bluetooth_remember_choice=0x7f110450;
    /**
     * Bluetooth settings screen, confirmation button for rename device dialog. [CHAR LIMIT=20]
     */
    public static final int bluetooth_rename_button=0x7f110451;
    /**
     * Bluetooth settings screen, menu item to change this device's Bluetooth name. [CHAR LIMIT=30]
     */
    public static final int bluetooth_rename_device=0x7f110452;
    /**
     * Title for right bluetooth device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_right_name=0x7f110453;
    /**
     * Bluetooth SIM access permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_sap_acceptance_dialog_text=0x7f110454;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected.
     */
    public static final int bluetooth_sap_profile_summary_connected=0x7f110455;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred.
     */
    public static final int bluetooth_sap_profile_summary_use_for=0x7f110456;
    /**
     * Activity label of BluetoothMessagePermissionActivity for SIM access profile. Also used as Strings in the permission dialog [CHAR LIMIT=none]
     */
    public static final int bluetooth_sap_request=0x7f110457;
    /**
     * Bluetooth settings screen, menu item to scan for nearby bluetooth devices
     */
    public static final int bluetooth_scan_for_devices=0x7f110458;
    /**
     * Bluetooth settings. Text displayed when Bluetooth is off and bluetooth scanning is turned on [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_scanning_on_info_message=0x7f110459;
    /**
     * Bluetooth settings: The title of the action button that initiates a search for nearby devices [CHAR LIMIT=20]
     */
    public static final int bluetooth_search_for_devices=0x7f11045a;
    /**
     * Bluetooth settings: The title of the action button while a search for nearby devices is in progress [CHAR LIMIT=20]
     */
    public static final int bluetooth_searching_for_devices=0x7f11045b;
    /**
     * UI debug setting: Trigger Bluetooth Audio Bits Per Sample Selection
     */
    public static final int bluetooth_select_a2dp_codec_bits_per_sample=0x7f11045c;
    /**
     * UI debug setting: Trigger Bluetooth Audio Codec Selection: Bits Per Sample
     */
    public static final int bluetooth_select_a2dp_codec_bits_per_sample_dialog_title=0x7f11045d;
    /**
     * UI debug setting: Trigger Bluetooth Audio Channel Mode Selection
     */
    public static final int bluetooth_select_a2dp_codec_channel_mode=0x7f11045e;
    /**
     * UI debug setting: Trigger Bluetooth Audio Codec Selection: Channel Mode
     */
    public static final int bluetooth_select_a2dp_codec_channel_mode_dialog_title=0x7f11045f;
    /**
     * UI debug setting: Trigger Bluetooth Audio LDAC Playback Quality Selection
     */
    public static final int bluetooth_select_a2dp_codec_ldac_playback_quality=0x7f110460;
    /**
     * UI debug setting: Select Bluetooth Audio LDAC Codec: LDAC Playback Quality
     */
    public static final int bluetooth_select_a2dp_codec_ldac_playback_quality_dialog_title=0x7f110461;
    /**
     * UI debug setting: Trigger Bluetooth Audio Sample Rate Selection
     */
    public static final int bluetooth_select_a2dp_codec_sample_rate=0x7f110462;
    /**
     * UI debug setting: Trigger Bluetooth Audio Codec Selection: Sample Rate
     */
    public static final int bluetooth_select_a2dp_codec_sample_rate_dialog_title=0x7f110463;
    /**
     * [CHAR LIMIT=NONE] Label for displaying Bluetooth Audio Codec Parameters while streaming
     */
    public static final int bluetooth_select_a2dp_codec_streaming_label=0x7f110464;
    /**
     * UI debug setting: Trigger Bluetooth Audio Codec Selection
     */
    public static final int bluetooth_select_a2dp_codec_type=0x7f110465;
    /**
     * UI debug setting: Trigger Bluetooth Audio Codec Selection
     */
    public static final int bluetooth_select_a2dp_codec_type_dialog_title=0x7f110466;
    /**
     * UI debug setting: Label for unsupported Bluetooth Audio Codec. [CHAR LIMIT=none]
     */
    public static final int bluetooth_select_a2dp_codec_type_help_info=0x7f110467;
    /**
     * UI debug setting: Select Bluetooth AVRCP Version
     */
    public static final int bluetooth_select_avrcp_version_dialog_title=0x7f110468;
    /**
     * UI debug setting: Select Bluetooth AVRCP Version
     */
    public static final int bluetooth_select_avrcp_version_string=0x7f110469;
    /**
     * UI debug setting: Select Bluetooth MAP Version [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_select_map_version_dialog_title=0x7f11046a;
    /**
     * UI debug setting: Select Bluetooth MAP Version [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_select_map_version_string=0x7f11046b;
    /**
     * Switch text for bluetooth feature being off [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_setting_off=0x7f11046c;
    /**
     * Switch text for bluetooth feature being on [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_setting_on=0x7f11046d;
    /**
     * Used as title on second screen after selecting Bluetooth settings
     */
    public static final int bluetooth_settings=0x7f11046e;
    /**
     * Wireless controls screen, settings summary for the item tot ake you to the bluetooth settings screen
     */
    public static final int bluetooth_settings_summary=0x7f11046f;
    /**
     * Wireless controls screen, settings title for the item to take you to the bluetooth settings screen
     */
    public static final int bluetooth_settings_title=0x7f110470;
    /**
     * Setting Checkbox title for showing Bluetooth devices without names
     */
    public static final int bluetooth_show_devices_without_names=0x7f110471;
    /**
     * Summary of checkbox for showing Bluetooth devices without names
     */
    public static final int bluetooth_show_devices_without_names_summary=0x7f110472;
    /**
     * Item in bluetooth settings screen, used to show the list of received files [CHAR LIMIT=30]
     */
    public static final int bluetooth_show_received_files=0x7f110473;
    /**
     * Bluetooth sim card permission alert for dialog content [CHAR LIMIT=none]
     */
    public static final int bluetooth_sim_card_access_dialog_content=0x7f110474;
    /**
     * Bluetooth sim card permission alert for dialog title [CHAR LIMIT=none]
     */
    public static final int bluetooth_sim_card_access_dialog_title=0x7f110475;
    /**
     * Bluetooth sim card permission alert for notification content [CHAR LIMIT=none]
     */
    public static final int bluetooth_sim_card_access_notification_content=0x7f110476;
    /**
     * Bluetooth sim card permission alert for notification title [CHAR LIMIT=none]
     */
    public static final int bluetooth_sim_card_access_notification_title=0x7f110477;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=5615463912185280812]
     */
    public static final int bluetooth_talkback_bluetooth=0x7f110478;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=4875089335641234463]
     */
    public static final int bluetooth_talkback_computer=0x7f110479;
    /**
     * Message for telling the user the kind of BT device being displayed. [CHAR LIMIT=30]
     */
    public static final int bluetooth_talkback_group=0x7f11047a;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=26580326066627664]
     */
    public static final int bluetooth_talkback_headphone=0x7f11047b;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=5140152177885220949]
     */
    public static final int bluetooth_talkback_headset=0x7f11047c;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=551146170554589119]
     */
    public static final int bluetooth_talkback_imaging=0x7f11047d;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=5165842622743212268]
     */
    public static final int bluetooth_talkback_input_peripheral=0x7f11047e;
    /**
     * Message for telling the user the kind of BT device being displayed in list. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=4260255181240622896]
     */
    public static final int bluetooth_talkback_phone=0x7f11047f;
    /**
     * Label for bluetooth tether checkbox [CHAR LIMIT=25]
     */
    public static final int bluetooth_tether_checkbox_text=0x7f110480;
    /**
     * Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=80]
     */
    public static final int bluetooth_tethering_off_subtext_config=0x7f110481;
    /**
     * Bluetooth Tethering settings. Error message shown when trying to connect an 8th device [CHAR LIMIT=50]
     */
    public static final int bluetooth_tethering_overflow_error=0x7f110482;
    /**
     * Bluetooth Tethering subtext [CHAR LIMIT=70]
     */
    public static final int bluetooth_tethering_subtext=0x7f110483;
    /**
     * Strings for msg to display to user while bluetooth is turning off [CHAR LIMIT=60]
     */
    public static final int bluetooth_turning_off=0x7f110484;
    /**
     * Strings for msg to display to user while bluetooth is turning on [CHAR LIMIT=60]
     */
    public static final int bluetooth_turning_on=0x7f110485;
    /**
     * Bluetooth device details. The body of a confirmation dialog for unpairing a paired device.
     */
    public static final int bluetooth_unpair_dialog_body=0x7f110486;
    /**
     * Bluetooth device details. In the confirmation dialog for unpairing a paired device, this is the label on the button that will complete the unpairing action.
     */
    public static final int bluetooth_unpair_dialog_forget_confirm_button=0x7f110487;
    /**
     * Bluetooth device details. The title of a confirmation dialog for unpairing a paired device. [CHAR LIMIT=60]
     */
    public static final int bluetooth_unpair_dialog_title=0x7f110488;
    /**
     * Bluetooth Tethering settings.  Message for untethering from a bluetooth device [CHAR LIMIT=50]
     */
    public static final int bluetooth_untether_blank=0x7f110489;
    /**
     * Bluetooth settings screen, option name to pick discoverability timeout duration (a list dialog comes up)
     */
    public static final int bluetooth_visibility_timeout=0x7f11048a;
    /**
     * Sound: Other sounds: Title for the option enabling boot sounds. [CHAR LIMIT=30]
     */
    public static final int boot_sounds_title=0x7f11048b;
    public static final int bottom_sheet_behavior=0x7f11048c;
    public static final int bottomsheet_action_expand_halfway=0x7f11048d;
    /**
     * Sound & display settings screen, setting option name to change brightness level
     */
    public static final int brightness=0x7f11048e;
    /**
     * Sound & display settings screen, setting option summary to change brightness level
     */
    public static final int brightness_summary=0x7f11048f;
    /**
     * Sound & display settings screen, setting option name to change brightness level [CHAR LIMIT=30]
     */
    public static final int brightness_title=0x7f110490;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int bssid_label=0x7f110491;
    /**
     * Setting Checkbox title whether to enable Bluetooth HCI snoop log
     */
    public static final int bt_hci_snoop_log=0x7f110492;
    /**
     * setting Checkbox summary whether to capture all Bluetooth HCI packets in a file [CHAR_LIMIT=100]
     */
    public static final int bt_hci_snoop_log_summary=0x7f110493;
    /**
     * Bubble app settings: option allowing all conversations from an app to bubble if the app sends bubbles [CHAR LIMIT=60]
     */
    public static final int bubble_app_setting_all=0x7f110494;
    /**
     * Bubble app settings: Content description - action to make a conversation bubble
     */
    public static final int bubble_app_setting_bubble_conversation=0x7f110495;
    /**
     * Bubble app settings: Title above a list of conversations that have been excluded from bubbling [CHAR LIMIT=100]
     */
    public static final int bubble_app_setting_excluded_conversation_title=0x7f110496;
    /**
     * Bubble app settings: option allowing no bubbles from the app [CHAR LIMIT=60]
     */
    public static final int bubble_app_setting_none=0x7f110497;
    /**
     * Bubble app settings: option allowing only user selected conversations from an app to bubble if the app sends bubbles [CHAR LIMIT=60]
     */
    public static final int bubble_app_setting_selected=0x7f110498;
    /**
     * Bubble app settings: Title above a list of conversations that have been selected to bubble [CHAR LIMIT=60]
     */
    public static final int bubble_app_setting_selected_conversation_title=0x7f110499;
    /**
     * Bubble app settings: Content description - action to make a conversation no longer bubble
     */
    public static final int bubble_app_setting_unbubble_conversation=0x7f11049a;
    /**
     * Description for the toggle shown on the app-level bubbles page  [CHAR LIMIT=NONE]
     */
    public static final int bubbles_app_toggle_summary=0x7f11049b;
    /**
     * Title for the toggle shown on the app-level bubbles page  [CHAR LIMIT=60]
     */
    public static final int bubbles_app_toggle_title=0x7f11049c;
    /**
     * Title on the conversation level screen; links back to the app level setting
     */
    public static final int bubbles_conversation_app_link=0x7f11049d;
    /**
     * Summary for bubbles option on the conversation level screen
     */
    public static final int bubbles_conversation_toggle_summary=0x7f11049e;
    /**
     * Title for bubbles option on the conversation level screen
     */
    public static final int bubbles_conversation_toggle_title=0x7f11049f;
    /**
     * Button of the dialog shown when the user has disabled bubbles at the feature level but tries to enable it for an app. [CHAR LIMIT=60]
     */
    public static final int bubbles_feature_disabled_button_approve=0x7f1104a0;
    /**
     * Button to cancel out of the dialog shown when the user has disabled bubbles at the feature level but tries to enable it for an app. [CHAR LIMIT=60]
     */
    public static final int bubbles_feature_disabled_button_cancel=0x7f1104a1;
    /**
     * Description of the dialog shown when the user has disabled bubbles at the feature level but tries to enable it for an app. [CHAR LIMIT=NONE]
     */
    public static final int bubbles_feature_disabled_dialog_text=0x7f1104a2;
    /**
     * Title of the dialog shown when the user has disabled bubbles at the feature level but tries to enable it for an app. [CHAR LIMIT=NONE]
     */
    public static final int bubbles_feature_disabled_dialog_title=0x7f1104a3;
    /**
     * Feature education for bubbles. [CHAR LIMIT=NONE]
     */
    public static final int bubbles_feature_education=0x7f1104a4;
    /**
     * Developer Settings: Footer text for bug report handler picker [CHAR LIMIT=NONE]
     */
    public static final int bug_report_handler_picker_footer_text=0x7f1104a5;
    /**
     * Name of dev option called "Bug report handler" [CHAR LIMIT=NONE]
     */
    public static final int bug_report_handler_title=0x7f1104a6;
    /**
     * [CHAR LIMIT=NONE] Setting checkbox title for Whether to include bug report item in power menu.
     */
    public static final int bugreport_in_power=0x7f1104a7;
    /**
     * [CHAR LIMIT=NONE] Setting checkbox summary for Whether to include bug report item in power
     */
    public static final int bugreport_in_power_summary=0x7f1104a8;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int build_number=0x7f1104a9;
    /**
     * Summary for built-in keyboard settings
     */
    public static final int builtin_keyboard_settings_summary=0x7f1104aa;
    /**
     * Title for built-in keyboard settings
     */
    public static final int builtin_keyboard_settings_title=0x7f1104ab;
    /**
     * Developer option to convert to file encryption - final button
     */
    public static final int button_confirm_convert_fbe=0x7f1104ac;
    /**
     * Button on dialog that triggers convertion to file encryption
     */
    public static final int button_convert_fbe=0x7f1104ad;
    /**
     * Title of CA certificate [CHAR LIMIT=30]
     */
    public static final int ca_certificate=0x7f1104ae;
    /**
     * Description of warning shown to the user before they can install a CA certificate [CHAR LIMIT=NONE]
     */
    public static final int ca_certificate_warning_description=0x7f1104af;
    /**
     * Title of warning shown to the user before they can install a CA certificate [CHAR LIMIT=NONE]
     */
    public static final int ca_certificate_warning_title=0x7f1104b0;
    public static final int cache_db_name=0x7f1104b1;
    /**
     * Manage applications, Header name used for cache information
     */
    public static final int cache_header_label=0x7f1104b2;
    /**
     * Manage applications, label that appears next to the cache size
     */
    public static final int cache_size_label=0x7f1104b3;
    /**
     * Label for a process item representing a background process
     */
    public static final int cached=0x7f1104b4;
    /**
     * Developer settings: app freezer title [CHAR LIMIT=50]
     */
    public static final int cached_apps_freezer=0x7f1104b5;
    /**
     * List entry in developer settings to choose default device/system behavior for the app freezer [CHAR LIMIT=30]
     */
    public static final int cached_apps_freezer_device_default=0x7f1104b6;
    /**
     * List entry in developer settings to disable the app freezer in developer settings [CHAR LIMIT=30]
     */
    public static final int cached_apps_freezer_disabled=0x7f1104b7;
    /**
     * List entry in developer settings to enable the app freezer in developer settings [CHAR LIMIT=30]
     */
    public static final int cached_apps_freezer_enabled=0x7f1104b8;
    /**
     * Developer setting dialog prompting the user to reboot after changing the app freezer setting [CHAR LIMIT=NONE]
     */
    public static final int cached_apps_freezer_reboot_dialog_text=0x7f1104b9;
    public static final int calendar_component_name=0x7f1104ba;
    /**
     * Mobile network settings screen, name for call settings category [CHAR LIMIT=NONE]
     */
    public static final int call_category=0x7f1104bb;
    /**
     * Call Manager enable settings summary.  [CHAR LIMIT=80]
     */
    public static final int call_manager_enable_summary=0x7f1104bc;
    /**
     * Call Manager enable settings title.  [CHAR LIMIT=50]
     */
    public static final int call_manager_enable_title=0x7f1104bd;
    /**
     * Call Manager settings summary.  [CHAR LIMIT=50]
     */
    public static final int call_manager_summary=0x7f1104be;
    /**
     * Call Manager settings title.  [CHAR LIMIT=50]
     */
    public static final int call_manager_title=0x7f1104bf;
    /**
     * Main settings screen, Call settings summary for item to go into call settings
     */
    public static final int call_settings_summary=0x7f1104c0;
    /**
     * Main settings screen, Call settings title for item to go into the call settings
     */
    public static final int call_settings_title=0x7f1104c1;
    /**
     * Sound: Title for the option managing call volume. [CHAR LIMIT=30]
     */
    public static final int call_volume_option_title=0x7f1104c2;
    /**
     * Provider Model: Calls and SMS controllers settings screen, item title to go into the Calls and SMS settings
     */
    public static final int calls_and_sms=0x7f1104c3;
    /**
     * Mobile network settings screen, a label in a chooser dialog that appears when choosing the
     * default subscription to use for either calls or SMS when in multi-SIM mode. This label means
     * that the user will be asked which mobile network subscription to use every time they place a
     * call or send an SMS, instead of defaulting to one particular subscription. [CHAR LIMIT=40]
     */
    public static final int calls_and_sms_ask_every_time=0x7f1104c4;
    /**
     * Provider Model: Name for call settings category [CHAR LIMIT=NONE]
     */
    public static final int calls_and_sms_category=0x7f1104c5;
    /**
     * Mobile network settings screen, title of item showing the name of the default subscription
     * that will be used for calls. This only appears in multi-SIM mode. [CHAR LIMIT=NONE]
     */
    public static final int calls_preference=0x7f1104c6;
    /**
     * Provider Model: Calls preference title
     */
    public static final int calls_preference_title=0x7f1104c7;
    /**
     * Provider Model: Calls Preferred status in summary for Calls & SMS
     */
    public static final int calls_sms_calls_preferred=0x7f1104c8;
    /**
     * Provider Model: Label for footnote on calling preference
     */
    public static final int calls_sms_footnote=0x7f1104c9;
    /**
     * Provider Model: No SIM status in summary for Calls & SMS
     */
    public static final int calls_sms_no_sim=0x7f1104ca;
    /**
     * Provider Model: Preferred status in summary for Calls & SMS
     */
    public static final int calls_sms_preferred=0x7f1104cb;
    /**
     * Provider Model: SMS Preferred status in summary for Calls & SMS
     */
    public static final int calls_sms_sms_preferred=0x7f1104cc;
    /**
     * Provider Model: Temporarily unavailable status in summary for Calls & SMS
     */
    public static final int calls_sms_temp_unavailable=0x7f1104cd;
    /**
     * Provider Model: Unavailable status in summary for Calls & SMS
     */
    public static final int calls_sms_unavailable=0x7f1104ce;
    /**
     * Provider Model: Summary for calling preference
     */
    public static final int calls_sms_wfc_summary=0x7f1104cf;
    /**
     * Describes what is affected by the camera toggle [CHAR LIMIT=NONE]
     */
    public static final int cam_toggle_description=0x7f1104d0;
    /**
     * Description of setting that controls gesture to open camera by double tapping the power button [CHAR LIMIT=NONE]
     */
    public static final int camera_double_tap_power_gesture_desc=0x7f1104d1;
    /**
     * Title of setting that controls gesture to open camera by double tapping the power button [CHAR LIMIT=40]
     */
    public static final int camera_double_tap_power_gesture_title=0x7f1104d2;
    /**
     * Description of setting that controls gesture to open camera [CHAR LIMIT=NONE]
     */
    public static final int camera_gesture_desc=0x7f1104d3;
    /**
     * Title of setting that controls gesture to open camera [CHAR LIMIT=40]
     */
    public static final int camera_gesture_title=0x7f1104d4;
    /**
     * Title for Camera laser sensor switch [CHAR LIMIT=NONE]
     */
    public static final int camera_laser_sensor_switch=0x7f1104d5;
    /**
     * Label for the camera use toggle [CHAR LIMIT=40]
     */
    public static final int camera_toggle_title=0x7f1104d6;
    /**
     * Button label for generic cancel action [CHAR LIMIT=20]
     */
    public static final int cancel=0x7f1104d7;
    /**
     * Button text to cancel lock screen skip dialog [CHAR LIMIT=20]
     */
    public static final int cancel_lock_screen_dialog_button_label=0x7f1104d8;
    /**
     * Toast that appears when users tap an APN for which parameters cannot be viewed. [CHAR LIMIT=NONE]
     */
    public static final int cannot_change_apn_toast=0x7f1104d9;
    /**
     * Messaage shown in dialog when you can't manually sync
     */
    public static final int cant_sync_dialog_message=0x7f1104da;
    /**
     * Title of dialog shown when you can't manually sync an item because it's disabled
     */
    public static final int cant_sync_dialog_title=0x7f1104db;
    /**
     * Title for the list of capabilities of an accessibility service.
     */
    public static final int capabilities_list_title=0x7f1104dc;
    /**
     * Title for the preference to change video caption background color. [CHAR LIMIT=35]
     */
    public static final int captioning_background_color=0x7f1104dd;
    /**
     * Title for the preference to change video caption background opacity. [CHAR LIMIT=35]
     */
    public static final int captioning_background_opacity=0x7f1104de;
    /**
     * Summary for Captions settings, explaining important settings under it. [CHAR LIMIT=NONE]
     */
    public static final int captioning_caption_appearance_summary=0x7f1104df;
    /**
     * Title for Caption preference settings screen for configuring font style. [CHAR LIMIT=NONE]
     */
    public static final int captioning_caption_appearance_title=0x7f1104e0;
    /**
     * Title for the preference catgeory containing custom video caption properties. [CHAR LIMIT=35]
     */
    public static final int captioning_custom_options_title=0x7f1104e1;
    /**
     * Title for the preference to change video caption edge color. [CHAR LIMIT=35]
     */
    public static final int captioning_edge_color=0x7f1104e2;
    /**
     * Title for the preference to change video caption edge type. [CHAR LIMIT=35]
     */
    public static final int captioning_edge_type=0x7f1104e3;
    /**
     * Title for the preference to change video caption text color. [CHAR LIMIT=35]
     */
    public static final int captioning_foreground_color=0x7f1104e4;
    /**
     * Title for the preference to change video caption text opacity. [CHAR LIMIT=35]
     */
    public static final int captioning_foreground_opacity=0x7f1104e5;
    /**
     * Title for the preference to change video caption locale. [CHAR LIMIT=35]
     */
    public static final int captioning_locale=0x7f1104e6;
    /**
     * Title for Caption preference settings screen for configuring language. [CHAR LIMIT=NONE]
     */
    public static final int captioning_more_options_title=0x7f1104e7;
    /**
     * Title for the preference category containing video caption property presets. [CHAR LIMIT=35]
     */
    public static final int captioning_preset=0x7f1104e8;
    /**
     * Sample characters for previewing video caption preferences. [CHAR LIMIT=2]
     */
    public static final int captioning_preview_characters=0x7f1104e9;
    /**
     * Sample text for previewing video caption preferences. [CHAR LIMIT=NONE]
     */
    public static final int captioning_preview_text=0x7f1104ea;
    /**
     * Title for the preference category containing the video caption preview. [CHAR LIMIT=35]
     */
    public static final int captioning_preview_title=0x7f1104eb;
    /**
     * Title for the preference catgeory containing standard video caption options. [CHAR LIMIT=35]
     */
    public static final int captioning_standard_options_title=0x7f1104ec;
    /**
     * Title for the preference to change video caption text size. [CHAR LIMIT=35]
     */
    public static final int captioning_text_size=0x7f1104ed;
    /**
     * Title for the preference to change video caption font family (ex. monospace, sans-serif). [CHAR LIMIT=35]
     */
    public static final int captioning_typeface=0x7f1104ee;
    /**
     * Title for the preference to change video caption window color. [CHAR LIMIT=35]
     */
    public static final int captioning_window_color=0x7f1104ef;
    /**
     * Title for the preference to change video caption window opacity. [CHAR LIMIT=35]
     */
    public static final int captioning_window_opacity=0x7f1104f0;
    /**
     * Title for the accessibility preference category of caption services and settings. [CHAR LIMIT=50]
     */
    public static final int captions_category_title=0x7f1104f1;
    /**
     * Title for the button to initiate a heap dump for the system server. [CHAR LIMIT=NONE]
     */
    public static final int capture_system_heap_dump_title=0x7f1104f2;
    /**
     * Toast that is shown when the user initiates capturing a heap dump for the system server. [CHAR LIMIT=NONE]
     */
    public static final int capturing_system_heap_dump_message=0x7f1104f3;
    /**
     * Cards and passes name lower case [CHAR LIMIT=40]
     */
    public static final int cards_passes_lower=0x7f1104f4;
    /**
     * Cards and passes name sentence case [CHAR LIMIT=40]
     */
    public static final int cards_passes_sentence=0x7f1104f5;
    /**
     * Carrier string to use in other messages
     */
    public static final int carrier=0x7f1104f6;
    /**
     * Informational text about a recent carrier and update time [CHAR LIMIT=34]
     */
    public static final int carrier_and_update_now_text=0x7f1104f7;
    /**
     * Informational text about carrier and update time [CHAR LIMIT=32]
     */
    public static final int carrier_and_update_text=0x7f1104f8;
    /**
     * Edit enable/disable of APN
     */
    public static final int carrier_enabled=0x7f1104f9;
    public static final int carrier_enabled_summaryOff=0x7f1104fa;
    public static final int carrier_enabled_summaryOn=0x7f1104fb;
    /**
     * Content description of the carrier network changing icon. [CHAR LIMIT=NONE]
     */
    public static final int carrier_network_change_mode=0x7f1104fc;
    /**
     * Carrier Provisioning Info [CHAR LIMIT=NONE]
     */
    public static final int carrier_provisioning=0x7f1104fd;
    /**
     * Mobile network settings screen, name of the option to manage carrier profiles on devices which support embedded carrier profiles [CHAR LIMIT=NONE]
     */
    public static final int carrier_settings_euicc=0x7f1104fe;
    /**
     * A menu item in "Mobile network settings" that allows the user to update the phone
     * with mobile operator specific settings. [CHAR LIMIT=25]
     */
    public static final int carrier_settings_title=0x7f1104ff;
    /**
     * Mobile network settings screen, a string showing the version of carrier settings for this
     * subscription [CHAR LIMIT=NONE]
     */
    public static final int carrier_settings_version=0x7f110500;
    /**
     * Title for merged carrier Wi-Fi network information. [CHAR LIMIT=NONE]
     */
    public static final int carrier_wifi_network_title=0x7f110501;
    /**
     * Summary for merged carrier Wi-Fi offload toggle. [CHAR LIMIT=NONE]
     */
    public static final int carrier_wifi_offload_summary=0x7f110502;
    /**
     * Title for merged carrier Wi-Fi offload toggle. [CHAR LIMIT=NONE]
     */
    public static final int carrier_wifi_offload_title=0x7f110503;
    /**
     * Appearance category name in Display Settings [CHAR LIMIT=none]
     */
    public static final int category_name_appearance=0x7f110504;
    /**
     * Brightness category name in Display Settings [CHAR LIMIT=none]
     */
    public static final int category_name_brightness=0x7f110505;
    /**
     * Color category name in Display Settings [CHAR LIMIT=none]
     */
    public static final int category_name_color=0x7f110506;
    /**
     * Name of Other display controls category in Display Settings [CHAR LIMIT=none]
     */
    public static final int category_name_display_controls=0x7f110507;
    /**
     * General category name [CHAR LIMIT=none]
     */
    public static final int category_name_general=0x7f110508;
    /**
     * Lock screen category name in Display Settings [CHAR LIMIT=none]
     */
    public static final int category_name_lock_display=0x7f110509;
    /**
     * Others category name [CHAR LIMIT=none]
     */
    public static final int category_name_others=0x7f11050a;
    /**
     * Header for items under the personal user [CHAR LIMIT=30]
     */
    public static final int category_personal=0x7f11050b;
    /**
     * Header for items under the work user [CHAR LIMIT=30]
     */
    public static final int category_work=0x7f11050c;
    /**
     * Preference title for launching an account manager page for prepaid LTE [CHAR LIMIT=30]
     */
    public static final int cdma_lte_data_service=0x7f11050d;
    /**
     * Main Settings screen setting option summary text for the item to take you to the CDMA security and location screen
     */
    public static final int cdma_security_settings_summary=0x7f11050e;
    /**
     * Dialog title for CDMA subscription [CHAR LIMIT=30]
     */
    public static final int cdma_subscription_dialogtitle=0x7f11050f;
    /**
     * Summary for CDMA subscription [CHAR LIMIT=NONE]
     */
    public static final int cdma_subscription_summary=0x7f110510;
    /**
     * Title for CDMA subscription [CHAR LIMIT=50]
     */
    public static final int cdma_subscription_title=0x7f110511;
    /**
     * System select settings screen title [CHAR LIMIT=NONE]
     */
    public static final int cdma_system_select_dialogtitle=0x7f110512;
    /**
     * Mobile network settings screen, setting summary text [CHAR LIMIT=NONE]
     */
    public static final int cdma_system_select_summary=0x7f110513;
    /**
     * Mobile network settings screen, setting option name [CHAR LIMIT=NONE]
     */
    public static final int cdma_system_select_title=0x7f110514;
    /**
     * Cell Broadcast settings title.  [CHAR LIMIT=50]
     * Cell Broadcast settings title.  [CHAR LIMIT=50]
     * This settings will be shown on devices with Italian SIMs.
     * Required Italian (it) translation for this message: "Allarmi Pubblici"
     */
    public static final int cell_broadcast_settings=0x7f110515;
    /**
     * Format for a summary describing the amount of data the limit is set to [CHAR LIMIT=NONE]
     */
    public static final int cell_data_limit=0x7f110516;
    /**
     * Content description of the cell data being disabled. [CHAR LIMIT=NONE]
     */
    public static final int cell_data_off_content_description=0x7f110517;
    /**
     * Format string for amount of cellular data used [CHAR LIMIT=30]
     */
    public static final int cell_data_template=0x7f110518;
    /**
     * Format for a summary describing the amount of data before the user is warned [CHAR LIMIT=NONE]
     */
    public static final int cell_data_warning=0x7f110519;
    /**
     * Format for a summary describing the amount of data before the user is warned or limited [CHAR LIMIT=NONE]
     */
    public static final int cell_data_warning_and_limit=0x7f11051a;
    /**
     * check box cellular data summary [CHAR LIMIT=85]
     */
    public static final int cellular_data_summary=0x7f11051b;
    /**
     * Label for cellular data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int cellular_data_usage=0x7f11051c;
    /**
     * Toast message that a certificate was not installed
     */
    public static final int cert_not_installed=0x7f11051d;
    /**
     * Title of preference for the certificate management app [CHAR LIMIT=30]
     */
    public static final int certificate_management_app=0x7f11051e;
    /**
     * Summary of preference if there is a certificate management app [CHAR LIMIT=NONE]
     */
    public static final int certificate_management_app_description=0x7f11051f;
    /**
     * Label for button to not install a certificate [CHAR_LIMIT=50]
     */
    public static final int certificate_warning_dont_install=0x7f110520;
    /**
     * Label for button to continue installing a certificate [CHAR_LIMIT=50]
     */
    public static final int certificate_warning_install_anyway=0x7f110521;
    /**
     * Package name for Certinstaller app
     */
    public static final int certinstaller_package=0x7f110522;
    /**
     * Title of button to change storage [CHAR LIMIT=25]
     */
    public static final int change=0x7f110523;
    /**
     * Title of dialog to change storage [CHAR LIMIT=25]
     */
    public static final int change_storage=0x7f110524;
    /**
     * Temporary reboot string, will be removed
     */
    public static final int change_theme_reboot=0x7f110525;
    /**
     * Apps > App Details > Wifi access > Description. [CHAR LIMIT=NONE]
     */
    public static final int change_wifi_state_app_detail_summary=0x7f110526;
    /**
     * Apps > App Details > Wifi access > Switch title. [CHAR LIMIT=NONE]
     */
    public static final int change_wifi_state_app_detail_switch=0x7f110527;
    /**
     * Title for Wifi Access settings [CHAR LIMIT=35]
     */
    public static final int change_wifi_state_title=0x7f110528;
    /**
     * [CHAR LIMIT=NONE] Text appearing when channel group notifications are off
     */
    public static final int channel_group_notifications_off_desc=0x7f110529;
    /**
     * [CHAR LIMIT=NONE] Text appearing when channel notifications are off
     */
    public static final int channel_notifications_off_desc=0x7f11052a;
    public static final int character_counter_content_description=0x7f11052b;
    public static final int character_counter_overflowed_content_description=0x7f11052c;
    public static final int character_counter_pattern=0x7f11052d;
    /**
     * Label for length of time since the battery graph started [CHAR LIMIT=20]
     */
    public static final int charge_length_format=0x7f11052e;
    /**
     * Sound: Other sounds: Title for the option enabling charging sounds and vibration. [CHAR LIMIT=50]
     */
    public static final int charging_sounds_title=0x7f11052f;
    /**
     * Sound settings screen, the caption of the checkbox for having the notification volume be
     * the same as the incoming call volume.
     */
    public static final int checkbox_notification_same_as_incoming_call=0x7f110530;
    /**
     * Shown when a password has been entered, and we're checking it
     */
    public static final int checking_decryption=0x7f110531;
    public static final int chip_text=0x7f110532;
    /**
     * Available networks screen, name of button when user wants to select network manually [CHAR LIMIT=60]
     */
    public static final int choose_network_title=0x7f110533;
    /**
     * Title for profile selection dialog [CHAR LIMIT=30]
     */
    public static final int choose_profile=0x7f110534;
    /**
     * String indicating that we are activating the profile [CHAR LIMIT=NONE]
     */
    public static final int choose_sim_activating=0x7f110535;
    /**
     * String indicating that we failed to activate the selected profile [CHAR LIMIT=NONE]
     */
    public static final int choose_sim_could_not_activate=0x7f110536;
    /**
     * String indicating that the number for the specified profile is unknown [CHAR LIMIT=NONE]
     */
    public static final int choose_sim_item_summary_unknown=0x7f110537;
    /**
     * The body text of choose SIM activity. [CHAR LIMIT=NONE]
     */
    public static final int choose_sim_text=0x7f110538;
    /**
     * The title text of choose SIM activity. [CHAR LIMIT=NONE]
     */
    public static final int choose_sim_title=0x7f110539;
    /**
     * [CHAR LIMIT=30] Title for dialog for setting to control the default spell checker
     */
    public static final int choose_spell_checker=0x7f11053a;
    /**
     * The title of the activity to pick a time zone.
     */
    public static final int choose_timezone=0x7f11053b;
    /**
     * Title for Choose voice input dialog [CHAR LIMIT=30]
     */
    public static final int choose_voice_input_title=0x7f11053c;
    /**
     * a11y string
     */
    public static final int clear=0x7f11053d;
    /**
     * Manage applications, individual application screen, button label under Launch by default heading.  This is used to clear any default actions that may be assigned to this app.
     */
    public static final int clear_activities=0x7f11053e;
    /**
     * Setting title to revoke secure USB debugging authorizations
     */
    public static final int clear_adb_keys=0x7f11053f;
    /**
     * Manage applications, text label for button
     */
    public static final int clear_cache_btn_text=0x7f110540;
    /**
     * Manage applications, individual application screen, confirmation dialog message. Displays when user selects to "Clear data". It warns the user of the consequences of clearing the data for an app.
     */
    public static final int clear_data_dlg_text=0x7f110541;
    /**
     * Manage applications, individual application screen, confirmation dialog title. Displays when user selects to "Clear data".
     */
    public static final int clear_data_dlg_title=0x7f110542;
    /**
     * Manage applications, text for dialog if clear data fails
     */
    public static final int clear_failed_dlg_text=0x7f110543;
    /**
     * Confirmation message displayed when the user taps Clear app, to ensure they want to remove
     * the instant app from the device.
     */
    public static final int clear_instant_app_confirmation=0x7f110544;
    /**
     * Label for button allow user to remove the instant app from the device.
     */
    public static final int clear_instant_app_data=0x7f110545;
    public static final int clear_text_end_icon_content_description=0x7f110546;
    /**
     * Manage applications, individual application info storage screen. Button below list of URIs.
     */
    public static final int clear_uri_btn_text=0x7f110547;
    /**
     * Manage applications, individual application info screen, button label under Storage heading. Button to clear all data associated with tis app (for example, remove all cached emails for an Email app)
     */
    public static final int clear_user_data_text=0x7f110548;
    public static final int clock_component_name=0x7f110549;
    /**
     * Label for the color black. [CHAR LIMIT=35]
     */
    public static final int color_black=0x7f11054a;
    /**
     * Label for the color blue. [CHAR LIMIT=35]
     */
    public static final int color_blue=0x7f11054b;
    /**
     * Label for custom colors, formats as a HTML color.
     */
    public static final int color_custom=0x7f11054c;
    /**
     * Label for the color cyan. [CHAR LIMIT=35]
     */
    public static final int color_cyan=0x7f11054d;
    /**
     * Label for the color gray. [CHAR LIMIT=35]
     */
    public static final int color_gray=0x7f11054e;
    /**
     * Label for the color green. [CHAR LIMIT=35]
     */
    public static final int color_green=0x7f11054f;
    /**
     * Label for the color magenta. [CHAR LIMIT=35]
     */
    public static final int color_magenta=0x7f110550;
    /**
     * Display settings screen, Color mode option for "Adaptive color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_automatic=0x7f110551;
    /**
     * Display settings screen, Color mode option for "Boosted(sRGB + 10%) color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_boosted=0x7f110552;
    /**
     * Display settings screen, Color mode option for "natural(sRGB) color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_natural=0x7f110553;
    /**
     * Display settings screen, Color mode option for "Saturated color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_saturated=0x7f110554;
    /**
     * Display settings screen, "Adaptive color" setting option summary [CHAR LIMIT=NONE]
     */
    public static final int color_mode_summary_automatic=0x7f110555;
    /**
     * Display settings screen, "natural(sRGB) color" setting option summary [CHAR LIMIT=NONE]
     */
    public static final int color_mode_summary_natural=0x7f110556;
    /**
     * Display settings screen, Color mode settings title [CHAR LIMIT=30]
     */
    public static final int color_mode_title=0x7f110557;
    /**
     * Label for no color (transparent). [CHAR LIMIT=35]
     */
    public static final int color_none=0x7f110558;
    /**
     * Orange label.  [CHAR LIMIT=40]
     */
    public static final int color_orange=0x7f110559;
    /**
     * Purple label.  [CHAR LIMIT=40]
     */
    public static final int color_purple=0x7f11055a;
    /**
     * Label for the color red. [CHAR LIMIT=35]
     */
    public static final int color_red=0x7f11055b;
    /**
     * Name of the setting to change the display's color temperature
     */
    public static final int color_temperature=0x7f11055c;
    /**
     * Description of the setting to change the display's color temperature
     */
    public static final int color_temperature_desc=0x7f11055d;
    /**
     * Toast message letting the user know the color temperature setting is not immediate
     */
    public static final int color_temperature_toast=0x7f11055e;
    /**
     * Label for color selection title in sim settings [CHAR LIMIT=35]
     */
    public static final int color_title=0x7f11055f;
    /**
     * Label for default color. This lets the app pick the color. [CHAR LIMIT=35]
     */
    public static final int color_unspecified=0x7f110560;
    /**
     * Label for the color white. [CHAR LIMIT=35]
     */
    public static final int color_white=0x7f110561;
    /**
     * Label for the color yellow. [CHAR LIMIT=35]
     */
    public static final int color_yellow=0x7f110562;
    /**
     * Content description of preview pager in colors preview
     */
    public static final int colors_viewpager_content_description=0x7f110563;
    public static final int computing_size=0x7f110564;
    /**
     * Summary of condition that airplane mode is on [CHAR LIMIT=NONE]
     */
    public static final int condition_airplane_summary=0x7f110565;
    /**
     * Title of condition that airplane mode is on [CHAR LIMIT=30]
     */
    public static final int condition_airplane_title=0x7f110566;
    /**
     * Summary of condition that battery saver is on [CHAR LIMIT=NONE]
     */
    public static final int condition_battery_summary=0x7f110567;
    /**
     * Title of condition that battery saver is on [CHAR LIMIT=30]
     */
    public static final int condition_battery_title=0x7f110568;
    /**
     * Summary of condition that background data is off [CHAR LIMIT=NONE]
     */
    public static final int condition_bg_data_summary=0x7f110569;
    /**
     * Title of condition that background data is off [CHAR LIMIT=30]
     */
    public static final int condition_bg_data_title=0x7f11056a;
    /**
     * Summary of condition that cellular data is off [CHAR LIMIT=NONE]
     */
    public static final int condition_cellular_summary=0x7f11056b;
    /**
     * Title of condition that cellular data is off [CHAR LIMIT=50]
     */
    public static final int condition_cellular_title=0x7f11056c;
    /**
     * Action label on device muted card - clicking action will turn on ringtone sound [CHAR LIMIT=50]
     */
    public static final int condition_device_muted_action_turn_on_sound=0x7f11056d;
    /**
     * Summary of condition that indicates device is muted
     */
    public static final int condition_device_muted_summary=0x7f11056e;
    /**
     * Title of condition that indicates device is muted [CHAR LIMIT=50]
     */
    public static final int condition_device_muted_title=0x7f11056f;
    /**
     * Summary of condition that indicates device is set to vibrate
     */
    public static final int condition_device_vibrate_summary=0x7f110570;
    /**
     * Title of condition that indicates device is set to vibrate [CHAR LIMIT=50]
     */
    public static final int condition_device_vibrate_title=0x7f110571;
    /**
     * Content description used when collapsing a condition item to see less details
     */
    public static final int condition_expand_hide=0x7f110572;
    /**
     * Content description used when expanding a condition item to see more details
     */
    public static final int condition_expand_show=0x7f110573;
    /**
     * Summary of condition that gray scale is on [CHAR LIMIT=NONE]
     */
    public static final int condition_grayscale_summary=0x7f110574;
    /**
     * Title of condition that gray scale is on [CHAR LIMIT=NONE]
     */
    public static final int condition_grayscale_title=0x7f110575;
    /**
     * Title of condition that hotspot is on [CHAR LIMIT=30]
     */
    public static final int condition_hotspot_title=0x7f110576;
    /**
     * Summary of condition that night display is on (renamed "Night Light" with title caps). [CHAR LIMIT=NONE]
     */
    public static final int condition_night_display_summary=0x7f110577;
    /**
     * Title of condition that night display is on (renamed "Night Light" with title caps). [CHAR LIMIT=30]
     */
    public static final int condition_night_display_title=0x7f110578;
    /**
     * Summary for the condition section on the dashboard, representing number of conditions. [CHAR LIMIT=10]
     */
    public static final int condition_summary=0x7f110579;
    /**
     * Turn off a conditional state of the device (e.g. airplane mode, or hotspot) [CHAR LIMIT=30]
     */
    public static final int condition_turn_off=0x7f11057a;
    /**
     * Turn on a conditional state of the device (e.g. cellular data) [CHAR LIMIT=30]
     */
    public static final int condition_turn_on=0x7f11057b;
    /**
     * Summary of condition that work mode is off [CHAR LIMIT=NONE]
     */
    public static final int condition_work_summary=0x7f11057c;
    /**
     * Title of condition that work mode is off [CHAR LIMIT=30]
     */
    public static final int condition_work_title=0x7f11057d;
    /**
     * Summary of condition that do not disturb is on and all exceptions set to off [CHAR LIMIT=38]
     */
    public static final int condition_zen_summary_phone_muted=0x7f11057e;
    /**
     * Summary of condition that do not disturb is on and some exceptions are allowed [CHAR LIMIT=36]
     */
    public static final int condition_zen_summary_with_exceptions=0x7f11057f;
    /**
     * Title of condition that do not disturb is on [CHAR LIMIT=36]
     */
    public static final int condition_zen_title=0x7f110580;
    /**
     * App intent
     */
    public static final int config_account_intent_uri=0x7f110581;
    /**
     * AOSP Emergency app intent action
     */
    public static final int config_aosp_emergency_intent_action=0x7f110582;
    /**
     * AOSP Emergency app package name
     */
    public static final int config_aosp_emergency_package_name=0x7f110583;
    /**
     * Media Uri to view audio storage category.
     */
    public static final int config_audio_storage_category_uri=0x7f110584;
    /**
     * Manufacturer backup settings to launch
     */
    public static final int config_backup_settings_intent=0x7f110585;
    /**
     * Manufacturer backup settings label
     */
    public static final int config_backup_settings_label=0x7f110586;
    /**
     * Authority of advanced device battery prediction
     */
    public static final int config_battery_prediction_authority=0x7f110587;
    /**
     * Cell broacast receiver package name
     */
    public static final int config_cell_broadcast_receiver_package=0x7f110588;
    /**
     * Email address for the homepage contextual cards feedback
     */
    public static final int config_contextual_card_feedback_email=0x7f110589;
    /**
     * Class name for the storage manager's deletion helper class.
     */
    public static final int config_deletion_helper_class=0x7f11058a;
    /**
     * Package name for the storage manager to use from Settings search.
     */
    public static final int config_deletion_helper_package=0x7f11058b;
    /**
     * Media Uri to view documents & other storage category.
     */
    public static final int config_documents_and_other_storage_category_uri=0x7f11058c;
    /**
     * Emergency app intent action
     */
    public static final int config_emergency_intent_action=0x7f11058d;
    /**
     * Emergency app package name
     */
    public static final int config_emergency_package_name=0x7f11058e;
    /**
     * ComponentName to launch a vendor-specific enrollment activity if available
     */
    public static final int config_face_enroll=0x7f11058f;
    /**
     * Fully-qualified class name for the implementation of the FeatureFactory to be instantiated.
     */
    public static final int config_featureFactory=0x7f110590;
    /**
     * Grayscale settings intent
     */
    public static final int config_grayscale_settings_intent=0x7f110591;
    /**
     * Media Uri to view images storage category.
     */
    public static final int config_images_storage_category_uri=0x7f110592;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Configuration screen
     */
    public static final int config_list_label=0x7f110593;
    /**
     * Slice Uri to query nearby devices.
     */
    public static final int config_nearby_devices_slice_uri=0x7f110594;
    /**
     * Uri to query non-public Slice Uris.
     */
    public static final int config_non_public_slice_query_uri=0x7f110595;
    /**
     * Package Installer package name
     */
    public static final int config_package_installer_package_name=0x7f110596;
    /**
     * RTT setting intent action
     */
    public static final int config_rtt_setting_intent_action=0x7f110597;
    /**
     * Package name of dialer supports RTT setting
     */
    public static final int config_rtt_setting_package_name=0x7f110598;
    /**
     * Settings intelligence interaction log intent action
     */
    public static final int config_settingsintelligence_log_action=0x7f110599;
    /**
     * Settings intelligence package name
     */
    public static final int config_settingsintelligence_package_name=0x7f11059a;
    /**
     * Fully-qualified class name for the styles & wallpaper picker activity.
     */
    public static final int config_styles_and_wallpaper_picker_class=0x7f11059b;
    /**
     * Media Uri to view videos storage category.
     */
    public static final int config_videos_storage_category_uri=0x7f11059c;
    public static final int config_wallpaper_picker_class=0x7f11059d;
    /**
     * Intent extra for wallpaper picker activity.
     */
    public static final int config_wallpaper_picker_launch_extra=0x7f11059e;
    /**
     * Package name and fully-qualified class name for the wallpaper picker activity.
     */
    public static final int config_wallpaper_picker_package=0x7f11059f;
    /**
     * Accessibility label for button that leads to screen with more configuration options [CHAR LIMIT=NONE]
     */
    public static final int configure=0x7f1105a0;
    /**
     * Title for application configuration settings [CHAR LIMIT=30]
     */
    public static final int configure_apps=0x7f1105a1;
    /**
     * Title for configuring input method settings [CHAR LIMIT=35]
     */
    public static final int configure_input_method=0x7f1105a2;
    /**
     * Configure Notifications Settings title. [CHAR LIMIT=30]
     */
    public static final int configure_notification_settings=0x7f1105a3;
    /**
     * Configure section header [CHAR LIMIT=30]
     */
    public static final int configure_section_header=0x7f1105a4;
    /**
     * Developer option to convert to file encryption - final warning
     */
    public static final int confirm_convert_to_fbe_warning=0x7f1105a5;
    /**
     * Warning dialog message to confirm user wishes to enable OEM unlock and disable theft protection features
     */
    public static final int confirm_enable_oem_unlock_text=0x7f1105a6;
    /**
     * Confirmation dialog title to ensure user wishes to enable OEM unlock and disable theft protection features
     */
    public static final int confirm_enable_oem_unlock_title=0x7f1105a7;
    /**
     * Prompt for the user to confirm the new full-backup password by re-entering it
     */
    public static final int confirm_new_backup_pw_prompt=0x7f1105a8;
    /**
     * [CHAR LIMIT=NONE] eSim deletion confirmation description
     */
    public static final int confirm_sim_deletion_description=0x7f1105a9;
    /**
     * [CHAR LIMIT=60] turn eSim deletion confirmation on/off
     */
    public static final int confirm_sim_deletion_title=0x7f1105aa;
    /**
     * Used in confirmation dialogs as the action that the user will tap to turn on the feature. [CHAR LIMIT=40]
     */
    public static final int confirmation_turn_on=0x7f1105ab;
    /**
     * Available networks screen, toast when unable to connect to a network temporarily [CHAR LIMIT=NONE]
     */
    public static final int connect_later=0x7f1105ac;
    /**
     * Summary for preference to add a device [CHAR LIMIT=none]
     */
    public static final int connected_device_add_device_summary=0x7f1105ad;
    /**
     * Toast text for hint user bluetooth is turned on [CHAR LIMIT=none]
     */
    public static final int connected_device_bluetooth_turned_on_toast=0x7f1105ae;
    /**
     * Title for Bluetooth device group with media capability group [CHAR LIMIT=none]
     */
    public static final int connected_device_call_device_title=0x7f1105af;
    /**
     * Title for other connection preferences [CHAR LIMIT=none]
     */
    public static final int connected_device_connections_title=0x7f1105b0;
    /**
     * Title for Bluetooth device group with media capability group [CHAR LIMIT=none]
     */
    public static final int connected_device_media_device_title=0x7f1105b1;
    /**
     * Title for connected device group [CHAR LIMIT=none]
     */
    public static final int connected_device_other_device_title=0x7f1105b2;
    /**
     * Preference screen title for Bluetooth preference to open paired but no connection list [CHAR LIMIT=none]
     */
    public static final int connected_device_previously_connected_screen_title=0x7f1105b3;
    /**
     * Title for Bluetooth preference to open paired but no connection list [CHAR LIMIT=none]
     */
    public static final int connected_device_previously_connected_title=0x7f1105b4;
    /**
     * Title for connected device group [CHAR LIMIT=none]
     */
    public static final int connected_device_saved_title=0x7f1105b5;
    /**
     * Summary for see all preference when bluetooth is disable [CHAR LIMIT=none]
     */
    public static final int connected_device_see_all_summary=0x7f1105b6;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_android_auto_no_driving_mode_summary=0x7f1105b7;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_android_auto_no_nfc_no_driving_mode=0x7f1105b8;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_android_auto_no_nfc_summary=0x7f1105b9;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_android_auto_summary=0x7f1105ba;
    /**
     * Summary for Connected devices settings, explaining default settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_default_summary=0x7f1105bb;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_no_driving_mode_no_nfc_summary=0x7f1105bc;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_no_driving_mode_summary=0x7f1105bd;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_no_nfc_summary=0x7f1105be;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_summary=0x7f1105bf;
    /**
     * Title for setting tile leading to Connected devices settings [CHAR LIMIT=40]
     */
    public static final int connected_devices_dashboard_title=0x7f1105c0;
    /**
     * Summary for connect to metered access point [CHAR LIMIT=NONE]
     */
    public static final int connected_to_metered_access_point=0x7f1105c1;
    /**
     * Title for connected TWS device group [CHAR LIMIT=none]
     */
    public static final int connected_tws_device_saved_title=0x7f1105c2;
    /**
     * Status message of Wi-Fi when it is connected by a app (via suggestion or network request). [CHAR LIMIT=NONE]
     */
    public static final int connected_via_app=0x7f1105c3;
    /**
     * Status message of Wi-Fi when it is connected to a Carrier Network. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_carrier=0x7f1105c4;
    /**
     * Status message of Wi-Fi when it is automatically connected by a network recommendation provider. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_network_scorer=0x7f1105c5;
    /**
     * Status message of Wi-Fi when it is automatically connected by a default network recommendation provider. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_network_scorer_default=0x7f1105c6;
    /**
     * Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_passpoint=0x7f1105c7;
    /**
     * The text displayed in the dialog shown when the user tries to enable Contact Discovery,
     * which is a service that exchanges contacts with the carrier to determine if your contacts
     * support enhanced features, such as video calling and RCS messaging. [CHAR LIMIT=NONE]
     */
    public static final int contact_discovery_opt_in_dialog_message=0x7f1105c8;
    /**
     * The text displayed in the dialog shown when the mobile carrier's name is not known and the
     * user tries to enable Contact Discovery, which is a service that exchanges contacts with
     * the carrier to determine if your contacts support enhanced features, such as video calling
     * and RCS messaging. [CHAR LIMIT=NONE]
     */
    public static final int contact_discovery_opt_in_dialog_message_no_carrier_defined=0x7f1105c9;
    /**
     * Title of the dialog shown when the user tries to enable Contact Discovery, which is a
     * service that exchanges contacts with the carrier to determine if your contacts support
     * enhanced features, such as video calling and RCS messaging. [CHAR LIMIT=50]
     */
    public static final int contact_discovery_opt_in_dialog_title=0x7f1105ca;
    /**
     * Title of the dialog shown when the carrier name is not known and the user tries to enable
     * Contact Discovery, which is a service that exchanges contacts with the carrier to determine
     * if your contacts support enhanced features, such as video calling and RCS messaging.
     * [CHAR LIMIT=50]
     */
    public static final int contact_discovery_opt_in_dialog_title_no_carrier_defined=0x7f1105cb;
    /**
     * Summary of a preference determining whether or not the user has enabled contact discovery,
     * which is a service that exchanges contacts with the carrier to determine if your contacts
     * support enhanced features, such as video calling and RCS messaging. [CHAR LIMIT=110]
     */
    public static final int contact_discovery_opt_in_summary=0x7f1105cc;
    /**
     * Title of a preference determining whether or not the user has allowed the device to share
     * their contacts' phone numbers with their carrier in order to implement contact discovery,
     * which is a service that exchanges contacts with the carrier to determine if your
     * contacts support advanced calling features, such as video calling. [CHAR LIMIT=50]
     */
    public static final int contact_discovery_opt_in_title=0x7f1105cd;
    /**
     * Title of the 'Content Capture' feature toggle in the Settings -> Privacy screen [CHAR LIMIT=none]
     */
    public static final int content_capture=0x7f1105ce;
    /**
     * Description of the 'Content Capture' feature toggle in the Settings -> Privacy screen [CHAR LIMIT=NONE]
     */
    public static final int content_capture_summary=0x7f1105cf;
    /**
     * Content description for drawer menu button [CHAR_LIMIT=30]
     */
    public static final int content_description_menu_button=0x7f1105d0;
    /**
     * String for contextual card dismissal [CHAR LIMIT=NONE]
     */
    public static final int contextual_card_dismiss_confirm_message=0x7f1105d1;
    /**
     * Label for button in contextual card for users to keep the card [CHAR LIMIT=30]
     */
    public static final int contextual_card_dismiss_keep=0x7f1105d2;
    /**
     * Label for button in contextual card for users to remove the card [CHAR LIMIT=30]
     */
    public static final int contextual_card_dismiss_remove=0x7f1105d3;
    /**
     * String for contextual card feedback dialog [CHAR LIMIT=NONE]
     */
    public static final int contextual_card_feedback_confirm_message=0x7f1105d4;
    /**
     * Label for button in contextual card feedback dialog for users to send feedback [CHAR LIMIT=30]
     */
    public static final int contextual_card_feedback_send=0x7f1105d5;
    /**
     * String for snack bar message when users swipe to dismiss a contextual card [CHAR LIMIT=60]
     */
    public static final int contextual_card_removed_message=0x7f1105d6;
    /**
     * Label for snack bar action allowing users to undo contextual card dismissal [CHAR LIMIT=30]
     */
    public static final int contextual_card_undo_dismissal_text=0x7f1105d7;
    /**
     * About phone settings screen, setting option name to see a list of contributors
     */
    public static final int contributors_title=0x7f1105d8;
    /**
     * Manage applications, Header name used for other controls
     */
    public static final int controls_label=0x7f1105d9;
    /**
     * Subtitle for possible options
     */
    public static final int controls_subtitle=0x7f1105da;
    /**
     * [CHAR LIMIT=100] Header for an individual conversation
     */
    public static final int conversation_category_title=0x7f1105db;
    /**
     * notification header - settings for conversation type notifications
     */
    public static final int conversation_notifs_category=0x7f1105dc;
    /**
     * summary for conversation onboarding
     */
    public static final int conversation_onboarding_summary=0x7f1105dd;
    /**
     * title for conversation onboarding
     */
    public static final int conversation_onboarding_title=0x7f1105de;
    /**
     * [CHAR LIMIT=100] Summary for switch that says whether this app can appear in the conversation notification section
     */
    public static final int conversation_section_switch_summary=0x7f1105df;
    /**
     * [CHAR LIMIT=100] Title for switch that says whether this app can appear in the conversation notification section
     */
    public static final int conversation_section_switch_title=0x7f1105e0;
    /**
     * [CHAR LIMIT=60] button title
     */
    public static final int conversation_settings_clear_recents=0x7f1105e1;
    /**
     * [CHAR LIMIT=100] Header for a grouping on conversations
     */
    public static final int conversations_category_title=0x7f1105e2;
    /**
     * Warning displayed on dialog with final prompt for converting to file encryption
     */
    public static final int convert_to_fbe_warning=0x7f1105e3;
    /**
     * Developer settings screen, convert userdata to file encryption option name
     */
    public static final int convert_to_file_encryption=0x7f1105e4;
    /**
     * Developer settings screen, convert userdata to file encryption summary when option is already done
     */
    public static final int convert_to_file_encryption_done=0x7f1105e5;
    /**
     * Developer settings screen, convert userdata to file encryption summary when option is available
     */
    public static final int convert_to_file_encryption_enabled=0x7f1105e6;
    public static final int convo_not_supported_summary=0x7f1105e7;
    public static final int copy=0x7f1105e8;
    /**
     * Toast message for copy action of Copyable Slice [CHAR LIMIT=NONE]
     */
    public static final int copyable_slice_toast=0x7f1105e9;
    /**
     * About phone settings screen, setting option name to see copyright-related info
     */
    public static final int copyright_title=0x7f1105ea;
    /**
     * Strings for Dialog create button
     */
    public static final int create=0x7f1105eb;
    /**
     * Dialog message when creating a new user [CHAR LIMIT=NONE]
     */
    public static final int creating_new_user_dialog_message=0x7f1105ec;
    /**
     * Header for a list of items that a credential entry contains. For example, one private key and one certificate. [CHAR LIMIT=NONE]
     */
    public static final int credential_contains=0x7f1105ed;
    /**
     * Sub-heading for a user credential installed to be used by apps and as part of VPN configurations. [CHAR LIMIT=NONE]
     */
    public static final int credential_for_vpn_and_apps=0x7f1105ee;
    /**
     * Sub-heading for a user credential installed to be used as part of a Wi-Fi configuration. [CHAR LIMIT=NONE].
     */
    public static final int credential_for_wifi=0x7f1105ef;
    /**
     * Toast message [CHAR LIMIT=30]
     */
    public static final int credentials_erased=0x7f1105f0;
    /**
     * Title of preference to install certificates [CHAR LIMIT=30]
     */
    public static final int credentials_install=0x7f1105f1;
    /**
     * Summary of preference to install certificates from SD card [CHAR LIMIT=NONE]
     */
    public static final int credentials_install_summary=0x7f1105f2;
    /**
     * Toast message [CHAR LIMIT=30] when credential storage containing private keys and certificates could not be erased (opposite of string credentials_erased)
     */
    public static final int credentials_not_erased=0x7f1105f3;
    /**
     * Title of preference to reset credential storage [CHAR LIMIT=30]
     */
    public static final int credentials_reset=0x7f1105f4;
    /**
     * Description of dialog to reset credential storage [CHAR LIMIT=NONE]
     */
    public static final int credentials_reset_hint=0x7f1105f5;
    /**
     * Summary of preference to reset credential storage [CHAR LIMIT=NONE]
     */
    public static final int credentials_reset_summary=0x7f1105f6;
    /**
     * Error message for users that aren't allowed to see or modify credentials [CHAR LIMIT=none]
     */
    public static final int credentials_settings_not_available=0x7f1105f7;
    /**
     * Title of preference group for credential storage settings [CHAR LIMIT=30]
     */
    public static final int credentials_title=0x7f1105f8;
    /**
     * [CHAR LIMIT=NONE] Setting description. If the user turns on this setting, they can see their work events on their personal calendar.
     */
    public static final int cross_profile_calendar_summary=0x7f1105f9;
    /**
     * [CHAR LIMIT=NONE] Settings label. This setting lets the user show their work events on their personal calendar. The adjective 'Cross-profile' is referring to the work and personal profiles a user has on their phone.
     */
    public static final int cross_profile_calendar_title=0x7f1105fa;
    /**
     * Button text to start encryption process
     */
    public static final int crypt_keeper_button_text=0x7f1105fb;
    /**
     * Title of the final confirmation screen before starting device encryption
     */
    public static final int crypt_keeper_confirm_title=0x7f1105fc;
    /**
     * Informational text when encryption fails
     */
    public static final int crypt_keeper_data_corrupt_summary=0x7f1105fd;
    /**
     * Title of the encryption screen when decrypting the device failed
     */
    public static final int crypt_keeper_data_corrupt_title=0x7f1105fe;
    /**
     * Informational text in the first confirmation screen before starting device encryption
     */
    public static final int crypt_keeper_desc=0x7f1105ff;
    /**
     * Dialog message, shown when encryption cannot proceed because a PIN/Password is needed
     */
    public static final int crypt_keeper_dialog_need_password_message=0x7f110600;
    /**
     * Dialog title, shown when encryption cannot proceed because a PIN/Password is needed
     */
    public static final int crypt_keeper_dialog_need_password_title=0x7f110601;
    /**
     * Title of the preferences item to control encryption
     */
    public static final int crypt_keeper_encrypt_title=0x7f110602;
    /**
     * Summary of the preferences item to control encryption, when encryption is active
     */
    public static final int crypt_keeper_encrypted_summary=0x7f110603;
    /**
     * Informational text on the password entry screen prompting the user for their password
     */
    public static final int crypt_keeper_enter_password=0x7f110604;
    /**
     * Informational text when encryption fails
     */
    public static final int crypt_keeper_failed_summary=0x7f110605;
    /**
     * Title of the encryption screen when encrypting the device failed
     */
    public static final int crypt_keeper_failed_title=0x7f110606;
    /**
     * Warning text in the final confirmation screen before starting device encryption
     */
    public static final int crypt_keeper_final_desc=0x7f110607;
    public static final int crypt_keeper_force_power_cycle=0x7f110608;
    /**
     * Warning string that will be displayed when encryption cannot be started
     */
    public static final int crypt_keeper_low_charge_text=0x7f110609;
    /**
     * Title of the preferences category for preference items to control encryption
     */
    public static final int crypt_keeper_settings_title=0x7f11060a;
    /**
     * Informational text on the progress screen while encrypting the device
     */
    public static final int crypt_keeper_setup_description=0x7f11060b;
    public static final int crypt_keeper_setup_time_remaining=0x7f11060c;
    /**
     * Title of the progress screen while encrypting the device
     */
    public static final int crypt_keeper_setup_title=0x7f11060d;
    /**
     * Image button description to switch input method
     */
    public static final int crypt_keeper_switch_input_method=0x7f11060e;
    /**
     * Warning string that will be displayed when encryption cannot be started
     */
    public static final int crypt_keeper_unplugged_text=0x7f11060f;
    /**
     * Warn user their device will be wiped if they make x more failed attempts
     */
    public static final int crypt_keeper_warn_wipe=0x7f110610;
    /**
     * Button at the bottom of the CryptKeeper screen to make an emergency call.
     */
    public static final int cryptkeeper_emergency_call=0x7f110611;
    /**
     * Button at the bottom of the CryptKeeper screen that lets the user return to a call
     */
    public static final int cryptkeeper_return_to_call=0x7f110612;
    /**
     * Message shown when user enters wrong password
     */
    public static final int cryptkeeper_wrong_password=0x7f110613;
    /**
     * Message shown when user enters wrong pattern
     */
    public static final int cryptkeeper_wrong_pattern=0x7f110614;
    /**
     * Message shown when user enters wrong PIN
     */
    public static final int cryptkeeper_wrong_pin=0x7f110615;
    /**
     * Prompt for the user to enter their current full-backup password
     */
    public static final int current_backup_pw_prompt=0x7f110616;
    /**
     * Title for the option to press to choose the current keyboard, also known as input method [CHAR LIMIT=35]
     */
    public static final int current_input_method=0x7f110617;
    /**
     * Summary specifying that this is the current screen lock setting [CHAR LIMIT=45]
     */
    public static final int current_screen_lock=0x7f110618;
    /**
     * Label for deuteranomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_deuteranomaly=0x7f110619;
    /**
     * Summary shown for deuteranomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_deuteranomaly_summary=0x7f11061a;
    /**
     * Title shown for deuteranomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_deuteranomaly_title=0x7f11061b;
    /**
     * Label for disabling color space adjustment [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_disabled=0x7f11061c;
    /**
     * Title shown for grayscale [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_grayscale_title=0x7f11061d;
    /**
     * Label for converting display colors to grayscale, which simulates monochromacy (complete color blindness). [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_monochromacy=0x7f11061e;
    /**
     * Label for protanomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_protanomaly=0x7f11061f;
    /**
     * Summary shown for protanomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_protanomaly_summary=0x7f110620;
    /**
     * Title shown for protanomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_protanomaly_title=0x7f110621;
    /**
     * Label for tritanomaly (blue-yellow color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_tritanomaly=0x7f110622;
    /**
     * Summary shown for tritanomaly (blue-yellow color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_tritanomaly_summary=0x7f110623;
    /**
     * Title shown for tritanomaly (blue-yellow color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_tritanomaly_title=0x7f110624;
    /**
     * Title for the preference to configure the type of color space correction to apply. [CHAR LIMIT=NONE]
     */
    public static final int daltonizer_type=0x7f110625;
    /**
     * Summary shown for color space correction preference when its value is overridden by another preference [CHAR LIMIT=35]
     */
    public static final int daltonizer_type_overridden=0x7f110626;
    /**
     * Title for Dark theme main switch preferences. [CHAR LIMIT=50]
     */
    public static final int dark_theme_main_switch_title=0x7f110627;
    /**
     * [CHAR_LIMIT=50] Subtitle string in the dark theme slice(suggestion)
     */
    public static final int dark_theme_slice_subtitle=0x7f110628;
    /**
     * [CHAR_LIMIT=50] Title string in the dark theme slice(suggestion)
     */
    public static final int dark_theme_slice_title=0x7f110629;
    /**
     * Display settings screen, deactivation button action for sunset-to-sunrise schedule [CHAR LIMIT=40]
     */
    public static final int dark_ui_activation_off_auto=0x7f11062a;
    /**
     * Display settings screen, deactivation button action for custom schedule [CHAR LIMIT=40]
     */
    public static final int dark_ui_activation_off_custom=0x7f11062b;
    /**
     * Display settings screen, deactivation button action for manual mode. [CHAR LIMIT=40]
     */
    public static final int dark_ui_activation_off_manual=0x7f11062c;
    /**
     * Display settings screen, activation button action for sunset-to-sunrise schedule [CHAR LIMIT=40]
     */
    public static final int dark_ui_activation_on_auto=0x7f11062d;
    /**
     * Display settings screen, activation button action for custom schedule [CHAR LIMIT=40]
     */
    public static final int dark_ui_activation_on_custom=0x7f11062e;
    /**
     * Display settings screen, activation button action for manual mode. [CHAR LIMIT=40]
     */
    public static final int dark_ui_activation_on_manual=0x7f11062f;
    /**
     * Dark UI screen, setting option value for Dark UI to turn on/off automatically at sunset/sunrise. [CHAR LIMIT=32]
     */
    public static final int dark_ui_auto_mode_auto=0x7f110630;
    /**
     * Dark UI screen, setting option value for Dark theme to turn on/off automatically according to a user defined schedule. [CHAR LIMIT=32]
     */
    public static final int dark_ui_auto_mode_custom=0x7f110631;
    /**
     * Dark UI screen, setting option value for Dark UI to *never* turn on/off automatically. [CHAR LIMIT=30]
     */
    public static final int dark_ui_auto_mode_never=0x7f110632;
    /**
     * Dark UI screen, setting option name to configure whether Dark UI turn on/off automatically. [CHAR LIMIT=30]
     */
    public static final int dark_ui_auto_mode_title=0x7f110633;
    /**
     * [CHAR LIMIT=60] Name of setting that changes the UI to dark
     */
    public static final int dark_ui_mode=0x7f110634;
    /**
     * [CHAR LIMIT=60] Summary string on dark theme explaining why the toggle is disabled while the setting is off
     */
    public static final int dark_ui_mode_disabled_summary_dark_theme_off=0x7f110635;
    /**
     * [CHAR LIMIT=60] Summary string on dark theme explaining why the toggle is disabled while the setting is still on
     */
    public static final int dark_ui_mode_disabled_summary_dark_theme_on=0x7f110636;
    /**
     * [CHAR_LIMIT=NONE] Summary that is shown in the footer when dark mode is selected
     */
    public static final int dark_ui_settings_dark_summary=0x7f110637;
    /**
     * [CHAR_LIMIT=40] Positive button text in dark theme notification
     */
    public static final int dark_ui_settings_dialog_acknowledge=0x7f110638;
    /**
     * Dark UI screen, setting option name controlling the current activation status. [CHAR LIMIT=30]
     */
    public static final int dark_ui_status_title=0x7f110639;
    /**
     * Display settings screen, summary of Dark UI when off and will turn on automatically at sunset. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_summary_off_auto_mode_auto=0x7f11063a;
    /**
     * Display settings screen, summary format of night display when off and will turn on automatically at a user defined time. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_summary_off_auto_mode_custom=0x7f11063b;
    /**
     * Display settings screen, summary of Dark UI when off and will *never* turn on automatically. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_summary_off_auto_mode_never=0x7f11063c;
    /**
     * Display settings screen, summary of Dark UI when on and will turn off automatically at sunrise. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_summary_on_auto_mode_auto=0x7f11063d;
    /**
     * Display settings screen, summary format of night display when on and will turn off automatically at a user defined time. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_summary_on_auto_mode_custom=0x7f11063e;
    /**
     * Display settings screen, summary of Dark UI when on and will *never* turn off automatically. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_summary_on_auto_mode_never=0x7f11063f;
    /**
     * Dark theme screen, description of Dark theme feature. [CHAR LIMIT=NONE]
     */
    public static final int dark_ui_text=0x7f110640;
    /**
     * Dark UI screen, setting option name to enable Dark UI [CHAR LIMIT=30]
     */
    public static final int dark_ui_title=0x7f110641;
    /**
     * Text to describe the dashboard fragment title [CHAR LIMIT=16]
     */
    public static final int dashboard_title=0x7f110642;
    /**
     * Content description of the data connection type 3.5G. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_3_5g=0x7f110643;
    /**
     * Content description of the data connection type 3.5G+. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_3_5g_plus=0x7f110644;
    /**
     * Content description of the data connection type 3G. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_3g=0x7f110645;
    /**
     * Content description of the data connection type 4G . [CHAR LIMIT=NONE]
     */
    public static final int data_connection_4g=0x7f110646;
    /**
     * Content description of the data connection type 4G+. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_4g_plus=0x7f110647;
    /**
     * Content description of the data connection type 5G. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_5g=0x7f110648;
    /**
     * Content description of the data connection type 5G+. [CHAR LIMIT=NONE]
     * Content description of the data connection type 5G UW. [CHAR LIMIT=NONE]
     * Content description of the data connection type 5G UW. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_5g_plus=0x7f110649;
    /**
     * Content description of the data connection type 5Ge with HTML styling. DO NOT TRANSLATE [CHAR LIMIT=NONE]
     */
    public static final int data_connection_5ge_html=0x7f11064a;
    /**
     * Content description of the data connection type Carrier WiFi. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_carrier_wifi=0x7f11064b;
    /**
     * Content description of the data connection type CDMA. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_cdma=0x7f11064c;
    /**
     * Content description of the data connection type Edge. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_edge=0x7f11064d;
    /**
     * Content description of the data connection type GPRS. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_gprs=0x7f11064e;
    /**
     * Content description of the data connection type LTE. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_lte=0x7f11064f;
    /**
     * Content description of the data connection type LTE+. [CHAR LIMIT=NONE]
     */
    public static final int data_connection_lte_plus=0x7f110650;
    /**
     * Title of a preference for whether to allow data during calls that is shown when mobile
     * data is turned off. This is needed for some multi-SIM scenarios, because the SIM that is
     * default for data might not be available during a phone call. [CHAR LIMIT=NONE]
     */
    public static final int data_during_calls_summary=0x7f110651;
    /**
     * Title of a preference for whether to allow data during calls that is shown when mobile
     * data is turned off. This is needed for some multi-SIM scenarios, because the SIM that is
     * default for data might not be available during a phone call. [CHAR LIMIT=60]
     */
    public static final int data_during_calls_title=0x7f110652;
    /**
     * Label for button to set the amount of data before user is limited [CHAR LIMIT=30]
     */
    public static final int data_limit=0x7f110653;
    /**
     * Shows the amount of data the user has used over their data limit [CHAR LIMIT=13]
     */
    public static final int data_overusage=0x7f110654;
    /**
     * Optional part of data usage showing the remaining amount [CHAR LIMIT=13]
     */
    public static final int data_remaining=0x7f110655;
    /**
     * Toggle switch title for enabling roaming on the primary data SIM card. [CHAR LIMIT=32]
     */
    public static final int data_roaming_enable_mobile=0x7f110656;
    /**
     * Summary for the Data Saver feature being off [CHAR LIMIT=NONE]
     */
    public static final int data_saver_off=0x7f110657;
    /**
     * Summary for the Data Saver feature being on [CHAR LIMIT=NONE]
     */
    public static final int data_saver_on=0x7f110658;
    /**
     * Switch label to enable the Data Saver feature [CHAR LIMIT=NONE]
     */
    public static final int data_saver_switch_title=0x7f110659;
    /**
     * Name of Data Saver screens [CHAR LIMIT=30]
     */
    public static final int data_saver_title=0x7f11065a;
    /**
     * Manage applications, individual application info screen, label under Storage heading.  The amount of sapce taken up by the app's data (for example, downloaded emails or something like that)
     */
    public static final int data_size_label=0x7f11065b;
    /**
     * Summary for data usage preference [CHAR LIMIT=15]
     */
    public static final int data_summary_format=0x7f11065c;
    /**
     * Message for switching data SIM; switching takes a while
     */
    public static final int data_switch_started=0x7f11065d;
    /**
     * Message about carrier data accounting.  [CHAR LIMIT=100]
     */
    public static final int data_usage_accounting=0x7f11065e;
    /**
     * Title for app usage. [CHAR LIMIT=40]
     */
    public static final int data_usage_app=0x7f11065f;
    /**
     * Title for app usage. [CHAR LIMIT=40]
     */
    public static final int data_usage_app_info_label=0x7f110660;
    /**
     * Title for application data usage separator in data usage list. [CHAR LIMIT=25]
     */
    public static final int data_usage_app_items_header_text=0x7f110661;
    /**
     * Per-app data restrictions
     */
    public static final int data_usage_app_restrict_all=0x7f110662;
    public static final int data_usage_app_restrict_all_summary=0x7f110663;
    /**
     * Checkbox label that restricts background data usage of a specific application. [CHAR LIMIT=40]
     */
    public static final int data_usage_app_restrict_background=0x7f110664;
    /**
     * Summary message for checkbox that restricts background data usage of a specific application. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_app_restrict_background_summary=0x7f110665;
    /**
     * Summary message for checkbox that restricts background data usage of a specific application when no networks have been limited. [CHAR LIMIT=84]
     */
    public static final int data_usage_app_restrict_background_summary_disabled=0x7f110666;
    /**
     * Body of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_app_restrict_dialog=0x7f110667;
    /**
     * Title of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=48]
     */
    public static final int data_usage_app_restrict_dialog_title=0x7f110668;
    public static final int data_usage_app_restrict_mobile=0x7f110669;
    public static final int data_usage_app_restrict_mobile_summary=0x7f11066a;
    public static final int data_usage_app_restrict_vpn=0x7f11066b;
    public static final int data_usage_app_restrict_vpn_summary=0x7f11066c;
    public static final int data_usage_app_restrict_wifi=0x7f11066d;
    public static final int data_usage_app_restrict_wifi_summary=0x7f11066e;
    /**
     * Label for application which has its data usage restricted. [CHAR LIMIT=16]
     */
    public static final int data_usage_app_restricted=0x7f11066f;
    /**
     * Button title for launching application-specific data usage settings. [CHAR LIMIT=32]
     */
    public static final int data_usage_app_settings=0x7f110670;
    /**
     * Activity title Mobile data & WI-FI summary. [CHAR LIMIT=40]
     */
    public static final int data_usage_app_summary_title=0x7f110671;
    /**
     * Body of dialog shown when user disables global auto sync [CHAR LIMIT=none]
     */
    public static final int data_usage_auto_sync_off_dialog=0x7f110672;
    /**
     * Title of dialog shown when user disables global auto sync [CHAR LIMIT=32]
     */
    public static final int data_usage_auto_sync_off_dialog_title=0x7f110673;
    /**
     * Body of dialog shown when user enables global auto sync [CHAR LIMIT=none]
     */
    public static final int data_usage_auto_sync_on_dialog=0x7f110674;
    /**
     * Title of dialog shown when user enables global auto sync [CHAR LIMIT=32]
     */
    public static final int data_usage_auto_sync_on_dialog_title=0x7f110675;
    /**
     * Data Usage Background label.  [CHAR LIMIT=40]
     */
    public static final int data_usage_background_label=0x7f110676;
    /**
     * Title for cellular data usage. [CHAR LIMIT=40]
     */
    public static final int data_usage_cellular_data=0x7f110677;
    /**
     * Summary String for Cellular data enable toggle. [CHAR LIMIT=33]
     */
    public static final int data_usage_cellular_data_summary=0x7f110678;
    /**
     * Title for option to change data usage cycle day. [CHAR LIMIT=32]
     */
    public static final int data_usage_change_cycle=0x7f110679;
    /**
     * Brief content description for data usage chart [CHAR LIMIT=NONE]
     */
    public static final int data_usage_chart_brief_content_description=0x7f11067a;
    /**
     * Content description for data usage chart when data is not available [CHAR LIMIT=NONE]
     */
    public static final int data_usage_chart_no_data_content_description=0x7f11067b;
    /**
     * Title for option to pick visible time range from a list available usage periods. [CHAR LIMIT=25]
     */
    public static final int data_usage_cycle=0x7f11067c;
    /**
     * Positive button title for data usage cycle editor, confirming that changes should be saved. [CHAR LIMIT=32]
     */
    public static final int data_usage_cycle_editor_positive=0x7f11067d;
    /**
     * Subtitle of dialog for editing data usage cycle reset date. [CHAR LIMIT=32]
     */
    public static final int data_usage_cycle_editor_subtitle=0x7f11067e;
    /**
     * Title of dialog for editing data usage cycle reset date. [CHAR LIMIT=48]
     */
    public static final int data_usage_cycle_editor_title=0x7f11067f;
    /**
     * Title for setting data limit. [CHAR LIMIT=40]
     */
    public static final int data_usage_data_limit=0x7f110680;
    /**
     * Checkbox label that will disable 2G-3G network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_3g_limit=0x7f110681;
    /**
     * Checkbox label that will disable 4G network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_4g_limit=0x7f110682;
    /**
     * Body of dialog shown to request confirmation that mobile data will be disabled. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_disable_mobile=0x7f110683;
    /**
     * Checkbox label that will disable mobile network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_mobile_limit=0x7f110684;
    /**
     * Checkbox label that will disable Wi-Fi network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_wifi_limit=0x7f110685;
    /**
     * Disclaimer string for data usage measured by device. [CHAR LIMIT=80]
     */
    public static final int data_usage_disclaimer=0x7f110686;
    /**
     * Label shown when no applications used data during selected time period. [CHAR LIMIT=48]
     */
    public static final int data_usage_empty=0x7f110687;
    /**
     * Toggle switch title for enabling 2G and 3G data network connections. [CHAR LIMIT=32]
     */
    public static final int data_usage_enable_3g=0x7f110688;
    /**
     * Toggle switch title for enabling 4G data network connection. [CHAR LIMIT=32]
     */
    public static final int data_usage_enable_4g=0x7f110689;
    /**
     * Toggle switch title for enabling all mobile data network connections. [CHAR LIMIT=32]
     */
    public static final int data_usage_enable_mobile=0x7f11068a;
    /**
     * Data Usage Foreground label.  [CHAR LIMIT=40]
     */
    public static final int data_usage_forground_label=0x7f11068b;
    /**
     * Label for data usage occuring while application in background. [CHAR LIMIT=48]
     */
    public static final int data_usage_label_background=0x7f11068c;
    /**
     * Label for data usage occuring while application in foreground. [CHAR LIMIT=48]
     */
    public static final int data_usage_label_foreground=0x7f11068d;
    /**
     * Body of dialog shown before user limits mobile data usage. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_limit_dialog_mobile=0x7f11068e;
    /**
     * Title of dialog shown before user limits data usage. [CHAR LIMIT=48]
     */
    public static final int data_usage_limit_dialog_title=0x7f11068f;
    /**
     * Title of dialog for editing data usage limit in bytes. [CHAR LIMIT=48]
     */
    public static final int data_usage_limit_editor_title=0x7f110690;
    /**
     * Title shown when current operation applies to mobile networks. [CHAR LIMIT=20]
     */
    public static final int data_usage_list_mobile=0x7f110691;
    /**
     * Title shown when current operation applies to no networks. [CHAR LIMIT=20]
     */
    public static final int data_usage_list_none=0x7f110692;
    /**
     * Title for menu option to allow background data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_allow_background=0x7f110693;
    /**
     * Title for menu option to enable global auto-sync of account data
     */
    public static final int data_usage_menu_auto_sync=0x7f110694;
    /**
     * Title for menu option to hide Ethernet data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_hide_ethernet=0x7f110695;
    /**
     * Title for menu option to hide Wi-Fi data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_hide_wifi=0x7f110696;
    /**
     * Title for menu option to configure metered networks. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_metered=0x7f110697;
    /**
     * Title for menu option to restrict background data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_restrict_background=0x7f110698;
    /**
     * Title for menu option to enable mobile data when roaming. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_roaming=0x7f110699;
    /**
     * Title for menu option to show Ethernet data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_show_ethernet=0x7f11069a;
    /**
     * Title for menu option to show Wi-Fi data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_show_wifi=0x7f11069b;
    /**
     * Title for menu option to show details for all SIM cards. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_sim_cards=0x7f11069c;
    /**
     * Title for menu option to show 4G mobile data usage separate from other mobile data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_split_4g=0x7f11069d;
    /**
     * Option for indicating that a network being metered (expensive) should be determined automatically. [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_auto=0x7f11069e;
    /**
     * Dialog body for selecting paid networks. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_metered_body=0x7f11069f;
    /**
     * Header for list of mobile networks. [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_mobile=0x7f1106a0;
    /**
     * Option for indicating that a network is not metered (inexpensive). [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_no=0x7f1106a1;
    /**
     * Dialog title for selecting metered networks. [CHAR LIMIT=25]
     */
    public static final int data_usage_metered_title=0x7f1106a2;
    /**
     * Header for list of Wi-Fi networks. [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_wifi=0x7f1106a3;
    /**
     * Body text prompting user to enable Wi-Fi to configure metered networks. [CHAR LIMIT=64]
     */
    public static final int data_usage_metered_wifi_disabled=0x7f1106a4;
    /**
     * Option for indicating that a network is metered (expensive). [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_yes=0x7f1106a5;
    /**
     * Title of data usage item that represents system updates (OTAs). [CHAR LIMIT=48]
     */
    public static final int data_usage_ota=0x7f1106a6;
    /**
     * List of app names included in data usage on app data usage screen
     * [CHAR LIMIT=50]
     */
    public static final int data_usage_other_apps=0x7f1106a7;
    /**
     * Body of dialog prompting user to change numerical day of month that data usage cycle should reset. [CHAR LIMIT=64]
     */
    public static final int data_usage_pick_cycle_day=0x7f1106a8;
    /**
     * Combination of total network bytes sent and received by an application. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_received_sent=0x7f1106a9;
    /**
     * Body of dialog shown before user restricts background data usage. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_restrict_background=0x7f1106aa;
    /**
     * Body of dialog shown before user restricts background data usage. This is for multiuser phones. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_restrict_background_multiuser=0x7f1106ab;
    /**
     * Title of dialog shown before user restricts background data usage. [CHAR LIMIT=48]
     */
    public static final int data_usage_restrict_background_title=0x7f1106ac;
    /**
     * Body of dialog shown when user attempts to restrict background data before a network data limit has been set. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_restrict_denied_dialog=0x7f1106ad;
    /**
     * Summary of data usage [CHAR LIMIT=NONE]
     */
    public static final int data_usage_summary_format=0x7f1106ae;
    /**
     * Activity title for network data usage summary. [CHAR LIMIT=25]
     */
    public static final int data_usage_summary_title=0x7f1106af;
    /**
     * Label displaying current network data usage limit threshold. [CHAR LIMIT=18]
     */
    public static final int data_usage_sweep_limit=0x7f1106b0;
    /**
     * Label displaying current network data usage warning threshold. [CHAR LIMIT=18]
     */
    public static final int data_usage_sweep_warning=0x7f1106b1;
    /**
     * Tab title for showing 2G and 3G data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_3g=0x7f1106b2;
    /**
     * Tab title for showing 4G data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_4g=0x7f1106b3;
    /**
     * Tab title for showing Ethernet data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_ethernet=0x7f1106b4;
    /**
     * Tab title for showing combined mobile data usage. [CHAR LIMIT=20]
     */
    public static final int data_usage_tab_mobile=0x7f1106b5;
    /**
     * Tab title for showing Wi-Fi data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_wifi=0x7f1106b6;
    /**
     * Summary about how much data has been used in a date range [CHAR LIMIT=NONE]
     */
    public static final int data_usage_template=0x7f1106b7;
    /**
     * Data usage title text [CHAR LIMIT=30]
     */
    public static final int data_usage_title=0x7f1106b8;
    /**
     * Label displaying total network data transferred during a specific time period. [CHAR LIMIT=64]
     */
    public static final int data_usage_total_during_range=0x7f1106b9;
    /**
     * Label displaying total network data transferred during a specific time period, including a disclaimer that contrasts device versus carrier reporting. [CHAR LIMIT=80]
     */
    public static final int data_usage_total_during_range_mobile=0x7f1106ba;
    /**
     * Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48]
     */
    public static final int data_usage_uninstalled_apps=0x7f1106bb;
    /**
     * Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48]
     */
    public static final int data_usage_uninstalled_apps_users=0x7f1106bc;
    /**
     * Title of dialog for editing data usage warning in bytes. [CHAR LIMIT=48]
     */
    public static final int data_usage_warning_editor_title=0x7f1106bd;
    /**
     * Summary of data usage [CHAR LIMIT=NONE]
     */
    public static final int data_usage_wifi_format=0x7f1106be;
    /**
     * Alternative data usage title text for Wi-Fi only mode [CHAR LIMIT=30]
     */
    public static final int data_usage_wifi_title=0x7f1106bf;
    /**
     * Data usage remaining string [CHAR LIMIT=30]
     */
    public static final int data_used=0x7f1106c0;
    /**
     * Data usage remaining string [CHAR LIMIT=13]
     */
    public static final int data_used_formatted=0x7f1106c1;
    /**
     * Format string describing how much data has been used [CHAR LIMIT=20]
     */
    public static final int data_used_template=0x7f1106c2;
    /**
     * Label for button to set the amount of data before user is warned about usage [CHAR LIMIT=30]
     */
    public static final int data_warning=0x7f1106c3;
    /**
     * Label for footnote on Data warning and limit page to warn of device discrepancies
     */
    public static final int data_warning_footnote=0x7f1106c4;
    /**
     * Date & time settings screen title
     */
    public static final int date_and_time=0x7f1106c5;
    /**
     * Main Settings screen setting option summary text for the item to go into the date and time settings.
     */
    public static final int date_and_time_settings_summary=0x7f1106c6;
    /**
     * Main Settings screen setting option name to go into the date and time settings
     */
    public static final int date_and_time_settings_title=0x7f1106c7;
    /**
     * Title for Date & Time settings screen in SetupWizard [CHAR LIMIT=40]
     */
    public static final int date_and_time_settings_title_setup_wizard=0x7f1106c8;
    /**
     * Title string shown above DatePicker, letting a user select system date
     * [CHAR LIMIT=20]
     */
    public static final int date_picker_title=0x7f1106c9;
    /**
     * Date & time setting screen setting check box title
     */
    public static final int date_time_24hour=0x7f1106ca;
    /**
     * Date & time setting screen setting option summary text for the automatic 24 hour setting checkbox [CHAR LIMIT=100]
     */
    public static final int date_time_24hour_auto=0x7f1106cb;
    /**
     * Date & time setting screen setting check box title [CHAR LIMIT=30]
     */
    public static final int date_time_24hour_title=0x7f1106cc;
    /**
     * Date & time setting screen setting switch title: whether the system clock (UTC time) should be determined automatically [CHAR LIMIT=100]
     */
    public static final int date_time_auto=0x7f1106cd;
    /**
     * Text hint to search region in time zone setting screen
     */
    public static final int date_time_search_region=0x7f1106ce;
    /**
     * Setting option title in time zone setting screen [CHAR LIMIT=30]
     */
    public static final int date_time_select_fixed_offset_time_zones=0x7f1106cf;
    /**
     * Setting option title to select region in time zone setting screen [CHAR LIMIT=30]
     */
    public static final int date_time_select_region=0x7f1106d0;
    /**
     * Date & time setting screen setting option title [CHAR LIMIT=30]
     */
    public static final int date_time_set_date_title=0x7f1106d1;
    /**
     * Date & time setting screen setting option title [CHAR LIMIT=30]
     */
    public static final int date_time_set_time_title=0x7f1106d2;
    /**
     * Date & time setting screen setting option title
     */
    public static final int date_time_set_timezone=0x7f1106d3;
    /**
     * Date & time setting screen setting option title [CHAR LIMIT=30]
     */
    public static final int date_time_set_timezone_title=0x7f1106d4;
    /**
     * UI debug setting: select current app to debug [CHAR LIMIT=50]
     */
    public static final int debug_app=0x7f1106d5;
    /**
     * UI debug setting: no debug app has been set [CHAR LIMIT=50]
     */
    public static final int debug_app_not_set=0x7f1106d6;
    /**
     * UI debug setting: debug app has been set [CHAR LIMIT=50]
     */
    public static final int debug_app_set=0x7f1106d7;
    /**
     * Preference category for application debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_applications_category=0x7f1106d8;
    /**
     * Preference category for autofill debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_autofill_category=0x7f1106d9;
    /**
     * Preference category for app debugging development settings. [CHAR LIMIT=50]
     */
    public static final int debug_debugging_category=0x7f1106da;
    /**
     * Preference category for drawing debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_drawing_category=0x7f1106db;
    /**
     * Preference category for hardware accelerated drawing debugging development settings. [CHAR LIMIT=50]
     */
    public static final int debug_hw_drawing_category=0x7f1106dc;
    /**
     * UI debug setting: show the amount of overdraw in apps using the GPU [CHAR LIMIT=25]
     */
    public static final int debug_hw_overdraw=0x7f1106dd;
    /**
     * Preference category for input debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_input_category=0x7f1106de;
    /**
     * Do not translate.
     */
    public static final int debug_intent_sender_label=0x7f1106df;
    /**
     * UI debug setting: show layout bounds information [CHAR LIMIT=25]
     */
    public static final int debug_layout=0x7f1106e0;
    /**
     * UI debug setting: show layout bounds information summary [CHAR LIMIT=50]
     */
    public static final int debug_layout_summary=0x7f1106e1;
    /**
     * Preference category for monitoring debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_monitoring_category=0x7f1106e2;
    /**
     * Preference category for networking debugging development settings. [CHAR LIMIT=50]
     */
    public static final int debug_networking_category=0x7f1106e3;
    /**
     * Setting Checkbox title whether to enable view attribute inspection
     */
    public static final int debug_view_attributes=0x7f1106e4;
    /**
     * Decline label of dialog shown to ask for user consent for sharing the remote bugreport.
     */
    public static final int decline_remote_bugreport_action=0x7f1106e5;
    public static final int decryption_settings_summary=0x7f1106e6;
    /**
     * Provider Model: summary of default call. [CHAR LIMIT=50]
     */
    public static final int default_active_sim_calls=0x7f1106e7;
    /**
     * Provider Model: summary of default mobile data. [CHAR LIMIT=50]
     */
    public static final int default_active_sim_mobile_data=0x7f1106e8;
    /**
     * Provider Model: summary of default SMS. [CHAR LIMIT=50]
     */
    public static final int default_active_sim_sms=0x7f1106e9;
    /**
     * Shown when the user tries to change phone settings that are blocked by their IT admin [CHAR LIMIT=200]
     */
    public static final int default_admin_support_msg=0x7f1106ea;
    /**
     * Label of default app for current setting [CHAR LIMIT=40]
     */
    public static final int default_app=0x7f1106eb;
    /**
     * Title for Default Apps settings [CHAR LIMIT=30]
     */
    public static final int default_apps_title=0x7f1106ec;
    /**
     * Title for Default Assist settings [CHAR LIMIT=30]
     */
    public static final int default_assist_title=0x7f1106ed;
    /**
     * Title for Default Browser settings [CHAR LIMIT=30]
     */
    public static final int default_browser_title=0x7f1106ee;
    /**
     * Summary for No Default Browser settings [CHAR LIMIT=45]
     */
    public static final int default_browser_title_none=0x7f1106ef;
    /**
     * Title for the app that has been set as default handler of calendar-related intents. [CHAR LIMIT=30]
     */
    public static final int default_calendar_app_title=0x7f1106f0;
    /**
     * Title for the app that has been set as default handler of contacts-related intents. [CHAR LIMIT=30]
     */
    public static final int default_contacts_app_title=0x7f1106f1;
    /**
     * Title for Default Assist settings [CHAR LIMIT=30]
     */
    public static final int default_digital_assistant_title=0x7f1106f2;
    /**
     * [CHAR LIMIT=NONE] Advanced applications screen, preference title.  Choose the emergency application.
     */
    public static final int default_emergency_app=0x7f1106f3;
    /**
     * Network & internet page. Summary indicating that a SIM is used by default for calls when
     * multiple SIMs are present. [CHAR LIMIT=50]
     */
    public static final int default_for_calls=0x7f1106f4;
    /**
     * Network & internet page. Summary indicating that a SIM is used by default for calls and SMS
     * messages when multiple SIMs are present. [CHAR LIMIT=50]
     */
    public static final int default_for_calls_and_sms=0x7f1106f5;
    /**
     * Network & internet page. Summary indicating that a SIM is used by default for mobile data
     * when multiple SIMs are present. [CHAR LIMIT=50]
     */
    public static final int default_for_mobile_data=0x7f1106f6;
    /**
     * Network & internet page. Summary indicating that a SIM is used by default for SMS messages
     * when multiple SIMs are present. [CHAR LIMIT=50]
     */
    public static final int default_for_sms=0x7f1106f7;
    /**
     * Title for Default Apps settings for work [CHAR LIMIT=30]
     */
    public static final int default_for_work=0x7f1106f8;
    /**
     * Summary text for keyboards when no layout has been selected. [CHAR LIMIT=35]
     */
    public static final int default_keyboard_layout=0x7f1106f9;
    /**
     * Title for the app that has been set as default handler of geo-related intents. [CHAR LIMIT=30]
     */
    public static final int default_map_app_title=0x7f1106fa;
    /**
     * Default Apps > Default notification assistant
     */
    public static final int default_notification_assistant=0x7f1106fb;
    /**
     * Title for Default Phone app settings [CHAR LIMIT=30]
     */
    public static final int default_phone_title=0x7f1106fc;
    /**
     * Title for default print service main switch. [CHAR LIMIT=50]
     */
    public static final int default_print_service_main_switch_title=0x7f1106fd;
    /**
     * Default preference title for showing all apps on device [CHAR_LIMIT=50]
     */
    public static final int default_see_all_apps_title=0x7f1106fe;
    /**
     * Option title for the default sound, context based on screen
     */
    public static final int default_sound=0x7f1106ff;
    /**
     * [CHAR LIMIT=30] Label for setting to control the default spell checker
     */
    public static final int default_spell_checker=0x7f110700;
    /**
     * Name of default device theme [CHAR LIMIT=60]
     */
    public static final int default_theme=0x7f110701;
    /**
     * Menu item/button 'delete'
     */
    public static final int delete=0x7f110702;
    /**
     * Shared data: confirmation dialog text when attempting delete some shared data [CHAR LIMIT=NONE]
     */
    public static final int delete_blob_confirmation_text=0x7f110703;
    /**
     * Shared data: button text for deleting some shared data [CHAR LIMIT=50]
     */
    public static final int delete_blob_text=0x7f110704;
    /**
     * Category title for the automatic settings in the storage manager settings. [CHAR LIMIT=40]
     */
    public static final int deletion_helper_automatic_title=0x7f110705;
    /**
     * Category title for the manual settings in the storage manager settings. [CHAR LIMIT=40]
     */
    public static final int deletion_helper_manual_title=0x7f110706;
    /**
     * Preference menu title for accessing the deletion helper from the storage manager settings. [CHAR LIMIT=30]
     */
    public static final int deletion_helper_preference_title=0x7f110707;
    /**
     * [CHAR LIMIT=60] Name of dev option called "System UI demo mode"
     */
    public static final int demo_mode=0x7f110708;
    /**
     * [CHAR LIMIT=NONE] Summary for demote_conversation_title on conversation settings page
     */
    public static final int demote_conversation_summary=0x7f110709;
    /**
     * [CHAR LIMIT=100] Field on conversation settings page
     */
    public static final int demote_conversation_title=0x7f11070a;
    /**
     * Summary of developer options to set the smallest width of the screen [CHAR LIMIT=60]
     */
    public static final int density_pixel_summary=0x7f11070b;
    /**
     * Strings for Dialog deny button
     */
    public static final int deny=0x7f11070c;
    /**
     * Subtitle for application/subsystem details
     */
    public static final int details_subtitle=0x7f11070d;
    /**
     * Warning text to user about the implications of enabling USB debugging
     */
    public static final int dev_logpersist_clear_warning_message=0x7f11070e;
    /**
     * UI debug setting: store logs persistently
     */
    public static final int dev_logpersist_clear_warning_title=0x7f11070f;
    /**
     * [CHAR LIMIT=NONE] Toast message when user attemps to launch developer otions before enabling it.
     */
    public static final int dev_settings_disabled_warning=0x7f110710;
    /**
     * Warning text to user about the implications of enabling USB debugging
     */
    public static final int dev_settings_warning_message=0x7f110711;
    /**
     * Title of warning dialog about the implications of enabling developer settings
     */
    public static final int dev_settings_warning_title=0x7f110712;
    /**
     * Title for developer options main switch. [CHAR LIMIT=50]
     */
    public static final int developer_options_main_switch_title=0x7f110713;
    /**
     * Title of developer options to set the smallest width of the screen [CHAR LIMIT=60]
     */
    public static final int developer_smallest_width=0x7f110714;
    /**
     * Development settings enable title.
     */
    public static final int development_settings_enable=0x7f110715;
    /**
     * Error message for users that aren't allowed to modify developer options [CHAR LIMIT=none]
     */
    public static final int development_settings_not_available=0x7f110716;
    /**
     * Development Settings summary.  The summary of the item to take the user to Development settings.  Development settings are settings meant for application developers.
     */
    public static final int development_settings_summary=0x7f110717;
    /**
     * Development Settings.  the title for the item to take the user to Development settings.  Development settings are settings meant for application developers.
     */
    public static final int development_settings_title=0x7f110718;
    /**
     * Device admin add activity title
     */
    public static final int device_admin_add_title=0x7f110719;
    /**
     * Device admin app settings activity title
     */
    public static final int device_admin_settings_title=0x7f11071a;
    /**
     * Device admin warning message about policies an admin can use
     */
    public static final int device_admin_status=0x7f11071b;
    /**
     * Device admin warning message about policies an admin can use
     */
    public static final int device_admin_warning=0x7f11071c;
    /**
     * Simplified device admin warning message [CHAR LIMIT=NONE]
     */
    public static final int device_admin_warning_simplified=0x7f11071d;
    /**
     * Title of device details screen [CHAR LIMIT=28]
     */
    public static final int device_details_title=0x7f11071e;
    /**
     * [CHAR LIMIT=35] Feedback on the device
     */
    public static final int device_feedback=0x7f11071f;
    /**
     * Device Info screen. Used for a status item's value when the proper value is not known
     */
    public static final int device_info_default=0x7f110720;
    /**
     * About phone screen, show when a value of some status item is unavailable.
     */
    public static final int device_info_not_available=0x7f110721;
    /**
     * String for removal of sensitive info on about, depending on tap
     */
    public static final int device_info_protected_single_press=0x7f110722;
    /**
     * Strings for BluetoothDevicePicker [CHAR LIMIT=40]
     */
    public static final int device_picker=0x7f110723;
    /**
     * Title for the screen usage in power use UI [CHAR_LIMIT=60]
     */
    public static final int device_screen_usage=0x7f110724;
    /**
     * About phone screen, title of the item to go into the Phone status screen
     */
    public static final int device_status=0x7f110725;
    /**
     * About phone screen, phone status screen title
     */
    public static final int device_status_activity_title=0x7f110726;
    /**
     * About phone screen, summary of the item to go into the phone status screen
     */
    public static final int device_status_summary=0x7f110727;
    /**
     * Name of setting for switching device theme [CHAR LIMIT=60]
     */
    public static final int device_theme=0x7f110728;
    /**
     * Label for list of different types using battery in power use UI [CHAR_LIMIT=60]
     */
    public static final int device_usage_list_summary=0x7f110729;
    /**
     * Title for Connected device shortcut [CHAR LIMIT=30]
     */
    public static final int devices_title=0x7f11072a;
    /**
     * Sound: Other sounds: Title for the option enabling touch sounds for dial pad tones. [CHAR LIMIT=30]
     */
    public static final int dial_pad_tones_title=0x7f11072b;
    /**
     * Message body for background usage dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_background_check_message=0x7f11072c;
    /**
     * Text for OK button in background usage dialog [CHAR LIMIT=30]
     */
    public static final int dialog_background_check_ok=0x7f11072d;
    /**
     * Title for background usage dialog [CHAR LIMIT=70]
     */
    public static final int dialog_background_check_title=0x7f11072e;
    /**
     * Message body for location dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_location_message=0x7f11072f;
    /**
     * Text for OK button in location dialog [CHAR LIMIT=30]
     */
    public static final int dialog_location_ok=0x7f110730;
    /**
     * Title for location dialog [CHAR LIMIT=60]
     */
    public static final int dialog_location_title=0x7f110731;
    /**
     * Message body for force stop dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_stop_message=0x7f110732;
    /**
     * Message body for force stop dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_stop_message_wakeup_alarm=0x7f110733;
    /**
     * Text for OK button in force stop dialog [CHAR LIMIT=30]
     */
    public static final int dialog_stop_ok=0x7f110734;
    /**
     * Title for force stop dialog [CHAR LIMIT=30]
     */
    public static final int dialog_stop_title=0x7f110735;
    /**
     * [CHAR LIMIT=NONE] Dialog body explaining that the app just selected by the user will not work after a reboot until until after the user enters their credentials, such as a PIN or password.
     */
    public static final int direct_boot_unaware_dialog_message=0x7f110736;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager disableNetwork API
     */
    public static final int disableNetwork=0x7f110737;
    /**
     * UI debug setting: disable use of overlays? [CHAR LIMIT=25]
     */
    public static final int disable_overlays=0x7f110738;
    /**
     * UI debug setting: disable use of overlays summary [CHAR LIMIT=50]
     */
    public static final int disable_overlays_summary=0x7f110739;
    /**
     * Message for a warning about disabling accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int disable_service_message=0x7f11073a;
    /**
     * Title for a warning about disabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int disable_service_title=0x7f11073b;
    /**
     * [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to disable an existing application.
     */
    public static final int disable_text=0x7f11073c;
    /**
     * Don't use Wi-Fi hotspot title [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_title=0x7f11073d;
    /**
     * Don't use Wi-Fi hotspot summary when Bluetooth tethering and Ethernet tethering are chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_bluetooth_and_ethernet_on=0x7f11073e;
    /**
     * Don't use Wi-Fi hotspot summary when Bluetooth tethering is chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_bluetooth_on=0x7f11073f;
    /**
     * Don't use Wi-Fi hotspot summary when Ethernet tethering is chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_ethernet_on=0x7f110740;
    /**
     * Don't use Wi-Fi hotspot summary when USB, Bluetooth and Ethernet tethering are chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_usb_and_bluetooth_and_ethernet_on=0x7f110741;
    /**
     * Don't use Wi-Fi hotspot summary when USB tethering and Bluetooth tethering are chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_usb_and_bluetooth_on=0x7f110742;
    /**
     * Don't use Wi-Fi hotspot summary when USB tethering and Ethernet tethering are chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_usb_and_ethernet_on=0x7f110743;
    /**
     * Don't use Wi-Fi hotspot summary when USB tethering is chosen [CHAR LIMIT=NONE]
     */
    public static final int disable_wifi_hotspot_when_usb_on=0x7f110744;
    /**
     * [CHAR LIMIT=25] Manage applications, text telling using an application is disabled.
     */
    public static final int disabled=0x7f110745;
    /**
     * Summary shown when trust agent settings is disabled because the user hasn't set up primary security
     */
    public static final int disabled_because_no_backup_security=0x7f110746;
    /**
     * Summary for switch preference to denote it is switched off [CHAR LIMIT=50]
     */
    public static final int disabled_by_admin=0x7f110747;
    /**
     * Summary for settings preference disabled by administrator [CHAR LIMIT=50]
     */
    public static final int disabled_by_admin_summary_text=0x7f110748;
    /**
     * Summary for settings preference disabled by administrator [CHAR LIMIT=50]
     */
    public static final int disabled_by_administrator_summary=0x7f110749;
    /**
     * Dialog content shown when parental consent is required for the child to set up biometric authentication. [CHAR LIMIT=NONE]
     */
    public static final int disabled_by_policy_content_biometric_parental_consent=0x7f11074a;
    /**
     * Title for dialog displayed when user taps a setting on their phone that's blocked by their IT admin [CHAR LIMIT=30 BACKUP_MESSAGE_ID:4867639270211833535]
     */
    public static final int disabled_by_policy_title=0x7f11074b;
    /**
     * Title for dialog displayed to tell user that changing volume on their phone is blocked by their IT admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_adjust_volume=0x7f11074c;
    /**
     * Dialog title shown when parental consent is required for the child to set up biometric authentication. [CHAR LIMIT=30]
     */
    public static final int disabled_by_policy_title_biometric_parental_consent=0x7f11074d;
    /**
     * Title for dialog displayed to tell user that the camera on their phone is blocked by their IT admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_camera=0x7f11074e;
    /**
     * Dialog title. This dialog lets a user know that a specific setting is blocked by their credit provider. Since the user purchased the device from the credit provider, the credit provider controls what they can access. [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_financed_device=0x7f11074f;
    /**
     * Title for dialog displayed to tell user that outgoing calls are blocked by their IT admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_outgoing_calls=0x7f110750;
    /**
     * Title for dialog displayed to tell user that taking screenshots on their phone is blocked by their IT admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_screen_capture=0x7f110751;
    /**
     * Title for dialog displayed to tell user that sending SMS messages is blocked by their IT admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_sms=0x7f110752;
    /**
     * Title for dialog displayed to tell user that the app was suspended by an admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_suspend_packages=0x7f110753;
    /**
     * Summary text on a card explaining a setting cannot be changed right now because it needs another setting to be changed. [CHAR_LIMIT=NONE]
     */
    public static final int disabled_dependent_setting_summary=0x7f110754;
    /**
     * Title of a message for an empty state screen. A user will see this message if they try to use a certain feature, but the feature was turned off so it won't slow down their phone. [CHAR LIMIT=NONE]
     */
    public static final int disabled_feature=0x7f110755;
    /**
     * Part of a message for an empty state screen. A user will see this message if they try to use a certain feature, but the feature was turned off so it won't slow down their phone. [CHAR LIMIT=NONE]
     */
    public static final int disabled_feature_reason_slow_down_phone=0x7f110756;
    /**
     * Summary text on a card explaining that a setting cannot be changed by the current user. [CHAR_LIMIT=NONE]
     */
    public static final int disabled_for_user_setting_summary=0x7f110757;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager disconnect API
     */
    public static final int disconnect=0x7f110758;
    /**
     * Wi-Fi state - Disconnected [CHAR LIMIT=NONE]
     */
    public static final int disconnected=0x7f110759;
    /**
     * Title for the accessibility preference category of display services and settings. [CHAR LIMIT=50]
     */
    public static final int display_category_title=0x7f11075a;
    /**
     * [CHAR_LIMIT=NONE] Developer Settings: Title of the setting which turns on emulation of a display cutout.
     */
    public static final int display_cutout_emulation=0x7f11075b;
    /**
     * [CHAR_LIMIT=NONE] Developer Settings: Search keywords for the setting which turns on emulation of a display cutout.
     */
    public static final int display_cutout_emulation_keywords=0x7f11075c;
    /**
     * Summary for Display settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int display_dashboard_summary=0x7f11075d;
    /**
     * The title of the activity to adjust display settings
     */
    public static final int display_label=0x7f11075e;
    /**
     * label for text to indicate sort options
     */
    public static final int display_order_text=0x7f11075f;
    /**
     * Sound & display settings screen, section header for settings related to display
     */
    public static final int display_settings=0x7f110760;
    public static final int display_settings_title=0x7f110761;
    /**
     * Summary of display with screen sleep timeout [CHAR LIMIT=NONE]
     */
    public static final int display_summary=0x7f110762;
    /**
     * Example summary of display used in Setup Wizard preview screen [CHAR LIMIT=NONE]
     */
    public static final int display_summary_example=0x7f110763;
    /**
     * [CHAR LIMIT=70] Put display into low-persistence mode, this decreases motion blur.
     */
    public static final int display_vr_pref_low_persistence=0x7f110764;
    /**
     * [CHAR LIMIT=70] Do not change default display settings, this may reduce perceived screen
     * flicker while in VR mode.
     */
    public static final int display_vr_pref_off=0x7f110765;
    /**
     * Title for what display preferences are applied when device is in VR mode
     */
    public static final int display_vr_pref_title=0x7f110766;
    /**
     * Display settings screen, display white balance settings summary [CHAR LIMIT=NONE]
     */
    public static final int display_white_balance_summary=0x7f110767;
    /**
     * Display settings screen, display white balance settings title [CHAR LIMIT=30]
     */
    public static final int display_white_balance_title=0x7f110768;
    /**
     * Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data".
     */
    public static final int dlg_cancel=0x7f110769;
    /**
     * SD card eject confirmation dialog
     */
    public static final int dlg_confirm_unmount_text=0x7f11076a;
    /**
     * SD card eject confirmation dialog title
     */
    public static final int dlg_confirm_unmount_title=0x7f11076b;
    /**
     * SD card eject error dialog text
     */
    public static final int dlg_error_unmount_text=0x7f11076c;
    /**
     * SD card eject error dialog title
     */
    public static final int dlg_error_unmount_title=0x7f11076d;
    /**
     * Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". Goes through with the clearing of the data.
     */
    public static final int dlg_ok=0x7f11076e;
    /**
     * The text of the error dialog shown when the user selects all the languages and tries to remove them [CHAR LIMIT=NONE]
     */
    public static final int dlg_remove_locales_error_message=0x7f11076f;
    /**
     * The title of the error dialog shown when the user selects all the languages and tries to remove them [CHAR LIMIT=60]
     */
    public static final int dlg_remove_locales_error_title=0x7f110770;
    /**
     * The text of the confirmation dialog shown when the user selects several languages and tries to remove them [CHAR LIMIT=NONE]
     */
    public static final int dlg_remove_locales_message=0x7f110771;
    /**
     * Message indicating that the device is enterprise-managed by a Device Owner [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_generic=0x7f110772;
    /**
     * Message indicating that the device is enterprise-managed: Space that separates the main text and the "learn more" link that follows it. [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_learn_more_separator=0x7f110773;
    /**
     * Message indicating that the device is enterprise-managed by a Device Owner [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_with_name=0x7f110774;
    /**
     * Title for Do Not Disturb main switch preferences. [CHAR LIMIT=50]
     */
    public static final int do_not_disturb_main_switch_title_off=0x7f110775;
    /**
     * Title for Do Not Disturb main switch preferences. [CHAR LIMIT=50]
     */
    public static final int do_not_disturb_main_switch_title_on=0x7f110776;
    /**
     * Sound: Other sounds: Value for the dock audio media with value 0: disabled. [CHAR LIMIT=30]
     */
    public static final int dock_audio_media_disabled=0x7f110777;
    /**
     * Sound: Other sounds: Value for the dock audio media with value 1: enabled. [CHAR LIMIT=30]
     */
    public static final int dock_audio_media_enabled=0x7f110778;
    /**
     * Sound: Other sounds: Title for the option enabling dock audio media. [CHAR LIMIT=50]
     */
    public static final int dock_audio_media_title=0x7f110779;
    /**
     * Dock audio settings
     */
    public static final int dock_audio_settings_title=0x7f11077a;
    /**
     * Dock audio summary for docked to car dock
     */
    public static final int dock_audio_summary_car=0x7f11077b;
    /**
     * Dock audio summary for docked to desk dock
     */
    public static final int dock_audio_summary_desk=0x7f11077c;
    /**
     * Dock audio summary for undocked
     */
    public static final int dock_audio_summary_none=0x7f11077d;
    /**
     * Dock audio summary for docked to unknown
     */
    public static final int dock_audio_summary_unknown=0x7f11077e;
    /**
     * Dock not found dialog text
     */
    public static final int dock_not_found_text=0x7f11077f;
    /**
     * Dock not found dialog title
     */
    public static final int dock_not_found_title=0x7f110780;
    /**
     * Dock settings title, top level
     */
    public static final int dock_settings=0x7f110781;
    /**
     * Sound settings screen, dock settings summary
     */
    public static final int dock_settings_summary=0x7f110782;
    /**
     * Dock settings title
     */
    public static final int dock_settings_title=0x7f110783;
    /**
     * Sound settings screen, setting option summary text when check box is clear
     */
    public static final int dock_sounds_enable_summary_off=0x7f110784;
    /**
     * Dock settings screen, setting option summary text when check box is selected
     */
    public static final int dock_sounds_enable_summary_on=0x7f110785;
    /**
     * Dock settings screen, dock events SFX setting check box label
     */
    public static final int dock_sounds_enable_title=0x7f110786;
    /**
     * Sound: Other sounds: Title for the option enabling docking sounds. [CHAR LIMIT=30]
     */
    public static final int docking_sounds_title=0x7f110787;
    public static final int does_not_exist=0x7f110788;
    /**
     * Section title for the Domain URL app preference list [CHAR LIMIT=60]
     */
    public static final int domain_url_section_title=0x7f110789;
    /**
     * Summary of open web links settings when no app can open supported links [CHAR LIMIT=NONE]
     */
    public static final int domain_urls_apps_summary_off=0x7f11078a;
    /**
     * Summary for an app that doesn't open any domain URLs [CHAR LIMIT=45]
     */
    public static final int domain_urls_summary_none=0x7f11078b;
    /**
     * Summary of an app that can open URLs for exactly one domain [CHAR LIMIT=45]
     */
    public static final int domain_urls_summary_one=0x7f11078c;
    /**
     * Summary of an app that can open several domain's URLs [CHAR LIMIT=45]
     */
    public static final int domain_urls_summary_some=0x7f11078d;
    /**
     * Title of a preference item that will show the user's preferences for this app's priority for opening links to websites that it claims to support [CHAR LIMIT=30]
     */
    public static final int domain_urls_title=0x7f11078e;
    /**
     * Button label for generic done action [CHAR LIMIT=20]
     */
    public static final int done=0x7f11078f;
    /**
     * Button to close the SSL CA cert warning dialog box, meaning the user is done reading.  [CHAR LIMIT=NONE]
     */
    public static final int done_button=0x7f110790;
    /**
     * Title for settings suggestion for double tap power for camera [CHAR LIMIT=60]
     */
    public static final int double_tap_power_for_camera_suggestion_title=0x7f110791;
    /**
     * Summary text for double tap power for camera [CHAR LIMIT=160]
     */
    public static final int double_tap_power_for_camera_summary=0x7f110792;
    /**
     * Title text for double tap power for camera [CHAR LIMIT=60]
     */
    public static final int double_tap_power_for_camera_title=0x7f110793;
    /**
     * Summary text for double twist for camera mode  [CHAR LIMIT=160]
     */
    public static final int double_twist_for_camera_mode_summary=0x7f110794;
    /**
     * Title text for double twist for camera mode [CHAR LIMIT=60]
     */
    public static final int double_twist_for_camera_mode_title=0x7f110795;
    /**
     * Title for settings suggestion for double twist for camera [CHAR LIMIT=60]
     */
    public static final int double_twist_for_camera_suggestion_title=0x7f110796;
    /**
     * Provider Model: title of Downloaded SIM category. [CHAR LIMIT=50]
     */
    public static final int downloaded_sim_category_title=0x7f110797;
    /**
     * Provider Model: title of Downloaded SIMs category. [CHAR LIMIT=50]
     */
    public static final int downloaded_sims_category_title=0x7f110798;
    /**
     * [CHAR LIMIT=NONE] Display settings screen, setting description for the always-on ambient display feature.
     */
    public static final int doze_always_on_summary=0x7f110799;
    /**
     * [CHAR LIMIT=30] Display settings screen, setting option name to change whether the always-on ambient display feature is enabled.
     */
    public static final int doze_always_on_title=0x7f11079a;
    /**
     * [CHAR LIMIT=NONE] Ambient display screen, summary for setting to change whether the ambient display feature is triggered for new incoming notifications.
     */
    public static final int doze_summary=0x7f11079b;
    /**
     * [CHAR LIMIT=30] Ambient display screen, title for setting to change whether the ambient display feature is triggered for new incoming notifications.
     */
    public static final int doze_title=0x7f11079c;
    /**
     * Title of display overlay screen [CHAR LIMIT=30]
     */
    public static final int draw_overlay=0x7f11079d;
    /**
     * Body text of DSDS activation failure dialog. Users could reinsert the SIM card or reboot to recover. [CHAR LIMIT=NONE]
     */
    public static final int dsds_activation_failure_body_msg1=0x7f11079e;
    /**
     * Body text of DSDS activation failure dialog. Users could toggle the selected SIM again or reboot to recover. [CHAR LIMIT=NONE]
     */
    public static final int dsds_activation_failure_body_msg2=0x7f11079f;
    /**
     * Title of DSDS activation failure dialog [CHAR LIMIT=40]
     */
    public static final int dsds_activation_failure_title=0x7f1107a0;
    /**
     * Message in a push notification indicating that the user's device is capable of DSDS. [CHAR LIMIT=NONE]
     */
    public static final int dsds_notification_after_suw_text=0x7f1107a1;
    /**
     * Title on a push notification indicating that the user's device is capable of DSDS. [CHAR LIMIT=NONE]
     */
    public static final int dsds_notification_after_suw_title=0x7f1107a2;
    /**
     * DSU Loader. Do not translate.
     */
    public static final int dsu_is_running=0x7f1107a3;
    /**
     * DSU Loader Description. Do not translate.
     */
    public static final int dsu_loader_description=0x7f1107a4;
    /**
     * DSU Loader Loading. Do not translate.
     */
    public static final int dsu_loader_loading=0x7f1107a5;
    /**
     * DSU Loader. Do not translate.
     */
    public static final int dsu_loader_title=0x7f1107a6;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int dtmf_tone_enable_title=0x7f1107a7;
    /**
     * Title for enable MMS notification channel.  [CHAR LIMIT=40]
     */
    public static final int dual_cdma_sim_warning_notification_channel_title=0x7f1107a8;
    /**
     * Message for DSDS dual CDMA SIM combination warning. [CHAR LIMIT=100]
     */
    public static final int dual_cdma_sim_warning_notification_summary=0x7f1107a9;
    /**
     * Summary text for edge to edge navigation [CHAR LIMIT=NONE]
     */
    public static final int edge_to_edge_navigation_summary=0x7f1107aa;
    /**
     * Title text for edge to edge navigation [CHAR LIMIT=60]
     */
    public static final int edge_to_edge_navigation_title=0x7f1107ab;
    /**
     * Summary of Update Emergency Address preference, explaining usage of emergency address [CHAR LIMIT=NONE]
     */
    public static final int emergency_address_summary=0x7f1107ac;
    /**
     * Title of a preference for updating emergency address [CHAR LIMIT=40]
     */
    public static final int emergency_address_title=0x7f1107ad;
    /**
     * Summary for the top level Safety & emergency Settings [CHAR LIMIT=NONE]
     */
    public static final int emergency_dashboard_summary=0x7f1107ae;
    /**
     * Preference title listing a phone number to call during emergency gesture [CHAR_LIMIT=NONE]
     */
    public static final int emergency_gesture_call_for_help_dialog_title=0x7f1107af;
    /**
     * Preference summary listing a phone number to call during emergency gesture, and clicking the perference will show a dialog to change this number [CHAR_LIMIT=NONE]
     */
    public static final int emergency_gesture_call_for_help_summary=0x7f1107b0;
    /**
     * Preference title listing a phone number to call during emergency gesture [CHAR_LIMIT=60]
     */
    public static final int emergency_gesture_call_for_help_title=0x7f1107b1;
    /**
     * Preference category title listing a phone number to call during emergency gesture [CHAR_LIMIT=60]
     */
    public static final int emergency_gesture_category_call_for_help_title=0x7f1107b2;
    /**
     * Preference summary to enable feature for calling emergency services at panic/distress moments[CHAR_LIMIT=60]
     */
    public static final int emergency_gesture_entrypoint_summary=0x7f1107b3;
    /**
     * Notes explaining limitations for emergency gesture number override [CHAR_LIMIT=NONE]
     */
    public static final int emergency_gesture_number_override_notes=0x7f1107b4;
    /**
     * Preference summary to enable feature for calling emergency services at panic/distress moments[CHAR_LIMIT=NONE]
     */
    public static final int emergency_gesture_screen_summary=0x7f1107b5;
    /**
     * Preference title to enable feature for calling emergency services at panic/distress moments[CHAR_LIMIT=60]
     */
    public static final int emergency_gesture_screen_title=0x7f1107b6;
    /**
     * Optional package name if another 1p app wants to take over the emergency gesture settings UI
     */
    public static final int emergency_gesture_settings_package=0x7f1107b7;
    /**
     * Preference summary to enable generating noisy sound before calling emergency services at panic/distress moments[CHAR_LIMIT=NONE]
     */
    public static final int emergency_gesture_sound_setting_summary=0x7f1107b8;
    /**
     * Preference title to enable generating noisy sound before calling emergency services at panic/distress moments[CHAR_LIMIT=60]
     */
    public static final int emergency_gesture_sound_setting_title=0x7f1107b9;
    /**
     * Preference title to enable feature for calling emergency services at panic/distress moments[CHAR_LIMIT=60]
     */
    public static final int emergency_gesture_switchbar_title=0x7f1107ba;
    /**
     * Summary for the emergency info preference [CHAR LIMIT=40]
     */
    public static final int emergency_info_summary=0x7f1107bb;
    /**
     * Title for the emergency info preference [CHAR LIMIT=40]
     */
    public static final int emergency_info_title=0x7f1107bc;
    /**
     * Preference title for "Safety & emergency" settings page [CHAR LIMIT=60]
     */
    public static final int emergency_settings_preference_title=0x7f1107bd;
    /**
     * Sound: Other sounds: Value for the emergency dialing signal option with value 1: tones. [CHAR LIMIT=30]
     */
    public static final int emergency_tone_alert=0x7f1107be;
    /**
     * Sound: Other sounds: Value for the emergency dialing signal option with value 0: silence. [CHAR LIMIT=30]
     */
    public static final int emergency_tone_silent=0x7f1107bf;
    /**
     * Sound settings screen, setting option summary text
     */
    public static final int emergency_tone_summary=0x7f1107c0;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int emergency_tone_title=0x7f1107c1;
    /**
     * Sound: Other sounds: Value for the emergency dialing signal option with value 2: vibrations. [CHAR LIMIT=30]
     */
    public static final int emergency_tone_vibrate=0x7f1107c2;
    /**
     * Available networks screen, text when no networks are found [CHAR LIMIT=NONE]
     */
    public static final int empty_networks_list=0x7f1107c3;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager enableNetwork API
     */
    public static final int enableNetwork=0x7f1107c4;
    /**
     * Title for toggle if user wants to enable 2G [CHAR LIMIT=NONE]
     */
    public static final int enable_2g_summary=0x7f1107c5;
    /**
     * Title for toggle if user wants to enable 2G [CHAR LIMIT=40]
     */
    public static final int enable_2g_title=0x7f1107c6;
    public static final int enable_adb=0x7f1107c7;
    /**
     * Setting checkbox summary for Whether to enable USB debugging support on the phone
     */
    public static final int enable_adb_summary=0x7f1107c8;
    /**
     * [CHAR LIMIT=32] Setting title for ADB wireless switch
     */
    public static final int enable_adb_wireless=0x7f1107c9;
    /**
     * [CHAR LIMIT=NONE] Setting checkbox summary for whether to enable Wireless debugging support on the phone
     */
    public static final int enable_adb_wireless_summary=0x7f1107ca;
    /**
     * Manage applications, individual application screen, checkbox to control compatibility mode.
     */
    public static final int enable_compatibility=0x7f1107cb;
    /**
     * UI debug setting: enable freeform window support [CHAR LIMIT=50]
     */
    public static final int enable_freeform_support=0x7f1107cc;
    /**
     * UI debug setting: enable freeform window support summary [CHAR LIMIT=150]
     */
    public static final int enable_freeform_support_summary=0x7f1107cd;
    /**
     * Location setting: preference title - enforce full raw GNSS satellite measurements [CHAR LIMIT=60]
     */
    public static final int enable_gnss_raw_meas_full_tracking=0x7f1107ce;
    /**
     * Location setting: preference summary - describes the behavior of forcing full raw GNSS satellite measurements [CHAR LIMIT=NONE]
     */
    public static final int enable_gnss_raw_meas_full_tracking_summary=0x7f1107cf;
    /**
     * UI debug setting: enable gpu debug layers [CHAR LIMIT=25]
     */
    public static final int enable_gpu_debug_layers=0x7f1107d0;
    /**
     * UI debug setting: enable gpu debug layers summary [CHAR LIMIT=50]
     */
    public static final int enable_gpu_debug_layers_summary=0x7f1107d1;
    /**
     * Title for enable MMS notification channel.  [CHAR LIMIT=40]
     */
    public static final int enable_mms_notification_channel_title=0x7f1107d2;
    /**
     * Message under title informing the user to touch to go to SIM Cards in Settings.  [CHAR LIMIT=100]
     */
    public static final int enable_mms_notification_summary=0x7f1107d3;
    /**
     * UI debug setting: enable non-resizables in multi window [CHAR LIMIT=60]
     */
    public static final int enable_non_resizable_multi_window=0x7f1107d4;
    /**
     * UI debug setting: enable non-resizables in multi window summary [CHAR LIMIT=NONE]
     */
    public static final int enable_non_resizable_multi_window_summary=0x7f1107d5;
    /**
     * UI debug setting: enable various types of OpenGL traces [CHAR LIMIT=25]
     */
    public static final int enable_opengl_traces_title=0x7f1107d6;
    /**
     * Title for the preference to show a tile for a particular feature in the Quick Settings pane. [CHAR LIMIT=NONE]
     */
    public static final int enable_quick_setting=0x7f1107d7;
    /**
     * Title for enable MMS notification when trying to receive MMS.  [CHAR LIMIT=40]
     */
    public static final int enable_receiving_mms_notification_title=0x7f1107d8;
    /**
     * Title for enable MMS notification when trying to send MMS.  [CHAR LIMIT=40]
     */
    public static final int enable_sending_mms_notification_title=0x7f1107d9;
    /**
     * Warning that the device data will not be encrypted with password or PIN if
     * enabling an accessibility service and there is a secure lock setup. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_encryption_warning=0x7f1107da;
    /**
     * Message to the users to enter their password before enabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_password_reason=0x7f1107db;
    /**
     * Message to the users to enter their pattern before enabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_pattern_reason=0x7f1107dc;
    /**
     * Message to the users to enter their PIN before enabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_pin_reason=0x7f1107dd;
    /**
     * Title for a warning about security implications of enabling an accessibility
     * service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_title=0x7f1107de;
    /**
     * Summary of checkbox setting that enables the terminal app. [CHAR LIMIT=64]
     */
    public static final int enable_terminal_summary=0x7f1107df;
    /**
     * Title of checkbox setting that enables the terminal app. [CHAR LIMIT=32]
     */
    public static final int enable_terminal_title=0x7f1107e0;
    /**
     * [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to re-enable an existing application.
     */
    public static final int enable_text=0x7f1107e1;
    /**
     * UI debug setting: enable verbose vendor logging [CHAR LIMIT=60]
     */
    public static final int enable_verbose_vendor_logging=0x7f1107e2;
    /**
     * UI debug setting: enable verbose vendor logging summary [CHAR LIMIT=NONE]
     */
    public static final int enable_verbose_vendor_logging_summary=0x7f1107e3;
    /**
     * Summary for switch preference to denote it is switched on [CHAR LIMIT=50]
     */
    public static final int enabled_by_admin=0x7f1107e4;
    /**
     * Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled.
     */
    public static final int encrypt_talkback_dialog_message_password=0x7f1107e5;
    /**
     * Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled.
     */
    public static final int encrypt_talkback_dialog_message_pattern=0x7f1107e6;
    /**
     * Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled.
     */
    public static final int encrypt_talkback_dialog_message_pin=0x7f1107e7;
    /**
     * Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25]
     */
    public static final int encrypt_talkback_dialog_require_password=0x7f1107e8;
    /**
     * Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25]
     */
    public static final int encrypt_talkback_dialog_require_pattern=0x7f1107e9;
    /**
     * Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25]
     */
    public static final int encrypt_talkback_dialog_require_pin=0x7f1107ea;
    /**
     * Security Settings screen Encryption and crendential summary
     */
    public static final int encryption_and_credential_settings_summary=0x7f1107eb;
    /**
     * Security Settings screen setting option title for the item to take you to the encryption and credential screen
     */
    public static final int encryption_and_credential_settings_title=0x7f1107ec;
    /**
     * Encryption interstitial button to continue with the shown setting.  Appears on screen that asks the user to opt in/out of encrypting device with a pin/pattern/password. [CHAR LIMIT=NONE]
     */
    public static final int encryption_continue_button=0x7f1107ed;
    /**
     * Encryption interstitial title. This screen asks the user whether the device will ask for a PIN / pattern / password before the device starts up. [CHAR LIMIT=30]
     */
    public static final int encryption_interstitial_header=0x7f1107ee;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_password=0x7f1107ef;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device while setting up biometric unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_password_for_biometrics=0x7f1107f0;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device while setting up face unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_password_for_face=0x7f1107f1;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_password_for_fingerprint=0x7f1107f2;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pattern=0x7f1107f3;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device while setting up biometric unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pattern_for_biometrics=0x7f1107f4;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device while setting up face unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pattern_for_face=0x7f1107f5;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pattern_for_fingerprint=0x7f1107f6;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pin=0x7f1107f7;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device while setting up biometric unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pin_for_biometrics=0x7f1107f8;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device while setting up face unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pin_for_face=0x7f1107f9;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pin_for_fingerprint=0x7f1107fa;
    /**
     * Button label to say no to the question of whether to require PIN/password/pattern to start your device. [CHAR LIMIT=20]
     */
    public static final int encryption_interstitial_no=0x7f1107fb;
    /**
     * Button label to say yes to the question of whether to require PIN/password/pattern to start your device. [CHAR LIMIT=20]
     */
    public static final int encryption_interstitial_yes=0x7f1107fc;
    /**
     * Enhaced 4G LTE Mode summary.  [CHAR LIMIT=100]
     */
    public static final int enhanced_4g_lte_mode_summary=0x7f1107fd;
    /**
     * Enhaced 4G LTE Mode summary for 4g calling.  [CHAR LIMIT=100]
     */
    public static final int enhanced_4g_lte_mode_summary_4g_calling=0x7f1107fe;
    /**
     * Enhaced 4G LTE Mode title.  [CHAR LIMIT=50]
     */
    public static final int enhanced_4g_lte_mode_title=0x7f1107ff;
    /**
     * Enhaced 4G LTE Mode title for carriers who want to show 4G Calling.  [CHAR LIMIT=50]
     */
    public static final int enhanced_4g_lte_mode_title_4g_calling=0x7f110800;
    /**
     * Enhaced 4G LTE Mode title for carriers who want to show Advanced Calling.  [CHAR LIMIT=50]
     */
    public static final int enhanced_4g_lte_mode_title_advanced_calling=0x7f110801;
    /**
     * Summary of checkbox for enabling Enhanced Connectivity features [CHAR LIMIT=NONE]
     */
    public static final int enhanced_connectivity_summary=0x7f110802;
    /**
     * This is displayed to the user when the device needs to be decrypted
     */
    public static final int enter_password=0x7f110803;
    /**
     * Informational text on the pattern entry screen prompting the user for their pattern
     */
    public static final int enter_pattern=0x7f110804;
    /**
     * Informational text on the pin entry screen prompting the user for their pin
     */
    public static final int enter_pin=0x7f110805;
    /**
     * Label explaining that an always-on VPN was set by the admin for the entire device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_always_on_vpn_device=0x7f110806;
    /**
     * Label explaining that an always-on VPN was set by the admin in the personal profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_always_on_vpn_personal=0x7f110807;
    /**
     * Label explaining that an always-on VPN was set by the admin in the work profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_always_on_vpn_work=0x7f110808;
    /**
     * Label explaining that the the number of apps is an estimation. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_apps_count_estimation_info=0x7f110809;
    /**
     * Label explaining that the admin can request bug reports on the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_bug_reports=0x7f11080a;
    /**
     * Label explaining that the admin installed trusted CA certificates for the entire device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_ca_certs_device=0x7f11080b;
    /**
     * Label explaining that the admin installed trusted CA certificates in personal profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_ca_certs_personal=0x7f11080c;
    /**
     * Label explaining that the admin installed trusted CA certificates in work profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_ca_certs_work=0x7f11080d;
    /**
     * Label indicating that the admin granted one or more apps access to the camera. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_camera_access=0x7f11080e;
    /**
     * Title for the 'Your access to this device' preference category. [CHAR LIMIT=60]
     */
    public static final int enterprise_privacy_device_access_category=0x7f11080f;
    /**
     * Label explaining that the admin can see data associated with his/her work account. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_enterprise_data=0x7f110810;
    /**
     * Label indicating that the admin installed one or more apps on the device.
     */
    public static final int enterprise_privacy_enterprise_installed_packages=0x7f110811;
    /**
     * Label indicating that the admin set one or more apps as defaults for common actions (e.g. open browser, send e-mail). [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_enterprise_set_default_apps=0x7f110812;
    /**
     * Title for the 'Types of information your organization can see' preference category. [CHAR LIMIT=60]
     */
    public static final int enterprise_privacy_exposure_category=0x7f110813;
    /**
     * Title for the 'Changes made by your organization’s admin' preference category. [CHAR LIMIT=60]
     */
    public static final int enterprise_privacy_exposure_changes_category=0x7f110814;
    /**
     * Label explaining that the admin configured the device to wipe itself when the password is mistyped too many times. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_failed_password_wipe_device=0x7f110815;
    /**
     * Label explaining that the admin configured the work profile to wipe itself when the password is mistyped too many times. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_failed_password_wipe_work=0x7f110816;
    /**
     * Label explaining that a global HTTP proxy was set by the admin. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_global_http_proxy=0x7f110817;
    /**
     * Enterprise Privacy settings activity header, summarizing the powers that the admin has. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_header=0x7f110818;
    /**
     * Label explaining that the current input method was set by the admin. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_input_method=0x7f110819;
    /**
     * Summary indicating the input method set by the admin. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_input_method_name=0x7f11081a;
    /**
     * Label explaining that the admin can see apps installed on the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_installed_packages=0x7f11081b;
    /**
     * Label indicating that the admin granted one or more apps access to the device's location. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_location_access=0x7f11081c;
    /**
     * Label explaining that the admin can lock the device and change the user's password. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_lock_device=0x7f11081d;
    /**
     * Label indicating that the admin granted one or more apps access to the microphone. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_microphone_access=0x7f11081e;
    /**
     * Label explaining that the admin can retrieve network logs on the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_network_logs=0x7f11081f;
    /**
     * Label indicating that the the admin never took a given action so far (e.g. did not retrieve security logs or request bug reports).
     */
    public static final int enterprise_privacy_none=0x7f110820;
    /**
     * Label explaining that the admin can retrieve security on from the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_security_logs=0x7f110821;
    /**
     * Title of setting on security settings screen. This will take the user to a screen with information about admin powers and their impact on the user's privacy on a managed device. Shown on enterprise-managed devices only. Note: "Device" is singular and refers to the device (e.g. phone or tablet) that the user is holding in their hand.
     */
    public static final int enterprise_privacy_settings=0x7f110822;
    /**
     * Summary for Enterprise Privacy settings, explaining what the user can expect to find under it [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_settings_summary_generic=0x7f110823;
    /**
     * Summary for Enterprise Privacy settings, explaining what the user can expect to find under it [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_settings_summary_with_name=0x7f110824;
    /**
     * Label explaining that the admin can see app usage statistics. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_usage_stats=0x7f110825;
    /**
     * Label explaining that the admin can wipe the device remotely. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_wipe_device=0x7f110826;
    /**
     * Confirmation button of dialog to confirm resetting user's app preferences [CHAR LIMIT=NONE]
     */
    public static final int erase_euicc_data_button=0x7f110827;
    /**
     * SD card & phone storage settings screen, label for check box to erase SD card [CHAR LIMIT=30]
     */
    public static final int erase_external_storage=0x7f110828;
    /**
     * SD card & phone storage settings screen, description for check box to erase USB storage [CHAR LIMIT=NONE]
     */
    public static final int erase_external_storage_description=0x7f110829;
    /**
     * Button label to erase the eSIM [CHAR_LIMIT=20]
     */
    public static final int erase_sim_confirm_button=0x7f11082a;
    /**
     * Body text in confirmation dialog indicating what erasing a SIM entails. [CHAR_LIMIT=NONE]
     */
    public static final int erase_sim_dialog_text=0x7f11082b;
    /**
     * Title on confirmation dialog asking the user if they want to erase the downloaded SIM from the device. [CHAR_LIMIT=NONE]
     */
    public static final int erase_sim_dialog_title=0x7f11082c;
    /**
     * Body text of error message indicating the device could not erase the SIM due to an error. [CHAR_LIMIT=NONE]
     */
    public static final int erase_sim_fail_text=0x7f11082d;
    /**
     * Title of error message indicating the device could not erase the SIM. [CHAR_LIMIT=NONE]
     */
    public static final int erase_sim_fail_title=0x7f11082e;
    /**
     * Status message indicating the device is in the process of erasing the SIM. [CHAR_LIMIT=NONE]
     */
    public static final int erasing_sim=0x7f11082f;
    /**
     * APN error dialog messages:
     */
    public static final int error_adding_apn_type=0x7f110830;
    /**
     * APN error dialog messages:
     */
    public static final int error_apn_empty=0x7f110831;
    /**
     * Toast that is shown if there's an error capturing the user initiated heap dump. [CHAR LIMIT=NONE]
     */
    public static final int error_capturing_system_heap_dump_message=0x7f110832;
    public static final int error_icon_content_description=0x7f110833;
    /**
     * APN error dialog messages:
     */
    public static final int error_mcc_not3=0x7f110834;
    /**
     * APN error dialog messages:
     */
    public static final int error_mnc_not23=0x7f110835;
    /**
     * APN error dialog messages:
     */
    public static final int error_name_empty=0x7f110836;
    /**
     * APN error dialog title
     */
    public static final int error_title=0x7f110837;
    /**
     * Description for charging time left, i.e. 50min until fully charged [CHAR LIMIT=80]
     */
    public static final int estimated_charging_time_left=0x7f110838;
    /**
     * Description for estimated time. [CHAR LIMIT=80]
     */
    public static final int estimated_time_description=0x7f110839;
    /**
     * Description for battery time left, i.e. 50min Estimated time left. [CHAR LIMIT=80]
     */
    public static final int estimated_time_left=0x7f11083a;
    /**
     * Label for section about ethernet in data usage screen [CHAR LIMIT=60]
     */
    public static final int ethernet=0x7f11083b;
    /**
     * Format string for amount of ethernet data used [CHAR LIMIT=30]
     */
    public static final int ethernet_data_template=0x7f11083c;
    /**
     * Label for ethernet data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int ethernet_data_usage=0x7f11083d;
    /**
     * Label for ethernet tether checkbox [CHAR LIMIT=NONE]
     */
    public static final int ethernet_tether_checkbox_text=0x7f11083e;
    /**
     * Ethernet Tethering subtext [CHAR LIMIT=NONE]
     */
    public static final int ethernet_tethering_subtext=0x7f11083f;
    public static final int expand_button_title=0x7f110840;
    /**
     * Title for the accessibility preference category of settings considered to be experimental, meaning they might be changed or removed in the future. [CHAR LIMIT=50]
     */
    public static final int experimental_category_title=0x7f110841;
    /**
     * Summary Title for saying that the preference is experimental and will evolve over time due to User feedback. [CHAR LIMIT=NONE]
     */
    public static final int experimental_preference=0x7f110842;
    public static final int exposed_dropdown_menu_content_description=0x7f110843;
    /**
     * Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's code on USB storage [CHARSIZE=40]
     */
    public static final int external_code_size_label=0x7f110844;
    /**
     * Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's data on the SD card [CHARSIZE=40]
     */
    public static final int external_data_size_label=0x7f110845;
    /**
     * Title of switch preference that controls whether an external app source is trusted or not [CHAR LIMIT=50]
     */
    public static final int external_source_switch_title=0x7f110846;
    /**
     * Summary of app trusted to install apps [CHAR LIMIT=45]
     */
    public static final int external_source_trusted=0x7f110847;
    /**
     * Summary of app not trusted to install apps [CHAR LIMIT=45]
     */
    public static final int external_source_untrusted=0x7f110848;
    /**
     * Label for extra app info settings for a specific app [CHAR LIMIT=40]
     */
    public static final int extra_app_info_label=0x7f110849;
    /**
     * Summary for extra app info settings for a specific app [CHAR LIMIT=40]
     */
    public static final int extra_app_info_summary=0x7f11084a;
    /**
     * Extreme threats summary.  [CHAR LIMIT=62]
     */
    public static final int extreme_threats_summary=0x7f11084b;
    /**
     * Extreme threats title.  [CHAR LIMIT=30]
     */
    public static final int extreme_threats_title=0x7f11084c;
    public static final int fab_transformation_scrim_behavior=0x7f11084d;
    public static final int fab_transformation_sheet_behavior=0x7f11084e;
    /**
     * Text shown when "Add face" button is disabled
     */
    public static final int face_add_max=0x7f11084f;
    /**
     * Text shown when users has enrolled a maximum number of faces [CHAR LIMIT=NONE]
     */
    public static final int face_intro_error_max=0x7f110850;
    /**
     * Text shown when an unknown error caused the device to be unable to add faces [CHAR LIMIT=NONE]
     */
    public static final int face_intro_error_unknown=0x7f110851;
    /**
     * Title for preference that guides the user through creating a backup unlock password for Face Unlock [CHAR LIMIT=45]
     */
    public static final int face_unlock_set_unlock_password=0x7f110852;
    /**
     * Title for preference that guides the user through creating a backup unlock pattern for Face Unlock [CHAR LIMIT=45]
     */
    public static final int face_unlock_set_unlock_pattern=0x7f110853;
    /**
     * Title for preference that guides the user through creating a backup unlock PIN for Face Unlock [CHAR LIMIT=45]
     */
    public static final int face_unlock_set_unlock_pin=0x7f110854;
    /**
     * Title for preference that guides the user to skip Face Unlock setup [CHAR LIMIT=60]
     */
    public static final int face_unlock_skip_face=0x7f110855;
    /**
     * Message shown in screen lock picker while setting up the new screen lock with face unlock option. [CHAR LIMIT=NONE]
     */
    public static final int face_unlock_title=0x7f110856;
    /**
     * Toast that settings for an application is failed to open.
     */
    public static final int failed_to_open_app_settings_toast=0x7f110857;
    public static final int fast_charging_summary=0x7f110858;
    /**
     * FastCharge feature
     */
    public static final int fast_charging_title=0x7f110859;
    /**
     * About phone screen, fcc equipment id label  [CHAR LIMIT=40]
     */
    public static final int fcc_equipment_id=0x7f11085a;
    /**
     * Title for feature flags dashboard where developers can turn on experimental features [CHAR LIMIT=50]
     */
    public static final int feature_flags_dashboard_title=0x7f11085b;
    /**
     * Text for menu option in ManageApps screen to present various menu options
     */
    public static final int filter=0x7f11085c;
    /**
     * Label for showing all apps in list [CHAR LIMIT=30]
     */
    public static final int filter_all_apps=0x7f11085d;
    /**
     * Text for filter option in ManageApps screen to display all installed
     * applications
     */
    public static final int filter_apps_all=0x7f11085e;
    /**
     * [CHAR LIMIT=NONE] Text for filter option in ManageApps screen to display disabled apps
     */
    public static final int filter_apps_disabled=0x7f11085f;
    /**
     * Text for filter option in ManageApps screen to display list of
     * packages installed on sdcard.
     */
    public static final int filter_apps_onsdcard=0x7f110860;
    /**
     * Text for filter option in ManageApps screen to display list of running
     * packages only.
     */
    public static final int filter_apps_running=0x7f110861;
    /**
     * Text for filter option in ManageApps screen to display third party
     * applications only
     */
    public static final int filter_apps_third_party=0x7f110862;
    /**
     * Title of dialog for presenting filter options
     */
    public static final int filter_dlg_title=0x7f110863;
    /**
     * Label for showing enabled apps in list [CHAR LIMIT=30]
     */
    public static final int filter_enabled_apps=0x7f110864;
    /**
     * Label for showing apps that can install other apps [CHAR LIMIT=45]
     */
    public static final int filter_install_sources_apps=0x7f110865;
    /**
     * Label for showing instant apps in list [CHAR LIMIT=40]
     */
    public static final int filter_instant_apps=0x7f110866;
    /**
     * Label for showing apps that can manage external storage[CHAR LIMIT=45]
     */
    public static final int filter_manage_external_storage=0x7f110867;
    /**
     * Label for showing apps with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_all_apps=0x7f110868;
    /**
     * Label for showing apps with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_blocked_apps=0x7f110869;
    /**
     * Label for showing categories with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_blocked_channels=0x7f11086a;
    /**
     * Label for showing categories with notifications that override dnd in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_dnd_channels=0x7f11086b;
    /**
     * Label for showing categories with low importance notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_low_channels=0x7f11086c;
    /**
     * Label for showing categories with urgent notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_urgent_channels=0x7f11086d;
    /**
     * Label for showing apps that can display over other apps [CHAR LIMIT=45]
     */
    public static final int filter_overlay_apps=0x7f11086e;
    /**
     * Label for showing apps that can write system settings [CHAR LIMIT=45]
     */
    public static final int filter_write_settings_apps=0x7f11086f;
    /**
     * Label explaining that the device administrator can see data associated on the user's financed device. [CHAR LIMIT=NONE]
     */
    public static final int financed_privacy_data=0x7f110870;
    /**
     * Section header. This section shows what information a device administrator can see on a financed device. [CHAR LIMIT=60]
     */
    public static final int financed_privacy_exposure_category=0x7f110871;
    /**
     * Section header. This section shows what changes a device administrator made to a financed device. [CHAR LIMIT=60]
     */
    public static final int financed_privacy_exposure_changes_category=0x7f110872;
    /**
     * Label explaining that the device admin configured the device to wipe itself when an incorrect password is entered too many times on a financed device. [CHAR LIMIT=NONE]
     */
    public static final int financed_privacy_failed_password_wipe_device=0x7f110873;
    /**
     * Financed Privacy settings activity header, summarizing the changes a credit provider can make to a financed device. [CHAR LIMIT=NONE]
     */
    public static final int financed_privacy_header=0x7f110874;
    /**
     * Label explaining that the device admin can lock the device and change the user's password on their financed device. [CHAR LIMIT=NONE]
     */
    public static final int financed_privacy_lock_device=0x7f110875;
    /**
     * Title of setting on security settings screen on a financed device. This will take the user to a screen with information about what a device administrator can control and their impact on the user's privacy on a financed device. Shown on financed-managed devices only. [CHAR LIMIT=NONE]
     */
    public static final int financed_privacy_settings=0x7f110876;
    /**
     * Label explaining that the device admin can wipe the device remotely for a financed device. [CHAR LIMIT=NONE]
     */
    public static final int financed_privacy_wipe_device=0x7f110877;
    /**
     * Text shown when "Add fingerprint" button is disabled
     */
    public static final int fingerprint_add_max=0x7f110878;
    /**
     * Preference to add another fingerprint
     */
    public static final int fingerprint_add_title=0x7f110879;
    /**
     * Message shown in a dialog which asks the user to confirm when a single fingerprint gets deleted. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_delete_message=0x7f11087a;
    /**
     * Title shown in a dialog which asks the user to confirm when a single fingerprint gets deleted. [CHAR LIMIT=50]
     */
    public static final int fingerprint_delete_title=0x7f11087b;
    /**
     * switch for allowing fingerprint to be used for keyguard
     */
    public static final int fingerprint_enable_keyguard_toggle_title=0x7f11087c;
    /**
     * Button text shown at the end of enrollment that allows the user to add another fingerprint
     */
    public static final int fingerprint_enroll_button_add=0x7f11087d;
    /**
     * Button text shown at the end of enrollment that allows the user to move to the next step
     */
    public static final int fingerprint_enroll_button_next=0x7f11087e;
    public static final int fingerprint_enroll_find_sensor_message_front=0x7f11087f;
    public static final int fingerprint_enroll_find_sensor_message_rear=0x7f110880;
    public static final int fingerprint_enroll_find_sensor_message_side=0x7f110881;
    public static final int fingerprint_enroll_touch_dialog_message_front=0x7f110882;
    public static final int fingerprint_enroll_touch_dialog_message_rear=0x7f110883;
    public static final int fingerprint_enroll_touch_dialog_message_side=0x7f110884;
    /**
     * Title text for fingerprint gesture preference screen [CHAR LIMIT=25]
     */
    public static final int fingerprint_gesture_screen_title=0x7f110885;
    /**
     * Text shown when users has enrolled a maximum number of fingerprints [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_intro_error_max=0x7f110886;
    /**
     * Text shown when an unknown error caused the device to be unable to add fingerprints [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_intro_error_unknown=0x7f110887;
    /**
     * Button to confirm the last removing the last fingerprint. [CHAR LIMIT=20]
     */
    public static final int fingerprint_last_delete_confirm=0x7f110888;
    /**
     * Message shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_last_delete_message=0x7f110889;
    public static final int fingerprint_last_delete_message_profile_challenge=0x7f11088a;
    /**
     * Title shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=50]
     */
    public static final int fingerprint_last_delete_title=0x7f11088b;
    /**
     * Fingerprint managment category title - configuration options for managing enrolled fingerprints [CHAR LIMIT=22]
     */
    public static final int fingerprint_manage_category_title=0x7f11088c;
    /**
     * Title for settings suggestion for fingerprint swipe for notifications [CHAR LIMIT=60]
     */
    public static final int fingerprint_swipe_for_notifications_suggestion_title=0x7f11088d;
    /**
     * Summary text for fingerprint swipe for notifications (device) [CHAR LIMIT=160]
     */
    public static final int fingerprint_swipe_for_notifications_summary=0x7f11088e;
    /**
     * Title text for swiping downwards on fingerprint sensor for notifications [CHAR LIMIT=80]
     */
    public static final int fingerprint_swipe_for_notifications_title=0x7f11088f;
    /**
     * Title for preference that guides the user through creating a backup unlock password for fingerprint [CHAR LIMIT=45]
     */
    public static final int fingerprint_unlock_set_unlock_password=0x7f110890;
    /**
     * Title for preference that guides the user through creating a backup unlock pattern for fingerprint [CHAR LIMIT=45]
     */
    public static final int fingerprint_unlock_set_unlock_pattern=0x7f110891;
    /**
     * Title for preference that guides the user through creating a backup unlock PIN for fingerprint [CHAR LIMIT=45]
     */
    public static final int fingerprint_unlock_set_unlock_pin=0x7f110892;
    /**
     * Title for preference that guides the user to skip fingerprint setup [CHAR LIMIT=60]
     */
    public static final int fingerprint_unlock_skip_fingerprint=0x7f110893;
    /**
     * Message shown in screen lock picker while setting up the new screen lock with fingerprint option. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_unlock_title=0x7f110894;
    /**
     * Fingerprint category title - configuration options for managing fingerprint enrollment [CHAR LIMIT=22]
     */
    public static final int fingerprint_usage_category_title=0x7f110895;
    /**
     * Message shown in a dialog which asks the user to confirm when a single fingerprint gets deleted. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_v2_delete_message=0x7f110896;
    public static final int fingerprint_wake_unlock_press=0x7f110897;
    /**
     * Fingerprint wake-and-unlock
     */
    public static final int fingerprint_wake_unlock_title=0x7f110898;
    public static final int fingerprint_wake_unlock_touch=0x7f110899;
    /**
     * About phone screen, status item label  [CHAR LIMIT=40]
     */
    public static final int firmware_version=0x7f11089a;
    /**
     * Menu option for data connectivity recovery for all requested technologies. [CHAR_LIMIT=NONE]
     */
    public static final int fix_connectivity=0x7f11089b;
    /**
     * Description for the button that makes interface elements larger. [CHAR_LIMIT=NONE]
     */
    public static final int font_size_make_larger_desc=0x7f11089c;
    /**
     * Description for the button that makes interface elements smaller. [CHAR_LIMIT=NONE]
     */
    public static final int font_size_make_smaller_desc=0x7f11089d;
    public static final int font_size_preview_text_body=0x7f11089e;
    public static final int font_size_preview_text_headline=0x7f11089f;
    public static final int font_size_preview_text_subtitle=0x7f1108a0;
    public static final int font_size_preview_text_title=0x7f1108a1;
    /**
     * Button. Chosen when they want to save the chosen text size.
     */
    public static final int font_size_save=0x7f1108a2;
    /**
     * Summary of font size setting screen. [CHAR LIMIT=NONE]
     */
    public static final int font_size_summary=0x7f1108a3;
    /**
     * Footer to show help link content description. [CHAR LIMIT=NONE]
     */
    public static final int footer_learn_more_content_description=0x7f1108a4;
    /**
     * Text to show this network is forbidden [CHAR LIMIT=NONE]
     */
    public static final int forbidden_network=0x7f1108a5;
    /**
     * UI debug setting: force allow apps on external storage [CHAR LIMIT=50]
     */
    public static final int force_allow_on_external=0x7f1108a6;
    /**
     * UI debug setting: force allow on external summary [CHAR LIMIT=150]
     */
    public static final int force_allow_on_external_summary=0x7f1108a7;
    /**
     * [CHAR LIMIT=30] Display and accessibility settings screens, setting option name to force bold text.
     */
    public static final int force_bold_text=0x7f1108a8;
    /**
     * UI debug setting: force desktop mode [CHAR LIMIT=50]
     */
    public static final int force_desktop_mode=0x7f1108a9;
    /**
     * UI debug setting: force desktop mode summary [CHAR LIMIT=NONE]
     */
    public static final int force_desktop_mode_summary=0x7f1108aa;
    /**
     * Display developer settings: Force to the highest refresh rate description [CHAR LIMIT=NONE]
     */
    public static final int force_high_refresh_rate_desc=0x7f1108ab;
    /**
     * Display developer settings: Force to the highest refresh rate [CHAR LIMIT=NONE]
     */
    public static final int force_high_refresh_rate_toggle=0x7f1108ac;
    /**
     * UI debug setting: force anti-aliasing to render apps [CHAR LIMIT=25]
     */
    public static final int force_msaa=0x7f1108ad;
    /**
     * UI debug setting: force anti-aliasing summary [CHAR LIMIT=50]
     */
    public static final int force_msaa_summary=0x7f1108ae;
    /**
     * UI debug setting: force all activites to be resizable for multiwindow [CHAR LIMIT=50]
     */
    public static final int force_resizable_activities=0x7f1108af;
    /**
     * UI debug setting: force allow on external summary [CHAR LIMIT=150]
     */
    public static final int force_resizable_activities_summary=0x7f1108b0;
    /**
     * UI debug setting: force right to left layout [CHAR LIMIT=37]
     */
    public static final int force_rtl_layout_all_locales=0x7f1108b1;
    /**
     * UI debug setting: force right to left layout summary [CHAR LIMIT=100]
     */
    public static final int force_rtl_layout_all_locales_summary=0x7f1108b2;
    /**
     * Manage applications, text label for button to kill / force stop an application
     */
    public static final int force_stop=0x7f1108b3;
    /**
     * [CHAR LIMIT=200] Manage applications, text for dialog when killing persistent apps
     */
    public static final int force_stop_dlg_text=0x7f1108b4;
    public static final int force_stop_dlg_title=0x7f1108b5;
    /**
     * Button label for generic forget action [CHAR LIMIT=20]
     */
    public static final int forget=0x7f1108b6;
    /**
     * Message for forget passpoint dialog [CHAR LIMIT=none]
     */
    public static final int forget_passpoint_dialog_message=0x7f1108b7;
    /**
     * Content of the dialog that asks the user to contact the IT admin to reset password [CHAR LIMIT=100]
     */
    public static final int forgot_password_text=0x7f1108b8;
    /**
     * Title of the dialog that asks the user to contact the IT admin to reset password [CHAR LIMIT=40]
     */
    public static final int forgot_password_title=0x7f1108b9;
    /**
     * Label for free memory of device [CHAR LIMIT=25]
     */
    public static final int free_memory=0x7f1108ba;
    /**
     * Summary for explanation of what full app data backup means. Manufacturers may wish to overlay this resource with their own text
     */
    public static final int fullbackup_data_summary=0x7f1108bb;
    /**
     * Dialog title for confirmation to erase full backup data from server
     */
    public static final int fullbackup_erase_dialog_message=0x7f1108bc;
    /**
     * Title for the screen that lets the user choose a gadget to add to the home screen
     * (or other screens that can host gadgets).  Note to translators: we're still determining
     * the final name for Gadgets/Widgets, so please translate both for now.
     */
    public static final int gadget_picker_title=0x7f1108bd;
    /**
     * On Languages & input settings screen, heading. Inside the "Languages & input settings" screen, this is the header for settings that relate to game controller devices. [CHAR LIMIT=40]
     */
    public static final int game_controller_settings_category=0x7f1108be;
    /**
     * Summary for Game settings entry. [CHAR_LIMIT=NONE]
     */
    public static final int game_settings_summary=0x7f1108bf;
    /**
     * Title for Game settings entry. [CHAR_LIMIT=NONE]
     */
    public static final int game_settings_title=0x7f1108c0;
    /**
     * Title of games app storage screen [CHAR LIMIT=30]
     */
    public static final int game_storage_settings=0x7f1108c1;
    /**
     * Title for the accessibility preference category of general services and settings. [CHAR LIMIT=50]
     */
    public static final int general_category_title=0x7f1108c2;
    /**
     * notification header for general notification settings [CHAR LIMIT=80]
     */
    public static final int general_notification_header=0x7f1108c3;
    /**
     * Gentle notifications settings : header for selecting where gentle notifications should appear [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_also_display=0x7f1108c4;
    /**
     * Gentle notifications settings: display in lock screen  [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_display_lock=0x7f1108c5;
    /**
     * Gentle notifications settings: display in status bar  [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_display_status=0x7f1108c6;
    /**
     * Gentle notifications settings: display only in shade  [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_display_summary_shade=0x7f1108c7;
    /**
     * Gentle notifications settings: display in shade and on the lock screen  [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_display_summary_shade_lock=0x7f1108c8;
    /**
     * Gentle notifications settings: display in shade and on status bar  [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_display_summary_shade_status=0x7f1108c9;
    /**
     * Gentle notifications settings: display on all surfaces  [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_display_summary_shade_status_lock=0x7f1108ca;
    /**
     * Gentle notifications footer: what are gentle notification  [CHAR LIMIT=NONE]
     */
    public static final int gentle_notifications_education=0x7f1108cb;
    /**
     * Configure notifications: link to education/gentle notification settings [CHAR LIMIT=100]
     */
    public static final int gentle_notifications_title=0x7f1108cc;
    /**
     * Double twist sensor type and vendor used by gesture setting
     */
    public static final int gesture_double_twist_sensor_type=0x7f1108cd;
    public static final int gesture_double_twist_sensor_vendor=0x7f1108ce;
    /**
     * Message for the alert dialog which says that the current default home app does not support gesture navigation. [CHAR LIMIT=NONE]
     */
    public static final int gesture_not_supported_dialog_message=0x7f1108cf;
    /**
     * Positive button for the alert dialog when gesture nav not supported by launcher [CHAR LIMIT=60]
     */
    public static final int gesture_not_supported_positive_button=0x7f1108d0;
    /**
     * Preference summary for gesture settings (device) [CHAR LIMIT=NONE]
     */
    public static final int gesture_preference_summary=0x7f1108d1;
    /**
     * Preference title for gesture settings [CHAR LIMIT=40 BACKUP_MESSAGE_ID:5280023307132819052]
     */
    public static final int gesture_preference_title=0x7f1108d2;
    /**
     * Title for prevent ringing gesture screen [CHAR LIMIT=60]
     */
    public static final int gesture_prevent_ringing_screen_title=0x7f1108d3;
    /**
     * Title for prevent ringing setting [CHAR LIMIT=60]
     */
    public static final int gesture_prevent_ringing_sound_title=0x7f1108d4;
    /**
     * Title for prevent ringing setting [CHAR LIMIT=60]
     */
    public static final int gesture_prevent_ringing_title=0x7f1108d5;
    public static final int gesture_setting_off=0x7f1108d6;
    /**
     * Switch text for each gesture setting state
     */
    public static final int gesture_setting_on=0x7f1108d7;
    /**
     * Title for the screen to show all the gesture navigation settings [CHAR LIMIT=80]
     */
    public static final int gesture_settings_activity_title=0x7f1108d8;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager getConfiguredNetworks API
     */
    public static final int getConfiguredNetworks=0x7f1108d9;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager getConnectionInfo API
     */
    public static final int getConnectionInfo=0x7f1108da;
    /**
     * Button for going to the previous screen or step [CHAR LIMIT=20]
     */
    public static final int go_back_button_label=0x7f1108db;
    /**
     * Title for graphics Driver all apps preference [CHAR LIMIT=50]
     */
    public static final int graphics_driver_all_apps_preference_title=0x7f1108dc;
    /**
     * The default value of graphics driver preference for app [CHAR LIMIT=50]
     */
    public static final int graphics_driver_app_preference_default=0x7f1108dd;
    /**
     * The value for updatable developer driver app preference [CHAR LIMIT=50]
     */
    public static final int graphics_driver_app_preference_prerelease_driver=0x7f1108de;
    /**
     * The value for updatable production driver app preference [CHAR LIMIT=50]
     */
    public static final int graphics_driver_app_preference_production_driver=0x7f1108df;
    /**
     * The system driver value for system graphics driver app preference [CHAR LIMIT=50]
     */
    public static final int graphics_driver_app_preference_system=0x7f1108e0;
    /**
     * Title for graphics driver preference for app [CHAR LIMIT=50]
     */
    public static final int graphics_driver_app_preference_title=0x7f1108e1;
    /**
     * Summary for graphics driver dashboard [CHAR LIMIT=50]
     */
    public static final int graphics_driver_dashboard_summary=0x7f1108e2;
    /**
     * Title for graphics driver dashboard where developers can configure apps to choose graphics driver [CHAR LIMIT=50]
     */
    public static final int graphics_driver_dashboard_title=0x7f1108e3;
    /**
     * Footer text for graphics driver dashboard [CHAR LIMIT=NONE]
     */
    public static final int graphics_driver_footer_text=0x7f1108e4;
    /**
     * Title for graphics driver main switch. [CHAR LIMIT=50]
     */
    public static final int graphics_driver_main_switch_title=0x7f1108e5;
    /**
     * Label for exiting and removing the guest session in the user switcher [CHAR LIMIT=35]
     */
    public static final int guest_exit_guest=0x7f1108e6;
    /**
     * Label for adding a new guest in the user switcher [CHAR LIMIT=35]
     */
    public static final int guest_new_guest=0x7f1108e7;
    /**
     * Name for the guest user [CHAR LIMIT=35]
     */
    public static final int guest_nickname=0x7f1108e8;
    /**
     * Label for resetting guest session in the user switcher, which will remove all data from the current guest session [CHAR LIMIT=35]
     */
    public static final int guest_reset_guest=0x7f1108e9;
    /**
     * Label for button in confirmation dialog when resetting guest user [CHAR LIMIT=35]
     */
    public static final int guest_reset_guest_confirm_button=0x7f1108ea;
    /**
     * Title of the confirmation dialog to confirm resetting guest. [CHAR LIMIT=NONE]
     */
    public static final int guest_reset_guest_dialog_title=0x7f1108eb;
    /**
     * Status message indicating the device is in the process of resetting the guest user. [CHAR_LIMIT=NONE]
     */
    public static final int guest_resetting=0x7f1108ec;
    /**
     * On Text & language settings screen, category for physical keyboard text entry options.
     */
    public static final int hardkeyboard_category=0x7f1108ed;
    /**
     * About phone screen, dialog title for showing hardware information such as model, serial number, etc.[CHAR LIMIT=60]
     */
    public static final int hardware_info=0x7f1108ee;
    /**
     * Label for device's hardware revision value [CHAR LIMIT=40]
     */
    public static final int hardware_revision=0x7f1108ef;
    /**
     * HDCP checking dialog title, used for debug purposes only. [CHAR LIMIT=25]
     */
    public static final int hdcp_checking_dialog_title=0x7f1108f0;
    /**
     * HDCP checking title, used for debug purposes only. [CHAR LIMIT=25]
     */
    public static final int hdcp_checking_title=0x7f1108f1;
    /**
     * Header that appears at the top of Account Settings screen
     */
    public static final int header_account_settings=0x7f1108f2;
    /**
     * Title shown in AddAccount
     */
    public static final int header_add_an_account=0x7f1108f3;
    /**
     * Header title for those settings relating to application syncing.
     */
    public static final int header_application_sync_settings=0x7f1108f4;
    /**
     * Settings main menu category heading. System (Updates, data, accessibility, about phone). [CHAR LIMIT=40]
     */
    public static final int header_category_system=0x7f1108f5;
    /**
     * Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40]
     */
    public static final int header_category_wireless_networks=0x7f1108f6;
    /**
     * Header for data and synchronization
     */
    public static final int header_data_and_synchronization=0x7f1108f7;
    public static final int heads_up_notifications_enabled_summary=0x7f1108f8;
    /**
     * Heads-up
     */
    public static final int heads_up_notifications_enabled_title=0x7f1108f9;
    /**
     * Running service details, description for running heavy-weight process.
     */
    public static final int heavy_weight_stop_description=0x7f1108fa;
    /**
     * Label for Help and feedback menu item [CHAR LIMIT=45]
     */
    public static final int help_feedback_label=0x7f1108fb;
    /**
     * Help button label [CHAR LIMIT=40]
     */
    public static final int help_label=0x7f1108fc;
    /**
     * Help URI, 5G limitation in DSDS condition. [DO NOT TRANSLATE]
     */
    public static final int help_uri_5g_dsds=0x7f1108fd;
    /**
     * Help URI, About phone [DO NOT TRANSLATE]
     */
    public static final int help_uri_about=0x7f1108fe;
    public static final int help_uri_about_phone_v2=0x7f1108ff;
    /**
     * Help URI, Accessibility [DO NOT TRANSLATE]
     */
    public static final int help_uri_accessibility=0x7f110900;
    /**
     * Help URI, Vibration [DO NOT TRANSLATE]
     */
    public static final int help_uri_accessibility_vibration=0x7f110901;
    /**
     * Help URI, manage apps that can set alarms and reminders [DO NOT TRANSLATE]
     */
    public static final int help_uri_alarms_and_reminders=0x7f110902;
    /**
     * Help URI, Apps [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps=0x7f110903;
    /**
     * Help URI, manage apps games [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_games=0x7f110904;
    /**
     * Help URI, manage apps power [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_high_power=0x7f110905;
    /**
     * Help URI, manage apps manage sources [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_manage_sources=0x7f110906;
    /**
     * Help URI, manage apps overlay [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_overlay=0x7f110907;
    /**
     * Help URI, manage apps storage [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_storage=0x7f110908;
    /**
     * Help URI, manage apps wifi access [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_wifi_access=0x7f110909;
    /**
     * Help URI, manage apps write settings [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps_write_settings=0x7f11090a;
    /**
     * Help URI, Android beam [DO NOT TRANSLATE]
     */
    public static final int help_uri_beam=0x7f11090b;
    /**
     * url for the bluetooth toggle required dialog help page
     */
    public static final int help_uri_bluetooth_screen=0x7f11090c;
    /**
     * Help URI, Default [DO NOT TRANSLATE]
     */
    public static final int help_uri_default=0x7f11090d;
    /**
     * Help URI, Display [DO NOT TRANSLATE]
     */
    public static final int help_uri_display=0x7f11090e;
    /**
     * Help URI, Interruptions [DO NOT TRANSLATE]
     */
    public static final int help_uri_interruptions=0x7f11090f;
    /**
     * Help URI, manage apps that have access to all files [DO NOT TRANSLATE]
     */
    public static final int help_uri_manage_external_storage=0x7f110910;
    /**
     * Help URI, manage apps that can modify media files [DO NOT TRANSLATE]
     */
    public static final int help_uri_media_management_apps=0x7f110911;
    /**
     * url for the NFC and payment settings page
     */
    public static final int help_uri_nfc_and_payment_settings=0x7f110912;
    /**
     * Help URI, Notifications [DO NOT TRANSLATE]
     */
    public static final int help_uri_notifications=0x7f110913;
    /**
     * Help URI, Other sounds [DO NOT TRANSLATE]
     */
    public static final int help_uri_other_sounds=0x7f110914;
    /**
     * Help URI, prevent ringing gesture [DO NOT TRANSLATE]
     */
    public static final int help_uri_prevent_ringing_gesture=0x7f110915;
    /**
     * Help URI, Printing [DO NOT TRANSLATE]
     */
    public static final int help_uri_printing=0x7f110916;
    public static final int help_uri_private_dns=0x7f110917;
    public static final int help_uri_process_stats_apps=0x7f110918;
    public static final int help_uri_process_stats_summary=0x7f110919;
    /**
     * Help URI, restricted apps page [DO NOT TRANSLATE]
     */
    public static final int help_uri_restricted_apps=0x7f11091a;
    /**
     * url for the SIM combination warning required dialog help page
     */
    public static final int help_uri_sim_combination_warning=0x7f11091b;
    /**
     * Help URI, smart battery page [DO NOT TRANSLATE]
     */
    public static final int help_uri_smart_battery_settings=0x7f11091c;
    /**
     * Help URI, Storage [DO NOT TRANSLATE]
     */
    public static final int help_uri_storage=0x7f11091d;
    /**
     * Help URI, Wallpaper [DO NOT TRANSLATE]
     */
    public static final int help_uri_wallpaper=0x7f11091e;
    public static final int help_uri_wifi_calling=0x7f11091f;
    /**
     * url for the wifi scanning required dialog help page
     */
    public static final int help_uri_wifi_scanning_required=0x7f110920;
    public static final int help_url_accessibility_shortcut=0x7f110921;
    public static final int help_url_account_detail=0x7f110922;
    /**
     * Help URL, Accounts [DO NOT TRANSLATE]
     */
    public static final int help_url_accounts=0x7f110923;
    /**
     * url for learning more about IT admin policy disabling
     */
    public static final int help_url_action_disabled_by_it_admin=0x7f110924;
    /**
     * Help URL, Adaptive sleep [DO NOT TRANSLATE]
     */
    public static final int help_url_adaptive_sleep=0x7f110925;
    /**
     * Help URI, app usage page [DO NOT TRANSLATE]
     */
    public static final int help_url_app_usage_settings=0x7f110926;
    public static final int help_url_apps_and_notifications=0x7f110927;
    /**
     * Help URI, USB Audio [DO NOT TRANSLATE]
     */
    public static final int help_url_audio_accessory_not_supported=0x7f110928;
    /**
     * Help URL, Auto brightness [DO NOT TRANSLATE]
     */
    public static final int help_url_auto_brightness=0x7f110929;
    public static final int help_url_autoclick=0x7f11092a;
    /**
     * Help URL, Backup & reset [DO NOT TRANSLATE]
     */
    public static final int help_url_backup_reset=0x7f11092b;
    /**
     * Help URL, Battery [DO NOT TRANSLATE]
     */
    public static final int help_url_battery=0x7f11092c;
    /**
     * Help URL, Battery Defender [DO NOT TRANSLATE]
     */
    public static final int help_url_battery_defender=0x7f11092d;
    /**
     * url for battery page if battery is not present
     */
    public static final int help_url_battery_missing=0x7f11092e;
    /**
     * Help URI, battery saver page [DO NOT TRANSLATE]
     */
    public static final int help_url_battery_saver_settings=0x7f11092f;
    /**
     * Help URL, Bluetooth [DO NOT TRANSLATE]
     */
    public static final int help_url_bluetooth=0x7f110930;
    /**
     * Help URL, Accessibility caption preferences [DO NOT TRANSLATE]
     */
    public static final int help_url_caption=0x7f110931;
    /**
     * Help URL, Choose lockscreen [DO NOT TRANSLATE]
     */
    public static final int help_url_choose_lockscreen=0x7f110932;
    public static final int help_url_color_correction=0x7f110933;
    /**
     * Help URL, Accessibility Color Inversion [DO NOT TRANSLATE]
     */
    public static final int help_url_color_inversion=0x7f110934;
    public static final int help_url_connected_devices=0x7f110935;
    public static final int help_url_dark_theme=0x7f110936;
    /**
     * Help URL, Data Saver [DO NOT TRANSLATE]
     */
    public static final int help_url_data_saver=0x7f110937;
    /**
     * Help URL, Data usage [DO NOT TRANSLATE]
     */
    public static final int help_url_data_usage=0x7f110938;
    /**
     * Help URL, Display size [DO NOT TRANSLATE]
     */
    public static final int help_url_display_size=0x7f110939;
    public static final int help_url_double_tap_screen=0x7f11093a;
    /**
     * Help URL, Dreams [DO NOT TRANSLATE]
     */
    public static final int help_url_dreams=0x7f11093b;
    /**
     * Help URL, Encryption settings [DO NOT TRANSLATE]
     */
    public static final int help_url_encryption=0x7f11093c;
    /**
     * Help URL, Face [DO NOT TRANSLATE]
     */
    public static final int help_url_face=0x7f11093d;
    /**
     * Help URL, Fingerprint [DO NOT TRANSLATE]
     */
    public static final int help_url_fingerprint=0x7f11093e;
    /**
     * Help URL, Font size [DO NOT TRANSLATE]
     */
    public static final int help_url_font_size=0x7f11093f;
    /**
     * Help URL, Gesture settings
     */
    public static final int help_url_gestures=0x7f110940;
    public static final int help_url_icc_lock=0x7f110941;
    /**
     * url for vpn page if connected vpn is not a secure type
     */
    public static final int help_url_insecure_vpn=0x7f110942;
    /**
     * Help URL, Install certificate settings [DO NOT TRANSLATE]
     */
    public static final int help_url_install_certificate=0x7f110943;
    /**
     * Help URL, Location access [DO NOT TRANSLATE]
     */
    public static final int help_url_location_access=0x7f110944;
    public static final int help_url_lockscreen=0x7f110945;
    public static final int help_url_magnification=0x7f110946;
    /**
     * Help URL, Manage Storage [DO NOT TRANSLATE]
     */
    public static final int help_url_manage_storage=0x7f110947;
    /**
     * Help URL, More [DO NOT TRANSLATE]
     */
    public static final int help_url_more_networks=0x7f110948;
    public static final int help_url_network_dashboard=0x7f110949;
    /**
     * Help URL, Tap & pay [DO NOT TRANSLATE]
     */
    public static final int help_url_nfc_payment=0x7f11094a;
    public static final int help_url_night_display=0x7f11094b;
    public static final int help_url_pickup_gesture=0x7f11094c;
    /**
     * Help URL, Previously connected bluetooth devices [DO NOT TRANSLATE]
     */
    public static final int help_url_previously_connected_devices=0x7f11094d;
    /**
     * Help URL, Top level privacy settings [DO NOT TRANSLATE]
     */
    public static final int help_url_privacy_dashboard=0x7f11094e;
    /**
     * Help URL, Remote display [DO NOT TRANSLATE]
     */
    public static final int help_url_remote_display=0x7f11094f;
    public static final int help_url_screen_pinning=0x7f110950;
    public static final int help_url_screen_saver=0x7f110951;
    /**
     * Help URL, Security settings [DO NOT TRANSLATE]
     */
    public static final int help_url_security=0x7f110952;
    /**
     * Help URL, Sound [DO NOT TRANSLATE]
     */
    public static final int help_url_sound=0x7f110953;
    public static final int help_url_storage_dashboard=0x7f110954;
    public static final int help_url_system_dashboard=0x7f110955;
    /**
     * Help URL, Tethering [DO NOT TRANSLATE]
     */
    public static final int help_url_tether=0x7f110956;
    /**
     * Help URL, Accessibility Timeout [DO NOT TRANSLATE]
     */
    public static final int help_url_timeout=0x7f110957;
    public static final int help_url_trust_agent=0x7f110958;
    /**
     * Help URL, Unrestricted data access [DO NOT TRANSLATE]
     */
    public static final int help_url_unrestricted_data_access=0x7f110959;
    /**
     * Help URL, Android is upgrading [DO NOT TRANSLATE]
     */
    public static final int help_url_upgrading=0x7f11095a;
    public static final int help_url_usage_access=0x7f11095b;
    /**
     * Help URI, USB Contaminant [DO NOT TRANSLATE]
     */
    public static final int help_url_usb_contaminant_detected=0x7f11095c;
    public static final int help_url_user_and_account_dashboard=0x7f11095d;
    /**
     * Help URL, User settings [DO NOT TRANSLATE]
     */
    public static final int help_url_users=0x7f11095e;
    /**
     * Help URL, Vpn [DO NOT TRANSLATE]
     */
    public static final int help_url_vpn=0x7f11095f;
    /**
     * Help URL, WiFi [DO NOT TRANSLATE]
     */
    public static final int help_url_wifi=0x7f110960;
    /**
     * Help URL, WiFi Direct [DO NOT TRANSLATE]
     */
    public static final int help_url_wifi_p2p=0x7f110961;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int hidden_ssid_label=0x7f110962;
    public static final int hide_bottom_view_on_scroll_behavior=0x7f110963;
    /**
     * Label for menu to show app usage [CHAR LIMIT=30]
     */
    public static final int hide_extra_apps=0x7f110964;
    /**
     * Configure Notifications: setting summary [CHAR LIMIT=NONE]
     */
    public static final int hide_silent_icons_summary=0x7f110965;
    /**
     * Configure Notifications: setting title [CHAR LIMIT=80]
     */
    public static final int hide_silent_icons_title=0x7f110966;
    /**
     * Label on the right side of sensitivity adjustment slider [CHAR LIMIT=30]
     */
    public static final int high_label=0x7f110967;
    /**
     * Label for list to control apps that ignore battery saving restrictions [CHAR LIMIT=27]
     */
    public static final int high_power_apps=0x7f110968;
    /**
     * Description of high power switch [CHAR LIMIT=NONE]
     */
    public static final int high_power_desc=0x7f110969;
    /**
     * Filter for apps allowed to use a lot of power [CHAR LIMIT=25]
     */
    public static final int high_power_filter_on=0x7f11096a;
    /**
     * Summary of app not allowed to use a lot of power [CHAR LIMIT=60]
     */
    public static final int high_power_off=0x7f11096b;
    /**
     * Summary of app allowed to use a lot of power [CHAR LIMIT=60]
     */
    public static final int high_power_on=0x7f11096c;
    /**
     * Body text of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE]
     */
    public static final int high_power_prompt_body=0x7f11096d;
    /**
     * Title of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE]
     */
    public static final int high_power_prompt_title=0x7f11096e;
    /**
     * Summary of app which doesn't have a battery optimization setting [CHAR LIMIT=60]
     */
    public static final int high_power_system=0x7f11096f;
    public static final int high_touch_polling_rate_summary=0x7f110970;
    /**
     * High touch polling rate
     */
    public static final int high_touch_polling_rate_title=0x7f110971;
    public static final int high_touch_sensitivity_summary=0x7f110972;
    /**
     * High touch sensitivity
     */
    public static final int high_touch_sensitivity_title=0x7f110973;
    /**
     * Activity title for battery usage history details [CHAR LIMIT=60]
     */
    public static final int history_details_title=0x7f110974;
    /**
     * Notification history screen; summary when history is newly turned on [CHAR LIMIT=NONE]
     */
    public static final int history_toggled_on_summary=0x7f110975;
    /**
     * Notification history screen; title when history is newly turned on [CHAR LIMIT=200]
     */
    public static final int history_toggled_on_title=0x7f110976;
    /**
     * Option in navigation drawer that leads to Settings main screen [CHAR LIMIT=30]
     */
    public static final int home=0x7f110977;
    /**
     * Button to switch the default home app [CHAR LIMIT=60]
     */
    public static final int home_app=0x7f110978;
    /**
     * Home settings screen, text indicating that a launcher does not support work profiles [CHAR LIMIT=100]
     */
    public static final int home_work_profile_not_supported=0x7f110979;
    /**
     * Homepage bottom menu. Title for display all Settings [CHAR LIMIT=30]
     */
    public static final int homepage_all_settings=0x7f11097a;
    /**
     * Content description for condition footer button. In talkback mode, double tapping will cause condition list to collapse [CHAR LIMIT=NONE]
     */
    public static final int homepage_condition_footer_content_description=0x7f11097b;
    /**
     * Homepage bottom menu. Title for display personalized Settings [CHAR LIMIT=30]
     */
    public static final int homepage_personal_settings=0x7f11097c;
    /**
     * UI debug setting: Force enable "smart dark" UI rendering feature summary [CHAR LIMIT=NONE]
     */
    public static final int hwui_force_dark_summary=0x7f11097d;
    /**
     * UI debug setting: Force enable "smart dark" UI rendering feature [CHAR LIMIT=60]
     */
    public static final int hwui_force_dark_title=0x7f11097e;
    public static final int icon_content_description=0x7f11097f;
    /**
     * Ignore battery optimizations off label [CHAR LIMIT=30]
     */
    public static final int ignore_optimizations_off=0x7f110980;
    /**
     * Ignore battery optimizations off description [CHAR LIMIT=NONE]
     */
    public static final int ignore_optimizations_off_desc=0x7f110981;
    /**
     * Ignore battery optimizations on label [CHAR LIMIT=30]
     */
    public static final int ignore_optimizations_on=0x7f110982;
    /**
     * Ignore battery optimizations on description [CHAR LIMIT=NONE]
     */
    public static final int ignore_optimizations_on_desc=0x7f110983;
    /**
     * Ignore battery optimizations dialog title [CHAR LIMIT=NONE]
     */
    public static final int ignore_optimizations_title=0x7f110984;
    /**
     * Warning message about security implications of enabling an input method, displayed as a dialog
     * message when the user selects to enable an IME.
     */
    public static final int ime_security_warning=0x7f110985;
    public static final int imei_information_summary=0x7f110986;
    /**
     * Title and summary for SIM Status
     */
    public static final int imei_information_title=0x7f110987;
    /**
     * About phone screen, title for IMEI for multi-sim devices
     */
    public static final int imei_multi_sim=0x7f110988;
    /**
     * UI debug setting: immediately destroy activities? [CHAR LIMIT=25]
     */
    public static final int immediately_destroy_activities=0x7f110989;
    /**
     * UI debug setting: immediately destroy activities summary [CHAR LIMIT=50]
     */
    public static final int immediately_destroy_activities_summary=0x7f11098a;
    /**
     * [CHAR LIMIT=100] Setting to automatically bubble all notifications from favorite conversations
     */
    public static final int important_bubble=0x7f11098b;
    /**
     * [CHAR LIMIT=NONE] description of how notifications from important conversations behave
     */
    public static final int important_conversation_behavior_summary=0x7f11098c;
    /**
     * [CHAR LIMIT=100] preference category title
     */
    public static final int important_conversations=0x7f11098d;
    /**
     * preference category summary
     */
    public static final int important_conversations_summary=0x7f11098e;
    /**
     * preference category summary
     */
    public static final int important_conversations_summary_bubbles=0x7f11098f;
    /**
     * Used when IMS registration state is not registered
     */
    public static final int ims_reg_status_not_registered=0x7f110990;
    /**
     * Used when IMS registration state is registered
     */
    public static final int ims_reg_status_registered=0x7f110991;
    /**
     * Label of IMS registration header
     */
    public static final int ims_reg_title=0x7f110992;
    /**
     * Settings item summary for active app [CHAR LIMIT=100]
     */
    public static final int inactive_app_active_summary=0x7f110993;
    /**
     * Settings item summary for inactive app [CHAR LIMIT=100]
     */
    public static final int inactive_app_inactive_summary=0x7f110994;
    /**
     * Settings item title for apps in standby (limiting background activity) [CHAR LIMIT=35]
     */
    public static final int inactive_apps_title=0x7f110995;
    /**
     * Auto-restore menu title [CHAR LIMIT=30]
     */
    public static final int include_app_data_title=0x7f110996;
    /**
     * Sound settings screen, the title of the volume bar to adjust the incoming call volume
     */
    public static final int incoming_call_volume_title=0x7f110997;
    public static final int increasing_ring_min_volume_title=0x7f110998;
    public static final int increasing_ring_ramp_up_time_title=0x7f110999;
    /**
     * Increasing ring tone volume
     */
    public static final int increasing_ring_volume_option_title=0x7f11099a;
    /**
     * Content description for the Information icon [CHAR LIMIT=30]
     */
    public static final int information_label=0x7f11099b;
    /**
     * Title of preference category that lists all settings about helping user text input such as spell checker [CHAR LIMIT=60]
     */
    public static final int input_assistance=0x7f11099c;
    /**
     * Setting name for Input Method chooser
     */
    public static final int input_method=0x7f11099d;
    /**
     * Title for setting the visibility of input method selector [CHAR LIMIT=35]
     */
    public static final int input_method_selector=0x7f11099e;
    /**
     * An option to always hide input method selector [CHAR LIMIT=25]
     */
    public static final int input_method_selector_always_hide_title=0x7f11099f;
    public static final int input_method_selector_always_hide_value=0x7f1109a0;
    /**
     * An option to always show input method selector [CHAR LIMIT=25]
     */
    public static final int input_method_selector_always_show_title=0x7f1109a1;
    public static final int input_method_selector_always_show_value=0x7f1109a2;
    /**
     * An option to always show input method selector automatically when needed [CHAR LIMIT=25]
     */
    public static final int input_method_selector_show_automatically_title=0x7f1109a3;
    /**
     * values for input method selector should be corresponding to the array index of titles
     */
    public static final int input_method_selector_show_automatically_value=0x7f1109a4;
    public static final int input_method_selector_visibility_default_value=0x7f1109a5;
    /**
     * Title for settings of each IME [CHAR LIMIT=25]
     */
    public static final int input_method_settings=0x7f1109a6;
    /**
     * Spoken description for IME settings image button [CHAR LIMIT=NONE]
     */
    public static final int input_method_settings_button=0x7f1109a7;
    /**
     * Title for the settings of selecting active input methods of an IME [CHAR LIMIT=35]
     */
    public static final int input_methods_and_subtype_enabler_title=0x7f1109a8;
    /**
     * Input Methods Settings localized format string for generating the appropriate "Foo settings" menu label for the Input Method named "Foo" [CHAR LIMIT=35]
     */
    public static final int input_methods_settings_label_format=0x7f1109a9;
    /**
     * Input methods Settings
     */
    public static final int input_methods_settings_title=0x7f1109aa;
    /**
     * Warning that appears below the unknown sources switch in settings
     */
    public static final int install_all_warning=0x7f1109ab;
    /**
     * Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.
     */
    public static final int install_applications=0x7f1109ac;
    /**
     * Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  [CHAR LIMIT=30]
     */
    public static final int install_applications_title=0x7f1109ad;
    /**
     * Title for settings screen for controlling apps that can install other apps on device [CHAR LIMIT=50]
     */
    public static final int install_other_apps=0x7f1109ae;
    /**
     * [CHAR LIMIT=NONE] Manage applications, individual application info screen, button label under Storage heading. Button to install an application for the user.
     */
    public static final int install_text=0x7f1109af;
    /**
     * Added as the value of a header field indicating this is an instant app (as opposed to installed normally)
     */
    public static final int install_type_instant=0x7f1109b0;
    /**
     * [CHAR LIMIT=30] App details, text telling an application is installed.
     */
    public static final int installed=0x7f1109b1;
    /**
     * Manage applications, individual application info screen, summary for the option which will trigger instant app info in it's installer [CHAR_LIMIT=50]
     */
    public static final int instant_app_details_summary=0x7f1109b2;
    /**
     * Preference label for an tappable preference that will open the instant apps settings. [CHAR LIMIT=60]
     */
    public static final int instant_apps_settings=0x7f1109b3;
    /**
     * Manage applications, text for move error messages
     */
    public static final int insufficient_storage=0x7f1109b4;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_account_label=0x7f1109b5;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_action_label=0x7f1109b6;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_data_label=0x7f1109b7;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_resource_label=0x7f1109b8;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_sendbroadcast_text=0x7f1109b9;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_startactivity_text=0x7f1109ba;
    /**
     * Settings header. This setting shows a user's connected work and personal apps.
     * When a user connects select work and personal apps, they can access work and personal data together. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_app_detail_title=0x7f1109bb;
    /**
     * Dialog text. This text lets the user know that their work app (e.g. Calendar) will be
     * able to access data in their personal app. The placeholder is the app name. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_consent_dialog_app_data_summary=0x7f1109bc;
    /**
     * Title of a section in a dialog. This section shows the app data that will be
     * accessible when work and personal apps are connected. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_consent_dialog_app_data_title=0x7f1109bd;
    /**
     * Dialog text. This text lets the user know that their work app (e.g. Calendar) will be able
     * to use permissions in their personal app. The placeholder is the app name. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_consent_dialog_permissions_summary=0x7f1109be;
    /**
     * Title of a section in a dialog. This section shows the permissions that will be accessible
     * when work and personal apps are connected. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_consent_dialog_permissions_title=0x7f1109bf;
    /**
     * Dialog text. This dialog is shown when a user tries to connect a work app to a personal
     * app (e.g. their work Calendar to their personal Calendar), and it's confirming that they should
     * connect the apps only if they trust the work app with their personal data.
     * The placeholder is the app name. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_consent_dialog_summary=0x7f1109c0;
    /**
     * Dialog title. This dialog is shown when a user tries to connect a work app to a personal
     * app (e.g. their work Calendar to their personal Calendar), and it's confirming that they should
     * connect the apps only if they trust the work app with their personal data. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_consent_dialog_title=0x7f1109c1;
    /**
     * Settings subtext. This text is shown when a user doesn't have any connected apps. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_empty_text=0x7f1109c2;
    /**
     * Banner text. This banner lets a user know that they need to install an app in their
     * work/personal profile in order to connect it to the corresponding personal app.
     * The placeholder would be the app name (e.g. Calendar). [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_install_app_summary=0x7f1109c3;
    /**
     * Banner title. This banner lets a user know that they need to install an app in their
     * personal profile in order to connect it to the corresponding work app.
     * The placeholder would be the app name (e.g. Calendar). [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_install_personal_app_title=0x7f1109c4;
    /**
     * Banner title. This banner lets a user know that they need to install an app in their
     * work profile in order to connect it to the corresponding personal app.
     * The placeholder would be the app name (e.g. Calendar). [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_install_work_app_title=0x7f1109c5;
    /**
     * Search keywords. If a user is searching for the "Connected work & personal apps" feature in Settings,
     * these keywords will surface that feature. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_keywords=0x7f1109c6;
    /**
     * Summary of preference to manage connected work and personal apps, informing the user that
     * currently no apps are connected [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_number_of_connected_apps_none=0x7f1109c7;
    /**
     * Settings text. This text lets a user know that if they connect work and personal apps,
     * they will share permissions and can access each other's data. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_summary_1=0x7f1109c8;
    /**
     * Settings text. This text lets a user know that they should only connect work and personal apps
     * if they trust the work app with their personal data. The work app could potentially show that data
     * to the user's IT admin. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_summary_2=0x7f1109c9;
    /**
     * Settings text. This text lets a user know that they can disconnect work and personal apps from
     * the Privacy page in settings, This is only shown when the connected app page is launched via
     * an app, not when navigated to via settings. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_summary_3=0x7f1109ca;
    /**
     * Settings subtext. This text is shown when the work and personal apps are connected. [CHAR LIMIT=45]
     */
    public static final int interact_across_profiles_summary_allowed=0x7f1109cb;
    /**
     * Settings subtext. This text is shown when the work and personal apps are not connected. [CHAR LIMIT=45]
     */
    public static final int interact_across_profiles_summary_not_allowed=0x7f1109cc;
    /**
     * Toggle label. This text is shown when a user can connect specific work and personal apps.
     * The apps they can connect are shown above this toggle. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_switch_disabled=0x7f1109cd;
    /**
     * Toggle label. This text is shown when a user's work and personal apps are connected. [CHAR LIMIT=NONE]
     */
    public static final int interact_across_profiles_switch_enabled=0x7f1109ce;
    /**
     * Settings label. This setting shows a user's connected work and personal apps.
     * When a user connects select work and personal apps, they can access work and personal data together. [CHAR LIMIT=50]
     */
    public static final int interact_across_profiles_title=0x7f1109cf;
    /**
     * Title for the accessibility preference category of interaction control services and settings. [CHAR LIMIT=50]
     */
    public static final int interaction_control_category_title=0x7f1109d0;
    /**
     * SD card & phone storage settings screen heading. This is displayed above items that pertain to the phone's internal storage
     */
    public static final int internal_memory=0x7f1109d1;
    /**
     * [CHAR LIMIT=15] Manage applications, label for chart showing internal storage use.
     */
    public static final int internal_storage=0x7f1109d2;
    /**
     * Title for the Internet Connectivity dialog (settings panel) with Internet related settings [CHAR LIMIT=50]
     */
    public static final int internet_connectivity_panel_title=0x7f1109d3;
    public static final int invalid_location=0x7f1109d4;
    public static final int invalid_size_value=0x7f1109d5;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int ipaddr_label=0x7f1109d6;
    public static final int item_view_role_description=0x7f1109d7;
    /**
     * [CHAR_LIMIT=NONE] Format to put together two items in a list.
     */
    public static final int join_two_items=0x7f1109d8;
    /**
     * [CHAR_LIMIT=NONE] Format to put together two unrelated items in a list when "and" is not an appropriate conjunction for these 2 items
     */
    public static final int join_two_unrelated_items=0x7f1109d9;
    /**
     * Setting Checkbox title whether to keep the screen on when plugged in to a power source
     */
    public static final int keep_screen_on=0x7f1109da;
    /**
     * setting Checkbox summary whether to keep the screen on when plugged in
     */
    public static final int keep_screen_on_summary=0x7f1109db;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int kernel_version=0x7f1109dc;
    /**
     * Title for the 'keyboard and input methods' preference category. [CHAR LIMIT=45]
     */
    public static final int keyboard_and_input_methods_category=0x7f1109dd;
    /**
     * Title for the 'keyboard assistance' preference category. [CHAR LIMIT=35]
     */
    public static final int keyboard_assistance_category=0x7f1109de;
    /**
     * Physical keyboard state - Disconnected [CHAR LIMIT=NONE]
     */
    public static final int keyboard_disconnected=0x7f1109df;
    /**
     * Advanced keyboard settings
     */
    public static final int keyboard_extras_title=0x7f1109e0;
    /**
     * Label of the default keyboard layout.  [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_default_label=0x7f1109e1;
    /**
     * Button to configure keyboard layouts.  [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_dialog_setup_button=0x7f1109e2;
    /**
     * Hint describing how to switch keyboard layouts using the keyboard.  [CHAR LIMIT=48]
     */
    public static final int keyboard_layout_dialog_switch_hint=0x7f1109e3;
    /**
     * Title for the keyboard layout preference dialog. [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_dialog_title=0x7f1109e4;
    /**
     * Title for the keyboard layout picker activity. [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_picker_title=0x7f1109e5;
    /**
     * On Languages & input settings screen, heading. Inside the "Languages & input settings" screen, this is the header for settings that relate to keyboard (enable/disable each keyboard, settings for each keyboard).
     */
    public static final int keyboard_settings_category=0x7f1109e6;
    /**
     * Title of keyboard settings list item within voice input/output settings
     */
    public static final int keyboard_settings_title=0x7f1109e7;
    /**
     * Title for the button to trigger the 'keyboard shortcuts helper' dialog. [CHAR LIMIT=35]
     */
    public static final int keyboard_shortcuts_helper=0x7f1109e8;
    /**
     * Summary text for the 'keyboard shortcuts helper' dialog. [CHAR LIMIT=100]
     */
    public static final int keyboard_shortcuts_helper_summary=0x7f1109e9;
    /**
     * List of synonyms used in the settings search bar to find the “Accessibility”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_accessibility=0x7f1109ea;
    /**
     * List of synonyms used in the settings search bar to find the “Accessibility Menu”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_accessibility_menu=0x7f1109eb;
    public static final int keywords_accounts=0x7f1109ec;
    /**
     * Adb wireless search Keywords [CHAR LIMIT=NONE]
     */
    public static final int keywords_adb_wireless=0x7f1109ed;
    /**
     * Keywords for bluetooth pairing item [CHAR LIMIT=30]
     */
    public static final int keywords_add_bt_device=0x7f1109ee;
    /**
     * List of synonyms for add language, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_add_language=0x7f1109ef;
    /**
     * Provider Model: List of synonyms for the airplane-safe networks, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_airplane_safe_networks=0x7f1109f0;
    /**
     * Keywords for setting screen for controlling apps that can schedule alarms [CHAR LIMIT=100]
     */
    public static final int keywords_alarms_and_reminders=0x7f1109f1;
    public static final int keywords_all_apps=0x7f1109f2;
    /**
     * List of synonyms for Ambient display setting (when the screen is off), used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_ambient_display=0x7f1109f3;
    /**
     * Search keyword for Ambient display settings screen.
     */
    public static final int keywords_ambient_display_screen=0x7f1109f4;
    public static final int keywords_android_version=0x7f1109f5;
    public static final int keywords_app=0x7f1109f6;
    /**
     * Search keyword for "Default Apps" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_app_default=0x7f1109f7;
    public static final int keywords_app_permissions=0x7f1109f8;
    /**
     * Search keyword for App pinning Settings [CHAR LIMIT=NONE]
     */
    public static final int keywords_app_pinning=0x7f1109f9;
    /**
     * Search keyword for "App info" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_applications_settings=0x7f1109fa;
    public static final int keywords_assist_gesture_launch=0x7f1109fb;
    /**
     * List of synonyms for the Default Assist and Voice input setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_assist_input=0x7f1109fc;
    /**
     * List of synonyms used in the settings search bar to find the “Autoclick(dwell timing)”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_auto_click=0x7f1109fd;
    /**
     * List of synonyms for the auto rotate (rotate the virtual display when the device rotates) setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_auto_rotate=0x7f1109fe;
    public static final int keywords_backup=0x7f1109ff;
    /**
     * List of synonyms for the cross SIM calling titles, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_backup_calling=0x7f110a00;
    public static final int keywords_battery=0x7f110a01;
    public static final int keywords_battery_adaptive_preferences=0x7f110a02;
    public static final int keywords_battery_saver=0x7f110a03;
    /**
     * Battery Saver: Search terms for battery saver schedule preference. Feel free to add additional terms when translating if appropriate [CHAR_LIMIT=NONE]
     */
    public static final int keywords_battery_saver_schedule=0x7f110a04;
    /**
     * Battery Saver: Search terms for sticky battery saver preference [CHAR_LIMIT=NONE]
     */
    public static final int keywords_battery_saver_sticky=0x7f110a05;
    public static final int keywords_battery_usage=0x7f110a06;
    /**
     * Search keyword for biometric settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_biometric_settings=0x7f110a07;
    public static final int keywords_biometric_unlock=0x7f110a08;
    /**
     * List of synonyms for the Bluetooth setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_bluetooth_settings=0x7f110a09;
    /**
     * List of synonyms used in the settings search bar to find the “Bold text”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_bold_text=0x7f110a0a;
    public static final int keywords_change_wifi_state=0x7f110a0b;
    /**
     * List of synonyms used in the settings search bar to find the “Color correction”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_color_correction=0x7f110a0c;
    /**
     * List of synonyms used in the settings search bar to find the “Color inversion”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_color_inversion=0x7f110a0d;
    public static final int keywords_color_mode=0x7f110a0e;
    public static final int keywords_color_temperature=0x7f110a0f;
    /**
     * Keywords for Content Capture feature [CHAR_LIMIT=none]
     */
    public static final int keywords_content_capture=0x7f110a10;
    /**
     * Search keywords for dark mode settings [CHAR LIMIT=NONE]
     */
    public static final int keywords_dark_ui_mode=0x7f110a11;
    public static final int keywords_date_and_time=0x7f110a12;
    public static final int keywords_default_apps=0x7f110a13;
    /**
     * List of synonyms for the default payment app setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_default_payment_app=0x7f110a14;
    /**
     * Search keyword for Send Device Feedback Setting [CHAR LIMIT=NONE]
     */
    public static final int keywords_device_feedback=0x7f110a15;
    public static final int keywords_display=0x7f110a16;
    /**
     * Search keywords for adaptive sleep setting [CHAR LIMIT=NONE]
     */
    public static final int keywords_display_adaptive_sleep=0x7f110a17;
    /**
     * Search keywords for adaptive brightness setting [CHAR LIMIT=NONE]
     */
    public static final int keywords_display_auto_brightness=0x7f110a18;
    public static final int keywords_display_brightness_level=0x7f110a19;
    /**
     * Search keyword for "Cast" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_display_cast_screen=0x7f110a1a;
    public static final int keywords_display_font_size=0x7f110a1b;
    public static final int keywords_display_night_display=0x7f110a1c;
    /**
     * List of synonyms used in the settings search bar to find the “Display size”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_display_size=0x7f110a1d;
    public static final int keywords_display_wallpaper=0x7f110a1e;
    /**
     * Search keyword for "Display over other apps" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_draw_overlay=0x7f110a1f;
    /**
     * List of synonyms for the enhance 4G LTE titles, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_enhance_4g_lte=0x7f110a20;
    /**
     * Search keyword for face settings.
     */
    public static final int keywords_face_settings=0x7f110a21;
    public static final int keywords_face_unlock=0x7f110a22;
    public static final int keywords_factory_data_reset=0x7f110a23;
    /**
     * Search keyword for fingerprint settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_fingerprint_settings=0x7f110a24;
    /**
     * Search keyword for "Flashlight" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_flashlight=0x7f110a25;
    /**
     * List of synonyms for the font size, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_font_size=0x7f110a26;
    public static final int keywords_gesture=0x7f110a27;
    /**
     * Keywords for the gesture navigation settings. [CHAR LIMIT=NONE]
     */
    public static final int keywords_gesture_navigation_settings=0x7f110a28;
    /**
     * List of synonyms used in the settings search bar to find the “Hearing aids”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_hearing_aids=0x7f110a29;
    /**
     * List of synonyms for hotspot and tethering setting (where you share your wifi with other devices), used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_hotspot_tethering=0x7f110a2a;
    public static final int keywords_ignore_optimizations=0x7f110a2b;
    public static final int keywords_imei_info=0x7f110a2c;
    /**
     * Keywords for setting screen for controlling apps that can install other apps on device
     */
    public static final int keywords_install_other_apps=0x7f110a2d;
    /**
     * Search keywords for "Internet" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_internet=0x7f110a2e;
    public static final int keywords_keyboard_and_ime=0x7f110a2f;
    /**
     * List of synonyms used in the settings search bar to find the “Live Caption”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_live_caption=0x7f110a30;
    /**
     * List of synonyms used in the settings search bar to find the “Live Transcribe”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_live_transcribe=0x7f110a31;
    public static final int keywords_location=0x7f110a32;
    /**
     * Search keyword for lock screen notification setting [CHAR_LIMIT=NONE]
     */
    public static final int keywords_lock_screen_notif=0x7f110a33;
    public static final int keywords_lockscreen=0x7f110a34;
    /**
     * Configure lock screen: Search keywords for the option of unlocking directly to home. [CHAR LIMIT=100]
     */
    public static final int keywords_lockscreen_bypass=0x7f110a35;
    /**
     * List of synonyms used in the settings search bar to find the “Magnification”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_magnification=0x7f110a36;
    /**
     * Keywords for the media controls setting [CHAR LIMIT=NONE]
     */
    public static final int keywords_media_controls=0x7f110a37;
    /**
     * Search keywords for media management apps settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_media_management_apps=0x7f110a38;
    public static final int keywords_model_and_hardware=0x7f110a39;
    public static final int keywords_more_mobile_networks=0x7f110a3a;
    public static final int keywords_network_reset=0x7f110a3b;
    /**
     * List of synonyms for notification vibration setting (changes whether your phone vibrates when it shows a notification), used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_notification_vibration=0x7f110a3c;
    /**
     * List of synonyms for the NR advanced calling(VoNR or Vo5G) titles, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_nr_advanced_calling=0x7f110a3d;
    /**
     * Search keywords for "One-Handed" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_one_handed=0x7f110a3e;
    public static final int keywords_payment_settings=0x7f110a3f;
    public static final int keywords_printing=0x7f110a40;
    public static final int keywords_profile_challenge=0x7f110a41;
    /**
     * List of synonyms used in the settings search bar to find the “Extra Dim” setting, which dims your screen. Title name is located at strings/reduce_bright_colors_preference_title. [CHAR LIMIT=NONE]
     */
    public static final int keywords_reduce_bright_colors=0x7f110a42;
    public static final int keywords_reset_apps=0x7f110a43;
    /**
     * List of synonyms for ring vibration setting (changes whether your phone vibrates when it rings), used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_ring_vibration=0x7f110a44;
    /**
     * List of synonyms used in the settings search bar to find the “Real-time text (RTT)”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_rtt=0x7f110a45;
    /**
     * List of synonyms for the display timeout (how long until the screen turns off) setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_screen_timeout=0x7f110a46;
    /**
     * List of synonyms used in the settings search bar to find the “Select to Speak”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_select_to_speak=0x7f110a47;
    public static final int keywords_sim_status=0x7f110a48;
    /**
     * List of synonyms used in the settings search bar to find the “Sound Amplifier”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_sound_amplifier=0x7f110a49;
    /**
     * List of synonyms used in the settings search bar to find the “Sound Notifications”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_sound_notifications=0x7f110a4a;
    public static final int keywords_sounds=0x7f110a4b;
    public static final int keywords_sounds_and_notifications_interruptions=0x7f110a4c;
    public static final int keywords_spell_checker=0x7f110a4d;
    public static final int keywords_storage=0x7f110a4e;
    /**
     * Search keyword for "Files" settings under Settings > Storage. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_storage_files=0x7f110a4f;
    /**
     * Storage setting. Keywords for Free up space. [CHAR LIMIT=NONE]
     */
    public static final int keywords_storage_menu_free=0x7f110a50;
    /**
     * List of synonyms for Storage settings (everything related to storage on the device), used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_storage_settings=0x7f110a51;
    /**
     * List of synonyms for the Styles picker setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_styles=0x7f110a52;
    /**
     * List of synonyms used in the settings search bar to find the “Switch Access”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_switch_access=0x7f110a53;
    /**
     * Search keywords for System Navigation settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_system_navigation=0x7f110a54;
    /**
     * List of synonyms for the System Update (update the operating system) setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_system_update_settings=0x7f110a55;
    /**
     * Search keyword for Device Theme Settings [CHAR LIMIT=NONE]
     */
    public static final int keywords_systemui_theme=0x7f110a56;
    /**
     * List of synonyms used in the settings search bar to find the “TalkBack”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_talkback=0x7f110a57;
    public static final int keywords_text_to_speech_output=0x7f110a58;
    /**
     * Search keyword for "Time format" settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_time_format=0x7f110a59;
    /**
     * Search keyword for "Time zone" settings [CHAR_LIMIT=NONE]
     */
    public static final int keywords_time_zone=0x7f110a5a;
    /**
     * List of synonyms for touch vibration setting (where you get a haptic response for touching things on the screen), used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_touch_vibration=0x7f110a5b;
    public static final int keywords_unification=0x7f110a5c;
    public static final int keywords_users=0x7f110a5d;
    /**
     * Sound: Keywords for Vibrate for calls. [CHAR LIMIT=NONE]
     */
    public static final int keywords_vibrate_for_calls=0x7f110a5e;
    /**
     * Search keyword for "Vibrate on touch" settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_vibrate_on_touch=0x7f110a5f;
    /**
     * Keywords for the 'virtual keyboard' preference sub-screen. [CHAR LIMIT=35]
     */
    public static final int keywords_virtual_keyboard=0x7f110a60;
    /**
     * List of synonyms used in the settings search bar to find the “Voice Access”. [CHAR LIMIT=NONE]
     */
    public static final int keywords_voice_access=0x7f110a61;
    public static final int keywords_voice_input=0x7f110a62;
    /**
     * Keyword for VR setting
     */
    public static final int keywords_vr_listener=0x7f110a63;
    public static final int keywords_wallet=0x7f110a64;
    /**
     * List of synonyms for the Wallpaper picker setting, used to match in settings search [CHAR LIMIT=NONE]
     */
    public static final int keywords_wallpaper=0x7f110a65;
    /**
     * Search Keywords [CHAR LIMIT=NONE]
     */
    public static final int keywords_wifi=0x7f110a66;
    public static final int keywords_wifi_calling=0x7f110a67;
    /**
     * Search keyword for "Wi-fi data usage" settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_wifi_data_usage=0x7f110a68;
    /**
     * Wifi Display settings. The keywords of the setting. [CHAR LIMIT=NONE]
     */
    public static final int keywords_wifi_display_settings=0x7f110a69;
    /**
     * Search keyword for "Open Network Notification" settings. [CHAR_LIMIT=NONE]
     */
    public static final int keywords_wifi_notify_open_networks=0x7f110a6a;
    /**
     * Keyword for WRITE_SETTINGS
     */
    public static final int keywords_write_settings=0x7f110a6b;
    /**
     * List of synonyms for the Do Not Disturb setting, used to match in settings search. Do Not Disturb turns of notification volume, notifications, vibrations, among other things on the device. [CHAR LIMIT=NONE]
     */
    public static final int keywords_zen_mode_settings=0x7f110a6c;
    /**
     * Available networks screen title/heading [CHAR LIMIT=NONE]
     */
    public static final int label_available=0x7f110a6d;
    /**
     * Title for the 'Work profile keyboards & tools' preference category inside Languages and inputs'. [CHAR LIMIT=50]
     */
    public static final int language_and_input_for_work_category_title=0x7f110a6e;
    /**
     * Text displayed when user has restriction DISALLOW_CONFIG_LOCALE [CHAR LIMIT=NONE]
     */
    public static final int language_empty_list_user_restricted=0x7f110a6f;
    /**
     * Summary of Language, input & gestures setting on main settings screen when gesture setting is off.
     */
    public static final int language_input_gesture_summary_off=0x7f110a70;
    /**
     * Summary of Language, input & gestures setting on main settings screen when both gesture setting and non-assistant feature is on.
     */
    public static final int language_input_gesture_summary_on_non_assist=0x7f110a71;
    /**
     * Summary of Language, input & gestures setting on main settings screen when both gesture setting and assistant feature is on.
     */
    public static final int language_input_gesture_summary_on_with_assist=0x7f110a72;
    /**
     * Title of Language, input & gestures setting on main settings screen.
     */
    public static final int language_input_gesture_title=0x7f110a73;
    /**
     * Title of Languages & input settings screen
     */
    public static final int language_keyboard_settings_title=0x7f110a74;
    /**
     * Title for the locale picker activity
     */
    public static final int language_picker_title=0x7f110a75;
    /**
     * Title of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text
     */
    public static final int language_settings=0x7f110a76;
    /**
     * Last synced date/time for accounts that synced [CHAR LIMIT=none]
     */
    public static final int last_synced=0x7f110a77;
    /**
     * label for last time used
     */
    public static final int last_time_used_label=0x7f110a78;
    /**
     * Preference label for app default launch settings [CHAR LIMIT=35]
     */
    public static final int launch_by_default=0x7f110a79;
    /**
     * Launch defaults preference summary with none set [CHAR LIMIT=40]
     */
    public static final int launch_defaults_none=0x7f110a7a;
    /**
     * Launch defaults preference summary with some set [CHAR LIMIT=40]
     */
    public static final int launch_defaults_some=0x7f110a7b;
    /**
     * Label for button that allows user to launch the instant app.
     */
    public static final int launch_instant_app=0x7f110a7c;
    /**
     * Button to launch external data plan app [CHAR LIMIT=30]
     */
    public static final int launch_mdp_app_text=0x7f110a7d;
    /**
     * Alternate launch button text for Wi-Fi only mode [CHAR LIMIT=30]
     */
    public static final int launch_wifi_text=0x7f110a7e;
    /**
     * Button label to allow the user to view additional information [CHAR LIMIT=NONE BACKUP_MESSAGE_ID=2416766240581561009]
     */
    public static final int learn_more=0x7f110a7f;
    /**
     * Label for the slider to set sensitivity of the left edge of the screen [CHAR LIMIT=40]
     */
    public static final int left_edge=0x7f110a80;
    /**
     * Summary text for 3-button navigation  [CHAR LIMIT=NONE]
     */
    public static final int legacy_navigation_summary=0x7f110a81;
    /**
     * Title text for 3-button navigation [CHAR LIMIT=60]
     */
    public static final int legacy_navigation_title=0x7f110a82;
    /**
     * About phone settings screen, setting option name to go to dialog that shows legal info
     */
    public static final int legal_information=0x7f110a83;
    /**
     * About phone settings screen, setting option name to see licensing info
     */
    public static final int license_title=0x7f110a84;
    /**
     * [CHAR LIMIT=40] Display settings screen, setting option name to change whether the device wakes up when a lift gesture is detected.
     */
    public static final int lift_to_wake_title=0x7f110a85;
    /**
     * Device Info screen. LineageOS legal.
     */
    public static final int lineagelicense_title=0x7f110a86;
    /**
     * Link speed on Wifi Status screen [CHAR LIMIT=32]
     */
    public static final int link_speed=0x7f110a87;
    /**
     * Setting summary for controlling how caption text display in real time [CHAR LIMIT=NONE]
     */
    public static final int live_caption_summary=0x7f110a88;
    /**
     * Setting title for controlling how caption text display in real time [CHAR LIMIT=40]
     */
    public static final int live_caption_title=0x7f110a89;
    /**
     * Mobile network settings screen, toast when searching for available networks [CHAR LIMIT=NONE]
     */
    public static final int load_networks_progress=0x7f110a8a;
    /**
     * [CHAR LIMIT=30] Location mode screen, temporary summary text to show as the status of a location
     * setting injected by an external app while the app is being queried for the actual value
     */
    public static final int loading_injected_setting_summary=0x7f110a8b;
    /**
     * [CHAR LIMIT=NONE] Text when loading app list in notification settings
     */
    public static final int loading_notification_apps=0x7f110a8c;
    /**
     * Summary text of the "local backup password" setting when the user has already supplied a password
     */
    public static final int local_backup_password_summary_change=0x7f110a8d;
    /**
     * Summary text of the "local backup password" setting when the user has not supplied a password
     */
    public static final int local_backup_password_summary_none=0x7f110a8e;
    /**
     * Local (desktop) backup password menu title [CHAR LIMIT=25]
     */
    public static final int local_backup_password_title=0x7f110a8f;
    /**
     * Toast message shown when setting a new local backup password fails due to the user not correctly typing the password again for confirmation [CHAR LIMIT=80]
     */
    public static final int local_backup_password_toast_confirmation_mismatch=0x7f110a90;
    /**
     * Toast message shown when the user successfully sets a new local backup password [CHAR LIMIT=80]
     */
    public static final int local_backup_password_toast_success=0x7f110a91;
    /**
     * Toast message shown when setting a new local backup password fails due to the user not supplying the correct existing password. The phrasing here is deliberately quite general. [CHAR LIMIT=80]
     */
    public static final int local_backup_password_toast_validation_failure=0x7f110a92;
    /**
     * Label for the default device locale. [CHAR LIMIT=35]
     */
    public static final int locale_default=0x7f110a93;
    /**
     * This text shows in the language picker when the system is not translated into that languages [CHAR LIMIT=80]
     */
    public static final int locale_not_translated=0x7f110a94;
    /**
     * Menu item in the locale menu. Will remove the selected locales. [CHAR LIMIT=30]
     */
    public static final int locale_remove_menu=0x7f110a95;
    /**
     * [CHAR LIMIT=none] Description text for location access switch
     */
    public static final int location_access_summary=0x7f110a96;
    /**
     * [CHAR LIMIT=45] Label for turning on/off location access completely.
     */
    public static final int location_access_title=0x7f110a97;
    /**
     * [CHAR LIMIT=30] Location settings screen. It's a link that directs the user to a page that
     * shows the location permission setting for each installed app
     */
    public static final int location_app_level_permissions=0x7f110a98;
    /**
     * Summary for app permission on Location settings page when location is off [CHAR LIMIT=NONE]
     */
    public static final int location_app_permission_summary_location_off=0x7f110a99;
    /**
     * Title for privacy category [CHAR LIMIT=30]
     */
    public static final int location_category=0x7f110a9a;
    /**
     * Location settings screen, sub category for location services [CHAR LIMIT=30]
     */
    public static final int location_category_location_services=0x7f110a9b;
    /**
     * [CHAR LIMIT=50] Location settings screen, sub category for recent location access
     */
    public static final int location_category_recent_location_access=0x7f110a9c;
    /**
     * Location settings screen, sub category for recent location requests [CHAR LIMIT=42]
     */
    public static final int location_category_recent_location_requests=0x7f110a9d;
    /**
     * [CHAR LIMIT=30] Security & location settings screen, setting check box label for GPS satellites
     */
    public static final int location_gps=0x7f110a9e;
    /**
     * [CHAR LIMIT=30] Location settings screen, recent location requests high battery use
     */
    public static final int location_high_battery_use=0x7f110a9f;
    /**
     * [CHAR LIMIT=130] Description for location indicator settings
     */
    public static final int location_indicator_settings_description=0x7f110aa0;
    /**
     * [CHAR LIMIT=130] Title for location indicator settings
     */
    public static final int location_indicator_settings_title=0x7f110aa1;
    /**
     * [CHAR LIMIT=30] Location settings screen, recent location requests low battery use
     */
    public static final int location_low_battery_use=0x7f110aa2;
    /**
     * [CHAR LIMIT=130] Security & location settings screen, setting summary for Google location service check box
     */
    public static final int location_neighborhood_level=0x7f110aa3;
    /**
     * [CHAR LIMIT=130] Security & location settings screen, setting summary when Use wireless networks check box is selected, for wifi-only devices
     */
    public static final int location_neighborhood_level_wifi=0x7f110aa4;
    /**
     * [CHAR LIMIT=30] Security & location settings screen, setting check box label for Google location service (cell ID, wifi, etc.)
     */
    public static final int location_network_based=0x7f110aa5;
    /**
     * Location settings screen, displayed when there's no recent app accessing location
     * (for phones and tablets) [CHAR LIMIT=100]
     */
    public static final int location_no_recent_accesses=0x7f110aa6;
    /**
     * Location settings screen, displayed when there's no recent app accessing location
     * (for TV) [CHAR LIMIT=100]
     */
    public static final int location_no_recent_apps=0x7f110aa7;
    /**
     * Location settings screen, displayed when there're more than three recent location access apps [CHAR LIMIT=30]
     */
    public static final int location_recent_location_access_see_all=0x7f110aa8;
    /**
     * [CHAR LIMIT=30] Location settings screen, button to bring the user to view the details of recent location access
     */
    public static final int location_recent_location_access_view_details=0x7f110aa9;
    /**
     * Location settings screen, displayed when there're more than three recent location requests [CHAR LIMIT=30]
     */
    public static final int location_recent_location_requests_see_all=0x7f110aaa;
    /**
     * Description text for Bluetooth always scanning
     */
    public static final int location_scanning_bluetooth_always_scanning_description=0x7f110aab;
    /**
     * [CHAR LIMIT=130] Description text for Bluetooth always scanning
     */
    public static final int location_scanning_bluetooth_always_scanning_title=0x7f110aac;
    /**
     * Preference description text for Wi-Fi always scanning
     */
    public static final int location_scanning_wifi_always_scanning_description=0x7f110aad;
    /**
     * [CHAR LIMIT=130] Preference title for Wi-Fi always scanning
     */
    public static final int location_scanning_wifi_always_scanning_title=0x7f110aae;
    /**
     * [CHAR LIMIT=60] Location Services preference title
     */
    public static final int location_services_preference_title=0x7f110aaf;
    /**
     * [CHAR LIMIT=60] Location Services screen, screen title
     */
    public static final int location_services_screen_title=0x7f110ab0;
    /**
     * Location settings footer warning text when location is on [CHAR LIMIT=NONE]
     */
    public static final int location_settings_footer_general=0x7f110ab1;
    /**
     * Location settings footer link content description [CHAR LIMIT=NONE]
     */
    public static final int location_settings_footer_learn_more_content_description=0x7f110ab2;
    /**
     * Location settings footer link to support page [CHAR LIMIT=NONE]
     */
    public static final int location_settings_footer_learn_more_link=0x7f110ab3;
    /**
     * Location settings footer warning text when location is off [CHAR LIMIT=NONE]
     */
    public static final int location_settings_footer_location_off=0x7f110ab4;
    /**
     * Location settings, loading the number of apps which have location permission [CHAR LIMIT=30]
     */
    public static final int location_settings_loading_app_permission_stats=0x7f110ab5;
    /**
     * Used in the location settings to control turning on/off the feature entirely [CHAR LIMIT=60]
     */
    public static final int location_settings_primary_switch_title=0x7f110ab6;
    /**
     * Summary for Location settings when location is off [CHAR LIMIT=NONE]
     */
    public static final int location_settings_summary_location_off=0x7f110ab7;
    /**
     * Main Settings screen setting option title for the item to take you to the location screen
     */
    public static final int location_settings_title=0x7f110ab8;
    /**
     * [CHAR LIMIT=45] Section heading for location sources
     */
    public static final int location_sources_heading=0x7f110ab9;
    /**
     * [CHAR LIMIT=100] Security & location settings screen, setting check box summary for GPS satellites on a phone
     */
    public static final int location_street_level=0x7f110aba;
    /**
     * [CHAR LIMIT=NONE] Location settings screen, summary when location time zone detection is not
     * applicable due to other settings like the "automatic time zone detection enabled" setting
     * being set to "off".
     */
    public static final int location_time_zone_detection_auto_is_off=0x7f110abb;
    /**
     * [CHAR LIMIT=30] Date&Time settings screen, button on a dialog shown when user tries to
     * enable GeoTZ, but Location toggle is off, which closes the dialog.
     */
    public static final int location_time_zone_detection_location_is_off_dialog_cancel_button=0x7f110abc;
    /**
     * [CHAR LIMIT=NONE] Date&Time settings screen, message on the dialog shown when user tries to
     * enable GeoTZ when Location toggle is off.
     */
    public static final int location_time_zone_detection_location_is_off_dialog_message=0x7f110abd;
    /**
     * [CHAR LIMIT=30] Date&Time settings screen, button on a dialog shown when user tries to
     * enable GeoTZ, but Location toggle is off, which leads to Location settings page.
     */
    public static final int location_time_zone_detection_location_is_off_dialog_ok_button=0x7f110abe;
    /**
     * [CHAR LIMIT=60] Date&Time settings screen, title of the dialog shown when user tries to
     * enable GeoTZ when Location toggle is off.
     */
    public static final int location_time_zone_detection_location_is_off_dialog_title=0x7f110abf;
    /**
     * [CHAR LIMIT=NONE] Location settings screen, summary when location time zone detection is not
     * allowed for the user, e.g. because of device policy
     */
    public static final int location_time_zone_detection_not_allowed=0x7f110ac0;
    /**
     * [CHAR LIMIT=NONE] Location settings screen, summary when location time zone detection is not
     * applicable for the user for unspecified reasons. More specific messages are used when there
     * is a clear reason.
     */
    public static final int location_time_zone_detection_not_applicable=0x7f110ac1;
    /**
     * [CHAR LIMIT=NONE] Location settings screen, summary when location time zone detection is not supported
     */
    public static final int location_time_zone_detection_not_supported=0x7f110ac2;
    /**
     * [CHAR LIMIT=60] Date&Time settings screen, toggle button title
     */
    public static final int location_time_zone_detection_toggle_title=0x7f110ac3;
    /**
     * Security & location settings screen, section header for settings relating to location
     */
    public static final int location_title=0x7f110ac4;
    /**
     * Security settings screen, setting option name to change screen timeout
     */
    public static final int lock_after_timeout=0x7f110ac5;
    /**
     * Security settings screen, setting option summary to change screen timeout
     */
    public static final int lock_after_timeout_summary=0x7f110ac6;
    /**
     * Security settings screen, setting option summary to change screen timeout, with additional explanation
     */
    public static final int lock_after_timeout_summary_with_exception=0x7f110ac7;
    /**
     * Message shown on the lock screen when the user incorrectly enters their lock and it counts towards the max attempts before their data on the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_before_wipe=0x7f110ac8;
    /**
     * Content of the dialog shown when the user has failed to provide the device lock too many times and the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_now_wiping_device=0x7f110ac9;
    /**
     * Button label to dismiss the dialog telling the user the work profile has been wiped. [CHAR LIMIT=40]
     */
    public static final int lock_failed_attempts_now_wiping_dialog_dismiss=0x7f110aca;
    /**
     * Content of the dialog shown when the user has failed to provide the work lock too many times and the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_now_wiping_profile=0x7f110acb;
    /**
     * Content of the dialog shown when the user has failed to provide the user lock too many times and the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_now_wiping_user=0x7f110acc;
    /**
     * Security settings screen, setting option summary to change screen timeout, with additional explanation
     */
    public static final int lock_immediately_summary_with_exception=0x7f110acd;
    /**
     * Title of a dialog shown when the user only has one attempt left to provide the lock before the device, one of its users, or a work profile is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_attempt_before_wipe_warning_title=0x7f110ace;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the device lock password before the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_password_attempt_before_wipe_device=0x7f110acf;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the work lock password before the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_password_attempt_before_wipe_profile=0x7f110ad0;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the user lock password before the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_password_attempt_before_wipe_user=0x7f110ad1;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the device lock pattern before the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pattern_attempt_before_wipe_device=0x7f110ad2;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the work lock pattern before the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pattern_attempt_before_wipe_profile=0x7f110ad3;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the user lock pattern before the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pattern_attempt_before_wipe_user=0x7f110ad4;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the device lock PIN before the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pin_attempt_before_wipe_device=0x7f110ad5;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the work lock PIN before the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pin_attempt_before_wipe_profile=0x7f110ad6;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the user lock PIN before the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pin_attempt_before_wipe_user=0x7f110ad7;
    /**
     * Lock screen pattern size
     */
    public static final int lock_pattern_size_3=0x7f110ad8;
    public static final int lock_pattern_size_4=0x7f110ad9;
    public static final int lock_pattern_size_5=0x7f110ada;
    public static final int lock_pattern_size_6=0x7f110adb;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning them of potential consequences of not doing so. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_intro_skip_dialog_text=0x7f110adc;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning them of potential consequences of not doing so, including loss of factory reset protection. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_intro_skip_dialog_text_frp=0x7f110add;
    /**
     * Title of dialog shown when the user tries to skip setting up a screen lock, warning them of potential consequences of not doing so [CHAR LIMIT=30]
     */
    public static final int lock_screen_intro_skip_title=0x7f110ade;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Message asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_notifications_interstitial_message=0x7f110adf;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Message asking the user how they want their profile notifications to appear when the device is locked [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_notifications_interstitial_message_profile=0x7f110ae0;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Title for the screen asking the user how much notification content they want to see on their lock screen [CHAR LIMIT=30]
     */
    public static final int lock_screen_notifications_interstitial_title=0x7f110ae1;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Title for the screen asking the user how they want their profile notifications to appear when the device is locked [CHAR LIMIT=30]
     */
    public static final int lock_screen_notifications_interstitial_title_profile=0x7f110ae2;
    /**
     * Configure Notifications: Value for lockscreen notifications: notifications will not appear on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_disable=0x7f110ae3;
    /**
     * Configure Notifications: Value for lockscreen notifications: sensitive information will be
     * hidden or redacted from notifications shown on a secure lock screen, but will be shown if the user is unlocked by either smart lock or via biometric unlock mechanism.
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_hide=0x7f110ae4;
    /**
     * Configure Notifications: Value for lockscreen notifications: sensitive information will be
     * hidden or redacted from work notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_hide_profile=0x7f110ae5;
    /**
     * Configure Notifications: Value for lockscreen notifications:  all information will be
     * shown in notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_show=0x7f110ae6;
    /**
     * Configure Notifications: Value for lockscreen notifications:  all information will be
     * shown in work notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_show_profile=0x7f110ae7;
    /**
     * Configure Notifications: Title for the option controlling privacy options for notifications. [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifications_title=0x7f110ae8;
    /**
     * Configure notifications: Title for redacting sensitive content on lockscreen [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifs_redact=0x7f110ae9;
    /**
     * Configure notifications: Summary for redacting sensitive content on lockscreen [CHAR LIMIT=120]
     */
    public static final int lock_screen_notifs_redact_summary=0x7f110aea;
    /**
     * Configure notifications: Title for redacting sensitive content on lockscreen, work profile [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifs_redact_work=0x7f110aeb;
    /**
     * Configure notifications: Summary for redacting sensitive content on lockscreen, work profile [CHAR LIMIT=120]
     */
    public static final int lock_screen_notifs_redact_work_summary=0x7f110aec;
    /**
     * Configure notifications: Value for lockscreen notifications: show alerting notifications [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifs_show_alerting=0x7f110aed;
    /**
     * Configure notifications: Value for lockscreen notifications: all notifications shown
     * regardless of noisiness [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifs_show_all=0x7f110aee;
    /**
     * Configure notifications: Value for lockscreen notifications: don't show notifications [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifs_show_none=0x7f110aef;
    /**
     * Configure notifications: Title for determining which notifications appear on the lock screen [CHAR LIMIT=60]
     */
    public static final int lock_screen_notifs_title=0x7f110af0;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up face or fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_password_skip_biometrics_message=0x7f110af1;
    /**
     * Title of dialog shown when the user tries to skip setting up a password, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_password_skip_biometrics_title=0x7f110af2;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up face. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_password_skip_face_message=0x7f110af3;
    /**
     * Title of dialog shown when the user tries to skip setting up a password, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_password_skip_face_title=0x7f110af4;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_password_skip_fingerprint_message=0x7f110af5;
    /**
     * Title of dialog shown when the user tries to skip setting up a password, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_password_skip_fingerprint_title=0x7f110af6;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_password_skip_message=0x7f110af7;
    /**
     * Title of dialog shown when the user tries to skip setting up a password, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_password_skip_title=0x7f110af8;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up face or fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pattern_skip_biometrics_message=0x7f110af9;
    /**
     * Title of dialog shown when the user tries to skip setting up a pattern, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_pattern_skip_biometrics_title=0x7f110afa;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up face. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pattern_skip_face_message=0x7f110afb;
    /**
     * Title of dialog shown when the user tries to skip setting up a pattern, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_pattern_skip_face_title=0x7f110afc;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pattern_skip_fingerprint_message=0x7f110afd;
    /**
     * Title of dialog shown when the user tries to skip setting up a pattern, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_pattern_skip_fingerprint_title=0x7f110afe;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pattern_skip_message=0x7f110aff;
    /**
     * Title of dialog shown when the user tries to skip setting up a pattern, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_pattern_skip_title=0x7f110b00;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up face or fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pin_skip_biometrics_message=0x7f110b01;
    /**
     * Title of dialog shown when the user tries to skip setting up a PIN, warning them of potential consequences of not doing so [CHAR LIMIT=90]
     */
    public static final int lock_screen_pin_skip_biometrics_title=0x7f110b02;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up face. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pin_skip_face_message=0x7f110b03;
    /**
     * Title of dialog shown when the user tries to skip setting up a PIN, warning them of potential consequences of not doing so [CHAR LIMIT=90]
     */
    public static final int lock_screen_pin_skip_face_title=0x7f110b04;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pin_skip_fingerprint_message=0x7f110b05;
    /**
     * Title of dialog shown when the user tries to skip setting up a PIN, warning them of potential consequences of not doing so [CHAR LIMIT=90]
     */
    public static final int lock_screen_pin_skip_fingerprint_title=0x7f110b06;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning that they can't continue to set up fingerprint. (device) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_pin_skip_message=0x7f110b07;
    /**
     * Title of dialog shown when the user tries to skip setting up a PIN, warning them of potential consequences of not doing so [CHAR LIMIT=48]
     */
    public static final int lock_screen_pin_skip_title=0x7f110b08;
    /**
     * Text shown on the screen lock menu. This text is letting the user know that their IT admin can't reset their screen lock if they forget it, and they can choose to set another lock that would be specifically for their work apps. The place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring the user to enroll a work profile screen lock instead. [CHAR LIMIT=100]
     */
    public static final int lock_settings_picker_admin_restricted_personal_message=0x7f110b09;
    /**
     * Message shown in screen lock picker while setting up the backup/fallback screen lock method for biometrics. Users can choose to use this method to unlock the screen instead of biometrics, or when biometrics are not accepted. [CHAR LIMIT=80] [BACKUP_MESSAGE_ID=2799884038398627882]
     */
    public static final int lock_settings_picker_biometric_message=0x7f110b0a;
    /**
     * Message shown when setting up screen lock, prompting user to choose the their backup screen lock method [CHAR LIMIT=NONE]
     */
    public static final int lock_settings_picker_biometrics_added_security_message=0x7f110b0b;
    /**
     * Screen title. This title is asking the user to choose a type of screen lock for their device, such as a pattern, PIN, or password. [CHAR LIMIT=55]
     */
    public static final int lock_settings_picker_new_lock_title=0x7f110b0c;
    /**
     * Screen title. This title is asking the user to choose a type of screen lock (such as a pattern, PIN, or password) that they need to enter to use their work apps. [CHAR LIMIT=56]
     */
    public static final int lock_settings_picker_new_profile_lock_title=0x7f110b0d;
    public static final int lock_settings_picker_pattern_size_message=0x7f110b0e;
    /**
     * Message shown in screen lock picker for setting up a work profile screen lock. [CHAR LIMIT=80]
     */
    public static final int lock_settings_picker_profile_message=0x7f110b0f;
    /**
     * Title for security picker to choose the unlock method: None/Pattern/PIN/Password [CHAR LIMIT=22]
     */
    public static final int lock_settings_picker_title=0x7f110b10;
    /**
     * Screen title. This title is asking the user to choose a new screen lock for their device, such as a pattern, PIN, or password. [CHAR LIMIT=55]
     */
    public static final int lock_settings_picker_update_lock_title=0x7f110b11;
    /**
     * Screen title. This title is asking the user to choose a new screen lock (such as a pattern, PIN, or password) that they need to enter to use their work apps. [CHAR LIMIT=55]
     */
    public static final int lock_settings_picker_update_profile_lock_title=0x7f110b12;
    /**
     * Security & location settings screen, title when changing or confirming the work profile lock
     */
    public static final int lock_settings_profile_screen_lock_title=0x7f110b13;
    /**
     * Security & location settings screen, header for profile specific section
     */
    public static final int lock_settings_profile_title=0x7f110b14;
    /**
     * Security & location settings screen, explanation in the dialog asking if the user wants to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_dialog_body=0x7f110b15;
    /**
     * Security & location settings screen, confirmation button of the dialog for user with compliant lock, asking to create a new lock for both personal and work profiles.
     */
    public static final int lock_settings_profile_unification_dialog_confirm=0x7f110b16;
    /**
     * Security & location settings screen, title of the dialog asking if the user wants to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_dialog_title=0x7f110b17;
    /**
     * Security & location settings screen, explanation in the dialog asking if the user wants to create a new lock for personal and work as the current work lock is not enough for the device.
     */
    public static final int lock_settings_profile_unification_dialog_uncompliant_body=0x7f110b18;
    /**
     * Security & location settings screen, confirmation button of the dialog for user with uncompliant lock, asking to create a new lock for both personal and work profiles.
     */
    public static final int lock_settings_profile_unification_dialog_uncompliant_confirm=0x7f110b19;
    /**
     * Security & location settings screen, setting option explanation to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_summary=0x7f110b1a;
    /**
     * Security & location settings screen, setting option name to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_title=0x7f110b1b;
    /**
     * Security & location settings screen, summary of the item that changes your work profile lock when it is unified with the personal lock
     */
    public static final int lock_settings_profile_unified_summary=0x7f110b1c;
    /**
     * Security & location settings screen, header
     */
    public static final int lock_settings_title=0x7f110b1d;
    /**
     * Toast shown when lock pattern or password successfully setup. [CHAR LIMIT=64]
     */
    public static final int lock_setup=0x7f110b1e;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int lock_sounds_enable_title=0x7f110b1f;
    /**
     * Configure Notifications: Title for the option controlling notifications for work profile. [CHAR LIMIT=30]
     */
    public static final int locked_work_profile_notification_title=0x7f110b20;
    /**
     * Label for ChoosePassword/PIN OK button
     */
    public static final int lockpassword_cancel_label=0x7f110b21;
    /**
     * Header shown to ask the user to select an unlock method [CHAR LIMIT=30]
     */
    public static final int lockpassword_choose_lock_generic_header=0x7f110b22;
    /**
     * Header on first screen of choose device password flow [CHAR LIMIT=NONE]
     */
    public static final int lockpassword_choose_password_description=0x7f110b23;
    /**
     * Header on first screen of choose device PIN flow [CHAR LIMIT=NONE]
     */
    public static final int lockpassword_choose_pin_description=0x7f110b24;
    /**
     * Header on first screen of choose device password flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_password_header=0x7f110b25;
    /**
     * Title of a screen that asks the user to set up a password as a backup for Face or Fingerprint Unlock. If this string can't be translated in 60 characters, please translate "Set a backup password". [CHAR LIMIT=60]
     */
    public static final int lockpassword_choose_your_password_header_for_biometrics=0x7f110b26;
    /**
     * Header on first screen of choose password/PIN as backup for Face Unlock flow. If this string cannot be translated in under 40 characters, please translate "Set Face Unlock backup" [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_password_header_for_face=0x7f110b27;
    /**
     * Header on first screen of choose password/PIN as backup for fingerprint flow. If this string cannot be translated in under 40 characters, please translate "Set fingerprint backup" [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_password_header_for_fingerprint=0x7f110b28;
    /**
     * Header on first screen of choose device pattern flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_pattern_header=0x7f110b29;
    /**
     * Title of a screen that asks the user to set up a pattern as a backup for Face or Fingerprint Unlock. If this string can't be translated in 60 characters, please translate "Set a backup pattern". [CHAR LIMIT=60]
     */
    public static final int lockpassword_choose_your_pattern_header_for_biometrics=0x7f110b2a;
    /**
     * Header on first screen of choose pattern as backup for Face Unlock flow. If this string cannot be translated in under 40 characters, please translate "Set Face Unlock backup" [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_pattern_header_for_face=0x7f110b2b;
    /**
     * Header on first screen of choose pattern as backup for fingerprint flow. If this string cannot be translated in under 40 characters, please translate "Set fingerprint backup" [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_pattern_header_for_fingerprint=0x7f110b2c;
    /**
     * Header on first screen of choose device PIN flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_pin_header=0x7f110b2d;
    /**
     * Title of a screen that asks the user to set up a PIN as a backup for Face or Fingerprint Unlock. If this string can't be translated in 60 characters, please translate "Set a backup PIN". [CHAR LIMIT=60]
     */
    public static final int lockpassword_choose_your_pin_header_for_biometrics=0x7f110b2e;
    /**
     * Header on first screen of choose password/PIN as backup for Face Unlock flow. If this string cannot be translated in under 40 characters, please translate "Set Face Unlock backup" [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_pin_header_for_face=0x7f110b2f;
    /**
     * Header on first screen of choose password/PIN as backup for fingerprint flow. If this string cannot be translated in under 40 characters, please translate "Set fingerprint backup" [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_pin_header_for_fingerprint=0x7f110b30;
    /**
     * Message on first screen of choose PIN flow [CHAR LIMIT=NONE]
     */
    public static final int lockpassword_choose_your_pin_message=0x7f110b31;
    /**
     * Header on first screen of choose work profile password flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_profile_password_header=0x7f110b32;
    /**
     * Header on first screen of choose work profile pattern flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_profile_pattern_header=0x7f110b33;
    /**
     * Header on first screen of choose work profile PIN flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_profile_pin_header=0x7f110b34;
    /**
     * Label for ChoosePassword/PIN Clear button that clears all text entered by the user so far.
     */
    public static final int lockpassword_clear_label=0x7f110b35;
    /**
     * Label for Confirm button when entering PIN / password the second time. [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_label=0x7f110b36;
    /**
     * Header on password confirm screen if second password doesn't match the first. [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_passwords_dont_match=0x7f110b37;
    /**
     * Header on pin confirm screen if second pin doesn't match the first. [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_pins_dont_match=0x7f110b38;
    /**
     * An explanation text that the password needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_password_details_frp=0x7f110b39;
    /**
     * Message to be used to explain the users that they need to enter their password to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_password_generic=0x7f110b3a;
    /**
     * Message to be used to explain the users that they need to enter their work password to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_password_generic_profile=0x7f110b3b;
    /**
     * Header on password confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_confirm_your_password_header=0x7f110b3c;
    /**
     * Header shown when the password needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_password_header_frp=0x7f110b3d;
    /**
     * An explanation text that the pattern needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pattern_details_frp=0x7f110b3e;
    /**
     * Message to be used to explain the users that they need to enter their pattern to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pattern_generic=0x7f110b3f;
    /**
     * Message to be used to explain the users that they need to enter their work pattern to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pattern_generic_profile=0x7f110b40;
    /**
     * Header on pattern confirm screen [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_your_pattern_header=0x7f110b41;
    /**
     * Header shown when pattern needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pattern_header_frp=0x7f110b42;
    /**
     * An explanation text that the pin needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pin_details_frp=0x7f110b43;
    /**
     * Message to be used to explain the users that they need to enter their PIN to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pin_generic=0x7f110b44;
    /**
     * Message to be used to explain the users that they need to enter their work PIN to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pin_generic_profile=0x7f110b45;
    /**
     * Header on password confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_confirm_your_pin_header=0x7f110b46;
    /**
     * Header shown when the pin needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pin_header_frp=0x7f110b47;
    /**
     * Header on password confirm screen for the work profile [CHAR LIMIT=40]
     */
    public static final int lockpassword_confirm_your_work_password_header=0x7f110b48;
    /**
     * Header on pattern confirm screen for the work profile [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_your_work_pattern_header=0x7f110b49;
    /**
     * Header on password confirm screen for the work profile [CHAR LIMIT=40]
     */
    public static final int lockpassword_confirm_your_work_pin_header=0x7f110b4a;
    /**
     * Hint shown after minimum password criteria is met
     */
    public static final int lockpassword_continue_label=0x7f110b4b;
    /**
     * Toast for a failed password change attempt when the old credential has been changed. [CHAR LIMIT=120]
     */
    public static final int lockpassword_credential_changed=0x7f110b4c;
    /**
     * Header on pattern confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_draw_your_pattern_again_header=0x7f110b4d;
    /**
     * Text for button that the user should tap when they forgot their work profile password [CHAR LIMIT=40]
     */
    public static final int lockpassword_forgot_password=0x7f110b4e;
    /**
     * Text for button that the user should tap when they forgot their work profile pattern [CHAR LIMIT=40]
     */
    public static final int lockpassword_forgot_pattern=0x7f110b4f;
    /**
     * Text for button that the user should tap when they forgot their work profile PIN [CHAR LIMIT=40]
     */
    public static final int lockpassword_forgot_pin=0x7f110b50;
    /**
     * Error shown when in PASSWORD mode and user enters an invalid character
     */
    public static final int lockpassword_illegal_character=0x7f110b51;
    /**
     * Security & location settings screen, change security method screen instruction if user
     * enters incorrect password [CHAR LIMIT=30]
     */
    public static final int lockpassword_invalid_password=0x7f110b52;
    /**
     * Security & location settings screen, change security method screen instruction if user
     * enters incorrect PIN [CHAR LIMIT=30]
     */
    public static final int lockpassword_invalid_pin=0x7f110b53;
    /**
     * Error shown when in PASSWORD mode and password has been used recently. Please keep this string short!
     */
    public static final int lockpassword_password_recently_used=0x7f110b54;
    /**
     * Error shown when in PASSWORD mode and password is all digits
     */
    public static final int lockpassword_password_requires_alpha=0x7f110b55;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain any digits
     */
    public static final int lockpassword_password_requires_digit=0x7f110b56;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain any symbols
     */
    public static final int lockpassword_password_requires_symbol=0x7f110b57;
    /**
     * Toast shown if setting password was successful
     */
    public static final int lockpassword_password_set_toast=0x7f110b58;
    /**
     * Toast shown if setting pattern was successful
     */
    public static final int lockpassword_pattern_set_toast=0x7f110b59;
    /**
     * [CHAR_LIMIT=NONE] Error shown when the user tries to set an ascending or descending sequence of digits
     */
    public static final int lockpassword_pin_no_sequential_digits=0x7f110b5a;
    /**
     * Error shown when in PIN mode and PIN has been used recently. Please keep this string short!
     */
    public static final int lockpassword_pin_recently_used=0x7f110b5b;
    /**
     * Toast shown if setting PIN was successful
     */
    public static final int lockpassword_pin_set_toast=0x7f110b5c;
    /**
     * Header on work profile password confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_reenter_your_profile_password_header=0x7f110b5d;
    /**
     * Header on work profile password confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_reenter_your_profile_pin_header=0x7f110b5e;
    /**
     * This string shows up on a screen where a user can enter a password that unlocks their
     * device. This is an extra security measure that's required for them to continue. [CHAR
     * LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_device_password=0x7f110b5f;
    /**
     * This string shows up on a screen where a user can enter a pattern that
     * unlocks their device. This is an extra security measure that's required for them to
     * continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_device_pattern=0x7f110b60;
    /**
     * This string shows up on a screen where a user can enter a PIN that unlocks their device.
     * This is an extra security measure that's required for them to continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_device_pin=0x7f110b61;
    /**
     * This string shows up on a screen where a user can enter a password that lets them access
     * their work profile, which is a part of their device that's specifically for work apps and
     * managed by their employer. This is an extra security measure that's required for them to
     * continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_work_password=0x7f110b62;
    /**
     * This string shows up on a screen where a user can enter a pattern that lets them access
     * their work profile, which is a part of their device that's specifically for work apps and
     * managed by their employer. This is an extra security measure that's required for them to
     * continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_work_pattern=0x7f110b63;
    /**
     * This string shows up on a screen where a user can enter a PIN that lets them access their
     * work profile, which is a part of their device that's specifically for work apps and managed
     * by their employer. This is an extra security measure that's required for them to continue.
     * [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_work_pin=0x7f110b64;
    /**
     * Security & location settings screen, setting option name
     */
    public static final int lockpattern_change_lock_pattern_label=0x7f110b65;
    /**
     * Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen
     */
    public static final int lockpattern_change_lock_pin_label=0x7f110b66;
    /**
     * Header on first screen of choose device pattern flow [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_choose_pattern_description=0x7f110b67;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  When they are ready to draw it once again to confirm it, they press this button.
     */
    public static final int lockpattern_confirm_button_text=0x7f110b68;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen. Once they draw a new pattern and confirm it by drawing it again, they press this button to exit
     */
    public static final int lockpattern_continue_button_text=0x7f110b69;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen to confirm pattern
     */
    public static final int lockpattern_need_to_confirm=0x7f110b6a;
    /**
     * Security & location settings screen, change unlock pattern screen instruction if user
     * draws incorrect pattern [CHAR LIMIT=30]
     */
    public static final int lockpattern_need_to_unlock_wrong=0x7f110b6b;
    public static final int lockpattern_pattern_confirmed_header=0x7f110b6c;
    /**
     * Security & location settings screen, change unlock pattern screen message on top of screen after drawing pattern
     */
    public static final int lockpattern_pattern_entered_header=0x7f110b6d;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen if user doesn't connect enough dots
     */
    public static final int lockpattern_recording_incorrect_too_short=0x7f110b6e;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen while drawing pattern
     */
    public static final int lockpattern_recording_inprogress=0x7f110b6f;
    /**
     * Security & location settings screen, change unlock pattern screen hint on bottom of screen.  We are telling them to press the menu button to see more options or help.
     */
    public static final int lockpattern_recording_intro_footer=0x7f110b70;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen.  This si when they are supposed to draw a new unlock pattern (for example, if they are changing their unlock patterns)..
     */
    public static final int lockpattern_recording_intro_header=0x7f110b71;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  If they are nto satisfied with this pattern, they click this button to redraw the pattern.
     */
    public static final int lockpattern_restart_button_text=0x7f110b72;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen. If they are supposed to enter their current pattern before being able to draw another one, and they screw up, they hit this button to try again
     */
    public static final int lockpattern_retry_button_text=0x7f110b73;
    /**
     * Security & location settings screen, setting option name when user has previously set an unlock pattern and wants to change to a new pattern
     */
    public static final int lockpattern_settings_change_lock_pattern=0x7f110b74;
    /**
     * Security & location settings screen, setting option name when user has never set an unlock pattern
     */
    public static final int lockpattern_settings_choose_lock_pattern=0x7f110b75;
    /**
     * Whether the dots will be drawn when using the lockscreen pattern
     */
    public static final int lockpattern_settings_enable_dots_title=0x7f110b76;
    /**
     * Whether a visible red line will be drawn after the user has drawn the unlock pattern incorrectly
     */
    public static final int lockpattern_settings_enable_error_path_title=0x7f110b77;
    /**
     * Security & location settings screen, setting check box title. This controls whether the device locks immediately when the power button is pressed. [CHAR LIMIT=28]
     */
    public static final int lockpattern_settings_enable_power_button_instantly_locks=0x7f110b78;
    /**
     * Security & location settings screen, setting summary for the checkbox "Require pattern"
     */
    public static final int lockpattern_settings_enable_summary=0x7f110b79;
    /**
     * Security & location settings screen, setting check box title. This setting controls whether tactile feedback will be produced when the user draws the pattern.
     */
    public static final int lockpattern_settings_enable_tactile_feedback_title=0x7f110b7a;
    /**
     * Security & location settings screen, setting check box title if the unlock pattern MUST be drawn everytime they turn on the screen
     */
    public static final int lockpattern_settings_enable_title=0x7f110b7b;
    /**
     * Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the users move their finger around while drawing the unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the users do not reveal their pattern while they unlock the phone.
     */
    public static final int lockpattern_settings_enable_visible_pattern_title=0x7f110b7c;
    /**
     * Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the users move their finger around while drawing the profile unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the users do not reveal their pattern while they unlock the profile.
     */
    public static final int lockpattern_settings_enable_visible_pattern_title_profile=0x7f110b7d;
    /**
     * Security & location settings screen, the help instructions (an animation) caption
     */
    public static final int lockpattern_settings_help_how_to_record=0x7f110b7e;
    /**
     * Security & location settings screen, setting optional summary when a trust agent is enabled
     */
    public static final int lockpattern_settings_power_button_instantly_locks_summary=0x7f110b7f;
    /**
     * Title of the preference controlling whether the device encryption password/PIN/Pattern must be entered before being able to start the device. [CHAR LIMIT=60]
     */
    public static final int lockpattern_settings_require_cred_before_startup=0x7f110b80;
    /**
     * Summary of the preference controlling whether the device encryption *password* must be entered before being able to start the device. [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_settings_require_password_before_startup_summary=0x7f110b81;
    /**
     * Summary of the preference controlling whether the device encryption *pattern* must be entered before being able to start the device. [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_settings_require_pattern_before_startup_summary=0x7f110b82;
    /**
     * Summary of the preference controlling whether the device encryption *PIN* must be entered before being able to start the device. [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_settings_require_pin_before_startup_summary=0x7f110b83;
    /**
     * Security & location settings screen, unlock screen activity title
     */
    public static final int lockpattern_settings_title=0x7f110b84;
    /**
     * Security & location settings screen, confirm unlock pattern screen hint at the bottom after
     * too many incorrect attempts [CHAR LIMIT=120]
     */
    public static final int lockpattern_too_many_failed_confirmation_attempts=0x7f110b85;
    /**
     * Label for LockPatternTutorial Cancel button
     */
    public static final int lockpattern_tutorial_cancel_label=0x7f110b86;
    /**
     * Label for LockPatternTutorial Continue button
     */
    public static final int lockpattern_tutorial_continue_label=0x7f110b87;
    /**
     * Configure lock screen: Summary for the option of unlocking directly to home. [CHAR LIMIT=100]
     */
    public static final int lockscreen_bypass_summary=0x7f110b88;
    /**
     * Configure lock screen: Title for the option of unlocking directly to home. [CHAR LIMIT=30]
     */
    public static final int lockscreen_bypass_title=0x7f110b89;
    /**
     * Lockscreen double-line clock toggle [CHAR LIMIT=60]
     */
    public static final int lockscreen_double_line_clock_setting_toggle=0x7f110b8a;
    /**
     * Lockscreen double-line clock summary [CHAR LIMIT=NONE]
     */
    public static final int lockscreen_double_line_clock_summary=0x7f110b8b;
    /**
     * Lock screen cover art
     */
    public static final int lockscreen_media_art_title=0x7f110b8c;
    /**
     * Device controls toggle name [CHAR LIMIT=60]
     */
    public static final int lockscreen_privacy_controls_setting_toggle=0x7f110b8d;
    /**
     * Device controls summary [CHAR LIMIT=NONE]
     */
    public static final int lockscreen_privacy_controls_summary=0x7f110b8e;
    /**
     * Power menu setting privacy no secure screen lock set [CHAR_LIMIT=NONE]
     */
    public static final int lockscreen_privacy_not_secure=0x7f110b8f;
    /**
     * Wallet (formerly Cards and passes) toggle name [CHAR LIMIT=60]
     */
    public static final int lockscreen_privacy_wallet_setting_toggle=0x7f110b90;
    /**
     * Wallet (formerly Cards and passes) summary [CHAR LIMIT=NONE]
     */
    public static final int lockscreen_privacy_wallet_summary=0x7f110b91;
    /**
     * Text for the setting on whether you can type text into notifications without unlocking the device.
     */
    public static final int lockscreen_remote_input=0x7f110b92;
    /**
     * Screen title for a list of settings controlling what to show on user's lockscreen [CHAR LIMIT=60]
     */
    public static final int lockscreen_settings_title=0x7f110b93;
    /**
     * Category title for the settings that control what lockscreen shows. [CHAR LIMIT=30]
     */
    public static final int lockscreen_settings_what_to_show_category=0x7f110b94;
    /**
     * Lock screen visualizer
     */
    public static final int lockscreen_visualizer_title=0x7f110b95;
    public static final int lost_internet_access_cancel=0x7f110b96;
    public static final int lost_internet_access_persist=0x7f110b97;
    /**
     * Button text to let user switch to mobile data
     */
    public static final int lost_internet_access_switch=0x7f110b98;
    public static final int lost_internet_access_text=0x7f110b99;
    /**
     * Dialog text to tell the user that the selected network has lost Internet access, and asking the user whether they want to avoid this network.
     */
    public static final int lost_internet_access_title=0x7f110b9a;
    /**
     * Summary for the low battery state [CHAR LIMIT=NONE]
     */
    public static final int low_battery_summary=0x7f110b9b;
    /**
     * Label on the left side of sensitivity adjustment slider [CHAR LIMIT=30]
     */
    public static final int low_label=0x7f110b9c;
    /**
     * Summary for low storage slice. [CHAR LIMIT=NONE]
     */
    public static final int low_storage_summary=0x7f110b9d;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int macaddr_label=0x7f110b9e;
    /**
     * Representation of a mAh value. [CHAR LIMIT=NONE]
     */
    public static final int mah=0x7f110b9f;
    /**
     * SD card & phone storage settings screen, instructions and list of current accounts.  The list of accounts follows this text[CHAR LIMIT=NONE]
     */
    public static final int main_clear_accounts=0x7f110ba0;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Factory data reset [CHAR LIMIT=NONE]
     */
    public static final int main_clear_button_text=0x7f110ba1;
    /**
     * Main clear confirmation screen title [CHAR LIMIT=33]
     */
    public static final int main_clear_confirm_title=0x7f110ba2;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE]
     */
    public static final int main_clear_desc=0x7f110ba3;
    /**
     * SD card & phone storage settings screen, list of items on an eSIM (embedded SIM) that will be erased during this operation [CHAR LIMIT=NONE]
     */
    public static final int main_clear_desc_also_erases_esim=0x7f110ba4;
    /**
     * SD card & phone storage settings screen, list of items in user data storage (USB storage or SD card) that will be erased during this operation [CHAR LIMIT=NONE]
     */
    public static final int main_clear_desc_also_erases_external=0x7f110ba5;
    /**
     * SD card & phone storage settings screen, instructions about whether to also erase the external storage (SD card) when erasing the internal storage [CHAR LIMIT=NONE]
     */
    public static final int main_clear_desc_erase_external_storage=0x7f110ba6;
    /**
     * SD card & phone storage settings screen, notification if there are eSIM (embedded SIM) profiles present that the user's mobile service plan will not be canceled [CHAR LIMIT=NONE]
     */
    public static final int main_clear_desc_no_cancel_mobile_plan=0x7f110ba7;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset phone button [CHAR LIMIT=NONE]
     */
    public static final int main_clear_final_desc=0x7f110ba8;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset phone button [CHAR LIMIT=NONE]
     */
    public static final int main_clear_final_desc_esim=0x7f110ba9;
    /**
     * Error message for users that aren't allowed to factory reset [CHAR LIMIT=none]
     */
    public static final int main_clear_not_available=0x7f110baa;
    /**
     * SD card & phone storage settings screen, notification if other users are present on the device [CHAR LIMIT=NONE]
     */
    public static final int main_clear_other_users_present=0x7f110bab;
    /**
     * Main clear progress screen text [CHAR LIMIT=75]
     */
    public static final int main_clear_progress_text=0x7f110bac;
    /**
     * Main clear progress screen title [CHAR LIMIT=30]
     */
    public static final int main_clear_progress_title=0x7f110bad;
    /**
     * Button title to factory data reset the entire device. The "(factory reset)" part is optional for translation. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=3531267871084279512]
     */
    public static final int main_clear_short_title=0x7f110bae;
    /**
     * Button title to factory data reset the entire device [CHAR LIMIT=NONE]
     */
    public static final int main_clear_title=0x7f110baf;
    /**
     * Description of the main process in the details.
     */
    public static final int main_running_process_description=0x7f110bb0;
    /**
     * [CHAR LIMIT=100] link to page listing all conversations
     */
    public static final int manage_conversations=0x7f110bb1;
    /**
     * Title of preference to manage device admin apps, which are used by IT admins to manage devices
     */
    public static final int manage_device_admin=0x7f110bb2;
    /**
     * Manager External Storage settings title [CHAR LIMIT=40]
     */
    public static final int manage_external_storage_title=0x7f110bb3;
    /**
     * Mobile plan [CHAR LIMIT=35]
     */
    public static final int manage_mobile_plan_title=0x7f110bb4;
    public static final int manage_notification_access_summary=0x7f110bb5;
    /**
     * Summary of preference to manage notification listeners, when none are enabled
     */
    public static final int manage_notification_access_summary_zero=0x7f110bb6;
    /**
     * Sound & notification > Advanced section: Title for managing notification listeners option. [CHAR LIMIT=60]
     */
    public static final int manage_notification_access_title=0x7f110bb7;
    /**
     * Manage applications screen, individual app screen, button label when the user wants to manage the space taken up by an app.
     */
    public static final int manage_space_text=0x7f110bb8;
    /**
     * Title of preference to manage trust agents
     */
    public static final int manage_trust_agents=0x7f110bb9;
    /**
     * Summary of preference to manage device policies when there is no trust agents
     */
    public static final int manage_trust_agents_summary=0x7f110bba;
    /**
     * Sound & notification > Advanced section: Title for managing Do Not Disturb access option. [CHAR LIMIT=40]
     */
    public static final int manage_zen_access_title=0x7f110bbb;
    /**
     * Applications settings screen, setting option summary for the user to go to the screen to manage installed applications
     */
    public static final int manageapplications_settings_summary=0x7f110bbc;
    /**
     * Applications settings screen, setting option name for the user to go to the screen to manage installed applications
     */
    public static final int manageapplications_settings_title=0x7f110bbd;
    /**
     * [CHAR LIMIT=NONE] Settings toggle description. This setting lets a user's personal apps identify contacts using the user's work directory. "Searches" is a noun.
     */
    public static final int managed_profile_contact_search_summary=0x7f110bbe;
    /**
     * [CHAR LIMIT=NONE] Settings toggle. This setting lets a user's personal apps identify contacts using the user's work directory.
     */
    public static final int managed_profile_contact_search_title=0x7f110bbf;
    /**
     * [CHAR LIMIT=50] Location settings screen, sub category for location services for managed profile
     */
    public static final int managed_profile_location_services=0x7f110bc0;
    /**
     * [CHAR LIMIT=30] Title for managed profile location switch
     */
    public static final int managed_profile_location_switch_title=0x7f110bc1;
    /**
     * Label for the state of the work profile [CHAR LIMIT=80]
     */
    public static final int managed_profile_not_available_label=0x7f110bc2;
    /**
     * [CHAR LIMIT=60] Title of work profile setting page
     */
    public static final int managed_profile_settings_title=0x7f110bc3;
    /**
     * Title for a work profile. [CHAR LIMIT=25]
     */
    public static final int managed_user_title=0x7f110bc4;
    /**
     * Footer for the manage battery usage page [CHAR_LIMIT=NONE]
     */
    public static final int manager_battery_usage_footer=0x7f110bc5;
    /**
     * Footer for the manage battery usage page when app is limited to specific option (e.g This app requires restricted battery usage) [CHAR_LIMIT=NONE]
     */
    public static final int manager_battery_usage_footer_limited=0x7f110bc6;
    /**
     * Accessibility description for battery usage learn more link [CHAR LIMIT=NONE]
     */
    public static final int manager_battery_usage_link_a11y=0x7f110bc7;
    /**
     * The state when app is limited to optimized option only (e.g This app requires optimized battery usage) [CHAR_LIMIT=40]
     */
    public static final int manager_battery_usage_optimized_only=0x7f110bc8;
    /**
     * Summary for the battery optimized settings [CHAR_LIMIT=NONE]
     */
    public static final int manager_battery_usage_optimized_summary=0x7f110bc9;
    /**
     * Title for the battery optimized settings [CHAR_LIMIT=40]
     */
    public static final int manager_battery_usage_optimized_title=0x7f110bca;
    /**
     * Summary for the battery restricted settings [CHAR_LIMIT=NONE]
     */
    public static final int manager_battery_usage_restricted_summary=0x7f110bcb;
    /**
     * Title for the battery restricted settings [CHAR_LIMIT=40]
     */
    public static final int manager_battery_usage_restricted_title=0x7f110bcc;
    /**
     * The state when app is limited to unrestricted option only (e.g This app requires unrestricted battery usage) [CHAR_LIMIT=40]
     */
    public static final int manager_battery_usage_unrestricted_only=0x7f110bcd;
    /**
     * Summary for the battery unrestricted settings [CHAR_LIMIT=NONE]
     */
    public static final int manager_battery_usage_unrestricted_summary=0x7f110bce;
    /**
     * Title for the battery unrestricted settings [CHAR_LIMIT=40]
     */
    public static final int manager_battery_usage_unrestricted_title=0x7f110bcf;
    /**
     * Summary for work profile accounts group. [CHAR LIMIT=25]
     */
    public static final int managing_admin=0x7f110bd0;
    /**
     * About phone settings screen, setting option name to show Manual [CHAR LIMIT=25]
     */
    public static final int manual=0x7f110bd1;
    /**
     * Available networks screen, summary when button disallowed due to permanent automatic mode [CHAR LIMIT=NONE]
     */
    public static final int manual_mode_disallowed_summary=0x7f110bd2;
    public static final int material_clock_display_divider=0x7f110bd3;
    public static final int material_clock_toggle_content_description=0x7f110bd4;
    public static final int material_hour_selection=0x7f110bd5;
    public static final int material_hour_suffix=0x7f110bd6;
    public static final int material_minute_selection=0x7f110bd7;
    public static final int material_minute_suffix=0x7f110bd8;
    public static final int material_motion_easing_accelerated=0x7f110bd9;
    public static final int material_motion_easing_decelerated=0x7f110bda;
    public static final int material_motion_easing_emphasized=0x7f110bdb;
    public static final int material_motion_easing_linear=0x7f110bdc;
    public static final int material_motion_easing_standard=0x7f110bdd;
    public static final int material_slider_range_end=0x7f110bde;
    public static final int material_slider_range_start=0x7f110bdf;
    public static final int material_timepicker_am=0x7f110be0;
    public static final int material_timepicker_clock_mode_description=0x7f110be1;
    public static final int material_timepicker_hour=0x7f110be2;
    public static final int material_timepicker_minute=0x7f110be3;
    public static final int material_timepicker_pm=0x7f110be4;
    public static final int material_timepicker_select_time=0x7f110be5;
    public static final int material_timepicker_text_input_mode_description=0x7f110be6;
    /**
     * Max refresh rate
     */
    public static final int max_refresh_rate_title=0x7f110be7;
    /**
     * Label for maximum memory use section [CHAR LIMIT=30]
     */
    public static final int maximum_memory_use=0x7f110be8;
    /**
     * Preference category for media development settings. [CHAR LIMIT=50]
     */
    public static final int media_category=0x7f110be9;
    /**
     * Subtext for media settings when the player will be hidden [CHAR LIMIT=50]
     */
    public static final int media_controls_hide_player=0x7f110bea;
    /**
     * Description of toggle to enable or disable media recommendations based on user's activity [CHAR LIMIT=NONE]
     */
    public static final int media_controls_recommendations_description=0x7f110beb;
    /**
     * Title of toggle to enable or disable media recommendations in quick settings [CHAR LIMIT=NONE]
     */
    public static final int media_controls_recommendations_title=0x7f110bec;
    /**
     * Description of toggle to enable or disable the media resumption feature in quick settings [CHAR LIMIT=NONE]
     */
    public static final int media_controls_resume_description=0x7f110bed;
    /**
     * Title of toggle to enable or disable the media resumption feature in quick settings [CHAR LIMIT=50]
     */
    public static final int media_controls_resume_title=0x7f110bee;
    /**
     * Subtext for media settings when the player will be shown [CHAR LIMIT=50]
     */
    public static final int media_controls_show_player=0x7f110bef;
    /**
     * Title for media control settings [CHAR LIMIT=50]
     */
    public static final int media_controls_title=0x7f110bf0;
    /**
     * Description for a setting which controls whether an app can manage media files [CHAR LIMIT=NONE]
     */
    public static final int media_management_apps_description=0x7f110bf1;
    /**
     * Media management apps settings title [CHAR LIMIT=40]
     */
    public static final int media_management_apps_title=0x7f110bf2;
    /**
     * Label for a setting which controls whether an app can manage media files [CHAR LIMIT=45]
     */
    public static final int media_management_apps_toggle_label=0x7f110bf3;
    /**
     * Summary for media output settings when device is in ongoing call state.
     */
    public static final int media_out_summary_ongoing_call_state=0x7f110bf4;
    /**
     * Summary for media output default settings. (this device) [CHAR LIMIT=30]
     */
    public static final int media_output_default_summary=0x7f110bf5;
    /**
     * Summary for disconnected status [CHAR LIMIT=50]
     */
    public static final int media_output_disconnected_status=0x7f110bf6;
    /**
     * Title for the media output slice with group devices [CHAR LIMIT=50]
     */
    public static final int media_output_group=0x7f110bf7;
    /**
     * Summary for media output group with the active device count [CHAR LIMIT=NONE]
     */
    public static final int media_output_group_panel_multiple_devices_summary=0x7f110bf8;
    /**
     * Summary for media output group with only one device which is active [CHAR LIMIT=NONE]
     */
    public static final int media_output_group_panel_single_device_summary=0x7f110bf9;
    /**
     * Title for the media output group dialog with media related devices [CHAR LIMIT=50]
     */
    public static final int media_output_group_panel_title=0x7f110bfa;
    /**
     * Title with application label for media output settings. [CHAR LIMIT=NONE]
     */
    public static final int media_output_label_title=0x7f110bfb;
    /**
     * Button label to stop casting on media device. [CHAR LIMIT=40
     */
    public static final int media_output_panel_stop_casting_button=0x7f110bfc;
    /**
     * Summary for represent which device is playing media [CHAR LIMIT=NONE]
     */
    public static final int media_output_panel_summary_of_playing_device=0x7f110bfd;
    /**
     * Title for the Switch output dialog (settings panel) with media related devices [CHAR LIMIT=50]
     */
    public static final int media_output_panel_title=0x7f110bfe;
    /**
     * Summary for media output settings. (device)
     */
    public static final int media_output_summary=0x7f110bff;
    /**
     * Summary for media output settings when the media stream is being captured by something else.
     */
    public static final int media_output_summary_unavailable=0x7f110c00;
    /**
     * Summary for switching error state [CHAR LIMIT=40]
     */
    public static final int media_output_switch_error_text=0x7f110c01;
    /**
     * Summary for media output switching output [CHAR LIMIT=50]
     */
    public static final int media_output_switching=0x7f110c02;
    /**
     * Title for media output settings
     */
    public static final int media_output_title=0x7f110c03;
    /**
     * Name of the phone device. [CHAR LIMIT=30]
     */
    public static final int media_transfer_this_device_name=0x7f110c04;
    /**
     * Name of the phone device with an active remote session. [CHAR LIMIT=30]
     */
    public static final int media_transfer_this_phone=0x7f110c05;
    /**
     * Name of the 3.5mm audio device. [CHAR LIMIT=40]
     */
    public static final int media_transfer_wired_device_name=0x7f110c06;
    /**
     * Name of the 3.5mm and usb audio device. [CHAR LIMIT=50]
     */
    public static final int media_transfer_wired_usb_device_name=0x7f110c07;
    /**
     * Sound: Title for the option managing media volume. [CHAR LIMIT=30]
     */
    public static final int media_volume_option_title=0x7f110c08;
    /**
     * Sound settings screen, setting option summary text
     */
    public static final int media_volume_summary=0x7f110c09;
    /**
     * Sound settings screen, setting option name
     */
    public static final int media_volume_title=0x7f110c0a;
    /**
     * About phone screen, title for MEID for multi-sim devices
     */
    public static final int meid_multi_sim=0x7f110c0b;
    /**
     * [CHAR LIMIT=NONE] Activity title for process stats details on overall memory state
     */
    public static final int mem_details_title=0x7f110c0c;
    /**
     * [CHAR LIMIT=10] Running services, label for chart showing memory use.
     */
    public static final int memory=0x7f110c0d;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of applications installed. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_apps_usage=0x7f110c0e;
    /**
     * SD card & phone storage settings title. The amount of free space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section.
     */
    public static final int memory_available=0x7f110c0f;
    /**
     * SD card & phone storage settings title. The amount of free space for some storage partition when the volume is read-only. [CHAR LIMIT=64]
     */
    public static final int memory_available_read_only=0x7f110c10;
    /**
     * Average memory used by an app [CHAR LIMIT=25]
     */
    public static final int memory_avg_desc=0x7f110c11;
    /**
     * Average memory usage key [CHAR LIMIT=25]
     */
    public static final int memory_avg_use=0x7f110c12;
    /**
     * SD card & phone storage settings summary. Displayed when the total memory usage is being calculated. Will be replaced with a number like "12.3 GB" when finished calucating. [CHAR LIMIT=30]
     */
    public static final int memory_calculating_size=0x7f110c13;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of all pictures, videos in /sdcard/DCIM, /sdcard/Pictures folders on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_dcim_usage=0x7f110c14;
    /**
     * Label for details about an app's memory use [CHAR LIMIT=30]
     */
    public static final int memory_details=0x7f110c15;
    /**
     * Title for screen showing recent memory usage of specific app [CHAR LIMIT=30]
     */
    public static final int memory_details_title=0x7f110c16;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of /sdcard/Download on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_downloads_usage=0x7f110c17;
    /**
     * Maximum memory used by an app [CHAR LIMIT=25]
     */
    public static final int memory_max_desc=0x7f110c18;
    /**
     * Maximum memory usage key [CHAR LIMIT=25]
     */
    public static final int memory_max_use=0x7f110c19;
    /**
     * Label for maximum amount of memory app has used [CHAR LIMIT=25]
     */
    public static final int memory_maximum_usage=0x7f110c1a;
    /**
     * Storage item representing all cached data on device. [CHAR LIMIT=48]
     */
    public static final int memory_media_cache_usage=0x7f110c1b;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of misc files on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_media_misc_usage=0x7f110c1c;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of media on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_media_usage=0x7f110c1d;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of audio files in /sdcard on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_music_usage=0x7f110c1e;
    /**
     * Label for the current performance of the device [CHAR LIMIT=25]
     */
    public static final int memory_performance=0x7f110c1f;
    /**
     * Title for screen showing recent memory usage of device [CHAR LIMIT=30]
     */
    public static final int memory_settings_title=0x7f110c20;
    /**
     * SD card & phone storage settings screen heading.  The total amount of storage space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section
     */
    public static final int memory_size=0x7f110c21;
    /**
     * Summary of memory screen [CHAR LIMIT=NONE]
     */
    public static final int memory_summary=0x7f110c22;
    /**
     * Label for app list of memory use [CHAR LIMIT=30]
     */
    public static final int memory_usage=0x7f110c23;
    /**
     * Label for button that leads to list of apps and their memory usage [CHAR LIMIT=40]
     */
    public static final int memory_usage_apps=0x7f110c24;
    /**
     * Formatting for memory description [CHAR LIMIT=25]
     */
    public static final int memory_use_running_format=0x7f110c25;
    /**
     * Summary for how much memory an app has used [CHAR LIMIT=NONE]
     */
    public static final int memory_use_summary=0x7f110c26;
    /**
     * Edit access point screen menu option to discard the user's changes for this APN
     */
    public static final int menu_cancel=0x7f110c27;
    /**
     * Edit access point screen menu option to delete this APN
     */
    public static final int menu_delete=0x7f110c28;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_12h=0x7f110c29;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_1d=0x7f110c2a;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_3h=0x7f110c2b;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_6h=0x7f110c2c;
    /**
     * [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are hidden
     */
    public static final int menu_hide_system=0x7f110c2d;
    public static final int menu_key_about_device=0x7f110c2e;
    public static final int menu_key_accessibility=0x7f110c2f;
    public static final int menu_key_accounts=0x7f110c30;
    public static final int menu_key_apps=0x7f110c31;
    public static final int menu_key_battery=0x7f110c32;
    public static final int menu_key_connected_devices=0x7f110c33;
    public static final int menu_key_display=0x7f110c34;
    public static final int menu_key_emergency=0x7f110c35;
    public static final int menu_key_location=0x7f110c36;
    public static final int menu_key_network=0x7f110c37;
    public static final int menu_key_notifications=0x7f110c38;
    public static final int menu_key_privacy=0x7f110c39;
    public static final int menu_key_security=0x7f110c3a;
    public static final int menu_key_sound=0x7f110c3b;
    public static final int menu_key_storage=0x7f110c3c;
    public static final int menu_key_support=0x7f110c3d;
    public static final int menu_key_system=0x7f110c3e;
    public static final int menu_key_wallpaper=0x7f110c3f;
    /**
     * APNs screen menu option to create a brand spanking new APN
     */
    public static final int menu_new=0x7f110c40;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to select duration of stats to show
     */
    public static final int menu_proc_stats_duration=0x7f110c41;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to select which type of stats to show
     */
    public static final int menu_proc_stats_type=0x7f110c42;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show information on background processes
     */
    public static final int menu_proc_stats_type_background=0x7f110c43;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show information on cached processes
     */
    public static final int menu_proc_stats_type_cached=0x7f110c44;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show information on foreground processes
     */
    public static final int menu_proc_stats_type_foreground=0x7f110c45;
    /**
     * APNs screen menu option to reset default APN settings
     */
    public static final int menu_restore=0x7f110c46;
    /**
     * Edit access point screen menu option to save the user's changes for this APN to the persistent storage
     */
    public static final int menu_save=0x7f110c47;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to control whether stats are shown
     * as percentages
     */
    public static final int menu_show_percentage=0x7f110c48;
    /**
     * [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are shown
     */
    public static final int menu_show_system=0x7f110c49;
    /**
     * Menu label for viewing battery usage since unplugged
     */
    public static final int menu_stats_last_unplugged=0x7f110c4a;
    /**
     * Menu label for refreshing with latest usage numbers
     */
    public static final int menu_stats_refresh=0x7f110c4b;
    /**
     * Menu label for viewing battery usage total
     */
    public static final int menu_stats_total=0x7f110c4c;
    /**
     * Menu label for viewing battery usage since unplugged
     */
    public static final int menu_stats_unplugged=0x7f110c4d;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to control whether computation should be based
     * on Uss (Unique Set Size) instead of Pss (Proportional Set Size)
     */
    public static final int menu_use_uss=0x7f110c4e;
    /**
     * Describes what is affected by the mic toggle [CHAR LIMIT=NONE]
     */
    public static final int mic_toggle_description=0x7f110c4f;
    /**
     * Label for the camera use toggle [CHAR LIMIT=40]
     */
    public static final int mic_toggle_title=0x7f110c50;
    /**
     * Min refresh rate
     */
    public static final int min_refresh_rate_title=0x7f110c51;
    /**
     * Misc files [CHAR LIMIT=25]
     */
    public static final int misc_files=0x7f110c52;
    /**
     * number of misc files selected [CHAR LIMIT=40]
     */
    public static final int misc_files_selected_count=0x7f110c53;
    /**
     * number of bytes represented by the selected misc files [CHAR LIMIT=40]
     */
    public static final int misc_files_selected_count_bytes=0x7f110c54;
    /**
     * Summary of multimedia messaging service settings.  [CHAR LIMIT=100]
     */
    public static final int mms_message_summary=0x7f110c55;
    /**
     * Title of multimedia messaging service settings.  [CHAR LIMIT=50]
     */
    public static final int mms_message_title=0x7f110c56;
    /**
     * Ask user to connect to the internet [CHAR_ LIMIT=50]
     */
    public static final int mobile_connect_to_internet=0x7f110c57;
    /**
     * Network & internet page. Summary indicating that a SIM has an active mobile data connection
     * when multiple SIMs are present. [CHAR LIMIT=50]
     */
    public static final int mobile_data_active=0x7f110c58;
    /**
     * Setting Checkbox title whether to always keep mobile data active. [CHAR LIMIT=80]
     */
    public static final int mobile_data_always_on=0x7f110c59;
    public static final int mobile_data_always_on_summary=0x7f110c5a;
    /**
     * Subtitle explaining that mobile data cannot be used while airplane mode is on [CHAR LIMIT=50]
     */
    public static final int mobile_data_ap_mode_disabled=0x7f110c5b;
    /**
     * Provider Model:
     * Summary indicating that a SIM has an active mobile data connection [CHAR LIMIT=50]
     */
    public static final int mobile_data_connection_active=0x7f110c5c;
    /**
     * Message body of the dialog to turn off data usage [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_disable_message=0x7f110c5d;
    /**
     * Text used to refer to the user's current carrier in mobile_data_disable_message if the users's mobile network carrier name is not available [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_disable_message_default_carrier=0x7f110c5e;
    /**
     * Title of the dialog to turn off data usage [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_disable_title=0x7f110c5f;
    /**
     * Provider Model:
     * Summary indicating that a active SIM and no network available [CHAR LIMIT=50]
     */
    public static final int mobile_data_no_connection=0x7f110c60;
    /**
     * Network & internet page. Summary indicating that a SIM is used by default for mobile data
     * when multiple SIMs are present, but mobile data is currently turned off.
     * [CHAR LIMIT=50]
     */
    public static final int mobile_data_off=0x7f110c61;
    /**
     * Provider Model:
     * Summary indicating that a SIM has no mobile data connection [CHAR LIMIT=50]
     */
    public static final int mobile_data_off_summary=0x7f110c62;
    /**
     * Mobile network settings screen, summary of Mobile data switch preference [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_settings_summary=0x7f110c63;
    /**
     * Mobile network settings screen, summary of Mobile data switch preference when the network
     * is opportunistic and will always be used when it is in range. [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_settings_summary_auto_switch=0x7f110c64;
    /**
     * Mobile network setting screen, summary of Mobile data switch preference when the network
     * is unavailable, the preference selection will be disabled. [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_settings_summary_unavailable=0x7f110c65;
    /**
     * Mobile network settings screen, title of Mobile Data switch preference [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_settings_title=0x7f110c66;
    /**
     * Title for mobile data preference, to display the mobile data usage for each app. [CHAR LIMIT=NONE]
     */
    public static final int mobile_data_usage_title=0x7f110c67;
    /**
     * Ask user to insert a SIM card [CHAR_ LIMIT=50]
     */
    public static final int mobile_insert_sim_card=0x7f110c68;
    /**
     * Summary for an item in the page listing multiple mobile service subscriptions, indicating
     * that service is active and is tied to an eSIM profile [CHAR LIMIT=40]
     */
    public static final int mobile_network_active_esim=0x7f110c69;
    /**
     * Summary for an item in the page listing multiple mobile service subscriptions, indicating
     * that service is active and is tied to a physical SIM card [CHAR LIMIT=40]
     */
    public static final int mobile_network_active_sim=0x7f110c6a;
    /**
     * Title for Apn settings in mobile network settings [CHAR LIMIT=60]
     */
    public static final int mobile_network_apn_title=0x7f110c6b;
    /**
     * Text shown in an information footer on the SIM details page for a physical SIM notifying
     * the user that the way to disable this SIM is to physically remove it. This is in contrast
     * to eSIM's, which can disabled using an on/off toggle switch. [CHAR LIMIT=NONE]
     */
    public static final int mobile_network_disable_sim_explanation=0x7f110c6c;
    /**
     * Mobile network details page. Label for an option that lets the user delete an eSIM from
     * the device. [CHAR LIMIT=60]
     */
    public static final int mobile_network_erase_sim=0x7f110c6d;
    /**
     * Body of a dialog indicating that an error ocurred when deleting an eSIM from the device
     * [CHAR LIMIT=NONE]
     */
    public static final int mobile_network_erase_sim_error_dialog_body=0x7f110c6e;
    /**
     * Title of a dialog indicating that an error ocurred when deleting an eSIM from the device
     * [CHAR LIMIT=60]
     */
    public static final int mobile_network_erase_sim_error_dialog_title=0x7f110c6f;
    /**
     * Body of a confirmation dialog when the user is enabling an eSIM subscription and there
     * is already another active eSIM subscription which will need to be disabled if they proceed.
     * [CHAR LIMIT=NONE]
     */
    public static final int mobile_network_esim_swap_confirm_body=0x7f110c70;
    /**
     * Ok button label on confirmation dialog when the user is enabling an eSIM subscription and
     * there is already another active eSIM subscription which will need to be disabled if they
     * proceed. [CHAR LIMIT=25]
     */
    public static final int mobile_network_esim_swap_confirm_ok=0x7f110c71;
    /**
     * Title for a confirmation dialog when the user is enabling an eSIM subscription and there
     * is already another active eSIM subscription which will need to be disabled if they proceed.
     * [CHAR LIMIT=60]
     */
    public static final int mobile_network_esim_swap_confirm_title=0x7f110c72;
    /**
     * Network & internet page. Summary indicating that a SIM is configured and may be used for
     * some services, and that network is currently in range but not being used. For instance, it
     * may be able to provide a mobile data connection that we aren't using because we're already
     * connected to wifi. [CHAR LIMIT=50]
     */
    public static final int mobile_network_in_range=0x7f110c73;
    /**
     * Summary for an item in the page listing multiple mobile service subscriptions, indicating
     * that service is inactive and is tied to an eSIM profile [CHAR LIMIT=40]
     */
    public static final int mobile_network_inactive_esim=0x7f110c74;
    /**
     * Summary for an item in the page listing multiple mobile service subscriptions, indicating
     * that service is inactive and is tied to a physical SIM card [CHAR LIMIT=40]
     */
    public static final int mobile_network_inactive_sim=0x7f110c75;
    /**
     * Title of item shown at the bottom of the page listing multiple mobile service
     * subscriptions; tapping it leads to a UI to add more [CHAR LIMIT=40]
     */
    public static final int mobile_network_list_add_more=0x7f110c76;
    /**
     * Summary to show the current network mode is invalid. [CHAR LIMIT=NONE]
     */
    public static final int mobile_network_mode_error=0x7f110c77;
    /**
     * Network & internet page. Summary indicating that a SIM is configured and may be used for
     * some services, but the network not currently in range. [CHAR LIMIT=50]
     */
    public static final int mobile_network_not_in_range=0x7f110c78;
    /**
     * Label for an item listing the color of the SIM that the user has specified. [CHAR LIMIT=40]
     */
    public static final int mobile_network_sim_color_label=0x7f110c79;
    /**
     * Title of a dialog that lets a user modify the display name used for a mobile network
     * subscription in various places in the Settings app. The default name is typically just the
     * carrier name, but especially in multi-SIM configurations users may want to use a different
     * name. [CHAR LIMIT=40]
     */
    public static final int mobile_network_sim_name=0x7f110c7a;
    /**
     * Label for an item listing the name of the SIM that the user has specified. [CHAR LIMIT=40]
     */
    public static final int mobile_network_sim_name_label=0x7f110c7b;
    /**
     * Label on the confirmation button of a dialog that lets a user set the display name and
     * color of a mobile network subscription [CHAR LIMIT=20]
     */
    public static final int mobile_network_sim_name_rename=0x7f110c7c;
    /**
     * Summary of the 'Mobile network' item on the Network & internet page when there is no mobile
     * service setup yet (eg no SIM card inserted and no eSIM configured). Tapping it leads to a
     * UI where the user can setup service. [CHAR LIMIT=50]
     */
    public static final int mobile_network_summary_add_a_network=0x7f110c7d;
    /**
     * Summary used when a physical SIM is disabled, indicating that tapping on the preference will
     * enable the SIM. This may be used as the summary of the 'Mobile network' item on the
     * Network & internet page (if there are no other SIMs), or on the mobile network list page.
     * [CHAR LIMIT=50]
     */
    public static final int mobile_network_tap_to_activate=0x7f110c7e;
    /**
     * Label for the off position of a switch on the mobile network details page which allows
     * disabling/enabling a SIM. The SIM is disabled in this state. [CHAR LIMIT=40]
     */
    public static final int mobile_network_use_sim_off=0x7f110c7f;
    /**
     * Label for the on position of a switch on the mobile network details page which allows
     * disabling/enabling a SIM. The SIM is enabled in this state. [CHAR LIMIT=40]
     */
    public static final int mobile_network_use_sim_on=0x7f110c80;
    /**
     * There is no mobile provisiong website for the operator which is the firat parameter [CHAR_ LIMIT=50]
     */
    public static final int mobile_no_provisioning_url=0x7f110c81;
    /**
     * The SIM operator is not known [CHAR_ LIMIT=50]
     */
    public static final int mobile_unknown_sim_operator=0x7f110c82;
    /**
     * UI debug setting: select current app to mock location [CHAR LIMIT=50]
     */
    public static final int mock_location_app=0x7f110c83;
    /**
     * UI debug setting: no mock location app has been set [CHAR LIMIT=50]
     */
    public static final int mock_location_app_not_set=0x7f110c84;
    /**
     * UI debug setting: mock location app has been set [CHAR LIMIT=50]
     */
    public static final int mock_location_app_set=0x7f110c85;
    /**
     * About phone screen, status item label  [CHAR LIMIT=40]
     */
    public static final int model_info=0x7f110c86;
    /**
     * About phone settings screen, setting option name to see licensing info for Google Play system updates [CHAR LIMIT=50]
     */
    public static final int module_license_title=0x7f110c87;
    /**
     * About phone screen, tapping this button will take user to a seperate UI to check Google Play system update [CHAR LIMIT=60]
     */
    public static final int module_version=0x7f110c88;
    /**
     * Title for more settings button, clicking this button will open a new page containing more settings related to current page. [CHAR LIMIT=60]
     */
    public static final int more_settings_button=0x7f110c89;
    /**
     * Manage applications, text for Move button
     */
    public static final int move_app=0x7f110c8a;
    /**
     * Manage applications, text for Move button to move app to internal storage
     */
    public static final int move_app_to_internal=0x7f110c8b;
    /**
     * Manage applications, text for Move button  to move app to sdcard
     */
    public static final int move_app_to_sdcard=0x7f110c8c;
    /**
     * Error message shown when trying to move device administrators to external disks, such as SD card [CHAR_LIMIT=none]
     */
    public static final int move_error_device_admin=0x7f110c8d;
    public static final int mr_button_content_description=0x7f110c8e;
    public static final int mr_cast_button_connected=0x7f110c8f;
    public static final int mr_cast_button_connecting=0x7f110c90;
    public static final int mr_cast_button_disconnected=0x7f110c91;
    public static final int mr_cast_dialog_title_view_placeholder=0x7f110c92;
    public static final int mr_chooser_searching=0x7f110c93;
    public static final int mr_chooser_title=0x7f110c94;
    public static final int mr_controller_album_art=0x7f110c95;
    public static final int mr_controller_casting_screen=0x7f110c96;
    public static final int mr_controller_close_description=0x7f110c97;
    public static final int mr_controller_collapse_group=0x7f110c98;
    public static final int mr_controller_disconnect=0x7f110c99;
    public static final int mr_controller_expand_group=0x7f110c9a;
    public static final int mr_controller_no_info_available=0x7f110c9b;
    public static final int mr_controller_no_media_selected=0x7f110c9c;
    public static final int mr_controller_pause=0x7f110c9d;
    public static final int mr_controller_play=0x7f110c9e;
    public static final int mr_controller_stop=0x7f110c9f;
    public static final int mr_controller_stop_casting=0x7f110ca0;
    public static final int mr_controller_volume_slider=0x7f110ca1;
    public static final int mr_dialog_default_group_name=0x7f110ca2;
    public static final int mr_dialog_groupable_header=0x7f110ca3;
    public static final int mr_dialog_transferable_header=0x7f110ca4;
    public static final int mr_system_route_name=0x7f110ca5;
    public static final int mr_user_route_category_name=0x7f110ca6;
    /**
     * SD card & phone storage settings item summary that will result in the phone connected to PC and MTP/PTP enabled.   [CHAR LIMIT=80]
     */
    public static final int mtp_ptp_mode_summary=0x7f110ca7;
    public static final int mtrl_badge_numberless_content_description=0x7f110ca8;
    public static final int mtrl_chip_close_icon_content_description=0x7f110ca9;
    public static final int mtrl_exceed_max_badge_number_content_description=0x7f110caa;
    public static final int mtrl_exceed_max_badge_number_suffix=0x7f110cab;
    public static final int mtrl_picker_a11y_next_month=0x7f110cac;
    public static final int mtrl_picker_a11y_prev_month=0x7f110cad;
    public static final int mtrl_picker_announce_current_selection=0x7f110cae;
    public static final int mtrl_picker_cancel=0x7f110caf;
    public static final int mtrl_picker_confirm=0x7f110cb0;
    public static final int mtrl_picker_date_header_selected=0x7f110cb1;
    public static final int mtrl_picker_date_header_title=0x7f110cb2;
    public static final int mtrl_picker_date_header_unselected=0x7f110cb3;
    public static final int mtrl_picker_day_of_week_column_header=0x7f110cb4;
    public static final int mtrl_picker_invalid_format=0x7f110cb5;
    public static final int mtrl_picker_invalid_format_example=0x7f110cb6;
    public static final int mtrl_picker_invalid_format_use=0x7f110cb7;
    public static final int mtrl_picker_invalid_range=0x7f110cb8;
    public static final int mtrl_picker_navigate_to_year_description=0x7f110cb9;
    public static final int mtrl_picker_out_of_range=0x7f110cba;
    public static final int mtrl_picker_range_header_only_end_selected=0x7f110cbb;
    public static final int mtrl_picker_range_header_only_start_selected=0x7f110cbc;
    public static final int mtrl_picker_range_header_selected=0x7f110cbd;
    public static final int mtrl_picker_range_header_title=0x7f110cbe;
    public static final int mtrl_picker_range_header_unselected=0x7f110cbf;
    public static final int mtrl_picker_save=0x7f110cc0;
    public static final int mtrl_picker_text_input_date_hint=0x7f110cc1;
    public static final int mtrl_picker_text_input_date_range_end_hint=0x7f110cc2;
    public static final int mtrl_picker_text_input_date_range_start_hint=0x7f110cc3;
    public static final int mtrl_picker_text_input_day_abbr=0x7f110cc4;
    public static final int mtrl_picker_text_input_month_abbr=0x7f110cc5;
    public static final int mtrl_picker_text_input_year_abbr=0x7f110cc6;
    public static final int mtrl_picker_toggle_to_calendar_input_mode=0x7f110cc7;
    public static final int mtrl_picker_toggle_to_day_selection=0x7f110cc8;
    public static final int mtrl_picker_toggle_to_text_input_mode=0x7f110cc9;
    public static final int mtrl_picker_toggle_to_year_selection=0x7f110cca;
    /**
     * Title for multiple users main switch. [CHAR LIMIT=50]
     */
    public static final int multiple_users_main_switch_title=0x7f110ccb;
    /**
     * Sound settings screen, music effects title [CHAR LIMIT=30]
     */
    public static final int musicfx_title=0x7f110ccc;
    /**
     * Edit Mvno Match Data Info of APN
     */
    public static final int mvno_match_data=0x7f110ccd;
    /**
     * Edit Mvno Type Info of APN
     */
    public static final int mvno_type=0x7f110cce;
    /**
     * Title for preference showing the primary account on the device [CHAR LIMIT=60]
     */
    public static final int my_device_info_account_preference_title=0x7f110ccf;
    /**
     * Title for preference category showing the name of basic info. [CHAR LIMIT=60]
     */
    public static final int my_device_info_basic_info_category_title=0x7f110cd0;
    /**
     * Title for preference category showing the name of device details. [CHAR LIMIT=60]
     */
    public static final int my_device_info_device_details_category_title=0x7f110cd1;
    /**
     * Title for preference category showing the name of device identifiers. [CHAR LIMIT=60]
     */
    public static final int my_device_info_device_identifiers_category_title=0x7f110cd2;
    /**
     * Title for preference showing the name of the device. [CHAR LIMIT=60]
     */
    public static final int my_device_info_device_name_preference_title=0x7f110cd3;
    /**
     * Title for preference category showing the name of legal & regulatory. [CHAR LIMIT=60]
     */
    public static final int my_device_info_legal_category_title=0x7f110cd4;
    /**
     * Item found in thee PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int n_cacrts=0x7f110cd5;
    /**
     * Text for Network 1x [CHAR LIMIT=NONE]
     */
    public static final int network_1x=0x7f110cd6;
    /**
     * Text for Network 2g [CHAR LIMIT=NONE]
     */
    public static final int network_2G=0x7f110cd7;
    /**
     * Text for Network 3g [CHAR LIMIT=NONE]
     */
    public static final int network_3G=0x7f110cd8;
    /**
     * Text for Network 4g [CHAR LIMIT=NONE]
     */
    public static final int network_4G=0x7f110cd9;
    /**
     * Text for Network 4g [CHAR LIMIT=NONE]
     */
    public static final int network_4G_pure=0x7f110cda;
    /**
     * Text for Network mode 5g recommended [CHAR LIMIT=NONE]
     */
    public static final int network_5G_recommended=0x7f110cdb;
    /**
     * Network & internet preferences title [CHAR LIMIT=NONE]
     */
    public static final int network_and_internet_preferences_title=0x7f110cdc;
    /**
     * Message in a push notification indicating that the user's phone has connected to a different mobile network. [CHAR LIMIT=NONE]
     */
    public static final int network_changed_notification_text=0x7f110cdd;
    /**
     * Available networks screen, text when network connected [CHAR LIMIT=60]
     */
    public static final int network_connected=0x7f110cde;
    /**
     * Available networks screen, text when a network is connecting [CHAR LIMIT=60]
     */
    public static final int network_connecting=0x7f110cdf;
    /**
     * Toast message when connection is failure [CHAR LIMIT=30]
     */
    public static final int network_connection_connect_failure=0x7f110ce0;
    /**
     * Toast message when connection is successful [CHAR LIMIT=30]
     */
    public static final int network_connection_connect_successful=0x7f110ce1;
    /**
     * Message for Network connection connecting progress Dialog. Try to connect to wifi ap.[CHAR LIMIT=40]
     */
    public static final int network_connection_connecting_message=0x7f110ce2;
    /**
     * Message for Network connection error state Dialog [CHAR LIMIT=NONE]
     */
    public static final int network_connection_errorstate_dialog_message=0x7f110ce3;
    /**
     * Neutral button for Network connection request Dialog [CHAR LIMIT=30]
     */
    public static final int network_connection_request_dialog_showall=0x7f110ce4;
    /**
     * Summary for Network connection request Dialog [CHAR LIMIT=NONE]
     */
    public static final int network_connection_request_dialog_summary=0x7f110ce5;
    /**
     * Title for Network connection request Dialog [CHAR LIMIT=60]
     */
    public static final int network_connection_request_dialog_title=0x7f110ce6;
    /**
     * Message for Network connection searching progress Dialog. Searching for wifi ap. [CHAR LIMIT=40]
     */
    public static final int network_connection_searching_message=0x7f110ce7;
    /**
     * Message for Network connection timeout Dialog [CHAR LIMIT=NONE]
     */
    public static final int network_connection_timeout_dialog_message=0x7f110ce8;
    /**
     * OK button for Network connection timeout Dialog [CHAR LIMIT=30]
     */
    public static final int network_connection_timeout_dialog_ok=0x7f110ce9;
    /**
     * Available networks screen, text when a network cannot be connected [CHAR LIMIT=60]
     */
    public static final int network_could_not_connect=0x7f110cea;
    /**
     * Summary for Network and Internet settings, explaining it contains mobile, wifi setting and data usage settings [CHAR LIMIT=NONE]
     */
    public static final int network_dashboard_summary_mobile=0x7f110ceb;
    /**
     * Summary for Network and Internet settings, explaining it contains wifi and data usage setting [CHAR LIMIT=NONE]
     */
    public static final int network_dashboard_summary_no_mobile=0x7f110cec;
    /**
     * Title for setting tile leading to network and Internet settings [CHAR LIMIT=40]
     */
    public static final int network_dashboard_title=0x7f110ced;
    /**
     * Available networks screen, text when no networks connected [CHAR LIMIT=60]
     */
    public static final int network_disconnected=0x7f110cee;
    /**
     * Text for Network global [CHAR LIMIT=NONE]
     */
    public static final int network_global=0x7f110cef;
    /**
     * Text for Network lte [CHAR LIMIT=NONE]
     */
    public static final int network_lte=0x7f110cf0;
    /**
     * Text for Network lte [CHAR LIMIT=NONE]
     */
    public static final int network_lte_pure=0x7f110cf1;
    /**
     * Mobile network settings screen, name for network operator category [CHAR LIMIT=NONE]
     */
    public static final int network_operator_category=0x7f110cf2;
    /**
     * Network operators settings title.  [CHAR LIMIT=50]
     */
    public static final int network_operators_settings=0x7f110cf3;
    /**
     * Available networks screen, toast when an error is encountered when searching for networks [CHAR LIMIT=NONE]
     */
    public static final int network_query_error=0x7f110cf4;
    /**
     * Error message for users that aren't allowed to reset network settings [CHAR LIMIT=none]
     */
    public static final int network_reset_not_available=0x7f110cf5;
    /**
     * Title of button and screen for which wifi networks have data restrictions [CHAR LIMIT=30
     */
    public static final int network_restrictions=0x7f110cf6;
    /**
     * Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant instead of the current Wifi Assistant app. [CHAR LIMIT=100]
     */
    public static final int network_scorer_change_active_dialog_text=0x7f110cf7;
    /**
     * Wifi Assistant change wi-fi assistant title.  [CHAR LIMIT=40]
     */
    public static final int network_scorer_change_active_dialog_title=0x7f110cf8;
    /**
     * Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant. [CHAR LIMIT=100]
     */
    public static final int network_scorer_change_active_no_previous_dialog_text=0x7f110cf9;
    public static final int network_scorer_picker_none_preference=0x7f110cfa;
    /**
     * Network Scorer Picker title [CHAR LIMIT=40]
     */
    public static final int network_scorer_picker_title=0x7f110cfb;
    /**
     * Available networks screen, name of button when user wants to select network manually [CHAR LIMIT=NONE]
     */
    public static final int network_select_title=0x7f110cfc;
    /**
     * Wireless controls, item title to go into the network settings
     */
    public static final int network_settings_title=0x7f110cfd;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int network_state_label=0x7f110cfe;
    /**
     * Text for Network world mode CDMA LTE [CHAR LIMIT=NONE]
     */
    public static final int network_world_mode_cdma_lte=0x7f110cff;
    /**
     * Text for Network world mode GSM LTE [CHAR LIMIT=NONE]
     */
    public static final int network_world_mode_gsm_lte=0x7f110d00;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int networkid_label=0x7f110d01;
    /**
     * mobile network settings screen, setting option name
     */
    public static final int networks=0x7f110d02;
    /**
     * Summary for networks available (includes no network connected). [CHAR_LIMIT=NONE]
     */
    public static final int networks_available=0x7f110d03;
    /**
     * Prompt for the user to enter a new full-backup password
     */
    public static final int new_backup_pw_prompt=0x7f110d04;
    /**
     * Used in setup wizard Wi-Fi screen. The button label for going to the next screen and submitting. [CHAR LIMIT=20]
     */
    public static final int next_label=0x7f110d05;
    /**
     * Content description of the next button to bring user to the next preview page.
     */
    public static final int next_page_content_description=0x7f110d06;
    /**
     * Summary for Tap & pay settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int nfc_and_payment_settings_no_payment_installed_summary=0x7f110d07;
    /**
     * Summary for Tap & pay settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int nfc_and_payment_settings_payment_off_nfc_off_summary=0x7f110d08;
    /**
     * Used to describe the enabled state of the Android Beam feature when NFC, which it relies on, is turned off [CHAR LIMIT=NONE]
     */
    public static final int nfc_disabled_summary=0x7f110d09;
    /**
     * Dialog content for NFC disclaimer: telling user NFC can exchange data when device is nearby other devices (for example: payment terminals, badge reader etc). [CHAR_LIMIT=NONE]
     */
    public static final int nfc_disclaimer_content=0x7f110d0a;
    /**
     * Dialog title for NFC disclaimer [CHAR_LIMIT=40]
     */
    public static final int nfc_disclaimer_title=0x7f110d0b;
    /**
     * Content for text explaning how to pay at a payment terminal in a store
     */
    public static final int nfc_how_it_works_content=0x7f110d0c;
    /**
     * Button the users can click to indicate they understood and dismiss the screen
     */
    public static final int nfc_how_it_works_got_it=0x7f110d0d;
    /**
     * Header for text explaning how to pay at a payment terminal in a store
     */
    public static final int nfc_how_it_works_title=0x7f110d0e;
    /**
     * Title for NFC main switch preferences. [CHAR LIMIT=50]
     */
    public static final int nfc_main_switch_title=0x7f110d0f;
    /**
     * NFC More... title.  [CHAR LIMIT=40]
     */
    public static final int nfc_more_title=0x7f110d10;
    /**
     * String indicating the label of the default payment app and a description of its state; eg Google Wallet - MasterCard 1234
     */
    public static final int nfc_payment_app_and_desc=0x7f110d11;
    /**
     * Label of the Set default button of the Set default payment app dialog [CHAR LIMIT=40]
     */
    public static final int nfc_payment_btn_text_set_deault=0x7f110d12;
    /**
     * Label of the Update button of the Update default payment app dialog [CHAR LIMIT=40]
     */
    public static final int nfc_payment_btn_text_update=0x7f110d13;
    /**
     * Header text that can be clicked on to change the default payment app
     */
    public static final int nfc_payment_default=0x7f110d14;
    /**
     * Summary text that is shown when no default app is set
     */
    public static final int nfc_payment_default_not_set=0x7f110d15;
    /**
     * Always use the default app (independent of what app is open)
     */
    public static final int nfc_payment_favor_default=0x7f110d16;
    /**
     * If open app supports TapPay, use that app instead of the default
     */
    public static final int nfc_payment_favor_open=0x7f110d17;
    /**
     * Caption for button linking to a page explaining how Tap and Pay works
     */
    public static final int nfc_payment_how_it_works=0x7f110d18;
    /**
     * String shown when there are no NFC payment applications installed
     */
    public static final int nfc_payment_no_apps=0x7f110d19;
    /**
     * Header for a dialog asking the user which payment app to use
     */
    public static final int nfc_payment_pay_with=0x7f110d1a;
    public static final int nfc_payment_set_default=0x7f110d1b;
    public static final int nfc_payment_set_default_instead_of=0x7f110d1c;
    /**
     * Label for the dialog that is shown when the user is asked to set a
     * preferred payment application
     */
    public static final int nfc_payment_set_default_label=0x7f110d1d;
    public static final int nfc_payment_settings_title=0x7f110d1e;
    /**
     * Label for the dialog that is shown when the user is asked to update a
     * preferred payment application [CHAR LIMIT=50]
     */
    public static final int nfc_payment_update_default_label=0x7f110d1f;
    /**
     * Header for what to do when the open app supports TapPay: use the default set app, or the open app
     */
    public static final int nfc_payment_use_default=0x7f110d20;
    /**
     * Description of NFC in the 1st level settings screen, for a phone. [CHAR LIMIT=NONE]
     */
    public static final int nfc_quick_toggle_summary=0x7f110d21;
    /**
     * Used in the 1st-level settings screen to turn on NFC
     */
    public static final int nfc_quick_toggle_title=0x7f110d22;
    /**
     * Used in the settings screen to secure NFC [CHAR LIMIT=NONE]
     */
    public static final int nfc_secure_settings_title=0x7f110d23;
    /**
     * Description of Secure NFC in the 1st level settings screen. [CHAR LIMIT=NONE]
     */
    public static final int nfc_secure_toggle_summary=0x7f110d24;
    /**
     * Switch text for nfc feature being off [CHAR LIMIT=NONE]
     */
    public static final int nfc_setting_off=0x7f110d25;
    /**
     * Switch text for nfc feature being on [CHAR LIMIT=NONE]
     */
    public static final int nfc_setting_on=0x7f110d26;
    /**
     * Display settings screen, deactivation button action for custom schedule [CHAR LIMIT=40]
     */
    public static final int night_display_activation_off_custom=0x7f110d27;
    /**
     * Display settings screen, deactivation button action for manual mode. [CHAR LIMIT=40]
     */
    public static final int night_display_activation_off_manual=0x7f110d28;
    /**
     * Display settings screen, deactivation button action for sunset-to-sunrise schedule [CHAR LIMIT=40]
     */
    public static final int night_display_activation_off_twilight=0x7f110d29;
    /**
     * Display settings screen, activation button action for custom schedule [CHAR LIMIT=40]
     */
    public static final int night_display_activation_on_custom=0x7f110d2a;
    /**
     * Display settings screen, activation button action for manual mode. [CHAR LIMIT=40]
     */
    public static final int night_display_activation_on_manual=0x7f110d2b;
    /**
     * Display settings screen, activation button action for sunset-to-sunrise schedule [CHAR LIMIT=40]
     */
    public static final int night_display_activation_on_twilight=0x7f110d2c;
    /**
     * Night display screen, setting option value for night display to turn on/off automatically according to a user defined schedule. [CHAR LIMIT=32]
     */
    public static final int night_display_auto_mode_custom=0x7f110d2d;
    /**
     * Night display screen, setting option value for night display to *never* turn on/off automatically. [CHAR LIMIT=30]
     */
    public static final int night_display_auto_mode_never=0x7f110d2e;
    /**
     * Night display screen, setting option name to configure whether night display turn on/off automatically. [CHAR LIMIT=30]
     */
    public static final int night_display_auto_mode_title=0x7f110d2f;
    /**
     * Night display screen, setting option value for night display to turn on/off automatically at sunset/sunrise. [CHAR LIMIT=32]
     */
    public static final int night_display_auto_mode_twilight=0x7f110d30;
    /**
     * Night display screen, setting option name to configure time to automatically turn off night display. [CHAR LIMIT=30]
     */
    public static final int night_display_end_time_title=0x7f110d31;
    /**
     * Night display slice screen, subtitle of intensity setting when night light is off. [CHAR LIMIT=30]
     */
    public static final int night_display_not_currently_on=0x7f110d32;
    /**
     * Night display screen, setting option name to configure time to automatically turn on night display. [CHAR LIMIT=30]
     */
    public static final int night_display_start_time_title=0x7f110d33;
    /**
     * Night display screen, setting option name controlling the current activation status. [CHAR LIMIT=30]
     */
    public static final int night_display_status_title=0x7f110d34;
    /**
     * Night display: Summary for the night display option Suggestion (renamed "Night Light" with title caps). [CHAR LIMIT=55]
     */
    public static final int night_display_suggestion_summary=0x7f110d35;
    /**
     * Night display: Title for the night display option Suggestion (renamed "Night Light" with title caps). [CHAR LIMIT=46]
     */
    public static final int night_display_suggestion_title=0x7f110d36;
    /**
     * Display settings screen, summary format of night display when off and will turn on automatically at a user defined time. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off_auto_mode_custom=0x7f110d37;
    /**
     * Display settings screen, summary of night display when off and will *never* turn on automatically. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off_auto_mode_never=0x7f110d38;
    /**
     * Display settings screen, summary of night display when off and will turn on automatically at sunset. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off_auto_mode_twilight=0x7f110d39;
    /**
     * Display settings screen, summary format of night display when on and will turn off automatically at a user defined time. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on_auto_mode_custom=0x7f110d3a;
    /**
     * Display settings screen, summary of night display when on and will *never* turn off automatically. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on_auto_mode_never=0x7f110d3b;
    /**
     * Display settings screen, summary of night display when on and will turn off automatically at sunrise. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on_auto_mode_twilight=0x7f110d3c;
    /**
     * Night display screen, setting the color temperature of the display. [CHAR LIMIT=30]
     */
    public static final int night_display_temperature_title=0x7f110d3d;
    /**
     * Night display screen, description of night display feature (renamed "Night Light" with title caps). [CHAR LIMIT=NONE]
     */
    public static final int night_display_text=0x7f110d3e;
    /**
     * Night display screen, setting option name to enable night display (renamed "Night Light" with title caps). [CHAR LIMIT=30]
     */
    public static final int night_display_title=0x7f110d3f;
    /**
     * Title for Night Light main switch preferences. [CHAR LIMIT=50]
     */
    public static final int night_light_main_switch_title=0x7f110d40;
    /**
     * Strings for Dialog no button
     */
    public static final int no=0x7f110d41;
    /**
     * Footer to show current limitation of 5G on DSDS mode for general devices. [CHAR LIMIT=NONE]
     */
    public static final int no_5g_in_dsds_text=0x7f110d42;
    /**
     * UI debug setting: label for app picker to select no applicatiojn [CHAR LIMIT=50]
     */
    public static final int no_application=0x7f110d43;
    /**
     * [CHAR LIMIT=25] Text shown when there are no applications to display.
     */
    public static final int no_applications=0x7f110d44;
    /**
     * Summary for app with no battery usage [CHAR LIMIT=NONE]
     */
    public static final int no_battery_summary=0x7f110d45;
    /**
     * Summary for app with no battery usage for past 24 hours [CHAR LIMIT=NONE]
     */
    public static final int no_battery_summary_24hr=0x7f110d46;
    /**
     * Informational text about recent update time only, without carrier [CHAR LIMIT=30]
     */
    public static final int no_carrier_update_now_text=0x7f110d47;
    /**
     * Informational text about update time only, without carrier. First argument intentionally skipped. [CHAR LIMIT=30]
     */
    public static final int no_carrier_update_text=0x7f110d48;
    /**
     * Summary if there is no certificate management app [CHAR_LIMIT=NONE]
     */
    public static final int no_certificate_management_app=0x7f110d49;
    /**
     * [CHAR LIMIT=NONE] App notification settings: no channels
     */
    public static final int no_channels=0x7f110d4a;
    /**
     * Summary of data item when no data usage [CHAR LIMIT=40]
     */
    public static final int no_data_usage=0x7f110d4b;
    /**
     * [CHAR LIMIT=25] Text shown when there are no default Apps
     */
    public static final int no_default_apps=0x7f110d4c;
    /**
     * No default home set summary [CHAR LIMIT=NONE]
     */
    public static final int no_default_home=0x7f110d4d;
    /**
     * Message when there are no available device admin apps to display
     */
    public static final int no_device_admins=0x7f110d4e;
    public static final int no_internet_access_remember=0x7f110d4f;
    /**
     * Dialog text to tell the user that the selected network does not have Internet access.
     */
    public static final int no_internet_access_text=0x7f110d50;
    /**
     * Summary for no memory use for an app [CHAR LIMIT=NONE]
     */
    public static final int no_memory_use_summary=0x7f110d51;
    /**
     * Label for no NotificationAssistantService [CHAR_LIMIT=NONE]
     */
    public static final int no_notification_assistant=0x7f110d52;
    /**
     * String to show in the list of notification listeners, when none is installed
     */
    public static final int no_notification_listeners=0x7f110d53;
    /**
     * [CHAR LIMIT=25] Text shown when there are no services running
     */
    public static final int no_running_services=0x7f110d54;
    /**
     * Message displayed when there are no active services in a process.
     */
    public static final int no_services=0x7f110d55;
    /**
     * Message informs the user that has no SIM card in personalized Settings [CHAR LIMIT=30]
     */
    public static final int no_sim_card=0x7f110d56;
    /**
     * Message when there are no available trust agents to display
     */
    public static final int no_trust_agents=0x7f110d57;
    /**
     * String to show in the list of vr listeners, when none is installed
     */
    public static final int no_vr_listeners=0x7f110d58;
    /**
     * Label for non-carrier data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int non_carrier_data_usage=0x7f110d59;
    /**
     * A summary shown on data usage screens to indicate data tracking excluded from carrier networks [CHAR LIMIT=NONE]
     */
    public static final int non_carrier_data_usage_warning=0x7f110d5a;
    /**
     * Provider Model: Summary indicating that no other networks available [CHAR LIMIT=50]
     */
    public static final int non_carrier_network_unavailable=0x7f110d5b;
    /**
     * Available networks screen, toast when SIM card isn't allowed on a network [CHAR LIMIT=NONE]
     */
    public static final int not_allowed=0x7f110d5c;
    /**
     * [CHAR_LIMIT=NONE] Label for when app is ignoring battery optimizations
     */
    public static final int not_battery_optimizing=0x7f110d5d;
    /**
     * Content description of the cell data for not default subscription. [CHAR LIMIT=NONE]
     */
    public static final int not_default_data_content_description=0x7f110d5e;
    /**
     * [CHAR LIMIT=30] Manage applications, text telling using an application is not installed for the current user. The key part is that it's not installed.
     */
    public static final int not_installed=0x7f110d5f;
    public static final int not_set=0x7f110d60;
    /**
     * The notice header of Third-party licenses. not translatable
     */
    public static final int notice_header=0x7f110d61;
    public static final int notif_listener_excluded_app_screen_title=0x7f110d62;
    public static final int notif_listener_excluded_app_summary=0x7f110d63;
    /**
     * Per notification listener, a list of apps whose notifications this listener cannot see
     */
    public static final int notif_listener_excluded_app_title=0x7f110d64;
    public static final int notif_listener_not_migrated=0x7f110d65;
    public static final int notif_type_alerting=0x7f110d66;
    public static final int notif_type_alerting_summary=0x7f110d67;
    public static final int notif_type_conversation=0x7f110d68;
    public static final int notif_type_conversation_summary=0x7f110d69;
    public static final int notif_type_ongoing=0x7f110d6a;
    public static final int notif_type_ongoing_summary=0x7f110d6b;
    public static final int notif_type_silent=0x7f110d6c;
    public static final int notif_type_silent_summary=0x7f110d6d;
    /**
     * Button title that grants 'notification access' permission to an app [CHAR_LIMIT=60]
     */
    public static final int notification_access_detail_switch=0x7f110d6e;
    /**
     * [CHAR LIMIT=100] Notification Importance title
     */
    public static final int notification_alert_title=0x7f110d6f;
    /**
     * [CHAR LIMIT=NONE] Content description for per-app notification
     * settings button
     */
    public static final int notification_app_settings_button=0x7f110d70;
    /**
     * [CHAR LIMIT=100] Label for on/off toggle
     */
    public static final int notification_app_switch_label=0x7f110d71;
    /**
     * Summary for a warning message about security implications of enabling a notification
     * assistant, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int notification_assistant_security_warning_summary=0x7f110d72;
    /**
     * Title for a warning message about security implications of enabling a notification
     * assistant, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int notification_assistant_security_warning_title=0x7f110d73;
    /**
     * Summary of Notification Assistant provided features [CHAR LIMIT=NONE]
     */
    public static final int notification_assistant_summary=0x7f110d74;
    /**
     * Title for Notification Assistant setting  [CHAR LIMIT=30]
     */
    public static final int notification_assistant_title=0x7f110d75;
    /**
     * [CHAR LIMIT=NONE BACKUP_MESSAGE_ID:7166470350070693657] App notification settings: Badging option title
     */
    public static final int notification_badge_title=0x7f110d76;
    /**
     * Configure Notifications: Title for the notification badging option. [CHAR LIMIT=50 BACKUP_MESSAGE_ID=5125022693565388760]
     */
    public static final int notification_badging_title=0x7f110d77;
    /**
     * [CHAR LIMIT=100] Notification Importance title
     */
    public static final int notification_block_title=0x7f110d78;
    /**
     * Configure Notifications: Title for the notification bubbles option. [CHAR LIMIT=60]
     */
    public static final int notification_bubbles_title=0x7f110d79;
    /**
     * [CHAR LIMIT=NONE BACKUP_MESSAGE_ID:7166470350070693657] Channel notification settings: Badging option title
     */
    public static final int notification_channel_badge_title=0x7f110d7a;
    /**
     * [CHAR LIMIT=180] Notification settings: sound
     */
    public static final int notification_channel_sound_title=0x7f110d7b;
    /**
     * [CHAR LIMIT=150] Notification Importance title: normal importance level summary
     */
    public static final int notification_channel_summary_default=0x7f110d7c;
    /**
     * [CHAR LIMIT=150] Notification Importance title: high importance level summary
     */
    public static final int notification_channel_summary_high=0x7f110d7d;
    /**
     * [CHAR LIMIT=150] Notification Importance title: low importance level summary
     */
    public static final int notification_channel_summary_low=0x7f110d7e;
    /**
     * [CHAR LIMIT=150] Notification Importance title: min importance level summary
     */
    public static final int notification_channel_summary_min=0x7f110d7f;
    /**
     * [CHAR LIMIT=150] Notification Importance title: important conversation level summary
     */
    public static final int notification_channel_summary_priority=0x7f110d80;
    /**
     * [CHAR LIMIT=100] Notification channel title
     */
    public static final int notification_channel_title=0x7f110d81;
    /**
     * [CHAR LIMIT=NONE] App notification settings: channels title
     */
    public static final int notification_channels=0x7f110d82;
    /**
     * [CHAR LIMIT=NONE] App notification settings: non-grouped-channels title
     */
    public static final int notification_channels_other=0x7f110d83;
    /**
     * [CHAR LIMIT=NONE] Channel notification settings: Block option description
     */
    public static final int notification_content_block_summary=0x7f110d84;
    /**
     * [CHAR LIMIT=NONE] Channel notification settings: Block option title
     */
    public static final int notification_content_block_title=0x7f110d85;
    /**
     * [CHAR LIMIT=180] Notification conversation: add to home screen
     */
    public static final int notification_conversation_add_to_home=0x7f110d86;
    /**
     * [CHAR LIMIT=180] Notification conversation: important
     */
    public static final int notification_conversation_important=0x7f110d87;
    /**
     * [CHAR LIMIT=NONE] Conversation preference summary, the parent channel this conversation was spawned from (separator) the parent channel group (e.g. an account name)
     */
    public static final int notification_conversation_summary=0x7f110d88;
    /**
     * [CHAR LIMIT=150] Notification Importance title: low importance level summary
     */
    public static final int notification_conversation_summary_low=0x7f110d89;
    /**
     * Summary for the top level Notifications Settings [CHAR LIMIT=NONE]
     */
    public static final int notification_dashboard_summary=0x7f110d8a;
    /**
     * [CHAR LIMIT=200] Notification channel group title
     */
    public static final int notification_group_title=0x7f110d8b;
    /**
     * The divider symbol between different parts of the notification header including spaces. not translatable [CHAR LIMIT=3]
     */
    public static final int notification_header_divider_symbol_with_spaces=0x7f110d8c;
    /**
     * Configure notifications: settings title [CHAR LIMIT=100]
     */
    public static final int notification_history=0x7f110d8d;
    public static final int notification_history_dismiss=0x7f110d8e;
    /**
     * Notification history screen; summary when history is off [CHAR LIMIT=NONE]
     */
    public static final int notification_history_off_summary=0x7f110d8f;
    /**
     * Notification history screen; title when history is off [CHAR LIMIT=200]
     */
    public static final int notification_history_off_title_extended=0x7f110d90;
    /**
     * Notification history screen; content description describing what happens when you tap on a snoozed or recently dismissed notification [CHAR LIMIT=NONE]
     */
    public static final int notification_history_open_notification=0x7f110d91;
    public static final int notification_history_snooze=0x7f110d92;
    /**
     * Configure notifications: settings summary [CHAR LIMIT=NONE]
     */
    public static final int notification_history_summary=0x7f110d93;
    public static final int notification_history_title=0x7f110d94;
    public static final int notification_history_today=0x7f110d95;
    /**
     * Configure notifications: settings title [CHAR LIMIT=100]
     */
    public static final int notification_history_toggle=0x7f110d96;
    /**
     * Notification history screen; content description describing what happens when you tap on a notification history entry [CHAR LIMIT=NONE]
     */
    public static final int notification_history_view_settings=0x7f110d97;
    /**
     * [CHAR LIMIT=100] Notification Importance: blocked importance level description
     */
    public static final int notification_importance_blocked=0x7f110d98;
    /**
     * [CHAR LIMIT=100] Notification Importance: normal importance level description
     */
    public static final int notification_importance_default=0x7f110d99;
    /**
     * [CHAR LIMIT=100] Notification Importance title: normal importance level title
     */
    public static final int notification_importance_default_title=0x7f110d9a;
    /**
     * [CHAR LIMIT=100] Notification Importance template for the channel importance summary
     */
    public static final int notification_importance_divider=0x7f110d9b;
    /**
     * [CHAR LIMIT=100] Notification Importance: high importance level description
     */
    public static final int notification_importance_high=0x7f110d9c;
    /**
     * [CHAR LIMIT=100] Notification Importance: high importance level description,
     * when the user has picked high importance but disabled sound for it
     */
    public static final int notification_importance_high_silent=0x7f110d9d;
    /**
     * [CHAR LIMIT=100] Notification Importance title: high importance level title
     */
    public static final int notification_importance_high_title=0x7f110d9e;
    /**
     * [CHAR LIMIT=100] Notification Importance: low importance level description
     */
    public static final int notification_importance_low=0x7f110d9f;
    /**
     * [CHAR LIMIT=100] Notification Importance title: low importance level title
     */
    public static final int notification_importance_low_title=0x7f110da0;
    /**
     * [CHAR LIMIT=100] Notification Importance: min importance level description
     */
    public static final int notification_importance_min=0x7f110da1;
    /**
     * [CHAR LIMIT=100] Notification Importance title: min importance level title
     */
    public static final int notification_importance_min_title=0x7f110da2;
    /**
     * [CHAR LIMIT=100] Notification importance screen title
     */
    public static final int notification_importance_title=0x7f110da3;
    /**
     * [CHAR LIMIT=100 BACKUP_MESSAGE_ID=1820188704793497324] Notification Importance: unspecified importance level description
     */
    public static final int notification_importance_unspecified=0x7f110da4;
    /**
     * category header for apps allowed to read notifications. [CHAR LIMIT=45]
     */
    public static final int notification_listener_allowed=0x7f110da5;
    public static final int notification_listener_disable_warning_cancel=0x7f110da6;
    public static final int notification_listener_disable_warning_confirm=0x7f110da7;
    public static final int notification_listener_disable_warning_summary=0x7f110da8;
    /**
     * category header for apps not allowed to read notifications. [CHAR LIMIT=45]
     */
    public static final int notification_listener_not_allowed=0x7f110da9;
    /**
     * Summary for a warning message about security implications of enabling a notification
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int notification_listener_security_warning_summary=0x7f110daa;
    /**
     * Title for a warning message about security implications of enabling a notification
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int notification_listener_security_warning_title=0x7f110dab;
    public static final int notification_listener_type_title=0x7f110dac;
    public static final int notification_log_channel=0x7f110dad;
    /**
     * Notification log debug tool: header: notification actions list
     */
    public static final int notification_log_details_actions=0x7f110dae;
    /**
     * Notification log debug tool: header: notification alert info
     */
    public static final int notification_log_details_alerted=0x7f110daf;
    /**
     * Notification log debug tool: notification ashmem size
     */
    public static final int notification_log_details_ashmem=0x7f110db0;
    /**
     * Notification log debug tool: header: notification importance
     */
    public static final int notification_log_details_badge=0x7f110db1;
    /**
     * Notification log debug tool: header: notification contentIntent field
     */
    public static final int notification_log_details_content_intent=0x7f110db2;
    /**
     * Notification log debug tool: header: notification contentView
     */
    public static final int notification_log_details_content_view=0x7f110db3;
    /**
     * Notification log debug tool: header: notification deleteIntent field
     */
    public static final int notification_log_details_delete_intent=0x7f110db4;
    /**
     * Notification log debug tool: delimiter between header and field data
     */
    public static final int notification_log_details_delimiter=0x7f110db5;
    /**
     * Notification log debug tool: header: notification importance explanation
     */
    public static final int notification_log_details_explanation=0x7f110db6;
    /**
     * Notification log debug tool: header: notification extras
     */
    public static final int notification_log_details_extras=0x7f110db7;
    /**
     * Notification log debug tool: header: notification fullScreenIntent field
     */
    public static final int notification_log_details_full_screen_intent=0x7f110db8;
    /**
     * Notification log debug tool: header: notification group
     */
    public static final int notification_log_details_group=0x7f110db9;
    /**
     * Notification log debug tool: header: notification group summary suffix
     */
    public static final int notification_log_details_group_summary=0x7f110dba;
    /**
     * Notification log debug tool: header: notification icon
     */
    public static final int notification_log_details_icon=0x7f110dbb;
    /**
     * Notification log debug tool: header: notification importance
     */
    public static final int notification_log_details_importance=0x7f110dbc;
    /**
     * Notification log debug tool: header: notification key
     */
    public static final int notification_log_details_key=0x7f110dbd;
    /**
     * Notification log debug tool: the word 'none'
     */
    public static final int notification_log_details_none=0x7f110dbe;
    /**
     * Notification log debug tool: header: package name
     */
    public static final int notification_log_details_package=0x7f110dbf;
    /**
     * Notification log debug tool: header: notification size
     */
    public static final int notification_log_details_parcel=0x7f110dc0;
    /**
     * Notification log debug tool: header: notification priority
     */
    public static final int notification_log_details_priority=0x7f110dc1;
    /**
     * Notification log debug tool: header: notification public version
     */
    public static final int notification_log_details_public_version=0x7f110dc2;
    /**
     * Notification log debug tool: the word 'none'
     */
    public static final int notification_log_details_ranking_none=0x7f110dc3;
    /**
     * Notification log debug tool: missing ranking information
     */
    public static final int notification_log_details_ranking_null=0x7f110dc4;
    /**
     * Notification log debug tool: header: notification action remoteinput
     */
    public static final int notification_log_details_remoteinput=0x7f110dc5;
    /**
     * Notification log debug tool: header: title
     */
    public static final int notification_log_details_title=0x7f110dc6;
    /**
     * Notification log debug tool: header: notification visibility
     */
    public static final int notification_log_details_visibility=0x7f110dc7;
    /**
     * Notification log debug tool: missing title
     */
    public static final int notification_log_no_title=0x7f110dc8;
    public static final int notification_log_title=0x7f110dc9;
    /**
     * Configure Notifications: Title for the people notification strip option. [CHAR LIMIT=60]
     */
    public static final int notification_people_strip_title=0x7f110dca;
    /**
     * [CHAR LIMIT=150] Notification Importance title: important conversation level
     */
    public static final int notification_priority_title=0x7f110dcb;
    /**
     * Configure Notifications: Title for the pulse notification light option. [CHAR LIMIT=30]
     */
    public static final int notification_pulse_title=0x7f110dcc;
    /**
     * Sound: Title for the option defining the default notification sound. [CHAR LIMIT=30]
     */
    public static final int notification_ringtone_title=0x7f110dcd;
    /**
     * [CHAR LIMIT=NONE] Apps & notification settings: summary on the link to notification settings
     */
    public static final int notification_screen_summary=0x7f110dce;
    /**
     * Toast shown when an app in the work profile attempts to open notification settings. The apps in the work profile cannot access notification settings. [CHAR LIMIT=NONE]
     */
    public static final int notification_settings_work_profile=0x7f110dcf;
    /**
     * [CHAR LIMIT=180] Notification settings: lights
     */
    public static final int notification_show_lights_title=0x7f110dd0;
    /**
     * [CHAR LIMIT=100] Notification Importance title
     */
    public static final int notification_silence_title=0x7f110dd1;
    /**
     * Notification sound summary when chosen sound is the system default.
     */
    public static final int notification_sound_default=0x7f110dd2;
    /**
     * Sound settings screen, setting option title
     */
    public static final int notification_sound_dialog_title=0x7f110dd3;
    /**
     * Sound settings screen, setting option name
     */
    public static final int notification_sound_title=0x7f110dd4;
    /**
     * Summary of notification suggestion during optional steps of setup. [CHAR_LIMIT=80]
     */
    public static final int notification_suggestion_summary=0x7f110dd5;
    /**
     * Title of notification suggestion during optional steps of setup. [CHAR_LIMIT=60]
     */
    public static final int notification_suggestion_title=0x7f110dd6;
    /**
     * App notification summary channel divider
     */
    public static final int notification_summary_channel=0x7f110dd7;
    /**
     * App notification summary for advanced controls
     */
    public static final int notification_summary_level=0x7f110dd8;
    /**
     * Summary of notifications when no apps are blocked [CHAR LIMIT=NONE]
     */
    public static final int notification_summary_none=0x7f110dd9;
    /**
     * [CHAR LIMIT=100] Label for on/off toggle
     */
    public static final int notification_switch_label=0x7f110dda;
    /**
     * [CHAR LIMIT=NONE] App notification settings: notifications disabled
     */
    public static final int notification_toggle_off=0x7f110ddb;
    /**
     * [CHAR LIMIT=NONE] App notification settings: notifications enabled
     */
    public static final int notification_toggle_on=0x7f110ddc;
    /**
     * Sound: Sound title for apps that have not provided a title. [CHAR LIMIT=30]
     */
    public static final int notification_unknown_sound_title=0x7f110ddd;
    /**
     * [CHAR LIMIT=180] Notification settings: vibration
     */
    public static final int notification_vibrate_title=0x7f110dde;
    /**
     * Sound: Title for the option managing notification volume. [CHAR LIMIT=30]
     */
    public static final int notification_volume_option_title=0x7f110ddf;
    /**
     * Sound settings screen, the title of the volume bar to adjust the notification volume
     */
    public static final int notification_volume_title=0x7f110de0;
    /**
     * Bubble feature settings: Description shown with the toggle to turn bubbles on and off [CHAR LIMIT=NONE]
     */
    public static final int notifications_bubble_setting_description=0x7f110de1;
    /**
     * Bubble feature settings: Description for toggle when bubbles are turned on in notification settings [CHAR LIMIT=100]
     */
    public static final int notifications_bubble_setting_on_summary=0x7f110de2;
    /**
     * Bubble feature settings: Title of the toggle to turn bubbles on and off [CHAR LIMIT=100]
     */
    public static final int notifications_bubble_setting_title=0x7f110de3;
    /**
     * Label for showing apps with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int notifications_disabled=0x7f110de4;
    /**
     * App notification summary with notifications enabled [CHAR LIMIT=40]
     */
    public static final int notifications_enabled=0x7f110de5;
    /**
     * App notification summary with notifications enabled [CHAR LIMIT=40]
     */
    public static final int notifications_enabled_with_info=0x7f110de6;
    /**
     * App notification summary with notifications hidden [CHAR LIMIT=40]
     */
    public static final int notifications_hidden=0x7f110de7;
    /**
     * Label for notification settings for an specific app [CHAR LIMIT=40]
     */
    public static final int notifications_label=0x7f110de8;
    /**
     * Label for showing apps with some blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int notifications_partly_blocked=0x7f110de9;
    /**
     * App notification summary with notifications bypassing DND [CHAR LIMIT=40]
     */
    public static final int notifications_priority=0x7f110dea;
    /**
     * App notification summary with notifications redacted [CHAR LIMIT=70]
     */
    public static final int notifications_redacted=0x7f110deb;
    /**
     * app summary of notification app list screen [CHAR LIMIT=100]
     */
    public static final int notifications_sent_never=0x7f110dec;
    /**
     * App notification summary with notifications silenced [CHAR LIMIT=40]
     */
    public static final int notifications_silenced=0x7f110ded;
    /**
     * App notification summary divider [CHAR LIMIT=40]
     */
    public static final int notifications_summary_divider=0x7f110dee;
    /**
     * Notification Settings: Title for an individual app's notification settings. [CHAR LIMIT=30]
     */
    public static final int notifications_title=0x7f110def;
    /**
     * NR advanced calling(VoNR or Vo5G) summary.  [CHAR LIMIT=NONE]
     */
    public static final int nr_advanced_calling_summary=0x7f110df0;
    /**
     * NR advanced calling(VoNR or Vo5G) title.  [CHAR LIMIT=50]
     */
    public static final int nr_advanced_calling_title=0x7f110df1;
    /**
     * Summary of preference to manage device admin apps, informing the user that currently no device admin apps are installed and active
     */
    public static final int number_of_device_admins_none=0x7f110df2;
    /**
     * Information displayed after user locks OEM lock [Char Limit=None]
     */
    public static final int oem_lock_info_message=0x7f110df3;
    /**
     * Full package name of OEM preferred device feedback reporter. Leave this blank, overlaid in Settings/TvSettings [DO NOT TRANSLATE]
     */
    public static final int oem_preferred_feedback_reporter=0x7f110df4;
    /**
     * setting Checkbox title whether to enable OEM unlock [CHAR_LIMIT=35]
     */
    public static final int oem_unlock_enable=0x7f110df5;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because the bootloader has been unlocked [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_bootloader_unlocked=0x7f110df6;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because there is no connectivity. [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_connectivity=0x7f110df7;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because there is no connectivity or the device is locked by the carrier [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_connectivity_or_locked=0x7f110df8;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because this setting is unavailable on sim-locked devices. [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_sim_locked_device=0x7f110df9;
    /**
     * setting Checkbox summary whether to enable OEM unlock [CHAR_LIMIT=50]
     */
    public static final int oem_unlock_enable_summary=0x7f110dfa;
    /**
     * Button label for generic OK action [CHAR LIMIT=20]
     */
    public static final int okay=0x7f110dfb;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_cacrt=0x7f110dfc;
    /**
     * One-handed mode pull down screen into reach action title [CHAR_LIMIT=NONE]
     */
    public static final int one_handed_action_pull_down_screen_summary=0x7f110dfd;
    /**
     * One-handed mode pull down screen into reach action title [CHAR_LIMIT=60]
     */
    public static final int one_handed_action_pull_down_screen_title=0x7f110dfe;
    /**
     * One-handed mode show notification action [CHAR_LIMIT=NONE]
     */
    public static final int one_handed_action_show_notification_summary=0x7f110dff;
    /**
     * One-handed mode show notification action [CHAR_LIMIT=60]
     */
    public static final int one_handed_action_show_notification_title=0x7f110e00;
    /**
     * Preference Switch for enabling one handed [CHAR LIMIT=60]
     */
    public static final int one_handed_mode_enabled=0x7f110e01;
    /**
     * One-handed mode Intro Text [CHAR_LIMIT=NONE]
     */
    public static final int one_handed_mode_intro_text=0x7f110e02;
    /**
     * Title for accessibility shortcut preference for enabling one handed. [CHAR LIMIT=60]
     */
    public static final int one_handed_mode_shortcut_title=0x7f110e03;
    /**
     * Category title for one handed swipe down [CHAR_LIMIT=60]
     */
    public static final int one_handed_mode_swipe_down_category=0x7f110e04;
    /**
     * Category title for one handed use the shortcut [CHAR_LIMIT=60]
     */
    public static final int one_handed_mode_use_shortcut_category=0x7f110e05;
    /**
     * Preference and settings suggestion title text for one handed [CHAR LIMIT=60]
     */
    public static final int one_handed_title=0x7f110e06;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_usercrt=0x7f110e07;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_userkey=0x7f110e08;
    /**
     * Summary for on-screen keyboard settings
     */
    public static final int onscreen_keyboard_settings_summary=0x7f110e09;
    /**
     * Button label for opening an arbitrary app [CHAR LIMIT=60]
     */
    public static final int open_app_button=0x7f110e0a;
    /**
     * Footer of open supported links settings [CHAR LIMIT=NONE]
     */
    public static final int open_supported_links_footer=0x7f110e0b;
    /**
     * Opening string on the dialog that prompts the user to confirm that they really want to delete their existing work profile. The administration app icon and name appear after the final colon. [CHAR LIMIT=NONE]
     */
    public static final int opening_paragraph_delete_profile_unknown_company=0x7f110e0c;
    /**
     * A summary shown on data usage screens to indicate inaccuracy of data tracking [CHAR LIMIT=NONE]
     */
    public static final int operator_warning=0x7f110e0d;
    /**
     * Status message of OSU Provider after user completes provisioning flow [CHAR LIMIT=NONE]
     */
    public static final int osu_completing_sign_up=0x7f110e0e;
    /**
     * Status message of OSU Provider when connection fails [CHAR LIMIT=NONE]
     */
    public static final int osu_connect_failed=0x7f110e0f;
    /**
     * Status message of OSU Provider upon initiating provisioning flow [CHAR LIMIT=NONE]
     */
    public static final int osu_opening_provider=0x7f110e10;
    /**
     * Status message of OSU Provider on completing provisioning. [CHAR LIMIT=NONE]
     */
    public static final int osu_sign_up_complete=0x7f110e11;
    /**
     * Status message of OSU Provider when sign up could not be completed [CHAR LIMIT=NONE]
     */
    public static final int osu_sign_up_failed=0x7f110e12;
    /**
     * Title of the setting to disable the automatic update
     */
    public static final int ota_disable_automatic_update=0x7f110e13;
    /**
     * Summary for the setting to disable the automatic update
     */
    public static final int ota_disable_automatic_update_summary=0x7f110e14;
    /**
     * [CHAR LIMIT=100] preference category title
     */
    public static final int other_conversations=0x7f110e15;
    /**
     * summary for other conversations list
     */
    public static final int other_conversations_summary=0x7f110e16;
    /**
     * Other sounds and vibrations preference category: Title for the Other sounds and vibrations preference categories. [CHAR LIMIT=none]
     */
    public static final int other_sound_category_preference_title=0x7f110e17;
    /**
     * Sound: Title for the other sounds option and associated settings page. [CHAR LIMIT=30]
     */
    public static final int other_sound_settings=0x7f110e18;
    /**
     * UI debug setting: simulate secondary display devices using overlays [CHAR LIMIT=45]
     */
    public static final int overlay_display_devices_title=0x7f110e19;
    /**
     * [CHAR_LIMIT=NONE] Developer Settings: Label for the option that turns off all overlays in a given category.
     */
    public static final int overlay_option_device_default=0x7f110e1a;
    /**
     * Main settings screen item's title to go into the overlay settings screen [CHAR LIMIT=30]
     */
    public static final int overlay_settings=0x7f110e1b;
    /**
     * Summary for allowing screen overlays on Settings app. [CHAR LIMIT=NONE]
     */
    public static final int overlay_settings_summary=0x7f110e1c;
    /**
     * Title for allowing screen overlays on Settings app. [CHAR LIMIT=50]
     */
    public static final int overlay_settings_title=0x7f110e1d;
    /**
     * [CHAR_LIMIT=NONE] Developer Settings: Toast displayed to the user when an overlay fails to apply.
     */
    public static final int overlay_toast_failed_to_apply=0x7f110e1e;
    /**
     * Hint text shown in owner info edit text [CHAR LIMIT=50]
     */
    public static final int owner_info_settings_edit_text_hint=0x7f110e1f;
    /**
     * Description of how many characters are used in owner info [CHAR LIMIT=40]
     */
    public static final int owner_info_settings_status=0x7f110e20;
    /**
     * Text shown for summary of owner info setting (if none set) [CHAR LIMIT=40]
     */
    public static final int owner_info_settings_summary=0x7f110e21;
    /**
     * Text shown for title of owner info setting [CHAR LIMIT=30]
     */
    public static final int owner_info_settings_title=0x7f110e22;
    /**
     * Subtitle for list of packages
     */
    public static final int packages_subtitle=0x7f110e23;
    /**
     * Setting tab title for all setting options. [CHAR LIMIT=20]
     */
    public static final int page_tab_title_summary=0x7f110e24;
    /**
     * Setting tab title for support setting options. [CHAR LIMIT=25]
     */
    public static final int page_tab_title_support=0x7f110e25;
    /**
     * Dialog text to tell the user that the selected network has incomplete Internet access. [CHAR LIMIT=100]
     */
    public static final int partial_connectivity_text=0x7f110e26;
    /**
     * Content for Passpoint network
     */
    public static final int passpoint_content=0x7f110e27;
    /**
     * Label for Passpoint network
     */
    public static final int passpoint_label=0x7f110e28;
    public static final int password_toggle_content_description=0x7f110e29;
    public static final int path_password_eye=0x7f110e2a;
    public static final int path_password_eye_mask_strike_through=0x7f110e2b;
    public static final int path_password_eye_mask_visible=0x7f110e2c;
    public static final int path_password_strike_through=0x7f110e2d;
    /**
     * Summary of payment screen [CHAR LIMIT=NONE]
     */
    public static final int payment_summary=0x7f110e2e;
    /**
     * Display settings screen, peak refresh rate settings summary [CHAR LIMIT=NONE]
     */
    public static final int peak_refresh_rate_summary=0x7f110e2f;
    /**
     * Display settings screen, peak refresh rate settings summary [CHAR LIMIT=NONE]
     */
    public static final int peak_refresh_rate_summary_custom=0x7f110e30;
    /**
     * Display settings screen, peak refresh rate settings title [CHAR LIMIT=30]
     */
    public static final int peak_refresh_rate_title=0x7f110e31;
    /**
     * Text for permission bar chart details in Privacy page.  [CHAR LIMIT=NONE]
     */
    public static final int permission_bar_chart_details=0x7f110e32;
    /**
     * Text to display when no app used permission.  [CHAR LIMIT=NONE]
     */
    public static final int permission_bar_chart_empty_text=0x7f110e33;
    /**
     * Text for permission bar chart title in Privacy page.  [CHAR LIMIT=NONE]
     */
    public static final int permission_bar_chart_title=0x7f110e34;
    /**
     * Manage applications, individual application info screen, heading for settings related to the app's permissions. for example, it may list all the permissions the app has.
     */
    public static final int permissions_label=0x7f110e35;
    /**
     * Permissions usage summary, which describes what the permissions usage does [CHAR LIMIT=NONE]
     */
    public static final int permissions_usage_summary=0x7f110e36;
    /**
     * Permissions usage title [CHAR LIMIT=NONE]
     */
    public static final int permissions_usage_title=0x7f110e37;
    /**
     * Label for setting which controls whether app can display over other apps [CHAR LIMIT=45]
     */
    public static final int permit_draw_overlay=0x7f110e38;
    /**
     * Label for a setting which controls whether an app can manage external storage [CHAR LIMIT=45]
     */
    public static final int permit_manage_external_storage=0x7f110e39;
    /**
     * Label for setting which controls whether app has usage access [CHAR LIMIT=45]
     */
    public static final int permit_usage_access=0x7f110e3a;
    /**
     * Label for setting which controls whether app can write system settings [CHAR LIMIT=45]
     */
    public static final int permit_write_settings=0x7f110e3b;
    /**
     * Personal data section title
     */
    public static final int personal_data_section_title=0x7f110e3c;
    /**
     * Subtext of personal profile app for current setting [CHAR LIMIT=NONE]
     */
    public static final int personal_profile_app_subtext=0x7f110e3d;
    /**
     * On Text & language settings screen, setting option name. title of the setting to take the user to a screen to select the locale.
     */
    public static final int phone_language=0x7f110e3e;
    /**
     * On Text & language settings screen, setting option name. summary of the setting to take the user to a screen to select the locale.
     */
    public static final int phone_language_summary=0x7f110e3f;
    /**
     * Title for the 'physical keyboard' settings screen. [CHAR LIMIT=35]
     */
    public static final int physical_keyboard_title=0x7f110e40;
    /**
     * Name of feature to change color setting for the display [CHAR LIMIT=60]
     */
    public static final int picture_color_mode=0x7f110e41;
    /**
     * Description of feature to change color setting for the display [CHAR LIMIT=NONE]
     */
    public static final int picture_color_mode_desc=0x7f110e42;
    /**
     * Apps > App Details > Picture-in-picture > Description. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_app_detail_summary=0x7f110e43;
    /**
     * Apps > App Details > Picture-in-picture > Switch title. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_app_detail_switch=0x7f110e44;
    /**
     * Apps > App Details > Advanced section string title. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_app_detail_title=0x7f110e45;
    /**
     * Special access > Picture-in-picture > Text to display when the list is empty. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_empty_text=0x7f110e46;
    /**
     * Special access > Picture-in-picture > Additional keywords to search for. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_keywords=0x7f110e47;
    /**
     * Special access > Title for managing Picture-in-picture settings. [CHAR LIMIT=50]
     */
    public static final int picture_in_picture_title=0x7f110e48;
    /**
     * Instructions telling the user that the operation to unlock the keyguard with SIM PIN failed. Displayed in one line in a large font.  [CHAR LIMIT=40]
     */
    public static final int pin_failed=0x7f110e49;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int ping_test_label=0x7f110e4a;
    /**
     * Summary for App Compatibility Changes dashboard [CHAR LIMIT=NONE]
     */
    public static final int platform_compat_dashboard_summary=0x7f110e4b;
    /**
     * Title for App Compatibility Changes dashboard where developers can configure per-app overrides for compatibility changes [CHAR LIMIT=50]
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     * no translation found for graphics_driver_app_preference_values:3 (2586045835780389650)
     */
    public static final int platform_compat_dashboard_title=0x7f110e4c;
    /**
     * Title for default disabled app compat changes category [CHAR LIMIT=50]
     */
    public static final int platform_compat_default_disabled_title=0x7f110e4d;
    /**
     * Title for default enabled app compat changes category [CHAR LIMIT=50]
     */
    public static final int platform_compat_default_enabled_title=0x7f110e4e;
    /**
     * Explanatory text shown when no debuggable apps are available [CHAR LIMIT=NONE]
     */
    public static final int platform_compat_dialog_text_no_apps=0x7f110e4f;
    /**
     * Title for the dialog shown when no debuggable apps are available [CHAR LIMIT=30]
     */
    public static final int platform_compat_dialog_title_no_apps=0x7f110e50;
    /**
     * Summary for selected app [DO NOT TRANSLATE]
     */
    public static final int platform_compat_selected_app_summary=0x7f110e51;
    /**
     * Title for target SDK gated app compat changes category (do not translate 'targetSdkVersion') [CHAR LIMIT=50]
     */
    public static final int platform_compat_target_sdk_title=0x7f110e52;
    /**
     * Label for the phase2
     */
    public static final int please_select_phase2=0x7f110e53;
    /**
     * UI debug setting: show pointer location? [CHAR LIMIT=25]
     */
    public static final int pointer_location=0x7f110e54;
    /**
     * UI debug setting: show pointer location summary [CHAR LIMIT=50]
     */
    public static final int pointer_location_summary=0x7f110e55;
    /**
     * On Languages & input settings screen, setting summary.  Setting for mouse pointer speed. [CHAR LIMIT=35]
     */
    public static final int pointer_speed=0x7f110e56;
    /**
     * The body text of post DSDS reboot notification. [CHAR LIMIT=NONE]
     */
    public static final int post_dsds_reboot_notification_text=0x7f110e57;
    /**
     * The title of post DSDS reboot notification. The title includes carrier's name. [CHAR LIMIT=NONE]
     */
    public static final int post_dsds_reboot_notification_title_with_carrier=0x7f110e58;
    /**
     * Label for power consumed by Bluetooth
     */
    public static final int power_bluetooth=0x7f110e59;
    /**
     * Label for power consumed by the camera
     */
    public static final int power_camera=0x7f110e5a;
    /**
     * Label for power consumed by Mobile network
     */
    public static final int power_cell=0x7f110e5b;
    /**
     * Display time remaining until battery is charged [CHAR_LIMIT=60]
     */
    public static final int power_charge_remaining=0x7f110e5c;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when charging
     */
    public static final int power_charging=0x7f110e5d;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when charging with duration
     */
    public static final int power_charging_duration=0x7f110e5e;
    /**
     * [CHAR_LIMIT=80] Label for battery level chart when charge been limited
     */
    public static final int power_charging_limited=0x7f110e5f;
    /**
     * [CHAR_LIMIT=100] Label for estimated time that phone will run out of battery
     */
    public static final int power_discharge_by=0x7f110e60;
    /**
     * [CHAR_LIMIT=100] Label for enhanced estimated time that phone will run out of battery
     */
    public static final int power_discharge_by_enhanced=0x7f110e61;
    /**
     * [CHAR_LIMIT=100] Label for estimated time that phone will run out of battery
     */
    public static final int power_discharge_by_only=0x7f110e62;
    /**
     * [CHAR_LIMIT=100] Label for enhanced estimated time that phone will run out of battery with no percentage
     */
    public static final int power_discharge_by_only_enhanced=0x7f110e63;
    /**
     * [CHAR_LIMIT=20] Label for estimated time that phone will run out of battery
     */
    public static final int power_discharge_by_only_short=0x7f110e64;
    /**
     * Display time remaining until battery is discharged [CHAR_LIMIT=60]
     */
    public static final int power_discharge_remaining=0x7f110e65;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when discharging with duration
     */
    public static final int power_discharging_duration=0x7f110e66;
    /**
     * [CHAR_LIMIT=60] Label for battery level chart when discharging with duration and using enhanced estimate
     */
    public static final int power_discharging_duration_enhanced=0x7f110e67;
    /**
     * Label for power consumed by the flashlight
     */
    public static final int power_flashlight=0x7f110e68;
    /**
     * Label for power consumed when Idle
     */
    public static final int power_idle=0x7f110e69;
    /**
     * Power menu setting use long press power to invoke assistant. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_long_press_for_assist=0x7f110e6a;
    /**
     * Label at the highest end of duration slider for long press power invocation of assistant. [CHAR LIMIT=30]
     */
    public static final int power_menu_long_press_for_assist_sensitivity_high_label=0x7f110e6b;
    /**
     * Label at the lowest end of duration slider for long press power invocation of assistant. [CHAR LIMIT=30]
     */
    public static final int power_menu_long_press_for_assist_sensitivity_low_label=0x7f110e6c;
    /**
     * Power menu summary of the seekbar setting controlling duration of how long the power button must be held to invoke assistant. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_long_press_for_assist_sensitivity_summary=0x7f110e6d;
    /**
     * Power menu title of the seekbar setting controlling duration of how long the power button must be held to invoke assistant. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_long_press_for_assist_sensitivity_title=0x7f110e6e;
    /**
     * Power menu setting use log press power to invoke assistant summary. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_long_press_for_assist_summary=0x7f110e6f;
    /**
     * Power menu explanation where to find prevent ringing option. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_power_prevent_ringing_hint=0x7f110e70;
    /**
     * Power menu explanation to press power and volume up to show power and emergency menu. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_power_volume_up_hint=0x7f110e71;
    /**
     * Power menu setting name [CHAR LIMIT=NONE]
     */
    public static final int power_menu_setting_name=0x7f110e72;
    /**
     * Power menu setting summary to describe press and hold power button for Assistant is disabled and nothing will happen. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_summary_long_press_for_assist_disabled_no_action=0x7f110e73;
    /**
     * Power menu setting summary to describe press and hold power button for Assistant is disabled and power menu will appear. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_summary_long_press_for_assist_disabled_with_power_menu=0x7f110e74;
    /**
     * Power menu setting summary to describe press and hold power button for Assistant is enabled. [CHAR LIMIT=NONE]
     */
    public static final int power_menu_summary_long_press_for_assist_enabled=0x7f110e75;
    /**
     * Label for power that we computed too much for
     */
    public static final int power_overcounted=0x7f110e76;
    /**
     * Label for power consumed by Calling
     */
    public static final int power_phone=0x7f110e77;
    /**
     * [CHAR_LIMIT=40] Label for estimated remaining duration of battery charging
     */
    public static final int power_remaining_charging_duration_only=0x7f110e78;
    /**
     * [CHAR_LIMIT=40] Label for estimated remaining duration of battery discharging
     */
    public static final int power_remaining_duration_only=0x7f110e79;
    /**
     * [CHAR_LIMIT=60] Label for estimated remaining duration of battery discharging
     */
    public static final int power_remaining_duration_only_enhanced=0x7f110e7a;
    /**
     * [CHAR_LIMIT=20] Short label for estimated remaining duration of battery charging/discharging
     */
    public static final int power_remaining_duration_only_short=0x7f110e7b;
    /**
     * [CHAR_LIMIT=50] Short label for imminent shutdown warning of device
     */
    public static final int power_remaining_duration_only_shutdown_imminent=0x7f110e7c;
    /**
     * [CHAR_LIMIT=60] Label for battery level chart when shutdown is imminent
     */
    public static final int power_remaining_duration_shutdown_imminent=0x7f110e7d;
    /**
     * [CHAR_LIMIT=60] label for estimated remaining duration of battery when under a certain amount with the percentage
     */
    public static final int power_remaining_less_than_duration=0x7f110e7e;
    /**
     * [CHAR_LIMIT=60] label for estimated remaining duration of battery when under a certain amount
     */
    public static final int power_remaining_less_than_duration_only=0x7f110e7f;
    /**
     * Used to let users know that they have more than some amount of battery life remaining with percentage. ex: 75% - more than 1 day remaining [CHAR LIMIT = 80]
     */
    public static final int power_remaining_more_than_subtext=0x7f110e80;
    /**
     * Used to let users know that they have more than some amount of battery life remaining. ex: more than 1 day remaining [CHAR LIMIT = 40]
     */
    public static final int power_remaining_only_more_than_subtext=0x7f110e81;
    /**
     * [CHAR_LIMIT=NONE] Label for battery on main page of settings
     */
    public static final int power_remaining_settings_home_page=0x7f110e82;
    /**
     * Label for power consumed by the screen
     */
    public static final int power_screen=0x7f110e83;
    /**
     * [CHAR_LIMIT=100] Label for estimated time that phone will run out of battery
     */
    public static final int power_suggestion_battery_run_out=0x7f110e84;
    /**
     * Label for power that we aren't able to account for
     */
    public static final int power_unaccounted=0x7f110e85;
    /**
     * Temp string used to debug new battery estimates [DO NOT TRANSLATE]
     */
    public static final int power_usage_enhanced_debug=0x7f110e86;
    /**
     * Display the battery level and status [CHAR_LIMIT=60]
     */
    public static final int power_usage_level_and_status=0x7f110e87;
    /**
     * Label for list of apps using battery in power use UI. Note: ^1 should be used in all translations[CHAR_LIMIT=120]
     */
    public static final int power_usage_list_summary=0x7f110e88;
    /**
     * Message to show when battery usage data is not available [CHAR LIMIT=30]
     */
    public static final int power_usage_not_available=0x7f110e89;
    /**
     * Temp string used to debug old battery estimates [DO NOT TRANSLATE]
     */
    public static final int power_usage_old_debug=0x7f110e8a;
    /**
     * Activity title summary for App Fuel Gauge summary
     */
    public static final int power_usage_summary=0x7f110e8b;
    /**
     * Activity title for App Fuel Gauge summary
     */
    public static final int power_usage_summary_title=0x7f110e8c;
    /**
     * Label for power consumed by Wi-Fi
     */
    public static final int power_wifi=0x7f110e8d;
    /**
     * Title for detail page of wifi network [CHAR LIMIT=30]
     */
    public static final int pref_title_network_details=0x7f110e8e;
    /**
     * Preference item that lets the user change password
     */
    public static final int preference_change_password_title=0x7f110e8f;
    public static final int preference_copied=0x7f110e90;
    /**
     * Summary text separator for preferences including a short description (eg. "Fast / Connected").
     */
    public static final int preference_summary_default_combination=0x7f110e91;
    /**
     * CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_cdma_evdo_gsm_wcdma_summary=0x7f110e92;
    /**
     * CDMA / EvDo [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_cdma_evdo_summary=0x7f110e93;
    /**
     * CDMA only [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_cdma_only_summary=0x7f110e94;
    /**
     * CDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_cdma_summary=0x7f110e95;
    /**
     * Dialog title for preferred network type [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_dialogtitle=0x7f110e96;
    /**
     * EvDo only [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_evdo_only_summary=0x7f110e97;
    /**
     * Global [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_global_summary=0x7f110e98;
    /**
     * GSM only [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_gsm_only_summary=0x7f110e99;
    /**
     * GSM / WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_gsm_wcdma_summary=0x7f110e9a;
    /**
     * LTE/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_cdma_evdo_gsm_wcdma_summary=0x7f110e9b;
    /**
     * CDMA+LTE/EVDO [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_cdma_evdo_summary=0x7f110e9c;
    /**
     * LTE / CDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_cdma_summary=0x7f110e9d;
    /**
     * LTE / GSM / UMTS [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_gsm_umts_summary=0x7f110e9e;
    /**
     * GSM/WCDMA/LTE [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_gsm_wcdma_summary=0x7f110e9f;
    /**
     * LTE [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_summary=0x7f110ea0;
    /**
     * LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_tdscdma_cdma_evdo_gsm_wcdma_summary=0x7f110ea1;
    /**
     * LTE/GSM/TDSCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_tdscdma_gsm_summary=0x7f110ea2;
    /**
     * LTE/TDSCDMA/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_tdscdma_gsm_wcdma_summary=0x7f110ea3;
    /**
     * LTE / TDSCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_tdscdma_summary=0x7f110ea4;
    /**
     * LTE/TDSCDMA/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_tdscdma_wcdma_summary=0x7f110ea5;
    /**
     * LTE / WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_lte_wcdma_summary=0x7f110ea6;
    /**
     * NR/LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_cdma_evdo_gsm_wcdma_summary=0x7f110ea7;
    /**
     * NR/LTE/CDMA/EvDo [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_cdma_evdo_summary=0x7f110ea8;
    /**
     * NR/LTE/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_gsm_wcdma_summary=0x7f110ea9;
    /**
     * NR / LTE [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_summary=0x7f110eaa;
    /**
     * NR/LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_cdma_evdo_gsm_wcdma_summary=0x7f110eab;
    /**
     * NR/LTE/TDSCDMA/GSM [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_gsm_summary=0x7f110eac;
    /**
     * NR/LTE/TDSCDMA/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_gsm_wcdma_summary=0x7f110ead;
    /**
     * NR/LTE/TDSCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_summary=0x7f110eae;
    /**
     * NR/LTE/TDSCDMA/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_tdscdma_wcdma_summary=0x7f110eaf;
    /**
     * NR/LTE/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_lte_wcdma_summary=0x7f110eb0;
    /**
     * NR only [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_nr_only_summary=0x7f110eb1;
    /**
     * Summary for preferred network type [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_summary=0x7f110eb2;
    /**
     * TDSCDMA/CDMA/EvDo/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_tdscdma_cdma_evdo_gsm_wcdma_summary=0x7f110eb3;
    /**
     * TDSCDMA / GSM [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_tdscdma_gsm_summary=0x7f110eb4;
    /**
     * TDSCDMA/GSM/WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_tdscdma_gsm_wcdma_summary=0x7f110eb5;
    /**
     * TDSCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_tdscdma_summary=0x7f110eb6;
    /**
     * TDSCDMA / WCDMA [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_tdscdma_wcdma_summary=0x7f110eb7;
    /**
     * Title for preferred network type [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_title=0x7f110eb8;
    /**
     * WCDMA only [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_wcdma_only_summary=0x7f110eb9;
    /**
     * WCDMA preferred [CHAR LIMIT=NONE]
     */
    public static final int preferred_network_mode_wcdma_perf_summary=0x7f110eba;
    /**
     * Preferred Network offload Footer.  [CHAR LIMIT=100]
     */
    public static final int preferred_network_offload_footer=0x7f110ebb;
    /**
     * Preferred Network offload Header.  [CHAR LIMIT=25]
     */
    public static final int preferred_network_offload_header=0x7f110ebc;
    /**
     * Preferred Network offload Popup.  [CHAR LIMIT=100]
     */
    public static final int preferred_network_offload_popup=0x7f110ebd;
    /**
     * Preferred Network offload title.  [CHAR LIMIT=25]
     */
    public static final int preferred_network_offload_title=0x7f110ebe;
    /**
     * Preferred network type summary.  [CHAR LIMIT=100]
     */
    public static final int preferred_network_type_summary=0x7f110ebf;
    /**
     * Preferred network type title.  [CHAR LIMIT=50]
     */
    public static final int preferred_network_type_title=0x7f110ec0;
    /**
     * Title of screen controlling which apps have access to send premium SMS messages [CHAR LIMIT=60]
     */
    public static final int premium_sms_access=0x7f110ec1;
    /**
     * Message shown when there are no premium SMS apps [CHAR LIMIT=NONE]
     */
    public static final int premium_sms_none=0x7f110ec2;
    /**
     * Warning message shown between options to enable Premium SMS for an app [CHAR LIMIT=NONE]
     */
    public static final int premium_sms_warning=0x7f110ec3;
    /**
     * Title for prevent ringing main switch. [CHAR LIMIT=50]
     */
    public static final int prevent_ringing_main_switch_title=0x7f110ec4;
    /**
     * Option for prevent ringing setting
     */
    public static final int prevent_ringing_option_mute=0x7f110ec5;
    /**
     * Summary for prevent ringing setting
     */
    public static final int prevent_ringing_option_mute_summary=0x7f110ec6;
    /**
     * Option for prevent ringing setting
     */
    public static final int prevent_ringing_option_none=0x7f110ec7;
    /**
     * Summary for prevent ringing setting when the option itself is unavailable. [CHAR LIMIT=NONE]
     */
    public static final int prevent_ringing_option_unavailable_lpp_summary=0x7f110ec8;
    /**
     * Option for prevent ringing setting
     */
    public static final int prevent_ringing_option_vibrate=0x7f110ec9;
    /**
     * Summary for prevent ringing setting
     */
    public static final int prevent_ringing_option_vibrate_summary=0x7f110eca;
    /**
     * Content description for dot pager indicator for preview pager. [CHAR LIMIT=NONE]
     */
    public static final int preview_page_indicator_content_description=0x7f110ecb;
    /**
     * Content description for preview pager. [CHAR LIMIT=NONE]
     */
    public static final int preview_pager_content_description=0x7f110ecc;
    /**
     * Title to see all the previous connected devices [CHAR LIMIT=50]
     */
    public static final int previous_connected_see_all=0x7f110ecd;
    /**
     * Content description of the previous button to bring user to the previous preview page.
     */
    public static final int previous_page_content_description=0x7f110ece;
    /**
     * Template for the label of the state for a blocked print job. [CHAR LIMIT=25]
     */
    public static final int print_blocked_state_title_template=0x7f110ecf;
    /**
     * Title for the button to cancel a print job. [CHAR LIMIT=25]
     */
    public static final int print_cancel=0x7f110ed0;
    /**
     * Template for the label for a cancelling print job. [CHAR LIMIT=25]
     */
    public static final int print_cancelling_state_title_template=0x7f110ed1;
    /**
     * Template for the label for a configuring print job (i.e. the user is currently selecting the paper size and printer to use). [CHAR LIMIT=25]
     */
    public static final int print_configuring_state_title_template=0x7f110ed2;
    /**
     * Template for the label of the state for a failed print job. [CHAR LIMIT=25]
     */
    public static final int print_failed_state_title_template=0x7f110ed3;
    /**
     * Summary for the disabled state of a print feature. [CHAR LIMIT=10]
     */
    public static final int print_feature_state_off=0x7f110ed4;
    /**
     * Summary for the enabled state of a print feature. [CHAR LIMIT=10]
     */
    public static final int print_feature_state_on=0x7f110ed5;
    /**
     * Template for the summary of a print job. [CHAR LIMIT=25]
     */
    public static final int print_job_summary=0x7f110ed6;
    /**
     * Title of the action bar button to got to add a printer. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_add_printer=0x7f110ed7;
    /**
     * Title for print menu item to launch the add printers activity. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_add_printers=0x7f110ed8;
    /**
     * Title of the action bar button to got to Play Store to download a print service. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_add_service=0x7f110ed9;
    /**
     * Title for the search action bar menu item. [CHAR LIMIT=20]
     */
    public static final int print_menu_item_search=0x7f110eda;
    /**
     * Title for print menu item to launch a settings activity. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_settings=0x7f110edb;
    /**
     * Title for the prompt shown as a placeholder if no printers are found while searching. [CHAR LIMIT=50]
     */
    public static final int print_no_printers_found=0x7f110edc;
    /**
     * Title for the prompt shown as a placeholder if no print services are installed. [CHAR LIMIT=50]
     */
    public static final int print_no_services_installed=0x7f110edd;
    /**
     * Title for the print job settings screen. [CHAR LIMIT=25]
     */
    public static final int print_print_job=0x7f110ede;
    /**
     * Title for the menu item to open the print jobs screen. [CHAR LIMIT=25]
     */
    public static final int print_print_jobs=0x7f110edf;
    /**
     * Template for the label of the state for a ongoing print job. [CHAR LIMIT=25]
     */
    public static final int print_printing_state_title_template=0x7f110ee0;
    /**
     * Title for the button to restart a print job. [CHAR LIMIT=25]
     */
    public static final int print_restart=0x7f110ee1;
    /**
     * Utterance to announce that the search box is hidden. This is spoken to a blind user. [CHAR LIMIT=none]
     */
    public static final int print_search_box_hidden_utterance=0x7f110ee2;
    /**
     * Utterance to announce that the search box is shown. This is spoken to a blind user. [CHAR LIMIT=none]
     */
    public static final int print_search_box_shown_utterance=0x7f110ee3;
    /**
     * Title for the prompt if no printers are available and the system is searching for such. [CHAR LIMIT=50]
     */
    public static final int print_searching_for_printers=0x7f110ee4;
    /**
     * Title for the prompt if no printers are available because the print service is disabled. [CHAR LIMIT=50]
     */
    public static final int print_service_disabled=0x7f110ee5;
    /**
     * Title in main settings screen for printing settings [CHAR LIMIT=15]
     */
    public static final int print_settings=0x7f110ee6;
    /**
     * Print setting summary in settings screen [CHAR LIMIT=50]
     */
    public static final int print_settings_summary_no_service=0x7f110ee7;
    /**
     * Title for print service settings screen [CHAR LIMIT=25]
     */
    public static final int print_settings_title=0x7f110ee8;
    /**
     * Description of printer info icon. [CHAR LIMIT=50]
     */
    public static final int printer_info_desc=0x7f110ee9;
    /**
     * [CHAR LIMIT=100] summary text on link to 'all conversations' page, no conversations are priority
     */
    public static final int priority_conversation_count_zero=0x7f110eea;
    /**
     * Summary for the top level Privacy Settings [CHAR LIMIT=NONE]
     */
    public static final int privacy_dashboard_summary=0x7f110eeb;
    /**
     * Title for the top level Privacy Settings [CHAR LIMIT=30]
     */
    public static final int privacy_dashboard_title=0x7f110eec;
    /**
     * Backup and reset settings menu and activity title
     */
    public static final int privacy_settings_title=0x7f110eed;
    /**
     * Summary for connected network without internet due to private dns validation failed [CHAR LIMIT=NONE]
     */
    public static final int private_dns_broken=0x7f110eee;
    /**
     * Message of private dns that provides a help link. [CHAR LIMIT=NONE]
     */
    public static final int private_dns_help_message=0x7f110eef;
    public static final int private_dns_mode_off=0x7f110ef0;
    /**
     * Message to display when private dns is on. [CHAR LIMIT=10]
     */
    public static final int private_dns_mode_on=0x7f110ef1;
    public static final int private_dns_mode_opportunistic=0x7f110ef2;
    public static final int private_dns_mode_provider=0x7f110ef3;
    public static final int private_dns_mode_provider_failure=0x7f110ef4;
    public static final int private_dns_mode_provider_hostname_hint=0x7f110ef5;
    /**
     * Body text of error message indicating the device could not disable the mobile network, due to an unknown issue. [CHAR LIMIT=NONE]
     */
    public static final int privileged_action_disable_fail_text=0x7f110ef6;
    /**
     * Title of error messaging indicating the device could not disable the mobile network. [CHAR LIMIT=NONE]
     */
    public static final int privileged_action_disable_fail_title=0x7f110ef7;
    /**
     * Disabling SIMs progress dialog message [CHAR LIMIT=NONE]
     */
    public static final int privileged_action_disable_sub_dialog_progress=0x7f110ef8;
    /**
     * Title of confirmation dialog asking the user if they want to disable subscription. [CHAR_LIMIT=NONE]
     */
    public static final int privileged_action_disable_sub_dialog_title=0x7f110ef9;
    /**
     * Title of confirmation dialog asking the user if they want to disable subscription. [CHAR_LIMIT=NONE]
     */
    public static final int privileged_action_disable_sub_dialog_title_without_carrier=0x7f110efa;
    /**
     * Label for dex2oat process in battery usage used for the optimization of one or more apps
     */
    public static final int process_dex2oat_label=0x7f110efb;
    /**
     * Label for process [CHAR LIMIT=25]
     */
    public static final int process_format=0x7f110efc;
    /**
     * Label for kernel threads in battery usage
     */
    public static final int process_kernel_label=0x7f110efd;
    /**
     * Label for mediaserver process in battery usage
     */
    public static final int process_mediaserver_label=0x7f110efe;
    /**
     * Message that a process's provider is in use.
     */
    public static final int process_provider_in_use_description=0x7f110eff;
    /**
     * Message that a process's service is in use.
     */
    public static final int process_service_in_use_description=0x7f110f00;
    /**
     * [CHAR LIMIT=NONE] Label for item showing details of average RAM use
     */
    public static final int process_stats_bg_ram_use=0x7f110f01;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for base memory needed for caches
     */
    public static final int process_stats_os_cache=0x7f110f02;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for all kernel memory
     */
    public static final int process_stats_os_kernel=0x7f110f03;
    /**
     * [CHAR LIMIT=NONE] Label OS "process" app
     */
    public static final int process_stats_os_label=0x7f110f04;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for all native processes
     */
    public static final int process_stats_os_native=0x7f110f05;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for all zram memory
     */
    public static final int process_stats_os_zram=0x7f110f06;
    /**
     * [CHAR LIMIT=NONE] Label for item showing details of average RAM use
     */
    public static final int process_stats_ram_use=0x7f110f07;
    /**
     * [CHAR LIMIT=NONE] Label for item showing percent of time spent running
     */
    public static final int process_stats_run_time=0x7f110f08;
    /**
     * [CHAR LIMIT=NONE] Activity title summary for Process Stats summary
     */
    public static final int process_stats_summary=0x7f110f09;
    /**
     * [CHAR LIMIT=NONE] Activity title for Process Stats summary
     */
    public static final int process_stats_summary_title=0x7f110f0a;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
     * timeDuration is a duration such as "1h 30m"
     */
    public static final int process_stats_total_duration=0x7f110f0b;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
     * timeDuration is a duration such as "1h 30m"
     */
    public static final int process_stats_total_duration_percentage=0x7f110f0c;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, text for stats type
     */
    public static final int process_stats_type_background=0x7f110f0d;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, text for stats type
     */
    public static final int process_stats_type_cached=0x7f110f0e;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, text for stats type
     */
    public static final int process_stats_type_foreground=0x7f110f0f;
    /**
     * [CHAR LIMIT=NONE] Subtitle for process stats processes list
     */
    public static final int processes_subtitle=0x7f110f10;
    /**
     * Warning message to tell user is have problem during profile connect, it need to turn off device and back on. [CHAR_LIMIT=NONE]
     */
    public static final int profile_connect_timeout_subtext=0x7f110f11;
    /**
     * Text shown for title of profile info setting [CHAR LIMIT=20]
     */
    public static final int profile_info_settings_title=0x7f110f12;
    /**
     * Title for screen to set a profile owner [CHAR LIMIT=40]
     */
    public static final int profile_owner_add_title=0x7f110f13;
    /**
     * Simplified title for dialog to set a profile owner [CHAR LIMIT=40]
     */
    public static final int profile_owner_add_title_simplified=0x7f110f14;
    /**
     * Configure Notifications: Work profile section header [CHAR LIMIT=30]
     */
    public static final int profile_section_header=0x7f110f15;
    /**
     * Bluetooth settings screen, text that appears in heading bar when scanning for devices
     */
    public static final int progress_scanning=0x7f110f16;
    /**
     * [CHAR LIMIT=NONE] Summary for promote_conversation_title on notifications settings page
     */
    public static final int promote_conversation_summary=0x7f110f17;
    /**
     * [CHAR LIMIT=100] Field on notification channel settings page
     */
    public static final int promote_conversation_title=0x7f110f18;
    /**
     * Provider Model: Internet controls settings screen, item title to go into the networks settings
     */
    public static final int provider_internet_settings=0x7f110f19;
    /**
     * Provider Model: SIMs controls settings screen, item title to go into the SIMs settings
     */
    public static final int provider_network_settings_title=0x7f110f1a;
    public static final int proximity_wake_summary=0x7f110f1b;
    /**
     * Proximity wake
     */
    public static final int proximity_wake_title=0x7f110f1c;
    /**
     * HTTP proxy settings. The button to save.
     */
    public static final int proxy_action_text=0x7f110f1d;
    /**
     * HTTP proxy settings. Button to clear the proxy box.
     */
    public static final int proxy_clear_text=0x7f110f1e;
    /**
     * HTTP proxy settings. The button to restore the defaults.
     */
    public static final int proxy_defaultView_text=0x7f110f1f;
    /**
     * HTTP proxy settings. Title if there is an error
     */
    public static final int proxy_error=0x7f110f20;
    /**
     * HTTP proxy settings. Button to get rid of error box
     */
    public static final int proxy_error_dismiss=0x7f110f21;
    /**
     * HTTP proxy settings. Error msg
     */
    public static final int proxy_error_empty_host_set_port=0x7f110f22;
    /**
     * HTTP proxy settings. Error msg
     */
    public static final int proxy_error_empty_port=0x7f110f23;
    /**
     * HTTP proxy settings. The error if the exclusion list is not valid
     */
    public static final int proxy_error_invalid_exclusion_list=0x7f110f24;
    /**
     * HTTP proxy settings. The error if the hostname is not valid
     */
    public static final int proxy_error_invalid_host=0x7f110f25;
    /**
     * HTTP proxy settings. Error msg
     */
    public static final int proxy_error_invalid_port=0x7f110f26;
    /**
     * HTTP proxy settings. The hint text for proxy exclusion list.
     */
    public static final int proxy_exclusionlist_hint=0x7f110f27;
    /**
     * HTTP proxy settings. The exclusion list label.
     */
    public static final int proxy_exclusionlist_label=0x7f110f28;
    /**
     * HTTP proxy settings. The hint text field for the hostname.
     */
    public static final int proxy_hostname_hint=0x7f110f29;
    /**
     * HTTP proxy settings. The text field for the hostname
     */
    public static final int proxy_hostname_label=0x7f110f2a;
    /**
     * HTTP proxy settings. The hint text field for port.
     */
    public static final int proxy_port_hint=0x7f110f2b;
    /**
     * HTTP proxy settings. The port number label.
     */
    public static final int proxy_port_label=0x7f110f2c;
    /**
     * The title of the activity to adjust proxy settings
     */
    public static final int proxy_settings_label=0x7f110f2d;
    /**
     * HTTP proxy settings title
     */
    public static final int proxy_settings_title=0x7f110f2e;
    /**
     * HTTP proxy settings. Hint for Proxy-Auto Config URL.
     */
    public static final int proxy_url_hint=0x7f110f2f;
    /**
     * HTTP proxy settings. Title for Proxy-Auto Config URL.  [CHAR LIMIT=25]
     */
    public static final int proxy_url_title=0x7f110f30;
    /**
     * HTTP proxy settings. Warning message about limited application support [CHAR LIMIT=100]
     */
    public static final int proxy_warning_limited_support=0x7f110f31;
    /**
     * Device controls name lower case [CHAR LIMIT=40]
     */
    public static final int quick_controls_lower=0x7f110f32;
    /**
     * [CHAR LIMIT=60] Name of dev option to enable extra quick settings tiles
     */
    public static final int quick_settings_developer_tiles=0x7f110f33;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_connected=0x7f110f34;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_connecting=0x7f110f35;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_disconnected=0x7f110f36;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_suspended=0x7f110f37;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_roaming_in=0x7f110f38;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_roaming_not=0x7f110f39;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_emergency=0x7f110f3a;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_in=0x7f110f3b;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_off=0x7f110f3c;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_out=0x7f110f3d;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_unknown=0x7f110f3e;
    /**
     * Main Settings screen settings summary text for the "Wireless controls" setting
     */
    public static final int radio_controls_summary=0x7f110f3f;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_http_client_test=0x7f110f40;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ping_hostname_v4=0x7f110f41;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ping_hostname_v6=0x7f110f42;
    /**
     * Description of app rarely running [CHAR LIMIT=45]
     */
    public static final int rarely_running=0x7f110f43;
    /**
     * Remove account message in dialog [CHAR LIMIT=NONE]
     */
    public static final int really_remove_account_message=0x7f110f44;
    /**
     * Title of remove message for remove account dialog
     */
    public static final int really_remove_account_title=0x7f110f45;
    /**
     * Category title listing recently used apps [CHAR_LIMIT=50]
     */
    public static final int recent_app_category_title=0x7f110f46;
    /**
     * [CHAR LIMIT=100] preference category title
     */
    public static final int recent_conversations=0x7f110f47;
    /**
     * a11y feedback for 'clear recent conversation' button'
     */
    public static final int recent_convo_removed=0x7f110f48;
    /**
     * a11y feedback for 'clear recents' button'
     */
    public static final int recent_convos_removed=0x7f110f49;
    /**
     * notification header - apps that have recently sent notifications
     */
    public static final int recent_notifications=0x7f110f4a;
    /**
     * Preference title for showing all apps on device [CHAR_LIMIT=50]
     */
    public static final int recent_notifications_see_all_title=0x7f110f4b;
    /**
     * Manage app screen, shown when the activity is busy recomputing the size of each app
     */
    public static final int recompute_size=0x7f110f4c;
    /**
     * Title for Reduce Brightness feature footer. [CHAR LIMIT=35]
     */
    public static final int reduce_bright_colors_about_title=0x7f110f4d;
    /**
     * End label for slider that reduces the brightness intensity of the display using Extra Dim. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_intensity_end_label=0x7f110f4e;
    /**
     * Title for setting the brightness intensity of the display using Reduce Brightness. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_intensity_preference_title=0x7f110f4f;
    /**
     * Start label for slider that reduces the brightness intensity of the display using Extra Dim. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_intensity_start_label=0x7f110f50;
    /**
     * Title for setting whether the Reduce Brightness activation state persists across reboots. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_persist_preference_title=0x7f110f51;
    /**
     * Subtitle that describes Reduce Brightness. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_preference_subtitle=0x7f110f52;
    /**
     * Summary for the accessibility preference to configure Reduce Brightness feature. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_preference_summary=0x7f110f53;
    /**
     * Title for the accessibility preference of the Extra Dim/Reduce Brightness feature that dims your screen. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_preference_title=0x7f110f54;
    /**
     * Title for accessibility shortcut preference for Reduce Brightness. [CHAR LIMIT=60]
     */
    public static final int reduce_bright_colors_shortcut_title=0x7f110f55;
    /**
     * Title for the activation switch of the Reduce Brightness feature. [CHAR LIMIT=NONE]
     */
    public static final int reduce_bright_colors_switch_title=0x7f110f56;
    /**
     * Title to register automatically [CHAR LIMIT=NONE]
     */
    public static final int register_automatically=0x7f110f57;
    /**
     * Available networks screen, toast when registering on a specific network [CHAR LIMIT=NONE]
     */
    public static final int register_on_network=0x7f110f58;
    /**
     * Available networks screen, toast when registered on a specific network [CHAR LIMIT=NONE]
     */
    public static final int registration_done=0x7f110f59;
    /**
     * Text to display in regulatory info screen (from device overlay).
     */
    public static final int regulatory_info_text=0x7f110f5a;
    /**
     * About phone settings screen, setting option name to show regulatory labels [CHAR LIMIT=25]
     */
    public static final int regulatory_labels=0x7f110f5b;
    /**
     * Label for length of time until battery is charged [CHAR LIMIT=20]
     */
    public static final int remaining_length_format=0x7f110f5c;
    /**
     * Sound: Title for the option managing remote media volume. [CHAR LIMIT=30]
     */
    public static final int remote_media_volume_option_title=0x7f110f5d;
    /**
     * This is shown if the autheticator for a given account fails to remove it. [CHAR LIMIT=NONE]
     */
    public static final int remove_account_failed=0x7f110f5e;
    /**
     * Button label to remove current account
     */
    public static final int remove_account_label=0x7f110f5f;
    /**
     * Label for button to deactivate and uninstall the device admin app [CHAR_LIMIT=50]
     */
    public static final int remove_and_uninstall_device_admin=0x7f110f60;
    /**
     * Content Description for companion device app associations removal button [CHAR LIMIT=28]
     */
    public static final int remove_association_button=0x7f110f61;
    /**
     * Label for button to remove the credential management app [CHAR LIMIT=30]
     */
    public static final int remove_credential_management_app=0x7f110f62;
    /**
     * Dialog message for button to remove the credential management app [CHAR LIMIT=NONE]
     */
    public static final int remove_credential_management_app_dialog_message=0x7f110f63;
    /**
     * Dialog title for button to remove the credential management app [CHAR LIMIT=30]
     */
    public static final int remove_credential_management_app_dialog_title=0x7f110f64;
    /**
     * Label for button to remove the active device admin app [CHAR LIMIT=80]
     */
    public static final int remove_device_admin=0x7f110f65;
    /**
     * Button label to remove the work profile [CHAR LIMIT=35]
     */
    public static final int remove_managed_profile_label=0x7f110f66;
    /**
     * repeat title.  Allows the user to set how oftem to repeat alert reminders.
     * For example, they may have alerts just once or every 2 or 15 minutes.  [CHAR LIMIT=30]
     */
    public static final int repeat_title=0x7f110f67;
    /**
     * Label for button to not allow grant the permission for remote devices. [CHAR_LIMIT=50]
     */
    public static final int request_manage_bluetooth_permission_dont_allow=0x7f110f68;
    /**
     * Label for button to allow an app to manage the user's KeyChain credentials [CHAR_LIMIT=50]
     */
    public static final int request_manage_credentials_allow=0x7f110f69;
    /**
     * Description of screen shown to the user when an app requests to manage the user's KeyChain credentials [CHAR LIMIT=NONE]
     */
    public static final int request_manage_credentials_description=0x7f110f6a;
    /**
     * Label for button to not allow an app to manage the user's KeyChain credentials [CHAR_LIMIT=50]
     */
    public static final int request_manage_credentials_dont_allow=0x7f110f6b;
    /**
     * Label for floating action button to scroll to the end of the authentication policy list [CHAR LIMIT=30]
     */
    public static final int request_manage_credentials_more=0x7f110f6c;
    /**
     * Title of screen shown to the user when an app requests to manage the user's KeyChain credentials [CHAR LIMIT=NONE]
     */
    public static final int request_manage_credentials_title=0x7f110f6d;
    /**
     * [CHAR LIMIT=NONE] Manage applications screen, menu item.  Reset all of user's app preferences.
     */
    public static final int reset_app_preferences=0x7f110f6e;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Confirmation button of dialog to confirm resetting user's app preferences.
     */
    public static final int reset_app_preferences_button=0x7f110f6f;
    /**
     * [CHAR LIMIT=NONE] Manage applications screen, menu item.  Body of dialog to confirm resetting user's app preferences.
     */
    public static final int reset_app_preferences_desc=0x7f110f70;
    /**
     * [CHAR LIMIT=NONE] Manage applications screen, menu item.  Title of dialog to confirm resetting user's app preferences.
     */
    public static final int reset_app_preferences_title=0x7f110f71;
    /**
     * Summary text for a screen containing all device reset options [CHAR LIMIT=None]
     */
    public static final int reset_dashboard_summary=0x7f110f72;
    /**
     * Summary text for a screen device reset option for Apps [CHAR LIMIT=NONE]
     */
    public static final int reset_dashboard_summary_onlyApps=0x7f110f73;
    /**
     * Title for a screen containing all device reset options [CHAR LIMIT=50]
     */
    public static final int reset_dashboard_title=0x7f110f74;
    /**
     * Erase Euicc dialog and SD card & phone storage settings screen, message for the checkbox to let user decide whether erase eSIM data together [CHAR LIMIT=NONE]
     */
    public static final int reset_esim_desc=0x7f110f75;
    /**
     * Message of the error message shown when error happens during erase eSIM data [CHAR LIMIT=NONE]
     */
    public static final int reset_esim_error_msg=0x7f110f76;
    /**
     * Title of the error message shown when error happens during erase eSIM data [CHAR LIMIT=NONE]
     */
    public static final int reset_esim_error_title=0x7f110f77;
    /**
     * Erase Euicc dialog and SD card & phone storage settings screen, title for the menu option and checkbox to let user decide whether erase eSIM data together [CHAR LIMIT=50]
     */
    public static final int reset_esim_title=0x7f110f78;
    /**
     * Toast message to inform reset notification importance is completed [CHAR LIMIT=NONE]
     */
    public static final int reset_importance_completed=0x7f110f79;
    /**
     * Description for interrupting the voice call alert. [CHAR_LIMIT=NONE]
     */
    public static final int reset_internet_text=0x7f110f7a;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Reset network settings
     */
    public static final int reset_network_button_text=0x7f110f7b;
    /**
     * Reset settings complete toast text [CHAR LIMIT=75]
     */
    public static final int reset_network_complete_toast=0x7f110f7c;
    /**
     * Reset settings confirmation screen title [CHAR LIMIT=30]
     */
    public static final int reset_network_confirm_title=0x7f110f7d;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset network settings [CHAR LIMIT=NONE]
     */
    public static final int reset_network_desc=0x7f110f7e;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Reset settings button
     */
    public static final int reset_network_final_button_text=0x7f110f7f;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset settings button
     */
    public static final int reset_network_final_desc=0x7f110f80;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset settings button [CHAR LIMIT=NONE]
     */
    public static final int reset_network_final_desc_esim=0x7f110f81;
    /**
     * Button title to reset Wi-Fi settings, Mobile data setting, bluetooth settings
     */
    public static final int reset_network_title=0x7f110f82;
    /**
     * Reset rate-limiting in the system service ShortcutManager.  "ShortcutManager" is the name of a system service and not translatable.
     * If the word "rate-limit" is hard to translate, use "Reset ShortcutManager API call limit" as the source text, which means
     * the same thing in this context.
     * [CHAR_LIMIT=none]
     */
    public static final int reset_shortcut_manager_throttling=0x7f110f83;
    /**
     * Toast message shown when "Reset ShortcutManager rate-limiting" has been performed. [CHAR_LIMIT=none]
     */
    public static final int reset_shortcut_manager_throttling_complete=0x7f110f84;
    /**
     * Title for interrupting the voice call alert. [CHAR_LIMIT=NONE]
     */
    public static final int reset_your_internet_title=0x7f110f85;
    /**
     * Description to wait device resetting internet networks. [CHAR_LIMIT=NONE]
     */
    public static final int resetting_internet_text=0x7f110f86;
    /**
     * The message of dialog indicated restoring default APN settings in progress
     */
    public static final int restore_default_apn=0x7f110f87;
    /**
     * APNs screen toast message to inform reset default APN settings is completed
     */
    public static final int restore_default_apn_completed=0x7f110f88;
    /**
     * PIN entry dialog title for entering the administrator PIN [CHAR LIMIT=none]
     */
    public static final int restr_pin_enter_admin_pin=0x7f110f89;
    /**
     * Description of message shown when app is blocklisted for background data access [CHAR LIMIT=NONE]
     */
    public static final int restrict_background_blocklisted=0x7f110f8a;
    /**
     * Footer message for restrict app details page
     */
    public static final int restricted_app_detail_footer=0x7f110f8b;
    /**
     * Summary for restricted app to show the restriction time [CHAR LIMIT=NONE]
     */
    public static final int restricted_app_time_summary=0x7f110f8c;
    /**
     * Title for restricted app preference, clicking it will goes to restricted app list [CHAR LIMIT=NONE]
     */
    public static final int restricted_app_title=0x7f110f8d;
    /**
     * Label to say no to the question of whether app is restricted. [CHAR LIMIT=20]
     */
    public static final int restricted_false_label=0x7f110f8e;
    /**
     * Label to say yes to the question of whether app is restricted. [CHAR LIMIT=20]
     */
    public static final int restricted_true_label=0x7f110f8f;
    /**
     * Restrictions summary for changing bluetooth configuration [CHAR LIMIT=100]
     */
    public static final int restriction_bluetooth_config_summary=0x7f110f90;
    /**
     * Restrictions title for changing bluetooth configuration [CHAR LIMIT=35]
     */
    public static final int restriction_bluetooth_config_title=0x7f110f91;
    /**
     * Restrictions summary for allowing location sharing [CHAR LIMIT=100]
     */
    public static final int restriction_location_enable_summary=0x7f110f92;
    /**
     * Restrictions title for allowing location sharing [CHAR LIMIT=35]
     */
    public static final int restriction_location_enable_title=0x7f110f93;
    /**
     * Restrictions screen - menu label to change restrictions pin [CHAR LIMIT=25]
     */
    public static final int restriction_menu_change_pin=0x7f110f94;
    /**
     * Restrictions screen - reset menu to reset to unrestricted [CHAR LIMIT=25]
     */
    public static final int restriction_menu_reset=0x7f110f95;
    /**
     * Restrictions summary for allowing NFC transfers (phone) [CHAR LIMIT=100]
     */
    public static final int restriction_nfc_enable_summary=0x7f110f96;
    /**
     * Restrictions summary for allowing NFC transfers (tablet) [CHAR LIMIT=100]
     */
    public static final int restriction_nfc_enable_summary_config=0x7f110f97;
    /**
     * Restrictions title for allowing NFC transfers [CHAR LIMIT=35]
     */
    public static final int restriction_nfc_enable_title=0x7f110f98;
    /**
     * Restriction settings title [CHAR LIMIT=35]
     */
    public static final int restriction_settings_title=0x7f110f99;
    /**
     * Restrictions summary for configuring wifi and mobile [CHAR LIMIT=100]
     */
    public static final int restriction_wifi_config_summary=0x7f110f9a;
    /**
     * Restrictions title for configuring wifi and mobile [CHAR LIMIT=35]
     */
    public static final int restriction_wifi_config_title=0x7f110f9b;
    /**
     * Label for carrier demo mode factory reset confirmation dialog. [CHAR LIMIT=NONE]
     */
    public static final int retail_demo_reset_message=0x7f110f9c;
    /**
     * Label for positive button on carrier demo  mode factory reset confirmation dialog [CHAR LIMIT=40]
     */
    public static final int retail_demo_reset_next=0x7f110f9d;
    /**
     * Title for carrier demo mode factory reset confirmation dialog. [CHAR LIMIT=40]
     */
    public static final int retail_demo_reset_title=0x7f110f9e;
    /**
     * Label for the try again button [CHAR LIMIT=20]
     */
    public static final int retry=0x7f110f9f;
    /**
     * Label for the slider to set sensitivity of the right edge of the screen [CHAR LIMIT=40]
     */
    public static final int right_edge=0x7f110fa0;
    /**
     * Sound: Title for the option managing ring volume. [CHAR LIMIT=30]
     */
    public static final int ring_volume_option_title=0x7f110fa1;
    /**
     * Sound settings screen, setting option name
     */
    public static final int ring_volume_title=0x7f110fa2;
    /**
     * Sound: Title for the option defining the phone ringtone. [CHAR LIMIT=30]
     */
    public static final int ringtone_title=0x7f110fa3;
    /**
     * Ringtones preference category: Title for the Ringotnes preference categories. [CHAR LIMIT=none]
     */
    public static final int ringtones_category_preference_title=0x7f110fa4;
    /**
     * Sound installation: Message for the dialog to confirm that a new sound will be installed to the Ringtones, Notifications, or Alarms folder. [CHAR LIMIT=none]
     */
    public static final int ringtones_install_custom_sound_content=0x7f110fa5;
    /**
     * Sound installation: Title for the dialog to confirm that a new sound will be installed to the Ringtones, Notifications, or Alarms folder. [CHAR LIMIT=50]
     */
    public static final int ringtones_install_custom_sound_title=0x7f110fa6;
    /**
     * mobile network settings screen, setting check box title
     */
    public static final int roaming=0x7f110fa7;
    /**
     * Mobile network settings screen, dialog message title when user selects the Data roaming check box [CHAR LIMIT=120]
     */
    public static final int roaming_alert_title=0x7f110fa8;
    /**
     * Mobile network settings screen, message asking the user to check their pricing with their Carrier, when enabling Data roaming. [CHAR LIMIT=NONE]
     */
    public static final int roaming_check_price_warning=0x7f110fa9;
    /**
     * mobile network settings screen, setting option summary text when check box is clear
     */
    public static final int roaming_disable=0x7f110faa;
    /**
     * mobile network settings screen, setting option summary text when check box is selected
     */
    public static final int roaming_enable=0x7f110fab;
    /**
     * mobile network settings screen, dialog message when you are roaming and clear the "Data roaming" check box
     */
    public static final int roaming_reenable_message=0x7f110fac;
    /**
     * mobile network settings screen, title of dialog box that appears when you select the "Data roaming" check box
     */
    public static final int roaming_reenable_title=0x7f110fad;
    /**
     * mobile network settings screen, button on dialog box that appears when you are roaming and clear the "Data roaming" check box
     */
    public static final int roaming_turn_it_on_button=0x7f110fae;
    /**
     * mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box
     */
    public static final int roaming_warning=0x7f110faf;
    /**
     * mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box. This is for multiuser phones [CHAR LIMIT=none]
     */
    public static final int roaming_warning_multiuser=0x7f110fb0;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int rssi_label=0x7f110fb1;
    /**
     * Subtext for showing the option of RTT setting. [CHAR LIMIT=NONE]
     */
    public static final int rtt_settings_always_visible=0x7f110fb2;
    /**
     * Subtext for showing the option of RTT setting. [CHAR LIMIT=NONE]
     */
    public static final int rtt_settings_no_visible=0x7f110fb3;
    /**
     * Title for RTT setting. [CHAR LIMIT=NONE]
     */
    public static final int rtt_settings_title=0x7f110fb4;
    /**
     * Subtext for showing the option of RTT setting. [CHAR LIMIT=NONE]
     */
    public static final int rtt_settings_visible_during_call=0x7f110fb5;
    /**
     * Label for frequency that the app is runnig (e.g. always, sometimes, etc.) [CHAR LIMIT=25]
     */
    public static final int running_frequency=0x7f110fb6;
    /**
     * [CHAR LIMIT=NONE] Label of a running process that represents a removed
     */
    public static final int running_process_item_removed_user_label=0x7f110fb7;
    /**
     * [CHAR LIMIT=NONE] Label of a running process that represents another user
     */
    public static final int running_process_item_user_label=0x7f110fb8;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
     * used by apps.
     */
    public static final int running_processes_header_apps_prefix=0x7f110fb9;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing portion
     * of free RAM that is used by cached apps.
     */
    public static final int running_processes_header_cached_prefix=0x7f110fba;
    /**
     * [CHAR LIMIT=NONE] Bottom test of the header leading in to the running
     * processes/services list.
     */
    public static final int running_processes_header_footer=0x7f110fbb;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
     * that is free.
     */
    public static final int running_processes_header_free_prefix=0x7f110fbc;
    /**
     * [CHAR_LIMIT=20] Running processes/services header: formatter for RAM use amount.
     */
    public static final int running_processes_header_ram=0x7f110fbd;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
     * used by system.
     */
    public static final int running_processes_header_system_prefix=0x7f110fbe;
    /**
     * [CHAR LIMIT=NONE] Top title of the header of the running processes/services list.
     */
    public static final int running_processes_header_title=0x7f110fbf;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing total RAM
     * used by everything.
     */
    public static final int running_processes_header_used_prefix=0x7f110fc0;
    /**
     * Descriptive text of a running process: plural process, plural service.
     */
    public static final int running_processes_item_description_p_p=0x7f110fc1;
    /**
     * Descriptive text of a running process: plural process, singular service.
     */
    public static final int running_processes_item_description_p_s=0x7f110fc2;
    /**
     * Descriptive text of a running process: singular process, plural service.
     */
    public static final int running_processes_item_description_s_p=0x7f110fc3;
    /**
     * Descriptive text of a running process: singular process, singular service.
     */
    public static final int running_processes_item_description_s_s=0x7f110fc4;
    /**
     * Title for list of services.
     */
    public static final int runningservicedetails_processes_title=0x7f110fc5;
    /**
     * Title for list of services.
     */
    public static final int runningservicedetails_services_title=0x7f110fc6;
    /**
     * Details about an application's running services.
     */
    public static final int runningservicedetails_settings_title=0x7f110fc7;
    /**
     * Running service details, stop confirmation descriptive text. Displays when user selects selects to stop a system service.
     */
    public static final int runningservicedetails_stop_dlg_text=0x7f110fc8;
    /**
     * Running service details, stop confirmation dialog title. Displays when user selects selects to stop a system service.
     */
    public static final int runningservicedetails_stop_dlg_title=0x7f110fc9;
    /**
     * Services settings screen, setting option summary for the user to go to the screen to view running services
     */
    public static final int runningservices_settings_summary=0x7f110fca;
    /**
     * Services settings screen, setting option name for the user to go to the screen to view running services
     */
    public static final int runningservices_settings_title=0x7f110fcb;
    /**
     * Runtime permissions preference summary, which describes what the permission manager does. [CHAR LIMIT=NONE]
     */
    public static final int runtime_permissions_summary_control_app_access=0x7f110fcc;
    /**
     * Runtime permissions preference summary, shown when the app has no permissions granted. [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_summary_no_permissions_granted=0x7f110fcd;
    /**
     * Runtime permissions preference summary, shown when the app requests no permissions. [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_summary_no_permissions_requested=0x7f110fce;
    /**
     * Receive Link speed on Wifi Status screen [CHAR LIMIT=32]
     */
    public static final int rx_link_speed=0x7f110fcf;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int rx_link_speed_label=0x7f110fd0;
    /**
     * Label for the receive link speed of the connection. [CHAR LIMIT=32]
     */
    public static final int rx_wifi_speed=0x7f110fd1;
    /**
     * About phone settings screen, setting option name to show the safety and regulatory manual [CHAR LIMIT=40]
     */
    public static final int safety_and_regulatory_info=0x7f110fd2;
    /**
     * Button label for generic save action [CHAR LIMIT=20]
     */
    public static final int save=0x7f110fd3;
    /**
     * Summary for saved networks
     */
    public static final int saved_network=0x7f110fd4;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int scan_list_label=0x7f110fd5;
    /**
     * The status text when (Wi-Fi or Bluetooth) scanning is off. [CHAR LIMIT=100]
     */
    public static final int scanning_status_text_off=0x7f110fd6;
    /**
     * The status text when (Wi-Fi or Bluetooth) scanning is on. [CHAR LIMIT=100]
     */
    public static final int scanning_status_text_on=0x7f110fd7;
    /**
     * The status text when both Wi-Fi scanning and Bluetooth scanning are off. [CHAR LIMIT=100]
     */
    public static final int scanning_status_text_wifi_off_ble_off=0x7f110fd8;
    /**
     * The status text when Wi-Fi scanning is off and Bluetooth scanning are on. [CHAR LIMIT=100]
     */
    public static final int scanning_status_text_wifi_off_ble_on=0x7f110fd9;
    /**
     * The status text when Wi-Fi scanning is on and Bluetooth scanning are off. [CHAR LIMIT=100]
     */
    public static final int scanning_status_text_wifi_on_ble_off=0x7f110fda;
    /**
     * The status text when both Wi-Fi scanning and Bluetooth scanning are on. [CHAR LIMIT=100]
     */
    public static final int scanning_status_text_wifi_on_ble_on=0x7f110fdb;
    /**
     * Manage applications, individual application info screen,  heading for settings related to controlling application screen compatibility
     */
    public static final int screen_compatibility_label=0x7f110fdc;
    /**
     * Manage applications, individual application info screen, screen, message text under screen compatibility heading
     */
    public static final int screen_compatibility_text=0x7f110fdd;
    /**
     * Sound: Other sounds: Title for the option enabling touch sounds for screen locking sounds. [CHAR LIMIT=30]
     */
    public static final int screen_locking_sounds_title=0x7f110fde;
    /**
     * [CHAR LIMIT=none] Screen pinning description
     */
    public static final int screen_pinning_description=0x7f110fdf;
    /**
     * [CHAR LIMIT=300] Screen pinning title
     */
    public static final int screen_pinning_dialog_message=0x7f110fe0;
    /**
     * [CHAR LIMIT=none] Screen pinning description
     */
    public static final int screen_pinning_guest_user_description=0x7f110fe1;
    /**
     * The subtext when screen pinning feature is disabled. [CHAR LIMIT=28]
     */
    public static final int screen_pinning_switch_off_text=0x7f110fe2;
    /**
     * The subtext when screen pinning feature is enabled. [CHAR LIMIT=28]
     */
    public static final int screen_pinning_switch_on_text=0x7f110fe3;
    /**
     * [CHAR LIMIT=28] Screen pinning title
     */
    public static final int screen_pinning_title=0x7f110fe4;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_none=0x7f110fe5;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_password=0x7f110fe6;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_pattern=0x7f110fe7;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_pin=0x7f110fe8;
    /**
     * Title for the accessibility preference category of screen reader services and settings. [CHAR LIMIT=50]
     */
    public static final int screen_reader_category_title=0x7f110fe9;
    /**
     * Sound & display settings screen, setting option name to change screen timeout
     */
    public static final int screen_timeout=0x7f110fea;
    /**
     * Sound & display settings screen, setting option summary to change screen timeout
     */
    public static final int screen_timeout_summary=0x7f110feb;
    /**
     * Sound & display settings screen, setting option name to change screen timeout [CHAR LIMIT=30]
     */
    public static final int screen_timeout_title=0x7f110fec;
    /**
     * Description for the screen usage item [CHAR_LIMIT=120]
     */
    public static final int screen_usage_summary=0x7f110fed;
    /**
     * Name Initial shown in the conversation message icon. [CHAR LIMIT=1]
     */
    public static final int screen_zoom_conversation_icon_alex=0x7f110fee;
    /**
     * Name Initial shown in the conversation message icon. [CHAR LIMIT=1]
     */
    public static final int screen_zoom_conversation_icon_pete=0x7f110fef;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_1=0x7f110ff0;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_2=0x7f110ff1;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_3=0x7f110ff2;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_4=0x7f110ff3;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_1=0x7f110ff4;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_2=0x7f110ff5;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_3=0x7f110ff6;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_4=0x7f110ff7;
    /**
     * Keywords for setting that controls screen zoom (e.g. how large interface elements appear). [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_keywords=0x7f110ff8;
    /**
     * Description for the button that makes interface elements larger. [CHAR_LIMIT=NONE]
     */
    public static final int screen_zoom_make_larger_desc=0x7f110ff9;
    /**
     * Description for the button that makes interface elements smaller. [CHAR_LIMIT=NONE]
     */
    public static final int screen_zoom_make_smaller_desc=0x7f110ffa;
    /**
     * Title of the screen zoom preview activity.
     */
    public static final int screen_zoom_preview_title=0x7f110ffb;
    /**
     * Short summary for Magnification gesture. Lets the user know that this makes items on screen larger or smaller. Appears in the accessibility portion of Setup Wizard. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_short_summary=0x7f110ffc;
    /**
     * Summary of screen zoom setting screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_summary=0x7f110ffd;
    /**
     * Description for a custom screen zoom level. This shows the requested display
     * density in raw pixels per inch rather than using a relative description. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_custom=0x7f110ffe;
    /**
     * Description for the device's default screen zoom level. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_default=0x7f110fff;
    /**
     * Description for the screen zoom level that makes interface elements largest. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_extremely_large=0x7f111000;
    /**
     * Description for the screen zoom level that makes interface elements large. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_large=0x7f111001;
    /**
     * Description for the screen zoom level that makes interface elements small. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_small=0x7f111002;
    /**
     * Description for the screen zoom level that makes interface elements smaller. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_smaller=0x7f111003;
    /**
     * Description for the screen zoom level that makes interface elements smallest. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_smallest=0x7f111004;
    /**
     * Description for the screen zoom level that makes interface elements larger. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_very_large=0x7f111005;
    /**
     * Title of setting that controls screen zoom (e.g. how large interface elements appear). [CHAR LIMIT=40]
     */
    public static final int screen_zoom_title=0x7f111006;
    /**
     * Dream settings screen, button label for settings for a specific screensaver
     */
    public static final int screensaver_settings_button=0x7f111007;
    /**
     * Dream settings screen, action label, current selected screen saver
     */
    public static final int screensaver_settings_current=0x7f111008;
    /**
     * Dream settings screen, caption for when dreams are disabled
     */
    public static final int screensaver_settings_disabled_prompt=0x7f111009;
    /**
     * Dream settings screen, button label to start dreaming [CHAR LIMIT=30]
     */
    public static final int screensaver_settings_dream_start=0x7f11100a;
    /**
     * Display settings screen, summary fragment for screen saver options, activated when docked
     */
    public static final int screensaver_settings_summary_dock=0x7f11100b;
    /**
     * Display settings screen, summary fragment for screen saver options, activated when docked or asleep and charging
     */
    public static final int screensaver_settings_summary_either_long=0x7f11100c;
    /**
     * Dream settings screen, dialog option, activated when docked or asleep and charging
     */
    public static final int screensaver_settings_summary_either_short=0x7f11100d;
    /**
     * Display settings screen, summary fragment for screen saver options, activated never
     */
    public static final int screensaver_settings_summary_never=0x7f11100e;
    /**
     * Display settings screen, summary for screen saver options, screen saver is turned off
     */
    public static final int screensaver_settings_summary_off=0x7f11100f;
    /**
     * Display settings screen, summary fragment for screen saver options, activated when asleep and charging
     */
    public static final int screensaver_settings_summary_sleep=0x7f111010;
    /**
     * Display settings screen, trigger for screen saver options
     */
    public static final int screensaver_settings_title=0x7f111011;
    /**
     * Dream settings screen, action label, when to dream
     */
    public static final int screensaver_settings_when_to_dream=0x7f111012;
    /**
     * The title of the activity to adjust SD card settings
     */
    public static final int sd_card_settings_label=0x7f111013;
    /**
     * SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.
     */
    public static final int sd_eject=0x7f111014;
    /**
     * SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.
     */
    public static final int sd_eject_summary=0x7f111015;
    /**
     * SD card eject progress text
     */
    public static final int sd_ejecting_summary=0x7f111016;
    /**
     * SD card eject progress title
     */
    public static final int sd_ejecting_title=0x7f111017;
    /**
     * SD card & phone storage settings item title that will result in the phone formatting the SD card.   [CHAR LIMIT=25]
     */
    public static final int sd_format=0x7f111018;
    /**
     * SD card & phone storage settings item title that will result in the phone unmounting the SD card.   [CHAR LIMIT=80]
     */
    public static final int sd_format_summary=0x7f111019;
    /**
     * SD card & phone storage settings item summary that is displayed when no SD card is inserted
     */
    public static final int sd_insert_summary=0x7f11101a;
    /**
     * SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card
     */
    public static final int sd_memory=0x7f11101b;
    /**
     * SD card & phone storage settings item title that will result in the phone mounting the SD card.
     */
    public static final int sd_mount=0x7f11101c;
    /**
     * Subtext for Mount SD Card in Storage settings. User should never see this since we use automount.
     */
    public static final int sd_mount_summary=0x7f11101d;
    /**
     * Instructions after the user changes the mass storage settings
     */
    public static final int sdcard_changes_instructions=0x7f11101e;
    /**
     * Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted
     */
    public static final int sdcard_format=0x7f11101f;
    /**
     * Title for a notification shown.
     */
    public static final int sdcard_setting=0x7f111020;
    /**
     * Th label for the available (free) sapce on the SD card
     */
    public static final int sdcard_settings_available_bytes_label=0x7f111021;
    /**
     * Error message when the SD card was removed without properly unmounting
     */
    public static final int sdcard_settings_bad_removal_status=0x7f111022;
    /**
     * Message when the SD card is being used by the computer as mass storage
     */
    public static final int sdcard_settings_mass_storage_status=0x7f111023;
    /**
     * Message when there is no SD card present
     */
    public static final int sdcard_settings_not_present_status=0x7f111024;
    /**
     * Message when the SD card is mounted as read only
     */
    public static final int sdcard_settings_read_only_status=0x7f111025;
    /**
     * Message when it is scanning the SD card for new files
     */
    public static final int sdcard_settings_scanning_status=0x7f111026;
    /**
     * Enable USB mass storage mode checkbox title
     */
    public static final int sdcard_settings_screen_mass_storage_text=0x7f111027;
    /**
     * The label for total bytes on SD card
     */
    public static final int sdcard_settings_total_bytes_label=0x7f111028;
    /**
     * Message when it is safe to remove the SD card
     */
    public static final int sdcard_settings_unmounted_status=0x7f111029;
    /**
     * Label for used bytes on the SD card
     */
    public static final int sdcard_settings_used_bytes_label=0x7f11102a;
    /**
     * Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer
     */
    public static final int sdcard_unmount=0x7f11102b;
    /**
     * String for talkback on the account avatar of the search bar.  [CHAR LIMIT=NONE]
     */
    public static final int search_bar_account_avatar_content_description=0x7f11102c;
    /**
     * Search breadcrumb connector symbol
     */
    public static final int search_breadcrumb_connector=0x7f11102d;
    /**
     * Text used as a search hint into the search box [CHAR_LIMIT=60]
     */
    public static final int search_menu=0x7f11102e;
    public static final int search_menu_title=0x7f11102f;
    /**
     * Text to describe the search results fragment title [CHAR LIMIT=16]
     */
    public static final int search_results_title=0x7f111030;
    /**
     * Main Settings screen, setting option name to go into search settings
     */
    public static final int search_settings=0x7f111031;
    /**
     * Warning that the device data will not be encrypted with password or PIN if
     * choosing a secure lock and there is an enabled accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int secure_lock_encryption_warning=0x7f111032;
    /**
     * Summary for Security settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int security_dashboard_summary=0x7f111033;
    /**
     * Summary for settings checkbox to disable widgets when the setting has been disabled by an installed device admin [CHAR LIMIT=50]
     */
    public static final int security_enable_widgets_disabled_summary=0x7f111034;
    /**
     * Text shown for title of settings checkbox to enable widgets [CHAR LIMIT=20]
     */
    public static final int security_enable_widgets_title=0x7f111035;
    /**
     * In the security screen, the header title for settings related to  Passwords
     */
    public static final int security_passwords_title=0x7f111036;
    /**
     * About phone screen, status item label  [CHAR LIMIT=60]
     */
    public static final int security_patch=0x7f111037;
    /**
     * Message shown in summary field of biometric settings when face is enrolled, and multiple fingerprints are enrolled. [CHAR LIMIT=66]
     */
    public static final int security_settings_biometric_preference_summary_both_fp_multiple=0x7f111038;
    /**
     * Message shown in summary field of biometric settings when face is enrolled, and a single fingerprintis enrolled. [CHAR LIMIT=66]
     */
    public static final int security_settings_biometric_preference_summary_both_fp_single=0x7f111039;
    /**
     * Message shown in summary field of biometric settings. [CHAR LIMIT=66]
     */
    public static final int security_settings_biometric_preference_summary_none_enrolled=0x7f11103a;
    /**
     * Title shown for menu item that launches biometric settings. [CHAR LIMIT=66]
     */
    public static final int security_settings_biometric_preference_title=0x7f11103b;
    /**
     * Introduction title shown in face enrollment when when asking for parental consent for the face unlock feature [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_consent_introduction_title=0x7f11103c;
    /**
     * Button text shown in face dialog shown when an error occurs during enrollment [CHAR LIMIT=22]
     */
    public static final int security_settings_face_enroll_dialog_ok=0x7f11103d;
    /**
     * Button text to exit face wizard after everything is done [CHAR LIMIT=15]
     */
    public static final int security_settings_face_enroll_done=0x7f11103e;
    /**
     * Confirmation dialog message shown when users with system accessibility features enabled try to start the non-accessibility version of enrollment [CHAR LIMIT=150]
     */
    public static final int security_settings_face_enroll_education_accessibility_dialog_message=0x7f11103f;
    /**
     * Negative button text for users who were shown the accessibility dialog [CHAR LIMIT=10]
     */
    public static final int security_settings_face_enroll_education_accessibility_dialog_negative=0x7f111040;
    /**
     * Positive button text for users who were shown the accessibility dialog [CHAR LIMIT=20]
     */
    public static final int security_settings_face_enroll_education_accessibility_dialog_positive=0x7f111041;
    /**
     * Introduction detail message shown in face education [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_education_message=0x7f111042;
    /**
     * Introduction detail message shown in face education for accessibility [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_education_message_accessibility=0x7f111043;
    /**
     * Button that takes the user to the enrollment activity [CHAR LIMIT=20]
     */
    public static final int security_settings_face_enroll_education_start=0x7f111044;
    /**
     * Introduction title shown in face enrollment education screen [CHAR LIMIT=50]
     */
    public static final int security_settings_face_enroll_education_title=0x7f111045;
    /**
     * Introduction title shown in face enrollment education screen for accessibility [CHAR LIMIT=50]
     */
    public static final int security_settings_face_enroll_education_title_accessibility=0x7f111046;
    /**
     * Introduction title shown in face enrollment education screen to show the face unlock feature, when face unlock is disabled by device admin [CHAR LIMIT=60]
     */
    public static final int security_settings_face_enroll_education_title_unlock_disabled=0x7f111047;
    /**
     * Button text to skip enrollment of face [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_enrolling_skip=0x7f111048;
    /**
     * Dialog message for dialog which shows when face cannot be enrolled. [CHAR LIMIT=45]
     */
    public static final int security_settings_face_enroll_error_dialog_title=0x7f111049;
    /**
     * Dialog message for dialog which shows when face cannot be enrolled due to an internal error or face can't be read.
     */
    public static final int security_settings_face_enroll_error_generic_dialog_message=0x7f11104a;
    /**
     * Dialog message for dialog which shows when face cannot be enrolled due to being idle too long.
     */
    public static final int security_settings_face_enroll_error_timeout_dialog_message=0x7f11104b;
    /**
     * Message shown in face enrollment dialog once enrollment is completed
     */
    public static final int security_settings_face_enroll_finish_title=0x7f11104c;
    /**
     * Settings suggestion alert body text for re-enrolling a face. [CHAR LIMIT=300]
     */
    public static final int security_settings_face_enroll_improve_face_alert_body=0x7f11104d;
    /**
     * Settings suggestion alert body text for re-enrolling a face. [CHAR LIMIT=300]
     */
    public static final int security_settings_face_enroll_improve_face_alert_body_fingerprint=0x7f11104e;
    /**
     * Settings suggestion alert body title for re-enrolling a face. [CHAR LIMIT=60]
     */
    public static final int security_settings_face_enroll_improve_face_alert_title=0x7f11104f;
    /**
     * Button shown which shows accessibility toggles for face enrollment when clicked. [CHAR LIMIT=32]
     */
    public static final int security_settings_face_enroll_introduction_accessibility=0x7f111050;
    /**
     * Message shown for a toggle which when enabled, allows the user to enroll using a simpler flow for accessibility [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_accessibility_diversity=0x7f111051;
    /**
     * Additional details shown when the accessibility toggle is expanded. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_accessibility_expanded=0x7f111052;
    /**
     * Message shown for a toggle which when enabled, allows the user to enroll using a simpler flow for accessibility [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_accessibility_vision=0x7f111053;
    /**
     * Button text to start enrollment [CHAR LIMIT=30]
     */
    public static final int security_settings_face_enroll_introduction_agree=0x7f111054;
    /**
     * Button text to cancel enrollment from the introduction [CHAR LIMIT=22]
     */
    public static final int security_settings_face_enroll_introduction_cancel=0x7f111055;
    /**
     * Introduction detail message shown in face enrollment dialog when asking for parental consent [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_consent_message=0x7f111056;
    /**
     * Message on the face enrollment introduction page that explains privacy controls for face unlock when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_control_consent_message=0x7f111057;
    /**
     * Title of a section on the face enrollment introduction page that explains privacy controls for face unlock when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_control_consent_title=0x7f111058;
    /**
     * Message on the face enrollment introduction page that explains privacy controls for face unlock [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_control_message=0x7f111059;
    /**
     * Title of a section on the face enrollment introduction page that explains privacy controls for face unlock. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_control_title=0x7f11105a;
    /**
     * Message on the face enrollment introduction page that explains how Face Unlock works when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_how_consent_message=0x7f11105b;
    /**
     * Message on the face enrollment introduction page that explains how face unlock works. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_how_message=0x7f11105c;
    /**
     * Title of a section on the face enrollment introduction page that explains how face unlock works. [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_introduction_how_title=0x7f11105d;
    /**
     * Message on the face enrollment introduction page that provides information about how to require eyes to be open for Face Unlock when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_consent_gaze=0x7f11105e;
    /**
     * Message on the face enrollment introduction page that provides information about glasses when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_consent_glasses=0x7f11105f;
    /**
     * Message on the face enrollment introduction page that provides information about what could cause the phone to unlock when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_consent_looking=0x7f111060;
    /**
     * Message on the face enrollment introduction page that provides information about how to require eyes to be open for Face Unlock. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_gaze=0x7f111061;
    /**
     * Message on the face enrollment introduction page that provides information about glasses. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_glasses=0x7f111062;
    /**
     * Message on the face enrollment introduction page that provides information about the relative security of face for unlocking the phone. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_less_secure=0x7f111063;
    /**
     * Message on the face enrollment introduction page that provides information about what could cause the phone to unlock. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_info_looking=0x7f111064;
    /**
     * Title of a section on the face enrollment introduction page that provides additional information. [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_introduction_info_title=0x7f111065;
    /**
     * Introduction detail message shown in face enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_message=0x7f111066;
    /**
     * Introduction detail message shown in face enrollment screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_message_setup=0x7f111067;
    /**
     * Introduction detail message shown in face enrollment dialog, when face unlock is disabled by device admin [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_enroll_introduction_message_unlock_disabled=0x7f111068;
    /**
     * Button text to scroll to the end of a scrollview. [CHAR LIMIT=30]
     */
    public static final int security_settings_face_enroll_introduction_more=0x7f111069;
    /**
     * Button text to cancel enrollment [CHAR LIMIT=30]
     */
    public static final int security_settings_face_enroll_introduction_no_thanks=0x7f11106a;
    /**
     * Introduction title shown in face enrollment to introduce the face unlock feature [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_introduction_title=0x7f11106b;
    /**
     * Introduction title shown in face enrollment to introduce the face unlock feature, when face unlock is disabled by device admin [CHAR LIMIT=60]
     */
    public static final int security_settings_face_enroll_introduction_title_unlock_disabled=0x7f11106c;
    /**
     * Settings suggestion subtitle text for mandatory re-enrolling of a face. [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_must_re_enroll_subtitle=0x7f11106d;
    /**
     * Settings suggestion title text for mandatory re-enrolling of a face. [CHAR LIMIT=50]
     */
    public static final int security_settings_face_enroll_must_re_enroll_title=0x7f11106e;
    /**
     * Title shown in face enrollment dialog [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_repeat_title=0x7f11106f;
    /**
     * Settings suggestion subtitle text for re-enrolling a face. [CHAR LIMIT=40]
     */
    public static final int security_settings_face_enroll_should_re_enroll_subtitle=0x7f111070;
    /**
     * Settings suggestion title text for re-enrolling a face. [CHAR LIMIT=50]
     */
    public static final int security_settings_face_enroll_should_re_enroll_title=0x7f111071;
    /**
     * Message shown in summary field when face unlock is set up. [CHAR LIMIT=40]
     */
    public static final int security_settings_face_preference_summary=0x7f111072;
    /**
     * Message shown in summary field when Face Unlock is not set up. [CHAR LIMIT=54]
     */
    public static final int security_settings_face_preference_summary_none=0x7f111073;
    /**
     * Title shown for menu item that launches face settings or enrollment. [CHAR LIMIT=32]
     */
    public static final int security_settings_face_preference_title=0x7f111074;
    /**
     * Title shown for menu item that launches face settings or enrollment, for work profile [CHAR LIMIT=50]
     */
    public static final int security_settings_face_profile_preference_title=0x7f111075;
    /**
     * Subtitle shown for contextual setting face enrollment [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_settings_context_subtitle=0x7f111076;
    /**
     * Button text in face settings which lets the user enroll their face [CHAR LIMIT=40]
     */
    public static final int security_settings_face_settings_enroll=0x7f111077;
    /**
     * Text shown in face settings explaining what your face can be used for. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_settings_footer=0x7f111078;
    /**
     * Text shown in face settings explaining what your face can be used for. Used when attention checking is not supported. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_settings_footer_attention_not_supported=0x7f111079;
    /**
     * Title for a category shown for the face settings page, followed by items that the user can toggle on/off to require/disable. [CHAR LIMIT=50]
     */
    public static final int security_settings_face_settings_preferences_category=0x7f11107a;
    /**
     * Dialog contents shown when the user removes an enrollment [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_settings_remove_dialog_details=0x7f11107b;
    /**
     * Dialog contents shown when the user removes an enrollment when configured as a convenience [CHAR LIMIT=NONE]
     */
    public static final int security_settings_face_settings_remove_dialog_details_convenience=0x7f11107c;
    /**
     * Dialog title shown when the user removes an enrollment [CHAR LIMIT=35]
     */
    public static final int security_settings_face_settings_remove_dialog_title=0x7f11107d;
    /**
     * Button text in face settings which removes the user's face model from the device [CHAR LIMIT=40]
     */
    public static final int security_settings_face_settings_remove_face_model=0x7f11107e;
    /**
     * Text shown on a toggle which disables/enables face unlock, depending if the user's eyes are open. [CHAR LIMIT=30]
     */
    public static final int security_settings_face_settings_require_attention=0x7f11107f;
    /**
     * Text shown on the details of a toggle which disables/enables face unlock, depending if the user's eyes are open. [CHAR LIMIT=70]
     */
    public static final int security_settings_face_settings_require_attention_details=0x7f111080;
    /**
     * When authenticating in apps, always require confirmation (e.g. confirm button) after a face is authenticated. [CHAR LIMIT=50]
     */
    public static final int security_settings_face_settings_require_confirmation=0x7f111081;
    /**
     * When authenticating in apps, always require confirmation (e.g. confirm button) after a face is authenticated. [CHAR LIMIT=70]
     */
    public static final int security_settings_face_settings_require_confirmation_details=0x7f111082;
    /**
     * Title for a category shown for the face settings page. [CHAR LIMIT=20]
     */
    public static final int security_settings_face_settings_use_face_category=0x7f111083;
    /**
     * Text shown during fingerprint enrollment to indicate bad sensor calibration. [CHAR LIMIT=100]
     */
    public static final int security_settings_fingerprint_bad_calibration=0x7f111084;
    /**
     * Introduction title shown in fingerprint enrollment when asking for parental consent for fingerprint unlock [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_consent_introduction_title=0x7f111085;
    /**
     * Button text shown in fingerprint dialog that allows the user to delete the fingerprint template [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_dialog_delete=0x7f111086;
    /**
     * Label text shown in fingerprint dialog for renaming a fingerprint template [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_dialog_name_label=0x7f111087;
    /**
     * Button text shown in fingerprint dialog that allows the user to rename a fingerprint template [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_dialog_ok=0x7f111088;
    /**
     * Text shown in fingerprint settings explaining what the fingerprint can be used for. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_disclaimer=0x7f111089;
    /**
     * Text shown in fingerprint settings explaining what the fingerprint can be used for in the case unlocking is disabled [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_disclaimer_lockscreen_disabled=0x7f11108a;
    /**
     * Button text to exit fingerprint wizard after everything is done [CHAR LIMIT=15]
     */
    public static final int security_settings_fingerprint_enroll_done=0x7f11108b;
    /**
     * Button text to skip enrollment of fingerprint [CHAR LIMIT=40]
     */
    public static final int security_settings_fingerprint_enroll_enrolling_skip=0x7f11108c;
    /**
     * Dialog message for dialog which shows when finger cannot be enrolled. [CHAR LIMIT=45]
     */
    public static final int security_settings_fingerprint_enroll_error_dialog_title=0x7f11108d;
    /**
     * Dialog message for dialog which shows when finger cannot be enrolled due to an internal error or fingerprint can't be read.
     */
    public static final int security_settings_fingerprint_enroll_error_generic_dialog_message=0x7f11108e;
    /**
     * Dialog message for dialog which shows when finger cannot be enrolled due to being idle too long.
     */
    public static final int security_settings_fingerprint_enroll_error_timeout_dialog_message=0x7f11108f;
    /**
     * Content description of graphic that shows where the fingerprint of the device is [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_find_sensor_content_description=0x7f111090;
    /**
     * Message shown in fingerprint enrollment dialog to locate the sensor
     */
    public static final int security_settings_fingerprint_enroll_find_sensor_message=0x7f111091;
    /**
     * Introduction title shown in fingerprint enrollment dialog to locate the sensor [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_find_sensor_title=0x7f111092;
    /**
     * Message shown in fingerprint enrollment dialog once enrollment is completed
     */
    public static final int security_settings_fingerprint_enroll_finish_message=0x7f111093;
    /**
     * Title shown in fingerprint enrollment dialog once enrollment is completed [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_finish_title=0x7f111094;
    /**
     * Button text to agree the consent and continue to the next screen from the introduction [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_introduction_agree=0x7f111095;
    /**
     * Button text to cancel enrollment from the introduction [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_introduction_cancel=0x7f111096;
    /**
     * Introduction detail message shown in fingerprint enrollment dialog when asking for parental consent [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_consent_message=0x7f111097;
    /**
     * Introduction detail message shown in the bottom of fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_footer_message_1=0x7f111098;
    /**
     * Introduction detail message shown in the bottom of fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_footer_message_2=0x7f111099;
    /**
     * Introduction detail message shown in the bottom of fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_footer_message_3=0x7f11109a;
    /**
     * Introduction title shown in the bottom of fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_footer_title_1=0x7f11109b;
    /**
     * Introduction title shown in the bottom of fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_footer_title_2=0x7f11109c;
    /**
     * Introduction title shown in the bottom of fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_footer_title_consent_1=0x7f11109d;
    /**
     * Introduction detail message shown in fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_message=0x7f11109e;
    /**
     * Introduction detail message shown in fingerprint enrollment dialog, when fingerprint unlock is disabled by device admin [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_message_unlock_disabled=0x7f11109f;
    /**
     * Button text to cancel enrollment [CHAR LIMIT=30]
     */
    public static final int security_settings_fingerprint_enroll_introduction_no_thanks=0x7f1110a0;
    /**
     * Introduction title shown in fingerprint enrollment to introduce the fingerprint feature [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_introduction_title=0x7f1110a1;
    /**
     * Introduction title shown in fingerprint enrollment to introduce the fingerprint feature, when fingerprint unlock is disabled by device admin [CHAR LIMIT=40]
     */
    public static final int security_settings_fingerprint_enroll_introduction_title_unlock_disabled=0x7f1110a2;
    /**
     * Text shown in fingerprint enroll when we didn't observe progress for a few seconds. [CHAR LIMIT=100]
     */
    public static final int security_settings_fingerprint_enroll_lift_touch_again=0x7f1110a3;
    /**
     * Message shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_repeat_message=0x7f1110a4;
    /**
     * Title shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=40]
     */
    public static final int security_settings_fingerprint_enroll_repeat_title=0x7f1110a5;
    /**
     * Button text to setup screen lock in onboard dialog [CHAR LIMIT=34]
     */
    public static final int security_settings_fingerprint_enroll_setup_screen_lock=0x7f1110a6;
    /**
     * Message shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_start_message=0x7f1110a7;
    /**
     * Title shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_start_title=0x7f1110a8;
    /**
     * Dialog message for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_touch_dialog_message=0x7f1110a9;
    /**
     * Dialog title for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=45]
     */
    public static final int security_settings_fingerprint_enroll_touch_dialog_title=0x7f1110aa;
    /**
     * Title shown in fingerprint enrollment [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_udfps_title=0x7f1110ab;
    /**
     * message shown in summary field when no fingerprints are registered
     */
    public static final int security_settings_fingerprint_preference_summary_none=0x7f1110ac;
    /**
     * Title shown for menu item that launches fingerprint settings or enrollment [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_preference_title=0x7f1110ad;
    /**
     * Acquire message received during fingerprint enrollment to inform the user this fingerprint has already been added. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_acquire_already_enrolled=0x7f1110ae;
    /**
     * Acquire message received during fingerprint enrollment to inform the user to clean the screen near the fingerprint sensor. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_acquire_clean_sensor=0x7f1110af;
    /**
     * Acquire message received during fingerprint enrollment to inform the user to cover the fingerprint sensor. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_acquire_partially_detected=0x7f1110b0;
    /**
     * Acquire message received during fingerprint enrollment to inform the user to try better lighting. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_acquire_too_bright=0x7f1110b1;
    /**
     * Acquire message received during fingerprint enrollment to inform the user to lift their finger. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_acquire_too_fast=0x7f1110b2;
    /**
     * Acquire message received during fingerprint enrollment to inform the user to change the position of their finger. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_acquire_try_adjusting=0x7f1110b3;
    /**
     * Acquire message received during fingerprint enrollment to inform the user they've reached the maximum number of enrollments. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_error_max_attempts=0x7f1110b4;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_1=0x7f1110b5;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_2=0x7f1110b6;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_3=0x7f1110b7;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_4=0x7f1110b8;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_5=0x7f1110b9;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_consent_2=0x7f1110ba;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_consent_3=0x7f1110bb;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_consent_4=0x7f1110bc;
    /**
     * Introduction description message shown in fingerprint enrollment introduction screen in setup wizard when asking for parental consent. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_message_consent_5=0x7f1110bd;
    /**
     * Introduction subtitle message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_title_1=0x7f1110be;
    /**
     * Introduction subtitle message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_footer_title_2=0x7f1110bf;
    /**
     * Introduction detail message shown in fingerprint enrollment introduction to learn more about fingerprint [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_message_learn_more=0x7f1110c0;
    /**
     * Introduction detail message shown in fingerprint enrollment introduction screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_enroll_introduction_message_setup=0x7f1110c1;
    /**
     * Message shown in fingerprint security settings home screen. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_v2_home_screen=0x7f1110c2;
    /**
     * Main Settings screen setting option summary text for the item tot ake you to the security and location screen
     */
    public static final int security_settings_summary=0x7f1110c3;
    /**
     * Main Settings screen setting option title for the item to take you to the security screen
     */
    public static final int security_settings_title=0x7f1110c4;
    /**
     * Message announced to a11y users during fingerprint enrollment to help them locate the sensor. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_udfps_enroll_a11y=0x7f1110c5;
    /**
     * Message shown during fingerprint enrollment that instructs the user to enroll the edges of their finger [CHAR LIMIT=160]
     */
    public static final int security_settings_udfps_enroll_edge_message=0x7f1110c6;
    /**
     * Title shown during fingerprint enrollment that instructs the user to enroll the edges of their finger [CHAR LIMIT=80]
     */
    public static final int security_settings_udfps_enroll_edge_title=0x7f1110c7;
    /**
     * Message shown in fingerprint enrollment dialog to locate the sensor [CHAR LIMIT=NONE]
     */
    public static final int security_settings_udfps_enroll_find_sensor_message=0x7f1110c8;
    /**
     * Button for starting fingerprint enrollment. [CHAR LIMIT=10]
     */
    public static final int security_settings_udfps_enroll_find_sensor_start_button=0x7f1110c9;
    /**
     * Introduction title shown in fingerprint enrollment dialog to locate the sensor [CHAR LIMIT=60]
     */
    public static final int security_settings_udfps_enroll_find_sensor_title=0x7f1110ca;
    /**
     * Title shown during fingerprint enrollment that instructs the user to enroll their fingertip [CHAR LIMIT=80]
     */
    public static final int security_settings_udfps_enroll_fingertip_title=0x7f1110cb;
    /**
     * Message read to a11y users when enrollment progress is made. The number is from 0 to 100. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_udfps_enroll_progress_a11y_message=0x7f1110cc;
    /**
     * Message shown in fingerprint enrollment asking users to repeat touching the fingerprint sensor. [CHAR LIMIT=160]
     */
    public static final int security_settings_udfps_enroll_repeat_a11y_message=0x7f1110cd;
    /**
     * Message shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=160]
     */
    public static final int security_settings_udfps_enroll_repeat_message=0x7f1110ce;
    /**
     * Title shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=60]
     */
    public static final int security_settings_udfps_enroll_repeat_title_touch_icon=0x7f1110cf;
    /**
     * Message shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=NONE]
     */
    public static final int security_settings_udfps_enroll_start_message=0x7f1110d0;
    /**
     * Title shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=40]
     */
    public static final int security_settings_udfps_enroll_title_one_more_time=0x7f1110d1;
    /**
     * Accessibility message for fingerprint enrollment asking the user to place the sides of their finger on the fingerprint sensor [CHAR LIMIT=NONE]
     */
    public static final int security_settings_udfps_side_fingerprint_help=0x7f1110d2;
    /**
     * Accessibility message for fingerprint enrollment asking the user to place the tip of their finger on the fingerprint sensor [CHAR LIMIT=NONE]
     */
    public static final int security_settings_udfps_tip_fingerprint_help=0x7f1110d3;
    /**
     * Title shown for work menu item that launches fingerprint settings or enrollment [CHAR LIMIT=22]
     */
    public static final int security_settings_work_fingerprint_preference_title=0x7f1110d4;
    /**
     * In the security screen, the header title for security statuses
     */
    public static final int security_status_title=0x7f1110d5;
    /**
     * See less items in contextual homepage [CHAR LIMIT=30]
     */
    public static final int see_less=0x7f1110d6;
    /**
     * See more items in contextual homepage [CHAR LIMIT=30]
     */
    public static final int see_more=0x7f1110d7;
    /**
     * action to select all [CHAR LIMIT=30]
     */
    public static final int select_all=0x7f1110d8;
    /**
     * UI debug setting: title for app picker dialog [CHAR LIMIT=50]
     */
    public static final int select_application=0x7f1110d9;
    /**
     * Available networks screen, name of switch button for whether to select network automatically [CHAR LIMIT=NONE]
     */
    public static final int select_automatically=0x7f1110da;
    /**
     * Label for screen showing to select device admin apps
     */
    public static final int select_device_admin_msg=0x7f1110db;
    /**
     * Developer settings: text for the bug report handler selection toast shown if an invalid bug report handler was chosen. [CHAR LIMIT=NONE]
     */
    public static final int select_invalid_bug_report_handler_toast_text=0x7f1110dc;
    /**
     * UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59]
     */
    public static final int select_logd_size_dialog_title=0x7f1110dd;
    /**
     * UI debug setting: limit size of Android logger buffers
     */
    public static final int select_logd_size_title=0x7f1110de;
    /**
     * UI debug setting: select which logs to store persistently [CHAR LIMIT=80]
     */
    public static final int select_logpersist_dialog_title=0x7f1110df;
    /**
     * Title of setting: title for selection of logs to store persistently [CHAR LIMIT=60]
     */
    public static final int select_logpersist_title=0x7f1110e0;
    public static final int select_private_dns_configuration_dialog_title=0x7f1110e1;
    /**
     * Developer option setting for Private DNS
     */
    public static final int select_private_dns_configuration_title=0x7f1110e2;
    /**
     * Message for selecting sim for call in settings.  [CHAR LIMIT=40]
     */
    public static final int select_sim_for_calls=0x7f1110e3;
    /**
     * Message for selecting sim for data in settings.  [CHAR LIMIT=40]
     */
    public static final int select_sim_for_data=0x7f1110e4;
    /**
     * Message for selecting sim for SMS in settings.  [CHAR LIMIT=40]
     */
    public static final int select_sim_for_sms=0x7f1110e5;
    /**
     * Summary for the Select to Speak Accessibility Service. [CHAR_LIMIT=none]
     */
    public static final int select_to_speak_summary=0x7f1110e6;
    /**
     * UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59]
     */
    public static final int select_usb_configuration_dialog_title=0x7f1110e7;
    /**
     * UI debug setting: select USB configuration
     */
    public static final int select_usb_configuration_title=0x7f1110e8;
    /**
     * Developer settings: select WebView provider dialog title [CHAR LIMIT=30]
     */
    public static final int select_webview_provider_dialog_title=0x7f1110e9;
    /**
     * Developer settings: select WebView provider title [CHAR LIMIT=30]
     */
    public static final int select_webview_provider_title=0x7f1110ea;
    /**
     * Developer settings: text for the WebView provider selection toast shown if an invalid provider was chosen (i.e. the setting list was stale). [CHAR LIMIT=NONE]
     */
    public static final int select_webview_provider_toast_text=0x7f1110eb;
    /**
     * [CHAR LIMIT=25] Title of developer tile to toggle sensors
     */
    public static final int sensors_off_quick_settings_title=0x7f1110ec;
    /**
     * [CHAR LIMIT=10] Running services, summary of background processes
     */
    public static final int service_background_processes=0x7f1110ed;
    /**
     * Running services, description for a service in the started state
     */
    public static final int service_client_name=0x7f1110ee;
    /**
     * [CHAR LIMIT=10] Running services, summary of foreground processes
     */
    public static final int service_foreground_processes=0x7f1110ef;
    /**
     * Running service details, manage a service that is running for some other reason.
     */
    public static final int service_manage=0x7f1110f0;
    /**
     * Running service details, default description for services that are managed.
     */
    public static final int service_manage_description=0x7f1110f1;
    /**
     * Text to label a process entry with the process name.
     */
    public static final int service_process_name=0x7f1110f2;
    /**
     * Label for a service item when it is restarting
     */
    public static final int service_restarting=0x7f1110f3;
    /**
     * Running services, description for a service in the started state
     */
    public static final int service_started_by_app=0x7f1110f4;
    /**
     * Running service details, stop a service that has started itself.
     */
    public static final int service_stop=0x7f1110f5;
    /**
     * Running service details, default description for services that are started.
     */
    public static final int service_stop_description=0x7f1110f6;
    /**
     * [CHAR LIMIT=NONE] Subtitle for process stats services list
     */
    public static final int services_subtitle=0x7f1110f7;
    /**
     * Label for switch about whether to limit how much data can be used [CHAR LIMIT=30]
     */
    public static final int set_data_limit=0x7f1110f8;
    /**
     * Label for switch about whether to warn user about usage [CHAR LIMIT=30]
     */
    public static final int set_data_warning=0x7f1110f9;
    /**
     * Data synchronization settings screen, setting option name
     */
    public static final int settings_backup=0x7f1110fa;
    /**
     * Data synchronization settings screen, setting option summary text when check box is selected
     */
    public static final int settings_backup_summary=0x7f1110fb;
    /**
     * Accessibility settings: button for launching settings for an accessibility service
     */
    public static final int settings_button=0x7f1110fc;
    /**
     * Content description for RadioButton with extra gear icon [CHAR LIMIT=NONE]
     */
    public static final int settings_label=0x7f1110fd;
    /**
     * Title of the Settings activity shown in the Launcher. [CHAR LIMIT=20]
     */
    public static final int settings_label_launcher=0x7f1110fe;
    /**
     * About phone settings screen, Open source license dialog title until license is fully loaded
     */
    public static final int settings_license_activity_loading=0x7f1110ff;
    /**
     * About phone settings, Legal information setting option name and title of dialog box holding license info
     */
    public static final int settings_license_activity_title=0x7f111100;
    /**
     * About phone settings screen, Open source license dialog message when licenses cannot be loaded
     */
    public static final int settings_license_activity_unavailable=0x7f111101;
    /**
     * Phone Manual
     */
    public static final int settings_manual_activity_title=0x7f111102;
    /**
     * About phone settings screen, Manual dialog message when manual cannot be loaded
     */
    public static final int settings_manual_activity_unavailable=0x7f111103;
    /**
     * Package name for Settings app
     */
    public static final int settings_package=0x7f111104;
    /**
     * Default title for the settings panel [CHAR LIMIT=NONE]
     */
    public static final int settings_panel_title=0x7f111105;
    /**
     * About phone settings screen, Safety Legal dialog title until the link is fully loaded
     */
    public static final int settings_safetylegal_activity_loading=0x7f111106;
    /**
     * About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info
     */
    public static final int settings_safetylegal_activity_title=0x7f111107;
    /**
     * About phone settings screen, Safety legal dialog message when data network is not connected
     */
    public static final int settings_safetylegal_activity_unreachable=0x7f111108;
    /**
     * About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info
     */
    public static final int settings_safetylegal_title=0x7f111109;
    /**
     * Label for option to select a settings panel as a shortcut
     */
    public static final int settings_shortcut=0x7f11110a;
    /**
     * Name of a font family to use for body in SettingsLib.
     */
    public static final int settingslib_config_bodyFontFamily=0x7f11110b;
    /**
     * Name of a font family to use for body-medium in SettingsLib.
     */
    public static final int settingslib_config_bodyFontFamilyMedium=0x7f11110c;
    /**
     * Name of a font family to use for headlines in SettingsLib.
     */
    public static final int settingslib_config_headlineFontFamily=0x7f11110d;
    /**
     * Name of a font family to use for headlines-medium in SettingsLib.
     */
    public static final int settingslib_config_headlineFontFamilyMedium=0x7f11110e;
    /**
     * learn more text of footer preference [CHAR LIMIT=NONE]
     */
    public static final int settingslib_learn_more_text=0x7f11110f;
    /**
     * Pixel theme
     */
    public static final int setup_design_layout_gravity=0x7f111110;
    /**
     * Content of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=NONE]
     */
    public static final int setup_fingerprint_enroll_enrolling_skip_message=0x7f111111;
    /**
     * Title of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=40]
     */
    public static final int setup_fingerprint_enroll_enrolling_skip_title=0x7f111112;
    /**
     * Body text of dialog shown when the user tries to skip setting up fingerprint after adding lock screen during initial setup [CHAR LIMIT=NONE]
     */
    public static final int setup_fingerprint_enroll_skip_after_adding_lock_text=0x7f111113;
    /**
     * Title of dialog shown when the user tries to skip setting up fingerprint after adding lock screen during initial setup. [CHAR LIMIT=30]
     */
    public static final int setup_fingerprint_enroll_skip_title=0x7f111114;
    /**
     * Label for button in screen lock settings, allowing users to choose other types of screen locks. [CHAR LIMIT=40]
     */
    public static final int setup_lock_settings_options_button_label=0x7f111115;
    /**
     * Title for dialog in screen lock settings, allowing users to choose other types of screen locks. [CHAR LIMIT=40]
     */
    public static final int setup_lock_settings_options_dialog_title=0x7f111116;
    /**
     * Description text for screen in setup wizard asking user to set up screen lock, explaining to the user how setting up a screen lock protect them from losing data. (device) [CHAR LIMIT=NONE]
     */
    public static final int setup_lock_settings_picker_message=0x7f111117;
    /**
     * Title for security picker in setup wizard to choose the unlock method: None/Pattern/PIN/Password (device) [CHAR LIMIT=22]
     */
    public static final int setup_lock_settings_picker_title=0x7f111118;
    /**
     * Extreme threats summary.  [CHAR LIMIT=60]
     */
    public static final int severe_threats_summary=0x7f111119;
    /**
     * Severe threats title.  [CHAR LIMIT=30]
     */
    public static final int severe_threats_title=0x7f11111a;
    /**
     * Button label for generic share action [CHAR LIMIT=20]
     */
    public static final int share=0x7f11111b;
    /**
     * Acceptance label of dialog shown to ask for user consent for sharing the remote bugreport.
     */
    public static final int share_remote_bugreport_action=0x7f11111c;
    /**
     * Message of a dialog shown to ask for user consent for sharing a bugreport that was requested remotely by the IT administrator and it's still being taken.
     */
    public static final int share_remote_bugreport_dialog_message=0x7f11111d;
    /**
     * Message of a dialog shown to ask for user consent for sharing a bugreport that was requested remotely by the IT administrator.
     */
    public static final int share_remote_bugreport_dialog_message_finished=0x7f11111e;
    /**
     * Title of dialog shown to ask for user consent for sharing a bugreport that was requested remotely by the IT administrator.
     */
    public static final int share_remote_bugreport_dialog_title=0x7f11111f;
    /**
     * Shared data: text to display when there was an error while deleting a shared data object [CHAR LIMIT=NONE]
     */
    public static final int shared_data_delete_failure_text=0x7f111120;
    /**
     * Shared data: dialog text when there are no acquired leases for a blob [CHAR LIMIT=NONE]
     */
    public static final int shared_data_no_accessors_dialog_text=0x7f111121;
    /**
     * Shared data: display text when there are no shared data blobs available [CHAR LIMIT=NONE]
     */
    public static final int shared_data_no_blobs_text=0x7f111122;
    /**
     * Shared data: text to display when there was an error while fetching shared data for the user [CHAR LIMIT=NONE]
     */
    public static final int shared_data_query_failure_text=0x7f111123;
    /**
     * Storage: shared data summary [CHAR LIMIT=80]
     */
    public static final int shared_data_summary=0x7f111124;
    /**
     * Storage: view and access information about shared blobs [CHAR LIMIT=50]
     */
    public static final int shared_data_title=0x7f111125;
    /**
     * Message of a dialog shown to inform that the remote bugreport that was requested remotely by the IT administrator is still being taken and will be shared when finished.
     */
    public static final int sharing_remote_bugreport_dialog_message=0x7f111126;
    /**
     * Summary for Font size. Lets the user know that this will make text larger or smaller. Appears in the accessibility portion of setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int short_summary_font_size=0x7f111127;
    /**
     * UI debug setting: show all ANRs? [CHAR LIMIT=25]
     */
    public static final int show_all_anrs=0x7f111128;
    /**
     * UI debug setting: show all ANRs summary [CHAR LIMIT=100]
     */
    public static final int show_all_anrs_summary=0x7f111129;
    /**
     * Label for menu to show battery usage in the device [CHAR LIMIT=45]
     */
    public static final int show_all_apps=0x7f11112a;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Show background cached processes.
     */
    public static final int show_background_processes=0x7f11112b;
    /**
     * Title for toggle controlling whether notifications are shown when an app pastes from clipboard. [CHAR LIMIT=50]
     */
    public static final int show_clip_access_notification=0x7f11112c;
    /**
     * Summary for toggle controlling whether notifications are shown when an app pastes from clipboard. [CHAR LIMIT=NONE]
     */
    public static final int show_clip_access_notification_summary=0x7f11112d;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Okay we get it, stop pressing, you already have it on
     */
    public static final int show_dev_already=0x7f11112e;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Okay we get it, stop pressing, you already have it on
     */
    public static final int show_dev_already_cm=0x7f11112f;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Confirmation that developer settings are enabled
     */
    public static final int show_dev_on=0x7f111130;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Confirmation that developer settings are enabled
     */
    public static final int show_dev_on_cm=0x7f111131;
    /**
     * UI debug setting: preference title - show all crash dialogs [CHAR LIMIT=60]
     */
    public static final int show_first_crash_dialog=0x7f111132;
    /**
     * UI debug setting: preference summary - describes the behavior of showing a dialog every time an app crashes [CHAR LIMIT=NONE]
     */
    public static final int show_first_crash_dialog_summary=0x7f111133;
    /**
     * UI debug setting: show when hardware layers get updated [CHAR LIMIT=25]
     */
    public static final int show_hw_layers_updates=0x7f111134;
    /**
     * UI debug setting: show hardware layers updates summary [CHAR LIMIT=50]
     */
    public static final int show_hw_layers_updates_summary=0x7f111135;
    /**
     * UI debug setting: show where window updates happen with GPU rendering? [CHAR LIMIT=25]
     */
    public static final int show_hw_screen_updates=0x7f111136;
    /**
     * UI debug setting: show GPU rendering screen updates summary [CHAR LIMIT=50]
     */
    public static final int show_hw_screen_updates_summary=0x7f111137;
    /**
     * Title for the 'show virtual keyboard' preference switch. [CHAR LIMIT=35]
     */
    public static final int show_ime=0x7f111138;
    /**
     * Summary text for the 'add virtual keyboard' preference sub-screen. [CHAR LIMIT=100]
     */
    public static final int show_ime_summary=0x7f111139;
    public static final int show_navbar_hint_summary=0x7f11113a;
    /**
     * Navigation bar hint
     */
    public static final int show_navbar_hint_title=0x7f11113b;
    /**
     * UI debug setting: show when non-rectangular clip operations are used [CHAR LIMIT=100]
     */
    public static final int show_non_rect_clip=0x7f11113c;
    /**
     * UI debug setting: show missing channel toasts? [CHAR LIMIT=25]
     */
    public static final int show_notification_channel_warnings=0x7f11113d;
    /**
     * UI debug setting: show missing channel toasts summary [CHAR LIMIT=50]
     */
    public static final int show_notification_channel_warnings_summary=0x7f11113e;
    /**
     * Switch summary to show operator name in the status bar [CHAR LIMIT=NONE]
     */
    public static final int show_operator_name_summary=0x7f11113f;
    /**
     * Switch label to show operator name in the status bar [CHAR LIMIT=60]
     */
    public static final int show_operator_name_title=0x7f111140;
    /**
     * Text shown next to checkbox for showing owner info on LockScreen [CHAR LIMIT=50]
     */
    public static final int show_owner_info_on_lockscreen_label=0x7f111141;
    /**
     * On Security & location settings screen, setting check box name. Title of the checkbox to set whether password edit fields will show the most recent character typed and then hide it, or just hide it right away.  By hide, I mean mask it out.
     */
    public static final int show_password=0x7f111142;
    /**
     * On Security & location settings screen. This is a short summary text describing what "Show passwords" setting does
     */
    public static final int show_password_summary=0x7f111143;
    /**
     * Text shown next to checkbox for showing profile info on LockScreen [CHAR LIMIT=50]
     */
    public static final int show_profile_info_on_lockscreen_label=0x7f111144;
    /**
     * Debugging developer settings: show refresh rate? [CHAR LIMIT=36]
     */
    public static final int show_refresh_rate=0x7f111145;
    /**
     * Debugging developer settings: show refresh rate summary [CHAR LIMIT=58]
     */
    public static final int show_refresh_rate_summary=0x7f111146;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Show running services.
     */
    public static final int show_running_services=0x7f111147;
    /**
     * UI debug setting: show where surface updates happen? [CHAR LIMIT=25]
     */
    public static final int show_screen_updates=0x7f111148;
    /**
     * UI debug setting: show surface updates summary [CHAR LIMIT=50]
     */
    public static final int show_screen_updates_summary=0x7f111149;
    /**
     * UI debug setting: show touches? [CHAR LIMIT=25]
     */
    public static final int show_touches=0x7f11114a;
    /**
     * UI debug setting: show touches location summary [CHAR LIMIT=50]
     */
    public static final int show_touches_summary=0x7f11114b;
    /**
     * Notification settings: suppress status bar/ambient icons for silent notifications
     */
    public static final int silent_notifications_status_bar=0x7f11114c;
    /**
     * Button on a dialog to confirm SIM operations. [CHAR LIMIT=30]
     */
    public static final int sim_action_continue=0x7f11114d;
    /**
     * Message in a dialog indicating the user can enable DSDS mode. [CHAR LIMIT=NONE]
     */
    public static final int sim_action_enable_dsds_text=0x7f11114e;
    /**
     * Title on a dialog asking the users whether they want to enable DSDS mode. [CHAR LIMIT=NONE]
     */
    public static final int sim_action_enable_dsds_title=0x7f11114f;
    /**
     * Body text of error message indicating the device could not disconnect from one mobile network and immediately connect to another, due to an unspecified issue. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_enable_sim_fail_text=0x7f111150;
    /**
     * Title of error message indicating that the device could not disconnect from one mobile network and immediately connect to another. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_enable_sim_fail_title=0x7f111151;
    /**
     * Title of confirmation dialog asking the user if they want to enable subscription. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_enable_sub_dialog_title=0x7f111152;
    /**
     * Title of confirmation dialog asking the user if they want to enable subscription without the subscription name. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_enable_sub_dialog_title_without_carrier_name=0x7f111153;
    /**
     * Status message indicating the device is in the process of disconnecting from one mobile network and immediately connecting to another. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_enabling_sim_without_carrier_name=0x7f111154;
    /**
     * Button on a dialog to reject SIM operations. [CHAR LIMIT=30]
     */
    public static final int sim_action_no_thanks=0x7f111155;
    /**
     * User confirms reboot the phone. [CHAR LIMIT=30]
     */
    public static final int sim_action_reboot=0x7f111156;
    /**
     * Tell the user that in order to enable DSDS mode, the phone needs to restart. [CHAR LIMIT=NONE]
     */
    public static final int sim_action_restart_text=0x7f111157;
    /**
     * Ask the user whether to restart device. [CHAR LIMIT=NONE]
     */
    public static final int sim_action_restart_title=0x7f111158;
    /**
     * Title of confirmation dialog asking the user if they want to switch to the SIM card. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_psim_dialog_title=0x7f111159;
    /**
     * Text of confirm button in the confirmation dialog asking the user if they want to switch subscription. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_sub_dialog_confirm=0x7f11115a;
    /**
     * Text of progress dialog indicating the subscription switch is in progress. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_sub_dialog_progress=0x7f11115b;
    /**
     * Body text of confirmation dialog for switching subscription that involves switching SIM slots. Indicates that only one SIM can be active at a time. Also that switching will not cancel the user's mobile service plan. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_sub_dialog_text=0x7f11115c;
    /**
     * Body text of confirmation dialog for switching subscription between two eSIM profiles. Indicates that only one downloaded SIM can be active at a time. Also that switching will not cancel the user's mobile service plan. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_sub_dialog_text_downloaded=0x7f11115d;
    /**
     * Body text of confirmation dialog for switching subscription between two eSIM profiles. Indicates that only one SIM can be active at a time. Also that switching will not cancel the user's mobile service plan. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_sub_dialog_text_single_sim=0x7f11115e;
    /**
     * Title of confirmation dialog asking the user if they want to switch subscription. [CHAR_LIMIT=NONE]
     */
    public static final int sim_action_switch_sub_dialog_title=0x7f11115f;
    /**
     * Button on a dialog to confirm SIM operations. [CHAR LIMIT=30]
     */
    public static final int sim_action_yes=0x7f111160;
    /**
     * SIM card lock settings screen, SIM PIN dialog message when wrong PIN is entered  [CHAR LIMIT=40]
     */
    public static final int sim_bad_pin=0x7f111161;
    /**
     * Title for call back. [CHAR LIMIT=60]
     */
    public static final int sim_call_back_title=0x7f111162;
    /**
     * Checkbox to always use for calls.  [CHAR LIMIT=40]
     */
    public static final int sim_calls_always_use=0x7f111163;
    /**
     * When a user chooses this "Ask first" preference for the SIM to use for phone calls, they'll be prompted to choose a SIM every time they initiate a call [CHAR LIMIT=50]
     */
    public static final int sim_calls_ask_first_prefs_title=0x7f111164;
    /**
     * A title for a SIM card spinner UI component which users can choose a SIM card. [CHAR LIMIT=NONE]
     */
    public static final int sim_card=0x7f111165;
    /**
     * Button label of the removable sim card. [CHAR LIMIT=NONE]
     */
    public static final int sim_card_label=0x7f111166;
    /**
     * Label for a numbered SIM card.  [CHAR LIMIT=40]
     */
    public static final int sim_card_number_title=0x7f111167;
    /**
     * Select label Title of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_card_select_title=0x7f111168;
    /**
     * Message that SIM cards have changed.  [CHAR LIMIT=40]
     */
    public static final int sim_cards_changed_message=0x7f111169;
    /**
     * Message smmary that SIM cards have changed.  [CHAR LIMIT=60]
     */
    public static final int sim_cards_changed_message_summary=0x7f11116a;
    /**
     * Provider Model: summary of Active in SIM category. [CHAR LIMIT=50]
     */
    public static final int sim_category_active_sim=0x7f11116b;
    /**
     * Provider Model: summary of default config. [CHAR LIMIT=50]
     */
    public static final int sim_category_default_active_sim=0x7f11116c;
    /**
     * Provider Model: summary of Inactive in SIM category. [CHAR LIMIT=50]
     */
    public static final int sim_category_inactive_sim=0x7f11116d;
    /**
     * Provider Model: title of SIM category
     */
    public static final int sim_category_title=0x7f11116e;
    /**
     * Message that Cellular data is unavailable.  [CHAR LIMIT=40]
     */
    public static final int sim_cellular_data_unavailable=0x7f11116f;
    /**
     * Message summary that Cellular data is unavailable.  [CHAR LIMIT=60]
     */
    public static final int sim_cellular_data_unavailable_summary=0x7f111170;
    /**
     * Message confirming the user wishes to change the default data SIM from one to another.  [CHAR LIMIT=NONE]
     */
    public static final int sim_change_data_message=0x7f111171;
    /**
     * Ok button label confirming the user wishes to change the default data SIM from one to
     * another. [CHAR LIMIT=25]
     */
    public static final int sim_change_data_ok=0x7f111172;
    /**
     * Title asking user if they wish to change the default sim for cellular data.  [CHAR LIMIT=40]
     */
    public static final int sim_change_data_title=0x7f111173;
    /**
     * SIM card lock settings screen, toast after not entering correct SIM PIN  [CHAR LIMIT=40]
     */
    public static final int sim_change_failed=0x7f111174;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_change_pin=0x7f111175;
    /**
     * SIM card lock settings screen, SIM PIN dialog message when the entered PIN is correct [CHAR LIMIT=40]
     */
    public static final int sim_change_succeeded=0x7f111176;
    /**
     * Title for SIM combination warning. [CHAR LIMIT=80]
     */
    public static final int sim_combination_warning_notification_title=0x7f111177;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_disable_sim_lock=0x7f111178;
    /**
     * Carrier label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_carrier=0x7f111179;
    /**
     * Color label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_color=0x7f11117a;
    /**
     * Name label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_name=0x7f11117b;
    /**
     * Number label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_number=0x7f11117c;
    /**
     * Title label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_title=0x7f11117d;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enable_sim_lock=0x7f11117e;
    /**
     * SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40]
     */
    public static final int sim_enter_cancel=0x7f11117f;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enter_new=0x7f111180;
    /**
     * SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40]
     */
    public static final int sim_enter_ok=0x7f111181;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enter_old=0x7f111182;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enter_pin=0x7f111183;
    /**
     * SIM card lock settings screen, toast after not entering correct SIM PIN [CHAR LIMIT=40]
     */
    public static final int sim_lock_failed=0x7f111184;
    /**
     * SIM card lock settings screen, setting option summary text when SIM lock check box is clear  [CHAR LIMIT=40]
     */
    public static final int sim_lock_off=0x7f111185;
    /**
     * SIM card lock settings screen, setting option summary text when SIM lock check box is selected  [CHAR LIMIT=40]
     */
    public static final int sim_lock_on=0x7f111186;
    /**
     * SIM lock settings title  [CHAR LIMIT=40]
     */
    public static final int sim_lock_settings=0x7f111187;
    /**
     * Security & screen lock settings screen, SIM card lock setting option name  [CHAR LIMIT=40]
     */
    public static final int sim_lock_settings_category=0x7f111188;
    /**
     * Security & screen lock settings screen, SIM card lock setting summary when off [CHAR LIMIT=NONE]
     */
    public static final int sim_lock_settings_summary_off=0x7f111189;
    /**
     * Security & screen lock settings screen, SIM card lock setting summary when on [CHAR LIMIT=NONE]
     */
    public static final int sim_lock_settings_summary_on=0x7f11118a;
    /**
     * Security & location settings screen, section heading for settings related to sim card locking  [CHAR LIMIT=40]
     */
    public static final int sim_lock_settings_title=0x7f11118b;
    /**
     * Multiple SIMs found summary.  [CHAR LIMIT=100]
     */
    public static final int sim_multi_sims_summary=0x7f11118c;
    /**
     * Multiple SIMs found title.  [CHAR LIMIT=40]
     */
    public static final int sim_multi_sims_title=0x7f11118d;
    /**
     * Hint for SIM name in sim name editor dialog.  [CHAR LIMIT=40]
     */
    public static final int sim_name_hint=0x7f11118e;
    /**
     * Message informing the user that no SIM card is inserted  [CHAR LIMIT=60]
     */
    public static final int sim_no_inserted_msg=0x7f11118f;
    /**
     * Message under title informing the user to touch to go to SIM Cards in Settings.  [CHAR LIMIT=40]
     */
    public static final int sim_notification_summary=0x7f111190;
    /**
     * Title for SIM card notification.  [CHAR LIMIT=40]
     */
    public static final int sim_notification_title=0x7f111191;
    /**
     * Title for other call settings. [CHAR LIMIT=60]
     */
    public static final int sim_other_call_settings=0x7f111192;
    /**
     * Title for outgoing back. [CHAR LIMIT=60]
     */
    public static final int sim_outgoing_call_title=0x7f111193;
    /**
     * SIM card lock settings screen, setting option name to change the SIM PIN  [CHAR LIMIT=40]
     */
    public static final int sim_pin_change=0x7f111194;
    /**
     * SIM card lock settings screen, toast after disabling PIN failed from modem
     */
    public static final int sim_pin_disable_failed=0x7f111195;
    /**
     * SIM card lock settings screen, toast after enabling PIN failed from modem
     */
    public static final int sim_pin_enable_failed=0x7f111196;
    /**
     * SIM card lock settings screen, setting check box label  [CHAR LIMIT=40]
     */
    public static final int sim_pin_toggle=0x7f111197;
    /**
     * SIM card lock settings screen, SIM PIN dialog message when PINs don't match  [CHAR LIMIT=40]
     */
    public static final int sim_pins_dont_match=0x7f111198;
    /**
     * Message for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=NONE]
     */
    public static final int sim_preferred_message=0x7f111199;
    /**
     * Title for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=30]
     */
    public static final int sim_preferred_title=0x7f11119a;
    /**
     * SIM card lock settings screen, Re-type new PIN.  [CHAR LIMIT=40]
     */
    public static final int sim_reenter_new=0x7f11119b;
    /**
     * Title for selecting a SIM card.  [CHAR LIMIT=40]
     */
    public static final int sim_select_card=0x7f11119c;
    /**
     * Title for SIM selection notification channel
     */
    public static final int sim_selection_channel_title=0x7f11119d;
    /**
     * When a SIM preference hasn't been selected yet, this string is displayed as the pref summary until the user chooses a SIM subscription from the preference list [CHAR LIMIT=50]
     */
    public static final int sim_selection_required_pref=0x7f11119e;
    /**
     * Summary for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40]
     */
    public static final int sim_settings_summary=0x7f11119f;
    /**
     * Title for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40]
     */
    public static final int sim_settings_title=0x7f1111a0;
    /**
     * Category name of the notifications related to SIM setup. [CHAR LIMIT=NONE]
     */
    public static final int sim_setup_channel_id=0x7f1111a1;
    /**
     * Title for SIM card settings during Setup Wizard.  [CHAR LIMIT=40]
     */
    public static final int sim_setup_wizard_title=0x7f1111a2;
    /**
     * Summary text describing signal strength to the user.  [CHAR LIMIT=60]
     */
    public static final int sim_signal_strength=0x7f1111a3;
    /**
     * SIM status title  [CHAR LIMIT=40]
     */
    public static final int sim_status_title=0x7f1111a4;
    /**
     * SIM status title  [CHAR LIMIT=40]
     */
    public static final int sim_status_title_sim_slot=0x7f1111a5;
    /**
     * Button which will disconnect the user from one mobile network and immediately connect to another. [CHAR LIMIT=30]
     */
    public static final int sim_switch_button=0x7f1111a6;
    /**
     * Title on a push notification indicating that the user's device is in the middle of switching between mobile networks. [CHAR LIMIT=NONE]
     */
    public static final int sim_switch_channel_id=0x7f1111a7;
    /**
     * UI debug setting: simulate color space anomalies. [CHAR LIMIT=25]
     */
    public static final int simulate_color_space=0x7f1111a8;
    /**
     * Button for skipping a step after having been warned of a potential concern [CHAR LIMIT=30]
     */
    public static final int skip_anyway_button_label=0x7f1111a9;
    /**
     * Used in setup wizard Wi-Fi screen.  The button label for going to the next screen without submitting. [CHAR LIMIT=20]
     */
    public static final int skip_label=0x7f1111aa;
    /**
     * Button text to skip lock screen setup [CHAR LIMIT=20]
     */
    public static final int skip_lock_screen_dialog_button_label=0x7f1111ab;
    public static final int slot_number=0x7f1111ac;
    /**
     * Footer for the aosp smart battery page
     */
    public static final int smart_battery_footer=0x7f1111ad;
    /**
     * Title for the smart battery manager preference [CHAR LIMIT=NONE]
     */
    public static final int smart_battery_manager_title=0x7f1111ae;
    /**
     * Summary for the smart battery toggle [CHAR LIMIT=NONE]
     */
    public static final int smart_battery_summary=0x7f1111af;
    /**
     * Title for the smart battery toggle [CHAR LIMIT=NONE]
     */
    public static final int smart_battery_title=0x7f1111b0;
    /**
     * Subtext for sim is not activated [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_failed_not_activated_text=0x7f1111b1;
    /**
     * Subtext for smart forwarding failed [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_failed_text=0x7f1111b2;
    /**
     * Dialog title for smart forwarding failed [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_failed_title=0x7f1111b3;
    /**
     * Dialog title when user update the phone number [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_input_mdn_dialog_title=0x7f1111b4;
    /**
     * Title when smart forwarding can't get the phone number [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_input_mdn_title=0x7f1111b5;
    /**
     * Alert Dialog text when user didn't input the phone number [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_missing_alert_dialog_text=0x7f1111b6;
    /**
     * Alert Dialog text when user didn't input the phone number [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_missing_mdn_text=0x7f1111b7;
    /**
     * Subtext for smart forwarding ongoing [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_ongoing_text=0x7f1111b8;
    /**
     * Dialog title for smart forwarding ongoing [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_ongoing_title=0x7f1111b9;
    /**
     * Summary for smart forwarding disabled [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_summary_disabled=0x7f1111ba;
    /**
     * Summary for smart forwarding enabled [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_summary_enabled=0x7f1111bb;
    /**
     * Title for smart forwarding [CHAR LIMIT=50]
     */
    public static final int smart_forwarding_title=0x7f1111bc;
    /**
     * Configure Notifications: section header for prioritizer settings  [CHAR LIMIT=80]
     */
    public static final int smart_notifications_title=0x7f1111bd;
    /**
     * Disclaimer for camera based rotate [CHAR_LIMIT=NONE]
     */
    public static final int smart_rotate_text_headline=0x7f1111be;
    /**
     * SMS Application [CHAR LIMIT=35]
     */
    public static final int sms_application_title=0x7f1111bf;
    public static final int sms_change_default_dialog_text=0x7f1111c0;
    public static final int sms_change_default_dialog_title=0x7f1111c1;
    public static final int sms_change_default_no_previous_dialog_text=0x7f1111c2;
    /**
     * Mobile network settings screen, title of item showing the name of the default subscription
     * that will be used for SMS messages. This only appears in multi-SIM mode. [CHAR LIMIT=NONE]
     */
    public static final int sms_preference=0x7f1111c3;
    /**
     * Provider Model: SMS preference title
     */
    public static final int sms_preference_title=0x7f1111c4;
    /**
     * Configure Notifications: setting title, whether the snooze menu is shown on notifications [CHAR LIMIT=80]
     */
    public static final int snooze_options_title=0x7f1111c5;
    /**
     * Description of app sometimes running [CHAR LIMIT=45]
     */
    public static final int sometimes_running=0x7f1111c6;
    /**
     * Menu item for Sorting list by average memory use [CHAR LIMIT=NONE]
     */
    public static final int sort_avg_use=0x7f1111c7;
    /**
     * Menu item for Sorting list by maximum memory use [CHAR LIMIT=NONE]
     */
    public static final int sort_max_use=0x7f1111c8;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Sorts all of the apps in the list alphabetically.
     */
    public static final int sort_order_alpha=0x7f1111c9;
    /**
     * Manage applications screen, menu item. Sorts all of the apps in the list based on how often they send notifications.
     */
    public static final int sort_order_frequent_notification=0x7f1111ca;
    /**
     * Manage applications screen, menu item. Sorts all of the apps in the list based on how recently they sent notifications.
     */
    public static final int sort_order_recent_notification=0x7f1111cb;
    /**
     * Manage applications screen, menu item. Sorts all of the apps in the list based on their file size.  This is used to uninstall when space is getting low.
     */
    public static final int sort_order_size=0x7f1111cc;
    /**
     * Category title for phone call's ringtone and vibration settings in the Sound Setting.
     * [CHAR LIMIT=40]
     */
    public static final int sound_category_call_ringtone_vibrate_title=0x7f1111cd;
    /**
     * Summary for sound settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int sound_dashboard_summary=0x7f1111ce;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int sound_effects_enable_title=0x7f1111cf;
    /**
     * Sound settings screen heading
     */
    public static final int sound_settings=0x7f1111d0;
    /**
     * Sound: Dashboard summary example used in Setup Wizard preview screen. [CHAR LIMIT=100]
     */
    public static final int sound_settings_example_summary=0x7f1111d1;
    /**
     * Sound: Dashboard summary indicating the volume of ringtone. example: Ring volume at 20%.
     * [CHAR LIMIT=100]
     */
    public static final int sound_settings_summary=0x7f1111d2;
    /**
     * Sound: Dashboard summary indicating the volume of ringtone when at 0% with vibrate disabled [CHAR LIMIT=100]
     */
    public static final int sound_settings_summary_silent=0x7f1111d3;
    /**
     * Sound: Dashboard summary indicating the volume of ringtone when at 0% with vibrate enabled. [CHAR LIMIT=100]
     */
    public static final int sound_settings_summary_vibrate=0x7f1111d4;
    /**
     * Work Sounds: Work sound settings section header.  [CHAR LIMIT=50]
     */
    public static final int sound_work_settings=0x7f1111d5;
    /**
     * Sound: Title for the option enabling spatializer effect. [CHAR LIMIT=30]
     */
    public static final int spatial_audio_title=0x7f1111d6;
    /**
     * [CHAR_LIMIT=60] Label for special access screen
     */
    public static final int special_access=0x7f1111d7;
    /**
     * Title for the See more preference item in Special app access settings [CHAR LIMIT=30]
     */
    public static final int special_access_more=0x7f1111d8;
    /**
     * Speed label for fast network speed
     */
    public static final int speed_label_fast=0x7f1111d9;
    /**
     * Speed label for medium network speed
     */
    public static final int speed_label_medium=0x7f1111da;
    /**
     * Speed label for okay network speed
     */
    public static final int speed_label_okay=0x7f1111db;
    /**
     * Speed label for slow network speed
     */
    public static final int speed_label_slow=0x7f1111dc;
    /**
     * Speed label for very fast network speed
     */
    public static final int speed_label_very_fast=0x7f1111dd;
    /**
     * Speed label for very slow network speed
     */
    public static final int speed_label_very_slow=0x7f1111de;
    /**
     * [CHAR LIMIT=30] Label for the placeholder of the current spell checker name.  Used when no spell checker is currently selected.
     */
    public static final int spell_checker_not_selected=0x7f1111df;
    /**
     * [CHAR LIMIT=45] Title for the primary switch for spell checker, turning off will disable entire spell check feature.
     */
    public static final int spell_checker_primary_switch_title=0x7f1111e0;
    /**
     * Image button description for spell checker language.
     */
    public static final int spellchecker_language=0x7f1111e1;
    /**
     * Image button description for spell checker quick settings.
     */
    public static final int spellchecker_quick_settings=0x7f1111e2;
    /**
     * Warning message about security implications of enabling a spell checker, displayed as a dialog
     * message when the user selects to enable a spell checker.
     */
    public static final int spellchecker_security_warning=0x7f1111e3;
    /**
     * Title for spell checker settings for work [CHAR LIMIT=45]
     */
    public static final int spellcheckers_settings_for_work_title=0x7f1111e4;
    /**
     * Title for spell checker settings
     */
    public static final int spellcheckers_settings_title=0x7f1111e5;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int ssid_label=0x7f1111e6;
    /**
     * Shows up when there is a user SSL CA Cert installed on the
     * device.  Indicates to the user that SSL traffic can be intercepted.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_warning=0x7f1111e7;
    /**
     * Text of warning to show to users that have a SSL CA Cert installed.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_warning_message=0x7f1111e8;
    /**
     * Settings item summary for standby bucket value of an app. [CHAR LIMIT=100]
     */
    public static final int standby_bucket_summary=0x7f1111e9;
    /**
     * Shown when password is correct, and we're starting Android
     */
    public static final int starting_android=0x7f1111ea;
    /**
     * About phone, status item title.  How much time the device has had its main CPU awake.
     */
    public static final int status_awake_time=0x7f1111eb;
    public static final int status_bar_double_tap_to_sleep_summary=0x7f1111ec;
    /**
     * Double tap to sleep on status bar or lockscreen
     */
    public static final int status_bar_double_tap_to_sleep_title=0x7f1111ed;
    public static final int status_bar_notification_info_overflow=0x7f1111ee;
    /**
     * About phone, status item title.  The bluetooth adapter's hardware address
     */
    public static final int status_bt_address=0x7f1111ef;
    /**
     * About phone, status item title for the type of data phone network we're connected to, for example 3G or Edge or GPRS
     */
    public static final int status_data_network_type=0x7f1111f0;
    /**
     * About phone, status item title. The status of data access.  For example, the value may be "Connected"
     */
    public static final int status_data_state=0x7f1111f1;
    /**
     * About phone, status item title.  The device's MAC address of the Wi-Fi network adapter. [CHAR LIMIT=50]
     */
    public static final int status_device_wifi_mac_address=0x7f1111f2;
    /**
     * About phone, status item title. The ID of embedded SIM card.
     */
    public static final int status_esim_id=0x7f1111f3;
    /**
     * About phone, status item title.  The ICCID of the current LTE device. [CHAR LIMIT=30]
     */
    public static final int status_icc_id=0x7f1111f4;
    /**
     * Do not translate. About phone, status item title
     */
    public static final int status_iccid=0x7f1111f5;
    /**
     * Do not translate. About phone, status item title
     */
    public static final int status_imei=0x7f1111f6;
    /**
     * Do not translate. About phone, status item title
     */
    public static final int status_imei_sv=0x7f1111f7;
    /**
     * About phone, status item title for the latest area info cell broadcast received (Brazil only).
     */
    public static final int status_latest_area_info=0x7f1111f8;
    /**
     * About phone, status item title.  The phone MEID number of the current LTE/CDMA device. [CHAR LIMIT=30]
     */
    public static final int status_meid_number=0x7f1111f9;
    /**
     * About phone, status item title.  The phone MIN number of the current device.
     */
    public static final int status_min_number=0x7f1111fa;
    /**
     * About phone, status item title.  The phone MSID number of the current device.
     */
    public static final int status_msid_number=0x7f1111fb;
    /**
     * About phone, status item title.  The phone number of the current device [CHAR LIMIT=40]
     */
    public static final int status_number=0x7f1111fc;
    /**
     * About phone, status item title for multi-sim devices.  The phone number of the current device [CHAR LIMIT=40]
     */
    public static final int status_number_sim_slot=0x7f1111fd;
    /**
     * About phone, status item title.  The phone number of the current device [CHAR LIMIT=30]
     */
    public static final int status_number_sim_status=0x7f1111fe;
    /**
     * About phone, status item title. The cell carrier that the user is connected to.
     */
    public static final int status_operator=0x7f1111ff;
    /**
     * About phone, status item title.  The phone PRL Version of the current device.
     */
    public static final int status_prl_version=0x7f111200;
    /**
     * About phone, status item title, The status for roaming.  For example, the value might be "Not roaming"
     */
    public static final int status_roaming=0x7f111201;
    /**
     * About phone, status item title.  The hardware serial number. [CHAR LIMIT=30]
     */
    public static final int status_serial_number=0x7f111202;
    /**
     * About phone, status item title. The status of whether we have service.  for example, the value may be "In service"
     */
    public static final int status_service_state=0x7f111203;
    /**
     * About phone, status item title. The  current cell tower signal strength
     */
    public static final int status_signal_strength=0x7f111204;
    /**
     * About phone, status item value if the actual value is not available.
     */
    public static final int status_unavailable=0x7f111205;
    /**
     * About phone, status item title.  How long the device has been running since its last reboot.
     */
    public static final int status_up_time=0x7f111206;
    /**
     * About phone, status item title for the type of voice phone network we're connected to, for example 3G or Edge or GPRS
     */
    public static final int status_voice_network_type=0x7f111207;
    /**
     * About phone, status item title.  The MAC address of the Wi-Fi network adapter.
     */
    public static final int status_wifi_mac_address=0x7f111208;
    /**
     * Preference label for the Apps storage section. [CHAR LIMIT=50]
     */
    public static final int storage_apps=0x7f111209;
    /**
     * Preference label for the Audio storage section. [CHAR LIMIT=50]
     */
    public static final int storage_audio=0x7f11120a;
    /**
     * Preference category for storage development settings. [CHAR LIMIT=50]
     */
    public static final int storage_category=0x7f11120b;
    /**
     * Storage Settings dropdown option of default internal storage [CHAR LIMIT=30]
     */
    public static final int storage_default_internal_storage=0x7f11120c;
    /**
     * Body of dialog informing user about the storage used by the Android System [CHAR LIMIT=NONE]
     */
    public static final int storage_detail_dialog_system=0x7f11120d;
    /**
     * Dialog body informing user about an unmountable storage device. [CHAR LIMIT=NONE]
     */
    public static final int storage_dialog_unmountable=0x7f11120e;
    /**
     * Dialog body informing user about an unmounted storage device. [CHAR LIMIT=NONE]
     */
    public static final int storage_dialog_unmounted=0x7f11120f;
    /**
     * Preference label for the Documents & other storage section. [CHAR LIMIT=50]
     */
    public static final int storage_documents_and_other=0x7f111210;
    /**
     * Section header above list of external storage devices [CHAR LIMIT=30]
     */
    public static final int storage_external_title=0x7f111211;
    /**
     * Preference label for the Files storage section. [CHAR LIMIT=50]
     */
    public static final int storage_files=0x7f111212;
    /**
     * Toast informing that storage format operation failed. [CHAR LIMIT=64]
     */
    public static final int storage_format_failure=0x7f111213;
    /**
     * Toast informing that storage format operation was successful. [CHAR LIMIT=64]
     */
    public static final int storage_format_success=0x7f111214;
    /**
     * Storage setting. Summary for storage free up option. [CHAR LIMIT=NONE]
     */
    public static final int storage_free_up_space_summary=0x7f111215;
    /**
     * Storage setting. Title for storage free up option. [CHAR LIMIT=30]
     */
    public static final int storage_free_up_space_title=0x7f111216;
    /**
     * Preference label for the Games storage section. [CHAR LIMIT=50]
     */
    public static final int storage_games=0x7f111217;
    /**
     * Preference label for the Images storage section. [CHAR LIMIT=50]
     */
    public static final int storage_images=0x7f111218;
    /**
     * Body of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_forget_confirm=0x7f111219;
    /**
     * Title of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=32]
     */
    public static final int storage_internal_forget_confirm_title=0x7f11121a;
    /**
     * Body of dialog informing user about consequences of forgetting an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_forget_details=0x7f11121b;
    /**
     * Body of dialog informing user about consequences of formatting an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_format_details=0x7f11121c;
    /**
     * Section header above list of internal storage devices [CHAR LIMIT=30]
     */
    public static final int storage_internal_title=0x7f11121d;
    /**
     * Body of dialog informing user about consequences of ejecting an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_unmount_details=0x7f11121e;
    /**
     * Manage applications, individual application info screen, section heading for stuff relating to an app's storage settings.
     */
    public static final int storage_label=0x7f11121f;
    /**
     * Settings item summary when storage is running low [CHAR LIMIT=NONE]
     */
    public static final int storage_low_summary=0x7f111220;
    /**
     * Settings item title when storage is running low [CHAR LIMIT=32]
     */
    public static final int storage_low_title=0x7f111221;
    /**
     * Indicates if the automatic storage manager is enabled or not. [CHAR_LIMIT=40]
     */
    public static final int storage_manager_indicator=0x7f111222;
    /**
     * Off status for the automatic storage manager. [CHAR_LIMIT=10]
     */
    public static final int storage_manager_indicator_off=0x7f111223;
    /**
     * On status for the automatic storage manager. [CHAR_LIMIT=10]
     */
    public static final int storage_manager_indicator_on=0x7f111224;
    /**
     * Storage setting.  Menu option for forgetting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_forget=0x7f111225;
    /**
     * Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_format=0x7f111226;
    /**
     * Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_format_private=0x7f111227;
    /**
     * Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_format_public=0x7f111228;
    /**
     * Storage setting. Menu option for using the deletion helper. [CHAR LIMIT=30]
     */
    public static final int storage_menu_free=0x7f111229;
    /**
     * Storage setting. Menu option for accessing the storage manager settings. [CHAR LIMIT=30]
     */
    public static final int storage_menu_manage=0x7f11122a;
    /**
     * Storage setting.  Menu option for migrating data to a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_migrate=0x7f11122b;
    /**
     * Storage setting.  Menu option for mounting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_mount=0x7f11122c;
    /**
     * Storage setting.  Menu option for renaming a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_rename=0x7f11122d;
    /**
     * Storage setting.  Menu option for setting up a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_set_up=0x7f11122e;
    /**
     * Storage setting.  Menu option for unmounting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_unmount=0x7f11122f;
    /**
     * Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
     */
    public static final int storage_mount_failure=0x7f111230;
    /**
     * Toast informing that storage mount operation was successful. [CHAR LIMIT=64]
     */
    public static final int storage_mount_success=0x7f111231;
    /**
     * Preference label for the Movies & TV apps section [CHAR LIMIT=50]
     */
    public static final int storage_movies_tv=0x7f111232;
    /**
     * Preference label for the Music & Audio storage section. [CHAR LIMIT=50]
     */
    public static final int storage_music_audio=0x7f111233;
    /**
     * Preference label for the Other apps storage section. [CHAR LIMIT=50]
     */
    public static final int storage_other_apps=0x7f111234;
    /**
     * Section header above list of other users storage [CHAR LIMIT=32]
     */
    public static final int storage_other_users=0x7f111235;
    /**
     * Follows the percent of storage used by a storage volume. Exposed inside of a donut graph. [CHAR LIMIT=7]
     */
    public static final int storage_percent_full=0x7f111236;
    /**
     * Preference label for the Photos & Videos storage section. [CHAR LIMIT=50]
     */
    public static final int storage_photos_videos=0x7f111237;
    /**
     * Title of dialog prompting user to rename a storage volume [CHAR LIMIT=32]
     */
    public static final int storage_rename_title=0x7f111238;
    /**
     * Main settings screen item's title to go into the storage settings screen [CHAR LIMIT=25]
     */
    public static final int storage_settings=0x7f111239;
    /**
     * Settings title that shows user how much storage and cache space an App is taking [CHAR LIMIT=50]
     */
    public static final int storage_settings_for_app=0x7f11123a;
    /**
     * [CHAR LIMIT=100] Main settings screen item's summary for the SD card and storage settings
     */
    public static final int storage_settings_summary=0x7f11123b;
    /**
     * Storage settings screen title
     */
    public static final int storage_settings_title=0x7f11123c;
    /**
     * Summary of a single storage volume used space. [CHAR LIMIT=24]
     */
    public static final int storage_size_large=0x7f11123d;
    /**
     * Summary of a single storage volume used space. [CHAR LIMIT=24]
     */
    public static final int storage_size_large_alternate=0x7f11123e;
    /**
     * Summary of storage usage [CHAR LIMIT=NONE]
     */
    public static final int storage_summary=0x7f11123f;
    /**
     * Summary for app storage preference
     */
    public static final int storage_summary_format=0x7f111240;
    /**
     * Summary of storage usage when there is SD card [CHAR LIMIT=NONE]
     */
    public static final int storage_summary_with_sdcard=0x7f111241;
    /**
     * Preference label for the System storage section. [CHAR LIMIT=50]
     */
    public static final int storage_system=0x7f111242;
    /**
     * Storage setting.  Title for USB transfer settings [CHAR LIMIT=30]
     */
    public static final int storage_title_usb=0x7f111243;
    /**
     * Summary of a single storage volume total space. [CHAR LIMIT=24]
     */
    public static final int storage_total_summary=0x7f111244;
    /**
     * Preference label for the Trash storage section. [CHAR LIMIT=50]
     */
    public static final int storage_trash=0x7f111245;
    /**
     * Dialog message for the Trash storage section. [CHAR LIMIT=NONE]
     */
    public static final int storage_trash_dialog_ask_message=0x7f111246;
    /**
     * Dialog confirm button to empty all trash files. [CHAR LIMIT=50]
     */
    public static final int storage_trash_dialog_confirm=0x7f111247;
    /**
     * Dialog message for the Trash storage section. [CHAR LIMIT=NONE]
     */
    public static final int storage_trash_dialog_empty_message=0x7f111248;
    /**
     * Dialog title for the Trash storage section. [CHAR LIMIT=50]
     */
    public static final int storage_trash_dialog_title=0x7f111249;
    /**
     * Summary describing external storage for applications [CHAR LIMIT=25]
     */
    public static final int storage_type_external=0x7f11124a;
    /**
     * Summary describing internal storage for applications [CHAR LIMIT=25]
     */
    public static final int storage_type_internal=0x7f11124b;
    /**
     * Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
     */
    public static final int storage_unmount_failure=0x7f11124c;
    /**
     * Toast informing that storage unmount operation was successful. [CHAR LIMIT=64]
     */
    public static final int storage_unmount_success=0x7f11124d;
    /**
     * Summary of a single storage volume used space. [CHAR LIMIT=24]
     */
    public static final int storage_usage_summary=0x7f11124e;
    /**
     * Main settings screen item's title to go into the storage & USB settings screen [CHAR LIMIT=25]
     */
    public static final int storage_usb_settings=0x7f11124f;
    /**
     * Title of storage preference to control where app is stored
     */
    public static final int storage_used=0x7f111250;
    /**
     * Preference label for the Videos storage section. [CHAR LIMIT=50]
     */
    public static final int storage_videos=0x7f111251;
    /**
     * Summary of a single storage volume total space. [CHAR LIMIT=48]
     * syntax error in translation for storage_size_large_alternate (7555149858858591495) org.xmlpull.v1.XmlPullParserException: expected: /string read: small (position:END_TAG </small>@1:140 in     <string name="storage_size_large_alternate" msgid="7555149858858591495"><font size="20">"<xliff:g id="UNIT">^2</xliff:g>"</font></small>" <xliff:g id="NUMBER">^1</xliff:g>"<small></string>
     * )
     */
    public static final int storage_volume_total=0x7f111252;
    /**
     * Summary of a single storage volume total space. [CHAR LIMIT=48]
     */
    public static final int storage_volume_used=0x7f111253;
    /**
     * Warning message for the sd card setup
     */
    public static final int storage_warning_internal=0x7f111254;
    /**
     * Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_confirm_body=0x7f111255;
    /**
     * Next button text of wizard step prompting user to format a storage device [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_confirm_next=0x7f111256;
    /**
     * Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_confirm_public_body=0x7f111257;
    /**
     * Title of wizard step prompting user to format a storage device [CHAR LIMIT=32]
     * syntax error in translation for storage_wizard_format_confirm_body (5514665245241830772) org.xmlpull.v1.XmlPullParserException: expected: /string read: b (position:END_TAG </b>@1:86 in     <string name="storage_wizard_format_confirm_body" msgid="5514665245241830772"></b>"<xliff:g id="NAME_0">^1</xliff:g>NAME_0需要格式化，以策安全。\n\n<xliff:g id="NAME_1">^1</xliff:g>經格式化後只能用於這部裝置。\n\n"<b>"格式化將清除目前儲存在<xliff:g id="NAME_2">^1</xliff:g>的所有資料。為免遺失資料，請先備份。"</string>
     * )
     */
    public static final int storage_wizard_format_confirm_public_title=0x7f111258;
    /**
     * Title of wizard step prompting user to format a storage device [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_confirm_title=0x7f111259;
    /**
     * Button text. If a user taps this button, their SD card or USB device will be formatted and used as extra phone storage. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=16]
     */
    public static final int storage_wizard_format_confirm_v2_action=0x7f11125a;
    /**
     * Body of a dialog. This text is confirming that the user wants to use their SD card as extra phone storage, but the formatting process will erase existing content on the card. The first placeholder is for the name of the device (e.g. a brand name of the SD card or USB drive). The second and third placeholders are for the general references (e.g. SD card, USB drive). [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_confirm_v2_body=0x7f11125b;
    /**
     * Title of a dialog. This string is asking users if they want to format their SD card or USB drive in order to use it as extra phone storage. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_confirm_v2_title=0x7f11125c;
    /**
     * Subtext for a full-screen title. This string lets the user know that the SD card can't be removed during this process. The user won't be able to proceed with setup until this step is finished. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_progress_body=0x7f11125d;
    /**
     * In-progress title. This string lets the user know the SD card is being formatted. The user won't be able to proceed with setup until this step is finished. The placeholder is for the name of the device (e.g. brand name of the SD card). [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_progress_title=0x7f11125e;
    /**
     * Summary of wizard choice to use storage device as external storage [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_init_external_summary=0x7f11125f;
    /**
     * Title of wizard choice to use storage device as external storage [CHAR LIMIT=64]
     */
    public static final int storage_wizard_init_external_title=0x7f111260;
    /**
     * Summary of wizard choice to use storage device as internal storage [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_init_internal_summary=0x7f111261;
    /**
     * Title of wizard choice to use storage device as internal storage [CHAR LIMIT=64]
     */
    public static final int storage_wizard_init_internal_title=0x7f111262;
    /**
     * Title of wizard step prompting user to setup a storage device [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_title=0x7f111263;
    /**
     * Button text. A user can tap this button if they want to use their SD card as portable device storage. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_v2_external_action=0x7f111264;
    /**
     * Subtext for a line item. Below this subtext, a user can tap a button to select this option if they want to use their SD card as portable device storage. [CHAR LIMIT=64]
     */
    public static final int storage_wizard_init_v2_external_summary=0x7f111265;
    /**
     * Title of a line item. Below this title, a user can tap a button to select this option if they want to use their SD card as portable device storage. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_v2_external_title=0x7f111266;
    /**
     * Button text. A user can tap this button if they want to use their SD card as extra device storage. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_v2_internal_action=0x7f111267;
    /**
     * Subtext for a line item. Below this subtext, a user can tap a button to select this option if they want to use their SD card as extra device storage. [CHAR LIMIT=64]
     */
    public static final int storage_wizard_init_v2_internal_summary=0x7f111268;
    /**
     * Title of a line item. Below this title, a user can tap a button to select this option if they want to use their SD card as extra device storage. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_v2_internal_title=0x7f111269;
    /**
     * Button text. A user can tap this button if they want to delay setting up their SD card until a later time. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_v2_later=0x7f11126a;
    /**
     * This text separates two options in a full-screen message. It's used to indicate a user can choose one option or the other. [CHAR LIMIT=16]
     */
    public static final int storage_wizard_init_v2_or=0x7f11126b;
    /**
     * This is the title of a full-screen message. After this question, the user will get to choose how they want to use the storage device that they have in their phone. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_v2_title=0x7f11126c;
    /**
     * Body of wizard step prompting user to migrate data to new storage [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_body=0x7f11126d;
    /**
     * Body of wizard step providing details about data migration [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_confirm_body=0x7f11126e;
    /**
     * Title of wizard button prompting user to start data migration [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_confirm_next=0x7f11126f;
    /**
     * Title of wizard step prompting user to start data migration [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_confirm_title=0x7f111270;
    /**
     * Body of wizard step providing details about data migration [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_details=0x7f111271;
    /**
     * Title of wizard choice to migrate data at later time [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_later=0x7f111272;
    /**
     * Title of wizard choice to migrate data right now [CHAR LIMIT=64]
     */
    public static final int storage_wizard_migrate_now=0x7f111273;
    /**
     * Title of wizard step showing migration progress [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_progress_title=0x7f111274;
    /**
     * In-progress title. This string lets the user know that their content is being moved to the SD card. They won't be able to proceed until the move is complete. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_progress_v2_title=0x7f111275;
    /**
     * Title of wizard step prompting user to migrate data to new storage [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_title=0x7f111276;
    /**
     * Main text for a full-screen message. These strings let the user know what they can move to the storage device, how much space will be made in their device's storage, and how long the move will take. The first placeholder is for the amount of space (e.g. 1.4 GB) that will become available ("free up" is the phrasal verb used for this case). The second placeholder is for the amount of time (e.g. 6 minutes) it'll take to move their content to the storage device. The third placeholder is the name of the storage device (e.g. brand name of the SD card). [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_v2_body=0x7f111277;
    /**
     * Title of a section of main text that shows a checklist of items a user should be aware of while moving their content to the SD card. [CHAR LIMIT=64]
     */
    public static final int storage_wizard_migrate_v2_checklist=0x7f111278;
    /**
     * Item that a user should be aware of while moving their content to the SD card. Tells them that apps may have trouble working while the move is happening. [CHAR LIMIT=64]
     */
    public static final int storage_wizard_migrate_v2_checklist_apps=0x7f111279;
    /**
     * Item that a user should be aware of while moving their content to the SD card. Tells them to keep the phone charged while the move is happening. [CHAR LIMIT=64]
     */
    public static final int storage_wizard_migrate_v2_checklist_battery=0x7f11127a;
    /**
     * Item that a user should be aware of while moving their content to the storage device. The string tells them not to remove the storage device while the move is happening. The placeholder is for the specific device (e.g. SD card, USB device, etc.). [CHAR LIMIT=64]
     */
    public static final int storage_wizard_migrate_v2_checklist_media=0x7f11127b;
    /**
     * Button text. If a user taps this button, they'll be able to move their content later. Move is a verb. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_v2_later=0x7f11127c;
    /**
     * Button text. If a user taps this button, they'll start moving their content to the SD card. Move is a verb. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_v2_now=0x7f11127d;
    /**
     * Title of a full-screen message. This string is confirming that a user wants to move their content to the storage device. They can press a button at the bottom of the screen to move their content. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_v2_title=0x7f11127e;
    /**
     * Body of wizard step prompting user to move an app [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_move_confirm_body=0x7f11127f;
    /**
     * Title of wizard step prompting user to move an app [CHAR LIMIT=32]
     */
    public static final int storage_wizard_move_confirm_title=0x7f111280;
    /**
     * Body of wizard step showing app move progress [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_move_progress_body=0x7f111281;
    /**
     * Title of wizard button offering to cancel move [CHAR LIMIT=32]
     */
    public static final int storage_wizard_move_progress_cancel=0x7f111282;
    /**
     * Title of wizard step showing app move progress [CHAR LIMIT=32]
     */
    public static final int storage_wizard_move_progress_title=0x7f111283;
    /**
     * Body of lock screen challenge message explaining that the given user must be unlocked before data can be moved [CHAR LIMIT=64]
     */
    public static final int storage_wizard_move_unlock=0x7f111284;
    /**
     * Body of wizard step indicating that external storage is ready [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_ready_external_body=0x7f111285;
    /**
     * Body of wizard step indicating that internal storage is ready [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_ready_internal_body=0x7f111286;
    /**
     * Title of a full-screen message. This string lets the user know that their storage device is ready to use. They can tap a button at the bottom of the screen to complete the setup process. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=32]
     */
    public static final int storage_wizard_ready_title=0x7f111287;
    /**
     * Title of a full-screen message. This text lets the user know how to manage the storage device moving forward. The placeholder is for the name of the device (e.g. brand name of the SD card). [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_ready_v2_external_body=0x7f111288;
    /**
     * Title of a full-screen message. This text lets the user know that their content was moved to their storage device and how to manage the storage device moving forward. The placeholder is for the name of the device (e.g. brand name of the SD card). [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_ready_v2_internal_body=0x7f111289;
    /**
     * Title of a full-screen message. This text lets the user know that their content was moved to their storage device and how to manage the storage device moving forward. The placeholder is for the name of the device (e.g. brand name of the SD card). [CHAR LIMIT=NONE]
     * syntax error in translation for storage_wizard_ready_v2_internal_body (5710665992219332454) org.xmlpull.v1.XmlPullParserException: expected: /string read: b (position:END_TAG </b>@1:143 in     <string name="storage_wizard_ready_v2_internal_body" msgid="5710665992219332454">"<xliff:g id="NAME">^1</xliff:g> वर आशय हलवण्यासाठी, "</b>"सेटिंग्ज &gt; स्टोरेज"<b>" वर जा"</string>
     * )
     */
    public static final int storage_wizard_ready_v2_internal_moved_body=0x7f11128a;
    /**
     * Title of wizard step prompting user to start data migration [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_slow_body=0x7f11128b;
    /**
     * Strings that are part of a full-screen message. These strings let the user know that their storage device is slow, and include some options they can try. The first placeholder is for the name of the storage device (e.g. brand name of the SD card), and the second and third placeholders are for the general references (e.g. SD card, USB drive, etc.). [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_slow_v2_body=0x7f11128c;
    /**
     * Action of a dialog. This action will continue the wizard, meaning the user acknowledges their card is slow. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_slow_v2_continue=0x7f11128d;
    /**
     * Action of a dialog. This action will start the wizard from the beginning, letting the user make an alternative choice. [CHAR LIMIT=32]
     */
    public static final int storage_wizard_slow_v2_start_over=0x7f11128e;
    /**
     * Title of a dialog. This string is telling users that their storage device is performing slowly. The placeholder is for the specific device (e.g. SD card, USB drive, etc.). [CHAR LIMIT=32]
     */
    public static final int storage_wizard_slow_v2_title=0x7f11128f;
    /**
     * Services settings screen, setting option summary for the user to go to the screen to app storage use
     */
    public static final int storageuse_settings_summary=0x7f111290;
    /**
     * [CHAR LIMIT=25] Services settings screen, setting option name for the user to go to the screen to view app storage use
     */
    public static final int storageuse_settings_title=0x7f111291;
    /**
     * UI debug setting: always enable strict mode? [CHAR LIMIT=25]
     */
    public static final int strict_mode=0x7f111292;
    /**
     * UI debug setting: show strict mode summary [CHAR LIMIT=50]
     */
    public static final int strict_mode_summary=0x7f111293;
    /**
     * Styles & Wallpapers settings title [CHAR LIMIT=30]
     */
    public static final int style_and_wallpaper_settings_title=0x7f111294;
    /**
     * Styles and Wallpapers summary [CHAR_LIMIT=70]
     */
    public static final int style_suggestion_summary=0x7f111295;
    /**
     * Styles and Wallpaper settings title [CHAR_LIMIT=46]
     */
    public static final int style_suggestion_title=0x7f111296;
    /**
     * Network & internet page. Summary indicating that a SIM is available to be used for services
     * such as calls, SMS, or data when multiple SIMs are present, but is not currently the
     * default SIM for any of those services. [CHAR LIMIT=50]
     */
    public static final int subscription_available=0x7f111297;
    /**
     * Secondary font for use with headings, title, and other non-body text
     */
    public static final int sudFontSecondary=0x7f111298;
    public static final int sudFontSecondaryMedium=0x7f111299;
    /**
     * Button for going to the previous screen or step [CHAR LIMIT=20]
     */
    public static final int sud_back_button_label=0x7f11129a;
    /**
     * Button for scrolling down to reveal more content on the screen [CHAR LIMIT=20]
     */
    public static final int sud_more_button_label=0x7f11129b;
    /**
     * Button for going to the next screen or step [CHAR LIMIT=20]
     */
    public static final int sud_next_button_label=0x7f11129c;
    /**
     * Summary for suggested actions for settings up a fingerprint lock (device) [CHAR LIMIT=55]
     */
    public static final int suggested_fingerprint_lock_settings_summary=0x7f11129d;
    /**
     * Title for suggested actions for settings up a fingerprint lock [CHAR LIMIT=46]
     */
    public static final int suggested_fingerprint_lock_settings_title=0x7f11129e;
    /**
     * Summary for suggested actions for screen lock (device) [CHAR LIMIT=55]
     */
    public static final int suggested_lock_settings_summary=0x7f11129f;
    /**
     * Title for suggested actions for screen lock [CHAR LIMIT=46]
     */
    public static final int suggested_lock_settings_title=0x7f1112a0;
    /**
     * Title for suggestion adding more fingerprints [CHAR LIMIT=46]
     */
    public static final int suggestion_additional_fingerprints=0x7f1112a1;
    /**
     * Summary for suggestion adding more fingerprints [CHAR LIMIT=55]
     */
    public static final int suggestion_additional_fingerprints_summary=0x7f1112a2;
    /**
     * Strings for suggestion card's close button [CHAR LIMIT=20]
     */
    public static final int suggestion_button_close=0x7f1112a3;
    /**
     * Generic label for suggestion card's ok button [CHAR LIMIT=20]
     */
    public static final int suggestion_button_text=0x7f1112a4;
    /**
     * Name of option to remove a suggestion from the list [CHAR LIMIT=30]
     */
    public static final int suggestion_remove=0x7f1112a5;
    /**
     * Title for the suggestions section on the dashboard, representing number of suggestions to show when expanded. [CHAR LIMIT=10]
     */
    public static final int suggestions_more_title=0x7f1112a6;
    /**
     * Summary for the suggestions section on the dashboard, representing number of suggestions. [CHAR LIMIT=10]
     */
    public static final int suggestions_summary=0x7f1112a7;
    /**
     * Title for the suggestions section on the dashboard [CHAR LIMIT=30]
     */
    public static final int suggestions_title=0x7f1112a8;
    /**
     * Title for the suggestions section on the dashboard [CHAR LIMIT=30]
     */
    public static final int suggestions_title_v2=0x7f1112a9;
    /**
     * mobile network settings screen, setting option summary text
     */
    public static final int sum_carrier_select=0x7f1112aa;
    public static final int summary_collapsed_preference_list=0x7f1112ab;
    /**
     * [CHAR LIMIT=40] General divider text when concatenating multiple items in a text summary
     */
    public static final int summary_divider_text=0x7f1112ac;
    /**
     * DO NOT TRANSLATE Empty summary for dynamic preferences
     */
    public static final int summary_empty=0x7f1112ad;
    /**
     * Sound & display settings screen, setting option summary displaying the currently selected font size
     */
    public static final int summary_font_size=0x7f1112ae;
    /**
     * DO NOT TRANSLATE Summary placeholder
     */
    public static final int summary_placeholder=0x7f1112af;
    /**
     * [CHAR LIMIT=40] General template for a symbolic start - end range in a text summary
     */
    public static final int summary_range_symbol_combination=0x7f1112b0;
    /**
     * [CHAR LIMIT=40] General template for a verbal start to end range in a text summary
     */
    public static final int summary_range_verbal_combination=0x7f1112b1;
    /**
     * DO NOT TRANSLATE Summary placeholder reserving 2 lines
     */
    public static final int summary_two_lines_placeholder=0x7f1112b2;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int supplicant_state_label=0x7f1112b3;
    /**
     * Summary text for support setting tile [CHAR LIMIT=None]
     */
    public static final int support_summary=0x7f1112b4;
    /**
     * Configure notifications: value for swipe direction [CHAR LIMIT=100]
     */
    public static final int swipe_direction_ltr=0x7f1112b5;
    /**
     * Configure notifications: value for swipe direction [CHAR LIMIT=100]
     */
    public static final int swipe_direction_rtl=0x7f1112b6;
    /**
     * Configure notifications: title for swipe direction [CHAR LIMIT=60]
     */
    public static final int swipe_direction_title=0x7f1112b7;
    /**
     * Summary for settings suggestion for swipe up to switch apps [CHAR LIMIT=60]
     */
    public static final int swipe_up_to_switch_apps_suggestion_summary=0x7f1112b8;
    /**
     * Title for settings suggestion for swipe up to switch apps [CHAR LIMIT=60]
     */
    public static final int swipe_up_to_switch_apps_suggestion_title=0x7f1112b9;
    /**
     * Summary text for swipe up to switch apps  [CHAR LIMIT=250]
     */
    public static final int swipe_up_to_switch_apps_summary=0x7f1112ba;
    /**
     * Title text for swipe up to switch apps [CHAR LIMIT=60]
     */
    public static final int swipe_up_to_switch_apps_title=0x7f1112bb;
    public static final int switch_off_text=0x7f1112bc;
    /**
     * Switch On/Off
     */
    public static final int switch_on_text=0x7f1112bd;
    /**
     * The body text of skip sim switch dialog. [CHAR LIMIT=NONE]
     */
    public static final int switch_sim_dialog_no_switch_text=0x7f1112be;
    /**
     * The title text of skip sim switch dialog. [CHAR LIMIT=NONE]
     */
    public static final int switch_sim_dialog_no_switch_title=0x7f1112bf;
    /**
     * The body text of switch SIM confirmation dialog. [CHAR LIMIT=NONE]
     */
    public static final int switch_sim_dialog_text=0x7f1112c0;
    /**
     * The title text of switch SIM confirmation dialog. [CHAR LIMIT=NONE]
     */
    public static final int switch_sim_dialog_title=0x7f1112c1;
    /**
     * Title on a push notification indicating that the user's device switched to a new mobile network. [CHAR LIMIT=NONE]
     */
    public static final int switch_to_removable_notification=0x7f1112c2;
    /**
     * Title on a push notification indicating that the user's device switched to a new mobile network. [CHAR LIMIT=NONE]
     */
    public static final int switch_to_removable_notification_no_carrier_name=0x7f1112c3;
    /**
     * Animation description for the sync active icon.
     */
    public static final int sync_active=0x7f1112c4;
    /**
     * Title for a checkbox that enables data synchronization in the account and sync screen [CHAR LIMIT=35]
     */
    public static final int sync_automatically=0x7f1112c5;
    /**
     * Data synchronization settings screen, checkbox setting option name. Controls whether Calendar shoudl be synced.
     */
    public static final int sync_calendar=0x7f1112c6;
    /**
     * Data synchronization settings screen, checkbox setting option name
     */
    public static final int sync_contacts=0x7f1112c7;
    /**
     * Sync status shown when sync is disabled [CHAR LIMIT=25]
     */
    public static final int sync_disabled=0x7f1112c8;
    /**
     * Sync status shown when sync is enabled [CHAR LIMIT=25]
     */
    public static final int sync_enabled=0x7f1112c9;
    /**
     * Sync status shown when last sync resulted in an error [CHAR LIMIT=25]
     */
    public static final int sync_error=0x7f1112ca;
    /**
     * Image description for the sync failed icon.
     */
    public static final int sync_failed=0x7f1112cb;
    /**
     * Data synchronization settings screen, checkbox setting option name. Controls whether Gmail should be synced.  Should use "Gmail" to refer to this app.
     */
    public static final int sync_gmail=0x7f1112cc;
    /**
     * Sync status shown when sync is disabled [CHAR LIMIT=30]
     */
    public static final int sync_in_progress=0x7f1112cd;
    /**
     * Message when sync is currently failing [CHAR LIMIT=100]
     */
    public static final int sync_is_failing=0x7f1112ce;
    /**
     * Data synchronization settings screen, menu option
     */
    public static final int sync_menu_sync_cancel=0x7f1112cf;
    /**
     * Data synchronization settings screen, menu option
     */
    public static final int sync_menu_sync_now=0x7f1112d0;
    /**
     * Data synchronization settings screen, summary of a sync provider (for example, Gmail) when autosync is off and the user wants to do a one-time sync.
     */
    public static final int sync_one_time_sync=0x7f1112d1;
    /**
     * Message introducing the user to Google Sync.
     */
    public static final int sync_plug=0x7f1112d2;
    /**
     * Title for the apps that are allowed to display over other apps [CHAR LIMIT=60]
     */
    public static final int system_alert_window_access_title=0x7f1112d3;
    /**
     * Title for the apps with SYSTEM_ALERT_WINDOW permission/privilege [CHAR LIMIT=20]
     */
    public static final int system_alert_window_apps_title=0x7f1112d4;
    /**
     * Settings title in main settings screen for SYSTEM_ALERT_WINDOW [CHAR LIMIT=45]
     */
    public static final int system_alert_window_settings=0x7f1112d5;
    /**
     * Summary of number of apps currently can display over other apps [CHAR LIMIT=60]
     */
    public static final int system_alert_window_summary=0x7f1112d6;
    /**
     * Label of system app for current setting
     */
    public static final int system_app=0x7f1112d7;
    /**
     * Summary text for system preference tile, showing important setting items under system setting [CHAR LIMIT=NONE]
     */
    public static final int system_dashboard_summary=0x7f1112d8;
    /**
     * Label of system and default app for current setting
     */
    public static final int system_default_app=0x7f1112d9;
    /**
     * Subtext of system default app for current setting [CHAR LIMIT=NONE]
     */
    public static final int system_default_app_subtext=0x7f1112da;
    /**
     * Title text for system navigation [CHAR LIMIT=60]
     */
    public static final int system_navigation_title=0x7f1112db;
    public static final int system_package=0x7f1112dc;
    /**
     * Turn on settings for system ui tuner [CHAR LIMIT=40]
     */
    public static final int system_ui_settings=0x7f1112dd;
    /**
     * About phone screen, list item summary.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40]
     */
    public static final int system_update_settings_list_item_summary=0x7f1112de;
    /**
     * About phone screen, list item title.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40]
     */
    public static final int system_update_settings_list_item_title=0x7f1112df;
    /**
     * Title for HFP(hands free profile) output switch button in settings.
     */
    public static final int take_call_on_title=0x7f1112e0;
    /**
     * Summary for the Talkback Accessibility Service. Lets the user know that Talkback is a screenreader and that it is usually most helpful to blind and low vision users and whether the service is on. [CHAR_LIMIT=none]
     */
    public static final int talkback_summary=0x7f1112e1;
    /**
     * Title for the Talkback Accessibility Service. Displayed on the Accessibility Settings screen in Setup Wizard. [CHAR_LIMIT=25]
     */
    public static final int talkback_title=0x7f1112e2;
    /**
     * Panel subtitle for tapping a network to connect to internet. [CHAR LIMIT=60]
     */
    public static final int tap_a_network_to_connect=0x7f1112e3;
    /**
     * Status message of OSU Provider network when not connected. [CHAR LIMIT=NONE]
     */
    public static final int tap_to_sign_up=0x7f1112e4;
    /**
     * Label for tap to wake setting [CHAR LIMIT=30]
     */
    public static final int tap_to_wake=0x7f1112e5;
    /**
     * Summary for take to wake setting [CHAR LIMIT=90]
     */
    public static final int tap_to_wake_summary=0x7f1112e6;
    /**
     * About phone settings screen, setting option name to see terms and conditions
     */
    public static final int terms_title=0x7f1112e7;
    /**
     * This is for diagnostics screen. The title of a screen with various items realted to launching screens that will giev the user info. For example, it contains "Phone information" and "Battery information"
     */
    public static final int testing=0x7f1112e8;
    /**
     * In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.
     */
    public static final int testing_phone_info=0x7f1112e9;
    /**
     * Do not translate. In the Testing screen. The item title of the activity that shows a bunch of SIM-related operations.
     */
    public static final int testing_sim_toolkit=0x7f1112ea;
    /**
     * In the Testing screen. The item title of the activity that shows usage statistics.
     */
    public static final int testing_usage_stats=0x7f1112eb;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Wi-Fi Testing on the diagnostic screen
     */
    public static final int testing_wifi_info=0x7f1112ec;
    /**
     * Tethering controls, footer note displayed when tethering is disabled because Data Saver mode is on [CHAR LIMIT=none]
     */
    public static final int tether_settings_disabled_on_data_saver=0x7f1112ed;
    /**
     * Tethering setting summary when Wi-Fi hotspot and USB and Bluetooth and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_all=0x7f1112ee;
    /**
     * Tethering setting summary when Bluetooth and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_bluetooth_and_ethernet=0x7f1112ef;
    /**
     * Tethering setting summary when only Bluetooth tethering is on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_bluetooth_tethering_only=0x7f1112f0;
    /**
     * Tethering setting summary when only Ethernet tethering is on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_ethernet_tethering_only=0x7f1112f1;
    /**
     * Tethering setting summary when Wi-Fi hotspot and Bluetooth tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_and_bluetooth=0x7f1112f2;
    /**
     * Tethering setting summary when Wi-Fi hotspot and Bluetooth and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_and_bluetooth_and_ethernet=0x7f1112f3;
    /**
     * Tethering setting summary when Wi-Fi hotspot and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_and_ethernet=0x7f1112f4;
    /**
     * Tethering setting summary when Wi-Fi hotspot and USB tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_and_usb=0x7f1112f5;
    /**
     * Tethering setting summary when Wi-Fi hotspot and USB and Bluetooth tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_and_usb_and_bluetooth=0x7f1112f6;
    /**
     * Tethering setting summary when Wi-Fi hotspot and USB and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_and_usb_and_ethernet=0x7f1112f7;
    /**
     * Tethering setting summary when Wi-Fi hotspot is off and tether is on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_off_tether_on=0x7f1112f8;
    /**
     * Tethering setting summary when Wi-Fi hotspot is on and tether is off [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_on_tether_off=0x7f1112f9;
    /**
     * Tethering setting summary when both Wi-Fi hotspot and tether are turned on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_on_tether_on=0x7f1112fa;
    /**
     * Tethering setting summary when only Wi-Fi hotspot is on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_only=0x7f1112fb;
    /**
     * Tethering setting summary when hotspot and tethering are off [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_off=0x7f1112fc;
    /**
     * Tethering setting summary when USB and Bluetooth tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_usb_and_bluetooth=0x7f1112fd;
    /**
     * Tethering setting summary when USB and Bluetooth and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_usb_and_bluetooth_and_ethernet=0x7f1112fe;
    /**
     * Tethering setting summary when USB and Ethernet tethering are on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_usb_and_ethernet=0x7f1112ff;
    /**
     * Tethering setting summary when only USB tethering is on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_usb_tethering_only=0x7f111300;
    /**
     * Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_all=0x7f111301;
    /**
     * Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_bluetooth=0x7f111302;
    /**
     * Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_usb=0x7f111303;
    /**
     * Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_usb_bluetooth=0x7f111304;
    /**
     * Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_wifi=0x7f111305;
    public static final int tethering_allow_vpn_upstreams_summary=0x7f111306;
    /**
     * Hotspot lineage extras
     */
    public static final int tethering_allow_vpn_upstreams_title=0x7f111307;
    /**
     * Tethering footer info [CHAR LIMIT=NONE]
     */
    public static final int tethering_footer_info=0x7f111308;
    /**
     * Tethering footer info for the device which supports Wi-Fi and Wi-Fi tethering enabled at the same time [CHAR LIMIT=NONE]
     */
    public static final int tethering_footer_info_sta_ap_concurrency=0x7f111309;
    /**
     * Setting Checkbox title whether to enable hardware acceleration for tethering. [CHAR LIMIT=80]
     */
    public static final int tethering_hardware_offload=0x7f11130a;
    public static final int tethering_hardware_offload_summary=0x7f11130b;
    /**
     * Tethering help button - calls up a web view with general tethering info
     */
    public static final int tethering_help_button_text=0x7f11130c;
    /**
     * Tethering interface options [CHAR LIMIT=NONE]
     */
    public static final int tethering_interface_options=0x7f11130d;
    /**
     * Error message for users that aren't allowed to modify Tethering settings [CHAR LIMIT=none]
     */
    public static final int tethering_settings_not_available=0x7f11130e;
    /**
     * [CHAR_LIMIT=NONE] Developer Settings: Label for the option that turns off customizations for a given category.
     */
    public static final int theme_customization_device_default=0x7f11130f;
    /**
     * [CHAR_LIMIT=NONE] Display Settings: Title of the setting which enables overlays to customize headline and body fonts.
     */
    public static final int theme_customization_font_title=0x7f111310;
    /**
     * [CHAR_LIMIT=NONE] Display Settings: Title of the setting which enables overlays to customize the adaptive icon shape (e.g. launcher icons).
     */
    public static final int theme_customization_icon_shape_title=0x7f111311;
    /**
     * Date & time setting screen title for setting time format (allowing user to set device display in 12-hour format or 24-hour format) [CHAR LIMIT=30]
     */
    public static final int time_format_category_title=0x7f111312;
    /**
     * Title string shown above TimePicker, letting a user select system time
     * [CHAR LIMIT=20]
     */
    public static final int time_picker_title=0x7f111313;
    /**
     * Link title to show stats about how much time user spent in an app [CHAR LIMIT=45]
     */
    public static final int time_spent_in_app_pref_title=0x7f111314;
    /**
     * time label for event have that happened very recently [CHAR LIMIT=60]
     */
    public static final int time_unit_just_now=0x7f111315;
    /**
     * Do not translate. This is a stub which will be removed soon.
     */
    public static final int time_zone_auto_stub=0x7f111316;
    /**
     * Title used on dialog with final prompt for converting to file encryption
     */
    public static final int title_convert_fbe=0x7f111317;
    /**
     * [CHAR LIMIT=30] Sound & display settings screen, setting option name to change font size
     */
    public static final int title_font_size=0x7f111318;
    /**
     * Summary for warning to disconnect ethernet first then switch to other networks. [CHAR LIMIT=60]
     */
    public static final int to_switch_networks_disconnect_ethernet=0x7f111319;
    /**
     * Label for total memory of device [CHAR LIMIT=25]
     */
    public static final int total_memory=0x7f11131a;
    /**
     * Manage applications, individual application info screen,label under Storage heading.  The total storage space taken up by this app.
     */
    public static final int total_size_label=0x7f11131b;
    /**
     * Warning shown when user input has been blocked due to another app overlaying screen
     * content. Since we don't know what the app is showing on top of the input target, we
     * can't verify user consent. [CHAR LIMIT=NONE]
     */
    public static final int touch_filtered_warning=0x7f11131c;
    /**
     * Sound: Other sounds: Title for the option enabling touch sounds. [CHAR LIMIT=30]
     */
    public static final int touch_sounds_title=0x7f11131d;
    public static final int touchscreen_gesture_settings_summary=0x7f11131e;
    /**
     * Touchscreen gesture settings
     */
    public static final int touchscreen_gesture_settings_title=0x7f11131f;
    public static final int touchscreen_hovering_summary=0x7f111320;
    /**
     * Touchscreen hovering
     */
    public static final int touchscreen_hovering_title=0x7f111321;
    /**
     * UI debug setting: profile time taken by hardware acceleration to render apps [CHAR LIMIT=25]
     */
    public static final int track_frame_time=0x7f111322;
    /**
     * Developer Settings: Search keywords for the Profile HWUI rendering. [CHAR_LIMIT=NONE]
     */
    public static final int track_frame_time_keywords=0x7f111323;
    /**
     * Settings item title to select the default behavior for transcoding if an encodig is not supported by an app. [CHAR LIMIT=85]
     */
    public static final int transcode_default=0x7f111324;
    /**
     * Settings item title to select whether to disable cache for transcoding. [CHAR LIMIT=85]
     */
    public static final int transcode_disable_cache=0x7f111325;
    /**
     * Settings item title to enable transcoding globally. [CHAR LIMIT=85]
     */
    public static final int transcode_enable_all=0x7f111326;
    /**
     * Settings item title to select whether to show transcoding notifications. [CHAR LIMIT=85]
     */
    public static final int transcode_notification=0x7f111327;
    /**
     * Settings item title for media transcoding settings. [CHAR LIMIT=85]
     */
    public static final int transcode_settings_title=0x7f111328;
    /**
     * Settings item title to enable user's control over further transcoding preferences. [CHAR LIMIT=85]
     */
    public static final int transcode_user_control=0x7f111329;
    /**
     * UI debug setting: scaling factor for transition animations [CHAR LIMIT=25]
     */
    public static final int transition_animation_scale_title=0x7f11132a;
    /**
     * Trigger Carrier Provisioning [CHAR LIMIT=NONE]
     */
    public static final int trigger_carrier_provisioning=0x7f11132b;
    /**
     * Text shown for the description of the lock when trust lost option [CHAR LIMIT=NONE
     */
    public static final int trust_lost_locks_screen_summary=0x7f11132c;
    /**
     * Text shown for the title of the lock when trust lost option [CHAR LIMIT=40]
     */
    public static final int trust_lost_locks_screen_title=0x7f11132d;
    /**
     * Title of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=30]
     */
    public static final int trusted_credentials=0x7f11132e;
    /**
     * Alert dialog confirmation when disabling a system CA certificate.
     */
    public static final int trusted_credentials_disable_confirmation=0x7f11132f;
    /**
     * Button label for disabling a system CA certificate.
     */
    public static final int trusted_credentials_disable_label=0x7f111330;
    /**
     * Alert dialog confirmation when enabling a system CA certificate.
     */
    public static final int trusted_credentials_enable_confirmation=0x7f111331;
    /**
     * Button label for enabling a system CA certificate.
     */
    public static final int trusted_credentials_enable_label=0x7f111332;
    /**
     * Alert dialog confirmation when removing a user CA certificate.
     */
    public static final int trusted_credentials_remove_confirmation=0x7f111333;
    /**
     * Button label for removing a user CA certificate.
     */
    public static final int trusted_credentials_remove_label=0x7f111334;
    /**
     * Summary of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=NONE]
     */
    public static final int trusted_credentials_summary=0x7f111335;
    /**
     * Tab label for built-in system CA certificates.
     */
    public static final int trusted_credentials_system_tab=0x7f111336;
    /**
     * Button label for trusting a user CA certificate.
     */
    public static final int trusted_credentials_trust_label=0x7f111337;
    /**
     * Tab label for user added CA certificates.
     */
    public static final int trusted_credentials_user_tab=0x7f111338;
    /**
     * On main TTS Settings screen, summary for default language for synthesized voice
     */
    public static final int tts_default_lang_summary=0x7f111339;
    /**
     * On main TTS Settings screen, in default settings section, setting default language for synthesized voice
     */
    public static final int tts_default_lang_title=0x7f11133a;
    /**
     * On main TTS Settings screen, summary for default pitch for synthesized voice
     */
    public static final int tts_default_pitch_summary=0x7f11133b;
    /**
     * On main TTS Settings screen, in default settings section, setting default pitch for synthesized voice
     */
    public static final int tts_default_pitch_title=0x7f11133c;
    /**
     * On main TTS Settings screen, summary for default speech rate for synthesized voice
     */
    public static final int tts_default_rate_summary=0x7f11133d;
    /**
     * On main TTS Settings screen, in default settings section, setting default speech rate for synthesized voice
     */
    public static final int tts_default_rate_title=0x7f11133e;
    /**
     * Text spoken by the TTS engine as an example if the engine doesn't provide sample text [CHAR LIMIT=100]
     */
    public static final int tts_default_sample_string=0x7f11133f;
    /**
     * Warning message about required internet conectivity for TTS synthesis, displayed as a dialog
     * message when the user selects to play an example for network only locale and there's no internet connectivity.
     */
    public static final int tts_engine_network_required=0x7f111340;
    /**
     * [CHAR LIMIT=50] The text for the settings section that users to set a
     * preferred text to speech engine
     */
    public static final int tts_engine_preference_section_title=0x7f111341;
    /**
     * [CHAR LIMIT=50] The text for the settings section that is used to set a preferred text to speech engine
     */
    public static final int tts_engine_preference_title=0x7f111342;
    /**
     * [CHAR LIMIT=50] Name for the general text to speech settings section.
     */
    public static final int tts_engine_section_title=0x7f111343;
    /**
     * Warning message about security implications of enabling a TTS engine, displayed as a dialog
     * message when the user selects to enable an engine.
     */
    public static final int tts_engine_security_warning=0x7f111344;
    /**
     * [CHAR LIMIT=150] Text for screen readers / accessibility programs for
     * the image that launches the TTS engine settings when clicked.
     */
    public static final int tts_engine_settings_button=0x7f111345;
    /**
     * Title for a preference in the main TTS settings screen, which
     * launches the settings screen for a given TTS engine when clicked
     * [CHAR LIMIT=30]
     */
    public static final int tts_engine_settings_title=0x7f111346;
    /**
     * [CHAR LIMIT=50] Title of the settings section that displays general preferences
     * that are applicable to all engines, such as the speech rate
     */
    public static final int tts_general_section_title=0x7f111347;
    /**
     * On main TTS Settings screen, summary for click to install required speech synthesis data
     */
    public static final int tts_install_data_summary=0x7f111348;
    /**
     * On main TTS Settings screen, click to install required speech synthesis data
     */
    public static final int tts_install_data_title=0x7f111349;
    /**
     * [CHAR LIMIT=50] Name for the button that goes to the voice selection screen.
     */
    public static final int tts_install_voice_title=0x7f11134a;
    /**
     * Text of the button on the pop-up to install 3P voices on first use to cancel the operation.
     */
    public static final int tts_install_voices_cancel=0x7f11134b;
    /**
     * Text of the button on the pop-up to install 3P voices on first use to procedd to the 3p app.
     */
    public static final int tts_install_voices_open=0x7f11134c;
    /**
     * Text of the pop-up to install 3P voices on first use.
     */
    public static final int tts_install_voices_text=0x7f11134d;
    /**
     * Title of the pop-up to install 3P voices on first use.
     */
    public static final int tts_install_voices_title=0x7f11134e;
    /**
     * On main TTS Settings screen, language summary if it can't default to system language [CHAR LIMIT=50]
     */
    public static final int tts_lang_not_selected=0x7f11134f;
    /**
     * Entry in the TTS engine language/locale picker, when selected will try to default to the system language [CHAR LIMIT=50]
     */
    public static final int tts_lang_use_system=0x7f111350;
    /**
     * Name for buttont hat plays a sample of the currently selected text-to-speech engine.
     */
    public static final int tts_play=0x7f111351;
    /**
     * On main TTS Settings screen, summary for triggering playback of an example of speech synthesis
     */
    public static final int tts_play_example_summary=0x7f111352;
    /**
     * On main TTS Settings screen, triggers playback of an example of speech synthesis
     */
    public static final int tts_play_example_title=0x7f111353;
    /**
     * Name for button that resets speech rate and pitch for synthesized voice to default values in the text to speech settings.
     */
    public static final int tts_reset=0x7f111354;
    /**
     * On main TTS Settings screen, summary for reset speech pitch of synthesized voice [CHAR LIMIT=150]
     */
    public static final int tts_reset_speech_pitch_summary=0x7f111355;
    /**
     * On main TTS Settings screen, in default settings section,
     * reset speech pitch of synthesized voice to 1x speech pitch. [CHAR LIMIT=50]
     */
    public static final int tts_reset_speech_pitch_title=0x7f111356;
    /**
     * Name of the TTS package as listed by the package manager.
     */
    public static final int tts_settings=0x7f111357;
    /**
     * TTS option item name in the main settings screen
     */
    public static final int tts_settings_title=0x7f111358;
    /**
     * [CHAR LIMIT=50] The text for a button that goes to the speech rate and pitch settings for text to speech.
     */
    public static final int tts_sliders_title=0x7f111359;
    /**
     * The text for the settings to choose the language to use on TTS.
     */
    public static final int tts_spoken_language=0x7f11135a;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * tts engine is queried for status [CHAR LIMIT=150]
     */
    public static final int tts_status_checking=0x7f11135b;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * selected language is not supported by the engine [CHAR LIMIT=150]
     */
    public static final int tts_status_not_supported=0x7f11135c;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * selected language is fully supported by the engine [CHAR LIMIT=150]
     */
    public static final int tts_status_ok=0x7f11135d;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * selected language is supported by the engine only if there's a working network connection [CHAR LIMIT=150]
     */
    public static final int tts_status_requires_network=0x7f11135e;
    /**
     * On main TTS Settings screen, title of a field explaining current TTS engine status for
     * current default language [CHAR LIMIT=50]
     */
    public static final int tts_status_title=0x7f11135f;
    /**
     * Slice title text for turning off the Wi-Fi networks. [CHAR LIMIT=40]
     */
    public static final int turn_off_wifi=0x7f111360;
    /**
     * Slice title text for turning on the Wi-Fi networks. [CHAR LIMIT=40]
     */
    public static final int turn_on_wifi=0x7f111361;
    /**
     * When location mode is off, twilight scheduling does not function. [CHAR LIMIT=40]
     */
    public static final int twilight_mode_launch_location=0x7f111362;
    /**
     * When location mode is off, twilight scheduling does not function. [CHAR LIMIT=120]
     */
    public static final int twilight_mode_location_off_dialog_message=0x7f111363;
    /**
     * Transmit Link speed on Wifi Status screen [CHAR LIMIT=32]
     */
    public static final int tx_link_speed=0x7f111364;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int tx_link_speed_label=0x7f111365;
    /**
     * Label for the transmit link speed of the connection. [CHAR LIMIT=32]
     */
    public static final int tx_wifi_speed=0x7f111366;
    /**
     * Manage applications, individual application info screen, menu item to uninstall an application for all users.
     */
    public static final int uninstall_all_users_text=0x7f111367;
    /**
     * Label for button to uninstall all certificates installed by the credential management app [CHAR LIMIT=30]
     */
    public static final int uninstall_certs_credential_management_app=0x7f111368;
    /**
     * Label for button to uninstall the device admin app [CHAR LIMIT=80]
     */
    public static final int uninstall_device_admin=0x7f111369;
    /**
     * Manage applications, individual application info screen, button label under Storage heading. Button to remove the application from the system.
     */
    public static final int uninstall_text=0x7f11136a;
    /**
     * Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
     */
    public static final int unknown=0x7f11136b;
    /**
     * Warning toast shown when data usage screen can't find specified app
     */
    public static final int unknown_app=0x7f11136c;
    /**
     * Summary text on a card explaining a setting cannot be changed right now, but we don't know the reason. [CHAR_LIMIT=NONE]
     */
    public static final int unknown_unavailability_setting_summary=0x7f11136d;
    /**
     * Title shown on security settings to allow the user to change their lockscreen password [CHAR LIMIT=22]
     */
    public static final int unlock_change_lock_password_title=0x7f11136e;
    /**
     * Title shown on security settings to allow the user to change their lockscreen pattern [CHAR LIMIT=22]
     */
    public static final int unlock_change_lock_pattern_title=0x7f11136f;
    /**
     * Title shown on security settings to allow the user to change their lockscreen PIN [CHAR LIMIT=22]
     */
    public static final int unlock_change_lock_pin_title=0x7f111370;
    /**
     * Content of the dialog shown when the user removes the device lock password [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password=0x7f111371;
    /**
     * Content of the dialog shown when the user removes the device lock password and the user has face enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password_face=0x7f111372;
    /**
     * Content of the dialog shown when the user removes the device lock password and the user has face authentication and fingerprint enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password_face_fingerprint=0x7f111373;
    /**
     * Content of the dialog shown when the user removes the device lock password and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password_fingerprint=0x7f111374;
    /**
     * Content of the dialog shown when the user removes the device lock pattern [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern=0x7f111375;
    /**
     * Content of the dialog shown when the user removes the device lock pattern and the user has face authentication enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern_face=0x7f111376;
    /**
     * Content of the dialog shown when the user removes the device lock pattern and the user has face authentication and fingerprint enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern_face_fingerprint=0x7f111377;
    /**
     * Content of the dialog shown when the user removes the device lock pattern and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern_fingerprint=0x7f111378;
    /**
     * Content of the dialog shown when the user removes the device lock PIN [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin=0x7f111379;
    /**
     * Content of the dialog shown when the user removes the device lock PIN and the user has face enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin_face=0x7f11137a;
    /**
     * Content of the dialog shown when the user removes the device lock PIN and the user has face authentication and fingerprint enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin_face_fingerprint=0x7f11137b;
    /**
     * Content of the dialog shown when the user removes the device lock PIN and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin_fingerprint=0x7f11137c;
    /**
     * Content of the dialog shown when the user removes the device lock of unknown type [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown=0x7f11137d;
    /**
     * Content of the dialog shown when the user removes the device lock of unknown type and the user has face enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown_face=0x7f11137e;
    /**
     * Content of the dialog shown when the user removes the device lock of unknown type and the user has face authentication and fingerprint enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown_face_fingerprint=0x7f11137f;
    /**
     * Content of the dialog shown when the user removes the device lock of unknown type and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown_fingerprint=0x7f111380;
    /**
     * Affirmative action of the dialog shown when the user removes the device lock [CHAR LIMIT=25]
     */
    public static final int unlock_disable_frp_warning_ok=0x7f111381;
    /**
     * Title of the dialog shown when the user removes the device lock [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_title=0x7f111382;
    /**
     * Title of the dialog shown when the user removes the profile lock [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_title_profile=0x7f111383;
    /**
     * Title for option to turn of password/pin/pattern unlock. [CHAR LIMIT=22]
     */
    public static final int unlock_disable_lock_title=0x7f111384;
    /**
     * Footer preference text in the screen lock type picker to indicate which app is requesting a new screen lock and that it requests for a strong PIN or password  [CHAR LIMIT=NONE]
     */
    public static final int unlock_footer_high_complexity_requested=0x7f111385;
    /**
     * Footer preference text in the screen lock type picker to indicate which app is requesting a new screen lock and it requests for any screen lock [CHAR LIMIT=NONE]
     */
    public static final int unlock_footer_low_complexity_requested=0x7f111386;
    /**
     * Footer preference text in the screen lock type picker to indicate which app is requesting a new screen lock and that it requests for a medium strength PIN or password [CHAR LIMIT=NONE]
     */
    public static final int unlock_footer_medium_complexity_requested=0x7f111387;
    /**
     * Footer preference text in the screen lock type picker to indicate which app is requesting a new screen lock [CHAR LIMIT=NONE]
     */
    public static final int unlock_footer_none_complexity_requested=0x7f111388;
    public static final int unlock_scramble_pin_layout_summary=0x7f111389;
    /**
     * PIN scramble
     */
    public static final int unlock_scramble_pin_layout_title=0x7f11138a;
    /**
     * Title for preference that allows the user to setup their lock screen preference later [CHAR LIMIT=22]
     */
    public static final int unlock_set_do_later_title=0x7f11138b;
    /**
     * Summary for preference that has been disabled by because of the DevicePolicyAdmin, or because device encryption is enabled, or because there are credentials in the credential storage [CHAR LIMIT=50]
     */
    public static final int unlock_set_unlock_disabled_summary=0x7f11138c;
    /**
     * Summary for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_launch_picker_change_summary=0x7f11138d;
    /**
     * Title for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_launch_picker_change_title=0x7f11138e;
    /**
     * Summary for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_launch_picker_enable_summary=0x7f11138f;
    /**
     * Summary for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=NONE]
     */
    public static final int unlock_set_unlock_launch_picker_summary_lock_after_timeout=0x7f111390;
    /**
     * Summary for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=NONE]
     */
    public static final int unlock_set_unlock_launch_picker_summary_lock_immediately=0x7f111391;
    /**
     * Title for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_launch_picker_title=0x7f111392;
    /**
     * Title for PreferenceScreen to launch picker for security method for the managed profile when there is none [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_launch_picker_title_profile=0x7f111393;
    /**
     * Summary for "Configure lockscreen" when security is disabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_none=0x7f111394;
    /**
     * Summary for "Configure lockscreen" when lock screen is off [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_off=0x7f111395;
    /**
     * Summary for "Configure lockscreen" when security password is enabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_password=0x7f111396;
    /**
     * Summary for "Configure lockscreen" when security pattern is enabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_pattern=0x7f111397;
    /**
     * Summary for "Configure lockscreen" when security PIN is enabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_pin=0x7f111398;
    /**
     * Summary for preference that disables unlock security [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_none_summary=0x7f111399;
    /**
     * Title for preference that disables unlock security [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_none_title=0x7f11139a;
    /**
     * Summary for preference that disables unlock security [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_off_summary=0x7f11139b;
    /**
     * Title for preference that disables unlock security [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_off_title=0x7f11139c;
    /**
     * Title for preference that guides the user through creating an unlock password [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_password_summary=0x7f11139d;
    /**
     * Title for preference that guides the user through creating an unlock password [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_password_title=0x7f11139e;
    /**
     * Summary for preference that guides the user through creating an unlock pattern [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_pattern_summary=0x7f11139f;
    /**
     * Title for preference that guides the user through creating an unlock pattern [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_pattern_title=0x7f1113a0;
    /**
     * Summary for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_pin_summary=0x7f1113a1;
    /**
     * Title for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_pin_title=0x7f1113a2;
    /**
     * Footer text in when choosing screen lock type during setup wizard, telling the user that
     * they can add fingerprint after they complete setup wizard. The text "Settings > Security"
     * should match settings_label and security_settings_title [CHAR LIMIT=NONE]
     */
    public static final int unlock_setup_wizard_fingerprint_details=0x7f1113a3;
    /**
     * SD card unmount informative text   [CHAR LIMIT=NONE]
     */
    public static final int unmount_inform_text=0x7f1113a4;
    /**
     * Title for switch to allow app unrestricted data usage [CHAR LIMIT=30]
     */
    public static final int unrestricted_app_summary=0x7f1113a5;
    /**
     * Title for switch to allow app unrestricted data usage [CHAR LIMIT=30]
     */
    public static final int unrestricted_app_title=0x7f1113a6;
    /**
     * Button that leads to list of apps with unrestricted data access [CHAR LIMIT=60]
     */
    public static final int unrestricted_data_saver=0x7f1113a7;
    /**
     * Summary text on a card explaining that a setting does not exist / is not supported on the device [CHAR_LIMIT=NONE]
     */
    public static final int unsupported_setting_summary=0x7f1113a8;
    /**
     * Label for showing apps that have not been used for months. [CHAR LIMIT=40]
     */
    public static final int unused_apps=0x7f1113a9;
    /**
     * Label of a switch preference that controls whether the system will remove the permissions and free up space when the app has not been used for months [CHAR LIMIT=40]
     */
    public static final int unused_apps_switch=0x7f1113aa;
    /**
     * Label for category for data usage [CHAR LIMIT=30]
     */
    public static final int usage=0x7f1113ab;
    /**
     * Title of usage access screen [CHAR LIMIT=30]
     */
    public static final int usage_access=0x7f1113ac;
    /**
     * Description of the usage access setting [CHAR LIMIT=NONE]
     */
    public static final int usage_access_description=0x7f1113ad;
    /**
     * Title of Usage Access preference item [CHAR LIMIT=30]
     */
    public static final int usage_access_title=0x7f1113ae;
    /**
     * XXX remove? Strings used for displaying usage statistics
     */
    public static final int usage_stats_label=0x7f1113af;
    /**
     * label for usage time
     */
    public static final int usage_time_label=0x7f1113b0;
    /**
     * [CHAR_LIMIT=NONE] Label for amount of power use that was actually observed (though
     * the change in battery level)
     */
    public static final int usage_type_actual_power=0x7f1113b1;
    /**
     * Label for Audio usage time
     */
    public static final int usage_type_audio=0x7f1113b2;
    /**
     * Label for Camera usage time
     */
    public static final int usage_type_camera=0x7f1113b3;
    /**
     * [CHAR_LIMIT=NONE] Label for amount of power use that was computed
     */
    public static final int usage_type_computed_power=0x7f1113b4;
    /**
     * Label for CPU usage time
     */
    public static final int usage_type_cpu=0x7f1113b5;
    /**
     * Label for CPU usage in foreground
     */
    public static final int usage_type_cpu_foreground=0x7f1113b6;
    /**
     * Label for mobile network data received [CHAR LIMIT=32]
     */
    public static final int usage_type_data_recv=0x7f1113b7;
    /**
     * Label for mobile network data sent [CHAR LIMIT=32]
     */
    public static final int usage_type_data_send=0x7f1113b8;
    /**
     * Label for Wi-Fi network data received [CHAR LIMIT=32]
     */
    public static final int usage_type_data_wifi_recv=0x7f1113b9;
    /**
     * Label for Wi-Fi network data sent [CHAR LIMIT=32]
     */
    public static final int usage_type_data_wifi_send=0x7f1113ba;
    /**
     * Label for Flashlight usage time
     */
    public static final int usage_type_flashlight=0x7f1113bb;
    /**
     * Label for GPS usage time
     */
    public static final int usage_type_gps=0x7f1113bc;
    /**
     * Label for time that there was no cell coverage
     */
    public static final int usage_type_no_coverage=0x7f1113bd;
    /**
     * Label for time that a feature has been on
     */
    public static final int usage_type_on_time=0x7f1113be;
    /**
     * Label for Phone usage time
     */
    public static final int usage_type_phone=0x7f1113bf;
    /**
     * Label for mobile network radio active time [CHAR LIMIT=32]
     */
    public static final int usage_type_radio_active=0x7f1113c0;
    /**
     * Label for the total power capacity of the device's battery
     */
    public static final int usage_type_total_battery_capacity=0x7f1113c1;
    /**
     * Label for Video usage time
     */
    public static final int usage_type_video=0x7f1113c2;
    /**
     * [CHAR LIMIT=25] Label for keeping device from sleeping
     */
    public static final int usage_type_wake_lock=0x7f1113c3;
    /**
     * [CHAR LIMIT=25] Label for WIFI usage time
     */
    public static final int usage_type_wifi_running=0x7f1113c4;
    /**
     * UI debug setting: disable USB audio routing title [CHAR LIMIT=60]
     */
    public static final int usb_audio_disable_routing=0x7f1113c5;
    /**
     * UI debug setting: disable USB audio routing summary [CHAR_LIMIT=NONE]
     */
    public static final int usb_audio_disable_routing_summary=0x7f1113c6;
    /**
     * Storage setting.  USB connection category [CHAR LIMIT=30]
     */
    public static final int usb_connection_category=0x7f1113c7;
    /**
     * The option in USB Preferences for selecting USB to be in device mode. This allows
     * the device to provide services such as file transfer or tethering to another device.
     */
    public static final int usb_control_device=0x7f1113c8;
    /**
     * The option in USB Preferences for selecting USB to be in host mode. This allows
     * the user to connect peripherals such as a mouse or flash drive to the device.
     */
    public static final int usb_control_host=0x7f1113c9;
    /**
     * The title used in USB Preferences which lets the user select whether USB
     * should be in host or device mode.
     */
    public static final int usb_control_title=0x7f1113ca;
    /**
     * Description at the footer of the default USB configuration window that describes how the setting works.
     */
    public static final int usb_default_info=0x7f1113cb;
    /**
     * The label that leads to the Default USB configuration window.
     */
    public static final int usb_default_label=0x7f1113cc;
    /**
     * The title used in USB Preferences which lets the user control the options for the file
     * transfer mode.
     */
    public static final int usb_file_transfer_title=0x7f1113cd;
    /**
     * Storage setting.  Summary for MIDI checkbox [CHAR LIMIT=NONE]
     */
    public static final int usb_midi_summary=0x7f1113ce;
    /**
     * Storage setting.  Title for MIDI checkbox [CHAR LIMIT=30]
     */
    public static final int usb_midi_title=0x7f1113cf;
    /**
     * Storage setting.  Summary for MTP checkbox [CHAR LIMIT=NONE]
     */
    public static final int usb_mtp_summary=0x7f1113d0;
    /**
     * Storage setting.  Title for MTP checkbox [CHAR LIMIT=30]
     */
    public static final int usb_mtp_title=0x7f1113d1;
    /**
     * The title used in USB Preferences which provides the user with the control over this
     * device's power role.
     */
    public static final int usb_power_title=0x7f1113d2;
    /**
     * Settings item title for USB preference [CHAR LIMIT=35]
     */
    public static final int usb_pref=0x7f1113d3;
    /**
     * Settings screen title for USB preference [CHAR LIMIT=35]
     */
    public static final int usb_preference=0x7f1113d4;
    /**
     * Storage setting.  Summary for PTP checkbox [CHAR LIMIT=NONE]
     */
    public static final int usb_ptp_summary=0x7f1113d5;
    /**
     * Storage setting.  Title for PTP checkbox [CHAR LIMIT=30]
     */
    public static final int usb_ptp_title=0x7f1113d6;
    /**
     * Settings item summary for USB preference when set to entering MIDI mode [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_MIDI=0x7f1113d7;
    /**
     * Settings item summary for USB preference when set to entering MIDI mode
     * and powering other device [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_MIDI_power=0x7f1113d8;
    /**
     * Settings item summary for USB preference when set to charging only [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_charging_only=0x7f1113d9;
    /**
     * Settings item summary for USB preference when set to transferring files via MTP [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_file_transfers=0x7f1113da;
    /**
     * Settings item summary for USB preference when set to transferring files via MTP
     * and powering other device [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_file_transfers_power=0x7f1113db;
    /**
     * Settings item summary for USB preference when set to transferring photos via PTP [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_photo_transfers=0x7f1113dc;
    /**
     * Settings item summary for USB preference when set to transferring photos via PTP
     * and powering other device [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_photo_transfers_power=0x7f1113dd;
    /**
     * Settings item summary for USB preference when set to powering the other device only [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_power_only=0x7f1113de;
    /**
     * Settings item summary for USB preference when set to USB tethering [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_tether=0x7f1113df;
    /**
     * Settings item summary for USB preference when set to USB tethering
     * and powering other device [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_tether_power=0x7f1113e0;
    /**
     * The summary text that appears under a USB control option while it is in the process of
     * switching control or power.
     */
    public static final int usb_switching=0x7f1113e1;
    /**
     * The summary text that appears under a USB control option when switching control or power has
     * failed.
     */
    public static final int usb_switching_failed=0x7f1113e2;
    public static final int usb_tethering_button_text=0x7f1113e3;
    public static final int usb_tethering_subtext=0x7f1113e4;
    /**
     * USB Tethering options
     */
    public static final int usb_title=0x7f1113e5;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transcoding the files that are transferred via MTP.
     */
    public static final int usb_transcode_files=0x7f1113e6;
    /**
     * The summary text that appears when the user enables the 'Convert videos to AVC' option for
     * transcoding files to compatible formats before transferring them from the device to PC.
     * [CHAR LIMIT=NONE]
     */
    public static final int usb_transcode_files_summary=0x7f1113e7;
    /**
     * The title used in a dialog which lets the user select what the USB connection
     * for this device should be used for. These options are more commonly used.
     * Choices are usb_use_file_transfer.
     */
    public static final int usb_use=0x7f1113e8;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for entering MIDI mode.
     */
    public static final int usb_use_MIDI=0x7f1113e9;
    /**
     * Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for entering MIDI mode.
     */
    public static final int usb_use_MIDI_desc=0x7f1113ea;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for charging only.
     */
    public static final int usb_use_charging_only=0x7f1113eb;
    /**
     * Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
     * user select what the USB connection for this device should be used for. This choice
     * is for charging only.
     */
    public static final int usb_use_charging_only_desc=0x7f1113ec;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring files via MTP.
     */
    public static final int usb_use_file_transfers=0x7f1113ed;
    /**
     * Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring files via MTP.
     */
    public static final int usb_use_file_transfers_desc=0x7f1113ee;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring photos via PTP.
     */
    public static final int usb_use_photo_transfers=0x7f1113ef;
    /**
     * Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring photos via PTP.
     */
    public static final int usb_use_photo_transfers_desc=0x7f1113f0;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for powering the other device only.
     */
    public static final int usb_use_power_only=0x7f1113f1;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for USB tethering.
     */
    public static final int usb_use_tethering=0x7f1113f2;
    /**
     * [CHAR_LIMIT=100] Security & location settings screen, setting check box summary for Google search
     */
    public static final int use_location_summary=0x7f1113f3;
    /**
     * [CHAR_LIMIT=30] Security & location settings screen, setting check box label for Google search
     */
    public static final int use_location_title=0x7f1113f4;
    /**
     * Checkbox summary for option to connect to open Wi-Fi automatically  [CHAR LIMIT=100]
     */
    public static final int use_open_wifi_automatically_summary=0x7f1113f5;
    /**
     * Checkbox summary for option to connect to open Wi-Fi automatically, to explain that a compatible network rating provider needs to be selected to use the feature.
     */
    public static final int use_open_wifi_automatically_summary_scorer_unsupported_disabled=0x7f1113f6;
    /**
     * Checkbox summary for option to connect to open Wi-Fi automatically, to explain that a network rating provider needs to be selected to use the feature.
     */
    public static final int use_open_wifi_automatically_summary_scoring_disabled=0x7f1113f7;
    /**
     * Checkbox title for option to connect to public Wi-Fi automatically [CHAR LIMIT=40]
     */
    public static final int use_open_wifi_automatically_title=0x7f1113f8;
    /**
     * Title for settings whether or not the framework will select input methods in an IME based
     * on the current system locales. (The user can select multiple system locales)
     * [CHAR LIMIT=35]
     */
    public static final int use_system_language_to_select_input_method_subtypes=0x7f1113f9;
    /**
     * Title for use wifi hotspot main switch [CHAR LIMIT=50]
     */
    public static final int use_wifi_hotsopt_main_switch_title=0x7f1113fa;
    /**
     * User account title [CHAR LIMIT=30]
     */
    public static final int user_account_title=0x7f1113fb;
    /**
     * Summary for add user action, when it's disabled [CHAR LIMIT=100]
     */
    public static final int user_add_max_count=0x7f1113fc;
    /**
     * User settings item to allow creating new users from locks screen [CHAR LIMIT=50]
     */
    public static final int user_add_on_lockscreen_menu=0x7f1113fd;
    /**
     * Summary for add restricted profile entry in the choice dialog [CHAR LIMIT=none]
     */
    public static final int user_add_profile_item_summary=0x7f1113fe;
    /**
     * Button text for adding a restricted profile [CHAR LIMIT=25]
     */
    public static final int user_add_profile_item_title=0x7f1113ff;
    /**
     * Summary for add user entry in the choice dialog [CHAR LIMIT=none]
     */
    public static final int user_add_user_item_summary=0x7f111400;
    /**
     * Button text for adding a regular user [CHAR LIMIT=25]
     */
    public static final int user_add_user_item_title=0x7f111401;
    /**
     * User settings add user menu [CHAR LIMIT=35]
     */
    public static final int user_add_user_menu=0x7f111402;
    /**
     * Message for add user confirmation dialog - long version. [CHAR LIMIT=none]
     */
    public static final int user_add_user_message_long=0x7f111403;
    /**
     * Message for add user confirmation dialog - short version. [CHAR LIMIT=none]
     */
    public static final int user_add_user_message_short=0x7f111404;
    /**
     * User settings add user or restricted profile menu [CHAR LIMIT=35]
     */
    public static final int user_add_user_or_profile_menu=0x7f111405;
    /**
     * Title for add user confirmation dialog [CHAR LIMIT=30]
     */
    public static final int user_add_user_title=0x7f111406;
    /**
     * Title for add user type dialog [CHAR LIMIT=45]
     */
    public static final int user_add_user_type_title=0x7f111407;
    /**
     * Setting label to show that a new user is being added [CHAR LIMIT=30]
     */
    public static final int user_adding_new_user=0x7f111408;
    /**
     * User information string to represent the owner of the device [CHAR LIMIT=25]
     */
    public static final int user_admin=0x7f111409;
    /**
     * Message to limited users that they cannot add accounts [CHAR LIMIT=100]
     */
    public static final int user_cannot_add_accounts_message=0x7f11140a;
    /**
     * Message to secondary users that only owner can manage users [CHAR LIMIT=none]
     */
    public static final int user_cannot_manage_message=0x7f11140b;
    /**
     * Title of User certificate [CHAR LIMIT=30]
     */
    public static final int user_certificate=0x7f11140c;
    /**
     * User removal confirmation message [CHAR LIMIT=none]
     */
    public static final int user_confirm_remove_message=0x7f11140d;
    /**
     * User (self) removal confirmation message [CHAR LIMIT=none]
     */
    public static final int user_confirm_remove_self_message=0x7f11140e;
    /**
     * User (self) removal confirmation title [CHAR LIMIT=30]
     */
    public static final int user_confirm_remove_self_title=0x7f11140f;
    /**
     * User removal confirmation title [CHAR LIMIT=25]
     */
    public static final int user_confirm_remove_title=0x7f111410;
    /**
     * Placeholder for the list of installed user credentials (private keys) when the list is empty. [CHAR LIMIT=120]
     */
    public static final int user_credential_none_installed=0x7f111411;
    /**
     * Announcement to confirm a user credential being removed. [CHAR LIMIT=NONE]
     */
    public static final int user_credential_removed=0x7f111412;
    /**
     * Alert dialog when viewing a set of user credentials.
     */
    public static final int user_credential_title=0x7f111413;
    /**
     * Title of preference to display user credentials and keys [CHAR LIMIT=30]
     */
    public static final int user_credentials=0x7f111414;
    /**
     * Summary of preference to display user credentials and keys [CHAR LIMIT=NONE]
     */
    public static final int user_credentials_summary=0x7f111415;
    /**
     * Delete button text [CHAR LIMIT=25]
     */
    public static final int user_delete_button=0x7f111416;
    /**
     * Spoken content description for delete icon beside a user [CHAR LIMIT=none]
     */
    public static final int user_delete_user_description=0x7f111417;
    /**
     * User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15]
     */
    public static final int user_dict_settings_add_dialog_confirm=0x7f111418;
    /**
     * User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15]
     */
    public static final int user_dict_settings_add_dialog_less_options=0x7f111419;
    /**
     * User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16]
     */
    public static final int user_dict_settings_add_dialog_more_options=0x7f11141a;
    /**
     * User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25]
     */
    public static final int user_dict_settings_add_dialog_title=0x7f11141b;
    /**
     * User dictionary settings. Label to put before the language field. [CHAR LIMIT=20]
     */
    public static final int user_dict_settings_add_locale_option_name=0x7f11141c;
    /**
     * User dictionary settings. The title of the menu item to add a new word to the user dictionary.
     */
    public static final int user_dict_settings_add_menu_title=0x7f11141d;
    /**
     * User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25]
     */
    public static final int user_dict_settings_add_screen_title=0x7f11141e;
    /**
     * User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35]
     */
    public static final int user_dict_settings_add_shortcut_hint=0x7f11141f;
    /**
     * User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20]
     */
    public static final int user_dict_settings_add_shortcut_option_name=0x7f111420;
    /**
     * User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35]
     */
    public static final int user_dict_settings_add_word_hint=0x7f111421;
    /**
     * User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20]
     */
    public static final int user_dict_settings_add_word_option_name=0x7f111422;
    /**
     * User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages
     */
    public static final int user_dict_settings_all_languages=0x7f111423;
    /**
     * User dictionary settings. The title of the context menu item to delete the current word
     */
    public static final int user_dict_settings_context_menu_delete_title=0x7f111424;
    /**
     * User dictionary settings. The title of the context menu item to edit the current word
     */
    public static final int user_dict_settings_context_menu_edit_title=0x7f111425;
    /**
     * User dictionary settings. The title of the dialog to edit an existing word in the user dictionary.
     */
    public static final int user_dict_settings_edit_dialog_title=0x7f111426;
    /**
     * User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200]
     */
    public static final int user_dict_settings_empty_text=0x7f111427;
    /**
     * Title for the 'Spell checker for work' preference. [CHAR LIMIT=45]
     */
    public static final int user_dict_settings_for_work_title=0x7f111428;
    /**
     * User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30]
     */
    public static final int user_dict_settings_more_languages=0x7f111429;
    /**
     * User dictionary settings.  The summary of the list item to go into the Personal dictionary settings screen.
     */
    public static final int user_dict_settings_summary=0x7f11142a;
    /**
     * User dictionary settings. The title of the list item to go into the Personal dictionary settings screen. [CHAR LIMIT=35]
     */
    public static final int user_dict_settings_title=0x7f11142b;
    /**
     * Title of preference to enable calling[CHAR LIMIT=40]
     */
    public static final int user_enable_calling=0x7f11142c;
    /**
     * Message for confirmation of turning on calls and SMS [CHAR LIMIT=none]
     */
    public static final int user_enable_calling_and_sms_confirm_message=0x7f11142d;
    /**
     * Title for confirmation of turning on calls and SMS [CHAR LIMIT=45]
     */
    public static final int user_enable_calling_and_sms_confirm_title=0x7f11142e;
    /**
     * Message for confirmation of turning on calls [CHAR LIMIT=none]
     */
    public static final int user_enable_calling_confirm_message=0x7f11142f;
    /**
     * Title for confirmation of turning on calls [CHAR LIMIT=40]
     */
    public static final int user_enable_calling_confirm_title=0x7f111430;
    /**
     * Title of preference to enable calling and SMS [CHAR LIMIT=45]
     */
    public static final int user_enable_calling_sms=0x7f111431;
    /**
     * Message to user to confirm exiting guest. [CHAR LIMIT=none]
     */
    public static final int user_exit_guest_confirm_message=0x7f111432;
    /**
     * Title of dialog to user to confirm exiting guest. [CHAR LIMIT=50]
     */
    public static final int user_exit_guest_confirm_title=0x7f111433;
    /**
     * Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35]
     */
    public static final int user_exit_guest_dialog_remove=0x7f111434;
    /**
     * Label for item to exit guest mode [CHAR LIMIT=35]
     */
    public static final int user_exit_guest_title=0x7f111435;
    /**
     * Title for Guest user [CHAR LIMIT=35]
     */
    public static final int user_guest=0x7f111436;
    /**
     * An option in a photo selection dialog to choose a pre-existing image [CHAR LIMIT=50]
     */
    public static final int user_image_choose_photo=0x7f111437;
    /**
     * Accessibility message for the photo selector which is a button/popup with the current photo [CHAR LIMIT=50]
     */
    public static final int user_image_photo_selector=0x7f111438;
    /**
     * An option in a photo selection dialog to take a new photo [CHAR LIMIT=50]
     */
    public static final int user_image_take_photo=0x7f111439;
    /**
     * Text shown for title of user info setting [CHAR LIMIT=20]
     */
    public static final int user_info_settings_title=0x7f11143a;
    /**
     * Title for the accessibility preference category of services downloaded by the user. [CHAR LIMIT=50]
     */
    public static final int user_installed_services_category_title=0x7f11143b;
    /**
     * User settings header for list of users and profiles [CHAR LIMIT=40]
     */
    public static final int user_list_title=0x7f11143c;
    /**
     * User lock screen settings header[CHAR LIMIT=40]
     */
    public static final int user_lockscreen_settings=0x7f11143d;
    /**
     * User settings warning that restricted profile needs a screen lock [CHAR LIMIT=NONE]
     */
    public static final int user_need_lock_message=0x7f11143e;
    /**
     * User details new restricted profile name [CHAR LIMIT=30]
     */
    public static final int user_new_profile_name=0x7f11143f;
    /**
     * User details new user name [CHAR LIMIT=30]
     */
    public static final int user_new_user_name=0x7f111440;
    /**
     * Title for the preference to enter the nickname of the user to display in the user switcher [CHAR LIMIT=25]
     */
    public static final int user_nickname=0x7f111441;
    /**
     * User picture title [CHAR LIMIT=30]
     */
    public static final int user_picture_title=0x7f111442;
    /**
     * User profile removal confirmation message [CHAR LIMIT=none]
     */
    public static final int user_profile_confirm_remove_message=0x7f111443;
    /**
     * Profile removal confirmation title [CHAR LIMIT=25]
     */
    public static final int user_profile_confirm_remove_title=0x7f111444;
    /**
     * Title of preference to remove the user [CHAR LIMIT=35]
     */
    public static final int user_remove_user=0x7f111445;
    /**
     * User details remove user menu [CHAR LIMIT=20]
     */
    public static final int user_remove_user_menu=0x7f111446;
    /**
     * User limits screen, user name rename text [CHAR LIMIT=15]
     */
    public static final int user_rename=0x7f111447;
    /**
     * Summary for app entries that are controlled by another entry [CHAR LIMIT=none]
     */
    public static final int user_restrictions_controlled_by=0x7f111448;
    /**
     * User app limits screen title [CHAR LIMIT=35]
     */
    public static final int user_restrictions_title=0x7f111449;
    /**
     * User settings dialog button to set screen lock [CHAR LIMIT=25]
     */
    public static final int user_set_lock_button=0x7f11144a;
    /**
     * User settings screen footer text [CHAR LIMIT=NONE]
     */
    public static final int user_settings_footer_text=0x7f11144b;
    /**
     * User settings screen title [CHAR LIMIT=40]
     */
    public static final int user_settings_title=0x7f11144c;
    /**
     * Button text to setup the new user later [CHAR LIMIT=25]
     */
    public static final int user_setup_button_setup_later=0x7f11144d;
    /**
     * Button text to setup the new user now [CHAR LIMIT=25]
     */
    public static final int user_setup_button_setup_now=0x7f11144e;
    /**
     * Message in dialog to setup a new user after creation [CHAR LIMIT=none]
     */
    public static final int user_setup_dialog_message=0x7f11144f;
    /**
     * Title of dialog to setup a new user [CHAR LIMIT=30]
     */
    public static final int user_setup_dialog_title=0x7f111450;
    /**
     * Message in dialog to setup a new restricted profile after creation [CHAR LIMIT=none]
     */
    public static final int user_setup_profile_dialog_message=0x7f111451;
    /**
     * User summary to indicate that a work profile is currently not set up [CHAR LIMIT=100]
     */
    public static final int user_summary_managed_profile_not_set_up=0x7f111452;
    /**
     * User summary to indicate that user is currently not set up [CHAR LIMIT=100]
     */
    public static final int user_summary_not_set_up=0x7f111453;
    /**
     * User summary to indicate that restricted profile is currently not set up [CHAR LIMIT=100]
     */
    public static final int user_summary_restricted_not_set_up=0x7f111454;
    /**
     * User settings summary for a restricted profile [CHAR LIMIT=50]
     */
    public static final int user_summary_restricted_profile=0x7f111455;
    /**
     * Label for switching to other user in the user switcher [CHAR LIMIT=35]
     */
    public static final int user_switch_to_user=0x7f111456;
    /**
     * User settings title for current user entry "You" user. [CHAR LIMIT=30]
     */
    public static final int user_you=0x7f111457;
    /**
     * Summary of User settings [CHAR LIMIT=NONE]
     */
    public static final int users_summary=0x7f111458;
    /**
     * Summary for UWB preference. [CHAR_LIMIT=NONE]
     */
    public static final int uwb_settings_summary=0x7f111459;
    /**
     * Summary for UWB preference when airplane mode is disabled. [CHAR_LIMIT=NONE]
     */
    public static final int uwb_settings_summary_airplane_mode=0x7f11145a;
    /**
     * Title for UWB preference [CHAR_LIMIT=60]
     */
    public static final int uwb_settings_title=0x7f11145b;
    public static final int v7_preference_off=0x7f11145c;
    public static final int v7_preference_on=0x7f11145d;
    /**
     * Summary of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=NONE]
     */
    public static final int verify_apps_over_usb_summary=0x7f11145e;
    /**
     * Title of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=32]
     */
    public static final int verify_apps_over_usb_title=0x7f11145f;
    /**
     * Manage applications, version string displayed in app snippet
     */
    public static final int version_text=0x7f111460;
    /**
     * Sound: Other sounds: Title for the option enabling the vibrate icon. [CHAR LIMIT=50]
     */
    public static final int vibrate_icon_title=0x7f111461;
    /**
     * Sound settings screen, setting option name checkbox
     */
    public static final int vibrate_in_silent_title=0x7f111462;
    /**
     * On Languages & input settings screen, setting title.  Setting to redirect vibration to input devices. [CHAR LIMIT=35]
     */
    public static final int vibrate_input_devices=0x7f111463;
    /**
     * On Languages & input settings screen, setting summary.  Setting to redirect vibration to input devices. [CHAR LIMIT=100]
     */
    public static final int vibrate_input_devices_summary=0x7f111464;
    /**
     * Sound: Other sounds: Preference summary to the option enabling haptic feedback on touch.
     */
    public static final int vibrate_on_touch_summary=0x7f111465;
    /**
     * Sound: Other sounds: Title for the option enabling haptic feedback on touch. [CHAR LIMIT=30]
     */
    public static final int vibrate_on_touch_title=0x7f111466;
    /**
     * Sound: Option for vibrate when ringing setting: Always vibrate. [CHAR LIMIT=40]
     */
    public static final int vibrate_when_ringing_option_always_vibrate=0x7f111467;
    /**
     * Sound: Option for vibrate when ringing setting: Never vibrate. [CHAR LIMIT=40]
     */
    public static final int vibrate_when_ringing_option_never_vibrate=0x7f111468;
    /**
     * Sound: Option for vibrate when ringing setting: Ramping ringer. [CHAR LIMIT=80]
     */
    public static final int vibrate_when_ringing_option_ramping_ringer=0x7f111469;
    /**
     * Sound: Title for the option managing whether or not to vibrate when ringing. [CHAR LIMIT=30]
     */
    public static final int vibrate_when_ringing_title=0x7f11146a;
    /**
     * Mobile network settings screen, title of Video calling setting [CHAR LIMIT=NONE]
     */
    public static final int video_calling_settings_title=0x7f11146b;
    /**
     * About phone screen, summary of the MAC address [CHAR LIMIT=80]
     */
    public static final int view_saved_network=0x7f11146c;
    /**
     * Title for the 'virtual keyboard' preference sub-screen. [CHAR LIMIT=35]
     */
    public static final int virtual_keyboard_category=0x7f11146d;
    /**
     * Title for the 'Virtual keyboards for work' preference. [CHAR LIMIT=45]
     */
    public static final int virtual_keyboards_for_work_title=0x7f11146e;
    /**
     * Settings description for a brief version of Vision-Related Accessibility Settings. Tells the user that they can adjust these settings now to help them through the remainder of the Setup Wizard and that they can later be changed in Settings. Displayed in Setup Wizard only. [CHAR LIMIT=none]
     */
    public static final int vision_settings_description=0x7f11146f;
    /**
     * Label for suggested action which will allow the user to change the font size and other accessibility settings. [CHAR LIMIT=40]
     */
    public static final int vision_settings_suggestion_title=0x7f111470;
    /**
     * Settings title for a brief version of Vision-Related Accessibility Settings. Displayed in Setup Wizard only. [CHAR LIMIT=35]
     */
    public static final int vision_settings_title=0x7f111471;
    /**
     * Title of setting on main settings screen. This item will take the user to the screen to tweak settings related to speech functionality
     */
    public static final int voice_input_output_settings=0x7f111472;
    /**
     * Main voice input/output settings screen title
     */
    public static final int voice_input_output_settings_title=0x7f111473;
    /**
     * [CHAR_LIMIT=NONE] Name of the settings item to open the voice input settings.
     */
    public static final int voice_input_settings=0x7f111474;
    /**
     * [CHAR_LIMIT=NONE] Title of the screen of the voice input settings
     */
    public static final int voice_input_settings_title=0x7f111475;
    /**
     * [CHAR_LIMIT=NONE] Warning message about security implications of enabling a
     * voice interaction service, displayed as a dialog
     * message when the user selects to enable a service.
     */
    public static final int voice_interaction_security_warning=0x7f111476;
    /**
     * [CHAR LIMIT=NONE] The summary text for the voice service preference that is
     * a full voice interaction service.  This is something that provides interactive
     * voice control of applications; for example you can tell it commands to have it
     * launch and let you interact with applications through your voice.
     */
    public static final int voice_interactor_preference_summary=0x7f111477;
    /**
     * [CHAR LIMIT=NONE] The summary text for the voice service preference that is
     * a simple voice recognition service.  This is something that only provides simple
     * speech to text conversions that applications can use when they want to allow you
     * to provide text to them through your voice (instead of with a keyboard).
     */
    public static final int voice_recognizer_preference_summary=0x7f111478;
    /**
     * Title of voice search settings list item within voice input/output settings
     */
    public static final int voice_search_settings_title=0x7f111479;
    /**
     * [CHAR LIMIT=50] The text for the settings section in which users select
     * a voice interaction or recognition service to use.
     */
    public static final int voice_service_preference_section_title=0x7f11147a;
    /**
     * Content description for the 5G limited VoLTE dialog. [CHAR LIMIT=NONE]
     */
    public static final int volte_5G_limited_text=0x7f11147b;
    /**
     * Title for the 5G limited VoLTE dialog. [CHAR LIMIT=50]
     */
    public static final int volte_5G_limited_title=0x7f11147c;
    /**
     * Volume description for alarm volume
     */
    public static final int volume_alarm_description=0x7f11147d;
    /**
     * Image description for alarm volume mute button.
     */
    public static final int volume_alarm_mute=0x7f11147e;
    /**
     * Title for the Volume dialog (settings panel) with all volume streams[CHAR LIMIT=50]
     */
    public static final int volume_connectivity_panel_title=0x7f11147f;
    /**
     * Volume link notification
     */
    public static final int volume_link_notification_title=0x7f111480;
    /**
     * Volume description for media volume
     */
    public static final int volume_media_description=0x7f111481;
    /**
     * Image description for media volume mute button.
     */
    public static final int volume_media_mute=0x7f111482;
    /**
     * Volume description for notification volume
     */
    public static final int volume_notification_description=0x7f111483;
    /**
     * Image description for notification volume mute button.
     */
    public static final int volume_notification_mute=0x7f111484;
    /**
     * Volume description for ringtone and notification volume
     */
    public static final int volume_ring_description=0x7f111485;
    /**
     * Image description for ring volume mute button.
     */
    public static final int volume_ring_mute=0x7f111486;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * DNS server addresses are not in numeric form (e.g. 8.8.8.8). [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_dns=0x7f111487;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * no DNS is found. [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_no_dns=0x7f111488;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * generic error. [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_other=0x7f111489;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * the server address is not in numeric form (e.g. 8.8.8.8). [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_server=0x7f11148a;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * the selected VPN type doesn't support always-on. [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_type=0x7f11148b;
    /**
     * Preference summary for always-on VPN checkbox. [CHAR LIMIT=40]
     */
    public static final int vpn_always_on_summary=0x7f11148c;
    /**
     * Preference summary for a VPN app that is set to be always-on. [CHAR LIMIT=40]
     */
    public static final int vpn_always_on_summary_active=0x7f11148d;
    /**
     * Preference summary for app not supporting always-on VPN [CHAR LIMIT=40]
     */
    public static final int vpn_always_on_summary_not_supported=0x7f11148e;
    /**
     * Button label to cancel changing a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_cancel=0x7f11148f;
    /**
     * Dialog message subtitle when the user can't connect an always-on vpn [CHAR LIMIT=NONE]
     */
    public static final int vpn_cant_connect_message=0x7f111490;
    /**
     * Dialog mesage title when the user can't connect an always-on vpn [CHAR LIMIT=NONE]
     */
    public static final int vpn_cant_connect_title=0x7f111491;
    /**
     * Button label to connect to a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_connect=0x7f111492;
    /**
     * Dialog title to connect to a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_connect_to=0x7f111493;
    /**
     * Preference title to create a new VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_create=0x7f111494;
    /**
     * Button label to disconnect from a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_disconnect=0x7f111495;
    /**
     * Dialog message body to disconnect from a VPN profile.
     */
    public static final int vpn_disconnect_confirm=0x7f111496;
    /**
     * Toast message when VPN has disconnected automatically due to Clear credentials. [CHAR LIMIT=NONE]
     */
    public static final int vpn_disconnected=0x7f111497;
    /**
     * Seting subtext indicating the device is not currently connected to any VPN [CHAR LIMIT=40]
     */
    public static final int vpn_disconnected_summary=0x7f111498;
    /**
     * Input label for the DNS servers of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_dns_servers=0x7f111499;
    /**
     * Button label to finish editing a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_done=0x7f11149a;
    /**
     * Dialog title to edit a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_edit=0x7f11149b;
    /**
     * Dialog message body to explain that always-on VPN will disable network traffic while the VPN is connecting.
     */
    public static final int vpn_first_always_on_vpn_message=0x7f11149c;
    /**
     * Button label to forget a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_forget=0x7f11149d;
    /**
     * Button label to forget a VPN profile [CHAR LIMIT=40]
     */
    public static final int vpn_forget_long=0x7f11149e;
    /**
     * Dialog subtitle warning for a VPN app that has an insecure type. [CHAR LIMIT=100]
     */
    public static final int vpn_insecure_dialog_subtitle=0x7f11149f;
    /**
     * Preference summary for a VPN app that has an insecure type. [CHAR LIMIT=40]
     */
    public static final int vpn_insecure_summary=0x7f1114a0;
    /**
     * Selection label for the IPSec CA certificate of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_ca_cert=0x7f1114a1;
    /**
     * Input label for the IPSec identifier of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_identifier=0x7f1114a2;
    /**
     * Input label for the IPSec pre-shared key of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_secret=0x7f1114a3;
    /**
     * Selection label for the IPSec server certificate of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_server_cert=0x7f1114a4;
    /**
     * Selection label for the IPSec user certificate of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_user_cert=0x7f1114a5;
    /**
     * Input label for the L2TP secret of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_l2tp_secret=0x7f1114a6;
    /**
     * Error indicating that the selected VPN doesn't meet requirements. [CHAR LIMIT=NONE]
     */
    public static final int vpn_lockdown_config_error=0x7f1114a7;
    /**
     * List item indicating that no always-on VPN is selected. [CHAR LIMIT=64]
     */
    public static final int vpn_lockdown_none=0x7f1114a8;
    /**
     * Summary describing the always-on VPN feature. [CHAR LIMIT=NONE]
     */
    public static final int vpn_lockdown_summary=0x7f1114a9;
    /**
     * Menu item to delete a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_menu_delete=0x7f1114aa;
    /**
     * Menu item to edit a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_menu_edit=0x7f1114ab;
    /**
     * Menu item to select always-on VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_menu_lockdown=0x7f1114ac;
    /**
     * Toast message when a certificate is missing. [CHAR LIMIT=100]
     */
    public static final int vpn_missing_cert=0x7f1114ad;
    /**
     * Checkbox label to enable PPP encryption for a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_mppe=0x7f1114ae;
    /**
     * Input label for the name of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_name=0x7f1114af;
    /**
     * Option to not use a CA certificate to verify the VPN server. [CHAR LIMIT=40]
     */
    public static final int vpn_no_ca_cert=0x7f1114b0;
    /**
     * Toast message when there is no network connection to start VPN. [CHAR LIMIT=100]
     */
    public static final int vpn_no_network=0x7f1114b1;
    /**
     * Option to use the server certificate received from the VPN server. [CHAR LIMIT=40]
     */
    public static final int vpn_no_server_cert=0x7f1114b2;
    /**
     * Placeholder when VPN settings is open but no VPNs have been created. [CHAR LIMIT=100]
     */
    public static final int vpn_no_vpns_added=0x7f1114b3;
    /**
     * Hint for not using an optional feature in a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_not_used=0x7f1114b4;
    /**
     * Input label for the password of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_password=0x7f1114b5;
    /**
     * Button label to connect a VPN profile, replacing the current one. [CHAR LIMIT=40]
     */
    public static final int vpn_replace=0x7f1114b6;
    /**
     * Dialog message body to connect a VPN app, replacing another VPN app that is already always-on [CHAR LIMIT=NONE]
     */
    public static final int vpn_replace_always_on_vpn_disable_message=0x7f1114b7;
    /**
     * Dialog message body to explain that always-on VPN will disable network traffic while the VPN is connecting, and that this will replace the current VPN.
     */
    public static final int vpn_replace_always_on_vpn_enable_message=0x7f1114b8;
    /**
     * Dialog message body to set another VPN app to be always-on [CHAR LIMIT=NONE]
     */
    public static final int vpn_replace_vpn_message=0x7f1114b9;
    /**
     * Dialog message title to set another VPN app to be always-on [CHAR LIMIT=40]
     */
    public static final int vpn_replace_vpn_title=0x7f1114ba;
    /**
     * Preference title for the toggle that controls whether to force all network connections to
     * go through VPN. [CHAR LIMIT=40]
     */
    public static final int vpn_require_connection=0x7f1114bb;
    /**
     * Dialog message title to confirm forcing all network connections to go through VPN.
     * [CHAR LIMIT=40]
     */
    public static final int vpn_require_connection_title=0x7f1114bc;
    /**
     * Input label for the forwarding routes of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_routes=0x7f1114bd;
    /**
     * Button label to save a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_save=0x7f1114be;
    /**
     * Checkbox label to save the username and the password in a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_save_login=0x7f1114bf;
    /**
     * Input label for the DNS search domains of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_search_domains=0x7f1114c0;
    /**
     * Input label for the server address of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_server=0x7f1114c1;
    /**
     * Dialog message title to set always-on VPN when another app was not already set.
     */
    public static final int vpn_set_vpn_title=0x7f1114c2;
    /**
     * Title of preference to enter the VPN settings activity [CHAR LIMIT=30]
     */
    public static final int vpn_settings_insecure_single=0x7f1114c3;
    /**
     * Title of preference to enter the VPN settings activity, if there are multiple vpns and multiple insecure vpns [CHAR LIMIT=60]
     */
    public static final int vpn_settings_multiple_insecure_multiple_total=0x7f1114c4;
    /**
     * Error message for users that aren't allowed to modify VPN settings [CHAR LIMIT=none]
     */
    public static final int vpn_settings_not_available=0x7f1114c5;
    /**
     * Title of preference to enter the VPN settings activity, if there are multiple vpns but only 1 insecure vpn [CHAR LIMIT=60]
     */
    public static final int vpn_settings_single_insecure_multiple_total=0x7f1114c6;
    /**
     * Title of preference to enter the VPN settings activity
     */
    public static final int vpn_settings_title=0x7f1114c7;
    /**
     * Checkbox label to show advanced options of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_show_options=0x7f1114c8;
    /**
     * Preference title for VPN settings. [CHAR LIMIT=40]
     */
    public static final int vpn_title=0x7f1114c9;
    /**
     * Dialog action button to turn on a VPN.
     */
    public static final int vpn_turn_on=0x7f1114ca;
    /**
     * Input label for the type of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_type=0x7f1114cb;
    /**
     * Input label for the username of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_username=0x7f1114cc;
    /**
     * Field label to show the version number for a VPN app. [CHAR LIMIT=40]
     */
    public static final int vpn_version=0x7f1114cd;
    /**
     * Summary for a warning message about security implications of enabling a VR
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int vr_listener_security_warning_summary=0x7f1114ce;
    /**
     * Title for a warning message about security implications of enabling a VR
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int vr_listener_security_warning_title=0x7f1114cf;
    /**
     * Title for managing VR (virtual reality) helper services. [CHAR LIMIT=50]
     */
    public static final int vr_listeners_title=0x7f1114d0;
    /**
     * UI debug setting: wait for debugger to attach to debugging process? [CHAR LIMIT=50]
     */
    public static final int wait_for_debugger=0x7f1114d1;
    /**
     * UI debug setting: wait for debugger to attach to debugging process summary [CHAR LIMIT=500]
     */
    public static final int wait_for_debugger_summary=0x7f1114d2;
    public static final int wake_when_plugged_or_unplugged_summary=0x7f1114d3;
    /**
     * Wake on plug
     */
    public static final int wake_when_plugged_or_unplugged_title=0x7f1114d4;
    /**
     * About phone settings screen, setting option name to see wallpapers attributions
     */
    public static final int wallpaper_attributions=0x7f1114d5;
    /**
     * About phone settings screen, setting option name to see wallpapers attributions values
     */
    public static final int wallpaper_attributions_values=0x7f1114d6;
    /**
     * Summary for the top level wallpapers settings [CHAR LIMIT=NONE]
     */
    public static final int wallpaper_dashboard_summary=0x7f1114d7;
    /**
     * Wallpaper settings fragment title [CHAR LIMIT=30]
     */
    public static final int wallpaper_settings_fragment_title=0x7f1114d8;
    /**
     * Wallpaper settings summary when wallpaper has been updated [CHAR LIMIT=NONE]
     */
    public static final int wallpaper_settings_summary_custom=0x7f1114d9;
    /**
     * Wallpaper settings summary when default wallpaper is used [CHAR LIMIT=NONE]
     */
    public static final int wallpaper_settings_summary_default=0x7f1114da;
    /**
     * Wallpaper settings title [CHAR LIMIT=30]
     */
    public static final int wallpaper_settings_title=0x7f1114db;
    /**
     * Wallpaper suggestion summary [CHAR LIMIT=55]
     */
    public static final int wallpaper_suggestion_summary=0x7f1114dc;
    /**
     * Wallpaper suggestion title [CHAR LIMIT=46]
     */
    public static final int wallpaper_suggestion_title=0x7f1114dd;
    /**
     * Content description for help icon button [CHAR LIMIT=20]
     */
    public static final int warning_button_text=0x7f1114de;
    /**
     * Summary text for enabling web actions. [CHAR_LIMIT=250]
     */
    public static final int web_action_enable_summary=0x7f1114df;
    /**
     * Title text for enabling web actions. [CHAR_LIMIT=60]
     */
    public static final int web_action_enable_title=0x7f1114e0;
    /**
     * Section title for the Web Action preference [CHAR LIMIT=60]
     */
    public static final int web_action_section_title=0x7f1114e1;
    /**
     * UI webview setting: WebView disabled-for-user explanatory text [CHAR LIMIT=30]
     */
    public static final int webview_disabled_for_user=0x7f1114e2;
    /**
     * About phone settings screen, setting option name to see licensing info for WebView component. [CHAR LIMIT=35]
     */
    public static final int webview_license_title=0x7f1114e3;
    /**
     * UI webview setting: WebView uninstalled-for-user explanatory text [CHAR LIMIT=30]
     */
    public static final int webview_uninstalled_for_user=0x7f1114e4;
    /**
     * Label for the agree button on wfc disclaimer fragment. [CHAR LIMIT=30]
     */
    public static final int wfc_disclaimer_agree_button_text=0x7f1114e5;
    /**
     * Label for the disagree button on wfc disclaimer fragment. [CHAR LIMIT=30]
     */
    public static final int wfc_disclaimer_disagree_text=0x7f1114e6;
    /**
     * Warn the user that the phone have emergency call limitation. [CHAR LIMIT=NONE]
     */
    public static final int wfc_disclaimer_emergency_limitation_desc_text=0x7f1114e7;
    /**
     * Label for the title on wfc disclaimer location. [CHAR LIMIT=30]
     */
    public static final int wfc_disclaimer_emergency_limitation_title_text=0x7f1114e8;
    /**
     * Warn the user that the phone may share its location with the carrier. [CHAR LIMIT=NONE]
     */
    public static final int wfc_disclaimer_location_desc_text=0x7f1114e9;
    /**
     * Label for the title on wfc disclaimer location. [CHAR LIMIT=30]
     */
    public static final int wfc_disclaimer_location_title_text=0x7f1114ea;
    /**
     * Label for the title on wfc disclaimer fragment. [CHAR LIMIT=40]
     */
    public static final int wfc_disclaimer_title_text=0x7f1114eb;
    /**
     * Title for the screen that lets the user choose a widget to add to the home screen
     * (or other screens that can host widgets).  Note to translators: we're still determining
     * the final name for Gadgets/Widgets, so please translate both for now.
     */
    public static final int widget_picker_title=0x7f1114ec;
    /**
     * Label for section about wifi in data usage screen [CHAR LIMIT=60]
     */
    public static final int wifi=0x7f1114ed;
    /**
     * Header for the list of wifi networks
     */
    public static final int wifi_access_points=0x7f1114ee;
    /**
     * Summary for save failed status when saving single network [CHAR LIMIT=50]
     */
    public static final int wifi_add_app_network_save_failed_summary=0x7f1114ef;
    /**
     * Summary for saved status when saving multiple networks   [CHAR LIMIT=NONE]
     */
    public static final int wifi_add_app_networks_saved_summary=0x7f1114f0;
    /**
     * Summary for the panel of add Wi-Fi networks from APP [CHAR LIMIT=NONE]
     */
    public static final int wifi_add_app_networks_saving_summary=0x7f1114f1;
    /**
     * Summary for the panel of add multiple Wi-Fi networks from APP [CHAR LIMIT=NONE]
     */
    public static final int wifi_add_app_networks_summary=0x7f1114f2;
    /**
     * Title for the panel of add multiple Wi-Fi networks from APP [CHAR LIMIT=50]
     */
    public static final int wifi_add_app_networks_title=0x7f1114f3;
    /**
     * Summary for saved status when saving single network   [CHAR LIMIT=30]
     */
    public static final int wifi_add_app_single_network_saved_summary=0x7f1114f4;
    /**
     * Summary for saving status when saving single network [CHAR LIMIT=30]
     */
    public static final int wifi_add_app_single_network_saving_summary=0x7f1114f5;
    /**
     * Summary for the panel of add Wi-Fi network from APP [CHAR LIMIT=NONE]
     */
    public static final int wifi_add_app_single_network_summary=0x7f1114f6;
    /**
     * Title for the panel of add Wi-Fi network from APP [CHAR LIMIT=50]
     */
    public static final int wifi_add_app_single_network_title=0x7f1114f7;
    /**
     * Action bar text message to manually add a wifi network [CHAR LIMIT=20]
     */
    public static final int wifi_add_network=0x7f1114f8;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the device's Wi-Fi MAC address. [CHAR LIMIT=50]
     */
    public static final int wifi_advanced_device_mac_address_title=0x7f1114f9;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's current IP address.
     */
    public static final int wifi_advanced_ip_address_title=0x7f1114fa;
    /**
     * Error message for users that aren't allowed to see or modify WiFi advanced settings [CHAR LIMIT=NONE]
     */
    public static final int wifi_advanced_not_available=0x7f1114fb;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the randomized Wi-Fi MAC address when disconnected. [CHAR LIMIT=69]
     */
    public static final int wifi_advanced_randomized_mac_address_disconnected_title=0x7f1114fc;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the randomized Wi-Fi MAC address. [CHAR LIMIT=50]
     */
    public static final int wifi_advanced_randomized_mac_address_title=0x7f1114fd;
    /**
     * Wifi Advanced settings.  Used as a label under the shortcut icon that goes to Wifi advanced settings. [CHAR LIMIT=20]
     */
    public static final int wifi_advanced_settings_label=0x7f1114fe;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's SSID. [CHAR LIMIT=20]
     */
    public static final int wifi_advanced_ssid_title=0x7f1114ff;
    /**
     * Wi-Fi settings screen, advanced, settings section.  This is a header shown above advanced wifi settings. [CHAR LIMIT=30]
     */
    public static final int wifi_advanced_titlebar=0x7f111500;
    /**
     * Message for talkback to say when focus on Advanced Options[CHAR LIMIT=NONE]
     */
    public static final int wifi_advanced_toggle_description=0x7f111501;
    /**
     * Extended message for talkback to say when Advanced Options is collapsed. (e.g., Double-tap to expand) [CHAR LIMIT=NONE]
     */
    public static final int wifi_advanced_toggle_description_collapsed=0x7f111502;
    /**
     * Label for adding to the list of selected bands when 2.4 GHz is selected
     */
    public static final int wifi_ap_2G=0x7f111503;
    /**
     * Label for adding to the list of selected bands when 5.0 GHz is selected
     */
    public static final int wifi_ap_5G=0x7f111504;
    /**
     * Label for the RadioGroup to choose wifi ap band
     */
    public static final int wifi_ap_band_config=0x7f111505;
    /**
     * Label that is shown as a dialog summary informing users they must pick at LEAST one band for their hotspot [CHAR LIMIT=NONE]
     */
    public static final int wifi_ap_band_select_one=0x7f111506;
    /**
     * Label for the radio button to choose wifi ap 2.4 GHz band
     */
    public static final int wifi_ap_choose_2G=0x7f111507;
    /**
     * Label for the radio button to only choose wifi ap 5GHz band
     */
    public static final int wifi_ap_choose_5G=0x7f111508;
    /**
     * Label for the radio button to choose wifi ap channel automatically
     */
    public static final int wifi_ap_choose_auto=0x7f111509;
    /**
     * Label for the radio button to prefer 5GHz wifi ap band  [CHAR LIMIT=80]
     */
    public static final int wifi_ap_prefer_5G=0x7f11150a;
    /**
     * Summary for networks failing to connect due to association rejection status 17, AP full
     */
    public static final int wifi_ap_unable_to_handle_new_sta=0x7f11150b;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item on Wifi information screen
     */
    public static final int wifi_api_test=0x7f11150c;
    /**
     * This string asks the user whether or not to allow an app to disable WiFi. [CHAR LIMIT=NONE]
     */
    public static final int wifi_ask_disable=0x7f11150d;
    /**
     * This string asks the user whether or not to allow an app to enable WiFi. [CHAR LIMIT=NONE]
     */
    public static final int wifi_ask_enable=0x7f11150e;
    /**
     * Hint for Wi-Fi Auto-connect [CHAR LIMIT=NONE]
     */
    public static final int wifi_auto_connect_summary=0x7f11150f;
    /**
     * Label for a Wi-Fi network to specify if the device will auto connect to the Wi-Fi network
     * when signal of the Wi-Fi network is reachable [CHAR LIMIT=50]
     */
    public static final int wifi_auto_connect_title=0x7f111510;
    /**
     * Checkbox summary for option to toggle poor network detection [CHAR LIMIT=60]
     */
    public static final int wifi_avoid_poor_network_detection_summary=0x7f111511;
    /**
     * The minimum kbps threshold needed to use badge; value is a map with key corresponding to
     * the badge enum in ScoredNetworks (SD, HD etc) and value throughput in kbps
     */
    public static final int wifi_badging_thresholds_default=0x7f111512;
    /**
     * Wifi 2.4GHz is used as a universal identifier for 2.4GHz band
     */
    public static final int wifi_band_24ghz=0x7f111513;
    /**
     * Wifi Internal 5GHz as a universal identifier for 5GHz band
     */
    public static final int wifi_band_5ghz=0x7f111514;
    /**
     * Wifi 6GHz is used as a universal identifier for 6GHz band [CHAR LIMIT=40]
     */
    public static final int wifi_band_6ghz=0x7f111515;
    /**
     * Title for wifi calling main switch preferences. [CHAR LIMIT=50]
     */
    public static final int wifi_calling_main_switch_title=0x7f111516;
    /**
     * Summary of WFC preference item on the WFC preference selection dialog. [CHAR LIMIT=70]
     */
    public static final int wifi_calling_mode_cellular_preferred_summary=0x7f111517;
    /**
     * Title of WFC preference selection dialog [CHAR LIMIT=30]
     */
    public static final int wifi_calling_mode_dialog_title=0x7f111518;
    /**
     * Title of WFC preference item [CHAR LIMIT=30]
     */
    public static final int wifi_calling_mode_title=0x7f111519;
    /**
     * Summary of WFC preference item on the WFC preference selection dialog. [CHAR LIMIT=70]
     */
    public static final int wifi_calling_mode_wifi_only_summary=0x7f11151a;
    /**
     * Summary of WFC preference item on the WFC preference selection dialog. [CHAR LIMIT=70]
     */
    public static final int wifi_calling_mode_wifi_preferred_summary=0x7f11151b;
    /**
     * Message to display when carrier does not support wifi calling or doesn't want the user
     * to modify the settings [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_not_supported=0x7f11151c;
    /**
     * Wi-Fi Calling settings. Text displayed when Wi-Fi Calling is off
     */
    public static final int wifi_calling_off_explanation=0x7f11151d;
    /**
     * Wi-Fi Calling settings. Additional text displayed when Wi-Fi Calling is off. Default empty. [CHAR LIMIT=NONE]
     * Wi-Fi Calling settings. Additional text displayed when Wi-Fi Calling is off. Default empty. [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_off_explanation_2=0x7f11151e;
    /**
     * Message to display when setting wifi calling are not editable [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_pref_managed_by_carrier=0x7f11151f;
    /**
     * WFC mode dialog [CHAR LIMIT=45]
     */
    public static final int wifi_calling_roaming_mode_dialog_title=0x7f111520;
    /**
     * Summary of WFC roaming preference item [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_roaming_mode_summary=0x7f111521;
    /**
     * Title of WFC roaming preference item [CHAR LIMIT=45]
     */
    public static final int wifi_calling_roaming_mode_title=0x7f111522;
    /**
     * Message to display when wifi calling needs activation [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_settings_activation_instructions=0x7f111523;
    /**
     * Wireless networks, item title to go into the WFC settings [CHAR LIMIT=30]
     * Do not translate. Wireless networks, item title to go into the WFC settings [CHAR LIMIT=30]
     */
    public static final int wifi_calling_settings_title=0x7f111524;
    /**
     * Summary of suggestion to turn on wifi calling [CHAR LIMIT=55]
     */
    public static final int wifi_calling_suggestion_summary=0x7f111525;
    /**
     * Title of suggestion to turn on wifi calling [CHAR LIMIT=46]
     */
    public static final int wifi_calling_suggestion_title=0x7f111526;
    /**
     * Summary for Wi-Fi calling to explain this feature [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_summary=0x7f111527;
    /**
     * Message to display when wifi calling should be on [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_turn_on=0x7f111528;
    /**
     * Button label to dismiss the dialog
     */
    public static final int wifi_cancel=0x7f111529;
    /**
     * Status detail for a network that can't be connected to for some reason
     */
    public static final int wifi_cant_connect=0x7f11152a;
    /**
     * Status for a named network that can't be connected to for some reason
     */
    public static final int wifi_cant_connect_to_ap=0x7f11152b;
    /**
     * Message in dialog when the user tries to connect to a carrier network[CHAR_LIMIT=40]
     */
    public static final int wifi_carrier_connect=0x7f11152c;
    /**
     * Message in dialog when the user tries to connect to a carrier network[CHAR_LIMIT=60]
     */
    public static final int wifi_carrier_content=0x7f11152d;
    /**
     * Preference summary to automatically switch away from bad wifi networks [CHAR LIMIT=None]
     */
    public static final int wifi_cellular_data_fallback_summary=0x7f11152e;
    /**
     * Preference title for option to automatically switch away from bad wifi networks [CHAR LIMIT=60]
     */
    public static final int wifi_cellular_data_fallback_title=0x7f11152f;
    /**
     * Title of Wi-Fi certificate [CHAR LIMIT=30]
     */
    public static final int wifi_certificate=0x7f111530;
    /**
     * Message shown when the user likely entered an incorrect password for a wifi network
     */
    public static final int wifi_check_password_try_again=0x7f111531;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item on Wifi information screen
     */
    public static final int wifi_config_info=0x7f111532;
    /**
     * Summary for Wi-Fi Preferences that explains that Wi-Fi will not automatically be enabled when high quality saved networks are nearby
     */
    public static final int wifi_configure_settings_preference_summary_wakeup_off=0x7f111533;
    /**
     * Summary for Wi-Fi Preferences that explains that Wi-Fi will be enabled when high quality saved networks are nearby
     */
    public static final int wifi_configure_settings_preference_summary_wakeup_on=0x7f111534;
    /**
     * Action bar title to open additional Wi-Fi settings
     */
    public static final int wifi_configure_settings_preference_title=0x7f111535;
    /**
     * Button label to connect to a Wi-Fi network
     */
    public static final int wifi_connect=0x7f111536;
    /**
     * Summary for Connected wifi network with a low quality connection [CHAR LIMIT=NONE]
     */
    public static final int wifi_connected_low_quality=0x7f111537;
    /**
     * Summary for Connected wifi network without internet
     */
    public static final int wifi_connected_no_internet=0x7f111538;
    /**
     * A notification for connected to a Wi-Fi network [CHAR LIMIT=NONE]
     */
    public static final int wifi_connected_to_message=0x7f111539;
    /**
     * Button label to connecting progress to a Wi-Fi network [CHAR LIMIT=20]
     */
    public static final int wifi_connecting=0x7f11153a;
    /**
     * A notification for connecting to a Wi-Fi network [CHAR LIMIT=NONE]
     */
    public static final int wifi_connecting_to_message=0x7f11153b;
    /**
     * Format string for amount of wifi data used [CHAR LIMIT=30]
     */
    public static final int wifi_data_template=0x7f11153c;
    /**
     * Label for wifi data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int wifi_data_usage=0x7f11153d;
    /**
     * Wifi details preference title to display router DNS info
     */
    public static final int wifi_details_dns=0x7f11153e;
    /**
     * Wifi details preference category title for IPv6 information
     */
    public static final int wifi_details_ipv6_address_header=0x7f11153f;
    /**
     * Wifi details preference title to display router IP subnet mask
     */
    public static final int wifi_details_subnet_mask=0x7f111540;
    /**
     * Wifi details title
     */
    public static final int wifi_details_title=0x7f111541;
    /**
     * Status for networks disabled by the network recommendation provider
     */
    public static final int wifi_disabled_by_recommendation_provider=0x7f111542;
    /**
     * Status for networks disabled for unknown reason
     */
    public static final int wifi_disabled_generic=0x7f111543;
    /**
     * Status for networked disabled from a DNS or DHCP failure
     */
    public static final int wifi_disabled_network_failure=0x7f111544;
    /**
     * Status for networks disabled from authentication failure (wrong password
     * or certificate).
     */
    public static final int wifi_disabled_password_failure=0x7f111545;
    /**
     * Status for networked disabled from a wifi association failure
     */
    public static final int wifi_disabled_wifi_failure=0x7f111546;
    /**
     * Button label to disconnect a Wi-Fi network. [CHAR LIMIT=40]
     */
    public static final int wifi_disconnect_button_text=0x7f111547;
    /**
     * Summary for the disconnected network. [CHAR LIMIT=40]
     */
    public static final int wifi_disconnected=0x7f111548;
    /**
     * Hint for a Wi-Fi network is disconnected successfully [CHAR LIMIT=NONE]
     */
    public static final int wifi_disconnected_from=0x7f111549;
    /**
     * Wifi Display settings. The checkbox title for enabling autonomous GO during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_autonomous_go=0x7f11154a;
    /**
     * Setting Checkbox title whether to show options for wireless display certification
     */
    public static final int wifi_display_certification=0x7f11154b;
    /**
     * Wifi Display settings. The sub heading for wireless display certification options. [CHAR LIMIT=40]
     */
    public static final int wifi_display_certification_heading=0x7f11154c;
    /**
     * setting Checkbox summary whether to show options for wireless display certification
     */
    public static final int wifi_display_certification_summary=0x7f11154d;
    /**
     * Wifi Display settings. Image description for device details button. This opens the screen to rename, unpair, etc. a single device.
     */
    public static final int wifi_display_details=0x7f11154e;
    /**
     * Wifi Display settings. The title of a menu item to enable wireless display [CHAR LIMIT=40]
     */
    public static final int wifi_display_enable_menu_item=0x7f11154f;
    /**
     * Wifi Display settings. The dropdown menu title for choosing listen channel during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_listen_channel=0x7f111550;
    /**
     * Wifi Display settings. The checkbox title for enabling listen mode during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_listen_mode=0x7f111551;
    /**
     * Wifi Display settings. Text that appears when scanning for devices is finished and no nearby device was found [CHAR LIMIT=40]
     */
    public static final int wifi_display_no_devices_found=0x7f111552;
    /**
     * Wifi Display settings. The dropdown menu title for choosing operating channel during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_operating_channel=0x7f111553;
    /**
     * Wifi Display settings. Options dialog.  The done button text. [CHAR LIMIT=20]
     */
    public static final int wifi_display_options_done=0x7f111554;
    /**
     * Wifi Display settings. Options dialog.  The forget button text. [CHAR LIMIT=20]
     */
    public static final int wifi_display_options_forget=0x7f111555;
    /**
     * Wifi Display settings. Options dialog.  The name label used when prompting the user to rename the display. [CHAR LIMIT=20]
     */
    public static final int wifi_display_options_name=0x7f111556;
    /**
     * Wifi Display settings. Options dialog.  The title of the dialog. [CHAR LIMIT=40]
     */
    public static final int wifi_display_options_title=0x7f111557;
    /**
     * Wifi Display settings. The button text for sending pause trigger during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_pause=0x7f111558;
    /**
     * Wifi Display settings. The button text for sending play (resume) trigger during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_resume=0x7f111559;
    /**
     * Wifi Display settings. The section title for wireless display session info. [CHAR LIMIT=40]
     */
    public static final int wifi_display_session_info=0x7f11155a;
    /**
     * Wifi Display settings. The title of the screen. [CHAR LIMIT=40]
     */
    public static final int wifi_display_settings_title=0x7f11155b;
    /**
     * Wifi Display settings. The status summary for connected devices. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_connected=0x7f11155c;
    /**
     * Wifi Display settings. The status summary for connecting devices. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_connecting=0x7f11155d;
    /**
     * Wifi Display settings. The status summary for devices that's already in use. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_in_use=0x7f11155e;
    /**
     * Wifi Display settings. The status summary for devices that's not available. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_not_available=0x7f11155f;
    /**
     * Wifi Display settings. The dropdown menu title for choosing WPS configuration during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_wps_config=0x7f111560;
    /**
     * Label for the DNS (first one)
     */
    public static final int wifi_dns1=0x7f111561;
    /**
     * Hint text for DNS
     */
    public static final int wifi_dns1_hint=0x7f111562;
    /**
     * Label for the DNS (second one)
     */
    public static final int wifi_dns2=0x7f111563;
    /**
     * Hint text for DNS
     */
    public static final int wifi_dns2_hint=0x7f111564;
    /**
     * Menu option for not providing an EAP user certificate
     */
    public static final int wifi_do_not_provide_eap_user_cert=0x7f111565;
    /**
     * Menu option for not validating the EAP server
     */
    public static final int wifi_do_not_validate_eap_server=0x7f111566;
    /**
     * Warning message displayed if user choses not to validate the EAP server
     */
    public static final int wifi_do_not_validate_eap_server_warning=0x7f111567;
    /**
     * Button label to add another device to Wi-Fi [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_add_another_device=0x7f111568;
    /**
     * Label for "Use a QR code to add a device to this network" [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_add_device=0x7f111569;
    /**
     * Title for the fragment to add a device into the wifi network [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_add_device_to_network=0x7f11156a;
    /**
     * Hint for the user to add the device to a Wi-Fi network [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_add_device_to_wifi=0x7f11156b;
    /**
     * Hint for the user to center another device's QR code in the below camera window [CHAR LIMIT=120]
     */
    public static final int wifi_dpp_center_qr_code=0x7f11156c;
    /**
     * Hint for Wi-Fi connection fail [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_check_connection_try_again=0x7f11156d;
    /**
     * Button label to choose different Wi-Fi network [CHAR LIMIT=80]
     */
    public static final int wifi_dpp_choose_different_network=0x7f11156e;
    /**
     * Title for the fragment choose network [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_choose_network=0x7f11156f;
    /**
     * Hint for the user to center another device's QR code in the below camera window [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_choose_network_to_connect_device=0x7f111570;
    /**
     * Hint for "Add device" [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_connect_network_using_qr_code=0x7f111571;
    /**
     * Hint for Wi-Fi DPP handshake running [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_connecting=0x7f111572;
    /**
     * Hint for QR code detection [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_could_not_add_device=0x7f111573;
    /**
     * Title for the fragment to show that device found but naming known [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_device_found=0x7f111574;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_authentication_or_configuration=0x7f111575;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_cannot_find_network=0x7f111576;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_enrollee_authentication=0x7f111577;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_enrollee_rejected_configuration=0x7f111578;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_generic=0x7f111579;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_not_compatible=0x7f11157a;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_not_supported=0x7f11157b;
    /**
     * Hint for Wi-Fi DPP handshake failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_failure_timeout=0x7f11157c;
    /**
     * Hint for Wi-Fi hotspot password [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_hotspot_password=0x7f11157d;
    /**
     * Title for Wi-Fi DPP lockscreen title [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_lockscreen_title=0x7f11157e;
    /**
     * Hint for QR code process failure [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_qr_code_is_not_valid_format=0x7f11157f;
    /**
     * Hint for the user to use another device to scan QR code on screen to join a open Wi-Fi [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_scan_open_network_qr_code_with_another_device=0x7f111580;
    /**
     * Title for the fragment to scan QR code [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_scan_qr_code=0x7f111581;
    /**
     * Hint for the user to center another device's QR code in the below camera window [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_scan_qr_code_join_network=0x7f111582;
    /**
     * Hint for the user to center another device's QR code in the below camera window [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_scan_qr_code_join_unknown_network=0x7f111583;
    /**
     * Hint for the user to use another device to scan QR code on screen to join Wi-Fi [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_scan_qr_code_with_another_device=0x7f111584;
    /**
     * Title for the fragment to show that the QR code is for sharing Wi-Fi hotspot network [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_share_hotspot=0x7f111585;
    /**
     * Title for the fragment to share Wi-Fi [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_share_wifi=0x7f111586;
    /**
     * Hint for Wi-Fi DPP handshake running [CHAR LIMIT=NONE]
     */
    public static final int wifi_dpp_sharing_wifi_with_this_device=0x7f111587;
    /**
     * Hint for Wi-Fi password [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_wifi_password=0x7f111588;
    /**
     * Title for the fragment to tell the user that Wi-Fi shared with device successfully [CHAR LIMIT=50]
     */
    public static final int wifi_dpp_wifi_shared_with_device=0x7f111589;
    /**
     * Label for the EAP anonymous identity of the network
     */
    public static final int wifi_eap_anonymous=0x7f11158a;
    /**
     * Label for the EAP CA certificate of the network
     */
    public static final int wifi_eap_ca_cert=0x7f11158b;
    /**
     * Label for the domain name that the EAP CA certificate(s) can be used to validate.
     */
    public static final int wifi_eap_domain=0x7f11158c;
    /**
     * Label for the EAP identity of the network
     */
    public static final int wifi_eap_identity=0x7f11158d;
    /**
     * Label for the EAP method of the network
     */
    public static final int wifi_eap_method=0x7f11158e;
    /**
     * Label for the OCSP type of the network. [CHAR LIMIT=32]
     */
    public static final int wifi_eap_ocsp=0x7f11158f;
    /**
     * Label for the EAP user certificate of the network
     */
    public static final int wifi_eap_user_cert=0x7f111590;
    /**
     * Wifi Settings. text displayed when user has restriction DISALLOW_CONFIG_WIFI [CHAR LIMIT=NONE]
     */
    public static final int wifi_empty_list_user_restricted=0x7f111591;
    /**
     * Wi-Fi settings. text displayed when Wi-Fi is off and network list is empty [CHAR LIMIT=50]
     */
    public static final int wifi_empty_list_wifi_off=0x7f111592;
    /**
     * Wi-Fi settings. text displayed when Wi-Fi is on and network list is empty [CHAR LIMIT=50]
     */
    public static final int wifi_empty_list_wifi_on=0x7f111593;
    /**
     * Setting Checkbox title whether to enable WiFi non-persistent mac randomization. [CHAR LIMIT=80]
     */
    public static final int wifi_enhanced_mac_randomization=0x7f111594;
    /**
     * Setting Checkbox title whether to enable WiFi enhanced mac randomization. [CHAR LIMIT=NONE]
     */
    public static final int wifi_enhanced_mac_randomization_summary=0x7f111595;
    /**
     * Summary text when Wi-Fi or bluetooth has error
     */
    public static final int wifi_error=0x7f111596;
    /**
     * Text shown in wifi settings indicating at what time the connection will expire on an internet access point that has a time limit for the session [CHAR LIMIT=40]
     */
    public static final int wifi_expiry_time=0x7f111597;
    /**
     * Toast message when Wi-Fi cannot scan for networks
     */
    public static final int wifi_fail_to_scan=0x7f111598;
    /**
     * Failured notification for connect
     */
    public static final int wifi_failed_connect_message=0x7f111599;
    /**
     * Failured notification for forget
     */
    public static final int wifi_failed_forget_message=0x7f11159a;
    /**
     * Failured notification for save
     */
    public static final int wifi_failed_save_message=0x7f11159b;
    /**
     * Button label to delete a Wi-Fi network
     */
    public static final int wifi_forget=0x7f11159c;
    /**
     * Dialog message for forget confirmation dialog
     */
    public static final int wifi_forget_dialog_message=0x7f11159d;
    /**
     * Dialog title for forget confirmation dialog
     */
    public static final int wifi_forget_dialog_title=0x7f11159e;
    /**
     * Label for the frequency band of the connection
     */
    public static final int wifi_frequency=0x7f11159f;
    /**
     * Label for the gateway of the network
     */
    public static final int wifi_gateway=0x7f1115a0;
    /**
     * Hint text for the gateway
     */
    public static final int wifi_gateway_hint=0x7f1115a1;
    /**
     * Label for the hidden network status of this network
     */
    public static final int wifi_hidden_network=0x7f1115a2;
    /**
     * Label for the warning shown to users if they try to connect to a network as "hidden"
     */
    public static final int wifi_hidden_network_warning=0x7f1115a3;
    /**
     * Label for Wifi hotspot AP Band.
     */
    public static final int wifi_hotspot_ap_band_title=0x7f1115a4;
    /**
     * Summary for the toggle to turn off hotspot automatically [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_auto_off_summary=0x7f1115a5;
    /**
     * Title for the toggle to turn off hotspot automatically [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_auto_off_title=0x7f1115a6;
    /**
     * Label for Wifi tether checkbox. Toggles Access Point on/off  [CHAR LIMIT=30]
     */
    public static final int wifi_hotspot_checkbox_text=0x7f1115a7;
    /**
     * Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=30]
     */
    public static final int wifi_hotspot_configure_ap_text=0x7f1115a8;
    /**
     * Summary Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=60]
     */
    public static final int wifi_hotspot_configure_ap_text_summary=0x7f1115a9;
    /**
     * Wifi settings button to connect in to a Hotspot. [CHAR LIMIT=50]
     */
    public static final int wifi_hotspot_connect=0x7f1115aa;
    /**
     * Wifi hotspot footer info [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_footer_info_local_only=0x7f1115ab;
    /**
     * Wifi hotspot footer info for regular hotspot [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_footer_info_regular=0x7f1115ac;
    /**
     * Title for the toggle to enable/disable the maximize compatibility [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_maximize_compatibility=0x7f1115ad;
    /**
     * Summary for the toggle to show the maximize compatibility warning message in dual AP device [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_maximize_compatibility_dual_ap_summary=0x7f1115ae;
    /**
     * Summary for the toggle to show the maximize compatibility warning message in single AP device [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_maximize_compatibility_single_ap_summary=0x7f1115af;
    /**
     * Dialog message to sign in to a Hotspot. [CHAR LIMIT=50]
     */
    public static final int wifi_hotspot_message=0x7f1115b0;
    /**
     * Summary for Wifi hotspot name when connected.
     */
    public static final int wifi_hotspot_name_summary_connected=0x7f1115b1;
    /**
     * Summary for Wifi hotspot name when connection is in progress.
     */
    public static final int wifi_hotspot_name_summary_connecting=0x7f1115b2;
    /**
     * Label for Wifi hotspot name.
     */
    public static final int wifi_hotspot_name_title=0x7f1115b3;
    /**
     * Summary text when no password is set [CHAR LIMIT=60]
     */
    public static final int wifi_hotspot_no_password_subtext=0x7f1115b4;
    /**
     * Summary text when turning hotspot off
     */
    public static final int wifi_hotspot_off_subtext=0x7f1115b5;
    /**
     * Summary text when hotspot is on for local-only
     */
    public static final int wifi_hotspot_on_local_only_subtext=0x7f1115b6;
    /**
     * Label for Wifi hotspot password.
     */
    public static final int wifi_hotspot_password_title=0x7f1115b7;
    /**
     * Label for Wifi hotspot switch off. Toggles hotspot off [CHAR LIMIT=30]
     */
    public static final int wifi_hotspot_switch_off_text=0x7f1115b8;
    /**
     * Label for Wifi hotspot switch on. Toggles hotspot on [CHAR LIMIT=30]
     */
    public static final int wifi_hotspot_switch_on_text=0x7f1115b9;
    /**
     * Summary text when tethering is on
     */
    public static final int wifi_hotspot_tethering_on_subtext=0x7f1115ba;
    /**
     * Dialog label to sign in to a Hotspot. [CHAR LIMIT=50]
     */
    public static final int wifi_hotspot_title=0x7f1115bb;
    /**
     * Toast message when Wi-Fi or bluetooth is disallowed in airplane mode
     */
    public static final int wifi_in_airplane_mode=0x7f1115bc;
    /**
     * Preference title for option to install certificates
     */
    public static final int wifi_install_credentials=0x7f1115bd;
    /**
     * Label for the IP address of the connection
     */
    public static final int wifi_ip_address=0x7f1115be;
    /**
     * Hint text for the IP address
     */
    public static final int wifi_ip_address_hint=0x7f1115bf;
    /**
     * Label for the spinner to show ip settings [CHAR LIMIT=25]
     */
    public static final int wifi_ip_settings=0x7f1115c0;
    /**
     * Error message if the dns is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_dns=0x7f1115c1;
    /**
     * Error message if the gateway is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_gateway=0x7f1115c2;
    /**
     * Error message if the IP address is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_ip_address=0x7f1115c3;
    /**
     * Error message if the network prefix length is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_network_prefix_length=0x7f1115c4;
    /**
     * Menu ietm to cancel the IP settings
     */
    public static final int wifi_ip_settings_menu_cancel=0x7f1115c5;
    /**
     * Menu item to save the IP settings
     */
    public static final int wifi_ip_settings_menu_save=0x7f1115c6;
    /**
     * Panel subtitle for Wi-Fi turned off. [CHAR LIMIT=60]
     */
    public static final int wifi_is_off=0x7f1115c7;
    /**
     * Checkbox summary for option to toggle suspend power optimizations [CHAR LIMIT=30]
     */
    public static final int wifi_limit_optimizations_summary=0x7f1115c8;
    /**
     * Summary for connected wifi network with partial internet connectivity [CHAR LIMIT=50]
     */
    public static final int wifi_limited_connection=0x7f1115c9;
    /**
     * Menu option to Wi-Fi advanced settings
     */
    public static final int wifi_menu_advanced=0x7f1115ca;
    /**
     * Menu option to Wi-Fi configure settings
     */
    public static final int wifi_menu_configure=0x7f1115cb;
    /**
     * Menu option to connect to a Wi-Fi network
     */
    public static final int wifi_menu_connect=0x7f1115cc;
    /**
     * Menu option to delete a Wi-Fi network
     */
    public static final int wifi_menu_forget=0x7f1115cd;
    /**
     * Menu option to modify a Wi-Fi network configuration
     */
    public static final int wifi_menu_modify=0x7f1115ce;
    /**
     * Content description for menu button in Wifi setup. Not shown on the screen. [CHAR LIMIT=NONE]
     */
    public static final int wifi_menu_more_options=0x7f1115cf;
    /**
     * Menu option to launch Wi-Fi Direct settings [CHAR LIMIT=20]
     */
    public static final int wifi_menu_p2p=0x7f1115d0;
    /**
     * Menu option to remember a temporary Wi-Fi network
     */
    public static final int wifi_menu_remember=0x7f1115d1;
    /**
     * Menu option to scan Wi-Fi networks
     */
    public static final int wifi_menu_scan=0x7f1115d2;
    /**
     * Label indicating network has been manually marked as metered
     */
    public static final int wifi_metered_label=0x7f1115d3;
    /**
     * Title for Network usage to control whether Wifi is metered or not [CHAR LIMIT=20]
     */
    public static final int wifi_metered_title=0x7f1115d4;
    /**
     * Button label to modify a Wi-Fi network
     */
    public static final int wifi_modify=0x7f1115d5;
    /**
     * Wi-Fi settings. content description for more button [CHAR LIMIT=50]
     */
    public static final int wifi_more=0x7f1115d6;
    /**
     * Hint for multiple certificates being added to the configuration
     */
    public static final int wifi_multiple_cert_added=0x7f1115d7;
    /**
     * Label for the network prefix of the network [CHAR LIMIT=25]
     */
    public static final int wifi_network_prefix_length=0x7f1115d8;
    /**
     * Hint text for network prefix length
     */
    public static final int wifi_network_prefix_length_hint=0x7f1115d9;
    /**
     * Warning message displayed if user does not specify a domain for the CA certificate.
     * Only displayed if the user also chooses to use system certificates.
     */
    public static final int wifi_no_domain_warning=0x7f1115da;
    /**
     * Summary for the remembered network but no internet connection was detected.
     */
    public static final int wifi_no_internet=0x7f1115db;
    /**
     * Summary for the network but no internet connection was detected.
     */
    public static final int wifi_no_internet_no_reconnect=0x7f1115dc;
    /**
     * A label when there is no SIM card information of a Wi-Fi network. [CHAR LIMIT=NONE]
     */
    public static final int wifi_no_related_sim_card=0x7f1115dd;
    /**
     * A label when there is no SIM card to choose. [CHAR LIMIT=NONE]
     */
    public static final int wifi_no_sim_card=0x7f1115de;
    /**
     * Warning message displayed if user does not specify a user certification for
     * WPA3-Enterprise 192-bit. Only displayed if the user does not specify user certificate
     * for WPA3-Enterprise 192-bit [CHAR LIMIT=80]
     */
    public static final int wifi_no_user_cert_warning=0x7f1115df;
    /**
     * Summary for the remembered network but currently not in range.
     */
    public static final int wifi_not_in_range=0x7f1115e0;
    /**
     * Not in range notification for connect [CHAR LIMIT=40]
     */
    public static final int wifi_not_in_range_message=0x7f1115e1;
    /**
     * Checkbox title for option to notify user when public networks are nearby
     */
    public static final int wifi_notify_open_networks=0x7f1115e2;
    /**
     * Checkbox summary for option to notify user when open networks are nearby
     */
    public static final int wifi_notify_open_networks_summary=0x7f1115e3;
    /**
     * Wifi on time
     */
    public static final int wifi_on_time=0x7f1115e4;
    /**
     * Message text for disconnection from one device
     */
    public static final int wifi_p2p_cancel_connect_message=0x7f1115e5;
    /**
     * Title for cancel connect dialog
     */
    public static final int wifi_p2p_cancel_connect_title=0x7f1115e6;
    /**
     * Message text for remembered group deletion
     */
    public static final int wifi_p2p_delete_group_message=0x7f1115e7;
    public static final int wifi_p2p_device_info=0x7f1115e8;
    /**
     * Message text for disconnection from one device
     */
    public static final int wifi_p2p_disconnect_message=0x7f1115e9;
    /**
     * Message text for disconnection from multiple devices
     */
    public static final int wifi_p2p_disconnect_multiple_message=0x7f1115ea;
    /**
     * Title for disconnect dialog
     */
    public static final int wifi_p2p_disconnect_title=0x7f1115eb;
    /**
     * Toast text for a failed connection initiation
     */
    public static final int wifi_p2p_failed_connect_message=0x7f1115ec;
    /**
     * Message text for failure to rename
     */
    public static final int wifi_p2p_failed_rename_message=0x7f1115ed;
    /**
     * Menu option to Rename
     */
    public static final int wifi_p2p_menu_rename=0x7f1115ee;
    /**
     * Menu option to discover peers
     */
    public static final int wifi_p2p_menu_search=0x7f1115ef;
    /**
     * Menu option when discovery is in progress [CHAR LIMIT=25]
     */
    public static final int wifi_p2p_menu_searching=0x7f1115f0;
    /**
     * Title for available p2p devices
     */
    public static final int wifi_p2p_peer_devices=0x7f1115f1;
    public static final int wifi_p2p_persist_network=0x7f1115f2;
    /**
     * Title for remembered p2p groups
     */
    public static final int wifi_p2p_remembered_groups=0x7f1115f3;
    /**
     * Used in the 1st-level settings screen to launch Wi-fi Direct settings [CHAR LIMIT=25]
     */
    public static final int wifi_p2p_settings_title=0x7f1115f4;
    /**
     * Passpoint summary for an expired passpoint [CHAR LIMIT=40]
     */
    public static final int wifi_passpoint_expired=0x7f1115f5;
    /**
     * Label for the password of the secured network
     */
    public static final int wifi_password=0x7f1115f6;
    /**
     * Checkbox title for option to toggle poor network detection
     */
    public static final int wifi_poor_network_detection=0x7f1115f7;
    /**
     * Checkbox summary for option to toggle poor network detection
     */
    public static final int wifi_poor_network_detection_summary=0x7f1115f8;
    /**
     * Label for the spinner to show Wifi MAC randomization [CHAR LIMIT=25]
     */
    public static final int wifi_privacy_settings=0x7f1115f9;
    /**
     * Summary for Wifi MAC randomization option when it is ephemeral network [CHAR LIMIT=50]
     */
    public static final int wifi_privacy_settings_ephemeral_summary=0x7f1115fa;
    /**
     * Used in the 1st-level settings screen as the turn-on summary
     */
    public static final int wifi_quick_toggle_summary=0x7f1115fb;
    /**
     * Used in the 1st-level settings screen to turn on Wi-Fi
     */
    public static final int wifi_quick_toggle_title=0x7f1115fc;
    /**
     * Summary for the remembered network.
     */
    public static final int wifi_remembered=0x7f1115fd;
    /**
     * A label wen a user needs a SIM to connect to the Wi-Fi network. [CHAR LIMIT=NONE]
     */
    public static final int wifi_require_sim_card_to_connect=0x7f1115fe;
    /**
     * A label wen a user needs a specific SIM to connect to the Wi-Fi network. [CHAR LIMIT=NONE]
     */
    public static final int wifi_require_specific_sim_card_to_connect=0x7f1115ff;
    /**
     * Summary text when wifi SoftAP started failed due to no legal usable channel allowed in this region by regulatory
     */
    public static final int wifi_sap_no_channel_error=0x7f111600;
    /**
     * Button label to save a Wi-Fi network configuration
     */
    public static final int wifi_save=0x7f111601;
    /**
     * Wifi saved access points.  Used as a label under the shortcut icon that goes to Wifi saved access points. [CHAR LIMIT=20]
     */
    public static final int wifi_saved_access_points_label=0x7f111602;
    /**
     * Tab title for showing saved other networks.
     */
    public static final int wifi_saved_other_networks_tab=0x7f111603;
    public static final int wifi_scan_always_confirm_allow=0x7f111604;
    public static final int wifi_scan_always_confirm_deny=0x7f111605;
    /**
     * Message to inform user, an unknown app want to enable network scanning.  [CHAR LIMIT=250]
     */
    public static final int wifi_scan_always_turn_on_message_unknown=0x7f111606;
    /**
     * Message informing the user how to turn off  [CHAR LIMIT=200]
     */
    public static final int wifi_scan_always_turnoff_message=0x7f111607;
    public static final int wifi_scan_always_turnon_message=0x7f111608;
    /**
     * Provider Model: Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off and Wi-Fi
     * scanning is on. To mark a link to bring the user to "scanning settings" screen. [CHAR LIMIT=NONE]
     */
    public static final int wifi_scan_notify_message=0x7f111609;
    /**
     * Wifi scan always mode checkbox text
     */
    public static final int wifi_scan_notify_remember_choice=0x7f11160a;
    /**
     * Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off and Wi-Fi
     * scanning is on. The place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They
     * mark a link to bring the user to "scanning settings" screen.
     */
    public static final int wifi_scan_notify_text=0x7f11160b;
    /**
     * Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off and Wi-Fi
     * scanning is also off. The place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated.
     * They mark a link to bring the user to "scanning settings" screen.
     */
    public static final int wifi_scan_notify_text_scanning_off=0x7f11160c;
    /**
     * Setting Checkbox title whether to disable WiFi Scan Throttling. [CHAR LIMIT=40]
     */
    public static final int wifi_scan_throttling=0x7f11160d;
    /**
     * Setting Checkbox summary whether to disable Wifi scan throttling [CHAR LIMIT=NONE]
     */
    public static final int wifi_scan_throttling_summary=0x7f11160e;
    /**
     * Label for the security of the connection
     */
    public static final int wifi_security=0x7f11160f;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP security
     */
    public static final int wifi_security_eap=0x7f111610;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP Suite-B-192 security
     */
    public static final int wifi_security_eap_suiteb=0x7f111611;
    /**
     * Do not translate.  Concise terminology for wifi with WPA 802.1x EAP security
     */
    public static final int wifi_security_eap_wpa=0x7f111612;
    /**
     * Do not translate.  Concise terminology for wifi with WPA2/WPA3 802.1x EAP security
     */
    public static final int wifi_security_eap_wpa2_wpa3=0x7f111613;
    /**
     * Do not translate.  Concise terminology for wifi with WPA3 802.1x EAP security
     */
    public static final int wifi_security_eap_wpa3=0x7f111614;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP security
     */
    public static final int wifi_security_eap_wpa_wpa2=0x7f111615;
    /**
     * Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. [CHAR LIMIT=40]
     */
    public static final int wifi_security_none=0x7f111616;
    /**
     * Do not translate.  Terminology for Wi-Fi with None/OWE transition mode security
     */
    public static final int wifi_security_none_owe=0x7f111617;
    /**
     * Do not translate.  Terminology for wifi with OWE security
     */
    public static final int wifi_security_owe=0x7f111618;
    /**
     * Do not translate.  Concise terminology for Passpoint network
     */
    public static final int wifi_security_passpoint=0x7f111619;
    /**
     * Do not translate.  Terminology for wifi with unknown PSK type
     */
    public static final int wifi_security_psk_generic=0x7f11161a;
    /**
     * Do not translate.  Terminology for wifi with WPA2/WPA3 Transition mode security
     */
    public static final int wifi_security_psk_sae=0x7f11161b;
    /**
     * Do not translate.  Terminology for wifi with WPA3 security
     */
    public static final int wifi_security_sae=0x7f11161c;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP security
     */
    public static final int wifi_security_short_eap=0x7f11161d;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP Suite-B-192 security
     */
    public static final int wifi_security_short_eap_suiteb=0x7f11161e;
    /**
     * Do not translate.  Concise terminology for wifi with WPA 802.1x EAP security
     */
    public static final int wifi_security_short_eap_wpa=0x7f11161f;
    /**
     * Do not translate.  Concise terminology for wifi with WPA2/WPA3 802.1x EAP security
     */
    public static final int wifi_security_short_eap_wpa2_wpa3=0x7f111620;
    /**
     * Do not translate.  Concise terminology for Wi-Fi with None/OWE transition mode security
     */
    public static final int wifi_security_short_none_owe=0x7f111621;
    /**
     * Do not translate.  Concise terminology for wifi with OWE security
     */
    public static final int wifi_security_short_owe=0x7f111622;
    /**
     * Do not translate.  Concise terminology for wifi with unknown PSK type
     */
    public static final int wifi_security_short_psk_generic=0x7f111623;
    /**
     * Do not translate.  Concise terminology for wifi with WPA2/WPA3 transition security
     */
    public static final int wifi_security_short_psk_sae=0x7f111624;
    /**
     * Do not translate.  Concise terminology for wifi with WPA3 security
     */
    public static final int wifi_security_short_sae=0x7f111625;
    /**
     * Do not translate.  Concise terminology for wifi with WEP security
     */
    public static final int wifi_security_short_wep=0x7f111626;
    /**
     * Do not translate.  Concise terminology for wifi with WPA security
     */
    public static final int wifi_security_short_wpa=0x7f111627;
    /**
     * Do not translate.  Concise terminology for wifi with WPA2 security
     */
    public static final int wifi_security_short_wpa2=0x7f111628;
    /**
     * Do not translate.  Concise terminology for wifi with both WPA/WPA2 security
     */
    public static final int wifi_security_short_wpa_wpa2=0x7f111629;
    /**
     * Do not translate.  Terminology for wifi with WEP security
     */
    public static final int wifi_security_wep=0x7f11162a;
    /**
     * Do not translate.  Terminology for wifi with WPA security
     */
    public static final int wifi_security_wpa=0x7f11162b;
    /**
     * Do not translate.  Terminology for wifi with WPA2 security
     */
    public static final int wifi_security_wpa2=0x7f11162c;
    /**
     * Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown
     */
    public static final int wifi_security_wpa_wpa2=0x7f11162d;
    /**
     * Used by Account creation for turning on Wi-Fi  [CHAR LIMIT=60]
     */
    public static final int wifi_select_network=0x7f11162e;
    /**
     * Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? [CHAR LIMIT=30]
     */
    public static final int wifi_setting_on_during_sleep_title=0x7f11162f;
    /**
     * Generic error message when the sleep policy could not be set.
     */
    public static final int wifi_setting_sleep_policy_error=0x7f111630;
    /**
     * Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off?
     */
    public static final int wifi_setting_sleep_policy_title=0x7f111631;
    /**
     * Used in the 1st-level settings screen to go to the 2nd-level settings screen  [CHAR LIMIT=20]
     */
    public static final int wifi_settings=0x7f111632;
    /**
     * Title of the Wi-fi settings screen
     */
    public static final int wifi_settings_category=0x7f111633;
    /**
     * Used in the Wi-Fi settings screen to control turning on/off Wi-Fi entirely [CHAR LIMIT=30]
     */
    public static final int wifi_settings_primary_switch_title=0x7f111634;
    /**
     * Wi-Fi settings dialog. Text to show in toast for when user turns on wifi scanning. [CHAR LIMIT=NONE]
     */
    public static final int wifi_settings_scanning_required_enabled=0x7f111635;
    /**
     * Wi-Fi settings dialog. Informational text describing what Wi-Fi scanning does. [CHAR LIMIT=NONE]
     */
    public static final int wifi_settings_scanning_required_info=0x7f111636;
    /**
     * Wi-Fi settings dialog. Summary text describing why we need Wi-Fi scanning on. [CHAR LIMIT=NONE]
     */
    public static final int wifi_settings_scanning_required_summary=0x7f111637;
    /**
     * Wi-Fi settings dialog. Title of dialog displayed asking user to enable Wi-Fi Scanning [CHAR LIMIT=60]
     */
    public static final int wifi_settings_scanning_required_title=0x7f111638;
    /**
     * Wi-Fi settings dialog. Text for the button that takes users to a help article about Wi-Fi scanning. [CHAR LIMIT = 20]
     */
    public static final int wifi_settings_scanning_required_turn_on=0x7f111639;
    /**
     * Summary text of the Wi-fi settings screen
     */
    public static final int wifi_settings_summary=0x7f11163a;
    /**
     * Title of the Wi-fi settings entry in the left top level menu
     */
    public static final int wifi_settings_title=0x7f11163b;
    /**
     * Button label to show detailed dialog for a selected Wi-Fi settings.
     * Used in SetupWizard for XLarge screen [CHAR LIMIT=20]
     */
    public static final int wifi_setup_detail=0x7f11163c;
    /**
     * Wi-Fi settings. wps menu title [CHAR LIMIT=25]
     */
    public static final int wifi_setup_wps=0x7f11163d;
    /**
     * Label for the check box to share a network with other users on the same device
     */
    public static final int wifi_shared=0x7f11163e;
    /**
     * Label to show/hide advanced options [CHAR LIMIT=40]
     */
    public static final int wifi_show_advanced=0x7f11163f;
    /**
     * Label for the check box to show password
     */
    public static final int wifi_show_password=0x7f111640;
    /**
     * Wifi Sign in text for button [CHAR LIMIT = 40]
     */
    public static final int wifi_sign_in_button_text=0x7f111641;
    /**
     * Label for the signal strength of the connection
     */
    public static final int wifi_signal=0x7f111642;
    /**
     * Label for the link speed of the connection. [CHAR LIMIT=32]
     */
    public static final int wifi_speed=0x7f111643;
    /**
     * Label for the SSID of the network
     */
    public static final int wifi_ssid=0x7f111644;
    /**
     * Hint for a text field to enter the SSID of a hidden wifi network. [CHAR LIMIT=35]
     */
    public static final int wifi_ssid_hint=0x7f111645;
    /**
     * Warning message displayed if network name (ssid) is too long
     */
    public static final int wifi_ssid_too_long=0x7f111646;
    /**
     * Summary text when turning Wi-Fi or bluetooth on
     */
    public static final int wifi_starting=0x7f111647;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_disabled=0x7f111648;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_disabling=0x7f111649;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_enabled=0x7f11164a;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_enabling=0x7f11164b;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int wifi_state_label=0x7f11164c;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_unknown=0x7f11164d;
    /**
     * Label for the status of the connection
     */
    public static final int wifi_status=0x7f11164e;
    /**
     * About phone, status value for MAC address when MAC randomization feature is enabled and the device is disconnected.
     */
    public static final int wifi_status_mac_randomized=0x7f11164f;
    /**
     * Wi-Fi status indicating that the current network is connected, but has no internet access.
     */
    public static final int wifi_status_no_internet=0x7f111650;
    /**
     * Wi-Fi status indicating that the current network is connected requires sign in to access the internet.
     */
    public static final int wifi_status_sign_in_required=0x7f111651;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item on Wifi information screen
     */
    public static final int wifi_status_test=0x7f111652;
    /**
     * Summary text when turning Wi-Fi or bluetooth off
     */
    public static final int wifi_stopping=0x7f111653;
    /**
     * Tab title for showing subscribed WiFi access points. [CHAR LIMIT=20]
     */
    public static final int wifi_subscribed_access_points_tab=0x7f111654;
    /**
     * Label for the subscription preference. [CHAR LIMIT=32]
     */
    public static final int wifi_subscription=0x7f111655;
    /**
     * Summary text for the subscription preference. [CHAR LIMIT=NONE]
     */
    public static final int wifi_subscription_summary=0x7f111656;
    /**
     * Checkbox title for option to toggle suspend power optimizations [CHAR LIMIT=30]
     */
    public static final int wifi_suspend_efficiency_title=0x7f111657;
    /**
     * Checkbox title for option to toggle suspend power optimizations
     */
    public static final int wifi_suspend_optimizations=0x7f111658;
    /**
     * Checkbox summary for option to toggle suspend power optimizations
     */
    public static final int wifi_suspend_optimizations_summary=0x7f111659;
    /**
     * Checkbox title. Should we switch to using cellular data if Wi-Fi is still connected but the Wi-Fi network we're connected to no longer has Internet access (e.g., due to an outage)?
     */
    public static final int wifi_switch_away_when_unvalidated=0x7f11165a;
    /**
     * Wifi Sign in CTA for wifi settings when captive portal auth is required [CHAR LIMIT = 50]
     */
    public static final int wifi_tap_to_sign_in=0x7f11165b;
    /**
     * Used to open the ssid and security dialog for Wifi Access Point
     */
    public static final int wifi_tether_configure_ap_text=0x7f11165c;
    /**
     * Default access point SSID used for tethering
     */
    public static final int wifi_tether_configure_ssid_default=0x7f11165d;
    /**
     * Subtext for wifi tether checkbox on success
     */
    public static final int wifi_tether_enabled_subtext=0x7f11165e;
    /**
     * Subtext for wifi tether checkbox on failure
     */
    public static final int wifi_tether_failed_subtext=0x7f11165f;
    /**
     * Summary text when turning hotspot on
     */
    public static final int wifi_tether_starting=0x7f111660;
    /**
     * Summary text when turning hotspot off
     */
    public static final int wifi_tether_stopping=0x7f111661;
    /**
     * Text shown in wifi settings indicating how much time is left on an internet access point that has a time limit for the session [CHAR LIMIT=40]
     */
    public static final int wifi_time_remaining=0x7f111662;
    /**
     * Turned on notification for Wi-Fi [CHAR LIMIT=40]
     */
    public static final int wifi_turned_on_message=0x7f111663;
    /**
     * Summary for the WiFi Type WIFI_STANDARD_11AC [CHAR LIMIT=50]
     */
    public static final int wifi_type_11AC=0x7f111664;
    /**
     * Summary for the WiFi Type WIFI_STANDARD_11AX [CHAR LIMIT=50]
     */
    public static final int wifi_type_11AX=0x7f111665;
    /**
     * Summary for the WiFi Type WIFI_STANDARD_11N  [CHAR LIMIT=50]
     */
    public static final int wifi_type_11N=0x7f111666;
    /**
     * Wifi details preference title to display wifi type info [CHAR LIMIT=50]
     */
    public static final int wifi_type_title=0x7f111667;
    /**
     * Hint for unchanged fields
     */
    public static final int wifi_unchanged=0x7f111668;
    /**
     * Label indicating network has been manually marked as unmetered
     */
    public static final int wifi_unmetered_label=0x7f111669;
    /**
     * Hint for unspecified fields
     */
    public static final int wifi_unspecified=0x7f11166a;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Button text on Wifi Status screen
     */
    public static final int wifi_update=0x7f11166b;
    /**
     * Menu option for using trusted system CA certificates to validate EAP servers
     */
    public static final int wifi_use_system_certs=0x7f11166c;
    /**
     * Text for button to go to Wifi venue information webpage when Wifi is a captive portal [CHAR LIMIT=40]
     */
    public static final int wifi_venue_website_button_text=0x7f11166d;
    /**
     * Setting Checkbox title whether to enable WiFi Verbose Logging. [CHAR LIMIT=40]
     */
    public static final int wifi_verbose_logging=0x7f11166e;
    /**
     * Setting Checkbox summary whether to enable Wifi verbose Logging [CHAR_LIMIT=NONE]
     */
    public static final int wifi_verbose_logging_summary=0x7f11166f;
    /**
     * Checkbox title for option to enable Wi-Fi when saved networks are nearby
     */
    public static final int wifi_wakeup=0x7f111670;
    /**
     * Checkbox summary for option to enable Wi-Fi when high quality saved networks are nearby
     */
    public static final int wifi_wakeup_summary=0x7f111671;
    /**
     * Checkbox summary for auto-wifi when user needs to enable location scanning to toggle it
     */
    public static final int wifi_wakeup_summary_no_location=0x7f111672;
    /**
     * Checkbox summary for Wi-Fi wakeup option to explain that Wi-Fi wakeup is disabled because Wi-Fi scanning is turned off
     */
    public static final int wifi_wakeup_summary_scanning_disabled=0x7f111673;
    /**
     * Checkbox summary for Wi-Fi wakeup option to explain that a network rating provider needs to be selected to use the feature.
     */
    public static final int wifi_wakeup_summary_scoring_disabled=0x7f111674;
    /**
     * Substring of status line when Wi-Fi Protected Setup (WPS) is available and
     * string is listed first [CHAR LIMIT=20]
     */
    public static final int wifi_wps_available_first_item=0x7f111675;
    /**
     * Substring of wifi status when Wi-Fi Protected Setup (WPS) is available and
     * string is listed after a wifi_secured_* string
     */
    public static final int wifi_wps_available_second_item=0x7f111676;
    /**
     * Strings for labeling Wi-Fi Auto-Connection is disabled. Wi-Fi Auto-Connection is a feature
     * for users to specify if a Wi-Fi network will be auto connected when it's reachable. [CHAR LIMIT=60]
     */
    public static final int wifitrackerlib_auto_connect_disable=0x7f111677;
    /**
     * Summary for a network suggested by an app. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_available_via_app=0x7f111678;
    /**
     * Package name for Certinstaller app
     */
    public static final int wifitrackerlib_certinstaller_package=0x7f111679;
    /**
     * Status message of Wi-Fi when it is connected by a app (via suggestion or network request). [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_connected_via_app=0x7f11167a;
    /**
     * Status message of Wi-Fi when it is automatically connected by a network recommendation provider. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_connected_via_network_scorer=0x7f11167b;
    /**
     * Status message of Wi-Fi when it is automatically connected by a default network recommendation provider. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_connected_via_network_scorer_default=0x7f11167c;
    /**
     * Help URL, IMSI protection [DO NOT TRANSLATE]
     */
    public static final int wifitrackerlib_help_url_imsi_protection=0x7f11167d;
    /**
     * IMSI protection warning for non-protection network [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_imsi_protection_warning=0x7f11167e;
    /**
     * [DO NOT TRANSLATE] Comma-separated list of packages whose saved networks should show no attribution annotation.
     */
    public static final int wifitrackerlib_no_attribution_annotation_packages=0x7f11167f;
    /**
     * Status message of OSU Provider after user completes provisioning flow [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_osu_completing_sign_up=0x7f111680;
    /**
     * Status message of OSU Provider when connection fails [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_osu_connect_failed=0x7f111681;
    /**
     * Status message of OSU Provider upon initiating provisioning flow [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_osu_opening_provider=0x7f111682;
    /**
     * Status message of OSU Provider on completing provisioning. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_osu_sign_up_complete=0x7f111683;
    /**
     * Status message of OSU Provider when sign up could not be completed [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_osu_sign_up_failed=0x7f111684;
    /**
     * Summary for connected network without internet due to private dns validation failed [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_private_dns_broken=0x7f111685;
    /**
     * Summary for saved networks [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_saved_network=0x7f111686;
    /**
     * Package name for Settings app
     */
    public static final int wifitrackerlib_settings_package=0x7f111687;
    /**
     * Speed label for fast network speed
     */
    public static final int wifitrackerlib_speed_label_fast=0x7f111688;
    /**
     * Speed label for medium network speed
     */
    public static final int wifitrackerlib_speed_label_medium=0x7f111689;
    /**
     * Speed label for okay network speed
     */
    public static final int wifitrackerlib_speed_label_okay=0x7f11168a;
    /**
     * Speed label for slow network speed
     */
    public static final int wifitrackerlib_speed_label_slow=0x7f11168b;
    /**
     * Speed label for very fast network speed
     */
    public static final int wifitrackerlib_speed_label_very_fast=0x7f11168c;
    /**
     * Speed label for very slow network speed
     */
    public static final int wifitrackerlib_speed_label_very_slow=0x7f11168d;
    /**
     * Summary text separator for short descriptions (eg. "Fast / Connected"). [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_summary_separator=0x7f11168e;
    /**
     * Status message of OSU Provider network when existing profile is expired. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_tap_to_renew_subscription_and_connect=0x7f11168f;
    /**
     * Status message of OSU Provider network when not connected. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_tap_to_sign_up=0x7f111690;
    /**
     * Summary for networks failing to connect due to one of the following reasons:
     * association rejection status 17 - AP full,
     * association rejection status 30 - AP rejected the device temporarily
     * disconnection reason code 5 - AP can't handle all existing stations [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_ap_unable_to_handle_new_sta=0x7f111691;
    /**
     * Message shown when the user likely entered an incorrect password for a wifi network [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_check_password_try_again=0x7f111692;
    /**
     * Summary for connected wifi network without internet [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_connected_cannot_provide_internet=0x7f111693;
    /**
     * Status for networks disabled for unknown reason [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_disabled_generic=0x7f111694;
    /**
     * Status for networked disabled from a DNS or DHCP failure [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_disabled_network_failure=0x7f111695;
    /**
     * Status for networks disabled from authentication failure (wrong password
     * or certificate). [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_disabled_password_failure=0x7f111696;
    /**
     * Summary for the disconnected network. [CHAR LIMIT=40]
     */
    public static final int wifitrackerlib_wifi_disconnected=0x7f111697;
    /**
     * Summary for connected wifi network with partial internet connectivity [CHAR LIMIT=50]
     */
    public static final int wifitrackerlib_wifi_limited_connection=0x7f111698;
    /**
     * Summary for networks failing to connect due to association rejection status 17 or 30, with
     * MBO association disallowed indication attribute with one of the following reason codes:
     * Air interface is overloaded,
     * Authentication server overloaded,
     * Reserved/Unspecified [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_mbo_assoc_disallowed_cannot_connect=0x7f111699;
    /**
     * Summary for networks failing to connect due to association rejection status 17 or 30, with
     * MBO association disallowed indication attribute reason code: maximum number of associated stations reached, [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_mbo_assoc_disallowed_max_num_sta_associated=0x7f11169a;
    /**
     * Summary for networks failing to connect due to association rejection status 17 or 30, with
     * MBO association disallowed indication attribute reason code: Insufficient RSSI,
     * or association rejection status 34, with OCE RSSI based association rejection information [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_mbo_oce_assoc_disallowed_insufficient_rssi=0x7f11169b;
    /**
     * Label indicating network has been manually marked as metered [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_metered_label=0x7f11169c;
    /**
     * Summary for networks failing to connect due to failed to find a network in supplicant scan result
     * which matches the network requested by framework for connection (including network capabilities) [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_network_not_found=0x7f11169d;
    /**
     * Summary for the remembered network but no internet connection was detected. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_no_internet=0x7f11169e;
    /**
     * Summary for the network but no internet connection was detected. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_no_internet_no_reconnect=0x7f11169f;
    /**
     * Passpoint summary for an expired passpoint [CHAR LIMIT=40]
     */
    public static final int wifitrackerlib_wifi_passpoint_expired=0x7f1116a0;
    /**
     * Summary for networks failing to connect due to association rejection status 34, poor channel conditions [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_poor_channel_conditions=0x7f1116a1;
    /**
     * Summary for the remembered network. [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_remembered=0x7f1116a2;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP Suite-B-192 security
     */
    public static final int wifitrackerlib_wifi_security_eap_suiteb=0x7f1116a3;
    /**
     * Do not translate.  Concise terminology for wifi with WPA3 802.1x EAP security
     */
    public static final int wifitrackerlib_wifi_security_eap_wpa3=0x7f1116a4;
    /**
     * Do not translate.  Concise terminology for wifi with WPA/WPA2 802.1x EAP security
     */
    public static final int wifitrackerlib_wifi_security_eap_wpa_wpa2=0x7f1116a5;
    /**
     * Do not translate.  Concise terminology for wifi with WPA/WPA2/WPA3 802.1x EAP security
     */
    public static final int wifitrackerlib_wifi_security_eap_wpa_wpa2_wpa3=0x7f1116a6;
    /**
     * Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. [CHAR LIMIT=40]
     */
    public static final int wifitrackerlib_wifi_security_none=0x7f1116a7;
    /**
     * Do not translate.  Terminology for wifi with OWE security
     */
    public static final int wifitrackerlib_wifi_security_owe=0x7f1116a8;
    /**
     * Do not translate.  Terminology for wifi with Passpoint security
     */
    public static final int wifitrackerlib_wifi_security_passpoint=0x7f1116a9;
    /**
     * Do not translate.  Terminology for wifi with WPA3 security
     */
    public static final int wifitrackerlib_wifi_security_sae=0x7f1116aa;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP Suite-B-192 security
     */
    public static final int wifitrackerlib_wifi_security_short_eap_suiteb=0x7f1116ab;
    /**
     * Do not translate.  Concise terminology for wifi with WPA3 802.1x EAP security
     */
    public static final int wifitrackerlib_wifi_security_short_eap_wpa3=0x7f1116ac;
    /**
     * Do not translate.  Concise terminology for wifi with WPA/WPA2 802.1x EAP security
     */
    public static final int wifitrackerlib_wifi_security_short_eap_wpa_wpa2=0x7f1116ad;
    /**
     * Do not translate.  Concise terminology for wifi with WPA/WPA2/WPA3 802.1x EAP security
     */
    public static final int wifitrackerlib_wifi_security_short_eap_wpa_wpa2_wpa3=0x7f1116ae;
    /**
     * Do not translate.  Concise terminology for wifi with OWE security
     */
    public static final int wifitrackerlib_wifi_security_short_owe=0x7f1116af;
    /**
     * Do not translate.  Concise terminology for wifi with WPA3 security
     */
    public static final int wifitrackerlib_wifi_security_short_sae=0x7f1116b0;
    /**
     * Do not translate.  Concise terminology for wifi with both WPA/WPA2 security
     */
    public static final int wifitrackerlib_wifi_security_short_wpa_wpa2=0x7f1116b1;
    /**
     * Do not translate.  Concise terminology for wifi with both WPA/WPA2/WPA3 security
     */
    public static final int wifitrackerlib_wifi_security_short_wpa_wpa2_wpa3=0x7f1116b2;
    /**
     * Do not translate.  Terminology for wifi with WEP security
     */
    public static final int wifitrackerlib_wifi_security_wep=0x7f1116b3;
    /**
     * Do not translate.  Terminology for wifi with both WPA/WPA2 security
     */
    public static final int wifitrackerlib_wifi_security_wpa_wpa2=0x7f1116b4;
    /**
     * Do not translate.  Terminology for wifi with both WPA/WPA2/WPA3 security
     */
    public static final int wifitrackerlib_wifi_security_wpa_wpa2_wpa3=0x7f1116b5;
    /**
     * Label indicating network has been manually marked as unmetered [CHAR LIMIT=NONE]
     */
    public static final int wifitrackerlib_wifi_unmetered_label=0x7f1116b6;
    /**
     * Toast message for when the user selects cellular as the internet provider and Wi-Fi auto-connect is temporarily disabled
     */
    public static final int wifitrackerlib_wifi_wont_autoconnect_for_now=0x7f1116b7;
    /**
     * UI debug setting: scaling factor for window animations [CHAR LIMIT=25]
     */
    public static final int window_animation_scale_title=0x7f1116b8;
    /**
     * UI debug setting: enable or disable window blurs [CHAR LIMIT=50]
     */
    public static final int window_blurs=0x7f1116b9;
    /**
     * [CHAR LIMIT=25] Title of developer tile to toggle winscope trace
     */
    public static final int winscope_trace_quick_settings_title=0x7f1116ba;
    /**
     * Title for wireless debugging main switch. [CHAR LIMIT=50]
     */
    public static final int wireless_debugging_main_switch_title=0x7f1116bb;
    /**
     * Wireless Settings screen title for things like Wi-Fi, bluetooth, airplane mode.
     */
    public static final int wireless_networks_settings_title=0x7f1116bc;
    /**
     * Wizard back button label [CHAR LIMIT=25]
     */
    public static final int wizard_back=0x7f1116bd;
    /**
     * Wizard finish button label [CHAR LIMIT=25]
     */
    public static final int wizard_finish=0x7f1116be;
    /**
     * Wizard next button label [CHAR LIMIT=25]
     */
    public static final int wizard_next=0x7f1116bf;
    /**
     * Work Sound: Title for the option defining the default work alarm ringtone. [CHAR LIMIT=60]
     */
    public static final int work_alarm_ringtone_title=0x7f1116c0;
    /**
     * This string is the title of a setting. If a user taps the setting, they can turn their work profile on or off. The work profile is a section of their phone that's managed by their employer. "Work" is an adjective.
     */
    public static final int work_mode_label=0x7f1116c1;
    /**
     * This string is located under a setting and describes what the setting does. It's letting a user know whether their work profile is on or off, and they can use the setting to turn it on or off. The work profile is a section of their phone that's managed by their employer. "Work" is an adjective.
     */
    public static final int work_mode_off_summary=0x7f1116c2;
    /**
     * This string is located under a setting and describes what the setting does. It's letting a user know whether their work profile is on or off, and they can use the setting to turn it on or off. The work profile is a section of their phone that's managed by their employer. "Work" is an adjective.
     */
    public static final int work_mode_on_summary=0x7f1116c3;
    /**
     * Work Sounds: Title for the option defining the default work notification ringtone. [CHAR LIMIT=60]
     */
    public static final int work_notification_ringtone_title=0x7f1116c4;
    /**
     * Title of setting on privacy settings screen that will show work policy info. [CHAR LIMIT=NONE]
     */
    public static final int work_policy_privacy_settings=0x7f1116c5;
    /**
     * Summary for Enterprise Privacy settings, explaining what the user can expect to find under it [CHAR LIMIT=NONE]
     */
    public static final int work_policy_privacy_settings_summary=0x7f1116c6;
    /**
     * Subtext of work profile app for current setting [CHAR LIMIT=NONE]
     */
    public static final int work_profile_app_subtext=0x7f1116c7;
    /**
     * Work profile removal confirmation message [CHAR LIMIT=none]
     */
    public static final int work_profile_confirm_remove_message=0x7f1116c8;
    /**
     * Work profile removal confirmation title [CHAR LIMIT=25]
     */
    public static final int work_profile_confirm_remove_title=0x7f1116c9;
    /**
     * Notification Access section: Indicates that the work profile admin doesn't allow this
     * notification listener to access work profile notifications [CHAR LIMIT=100]
     */
    public static final int work_profile_notification_access_blocked_summary=0x7f1116ca;
    /**
     * Warning message about disabling usage access on profile owner [CHAR LIMIT=NONE]
     */
    public static final int work_profile_usage_access_warning=0x7f1116cb;
    /**
     * Work Sounds: Title for the option defining the work phone ringtone. [CHAR LIMIT=60]
     */
    public static final int work_ringtone_title=0x7f1116cc;
    /**
     * Work SIM title.  [CHAR LIMIT=50]
     */
    public static final int work_sim_title=0x7f1116cd;
    /**
     * Work Sound: Summary for sounds when sync with personal sounds is active [CHAR LIMIT=60]
     */
    public static final int work_sound_same_as_personal=0x7f1116ce;
    /**
     * Work Sound: Message for dialog shown when using the same sounds for work events as for personal events (notifications / ringtones / alarms). [CHAR LIMIT=none]
     */
    public static final int work_sync_dialog_message=0x7f1116cf;
    /**
     * Work Sound: Title for dialog shown when enabling sync with personal sounds. [CHAR LIMIT=60]
     */
    public static final int work_sync_dialog_title=0x7f1116d0;
    /**
     * Work Sound: Confirm action text for dialog shown when overriding work notification sounds with personal sounds. [CHAR LIMIT=30]
     */
    public static final int work_sync_dialog_yes=0x7f1116d1;
    /**
     * Work Sound: Summary for the switch that enables syncing of personal ringtones to work profile. [CHAR LIMIT=160]
     */
    public static final int work_use_personal_sounds_summary=0x7f1116d2;
    /**
     * Work Sounds: Title for the switch that enables syncing of personal ringtones to work profile. [CHAR LIMIT=60]
     */
    public static final int work_use_personal_sounds_title=0x7f1116d3;
    /**
     * Settings title in main settings screen for WRITE_SETTINGS [CHAR LIMIT=30]
     */
    public static final int write_settings=0x7f1116d4;
    /**
     * Description of the write system settings [CHAR LIMIT=NONE]
     */
    public static final int write_settings_description=0x7f1116d5;
    /**
     * Summary of app not allowed to write system settings [CHAR LIMIT=45]
     */
    public static final int write_settings_off=0x7f1116d6;
    /**
     * Summary of app allowed to write system settings [CHAR LIMIT=45]
     */
    public static final int write_settings_on=0x7f1116d7;
    /**
     * Summary of number of apps currently can write system settings [CHAR LIMIT=60]
     */
    public static final int write_settings_summary=0x7f1116d8;
    /**
     * Title for the apps that are allowed to write system settings [CHAR LIMIT=60]
     */
    public static final int write_settings_title=0x7f1116d9;
    /**
     * Main settings screen item's title to go into the write system settings screen [CHAR LIMIT=30]
     */
    public static final int write_system_settings=0x7f1116da;
    /**
     * This is instruction text to inform the user that they have entered the wrong SIM PIN while trying to unlock the keyguard.
     * The variable will be replaced with a number. [CHAR LIMIT=NONE]
     */
    public static final int wrong_pin_code_one=0x7f1116db;
    /**
     * Instructions telling the user that they entered the wrong SIM PIN for the last time.
     * Displayed in a dialog box.  [CHAR LIMIT=100]
     */
    public static final int wrong_pin_code_pukked=0x7f1116dc;
    /**
     * Strings for Dialog yes button
     */
    public static final int yes=0x7f1116dd;
    /**
     * Button title that grants 'Do Not Disturb' permission to an app [CHAR_LIMIT=60]
     */
    public static final int zen_access_detail_switch=0x7f1116de;
    public static final int zen_access_disabled_package_warning=0x7f1116df;
    /**
     * Sound & notification > Do Not Disturb access > Text to display when the list is empty. [CHAR LIMIT=NONE]
     */
    public static final int zen_access_empty_text=0x7f1116e0;
    /**
     * Zen mode access settings - summary for warning dialog when revoking access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_revoke_warning_dialog_summary=0x7f1116e1;
    /**
     * Zen mode access settings - title for warning dialog when revoking access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_revoke_warning_dialog_title=0x7f1116e2;
    /**
     * Zen mode access settings - summary for warning dialog when enabling access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_warning_dialog_summary=0x7f1116e3;
    /**
     * Zen mode access settings - title for warning dialog when enabling access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_warning_dialog_title=0x7f1116e4;
    /**
     * Warning text when an alarm might be silenced by Do Not Disturb due to a time-based condition [CHAR LIMIT=NONE]
     */
    public static final int zen_alarm_warning=0x7f1116e5;
    /**
     * Warning text when an alarm might be silenced by Do Not Disturb [CHAR LIMIT=NONE]
     */
    public static final int zen_alarm_warning_indef=0x7f1116e6;
    /**
     * Do not disturb settings, calls summary [CHAR LIMIT=100]
     */
    public static final int zen_calls_summary_contacts_repeat=0x7f1116e7;
    /**
     * Do not disturb settings, calls summary [CHAR LIMIT=100]
     */
    public static final int zen_calls_summary_repeat_only=0x7f1116e8;
    /**
     * Do not disturb settings, calls summary [CHAR LIMIT=100]
     */
    public static final int zen_calls_summary_starred_repeat=0x7f1116e9;
    /**
     * Do not disturb settings, main screen, field, dnd breakthrough  [CHAR LIMIT=100]
     */
    public static final int zen_category_apps=0x7f1116ea;
    /**
     * Do not disturb settings, main screen, category header [CHAR LIMIT=120]
     */
    public static final int zen_category_behavior=0x7f1116eb;
    /**
     * Do not disturb settings, main screen, field, duration setting where user can specify how
     * long dnd will last when toggling dnd on from qs) [CHAR LIMIT=100]
     */
    public static final int zen_category_duration=0x7f1116ec;
    /**
     * Do not disturb settings, main screen, field, dnd breakthrough  [CHAR LIMIT=100]
     */
    public static final int zen_category_exceptions=0x7f1116ed;
    /**
     * Do not disturb settings, main screen, field, dnd breakthrough [CHAR LIMIT=100]
     */
    public static final int zen_category_people=0x7f1116ee;
    /**
     * Do not disturb settings, main screen, field, schedules [CHAR LIMIT=100]
     */
    public static final int zen_category_schedule=0x7f1116ef;
    /**
     * Do not disturb custom settings dialog button label [CHAR LIMIT=40]
     */
    public static final int zen_custom_settings_dialog_ok=0x7f1116f0;
    /**
     * Do not disturb custom settings dialog button label [CHAR LIMIT=40]
     */
    public static final int zen_custom_settings_dialog_review_schedule=0x7f1116f1;
    /**
     * Do not disturb custom settings dialog title [CHAR LIMIT=40]
     */
    public static final int zen_custom_settings_dialog_title=0x7f1116f2;
    /**
     * Do not disturb custom settings duration header [CHAR LIMIT=40]
     */
    public static final int zen_custom_settings_duration_header=0x7f1116f3;
    /**
     * Do not disturb custom settings notifications header [CHAR LIMIT=40]
     */
    public static final int zen_custom_settings_notifications_header=0x7f1116f4;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Event rule toast hint when enabled
     */
    public static final int zen_event_rule_enabled_toast=0x7f1116f5;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event rule type name
     */
    public static final int zen_event_rule_type_name=0x7f1116f6;
    /**
     * [CHAR LIMIT=40] Zen Interruption level: Priority.
     */
    public static final int zen_interruption_level_priority=0x7f1116f7;
    /**
     * Do not disturb: Button to add new automatic rule to DND. [CHAR LIMIT=30]
     */
    public static final int zen_mode_add=0x7f1116f8;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Add event-based rule, set rule name title
     */
    public static final int zen_mode_add_event_rule=0x7f1116f9;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Add another automatic zen rule option name
     */
    public static final int zen_mode_add_rule=0x7f1116fa;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Add time-based rule, set rule name title
     */
    public static final int zen_mode_add_time_rule=0x7f1116fb;
    /**
     * [CHAR LIMIT=80] Zen mode settings: Allow alarms option
     */
    public static final int zen_mode_alarms=0x7f1116fc;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Alarms list option (ie: sound from alarm clock)
     */
    public static final int zen_mode_alarms_list=0x7f1116fd;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Alarms (ie: sound from alarm clock) category in a list of sounds that can bypass DND when alarms is the first or only element in the list. For example "Alarms can interrupt" or "Alarms and media can interrupt"
     */
    public static final int zen_mode_alarms_list_first=0x7f1116fe;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Allow alarms summary
     */
    public static final int zen_mode_alarms_summary=0x7f1116ff;
    /**
     * [CHAR LIMIT=50] Zen mode settings: All callers summary
     */
    public static final int zen_mode_all_callers=0x7f111700;
    /**
     * Zen mode settings: All calls can bypass DND summary [CHAR LIMIT=NONE
     */
    public static final int zen_mode_all_calls_summary=0x7f111701;
    /**
     * Zen mode settings: All messages can bypass DND summary [CHAR LIMIT=NONE
     */
    public static final int zen_mode_all_messages_summary=0x7f111702;
    /**
     * [CHAR LIMIT=20] Accessibility string for current zen mode and selected exit condition. A template that simply concatenates existing mode string and the current condition description.
     */
    public static final int zen_mode_and_condition=0x7f111703;
    /**
     * [CHAR LIMIT=NONE] Zen mode behavior settings footer: footer describing why the user cannot change the current do not disturb behavior settings
     */
    public static final int zen_mode_app_set_behavior=0x7f111704;
    /**
     * Do not disturb: Title for a specific zen mode automatic rule in settings. [CHAR LIMIT=30]
     */
    public static final int zen_mode_automatic_rule_settings_page_title=0x7f111705;
    /**
     * Do not disturb: Title for the zen mode automatic rules page in settings. [CHAR LIMIT=30]
     */
    public static final int zen_mode_automation_settings_page_title=0x7f111706;
    /**
     * Do not disturb: Title for the zen mode automation option in Settings. [CHAR LIMIT=40]
     */
    public static final int zen_mode_automation_settings_title=0x7f111707;
    /**
     * Do not disturb: Summary for the zen mode automation option Suggestion. [CHAR LIMIT=55]
     */
    public static final int zen_mode_automation_suggestion_summary=0x7f111708;
    /**
     * Do not disturb: Title for the zen mode automation option Suggestion. [CHAR LIMIT=46]
     */
    public static final int zen_mode_automation_suggestion_title=0x7f111709;
    /**
     * Do not disturb: Specifies alarms and media can bypass DND.  [CHAR LIMIT=100]
     */
    public static final int zen_mode_behavior_alarms_only=0x7f11170a;
    /**
     * [CHAR LIMIT=50] Zen mode settings dnd beahvior description: when a user has chosen custom sounds to bypass DND
     */
    public static final int zen_mode_behavior_summary_custom=0x7f11170b;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_ambient=0x7f11170c;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_badge=0x7f11170d;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_intent=0x7f11170e;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_light=0x7f11170f;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_list=0x7f111710;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_peek=0x7f111711;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_sound=0x7f111712;
    /**
     * Do not disturb: what to block option [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_block_effect_status=0x7f111713;
    /**
     * Do not disturb: what to block summary, all effects
     */
    public static final int zen_mode_block_effect_summary_all=0x7f111714;
    /**
     * Do not disturb: what to block summary, none
     */
    public static final int zen_mode_block_effect_summary_none=0x7f111715;
    /**
     * Do not disturb: what to block summary, screen off
     */
    public static final int zen_mode_block_effect_summary_screen_off=0x7f111716;
    /**
     * Do not disturb: what to block summary, screen on
     */
    public static final int zen_mode_block_effect_summary_screen_on=0x7f111717;
    /**
     * Do not disturb: what to block summary, sound vibration and some visual signals
     */
    public static final int zen_mode_block_effect_summary_some=0x7f111718;
    /**
     * Do not disturb: what to block summary, only sound and vibration
     */
    public static final int zen_mode_block_effect_summary_sound=0x7f111719;
    /**
     * Do not disturb: what to block > effects title [CHAR LIMIT = 60]
     */
    public static final int zen_mode_block_effects_screen_off=0x7f11171a;
    /**
     * Do not disturb: what to block > effects title [CHAR LIMIT = 60]
     */
    public static final int zen_mode_block_effects_screen_on=0x7f11171b;
    public static final int zen_mode_blocked_effects_footer=0x7f11171c;
    /**
     * Do not disturb: Label for button that will turn off zen mode. [CHAR LIMIT=30]
     */
    public static final int zen_mode_button_turn_off=0x7f11171d;
    /**
     * Do not disturb: Label for button that will turn on zen mode. [CHAR LIMIT=30]
     */
    public static final int zen_mode_button_turn_on=0x7f11171e;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Allow notifications from an app to bypass DND header
     */
    public static final int zen_mode_bypassing_app_channels_header=0x7f11171f;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Allow all notifications from an app to bypass DND
     * toggle title
     */
    public static final int zen_mode_bypassing_app_channels_toggle_all=0x7f111720;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Allow apps to bypass DND
     */
    public static final int zen_mode_bypassing_apps=0x7f111721;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Preference to add apps that are allowed to bypass DND
     */
    public static final int zen_mode_bypassing_apps_add=0x7f111722;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Add apps to bypass DND header
     */
    public static final int zen_mode_bypassing_apps_add_header=0x7f111723;
    /**
     * [CHAR LIMIT=100] Zen mode settings: App that can bypass DND's secondary text describing which notification channels from the app can bypass DND
     */
    public static final int zen_mode_bypassing_apps_all_summary=0x7f111724;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Footer for DND bypassing apps settings
     */
    public static final int zen_mode_bypassing_apps_footer=0x7f111725;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Allow apps to bypass DND header
     */
    public static final int zen_mode_bypassing_apps_header=0x7f111726;
    /**
     * [CHAR LIMIT=120] Zen mode settings: No apps are bypassing DND
     */
    public static final int zen_mode_bypassing_apps_none=0x7f111727;
    /**
     * [CHAR LIMIT=100] Zen mode settings: App that can bypass DND's secondary text describing which notification channels from the app can bypass DND
     */
    public static final int zen_mode_bypassing_apps_some_summary=0x7f111728;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Lists apps that can bypass DND. For example, "Nest, Messages, and 2 more can interrupt".
     */
    public static final int zen_mode_bypassing_apps_subtext=0x7f111729;
    /**
     * [CHAR LIMIT=120] Zen mode settings: No apps are bypassing DND
     */
    public static final int zen_mode_bypassing_apps_subtext_none=0x7f11172a;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summary indicating all notification channels can
     * bypass DND for this app
     */
    public static final int zen_mode_bypassing_apps_summary_all=0x7f11172b;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summary indicating all notification channels can
     * bypass DND for this app
     */
    public static final int zen_mode_bypassing_apps_summary_some=0x7f11172c;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Allow apps to bypass DND title
     */
    public static final int zen_mode_bypassing_apps_title=0x7f11172d;
    /**
     * [CHAR LIMIT=20] Zen mode settings: Calls option
     */
    public static final int zen_mode_calls=0x7f11172e;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Calls screen footer
     */
    public static final int zen_mode_calls_footer=0x7f11172f;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Calls settings header
     */
    public static final int zen_mode_calls_header=0x7f111730;
    /**
     * [CHAR LIMIT=20] Zen mode settings: Calls option
     */
    public static final int zen_mode_calls_list=0x7f111731;
    /**
     * [CHAR LIMIT=50] Zen mode settings: calls summary
     */
    public static final int zen_mode_calls_summary_one=0x7f111732;
    /**
     * [CHAR LIMIT=50] Zen mode settings: calls summary
     */
    public static final int zen_mode_calls_summary_two=0x7f111733;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Allow calls toggle title
     */
    public static final int zen_mode_calls_title=0x7f111734;
    /**
     * [CHAR LIMIT=60] Zen mode settings: Choose rule type dialog title
     */
    public static final int zen_mode_choose_rule_type=0x7f111735;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Selected callers summary
     */
    public static final int zen_mode_contacts_callers=0x7f111736;
    /**
     * Zen mode settings: Senders in contacts can bypass DND summary summary [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_contacts_count=0x7f111737;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Number of conversations allowed to bypass DND
     */
    public static final int zen_mode_conversations_count=0x7f111738;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Header for conversations settings page
     */
    public static final int zen_mode_conversations_section_title=0x7f111739;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Title for conversations settings page
     */
    public static final int zen_mode_conversations_title=0x7f11173a;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Category text indicating the schedule this custom behavior will be configured for
     */
    public static final int zen_mode_custom_behavior_category_title=0x7f11173b;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summay text indicating the currenty dnd schedule is using custom behavior
     */
    public static final int zen_mode_custom_behavior_summary=0x7f11173c;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summay text indicating the currenty dnd schedule is using the default dnd settings
     */
    public static final int zen_mode_custom_behavior_summary_default=0x7f11173d;
    /**
     * [CHAR LIMIT=80] Zen mode settings: Title for preference to allow custom behavior for the dnd schedule
     */
    public static final int zen_mode_custom_behavior_title=0x7f11173e;
    /**
     * [CHAR LIMIT=NONE] Zen mode custom rule settings: Calls screen footer
     */
    public static final int zen_mode_custom_calls_footer=0x7f11173f;
    /**
     * [CHAR LIMIT=NONE] Zen mode custom rule settings: Messages screen footer
     */
    public static final int zen_mode_custom_messages_footer=0x7f111740;
    /**
     * Do not disturb: Title for dialog that allows users to delete DND rules/schedules[CHAR LIMIT=40]
     */
    public static final int zen_mode_delete_automatic_rules=0x7f111741;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Delete rule menu option name
     */
    public static final int zen_mode_delete_rule=0x7f111742;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Delete rule dialog button caption
     */
    public static final int zen_mode_delete_rule_button=0x7f111743;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Delete rule dialog confirmation message
     */
    public static final int zen_mode_delete_rule_confirmation=0x7f111744;
    /**
     * Do not disturb: Duration option to always prompt for the duration of dnd
     */
    public static final int zen_mode_duration_always_prompt_title=0x7f111745;
    /**
     * Do not disturb: Title for the dnd duration setting (user can specify how long dnd will last when toggling dnd on from qs or settings) [CHAR LIMIT=30]
     */
    public static final int zen_mode_duration_settings_title=0x7f111746;
    /**
     * Do not disturb: Summary for zen mode duration setting indicating user will be prompted to set dnd duration whenever dnd is manually toggled on [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_duration_summary_always_prompt=0x7f111747;
    /**
     * Do not disturb: Summary for zen mode duration setting indicating how long dnd will last when dnd is manually toggled on [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_duration_summary_forever=0x7f111748;
    /**
     * Do not disturb: Summary for zen mode duration setting indicating how long dnd will last when dnd is manually toggled on [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_duration_summary_time_hours=0x7f111749;
    /**
     * Do not disturb: Summary for zen mode duration setting indicating how long dnd will last when toggled on
     */
    public static final int zen_mode_duration_summary_time_minutes=0x7f11174a;
    /**
     * Do not disturb: Label for button in enable zen dialog that will turn on zen mode. [CHAR LIMIT=30]
     */
    public static final int zen_mode_enable_dialog_turn_on=0x7f11174b;
    /**
     * [CHAR LIMIT=20] Zen mode settings: End time option
     */
    public static final int zen_mode_end_time=0x7f11174c;
    /**
     * [CHAR LIMIT=60] Zen mode settings: End time option: Summary text value format when end time = next day
     */
    public static final int zen_mode_end_time_next_day_summary_format=0x7f11174d;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option title
     */
    public static final int zen_mode_event_rule_calendar=0x7f11174e;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option value for any calendar
     */
    public static final int zen_mode_event_rule_calendar_any=0x7f11174f;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option title
     */
    public static final int zen_mode_event_rule_reply=0x7f111750;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes, Maybe, or Not replied
     */
    public static final int zen_mode_event_rule_reply_any_except_no=0x7f111751;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes
     */
    public static final int zen_mode_event_rule_reply_yes=0x7f111752;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes or Maybe
     */
    public static final int zen_mode_event_rule_reply_yes_or_maybe=0x7f111753;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: any calendar
     */
    public static final int zen_mode_event_rule_summary_any_calendar=0x7f111754;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: During events for
     */
    public static final int zen_mode_event_rule_summary_calendar_template=0x7f111755;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: Where reply is
     */
    public static final int zen_mode_event_rule_summary_reply_template=0x7f111756;
    /**
     * [CHAR LIMIT=80] Zen mode settings: Allow event notifications/sounds to bypass DND
     */
    public static final int zen_mode_events=0x7f111757;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Events (ie: calendar events)
     */
    public static final int zen_mode_events_list=0x7f111758;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Events (ie: calendar events) category in a list of sounds when events is the first or only element in the list. For example “Events can interrupt" or “Events and touch sounds can interrupt"
     */
    public static final int zen_mode_events_list_first=0x7f111759;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Allow event notifications/sounds to bypass DND summary
     */
    public static final int zen_mode_events_summary=0x7f11175a;
    /**
     * Do not disturb: Duration option to always have DND on until it is manually turned off [CHAR LIMIT=60]
     */
    public static final int zen_mode_forever=0x7f11175b;
    public static final int zen_mode_from_all_conversations=0x7f11175c;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From anyone
     */
    public static final int zen_mode_from_anyone=0x7f11175d;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From contacts only
     */
    public static final int zen_mode_from_contacts=0x7f11175e;
    public static final int zen_mode_from_important_conversations=0x7f11175f;
    public static final int zen_mode_from_no_conversations=0x7f111760;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From starred contacts only
     */
    public static final int zen_mode_from_starred=0x7f111761;
    /**
     * [CHAR LIMIT=80] Zen mode settings: Allow media (sound from video) to bypass dnd
     */
    public static final int zen_mode_media=0x7f111762;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Media (ie: sound from video)
     */
    public static final int zen_mode_media_list=0x7f111763;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Media (ie: sound from video) category in a list of sounds when media is the first or only element in the list. For example "Media can interrupt" or "Media and touch sounds can interrupt"
     */
    public static final int zen_mode_media_list_first=0x7f111764;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Allow media (sound from video) to bypass dnd  summary
     */
    public static final int zen_mode_media_summary=0x7f111765;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Messages option
     */
    public static final int zen_mode_messages=0x7f111766;
    /**
     * Do not disturb settings, messages, events and reminders footer [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_messages_footer=0x7f111767;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Messages settings header
     */
    public static final int zen_mode_messages_header=0x7f111768;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Messages option
     */
    public static final int zen_mode_messages_list=0x7f111769;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Allow messages to bypass DND title
     */
    public static final int zen_mode_messages_title=0x7f11176a;
    /**
     * Do not disturb: Zen mode no sounds are exceptions to bypass do not disturb
     */
    public static final int zen_mode_no_exceptions=0x7f11176b;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls option value: No calls allowed
     */
    public static final int zen_mode_none_calls=0x7f11176c;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Messages option value: No messages allowed
     */
    public static final int zen_mode_none_messages=0x7f11176d;
    /**
     * Do not disturb: Zen mode catch all "other" sounds can bypass do not disturb
     */
    public static final int zen_mode_other_options=0x7f11176e;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Summary for sound interruption settings
     */
    public static final int zen_mode_other_sounds_summary=0x7f11176f;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summary for people category
     */
    public static final int zen_mode_people_all=0x7f111770;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Header for calls and messages section of conversations
     * setting page
     */
    public static final int zen_mode_people_calls_messages_section_title=0x7f111771;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summary for people category
     */
    public static final int zen_mode_people_none=0x7f111772;
    /**
     * [CHAR LIMIT=120] Zen mode settings: Summary for people category
     */
    public static final int zen_mode_people_some=0x7f111773;
    /**
     * [CHAR LIMIT=NONE] Zen mode behavior settings footer: footer describing why the user cannot change the current do not disturb behavior settings
     */
    public static final int zen_mode_qs_set_behavior=0x7f111774;
    /**
     * [CHAR LIMIT=80] Zen mode settings: Allow reminder notifications/sounds to bypass DND
     */
    public static final int zen_mode_reminders=0x7f111775;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Reminders (ie: calendar reminders are allowed to bypass dnd)
     */
    public static final int zen_mode_reminders_list=0x7f111776;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Reminders (ie: calendar reminders) category in a list of elements that can bypass DND where reminders is the first or only element in the list. For example, "Reminds can interrupt” or "Reminders and events can interrupt”
     */
    public static final int zen_mode_reminders_list_first=0x7f111777;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Allow reminder notifications/sounds to bypass DND summary
     */
    public static final int zen_mode_reminders_summary=0x7f111778;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Repeat callers option
     */
    public static final int zen_mode_repeat_callers=0x7f111779;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Repeat callers (ie: repeat callers are allowed to bypass dnd)
     */
    public static final int zen_mode_repeat_callers_list=0x7f11177a;
    /**
     * [CHAR LIMIT=200] Zen mode settings: Repeat callers option summary
     */
    public static final int zen_mode_repeat_callers_summary=0x7f11177b;
    /**
     * [CHAR LIMIT=70] Zen mode settings: Allow repeat callers toggle title
     */
    public static final int zen_mode_repeat_callers_title=0x7f11177c;
    /**
     * Do not disturb: Hide notifications screen category title [CHAR LIMIT=100]
     */
    public static final int zen_mode_restrict_notifications_category=0x7f11177d;
    /**
     * Do not disturb: Custom settings option [CHAR LIMIT=60]
     */
    public static final int zen_mode_restrict_notifications_custom=0x7f11177e;
    /**
     * Do not disturb: restrict notifications page, menu option [CHAR LIMIT=60]
     */
    public static final int zen_mode_restrict_notifications_disable_custom=0x7f11177f;
    /**
     * Do not disturb: restrict notifications page, menu option [CHAR LIMIT=60]
     */
    public static final int zen_mode_restrict_notifications_enable_custom=0x7f111780;
    /**
     * Do not disturb: Hide notifications option [CHAR LIMIT=76]
     */
    public static final int zen_mode_restrict_notifications_hide=0x7f111781;
    /**
     * Do not disturb: Hide notifications footer [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_restrict_notifications_hide_footer=0x7f111782;
    /**
     * Do not disturb: Hide notifications summary [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_restrict_notifications_hide_summary=0x7f111783;
    /**
     * Do not disturb: Mute notifications option [CHAR LIMIT=60]
     */
    public static final int zen_mode_restrict_notifications_mute=0x7f111784;
    /**
     * Do not disturb:Mute notifications footer [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_restrict_notifications_mute_footer=0x7f111785;
    /**
     * Do not disturb:Mute notifications summary [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_restrict_notifications_mute_summary=0x7f111786;
    /**
     * Do not disturb: restrict notifications page, menu option [CHAR LIMIT=60]
     */
    public static final int zen_mode_restrict_notifications_summary_custom=0x7f111787;
    /**
     * Do not disturb: restrict notifications page, menu option [CHAR LIMIT=100]
     */
    public static final int zen_mode_restrict_notifications_summary_hidden=0x7f111788;
    /**
     * Do not disturb: restrict notifications page, menu option [CHAR LIMIT=60]
     */
    public static final int zen_mode_restrict_notifications_summary_muted=0x7f111789;
    /**
     * Do not disturb: restrict notifications settings title [CHAR LIMIT=80]
     */
    public static final int zen_mode_restrict_notifications_title=0x7f11178a;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule delete button
     */
    public static final int zen_mode_rule_delete_button=0x7f11178b;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule name option and edit dialog title
     */
    public static final int zen_mode_rule_name=0x7f11178c;
    /**
     * Do not disturb: Edit label for button that allows user to edit the dnd schedule name. [CHAR LIMIT=30]
     */
    public static final int zen_mode_rule_name_edit=0x7f11178d;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule name hint text
     */
    public static final int zen_mode_rule_name_hint=0x7f11178e;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Warning text for invalid zen rule names
     */
    public static final int zen_mode_rule_name_warning=0x7f11178f;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Text to display if rule isn't found
     */
    public static final int zen_mode_rule_not_found_text=0x7f111790;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule name edit button
     */
    public static final int zen_mode_rule_rename_button=0x7f111791;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule summary template (when enabled)
     */
    public static final int zen_mode_rule_summary_enabled_combination=0x7f111792;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Third party Rule summary template
     */
    public static final int zen_mode_rule_summary_provider_combination=0x7f111793;
    /**
     * [CHAR LIMIT=40] Zen mode settings: External rule type name if unknown
     */
    public static final int zen_mode_rule_type_unknown=0x7f111794;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Downtime rule setting
     */
    public static final int zen_mode_schedule_alarm_summary=0x7f111795;
    /**
     * [CHAR LIMIT=60] Zen mode settings: Downtime rule setting
     */
    public static final int zen_mode_schedule_alarm_title=0x7f111796;
    /**
     * Do not disturb: Title do not disturb settings representing automatic (scheduled) do not disturb rules. [CHAR LIMIT=30]
     */
    public static final int zen_mode_schedule_category_title=0x7f111797;
    /**
     * Do not disturb: Delete text button presented in a dialog to confirm the user would like to delete the selected DND rules. [CHAR LIMIT=30]
     */
    public static final int zen_mode_schedule_delete=0x7f111798;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Time-based rule days option title
     */
    public static final int zen_mode_schedule_rule_days=0x7f111799;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Downtime days option value, all days set
     */
    public static final int zen_mode_schedule_rule_days_all=0x7f11179a;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Downtime days option value, no days set
     */
    public static final int zen_mode_schedule_rule_days_none=0x7f11179b;
    /**
     * Do not disturb: Header for the Do Not Disturb automatic rules. [CHAR LIMIT=55]
     */
    public static final int zen_mode_schedule_title=0x7f11179c;
    /**
     * [CHAR LIMIT=40] Zen mode settings: visual signals: screen is off: title
     */
    public static final int zen_mode_screen_off=0x7f11179d;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions: screen is off: summary
     */
    public static final int zen_mode_screen_off_summary=0x7f11179e;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions: screen is off: summary
     */
    public static final int zen_mode_screen_off_summary_no_led=0x7f11179f;
    /**
     * [CHAR LIMIT=40] Zen mode settings: visual signals: screen is on: title
     */
    public static final int zen_mode_screen_on=0x7f1117a0;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual signals: screen is on: summary
     */
    public static final int zen_mode_screen_on_summary=0x7f1117a1;
    /**
     * Do not disturb: zen settings screens category title [CHAR LIMIT=100]
     */
    public static final int zen_mode_settings_category=0x7f1117a2;
    /**
     * [CHAR LIMIT=110] Zen mode settings footer: Footer showing how DND was triggered by an automatic DND schedule
     */
    public static final int zen_mode_settings_dnd_automatic_rule=0x7f1117a3;
    /**
     * [CHAR LIMIT=110] Zen mode settings footer: Footer how DND was triggered by an app
     */
    public static final int zen_mode_settings_dnd_automatic_rule_app=0x7f1117a4;
    /**
     * [CHAR LIMIT=120] Zen mode settings footer: Footer informing user DND has custom settings.
     */
    public static final int zen_mode_settings_dnd_custom_settings_footer=0x7f1117a5;
    /**
     * [CHAR LIMIT=120] Zen mode settings footer: Link following zen_mode_settings_dnd_custom_settings_footer to see the currently applied custom dnd settings.
     */
    public static final int zen_mode_settings_dnd_custom_settings_footer_link=0x7f1117a6;
    /**
     * [CHAR LIMIT=110] Zen mode settings footer: Footer showing end time of DND
     */
    public static final int zen_mode_settings_dnd_manual_end_time=0x7f1117a7;
    /**
     * [CHAR LIMIT=110] Zen mode settings footer: Footer showing length of DND
     */
    public static final int zen_mode_settings_dnd_manual_indefinite=0x7f1117a8;
    /**
     * Sound: Summary for the Do not Disturb option that describes how many automatic rules (schedules) are enabled [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_settings_schedules_summary=0x7f1117a9;
    /**
     * Sound: Summary for the Do not Disturb option and associated settings page. [CHAR LIMIT=240]
     */
    public static final int zen_mode_settings_summary=0x7f1117aa;
    /**
     * Sound: Summary for the Do not Disturb option when there is no automatic rules turned on. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_settings_summary_off=0x7f1117ab;
    /**
     * Sound: Title for the Do not Disturb option and associated settings page. [CHAR LIMIT=50]
     */
    public static final int zen_mode_settings_title=0x7f1117ac;
    /**
     * Do not disturb: Title for the Do not Disturb dialog to turn on Do not disturb. [CHAR LIMIT=50]
     */
    public static final int zen_mode_settings_turn_on_dialog_title=0x7f1117ad;
    /**
     * Subtitle for the Do not Disturb slice. [CHAR LIMIT=50]
     */
    public static final int zen_mode_slice_subtitle=0x7f1117ae;
    /**
     * Summary for the Sound Do not Disturb option when DND isn't currently on. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_sound_summary_off=0x7f1117af;
    /**
     * Sound settings screen, summary format of do not disturb when on with no extra information. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_sound_summary_on=0x7f1117b0;
    /**
     * Sound settings screen, summary format of do not disturb when on with extra info. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_sound_summary_on_with_info=0x7f1117b1;
    /**
     * [CHAR LIMIT=120] Zen mode settings: No sounds are allowed to bypass DND
     */
    public static final int zen_mode_sounds_none=0x7f1117b2;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Selected callers summary
     */
    public static final int zen_mode_starred_callers=0x7f1117b3;
    /**
     * [CHAR LIMIT=50] Zen mode settings: placeholder for a Contact name when the name is empty
     */
    public static final int zen_mode_starred_contacts_empty_name=0x7f1117b4;
    /**
     * Zen mode settings: Starred contacts summary [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_starred_contacts_summary_contacts=0x7f1117b5;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Starred contacts preference title
     */
    public static final int zen_mode_starred_contacts_title=0x7f1117b6;
    /**
     * [CHAR LIMIT=20] Zen mode settings: Start time option
     */
    public static final int zen_mode_start_time=0x7f1117b7;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only until a specific time.
     */
    public static final int zen_mode_summary_alarms_only_by_time=0x7f1117b8;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only forever.
     */
    public static final int zen_mode_summary_alarms_only_indefinite=0x7f1117b9;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: Turn on all notifications.
     */
    public static final int zen_mode_summary_always=0x7f1117ba;
    /**
     * Do not disturb: Zen mode combined summary + condition line [CHAR LIMIT=60]
     */
    public static final int zen_mode_summary_combination=0x7f1117bb;
    /**
     * [CHAR LIMIT=80] Zen mode settings: allow touch sounds to bypass DND
     */
    public static final int zen_mode_system=0x7f1117bc;
    /**
     * [CHAR LIMIT=50] Zen mode settings: System sounds (ie: touch sounds)
     */
    public static final int zen_mode_system_list=0x7f1117bd;
    /**
     * [CHAR LIMIT=50] Zen mode settings: System sounds (ie: touch sounds) category in a list of sounds that can bypass DND when touch sounds is the first or only element in the list. For example "Touch sounds can interrupt" or "Touch sounds and events can interrupt"
     */
    public static final int zen_mode_system_list_first=0x7f1117be;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: allow touch sounds to bypass DND summary
     */
    public static final int zen_mode_system_summary=0x7f1117bf;
    /**
     * [CHAR LIMIT=NONE] Zen mode behavior settings footer: footer describing why the user cannot change the current do not disturb behavior settings
     */
    public static final int zen_mode_unknown_app_set_behavior=0x7f1117c0;
    /**
     * Do not disturb: Switch toggle to toggle whether to use an automatic dnd rule or not [CHAR LIMIT=40]
     */
    public static final int zen_mode_use_automatic_rule=0x7f1117c1;
    /**
     * Do not disturb: Title for the Visual interruptions option and associated settings page. [CHAR LIMIT=30]
     */
    public static final int zen_mode_visual_interruptions_settings_title=0x7f1117c2;
    /**
     * Do not disturb: Subtitle for the Visual signals option to toggle on/off visual signals/alerts when the screen is on/when screen is off. [CHAR LIMIT=30]
     */
    public static final int zen_mode_visual_signals_settings_subtitle=0x7f1117c3;
    /**
     * Do not disturb: what to block title [CHAR LIMIT = 60]
     */
    public static final int zen_mode_what_to_block_title=0x7f1117c4;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option
     */
    public static final int zen_mode_when=0x7f1117c5;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option value: Every night
     */
    public static final int zen_mode_when_every_night=0x7f1117c6;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option value: Never
     */
    public static final int zen_mode_when_never=0x7f1117c7;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option value: Weeknights
     */
    public static final int zen_mode_when_weeknights=0x7f1117c8;
    /**
     * Do not disturb settings, messages, events and reminders footer [CHAR LIMIT=NONE]
     */
    public static final int zen_msg_event_reminder_footer=0x7f1117c9;
    /**
     * Do not disturb settings, messages, events and reminders title [CHAR LIMIT=100]
     */
    public static final int zen_msg_event_reminder_title=0x7f1117ca;
    /**
     * Do not disturb onboarding dialog, secondary text for radio button [CHAR LIMIT=NONE]
     */
    public static final int zen_onboarding_current_setting_summary=0x7f1117cb;
    /**
     * Do not disturb onboarding dialog, title for radio button [CHAR LIMIT=80]
     */
    public static final int zen_onboarding_current_setting_title=0x7f1117cc;
    /**
     * DO NOT TRANSLATE obsolete [CHAR LIMIT=NONE]
     */
    public static final int zen_onboarding_dnd_visual_disturbances_description=0x7f1117cd;
    /**
     * Do not disturb onboarding dialog, header prompt for settings [CHAR LIMIT=80]
     */
    public static final int zen_onboarding_dnd_visual_disturbances_header=0x7f1117ce;
    /**
     * DO NOT TRANSLATE obsolete
     */
    public static final int zen_onboarding_more_options=0x7f1117cf;
    /**
     * Do not disturb onboarding dialog, secondary text for radio button [CHAR LIMIT=NONE]
     */
    public static final int zen_onboarding_new_setting_summary=0x7f1117d0;
    /**
     * Do not disturb onboarding dialog, title for radio button [CHAR LIMIT=80]
     */
    public static final int zen_onboarding_new_setting_title=0x7f1117d1;
    /**
     * Do not disturb onboarding dialog, accept new settings [CHAR LIMIT=30]
     */
    public static final int zen_onboarding_ok=0x7f1117d2;
    /**
     * DO NOT TRANSLATE obsolete
     */
    public static final int zen_onboarding_screen_off_summary=0x7f1117d3;
    /**
     * DO NOT TRANSLATE obsolete
     */
    public static final int zen_onboarding_screen_off_title=0x7f1117d4;
    /**
     * DO NOT TRANSLATE obsolete
     */
    public static final int zen_onboarding_screen_on_summary=0x7f1117d5;
    /**
     * DO NOT TRANSLATE obsolete
     */
    public static final int zen_onboarding_screen_on_title=0x7f1117d6;
    /**
     * Do not disturb onboarding dialog, on click user goes to dnd settings page [CHAR LIMIT=30]
     */
    public static final int zen_onboarding_settings=0x7f1117d7;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Schedule rule toast hint when enabled
     */
    public static final int zen_schedule_rule_enabled_toast=0x7f1117d8;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Schedule rule type name
     */
    public static final int zen_schedule_rule_type_name=0x7f1117d9;
    /**
     * Do not disturb settings, main screen, category header describing settings that do not
     * fit in another group [CHAR LIMIT=100]
     */
    public static final int zen_settings_general=0x7f1117da;
    /**
     * Do not disturb settings, sound and vibrations screen footer [CHAR LIMIT=NONE]
     */
    public static final int zen_sound_footer=0x7f1117db;
    /**
     * Summary label for dnd suggestion, which is displayed in Settings homepage [CHAR LIMIT=100]
     */
    public static final int zen_suggestion_summary=0x7f1117dc;
    /**
     * Title label for dnd suggestion, which is displayed in Settings homepage [CHAR LIMIT=100]
     */
    public static final int zen_suggestion_title=0x7f1117dd;
    /**
     * Date & time setting screen setting switch title: whether the time zone should be determined automatically [CHAR LIMIT=100]
     */
    public static final int zone_auto_title=0x7f1117de;
    /**
     * Label describing when a given time zone changes to DST or standard time
     */
    public static final int zone_change_to_from_dst=0x7f1117df;
    /**
     * Label describing a exemplar location and time zone offset[CHAR LIMIT=NONE]
     */
    public static final int zone_info_exemplar_location_and_offset=0x7f1117e0;
    /**
     * Label describing a time zone and changes to DST or standard time [CHAR LIMIT=NONE]
     */
    public static final int zone_info_footer=0x7f1117e1;
    /**
     * Label describing a time zone without DST [CHAR LIMIT=NONE]
     */
    public static final int zone_info_footer_no_dst=0x7f1117e2;
    /**
     * Label describing a time zone offset and name[CHAR LIMIT=NONE]
     */
    public static final int zone_info_offset_and_name=0x7f1117e3;
    /**
     * The menu item to switch to selecting a time zone with a fixed offset (such as UTC or GMT+0200) [CHAR LIMIT=30]
     */
    public static final int zone_menu_by_offset=0x7f1117e4;
    /**
     * The menu item to switch to selecting a time zone by region (default) [CHAR LIMIT=30]
     */
    public static final int zone_menu_by_region=0x7f1117e5;
    /**
     * Describes the time type "daylight savings time" (used in zone_change_to_from_dst, when no zone specific name is available)
     */
    public static final int zone_time_type_dst=0x7f1117e6;
    /**
     * Describes the time type "standard time" (used in zone_change_to_from_dst, when no zone specific name is available)
     */
    public static final int zone_time_type_standard=0x7f1117e7;
  }
  public static final class style {
    public static final int AccentColorHighlightBorderlessButton=0x7f120000;
    public static final int AccessibilityDialog=0x7f120001;
    public static final int AccessibilityDialogButton=0x7f120002;
    public static final int AccessibilityDialogButtonBarSpace=0x7f120003;
    public static final int AccessibilityDialogButtonList=0x7f120004;
    public static final int AccessibilityDialogDescription=0x7f120005;
    public static final int AccessibilityDialogIcon=0x7f120006;
    public static final int AccessibilityDialogPermissionDescription=0x7f120007;
    public static final int AccessibilityDialogPermissionTitle=0x7f120008;
    public static final int AccessibilityDialogServiceIcon=0x7f120009;
    public static final int AccessibilityDialogTitle=0x7f12000a;
    public static final int ActionPrimaryButton=0x7f12000b;
    public static final int ActionSecondaryButton=0x7f12000c;
    public static final int AlertDialog_AppCompat=0x7f12000d;
    public static final int AlertDialog_AppCompat_Light=0x7f12000e;
    public static final int AndroidThemeColorAccentYellow=0x7f12000f;
    public static final int Animation_AppCompat_Dialog=0x7f120010;
    public static final int Animation_AppCompat_DropDownUp=0x7f120011;
    public static final int Animation_AppCompat_Tooltip=0x7f120012;
    public static final int Animation_Design_BottomSheetDialog=0x7f120013;
    public static final int Animation_MaterialComponents_BottomSheetDialog=0x7f120014;
    public static final int Animation_SudWindowAnimation=0x7f120015;
    public static final int ApnPreference=0x7f120016;
    public static final int AppAuthenticationExpander=0x7f120017;
    public static final int AppAuthenticationPolicyIcon=0x7f120018;
    public static final int AppAuthenticationPolicyItem=0x7f120019;
    public static final int AppAuthenticationPolicyNumberOfUrisText=0x7f12001a;
    public static final int AppAuthenticationPolicyText=0x7f12001b;
    public static final int AppEntitiesHeader_Text=0x7f12001c;
    public static final int AppEntitiesHeader_Text_HeaderTitle=0x7f12001d;
    public static final int AppEntitiesHeader_Text_Summary=0x7f12001e;
    public static final int AppEntitiesHeader_Text_Title=0x7f12001f;
    public static final int AppUriAuthenticationPolicyText=0x7f120020;
    public static final int Banner_ButtonText_SettingsLib=0x7f120021;
    public static final int Banner_Dismiss_SettingsLib=0x7f120022;
    public static final int Banner_Preference_SettingsLib=0x7f120023;
    public static final int Banner_Subtitle_SettingsLib=0x7f120024;
    public static final int Banner_Summary_SettingsLib=0x7f120025;
    public static final int Banner_Text_Summary=0x7f120026;
    public static final int Banner_Text_Title=0x7f120027;
    public static final int Banner_Title_SettingsLib=0x7f120028;
    public static final int BarChart_Text=0x7f120029;
    public static final int BarChart_Text_HeaderTitle=0x7f12002a;
    public static final int BarChart_Text_Summary=0x7f12002b;
    public static final int BarChart_Text_Title=0x7f12002c;
    public static final int Base_AlertDialog_AppCompat=0x7f12002d;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f12002e;
    public static final int Base_Animation_AppCompat_Dialog=0x7f12002f;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f120030;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f120031;
    public static final int Base_CardView=0x7f120032;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f120033;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f120034;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Icon=0x7f120035;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Panel=0x7f120036;
    public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Text=0x7f120037;
    public static final int Base_TextAppearance_AppCompat=0x7f120038;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f120039;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f12003a;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f12003b;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f12003c;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f12003d;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f12003e;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f12003f;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f120040;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f120041;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f120042;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f120043;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f120044;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f120045;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f120046;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f120047;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f120048;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f120049;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f12004a;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f12004b;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f12004c;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f12004d;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f12004e;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f12004f;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f120050;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f120051;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f120052;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f120053;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f120054;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f120055;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f120056;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f120057;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f120058;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f120059;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f12005a;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f12005b;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f12005c;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f12005d;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f12005e;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f12005f;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f120060;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f120061;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f120062;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f120063;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f120064;
    public static final int Base_TextAppearance_MaterialComponents_Badge=0x7f120065;
    public static final int Base_TextAppearance_MaterialComponents_Button=0x7f120066;
    public static final int Base_TextAppearance_MaterialComponents_Headline6=0x7f120067;
    public static final int Base_TextAppearance_MaterialComponents_Subtitle2=0x7f120068;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f120069;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f12006a;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f12006b;
    public static final int Base_Theme_AppCompat=0x7f12006c;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f12006d;
    public static final int Base_Theme_AppCompat_Dialog=0x7f12006e;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f12006f;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f120070;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f120071;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f120072;
    public static final int Base_Theme_AppCompat_Light=0x7f120073;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f120074;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f120075;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f120076;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f120077;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f120078;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f120079;
    public static final int Base_Theme_MaterialComponents=0x7f12007a;
    public static final int Base_Theme_MaterialComponents_Bridge=0x7f12007b;
    public static final int Base_Theme_MaterialComponents_CompactMenu=0x7f12007c;
    public static final int Base_Theme_MaterialComponents_Dialog=0x7f12007d;
    public static final int Base_Theme_MaterialComponents_Dialog_Alert=0x7f12007e;
    public static final int Base_Theme_MaterialComponents_Dialog_Bridge=0x7f12007f;
    public static final int Base_Theme_MaterialComponents_Dialog_FixedSize=0x7f120080;
    public static final int Base_Theme_MaterialComponents_Dialog_MinWidth=0x7f120081;
    public static final int Base_Theme_MaterialComponents_DialogWhenLarge=0x7f120082;
    public static final int Base_Theme_MaterialComponents_Light=0x7f120083;
    public static final int Base_Theme_MaterialComponents_Light_Bridge=0x7f120084;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar=0x7f120085;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f120086;
    public static final int Base_Theme_MaterialComponents_Light_Dialog=0x7f120087;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Alert=0x7f120088;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Bridge=0x7f120089;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f12008a;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f12008b;
    public static final int Base_Theme_MaterialComponents_Light_DialogWhenLarge=0x7f12008c;
    public static final int Base_ThemeOverlay_AppCompat=0x7f12008d;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f12008e;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f12008f;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f120090;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f120091;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f120092;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f120093;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog=0x7f120094;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f120095;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert_Framework=0x7f120096;
    public static final int Base_ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework=0x7f120097;
    public static final int Base_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f120098;
    public static final int Base_V14_Theme_MaterialComponents=0x7f120099;
    public static final int Base_V14_Theme_MaterialComponents_Bridge=0x7f12009a;
    public static final int Base_V14_Theme_MaterialComponents_Dialog=0x7f12009b;
    public static final int Base_V14_Theme_MaterialComponents_Dialog_Bridge=0x7f12009c;
    public static final int Base_V14_Theme_MaterialComponents_Light=0x7f12009d;
    public static final int Base_V14_Theme_MaterialComponents_Light_Bridge=0x7f12009e;
    public static final int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f12009f;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog=0x7f1200a0;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog_Bridge=0x7f1200a1;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_BottomSheetDialog=0x7f1200a2;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog=0x7f1200a3;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f1200a4;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f1200a5;
    public static final int Base_V21_Theme_AppCompat=0x7f1200a6;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f1200a7;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f1200a8;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f1200a9;
    public static final int Base_V21_Theme_MaterialComponents=0x7f1200aa;
    public static final int Base_V21_Theme_MaterialComponents_Dialog=0x7f1200ab;
    public static final int Base_V21_Theme_MaterialComponents_Light=0x7f1200ac;
    public static final int Base_V21_Theme_MaterialComponents_Light_Dialog=0x7f1200ad;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f1200ae;
    public static final int Base_V21_ThemeOverlay_MaterialComponents_BottomSheetDialog=0x7f1200af;
    public static final int Base_V22_Theme_AppCompat=0x7f1200b0;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f1200b1;
    public static final int Base_V23_Theme_AppCompat=0x7f1200b2;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f1200b3;
    public static final int Base_V26_Theme_AppCompat=0x7f1200b4;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f1200b5;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f1200b6;
    public static final int Base_V28_Theme_AppCompat=0x7f1200b7;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f1200b8;
    public static final int Base_V7_Theme_AppCompat=0x7f1200b9;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f1200ba;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f1200bb;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f1200bc;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f1200bd;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f1200be;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f1200bf;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f1200c0;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f1200c1;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f1200c2;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f1200c3;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f1200c4;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f1200c5;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f1200c6;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f1200c7;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f1200c8;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f1200c9;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f1200ca;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f1200cb;
    public static final int Base_Widget_AppCompat_Button=0x7f1200cc;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f1200cd;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f1200ce;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f1200cf;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f1200d0;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f1200d1;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f1200d2;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f1200d3;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f1200d4;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f1200d5;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f1200d6;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f1200d7;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f1200d8;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f1200d9;
    public static final int Base_Widget_AppCompat_EditText=0x7f1200da;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f1200db;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f1200dc;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f1200dd;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f1200de;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f1200df;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1200e0;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f1200e1;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f1200e2;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f1200e3;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f1200e4;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f1200e5;
    public static final int Base_Widget_AppCompat_ListView=0x7f1200e6;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f1200e7;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f1200e8;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f1200e9;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f1200ea;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f1200eb;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f1200ec;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f1200ed;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f1200ee;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f1200ef;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f1200f0;
    public static final int Base_Widget_AppCompat_SearchView=0x7f1200f1;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1200f2;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1200f3;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1200f4;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1200f5;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1200f6;
    public static final int Base_Widget_AppCompat_TextView=0x7f1200f7;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1200f8;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1200f9;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1200fa;
    public static final int Base_Widget_Design_TabLayout=0x7f1200fb;
    public static final int Base_Widget_MaterialComponents_AutoCompleteTextView=0x7f1200fc;
    public static final int Base_Widget_MaterialComponents_CheckedTextView=0x7f1200fd;
    public static final int Base_Widget_MaterialComponents_Chip=0x7f1200fe;
    public static final int Base_Widget_MaterialComponents_MaterialCalendar_NavigationButton=0x7f1200ff;
    public static final int Base_Widget_MaterialComponents_PopupMenu=0x7f120100;
    public static final int Base_Widget_MaterialComponents_PopupMenu_ContextMenu=0x7f120101;
    public static final int Base_Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x7f120102;
    public static final int Base_Widget_MaterialComponents_PopupMenu_Overflow=0x7f120103;
    public static final int Base_Widget_MaterialComponents_Slider=0x7f120104;
    public static final int Base_Widget_MaterialComponents_Snackbar=0x7f120105;
    public static final int Base_Widget_MaterialComponents_TextInputEditText=0x7f120106;
    public static final int Base_Widget_MaterialComponents_TextInputLayout=0x7f120107;
    public static final int Base_Widget_MaterialComponents_TextView=0x7f120108;
    public static final int BasePreferenceThemeOverlay=0x7f120109;
    public static final int BiometricEnrollIntroMessage=0x7f12010a;
    public static final int BiometricEnrollIntroTitle=0x7f12010b;
    public static final int BiometricHeaderStyle=0x7f12010c;
    public static final int BorderlessButton=0x7f12010d;
    public static final int CardPreference=0x7f12010e;
    public static final int CardView=0x7f12010f;
    public static final int CardView_Dark=0x7f120110;
    public static final int CardView_Light=0x7f120111;
    public static final int CollapsingToolbarTitle_Collapsed=0x7f120112;
    public static final int CollapsingToolbarTitle_Expanded=0x7f120113;
    public static final int ConditionCardBorderlessButton=0x7f120114;
    public static final int ConditionFullCardBorderlessButton=0x7f120115;
    public static final int ConditionHalfCardBorderlessButton=0x7f120116;
    public static final int ConfirmDeviceCredentialsAnimationStyle=0x7f120117;
    public static final int ContextualCardDismissalButton=0x7f120118;
    public static final int ContextualCardStyle=0x7f120119;
    public static final int CrossProfileConsentDialogDescription=0x7f12011a;
    public static final int CrossProfileConsentDialogIcon=0x7f12011b;
    public static final int CrossProfileConsentDialogSubDescription=0x7f12011c;
    public static final int CrossProfileConsentDialogSubTitle=0x7f12011d;
    public static final int CrossProfileConsentDialogTitle=0x7f12011e;
    public static final int CrossProfileEntityHeaderIcon=0x7f12011f;
    public static final int CrossProfileEntityHeaderTitle=0x7f120120;
    public static final int CrossProfileSwapHorizIcon=0x7f120121;
    public static final int CryptKeeperBlankTheme=0x7f120122;
    public static final int DialogTheme=0x7f120123;
    public static final int DisclaimerNegativeButton=0x7f120124;
    public static final int DisclaimerPositiveButton=0x7f120125;
    public static final int EmptyTheme=0x7f120126;
    public static final int EntityHeader=0x7f120127;
    public static final int FaceLayoutTheme=0x7f120128;
    public static final int FallbackHome=0x7f120129;
    public static final int FallbackHome_SetupWizard=0x7f12012a;
    public static final int FingerprintLayoutTheme=0x7f12012b;
    public static final int GlifTheme=0x7f12012c;
    /**
     * DayNight themes
     * DayNight themes
     */
    public static final int GlifTheme_DayNight=0x7f12012d;
    public static final int GlifTheme_Light=0x7f12012e;
    public static final int GlifV2Theme=0x7f12012f;
    public static final int GlifV2Theme_DayNight=0x7f120130;
    public static final int GlifV2Theme_DayNight_Transparent=0x7f120131;
    public static final int GlifV2Theme_Light=0x7f120132;
    public static final int GlifV2Theme_Light_Transparent=0x7f120133;
    public static final int GlifV2Theme_Transparent=0x7f120134;
    public static final int GlifV2ThemeAlertDialog=0x7f120135;
    public static final int GlifV2ThemeAlertDialog_Light=0x7f120136;
    public static final int GlifV3Theme=0x7f120137;
    public static final int GlifV3Theme_DayNight=0x7f120138;
    public static final int GlifV3Theme_DayNight_NoActionBar=0x7f120139;
    public static final int GlifV3Theme_DayNight_Transparent=0x7f12013a;
    public static final int GlifV3Theme_Footer=0x7f12013b;
    public static final int GlifV3Theme_Light=0x7f12013c;
    public static final int GlifV3Theme_Light_NoActionBar=0x7f12013d;
    public static final int GlifV3Theme_Light_Transparent=0x7f12013e;
    public static final int GlifV3Theme_NoActionBar=0x7f12013f;
    public static final int GlifV3Theme_Transparent=0x7f120140;
    public static final int HomepageTitleText=0x7f120141;
    public static final int HorizontalProgressBar_SettingsLib=0x7f120142;
    public static final int LanguageCheckboxAndLabel=0x7f120143;
    /**
     * This light theme for a window that can be applied to show light theme in setupwizard flow,
     * regardless of whether system theme changed to dark or light theme. WARNING: your settings
     * activity shows in setupwizard flow, but doesn't use setupwizard theme. This theme must be
     * set to ensure settings activity always shows light theme in setupwizard flow.
     */
    public static final int LightTheme_SettingsBase_SetupWizard=0x7f120144;
    public static final int LockPatternContainerStyle=0x7f120145;
    public static final int LockPatternSizeHeaderStyle=0x7f120146;
    public static final int LockPatternStyle=0x7f120147;
    public static final int MainSwitchText_Settingslib=0x7f120148;
    public static final int MaterialAlertDialog_MaterialComponents=0x7f120149;
    public static final int MaterialAlertDialog_MaterialComponents_Body_Text=0x7f12014a;
    public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Calendar=0x7f12014b;
    public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Spinner=0x7f12014c;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Icon=0x7f12014d;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Icon_CenterStacked=0x7f12014e;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Panel=0x7f12014f;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Panel_CenterStacked=0x7f120150;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Text=0x7f120151;
    public static final int MaterialAlertDialog_MaterialComponents_Title_Text_CenterStacked=0x7f120152;
    public static final int PanelOptionRoundedOutlinedButton=0x7f120153;
    public static final int PanelOptionRoundedSolidButton=0x7f120154;
    public static final int PickerDialogTheme_Settings=0x7f120155;
    public static final int Platform_AppCompat=0x7f120156;
    public static final int Platform_AppCompat_Light=0x7f120157;
    public static final int Platform_MaterialComponents=0x7f120158;
    public static final int Platform_MaterialComponents_Dialog=0x7f120159;
    public static final int Platform_MaterialComponents_Light=0x7f12015a;
    public static final int Platform_MaterialComponents_Light_Dialog=0x7f12015b;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f12015c;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f12015d;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f12015e;
    public static final int Platform_V21_AppCompat=0x7f12015f;
    public static final int Platform_V21_AppCompat_Light=0x7f120160;
    public static final int Platform_V25_AppCompat=0x7f120161;
    public static final int Platform_V25_AppCompat_Light=0x7f120162;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f120163;
    public static final int Preference=0x7f120164;
    public static final int Preference_Category=0x7f120165;
    public static final int Preference_Category_Material=0x7f120166;
    public static final int Preference_CheckBoxPreference=0x7f120167;
    public static final int Preference_CheckBoxPreference_Material=0x7f120168;
    public static final int Preference_DialogPreference=0x7f120169;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f12016a;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f12016b;
    public static final int Preference_DialogPreference_Material=0x7f12016c;
    public static final int Preference_DropDown=0x7f12016d;
    public static final int Preference_DropDown_Material=0x7f12016e;
    public static final int Preference_Information=0x7f12016f;
    public static final int Preference_Information_Material=0x7f120170;
    public static final int Preference_Material=0x7f120171;
    public static final int Preference_PreferenceScreen=0x7f120172;
    public static final int Preference_PreferenceScreen_Material=0x7f120173;
    public static final int Preference_SeekBarPreference=0x7f120174;
    public static final int Preference_SeekBarPreference_Material=0x7f120175;
    public static final int Preference_SwitchPreference=0x7f120176;
    public static final int Preference_SwitchPreference_Material=0x7f120177;
    public static final int Preference_SwitchPreferenceCompat=0x7f120178;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f120179;
    public static final int PreferenceCategoryTitleTextStyle=0x7f12017a;
    public static final int PreferenceFragment=0x7f12017b;
    public static final int PreferenceFragment_Material=0x7f12017c;
    public static final int PreferenceFragmentList=0x7f12017d;
    public static final int PreferenceFragmentList_Material=0x7f12017e;
    public static final int PreferenceFragmentListSinglePane=0x7f12017f;
    public static final int PreferenceSummaryTextStyle=0x7f120180;
    public static final int PreferenceTheme_SettingsLib=0x7f120181;
    public static final int PreferenceTheme_SetupWizard=0x7f120182;
    public static final int PreferenceThemeOverlay=0x7f120183;
    public static final int PreferenceThemeOverlay_SettingsBase=0x7f120184;
    public static final int PreferenceThemeOverlay_v14=0x7f120185;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f120186;
    public static final int PreviewPagerPageIndicator=0x7f120187;
    public static final int RequestManageCredentialsAllowButton=0x7f120188;
    public static final int RequestManageCredentialsButtonPanel=0x7f120189;
    public static final int RequestManageCredentialsDescription=0x7f12018a;
    public static final int RequestManageCredentialsDontAllowButton=0x7f12018b;
    public static final int RequestManageCredentialsFab=0x7f12018c;
    public static final int RequestManageCredentialsHeader=0x7f12018d;
    public static final int RequestManageCredentialsHeaderLandscape=0x7f12018e;
    public static final int RequestManageCredentialsTitle=0x7f12018f;
    public static final int RingProgressBarStyle=0x7f120190;
    public static final int RoundedCornerButtonTheme=0x7f120191;
    public static final int RoundedCornerThemeOverlay=0x7f120192;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f120193;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f120194;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f120195;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f120196;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f120197;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f120198;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f120199;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f12019a;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f12019b;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f12019c;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f12019d;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f12019e;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f12019f;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f1201a0;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f1201a1;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f1201a2;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f1201a3;
    public static final int SearchBarStyle=0x7f1201a4;
    public static final int SettingsBarChart=0x7f1201a5;
    public static final int SettingsBarChartBar=0x7f1201a6;
    public static final int SettingsBarChartBarIcon=0x7f1201a7;
    public static final int SettingsBarChartBarSummary=0x7f1201a8;
    public static final int SettingsBarChartBarTitle=0x7f1201a9;
    public static final int SettingsBarChartDetailsButton=0x7f1201aa;
    public static final int SettingsBarChartEmptyText=0x7f1201ab;
    public static final int SettingsBarChartTitle=0x7f1201ac;
    public static final int SettingsBarViewStyle=0x7f1201ad;
    public static final int SettingsCategoryPreference_SettingsLib=0x7f1201ae;
    public static final int SettingsCheckBoxPreference_SettingsLib=0x7f1201af;
    public static final int SettingsDropdownPreference_SettingsLib=0x7f1201b0;
    public static final int SettingsEditTextPreference_SettingsLib=0x7f1201b1;
    public static final int SettingsLibActionButton=0x7f1201b2;
    public static final int SettingsMultiSelectListPreference=0x7f1201b3;
    public static final int SettingsPreference_SettingsLib=0x7f1201b4;
    public static final int SettingsPreferenceFragmentStyle=0x7f1201b5;
    public static final int SettingsPreferenceTheme=0x7f1201b6;
    public static final int SettingsSeekBarPreference=0x7f1201b7;
    public static final int SettingsSeekbarPreference_SettingsLib=0x7f1201b8;
    public static final int SettingsSpinnerTitleBar=0x7f1201b9;
    public static final int SettingsSwitchPreference_SettingsLib=0x7f1201ba;
    /**
     * Accessibility portion of Setup Wizard
     */
    public static final int SetupWizardAccessibilityTheme=0x7f1201bb;
    public static final int SetupWizardButton_Negative=0x7f1201bc;
    public static final int SetupWizardButton_Positive=0x7f1201bd;
    public static final int SetupWizardPartnerResource=0x7f1201be;
    public static final int SetupWizardPreferenceFragmentStyle=0x7f1201bf;
    public static final int SetupWizardTheme_DayNight_Transparent=0x7f1201c0;
    public static final int SetupWizardTheme_Light_Transparent=0x7f1201c1;
    public static final int SetupWizardTheme_Transparent=0x7f1201c2;
    public static final int ShapeAppearance_MaterialComponents=0x7f1201c3;
    public static final int ShapeAppearance_MaterialComponents_LargeComponent=0x7f1201c4;
    public static final int ShapeAppearance_MaterialComponents_MediumComponent=0x7f1201c5;
    public static final int ShapeAppearance_MaterialComponents_SmallComponent=0x7f1201c6;
    public static final int ShapeAppearance_MaterialComponents_Test=0x7f1201c7;
    public static final int ShapeAppearance_MaterialComponents_Tooltip=0x7f1201c8;
    public static final int ShapeAppearanceOverlay=0x7f1201c9;
    public static final int ShapeAppearanceOverlay_BottomLeftDifferentCornerSize=0x7f1201ca;
    public static final int ShapeAppearanceOverlay_BottomRightCut=0x7f1201cb;
    public static final int ShapeAppearanceOverlay_Cut=0x7f1201cc;
    public static final int ShapeAppearanceOverlay_DifferentCornerSize=0x7f1201cd;
    public static final int ShapeAppearanceOverlay_MaterialComponents_BottomSheet=0x7f1201ce;
    public static final int ShapeAppearanceOverlay_MaterialComponents_Chip=0x7f1201cf;
    public static final int ShapeAppearanceOverlay_MaterialComponents_ExtendedFloatingActionButton=0x7f1201d0;
    public static final int ShapeAppearanceOverlay_MaterialComponents_FloatingActionButton=0x7f1201d1;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x7f1201d2;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Window_Fullscreen=0x7f1201d3;
    public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Year=0x7f1201d4;
    public static final int ShapeAppearanceOverlay_MaterialComponents_TextInputLayout_FilledBox=0x7f1201d5;
    public static final int ShapeAppearanceOverlay_TopLeftCut=0x7f1201d6;
    public static final int ShapeAppearanceOverlay_TopRightDifferentCornerSize=0x7f1201d7;
    public static final int SlicePreference=0x7f1201d8;
    public static final int SliceRow=0x7f1201d9;
    public static final int SliceRow_Settings=0x7f1201da;
    public static final int SliceRow_Slider=0x7f1201db;
    public static final int SliceRow_Slider_LargeIcon=0x7f1201dc;
    public static final int SucPartnerCustomizationButton_Primary=0x7f1201dd;
    public static final int SucPartnerCustomizationButton_Secondary=0x7f1201de;
    public static final int SucPartnerCustomizationButtonBar=0x7f1201df;
    /**
     * Customization footer styles
     */
    public static final int SucPartnerCustomizationButtonBar_Stackable=0x7f1201e0;
    public static final int SudAlertDialogTheme=0x7f1201e1;
    public static final int SudAlertDialogTheme_Light=0x7f1201e2;
    public static final int SudAlertDialogThemeCompat=0x7f1201e3;
    public static final int SudAlertDialogThemeCompat_Light=0x7f1201e4;
    public static final int SudAppCompatButtonButtonBarAlertDialog=0x7f1201e5;
    public static final int SudAppCompatButtonButtonBarAlertDialog_Light=0x7f1201e6;
    /**
     * Button styles
     */
    public static final int SudBase_ProgressBarLarge=0x7f1201e7;
    /**
     * Card layout (for tablets)
     */
    public static final int SudBaseCardTitle=0x7f1201e8;
    /**
     * Header layout (for phones)
     */
    public static final int SudBaseHeaderTitle=0x7f1201e9;
    public static final int SudBaseThemeGlif=0x7f1201ea;
    public static final int SudBaseThemeGlif_Light=0x7f1201eb;
    public static final int SudBaseThemeGlifV3=0x7f1201ec;
    public static final int SudBaseThemeGlifV3_Light=0x7f1201ed;
    /**
     * Button styles
     */
    public static final int SudButtonItem=0x7f1201ee;
    public static final int SudButtonItem_Colored=0x7f1201ef;
    /**
     * Card layout (for tablets)
     */
    public static final int SudCardTitle=0x7f1201f0;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SudCheckBox=0x7f1201f1;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SudCheckBox_Multiline=0x7f1201f2;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SudContent_Glif=0x7f1201f3;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SudContentFrame=0x7f1201f4;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SudContentIllustration=0x7f1201f5;
    public static final int SudDateTimePickerDialogTheme=0x7f1201f6;
    public static final int SudDateTimePickerDialogTheme_Light=0x7f1201f7;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SudDescription=0x7f1201f8;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SudDescription_Glif=0x7f1201f9;
    /**
     * Can't set style Widget.DeviceDefault.Button.ButtonBar.AlertDialog as parent theme directly,
     * since it is not public. Thus here sets Widget.DeviceDefault.Button.Borderless.Colored and
     * bring the minWidth/minHeight.
     */
    public static final int SudDeviceDefaultButtonBarButtonStyle=0x7f1201fa;
    public static final int SudDeviceDefaultButtonBarButtonStyle_Light=0x7f1201fb;
    public static final int SudDeviceDefaultWindowTitleTextAppearance=0x7f1201fc;
    /**
     * Dynamic color theme for alert dialog
     */
    public static final int SudDynamicColorAlertDialogThemeCompat=0x7f1201fd;
    public static final int SudDynamicColorAlertDialogThemeCompat_Light=0x7f1201fe;
    /**
     * Dynamic color theme for date time dialog
     */
    public static final int SudDynamicColorDateTimePickerDialogTheme=0x7f1201ff;
    public static final int SudDynamicColorDateTimePickerDialogTheme_Light=0x7f120200;
    /**
     * Main theme for dynamic color
     */
    public static final int SudDynamicColorThemeGlifV3=0x7f120201;
    public static final int SudDynamicColorThemeGlifV3_DayNight=0x7f120202;
    public static final int SudDynamicColorThemeGlifV3_Light=0x7f120203;
    /**
     * This theme was applied to Settings pages which are running under SUW with DynamicColor.
     */
    public static final int SudDynamicColorThemeSettings_SetupWizard=0x7f120204;
    /**
     * This theme was applied to Settings pages which are running under SUW with DynamicColor.
     */
    public static final int SudDynamicColorThemeSettings_SetupWizard_DayNight=0x7f120205;
    public static final int SudEditText=0x7f120206;
    public static final int SudFillContentLayout=0x7f120207;
    public static final int SudFourColorIndeterminateProgressBar=0x7f120208;
    public static final int SudFullDynamicColorAlertDialogThemeCompat=0x7f120209;
    public static final int SudFullDynamicColorAlertDialogThemeCompat_Light=0x7f12020a;
    public static final int SudFullDynamicColorThemeGlifV3=0x7f12020b;
    public static final int SudFullDynamicColorThemeGlifV3_DayNight=0x7f12020c;
    public static final int SudFullDynamicColorThemeGlifV3_Light=0x7f12020d;
    /**
     * Use this style with a Button not a TextView, so that TalkBack will announce it as a
     * button.
     */
    public static final int SudGlifButton_BaseTertiary=0x7f12020e;
    public static final int SudGlifButton_Primary=0x7f12020f;
    public static final int SudGlifButton_Secondary=0x7f120210;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SudGlifButton_Tertiary=0x7f120211;
    /**
     * The start and end paddings are asymmetric because start buttons are borderless buttons
     * which aligns the text label.
     */
    public static final int SudGlifButtonBar=0x7f120212;
    public static final int SudGlifButtonBar_Stackable=0x7f120213;
    /**
     * GLIF Card layout (for tablets)
     */
    public static final int SudGlifCardBackground=0x7f120214;
    public static final int SudGlifCardContainer=0x7f120215;
    public static final int SudGlifDescription=0x7f120216;
    public static final int SudGlifHeaderContainer=0x7f120217;
    /**
     * GLIF layout
     */
    public static final int SudGlifHeaderTitle=0x7f120218;
    public static final int SudGlifIcon=0x7f120219;
    public static final int SudGlifIconContainer=0x7f12021a;
    public static final int SudHeaderTitle=0x7f12021b;
    /**
     * Content info
     */
    public static final int SudInfoContainer=0x7f12021c;
    public static final int SudInfoDescription=0x7f12021d;
    /**
     * Items styles
     */
    public static final int SudItemContainer=0x7f12021e;
    public static final int SudItemContainer_Description=0x7f12021f;
    public static final int SudItemContainer_Description_Glif=0x7f120220;
    public static final int SudItemContainer_Verbose=0x7f120221;
    public static final int SudItemSummary=0x7f120222;
    public static final int SudItemTitle=0x7f120223;
    public static final int SudItemTitle_GlifDescription=0x7f120224;
    public static final int SudItemTitle_SectionHeader=0x7f120225;
    public static final int SudItemTitle_Verbose=0x7f120226;
    public static final int SudLoadingContentFrame=0x7f120227;
    /**
     * Navigation bar styles
     */
    public static final int SudNavBarButtonStyle=0x7f120228;
    /**
     * Navigation bar styles
     */
    public static final int SudNavBarTheme=0x7f120229;
    public static final int SudNavBarThemeDark=0x7f12022a;
    public static final int SudNavBarThemeLight=0x7f12022b;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SudRadioButton=0x7f12022c;
    public static final int SudSwitchBarStyle=0x7f12022d;
    public static final int SudSwitchStyle=0x7f12022e;
    public static final int SudSwitchStyle_Divided=0x7f12022f;
    public static final int SudTextAppearanceDeviceDefaultMedium=0x7f120230;
    public static final int SudTextAppearanceDeviceDefaultMedium_Light=0x7f120231;
    public static final int SudThemeGlif=0x7f120232;
    public static final int SudThemeGlif_DayNight=0x7f120233;
    public static final int SudThemeGlif_Light=0x7f120234;
    public static final int SudThemeGlifV2=0x7f120235;
    public static final int SudThemeGlifV2_DayNight=0x7f120236;
    public static final int SudThemeGlifV2_Light=0x7f120237;
    public static final int SudThemeGlifV3=0x7f120238;
    public static final int SudThemeGlifV3_DayNight=0x7f120239;
    public static final int SudThemeGlifV3_Light=0x7f12023a;
    /**
     * General styles
     */
    public static final int SudThemeMaterial=0x7f12023b;
    /**
     * DayNight themes
     * DayNight themes
     */
    public static final int SudThemeMaterial_DayNight=0x7f12023c;
    public static final int SudThemeMaterial_Light=0x7f12023d;
    public static final int SudWindowTitleStyle=0x7f12023e;
    public static final int SuggestionCardIcon=0x7f12023f;
    public static final int SuggestionCardText=0x7f120240;
    public static final int SuwAlertDialogThemeCompat=0x7f120241;
    public static final int SuwAlertDialogThemeCompat_DayNight=0x7f120242;
    public static final int SuwAlertDialogThemeCompat_Light=0x7f120243;
    public static final int Switch_SettingsLib=0x7f120244;
    public static final int SwitchBar_Switch_Settingslib=0x7f120245;
    public static final int SyncSwitchPreference=0x7f120246;
    public static final int Test_ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day=0x7f120247;
    public static final int Test_Theme_MaterialComponents_MaterialCalendar=0x7f120248;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar=0x7f120249;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day=0x7f12024a;
    public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x7f12024b;
    public static final int TestStyleWithLineHeight=0x7f12024c;
    public static final int TestStyleWithLineHeightAppearance=0x7f12024d;
    public static final int TestStyleWithThemeLineHeightAttribute=0x7f12024e;
    public static final int TestStyleWithoutLineHeight=0x7f12024f;
    public static final int TestThemeWithLineHeight=0x7f120250;
    public static final int TestThemeWithLineHeightDisabled=0x7f120251;
    public static final int TextAppearance=0x7f120252;
    public static final int TextAppearance_AdminDialogMessage=0x7f120253;
    public static final int TextAppearance_AdminDialogTitle=0x7f120254;
    public static final int TextAppearance_AppCompat=0x7f120255;
    public static final int TextAppearance_AppCompat_Body1=0x7f120256;
    public static final int TextAppearance_AppCompat_Body2=0x7f120257;
    public static final int TextAppearance_AppCompat_Button=0x7f120258;
    public static final int TextAppearance_AppCompat_Caption=0x7f120259;
    public static final int TextAppearance_AppCompat_Display1=0x7f12025a;
    public static final int TextAppearance_AppCompat_Display2=0x7f12025b;
    public static final int TextAppearance_AppCompat_Display3=0x7f12025c;
    public static final int TextAppearance_AppCompat_Display4=0x7f12025d;
    public static final int TextAppearance_AppCompat_Headline=0x7f12025e;
    public static final int TextAppearance_AppCompat_Inverse=0x7f12025f;
    public static final int TextAppearance_AppCompat_Large=0x7f120260;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f120261;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f120262;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f120263;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f120264;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f120265;
    public static final int TextAppearance_AppCompat_Medium=0x7f120266;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f120267;
    public static final int TextAppearance_AppCompat_Menu=0x7f120268;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f120269;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f12026a;
    public static final int TextAppearance_AppCompat_Small=0x7f12026b;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f12026c;
    public static final int TextAppearance_AppCompat_Subhead=0x7f12026d;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f12026e;
    public static final int TextAppearance_AppCompat_Title=0x7f12026f;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f120270;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f120271;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f120272;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f120273;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f120274;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f120275;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f120276;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f120277;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f120278;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f120279;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f12027a;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f12027b;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f12027c;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f12027d;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f12027e;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f12027f;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f120280;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f120281;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f120282;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f120283;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f120284;
    public static final int TextAppearance_CategoryTitle=0x7f120285;
    public static final int TextAppearance_CategoryTitle_SettingsLib=0x7f120286;
    public static final int TextAppearance_Compat_Notification=0x7f120287;
    public static final int TextAppearance_Compat_Notification_Info=0x7f120288;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f120289;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f12028a;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f12028b;
    public static final int TextAppearance_Compat_Notification_Media=0x7f12028c;
    public static final int TextAppearance_Compat_Notification_Time=0x7f12028d;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f12028e;
    public static final int TextAppearance_Compat_Notification_Title=0x7f12028f;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f120290;
    public static final int TextAppearance_ConditionCardSummary=0x7f120291;
    public static final int TextAppearance_ContextualCardDismissalText=0x7f120292;
    public static final int TextAppearance_CryptKeeper_PasswordEntry=0x7f120293;
    public static final int TextAppearance_Design_CollapsingToolbar_Expanded=0x7f120294;
    public static final int TextAppearance_Design_Counter=0x7f120295;
    public static final int TextAppearance_Design_Counter_Overflow=0x7f120296;
    public static final int TextAppearance_Design_Error=0x7f120297;
    public static final int TextAppearance_Design_HelperText=0x7f120298;
    public static final int TextAppearance_Design_Hint=0x7f120299;
    public static final int TextAppearance_Design_Placeholder=0x7f12029a;
    public static final int TextAppearance_Design_Prefix=0x7f12029b;
    public static final int TextAppearance_Design_Snackbar_Message=0x7f12029c;
    public static final int TextAppearance_Design_Suffix=0x7f12029d;
    public static final int TextAppearance_Design_Tab=0x7f12029e;
    public static final int TextAppearance_DialogMessage=0x7f12029f;
    public static final int TextAppearance_EntityHeaderSummary=0x7f1202a0;
    public static final int TextAppearance_EntityHeaderTitle=0x7f1202a1;
    public static final int TextAppearance_ErrorText=0x7f1202a2;
    public static final int TextAppearance_Footer_Title_SettingsLib=0x7f1202a3;
    public static final int TextAppearance_HeadLineFontFamily=0x7f1202a4;
    public static final int TextAppearance_HeadLineFontFamily_Subhead=0x7f1202a5;
    public static final int TextAppearance_HomepageCardTitle=0x7f1202a6;
    public static final int TextAppearance_MaterialComponents_Badge=0x7f1202a7;
    public static final int TextAppearance_MaterialComponents_Body1=0x7f1202a8;
    public static final int TextAppearance_MaterialComponents_Body2=0x7f1202a9;
    public static final int TextAppearance_MaterialComponents_Button=0x7f1202aa;
    public static final int TextAppearance_MaterialComponents_Caption=0x7f1202ab;
    public static final int TextAppearance_MaterialComponents_Chip=0x7f1202ac;
    public static final int TextAppearance_MaterialComponents_Headline1=0x7f1202ad;
    public static final int TextAppearance_MaterialComponents_Headline2=0x7f1202ae;
    public static final int TextAppearance_MaterialComponents_Headline3=0x7f1202af;
    public static final int TextAppearance_MaterialComponents_Headline4=0x7f1202b0;
    public static final int TextAppearance_MaterialComponents_Headline5=0x7f1202b1;
    public static final int TextAppearance_MaterialComponents_Headline6=0x7f1202b2;
    public static final int TextAppearance_MaterialComponents_Overline=0x7f1202b3;
    public static final int TextAppearance_MaterialComponents_Subtitle1=0x7f1202b4;
    public static final int TextAppearance_MaterialComponents_Subtitle2=0x7f1202b5;
    public static final int TextAppearance_MaterialComponents_TimePicker_Title=0x7f1202b6;
    public static final int TextAppearance_MaterialComponents_Tooltip=0x7f1202b7;
    public static final int TextAppearance_MediaRouter_Dynamic_Body=0x7f1202b8;
    public static final int TextAppearance_MediaRouter_Dynamic_Body_Light=0x7f1202b9;
    public static final int TextAppearance_MediaRouter_Dynamic_Header=0x7f1202ba;
    public static final int TextAppearance_MediaRouter_Dynamic_Header_Light=0x7f1202bb;
    public static final int TextAppearance_MediaRouter_Dynamic_Metadata_PrimaryText=0x7f1202bc;
    public static final int TextAppearance_MediaRouter_Dynamic_Metadata_SecondaryText=0x7f1202bd;
    public static final int TextAppearance_MediaRouter_PrimaryText=0x7f1202be;
    public static final int TextAppearance_MediaRouter_SecondaryText=0x7f1202bf;
    public static final int TextAppearance_MediaRouter_Title=0x7f1202c0;
    public static final int TextAppearance_Medium=0x7f1202c1;
    public static final int TextAppearance_NotificationHistory=0x7f1202c2;
    public static final int TextAppearance_NotificationHistory_AppName=0x7f1202c3;
    public static final int TextAppearance_NotificationImportanceButton=0x7f1202c4;
    public static final int TextAppearance_NotificationImportanceButton_Selected=0x7f1202c5;
    public static final int TextAppearance_NotificationImportanceButton_Unselected=0x7f1202c6;
    public static final int TextAppearance_NotificationImportanceDetail=0x7f1202c7;
    public static final int TextAppearance_PasswordEntry=0x7f1202c8;
    public static final int TextAppearance_PreferenceTitle_SettingsLib=0x7f1202c9;
    public static final int TextAppearance_RemoveDialogContent=0x7f1202ca;
    public static final int TextAppearance_SearchBar=0x7f1202cb;
    public static final int TextAppearance_Small=0x7f1202cc;
    public static final int TextAppearance_Small_SwitchBar=0x7f1202cd;
    /**
     * Card layout (for tablets)
     */
    public static final int TextAppearance_SudCardTitle=0x7f1202ce;
    /**
     * Content styles
     */
    public static final int TextAppearance_SudDescription=0x7f1202cf;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int TextAppearance_SudDescription_Secondary=0x7f1202d0;
    public static final int TextAppearance_SudGlifBody=0x7f1202d1;
    public static final int TextAppearance_SudGlifItemSummary=0x7f1202d2;
    public static final int TextAppearance_SudGlifItemTitle=0x7f1202d3;
    public static final int TextAppearance_SudItemSummary=0x7f1202d4;
    public static final int TextAppearance_SuggestionSummary=0x7f1202d5;
    public static final int TextAppearance_SuggestionTitle=0x7f1202d6;
    public static final int TextAppearance_Switch=0x7f1202d7;
    public static final int TextAppearance_Tab=0x7f1202d8;
    public static final int TextAppearance_TopIntroText=0x7f1202d9;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f1202da;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f1202db;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f1202dc;
    public static final int TextAppearance_ZenOnboardingButton=0x7f1202dd;
    public static final int TextAppearance_info_label=0x7f1202de;
    public static final int TextAppearance_info_small=0x7f1202df;
    public static final int TextAppearance_info_value=0x7f1202e0;
    public static final int TextAppearanceMedium=0x7f1202e1;
    public static final int TextAppearanceSmall=0x7f1202e2;
    public static final int Theme_AlertDialog=0x7f1202e3;
    public static final int Theme_AlertDialog_Base=0x7f1202e4;
    public static final int Theme_AlertDialog_SettingsLib=0x7f1202e5;
    public static final int Theme_AppCompat=0x7f1202e6;
    public static final int Theme_AppCompat_CompactMenu=0x7f1202e7;
    public static final int Theme_AppCompat_DayNight=0x7f1202e8;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f1202e9;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f1202ea;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f1202eb;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f1202ec;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f1202ed;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f1202ee;
    public static final int Theme_AppCompat_Dialog=0x7f1202ef;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f1202f0;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f1202f1;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f1202f2;
    public static final int Theme_AppCompat_Empty=0x7f1202f3;
    public static final int Theme_AppCompat_Light=0x7f1202f4;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f1202f5;
    public static final int Theme_AppCompat_Light_Dialog=0x7f1202f6;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f1202f7;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f1202f8;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f1202f9;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f1202fa;
    public static final int Theme_AppCompat_NoActionBar=0x7f1202fb;
    public static final int Theme_BluetoothPermission=0x7f1202fc;
    public static final int Theme_CollapsingToolbar_Settings=0x7f1202fd;
    public static final int Theme_ConfirmDeviceCredentials=0x7f1202fe;
    public static final int Theme_ConfirmDeviceCredentialsDark=0x7f1202ff;
    public static final int Theme_ConfirmDeviceCredentialsWork=0x7f120300;
    public static final int Theme_CreateShortCut=0x7f120301;
    public static final int Theme_CryptKeeper=0x7f120302;
    public static final int Theme_Design=0x7f120303;
    public static final int Theme_Design_BottomSheetDialog=0x7f120304;
    public static final int Theme_Design_Light=0x7f120305;
    public static final int Theme_Design_Light_BottomSheetDialog=0x7f120306;
    public static final int Theme_Design_Light_NoActionBar=0x7f120307;
    public static final int Theme_Design_NoActionBar=0x7f120308;
    public static final int Theme_LocalePickerWithRegionActivity=0x7f120309;
    public static final int Theme_MaterialComponents=0x7f12030a;
    public static final int Theme_MaterialComponents_BottomSheetDialog=0x7f12030b;
    public static final int Theme_MaterialComponents_Bridge=0x7f12030c;
    public static final int Theme_MaterialComponents_CompactMenu=0x7f12030d;
    public static final int Theme_MaterialComponents_DayNight=0x7f12030e;
    public static final int Theme_MaterialComponents_DayNight_BottomSheetDialog=0x7f12030f;
    public static final int Theme_MaterialComponents_DayNight_Bridge=0x7f120310;
    public static final int Theme_MaterialComponents_DayNight_DarkActionBar=0x7f120311;
    public static final int Theme_MaterialComponents_DayNight_DarkActionBar_Bridge=0x7f120312;
    public static final int Theme_MaterialComponents_DayNight_Dialog=0x7f120313;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Alert=0x7f120314;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Alert_Bridge=0x7f120315;
    public static final int Theme_MaterialComponents_DayNight_Dialog_Bridge=0x7f120316;
    public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize=0x7f120317;
    public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize_Bridge=0x7f120318;
    public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth=0x7f120319;
    public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth_Bridge=0x7f12031a;
    public static final int Theme_MaterialComponents_DayNight_DialogWhenLarge=0x7f12031b;
    public static final int Theme_MaterialComponents_DayNight_NoActionBar=0x7f12031c;
    public static final int Theme_MaterialComponents_DayNight_NoActionBar_Bridge=0x7f12031d;
    public static final int Theme_MaterialComponents_Dialog=0x7f12031e;
    public static final int Theme_MaterialComponents_Dialog_Alert=0x7f12031f;
    public static final int Theme_MaterialComponents_Dialog_Alert_Bridge=0x7f120320;
    public static final int Theme_MaterialComponents_Dialog_Bridge=0x7f120321;
    public static final int Theme_MaterialComponents_Dialog_FixedSize=0x7f120322;
    public static final int Theme_MaterialComponents_Dialog_FixedSize_Bridge=0x7f120323;
    public static final int Theme_MaterialComponents_Dialog_MinWidth=0x7f120324;
    public static final int Theme_MaterialComponents_Dialog_MinWidth_Bridge=0x7f120325;
    public static final int Theme_MaterialComponents_DialogWhenLarge=0x7f120326;
    public static final int Theme_MaterialComponents_Light=0x7f120327;
    public static final int Theme_MaterialComponents_Light_BarSize=0x7f120328;
    public static final int Theme_MaterialComponents_Light_BottomSheetDialog=0x7f120329;
    public static final int Theme_MaterialComponents_Light_Bridge=0x7f12032a;
    public static final int Theme_MaterialComponents_Light_DarkActionBar=0x7f12032b;
    public static final int Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f12032c;
    public static final int Theme_MaterialComponents_Light_Dialog=0x7f12032d;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert=0x7f12032e;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert_Bridge=0x7f12032f;
    public static final int Theme_MaterialComponents_Light_Dialog_Bridge=0x7f120330;
    public static final int Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f120331;
    public static final int Theme_MaterialComponents_Light_Dialog_FixedSize_Bridge=0x7f120332;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f120333;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth_Bridge=0x7f120334;
    public static final int Theme_MaterialComponents_Light_DialogWhenLarge=0x7f120335;
    public static final int Theme_MaterialComponents_Light_LargeTouch=0x7f120336;
    public static final int Theme_MaterialComponents_Light_NoActionBar=0x7f120337;
    public static final int Theme_MaterialComponents_Light_NoActionBar_Bridge=0x7f120338;
    public static final int Theme_MaterialComponents_NoActionBar=0x7f120339;
    public static final int Theme_MaterialComponents_NoActionBar_Bridge=0x7f12033a;
    public static final int Theme_MediaRouter=0x7f12033b;
    public static final int Theme_MediaRouter_Light=0x7f12033c;
    public static final int Theme_MediaRouter_Light_DarkControlPanel=0x7f12033d;
    public static final int Theme_MediaRouter_LightControlPanel=0x7f12033e;
    /**
     * Note that Dialog themes do not set list dividers
     */
    public static final int Theme_Panel=0x7f12033f;
    public static final int Theme_ProvisioningActivity=0x7f120340;
    public static final int Theme_Settings=0x7f120341;
    public static final int Theme_Settings_ContextualCard=0x7f120342;
    public static final int Theme_Settings_Home=0x7f120343;
    public static final int Theme_Settings_Home_DeepLink=0x7f120344;
    public static final int Theme_Settings_HomeBase=0x7f120345;
    /**
     * Variant of the settings theme with no action bar.
     */
    public static final int Theme_Settings_NoActionBar=0x7f120346;
    /**
     * Only using in Settings application
     */
    public static final int Theme_SettingsBase=0x7f120347;
    public static final int Theme_SubSettings=0x7f120348;
    public static final int Theme_SubSettings_Base=0x7f120349;
    /**
     * Using in SubSettings page including injected settings page
     */
    public static final int Theme_SubSettingsBase=0x7f12034a;
    /**
     * Material theme for the pages containing TabLayout and ViewPager
     * Material theme for the pages containing TabLayout and ViewPager
     */
    public static final int Theme_TabTheme=0x7f12034b;
    public static final int ThemeOverlay_AlertDialog=0x7f12034c;
    public static final int ThemeOverlay_AppCompat=0x7f12034d;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f12034e;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f12034f;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f120350;
    public static final int ThemeOverlay_AppCompat_DayNight=0x7f120351;
    public static final int ThemeOverlay_AppCompat_DayNight_ActionBar=0x7f120352;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f120353;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f120354;
    public static final int ThemeOverlay_AppCompat_Light=0x7f120355;
    public static final int ThemeOverlay_Design_TextInputEditText=0x7f120356;
    public static final int ThemeOverlay_MaterialComponents=0x7f120357;
    public static final int ThemeOverlay_MaterialComponents_ActionBar=0x7f120358;
    public static final int ThemeOverlay_MaterialComponents_ActionBar_Primary=0x7f120359;
    public static final int ThemeOverlay_MaterialComponents_ActionBar_Surface=0x7f12035a;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView=0x7f12035b;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox=0x7f12035c;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x7f12035d;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x7f12035e;
    public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x7f12035f;
    public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Primary=0x7f120360;
    public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Surface=0x7f120361;
    public static final int ThemeOverlay_MaterialComponents_BottomSheetDialog=0x7f120362;
    public static final int ThemeOverlay_MaterialComponents_Dark=0x7f120363;
    public static final int ThemeOverlay_MaterialComponents_Dark_ActionBar=0x7f120364;
    public static final int ThemeOverlay_MaterialComponents_DayNight_BottomSheetDialog=0x7f120365;
    public static final int ThemeOverlay_MaterialComponents_Dialog=0x7f120366;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f120367;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert_Framework=0x7f120368;
    public static final int ThemeOverlay_MaterialComponents_Light=0x7f120369;
    public static final int ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework=0x7f12036a;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog=0x7f12036b;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Centered=0x7f12036c;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date=0x7f12036d;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Calendar=0x7f12036e;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text=0x7f12036f;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text_Day=0x7f120370;
    public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Spinner=0x7f120371;
    public static final int ThemeOverlay_MaterialComponents_MaterialCalendar=0x7f120372;
    public static final int ThemeOverlay_MaterialComponents_MaterialCalendar_Fullscreen=0x7f120373;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText=0x7f120374;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox=0x7f120375;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f120376;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox=0x7f120377;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f120378;
    public static final int ThemeOverlay_MaterialComponents_TimePicker=0x7f120379;
    public static final int ThemeOverlay_MaterialComponents_TimePicker_Display=0x7f12037a;
    public static final int ThemeOverlay_MaterialComponents_Toolbar_Primary=0x7f12037b;
    public static final int ThemeOverlay_MaterialComponents_Toolbar_Surface=0x7f12037c;
    public static final int ThemeOverlay_MediaRouter_Dark=0x7f12037d;
    public static final int ThemeOverlay_MediaRouter_Light=0x7f12037e;
    public static final int ThemeOverlay_SwitchBar_Settings=0x7f12037f;
    public static final int ThemeOverlay_SwitchBar_Settings_Base=0x7f120380;
    public static final int ThemeOverlayColorAccentRed=0x7f120381;
    public static final int Transparent=0x7f120382;
    public static final int TrimmedHorizontalProgressBar=0x7f120383;
    public static final int TrustedCredentialsList=0x7f120384;
    public static final int TwoStateButtonPreference=0x7f120385;
    public static final int Widget_ActionBar=0x7f120386;
    public static final int Widget_ActionBar_Base=0x7f120387;
    public static final int Widget_ActionBar_SubSettings=0x7f120388;
    public static final int Widget_AppCompat_ActionBar=0x7f120389;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f12038a;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f12038b;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f12038c;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f12038d;
    public static final int Widget_AppCompat_ActionButton=0x7f12038e;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f12038f;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f120390;
    public static final int Widget_AppCompat_ActionMode=0x7f120391;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f120392;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f120393;
    public static final int Widget_AppCompat_Button=0x7f120394;
    public static final int Widget_AppCompat_Button_Borderless=0x7f120395;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f120396;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f120397;
    public static final int Widget_AppCompat_Button_Colored=0x7f120398;
    public static final int Widget_AppCompat_Button_Small=0x7f120399;
    public static final int Widget_AppCompat_ButtonBar=0x7f12039a;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f12039b;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f12039c;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f12039d;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f12039e;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f12039f;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f1203a0;
    public static final int Widget_AppCompat_EditText=0x7f1203a1;
    public static final int Widget_AppCompat_ImageButton=0x7f1203a2;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f1203a3;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f1203a4;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f1203a5;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f1203a6;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f1203a7;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f1203a8;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1203a9;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f1203aa;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f1203ab;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f1203ac;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f1203ad;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f1203ae;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f1203af;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f1203b0;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f1203b1;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f1203b2;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f1203b3;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f1203b4;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f1203b5;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f1203b6;
    public static final int Widget_AppCompat_Light_SearchView=0x7f1203b7;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f1203b8;
    public static final int Widget_AppCompat_ListMenuView=0x7f1203b9;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f1203ba;
    public static final int Widget_AppCompat_ListView=0x7f1203bb;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f1203bc;
    public static final int Widget_AppCompat_ListView_Menu=0x7f1203bd;
    public static final int Widget_AppCompat_PopupMenu=0x7f1203be;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f1203bf;
    public static final int Widget_AppCompat_PopupWindow=0x7f1203c0;
    public static final int Widget_AppCompat_ProgressBar=0x7f1203c1;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f1203c2;
    public static final int Widget_AppCompat_ProgressBar_Inline=0x7f1203c3;
    public static final int Widget_AppCompat_RatingBar=0x7f1203c4;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f1203c5;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f1203c6;
    public static final int Widget_AppCompat_SearchView=0x7f1203c7;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f1203c8;
    public static final int Widget_AppCompat_SeekBar=0x7f1203c9;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f1203ca;
    public static final int Widget_AppCompat_SeekBar_Inline=0x7f1203cb;
    public static final int Widget_AppCompat_Spinner=0x7f1203cc;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f1203cd;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f1203ce;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f1203cf;
    public static final int Widget_AppCompat_TextView=0x7f1203d0;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f1203d1;
    public static final int Widget_AppCompat_Toolbar=0x7f1203d2;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f1203d3;
    public static final int Widget_Compat_NotificationActionContainer=0x7f1203d4;
    public static final int Widget_Compat_NotificationActionText=0x7f1203d5;
    public static final int Widget_Design_AppBarLayout=0x7f1203d6;
    public static final int Widget_Design_BottomNavigationView=0x7f1203d7;
    public static final int Widget_Design_BottomSheet_Modal=0x7f1203d8;
    public static final int Widget_Design_CollapsingToolbar=0x7f1203d9;
    public static final int Widget_Design_FloatingActionButton=0x7f1203da;
    public static final int Widget_Design_NavigationView=0x7f1203db;
    public static final int Widget_Design_ScrimInsetsFrameLayout=0x7f1203dc;
    public static final int Widget_Design_Snackbar=0x7f1203dd;
    public static final int Widget_Design_TabLayout=0x7f1203de;
    public static final int Widget_Design_TextInputEditText=0x7f1203df;
    public static final int Widget_Design_TextInputLayout=0x7f1203e0;
    public static final int Widget_MaterialComponents_ActionBar_Primary=0x7f1203e1;
    public static final int Widget_MaterialComponents_ActionBar_PrimarySurface=0x7f1203e2;
    public static final int Widget_MaterialComponents_ActionBar_Solid=0x7f1203e3;
    public static final int Widget_MaterialComponents_ActionBar_Surface=0x7f1203e4;
    public static final int Widget_MaterialComponents_AppBarLayout_Primary=0x7f1203e5;
    public static final int Widget_MaterialComponents_AppBarLayout_PrimarySurface=0x7f1203e6;
    public static final int Widget_MaterialComponents_AppBarLayout_Surface=0x7f1203e7;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox=0x7f1203e8;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox_Dense=0x7f1203e9;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox=0x7f1203ea;
    public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense=0x7f1203eb;
    public static final int Widget_MaterialComponents_Badge=0x7f1203ec;
    public static final int Widget_MaterialComponents_BottomAppBar=0x7f1203ed;
    public static final int Widget_MaterialComponents_BottomAppBar_Colored=0x7f1203ee;
    public static final int Widget_MaterialComponents_BottomAppBar_PrimarySurface=0x7f1203ef;
    public static final int Widget_MaterialComponents_BottomNavigationView=0x7f1203f0;
    public static final int Widget_MaterialComponents_BottomNavigationView_Colored=0x7f1203f1;
    public static final int Widget_MaterialComponents_BottomNavigationView_PrimarySurface=0x7f1203f2;
    public static final int Widget_MaterialComponents_BottomSheet=0x7f1203f3;
    public static final int Widget_MaterialComponents_BottomSheet_Modal=0x7f1203f4;
    public static final int Widget_MaterialComponents_Button=0x7f1203f5;
    public static final int Widget_MaterialComponents_Button_Icon=0x7f1203f6;
    public static final int Widget_MaterialComponents_Button_OutlinedButton=0x7f1203f7;
    public static final int Widget_MaterialComponents_Button_OutlinedButton_Icon=0x7f1203f8;
    public static final int Widget_MaterialComponents_Button_TextButton=0x7f1203f9;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog=0x7f1203fa;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Flush=0x7f1203fb;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Icon=0x7f1203fc;
    public static final int Widget_MaterialComponents_Button_TextButton_Icon=0x7f1203fd;
    public static final int Widget_MaterialComponents_Button_TextButton_Snackbar=0x7f1203fe;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton=0x7f1203ff;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton_Icon=0x7f120400;
    public static final int Widget_MaterialComponents_CardView=0x7f120401;
    public static final int Widget_MaterialComponents_CheckedTextView=0x7f120402;
    public static final int Widget_MaterialComponents_Chip_Action=0x7f120403;
    public static final int Widget_MaterialComponents_Chip_Choice=0x7f120404;
    public static final int Widget_MaterialComponents_Chip_Entry=0x7f120405;
    public static final int Widget_MaterialComponents_Chip_Filter=0x7f120406;
    public static final int Widget_MaterialComponents_ChipGroup=0x7f120407;
    public static final int Widget_MaterialComponents_CircularProgressIndicator=0x7f120408;
    public static final int Widget_MaterialComponents_CircularProgressIndicator_ExtraSmall=0x7f120409;
    public static final int Widget_MaterialComponents_CircularProgressIndicator_Medium=0x7f12040a;
    public static final int Widget_MaterialComponents_CircularProgressIndicator_Small=0x7f12040b;
    public static final int Widget_MaterialComponents_CollapsingToolbar=0x7f12040c;
    public static final int Widget_MaterialComponents_CompoundButton_CheckBox=0x7f12040d;
    public static final int Widget_MaterialComponents_CompoundButton_RadioButton=0x7f12040e;
    public static final int Widget_MaterialComponents_CompoundButton_Switch=0x7f12040f;
    public static final int Widget_MaterialComponents_ExtendedFloatingActionButton=0x7f120410;
    public static final int Widget_MaterialComponents_ExtendedFloatingActionButton_Icon=0x7f120411;
    public static final int Widget_MaterialComponents_FloatingActionButton=0x7f120412;
    public static final int Widget_MaterialComponents_Light_ActionBar_Solid=0x7f120413;
    public static final int Widget_MaterialComponents_LinearProgressIndicator=0x7f120414;
    public static final int Widget_MaterialComponents_MaterialButtonToggleGroup=0x7f120415;
    public static final int Widget_MaterialComponents_MaterialCalendar=0x7f120416;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day=0x7f120417;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Invalid=0x7f120418;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Selected=0x7f120419;
    public static final int Widget_MaterialComponents_MaterialCalendar_Day_Today=0x7f12041a;
    public static final int Widget_MaterialComponents_MaterialCalendar_DayTextView=0x7f12041b;
    public static final int Widget_MaterialComponents_MaterialCalendar_Fullscreen=0x7f12041c;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderCancelButton=0x7f12041d;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderConfirmButton=0x7f12041e;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderDivider=0x7f12041f;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderLayout=0x7f120420;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection=0x7f120421;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection_Fullscreen=0x7f120422;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderTitle=0x7f120423;
    public static final int Widget_MaterialComponents_MaterialCalendar_HeaderToggleButton=0x7f120424;
    public static final int Widget_MaterialComponents_MaterialCalendar_Item=0x7f120425;
    public static final int Widget_MaterialComponents_MaterialCalendar_MonthNavigationButton=0x7f120426;
    public static final int Widget_MaterialComponents_MaterialCalendar_MonthTextView=0x7f120427;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year=0x7f120428;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year_Selected=0x7f120429;
    public static final int Widget_MaterialComponents_MaterialCalendar_Year_Today=0x7f12042a;
    public static final int Widget_MaterialComponents_MaterialCalendar_YearNavigationButton=0x7f12042b;
    public static final int Widget_MaterialComponents_NavigationRailView=0x7f12042c;
    public static final int Widget_MaterialComponents_NavigationRailView_Colored=0x7f12042d;
    public static final int Widget_MaterialComponents_NavigationRailView_Colored_Compact=0x7f12042e;
    public static final int Widget_MaterialComponents_NavigationRailView_Compact=0x7f12042f;
    public static final int Widget_MaterialComponents_NavigationRailView_PrimarySurface=0x7f120430;
    public static final int Widget_MaterialComponents_NavigationView=0x7f120431;
    public static final int Widget_MaterialComponents_PopupMenu=0x7f120432;
    public static final int Widget_MaterialComponents_PopupMenu_ContextMenu=0x7f120433;
    public static final int Widget_MaterialComponents_PopupMenu_ListPopupWindow=0x7f120434;
    public static final int Widget_MaterialComponents_PopupMenu_Overflow=0x7f120435;
    public static final int Widget_MaterialComponents_ProgressIndicator=0x7f120436;
    public static final int Widget_MaterialComponents_ShapeableImageView=0x7f120437;
    public static final int Widget_MaterialComponents_Slider=0x7f120438;
    public static final int Widget_MaterialComponents_Snackbar=0x7f120439;
    public static final int Widget_MaterialComponents_Snackbar_FullWidth=0x7f12043a;
    public static final int Widget_MaterialComponents_Snackbar_TextView=0x7f12043b;
    public static final int Widget_MaterialComponents_TabLayout=0x7f12043c;
    public static final int Widget_MaterialComponents_TabLayout_Colored=0x7f12043d;
    public static final int Widget_MaterialComponents_TabLayout_PrimarySurface=0x7f12043e;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox=0x7f12043f;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f120440;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox=0x7f120441;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f120442;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox=0x7f120443;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense=0x7f120444;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense_ExposedDropdownMenu=0x7f120445;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_ExposedDropdownMenu=0x7f120446;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox=0x7f120447;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense=0x7f120448;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense_ExposedDropdownMenu=0x7f120449;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_ExposedDropdownMenu=0x7f12044a;
    public static final int Widget_MaterialComponents_TextView=0x7f12044b;
    public static final int Widget_MaterialComponents_TimePicker=0x7f12044c;
    public static final int Widget_MaterialComponents_TimePicker_Button=0x7f12044d;
    public static final int Widget_MaterialComponents_TimePicker_Clock=0x7f12044e;
    public static final int Widget_MaterialComponents_TimePicker_Display=0x7f12044f;
    public static final int Widget_MaterialComponents_TimePicker_Display_TextInputEditText=0x7f120450;
    public static final int Widget_MaterialComponents_TimePicker_ImageButton=0x7f120451;
    public static final int Widget_MaterialComponents_TimePicker_ImageButton_ShapeAppearance=0x7f120452;
    public static final int Widget_MaterialComponents_Toolbar=0x7f120453;
    public static final int Widget_MaterialComponents_Toolbar_Primary=0x7f120454;
    public static final int Widget_MaterialComponents_Toolbar_PrimarySurface=0x7f120455;
    public static final int Widget_MaterialComponents_Toolbar_Surface=0x7f120456;
    public static final int Widget_MaterialComponents_Tooltip=0x7f120457;
    public static final int Widget_MediaRouter_Light_MediaRouteButton=0x7f120458;
    public static final int Widget_MediaRouter_MediaRouteButton=0x7f120459;
    public static final int Widget_PopupWindow_Settings=0x7f12045a;
    public static final int Widget_SliceView=0x7f12045b;
    public static final int Widget_SliceView_ContextualCard=0x7f12045c;
    public static final int Widget_SliceView_Panel=0x7f12045d;
    public static final int Widget_SliceView_Panel_Slider=0x7f12045e;
    public static final int Widget_SliceView_Panel_Slider_LargeIcon=0x7f12045f;
    public static final int Widget_SliceView_Settings=0x7f120460;
    public static final int Widget_Support_CoordinatorLayout=0x7f120461;
    public static final int Widget_SwitchBar_Switch=0x7f120462;
    public static final int adb_wireless_item=0x7f120463;
    public static final int adb_wireless_item_content=0x7f120464;
    public static final int adb_wireless_item_label=0x7f120465;
    public static final int adb_wireless_item_progress_text=0x7f120466;
    public static final int adb_wireless_section=0x7f120467;
    public static final int bt_item=0x7f120468;
    public static final int bt_item_edit_content=0x7f120469;
    public static final int device_info_dialog_label=0x7f12046a;
    public static final int device_info_dialog_value=0x7f12046b;
    public static final int entry_layout=0x7f12046c;
    public static final int form_value=0x7f12046d;
    public static final int info_label=0x7f12046e;
    public static final int info_layout=0x7f12046f;
    public static final int info_small=0x7f120470;
    public static final int info_value=0x7f120471;
    public static final int screen_size_imageview_style=0x7f120472;
    public static final int vpn_app_management_version_summary=0x7f120473;
    public static final int vpn_app_management_version_title=0x7f120474;
    public static final int vpn_label=0x7f120475;
    public static final int vpn_value=0x7f120476;
    public static final int vpn_warning=0x7f120477;
    public static final int wifi_advanced_toggle=0x7f120478;
    public static final int wifi_item=0x7f120479;
    public static final int wifi_item_content=0x7f12047a;
    public static final int wifi_item_edit_content=0x7f12047b;
    public static final int wifi_item_label=0x7f12047c;
    public static final int wifi_item_spinner=0x7f12047d;
    public static final int wifi_item_warning=0x7f12047e;
    public static final int wifi_section=0x7f12047f;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.settings:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.settings:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.settings:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.settings:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.settings:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.settings:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.settings:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.settings:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.settings:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.settings:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.settings:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.settings:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.settings:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.settings:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.settings:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.settings:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.settings:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.settings:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.settings:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.settings:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.settings:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.settings:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.settings:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.settings:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.settings:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.settings:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.settings:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f040049, 0x7f040050, 0x7f040051, 0x7f0400ea, 
      0x7f0400eb, 0x7f0400ec, 0x7f0400ed, 0x7f0400ee, 
      0x7f0400ef, 0x7f040118, 0x7f040133, 0x7f040134, 
      0x7f040150, 0x7f0401c2, 0x7f0401ca, 0x7f0401d1, 
      0x7f0401d2, 0x7f0401d6, 0x7f0401e8, 0x7f0401fc, 
      0x7f04026f, 0x7f0402e0, 0x7f040319, 0x7f040332, 
      0x7f040334, 0x7f0403a5, 0x7f0403ab, 0x7f040488, 
      0x7f04049a
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.settings:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.settings:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.settings:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.settings:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.settings:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.settings:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f040049, 0x7f040050, 0x7f0400c2, 0x7f0401c2, 
      0x7f0403ab, 0x7f04049a
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.settings:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.settings:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f04016c, 0x7f0401ee
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a ActivityFilter.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityFilter_activityAction com.android.settings:activityAction}</code></td><td>Action used for activity launch.</td></tr>
     * <tr><td><code>{@link #ActivityFilter_activityName com.android.settings:activityName}</code></td><td>Component name of the primary activity in the split.</td></tr>
     * </table>
     * @see #ActivityFilter_activityAction
     * @see #ActivityFilter_activityName
     */
    public static final int[] ActivityFilter={
      0x7f040025, 0x7f040027
    };
    /**
     * <p>
     * @attr description
     * Action used for activity launch. May be empty. Must not contain wildcards.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:activityAction
     */
    public static final int ActivityFilter_activityAction=0;
    /**
     * <p>
     * @attr description
     * Component name of the primary activity in the split. Must be non-empty. Can contain a
     * single wildcard at the end.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:activityName
     */
    public static final int ActivityFilter_activityName=1;
    /**
     * Attributes that can be used with a ActivityRule.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityRule_alwaysExpand com.android.settings:alwaysExpand}</code></td><td>Whether the activity should always be expanded on launch.</td></tr>
     * </table>
     * @see #ActivityRule_alwaysExpand
     */
    public static final int[] ActivityRule={
      0x7f040034
    };
    /**
     * <p>
     * @attr description
     * Whether the activity should always be expanded on launch.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:alwaysExpand
     */
    public static final int ActivityRule_alwaysExpand=0;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.android.settings:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.settings:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.settings:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.settings:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.settings:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.settings:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.settings:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f040084, 0x7f040085, 0x7f040263, 
      0x7f040264, 0x7f0402dc, 0x7f040371, 0x7f040375
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded com.android.settings:expanded}</code></td><td>The initial expanded state for the AppBarLayout.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScroll com.android.settings:liftOnScroll}</code></td><td>Whether the {@link AppBarLayout} should lift on scroll.</td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScrollTargetViewId com.android.settings:liftOnScrollTargetViewId}</code></td><td>The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).</td></tr>
     * <tr><td><code>{@link #AppBarLayout_statusBarForeground com.android.settings:statusBarForeground}</code></td><td>The drawable to display in front of the layout's content, but behind the status bar.</td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     * @see #AppBarLayout_liftOnScroll
     * @see #AppBarLayout_liftOnScrollTargetViewId
     * @see #AppBarLayout_statusBarForeground
     */
    public static final int[] AppBarLayout={
      0x010100d4, 0x0101048f, 0x01010540, 0x7f040150, 
      0x7f04016e, 0x7f040259, 0x7f04025a, 0x7f04039c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static final int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static final int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Deprecated. Elevation is now controlled via a state list animator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int AppBarLayout_elevation=3;
    /**
     * <p>
     * @attr description
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:expanded
     */
    public static final int AppBarLayout_expanded=4;
    /**
     * <p>
     * @attr description
     * Whether the {@link AppBarLayout} should lift on scroll. If set to
     * true, the {@link AppBarLayout} will animate to the lifted, or
     * elevated, state when content is scrolled beneath it. Requires
     * `app:layout_behavior="@string/appbar_scrolling_view_behavior` to be
     * set on the scrolling sibling (e.g., `NestedScrollView`,
     * `RecyclerView`, etc.). Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:liftOnScroll
     */
    public static final int AppBarLayout_liftOnScroll=5;
    /**
     * <p>
     * @attr description
     * The id of the view that the {@link AppBarLayout} should use to determine whether
     * it should be lifted (i.e., only if {@link R.attr#liftOnScroll} is set to true).
     * If this id is not set, the {@link AppBarLayout} will use the target view provided
     * by nested scrolling to determine whether it should be lifted.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:liftOnScrollTargetViewId
     */
    public static final int AppBarLayout_liftOnScrollTargetViewId=6;
    /**
     * <p>
     * @attr description
     * The drawable to display in front of the layout's content, but behind the status bar.
     * Only works on Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:statusBarForeground
     */
    public static final int AppBarLayout_statusBarForeground=7;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed com.android.settings:state_collapsed}</code></td><td>@deprecated in favor of {@link R.attr#state_lifted}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible com.android.settings:state_collapsible}</code></td><td>@deprecated in favor of {@link R.attr#state_liftable}.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_liftable com.android.settings:state_liftable}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_lifted com.android.settings:state_lifted}</code></td><td>State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).</td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     * @see #AppBarLayoutStates_state_liftable
     * @see #AppBarLayoutStates_state_lifted
     */
    @Deprecated
    public static final int[] AppBarLayoutStates={
      0x7f040392, 0x7f040393, 0x7f040396, 0x7f040397
    };
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_lifted}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_collapsed
     */
    @Deprecated
    public static final int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>
     * @attr description
     * @deprecated in favor of {@link R.attr#state_liftable}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_collapsible
     */
    @Deprecated
    public static final int AppBarLayoutStates_state_collapsible=1;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is liftable (e.g., elevates on collapse or scroll).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_liftable
     */
    public static final int AppBarLayoutStates_state_liftable=2;
    /**
     * <p>
     * @attr description
     * State value for {@link com.google.android.material.appbar.AppBarLayout} set when the view
     * is lifted (elevated).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_lifted
     */
    public static final int AppBarLayoutStates_state_lifted=3;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags com.android.settings:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator com.android.settings:layout_scrollInterpolator}</code></td><td>An interpolator to use when scrolling this View.</td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
      0x7f040257, 0x7f040258
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>noScroll</td><td>0</td><td>Disable scrolling on the view. This flag should not be combined with any of the other
     * scroll flags.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * <tr><td>snapMargins</td><td>20</td><td>An additional flag to be used with 'snap'. If set, the view will be snapped to its
     * top and bottom margins, as opposed to the edges of the view itself.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_scrollFlags
     */
    public static final int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>
     * @attr description
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout_scrollInterpolator
     */
    public static final int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.settings:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.settings:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.settings:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f040389, 0x7f040485, 0x7f040487
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.settings:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.settings:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.settings:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f040480, 0x7f040481, 0x7f040482
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.settings:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.settings:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.settings:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.settings:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.settings:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.android.settings:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.android.settings:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.android.settings:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.android.settings:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.android.settings:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.android.settings:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.android.settings:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.android.settings:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.android.settings:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.settings:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.android.settings:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.android.settings:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.android.settings:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.settings:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.android.settings:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f040043, 0x7f040044, 0x7f040045, 
      0x7f040046, 0x7f040047, 0x7f04013d, 0x7f04013e, 
      0x7f04013f, 0x7f040140, 0x7f040142, 0x7f040143, 
      0x7f040144, 0x7f040145, 0x7f04018c, 0x7f0401a3, 
      0x7f0401ac, 0x7f040217, 0x7f04025c, 0x7f04044e, 
      0x7f04046c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:drawableBottomCompat
     */
    public static final int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:drawableEndCompat
     */
    public static final int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:drawableLeftCompat
     */
    public static final int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:drawableRightCompat
     */
    public static final int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:drawableStartCompat
     */
    public static final int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:drawableTint
     */
    public static final int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:drawableTintMode
     */
    public static final int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:drawableTopCompat
     */
    public static final int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontVariationSettings
     */
    public static final int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:textLocale
     */
    public static final int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.settings:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.settings:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.settings:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.settings:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.settings:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.settings:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.settings:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.settings:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.settings:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.settings:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.settings:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.settings:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.settings:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.settings:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.settings:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.settings:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.settings:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseContentDescription com.android.settings:actionModeCloseContentDescription}</code></td><td>Content description to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.settings:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.settings:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.settings:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.settings:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.settings:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.settings:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.settings:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.settings:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.settings:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.settings:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeTheme com.android.settings:actionModeTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar in action mode.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.settings:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.settings:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.settings:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.settings:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.settings:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.settings:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.settings:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.settings:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.settings:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.settings:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.settings:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.settings:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.settings:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.settings:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.settings:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.settings:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.settings:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.settings:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.settings:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.settings:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.settings:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.settings:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.settings:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.settings:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.settings:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.settings:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.settings:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.settings:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.settings:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.settings:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.android.settings:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.settings:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.settings:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.settings:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.settings:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.settings:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.settings:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.settings:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.settings:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.settings:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.settings:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.settings:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.settings:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.android.settings:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.android.settings:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.settings:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.settings:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.settings:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.settings:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.settings:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.settings:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.android.settings:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.settings:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.settings:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.android.settings:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.settings:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.settings:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.settings:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.settings:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.settings:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.settings:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.settings:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.settings:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.settings:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.settings:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.settings:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.settings:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.settings:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.settings:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.settings:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.settings:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.settings:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.settings:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.settings:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.settings:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.settings:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.settings:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.settings:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.settings:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.settings:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.settings:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.settings:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.settings:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.settings:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.settings:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.android.settings:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.settings:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.settings:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.settings:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.settings:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.settings:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.settings:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.settings:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.settings:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.settings:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.settings:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseContentDescription
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeTheme
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
      0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
      0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
      0x7f04000a, 0x7f04000b, 0x7f04000d, 0x7f04000f, 
      0x7f040010, 0x7f040011, 0x7f040012, 0x7f040013, 
      0x7f040014, 0x7f040015, 0x7f040016, 0x7f040017, 
      0x7f040018, 0x7f040019, 0x7f04001a, 0x7f04001b, 
      0x7f04001c, 0x7f04001d, 0x7f04001e, 0x7f04001f, 
      0x7f040020, 0x7f040021, 0x7f040026, 0x7f040029, 
      0x7f04002a, 0x7f04002b, 0x7f04002c, 0x7f040042, 
      0x7f040069, 0x7f04007d, 0x7f04007e, 0x7f04007f, 
      0x7f040080, 0x7f040081, 0x7f040086, 0x7f040087, 
      0x7f040095, 0x7f04009e, 0x7f0400ca, 0x7f0400cb, 
      0x7f0400cc, 0x7f0400cd, 0x7f0400ce, 0x7f0400cf, 
      0x7f0400d0, 0x7f0400d7, 0x7f0400d8, 0x7f0400de, 
      0x7f0400fa, 0x7f040128, 0x7f04012d, 0x7f04012e, 
      0x7f040135, 0x7f040137, 0x7f040148, 0x7f040149, 
      0x7f04014c, 0x7f04014d, 0x7f04014f, 0x7f0401d1, 
      0x7f0401e3, 0x7f04025f, 0x7f040260, 0x7f040261, 
      0x7f040262, 0x7f040265, 0x7f040266, 0x7f040267, 
      0x7f040268, 0x7f040269, 0x7f04026a, 0x7f04026b, 
      0x7f04026c, 0x7f04026d, 0x7f0402ff, 0x7f040300, 
      0x7f040301, 0x7f040318, 0x7f04031a, 0x7f040338, 
      0x7f04033a, 0x7f04033b, 0x7f04033c, 0x7f040354, 
      0x7f04035c, 0x7f04035e, 0x7f04035f, 0x7f040382, 
      0x7f040383, 0x7f04042a, 0x7f040459, 0x7f04045b, 
      0x7f04045c, 0x7f04045d, 0x7f04045f, 0x7f040460, 
      0x7f040461, 0x7f040462, 0x7f040466, 0x7f040467, 
      0x7f04049c, 0x7f04049d, 0x7f04049e, 0x7f04049f, 
      0x7f0404c2, 0x7f0404cf, 0x7f0404d0, 0x7f0404d1, 
      0x7f0404d2, 0x7f0404d3, 0x7f0404d4, 0x7f0404d5, 
      0x7f0404d6, 0x7f0404d7, 0x7f0404d8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Content description to use for the close action mode button
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:actionModeCloseContentDescription
     */
    public static final int AppCompatTheme_actionModeCloseContentDescription=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=24;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=26;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=27;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=29;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeTheme
     */
    public static final int AppCompatTheme_actionModeTheme=30;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=33;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=37;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=38;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=39;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=43;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=44;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=45;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=46;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=47;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=48;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=49;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=50;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=53;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=54;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=55;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorError
     */
    public static final int AppCompatTheme_colorError=56;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=57;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=58;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=59;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=60;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=61;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=62;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=63;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=64;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=65;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=66;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=67;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=68;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=69;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=70;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=71;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=72;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=73;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listChoiceIndicatorMultipleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated=74;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listChoiceIndicatorSingleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated=75;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=76;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=78;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=79;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=80;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemPaddingEnd
     */
    public static final int AppCompatTheme_listPreferredItemPaddingEnd=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=83;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=84;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemPaddingStart
     */
    public static final int AppCompatTheme_listPreferredItemPaddingStart=85;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=86;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=87;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=88;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=89;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=90;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=91;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=92;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=93;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=94;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=95;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=96;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=97;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=98;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=99;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=100;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=103;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=104;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=107;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=108;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=109;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=110;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=111;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=112;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=113;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=114;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=115;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=117;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=118;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=119;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=121;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=122;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=123;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=124;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=125;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=126;
    /**
     * For AspectRatioFrameLayout
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AspectRatioFrameLayout_aspectRatio com.android.settings:aspectRatio}</code></td><td></td></tr>
     * </table>
     * @see #AspectRatioFrameLayout_aspectRatio
     */
    public static final int[] AspectRatioFrameLayout={
      0x7f04003f
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#aspectRatio}
     * attribute's value can be found in the {@link #AspectRatioFrameLayout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:aspectRatio
     */
    public static final int AspectRatioFrameLayout_aspectRatio=0;
    /**
     * Attributes that can be used with a BackgroundStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.android.settings:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
      0x0101030e, 0x7f04035e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a Badge.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Badge_backgroundColor com.android.settings:backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeGravity com.android.settings:badgeGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_badgeTextColor com.android.settings:badgeTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_horizontalOffset com.android.settings:horizontalOffset}</code></td><td>Offset moves the badge towards the center of its anchor.</td></tr>
     * <tr><td><code>{@link #Badge_maxCharacterCount com.android.settings:maxCharacterCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_number com.android.settings:number}</code></td><td></td></tr>
     * <tr><td><code>{@link #Badge_verticalOffset com.android.settings:verticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #Badge_backgroundColor
     * @see #Badge_badgeGravity
     * @see #Badge_badgeTextColor
     * @see #Badge_horizontalOffset
     * @see #Badge_maxCharacterCount
     * @see #Badge_number
     * @see #Badge_verticalOffset
     */
    public static final int[] Badge={
      0x7f04004a, 0x7f040054, 0x7f040056, 0x7f0401d3, 
      0x7f0402a0, 0x7f0402e8, 0x7f0404c1
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#backgroundColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundColor
     */
    public static final int Badge_backgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#badgeGravity}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>BOTTOM_END</td><td>800055</td><td>Gravity.BOTTOM | Gravity.END</td></tr>
     * <tr><td>BOTTOM_START</td><td>800053</td><td>Gravity.BOTTOM | Gravity.START</td></tr>
     * <tr><td>TOP_END</td><td>800035</td><td>Gravity.TOP | Gravity.END</td></tr>
     * <tr><td>TOP_START</td><td>800033</td><td>Gravity.TOP | Gravity.START</td></tr>
     * </table>
     *
     * @attr name com.android.settings:badgeGravity
     */
    public static final int Badge_badgeGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#badgeTextColor}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:badgeTextColor
     */
    public static final int Badge_badgeTextColor=2;
    /**
     * <p>
     * @attr description
     * Offset moves the badge towards the center of its anchor.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:horizontalOffset
     */
    public static final int Badge_horizontalOffset=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxCharacterCount}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:maxCharacterCount
     */
    public static final int Badge_maxCharacterCount=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#number}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:number
     */
    public static final int Badge_number=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#verticalOffset}
     * attribute's value can be found in the {@link #Badge} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:verticalOffset
     */
    public static final int Badge_verticalOffset=6;
    /**
     * Attributes that can be used with a BannerMessagePreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BannerMessagePreference_attentionLevel com.android.settings:attentionLevel}</code></td><td></td></tr>
     * <tr><td><code>{@link #BannerMessagePreference_subtitle com.android.settings:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * </table>
     * @see #BannerMessagePreference_attentionLevel
     * @see #BannerMessagePreference_subtitle
     */
    public static final int[] BannerMessagePreference={
      0x7f040040, 0x7f0403a5
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#attentionLevel}
     * attribute's value can be found in the {@link #BannerMessagePreference} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>high</td><td>0</td><td></td></tr>
     * <tr><td>low</td><td>2</td><td></td></tr>
     * <tr><td>medium</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:attentionLevel
     */
    public static final int BannerMessagePreference_attentionLevel=0;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:subtitle
     */
    public static final int BannerMessagePreference_subtitle=1;
    /**
     * Attributes that can be used with a BaseProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_android_indeterminate android:indeterminate}</code></td><td></td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_hideAnimationBehavior com.android.settings:hideAnimationBehavior}</code></td><td>The animation behavior to hide the indicator and track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_indicatorColor com.android.settings:indicatorColor}</code></td><td>The indicator color (or colors in an array).</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_minHideDelay com.android.settings:minHideDelay}</code></td><td>The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_showAnimationBehavior com.android.settings:showAnimationBehavior}</code></td><td>The animation behavior to show the indicator and track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_showDelay com.android.settings:showDelay}</code></td><td>The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackColor com.android.settings:trackColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackCornerRadius com.android.settings:trackCornerRadius}</code></td><td>The radius of each corner of both the indicator and the track.</td></tr>
     * <tr><td><code>{@link #BaseProgressIndicator_trackThickness com.android.settings:trackThickness}</code></td><td>The thickness of the progress track and indicator.</td></tr>
     * </table>
     * @see #BaseProgressIndicator_android_indeterminate
     * @see #BaseProgressIndicator_hideAnimationBehavior
     * @see #BaseProgressIndicator_indicatorColor
     * @see #BaseProgressIndicator_minHideDelay
     * @see #BaseProgressIndicator_showAnimationBehavior
     * @see #BaseProgressIndicator_showDelay
     * @see #BaseProgressIndicator_trackColor
     * @see #BaseProgressIndicator_trackCornerRadius
     * @see #BaseProgressIndicator_trackThickness
     */
    public static final int[] BaseProgressIndicator={
      0x01010139, 0x7f0401c7, 0x7f0401e9, 0x7f0402bc, 
      0x7f040369, 0x7f04036b, 0x7f0404a6, 0x7f0404a9, 
      0x7f0404ab
    };
    /**
     * <p>
     * @attr description
     * Whether the progress indicator should be indeterminate mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:indeterminate
     */
    public static final int BaseProgressIndicator_android_indeterminate=0;
    /**
     * <p>
     * @attr description
     * The animation behavior to hide the indicator and track.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Collapses from the top edge to the bottom edge for the linear type;
     * collapses from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; disappears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Collapses from the bottom edge to the top edge for the linear type;
     * collapses from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:hideAnimationBehavior
     */
    public static final int BaseProgressIndicator_hideAnimationBehavior=1;
    /**
     * <p>
     * @attr description
     * The indicator color (or colors in an array). By default, it uses theme
     * primary color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:indicatorColor
     */
    public static final int BaseProgressIndicator_indicatorColor=2;
    /**
     * <p>
     * @attr description
     * The minimum time, in milliseconds, that the requested hide action will
     * wait to start once show action is started. If set to zero or negative
     * values (-1 as default), the requested hide action will start immediately.
     * This value is capped to a limit defined in ProgressIndicator class.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:minHideDelay
     */
    public static final int BaseProgressIndicator_minHideDelay=3;
    /**
     * <p>
     * @attr description
     * The animation behavior to show the indicator and track.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>inward</td><td>2</td><td>Expands from the top edge to the bottom edge for the linear type;
     * expands from the outer edge to the inner edge for the circular type.</td></tr>
     * <tr><td>none</td><td>0</td><td>No animation used; appears immediately.</td></tr>
     * <tr><td>outward</td><td>1</td><td>Expands from the bottom edge to the top edge for the linear type;
     * expands from the inner edge to the outer edge for the circular type.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:showAnimationBehavior
     */
    public static final int BaseProgressIndicator_showAnimationBehavior=4;
    /**
     * <p>
     * @attr description
     * The time, in milliseconds, that the progress indicator will wait to show
     * once show() is called. If set to zero or negative values (-1 as default),
     * the show action will start immediately.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:showDelay
     */
    public static final int BaseProgressIndicator_showDelay=5;
    /**
     * <p>
     * @attr description
     * The color used for the progress track. If not defined, it will be set to
     * the indicatorColor and apply the android:disabledAlpha from the theme.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:trackColor
     */
    public static final int BaseProgressIndicator_trackColor=6;
    /**
     * <p>
     * @attr description
     * The radius of each corner of both the indicator and the track. A radius
     * larger than half of the track width will throw exceptions during
     * initialization.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:trackCornerRadius
     */
    public static final int BaseProgressIndicator_trackCornerRadius=7;
    /**
     * <p>
     * @attr description
     * The thickness of the progress track and indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:trackThickness
     */
    public static final int BaseProgressIndicator_trackThickness=8;
    /**
     * For biometric enroll checkboxes
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BiometricEnrollCheckbox_description com.android.settings:description}</code></td><td></td></tr>
     * <tr><td><code>{@link #BiometricEnrollCheckbox_icon com.android.settings:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #BiometricEnrollCheckbox_title com.android.settings:title}</code></td><td></td></tr>
     * </table>
     * @see #BiometricEnrollCheckbox_description
     * @see #BiometricEnrollCheckbox_icon
     * @see #BiometricEnrollCheckbox_title
     */
    public static final int[] BiometricEnrollCheckbox={
      0x7f040127, 0x7f0401d6, 0x7f040488
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#description}
     * attribute's value can be found in the {@link #BiometricEnrollCheckbox} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:description
     */
    public static final int BiometricEnrollCheckbox_description=0;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:icon
     */
    public static final int BiometricEnrollCheckbox_icon=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#title}
     * attribute's value can be found in the {@link #BiometricEnrollCheckbox} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:title
     */
    public static final int BiometricEnrollCheckbox_title=2;
    /**
     * Attributes that can be used with a BottomAppBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomAppBar_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAlignmentMode com.android.settings:fabAlignmentMode}</code></td><td>The alignment of the fab relative to the BottomAppBar.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAnimationMode com.android.settings:fabAnimationMode}</code></td><td>The animation mode that should be used when the fab animates between alignment modes.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleMargin com.android.settings:fabCradleMargin}</code></td><td>The margin between the semi-circular cradle for the fab and the fab.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleRoundedCornerRadius com.android.settings:fabCradleRoundedCornerRadius}</code></td><td>The radius of the rounded corners on each side of the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleVerticalOffset com.android.settings:fabCradleVerticalOffset}</code></td><td>The vertical offset between the fab from the cradle.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_hideOnScroll com.android.settings:hideOnScroll}</code></td><td>Whether the BottomAppBar should hide when a NestedScrollView is scrolled.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingBottomSystemWindowInsets com.android.settings:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingLeftSystemWindowInsets com.android.settings:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_paddingRightSystemWindowInsets com.android.settings:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * </table>
     * @see #BottomAppBar_backgroundTint
     * @see #BottomAppBar_elevation
     * @see #BottomAppBar_fabAlignmentMode
     * @see #BottomAppBar_fabAnimationMode
     * @see #BottomAppBar_fabCradleMargin
     * @see #BottomAppBar_fabCradleRoundedCornerRadius
     * @see #BottomAppBar_fabCradleVerticalOffset
     * @see #BottomAppBar_hideOnScroll
     * @see #BottomAppBar_paddingBottomSystemWindowInsets
     * @see #BottomAppBar_paddingLeftSystemWindowInsets
     * @see #BottomAppBar_paddingRightSystemWindowInsets
     */
    public static final int[] BottomAppBar={
      0x7f040052, 0x7f040150, 0x7f04017c, 0x7f04017d, 
      0x7f04017e, 0x7f04017f, 0x7f040180, 0x7f0401cb, 
      0x7f0402f7, 0x7f0402f9, 0x7f0402fa
    };
    /**
     * <p>
     * @attr description
     * Background for the BottomAppBar.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int BottomAppBar_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Elevation for the BottomAppBar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int BottomAppBar_elevation=1;
    /**
     * <p>
     * @attr description
     * The alignment of the fab relative to the BottomAppBar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td>Mode that aligns the fab to the center.</td></tr>
     * <tr><td>end</td><td>1</td><td>Mode that aligns the fab to the end.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:fabAlignmentMode
     */
    public static final int BottomAppBar_fabAlignmentMode=2;
    /**
     * <p>
     * @attr description
     * The animation mode that should be used when the fab animates between alignment modes.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>scale</td><td>0</td><td>Mode that scales the fab down to a point, moves it, then scales the fab back to its normal size.</td></tr>
     * <tr><td>slide</td><td>1</td><td>Mode that slides the fab from one alignment mode to the next.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:fabAnimationMode
     */
    public static final int BottomAppBar_fabAnimationMode=3;
    /**
     * <p>
     * @attr description
     * The margin between the semi-circular cradle for the fab and the fab.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:fabCradleMargin
     */
    public static final int BottomAppBar_fabCradleMargin=4;
    /**
     * <p>
     * @attr description
     * The radius of the rounded corners on each side of the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:fabCradleRoundedCornerRadius
     */
    public static final int BottomAppBar_fabCradleRoundedCornerRadius=5;
    /**
     * <p>
     * @attr description
     * The vertical offset between the fab from the cradle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:fabCradleVerticalOffset
     */
    public static final int BottomAppBar_fabCradleVerticalOffset=6;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should hide when a NestedScrollView is scrolled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:hideOnScroll
     */
    public static final int BottomAppBar_hideOnScroll=7;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be above the bottom window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingBottomSystemWindowInsets
     */
    public static final int BottomAppBar_paddingBottomSystemWindowInsets=8;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be to the right of the left window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingLeftSystemWindowInsets
     */
    public static final int BottomAppBar_paddingLeftSystemWindowInsets=9;
    /**
     * <p>
     * @attr description
     * Whether the BottomAppBar should apply padding to be to the left of the right window insets.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingRightSystemWindowInsets
     */
    public static final int BottomAppBar_paddingRightSystemWindowInsets=10;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemHorizontalTranslationEnabled com.android.settings:itemHorizontalTranslationEnabled}</code></td><td>Whether the items translate horizontally when in "selected" label visibility mode.</td></tr>
     * </table>
     * @see #BottomNavigationView_itemHorizontalTranslationEnabled
     */
    public static final int[] BottomNavigationView={
      0x7f0401f7
    };
    /**
     * <p>
     * @attr description
     * Whether the items translate horizontally when in "selected" label visibility mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:itemHorizontalTranslationEnabled
     */
    public static final int BottomNavigationView_itemHorizontalTranslationEnabled=0;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_draggable com.android.settings:behavior_draggable}</code></td><td>Whether this bottom sheet is draggable.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_expandedOffset com.android.settings:behavior_expandedOffset}</code></td><td>The top offset of the BottomSheet in the expanded-state when fitsToContent is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_fitToContents com.android.settings:behavior_fitToContents}</code></td><td>Whether height of expanded sheet wraps content or not</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_halfExpandedRatio com.android.settings:behavior_halfExpandedRatio}</code></td><td>The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable com.android.settings:behavior_hideable}</code></td><td>Whether this bottom sheet can be hidden by dragging it further downwards</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight com.android.settings:behavior_peekHeight}</code></td><td>The height of the bottom sheet when it is collapsed.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_saveFlags com.android.settings:behavior_saveFlags}</code></td><td>Behavior properties will be saved and restored by evaluating each flag.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed com.android.settings:behavior_skipCollapsed}</code></td><td>Skip the collapsed state once expanded; no effect unless it is hideable</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_gestureInsetBottomIgnored com.android.settings:gestureInsetBottomIgnored}</code></td><td>Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets com.android.settings:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets com.android.settings:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingRightSystemWindowInsets com.android.settings:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_paddingTopSystemWindowInsets com.android.settings:paddingTopSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_android_maxWidth
     * @see #BottomSheetBehavior_Layout_android_elevation
     * @see #BottomSheetBehavior_Layout_backgroundTint
     * @see #BottomSheetBehavior_Layout_behavior_draggable
     * @see #BottomSheetBehavior_Layout_behavior_expandedOffset
     * @see #BottomSheetBehavior_Layout_behavior_fitToContents
     * @see #BottomSheetBehavior_Layout_behavior_halfExpandedRatio
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_saveFlags
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     * @see #BottomSheetBehavior_Layout_gestureInsetBottomIgnored
     * @see #BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_paddingRightSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_paddingTopSystemWindowInsets
     * @see #BottomSheetBehavior_Layout_shapeAppearance
     * @see #BottomSheetBehavior_Layout_shapeAppearanceOverlay
     */
    public static final int[] BottomSheetBehavior_Layout={
      0x0101011f, 0x01010440, 0x7f040052, 0x7f04005e, 
      0x7f04005f, 0x7f040060, 0x7f040061, 0x7f040062, 
      0x7f040064, 0x7f040065, 0x7f040066, 0x7f0401b5, 
      0x7f0402f7, 0x7f0402f9, 0x7f0402fa, 0x7f0402fd, 
      0x7f040362, 0x7f040365
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int BottomSheetBehavior_Layout_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int BottomSheetBehavior_Layout_android_elevation=1;
    /**
     * <p>
     * @attr description
     * Background color used by the BottomSheetBehavior background drawable when shape theming is
     * enabled. Accepts a ColorStateList or ColorInt. If shape theming is not enabled,
     * android:background should instead be utilized to set the background resource.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int BottomSheetBehavior_Layout_backgroundTint=2;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet is draggable. If not, the app will have to supply different
     * means to expand and collapse the sheet
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_draggable
     */
    public static final int BottomSheetBehavior_Layout_behavior_draggable=3;
    /**
     * <p>
     * @attr description
     * The top offset of the BottomSheet in the expanded-state when fitsToContent is false.
     * The default value is 0, which results in the sheet matching the parent's top.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:behavior_expandedOffset
     */
    public static final int BottomSheetBehavior_Layout_behavior_expandedOffset=4;
    /**
     * <p>
     * @attr description
     * Whether height of expanded sheet wraps content or not
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_fitToContents
     */
    public static final int BottomSheetBehavior_Layout_behavior_fitToContents=5;
    /**
     * <p>
     * @attr description
     * The ratio to be used to set the height of half-expanded state in proportion to parent, when
     * fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a
     * float value between 0 and 1 and produce a half-expanded state height larger than the
     * peek height for the half-expanded state to be operational
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:behavior_halfExpandedRatio
     */
    public static final int BottomSheetBehavior_Layout_behavior_halfExpandedRatio=6;
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet can be hidden by dragging it further downwards
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_hideable
     */
    public static final int BottomSheetBehavior_Layout_behavior_hideable=7;
    /**
     * <p>
     * @attr description
     * The height of the bottom sheet when it is collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     *
     * @attr name com.android.settings:behavior_peekHeight
     */
    public static final int BottomSheetBehavior_Layout_behavior_peekHeight=8;
    /**
     * <p>
     * @attr description
     * Behavior properties will be saved and restored by evaluating each flag.
     * usage: app:behavior_saveFlags=”hideable|skipCollapsed”
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>ffffffff</td><td>This flag will preserve the all the aforementioned values on configuration change.</td></tr>
     * <tr><td>fitToContents</td><td>2</td><td>This flag will preserve the fitToContents boolean value on configuration change.</td></tr>
     * <tr><td>hideable</td><td>4</td><td>This flag will preserve the hideable boolean value on configuration change.</td></tr>
     * <tr><td>none</td><td>0</td><td>This flag will not preserve the aforementioned values on configuration change. The only
     * value preserved will be the positional state, e.g. collapsed, hidden, expanded, etc.
     * This is the default behavior.</td></tr>
     * <tr><td>peekHeight</td><td>1</td><td>This flag will preserve the peekHeight on configuration change.</td></tr>
     * <tr><td>skipCollapsed</td><td>8</td><td>This flag will preserve the skipCollapsed boolean value on configuration change.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:behavior_saveFlags
     */
    public static final int BottomSheetBehavior_Layout_behavior_saveFlags=9;
    /**
     * <p>
     * @attr description
     * Skip the collapsed state once expanded; no effect unless it is hideable
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_skipCollapsed
     */
    public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed=10;
    /**
     * <p>
     * @attr description
     * Sets whether this bottom sheet should adjust it's position based on the system gesture area
     * on Android Q and above. Value is false (insets respected) by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:gestureInsetBottomIgnored
     */
    public static final int BottomSheetBehavior_Layout_gestureInsetBottomIgnored=11;
    /**
     * <p>
     * @attr description
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingBottomSystemWindowInsets
     */
    public static final int BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#paddingLeftSystemWindowInsets}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingLeftSystemWindowInsets
     */
    public static final int BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#paddingRightSystemWindowInsets}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingRightSystemWindowInsets
     */
    public static final int BottomSheetBehavior_Layout_paddingRightSystemWindowInsets=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#paddingTopSystemWindowInsets}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingTopSystemWindowInsets
     */
    public static final int BottomSheetBehavior_Layout_paddingTopSystemWindowInsets=15;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for BottomSheet. Attribute declaration is in the shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int BottomSheetBehavior_Layout_shapeAppearance=16;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for BottomSheet. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int BottomSheetBehavior_Layout_shapeAppearanceOverlay=17;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.settings:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f040030
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.android.settings:queryPatterns}</code></td><td>Resource reference to the string array of query patterns for a custom capability.</td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.android.settings:shortcutMatchRequired}</code></td><td>Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.</td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x7f040337, 0x7f040367
    };
    /**
     * <p>
     * @attr description
     * Resource reference to the string array of query patterns for a custom capability.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:queryPatterns
     */
    public static final int Capability_queryPatterns=0;
    /**
     * <p>
     * @attr description
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:shortcutMatchRequired
     */
    public static final int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.android.settings:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.android.settings:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.android.settings:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.android.settings:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.android.settings:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.android.settings:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.android.settings:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.android.settings:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.android.settings:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.android.settings:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.android.settings:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x7f04008a, 0x7f04008b, 
      0x7f04008c, 0x7f04008e, 0x7f040090, 0x7f040091, 
      0x7f0400f0, 0x7f0400f1, 0x7f0400f3, 0x7f0400f4, 
      0x7f0400f6
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a ChartGridView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartGridView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_borderDrawable com.android.settings:borderDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_primaryDrawable com.android.settings:primaryDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_secondaryDrawable com.android.settings:secondaryDrawable}</code></td><td></td></tr>
     * </table>
     * @see #ChartGridView_android_textAppearance
     * @see #ChartGridView_android_textColor
     * @see #ChartGridView_borderDrawable
     * @see #ChartGridView_primaryDrawable
     * @see #ChartGridView_secondaryDrawable
     */
    public static final int[] ChartGridView={
      0x01010034, 0x01010098, 0x7f040067, 0x7f04032e, 
      0x7f040358
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ChartGridView_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int ChartGridView_android_textColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#borderDrawable}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:borderDrawable
     */
    public static final int ChartGridView_borderDrawable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#primaryDrawable}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:primaryDrawable
     */
    public static final int ChartGridView_primaryDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#secondaryDrawable}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:secondaryDrawable
     */
    public static final int ChartGridView_secondaryDrawable=4;
    /**
     * Attributes that can be used with a ChartSweepView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartSweepView_followAxis com.android.settings:followAxis}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_labelColor com.android.settings:labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_labelSize com.android.settings:labelSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_labelTemplate com.android.settings:labelTemplate}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_neighborMargin com.android.settings:neighborMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_safeRegion com.android.settings:safeRegion}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_sweepDrawable com.android.settings:sweepDrawable}</code></td><td></td></tr>
     * </table>
     * @see #ChartSweepView_followAxis
     * @see #ChartSweepView_labelColor
     * @see #ChartSweepView_labelSize
     * @see #ChartSweepView_labelTemplate
     * @see #ChartSweepView_neighborMargin
     * @see #ChartSweepView_safeRegion
     * @see #ChartSweepView_sweepDrawable
     */
    public static final int[] ChartSweepView={
      0x7f0401a1, 0x7f040212, 0x7f040213, 0x7f040215, 
      0x7f0402e4, 0x7f04034d, 0x7f04041e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#followAxis}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:followAxis
     */
    public static final int ChartSweepView_followAxis=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelColor}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:labelColor
     */
    public static final int ChartSweepView_labelColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelSize}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:labelSize
     */
    public static final int ChartSweepView_labelSize=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelTemplate}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:labelTemplate
     */
    public static final int ChartSweepView_labelTemplate=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#neighborMargin}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:neighborMargin
     */
    public static final int ChartSweepView_neighborMargin=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#safeRegion}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:safeRegion
     */
    public static final int ChartSweepView_safeRegion=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sweepDrawable}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sweepDrawable
     */
    public static final int ChartSweepView_sweepDrawable=6;
    /**
     * Attributes that can be used with a ChartView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartView_optimalWidth com.android.settings:optimalWidth}</code></td><td>optimal width of the chart</td></tr>
     * <tr><td><code>{@link #ChartView_optimalWidthWeight com.android.settings:optimalWidthWeight}</code></td><td>how to weight extra space beyond optimal width</td></tr>
     * </table>
     * @see #ChartView_optimalWidth
     * @see #ChartView_optimalWidthWeight
     */
    public static final int[] ChartView={
      0x7f0402f0, 0x7f0402f1
    };
    /**
     * <p>
     * @attr description
     * optimal width of the chart
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:optimalWidth
     */
    public static final int ChartView_optimalWidth=0;
    /**
     * <p>
     * @attr description
     * how to weight extra space beyond optimal width
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:optimalWidthWeight
     */
    public static final int ChartView_optimalWidthWeight=1;
    /**
     * Attributes that can be used with a CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.android.settings:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.android.settings:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.android.settings:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x7f040130, 
      0x7f04041c, 0x7f04041d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a Chip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Chip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_ellipsize android:ellipsize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIcon com.android.settings:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconEnabled com.android.settings:checkedIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_checkedIconTint com.android.settings:checkedIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconVisible com.android.settings:checkedIconVisible}</code></td><td>Whether to show the checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipBackgroundColor com.android.settings:chipBackgroundColor}</code></td><td>Background color to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipCornerRadius com.android.settings:chipCornerRadius}</code></td><td>Corner radius to apply to the chip's shape.</td></tr>
     * <tr><td><code>{@link #Chip_chipEndPadding com.android.settings:chipEndPadding}</code></td><td>Padding at the end of the chip, after the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIcon com.android.settings:chipIcon}</code></td><td>Icon drawable to display at the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconEnabled com.android.settings:chipIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconSize com.android.settings:chipIconSize}</code></td><td>Size of the chip's icon and checked icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconTint com.android.settings:chipIconTint}</code></td><td>Tint to apply to the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipIconVisible com.android.settings:chipIconVisible}</code></td><td>Whether to show the chip icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinHeight com.android.settings:chipMinHeight}</code></td><td>Min height to apply to the chip.</td></tr>
     * <tr><td><code>{@link #Chip_chipMinTouchTargetSize com.android.settings:chipMinTouchTargetSize}</code></td><td>Minimum size of chip's touch target, by default, Android recommended 48dp.</td></tr>
     * <tr><td><code>{@link #Chip_chipStartPadding com.android.settings:chipStartPadding}</code></td><td>Padding at the start of the chip, before the icon.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeColor com.android.settings:chipStrokeColor}</code></td><td>Stroke color to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeWidth com.android.settings:chipStrokeWidth}</code></td><td>Stroke width to apply to the chip's outline.</td></tr>
     * <tr><td><code>{@link #Chip_chipSurfaceColor com.android.settings:chipSurfaceColor}</code></td><td>Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.</td></tr>
     * <tr><td><code>{@link #Chip_closeIcon com.android.settings:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEnabled com.android.settings:closeIconEnabled}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEndPadding com.android.settings:closeIconEndPadding}</code></td><td>Padding at the end of the close icon, before the end of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconSize com.android.settings:closeIconSize}</code></td><td>Size of the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconStartPadding com.android.settings:closeIconStartPadding}</code></td><td>Padding at the start of the close icon, after the text.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconTint com.android.settings:closeIconTint}</code></td><td>Tint to apply to the chip's close icon.</td></tr>
     * <tr><td><code>{@link #Chip_closeIconVisible com.android.settings:closeIconVisible}</code></td><td>Whether to show the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_ensureMinTouchTargetSize com.android.settings:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_hideMotionSpec com.android.settings:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconEndPadding com.android.settings:iconEndPadding}</code></td><td>Padding at the end of the icon, before the text.</td></tr>
     * <tr><td><code>{@link #Chip_iconStartPadding com.android.settings:iconStartPadding}</code></td><td>Padding at the start of the icon, after the start of the chip.</td></tr>
     * <tr><td><code>{@link #Chip_rippleColor com.android.settings:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #Chip_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #Chip_showMotionSpec com.android.settings:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textEndPadding com.android.settings:textEndPadding}</code></td><td>Padding at the end of the text, before the close icon.</td></tr>
     * <tr><td><code>{@link #Chip_textStartPadding com.android.settings:textStartPadding}</code></td><td>Padding at the start of the text, after the icon.</td></tr>
     * </table>
     * @see #Chip_android_textAppearance
     * @see #Chip_android_textSize
     * @see #Chip_android_textColor
     * @see #Chip_android_ellipsize
     * @see #Chip_android_maxWidth
     * @see #Chip_android_text
     * @see #Chip_android_checkable
     * @see #Chip_checkedIcon
     * @see #Chip_checkedIconEnabled
     * @see #Chip_checkedIconTint
     * @see #Chip_checkedIconVisible
     * @see #Chip_chipBackgroundColor
     * @see #Chip_chipCornerRadius
     * @see #Chip_chipEndPadding
     * @see #Chip_chipIcon
     * @see #Chip_chipIconEnabled
     * @see #Chip_chipIconSize
     * @see #Chip_chipIconTint
     * @see #Chip_chipIconVisible
     * @see #Chip_chipMinHeight
     * @see #Chip_chipMinTouchTargetSize
     * @see #Chip_chipStartPadding
     * @see #Chip_chipStrokeColor
     * @see #Chip_chipStrokeWidth
     * @see #Chip_chipSurfaceColor
     * @see #Chip_closeIcon
     * @see #Chip_closeIconEnabled
     * @see #Chip_closeIconEndPadding
     * @see #Chip_closeIconSize
     * @see #Chip_closeIconStartPadding
     * @see #Chip_closeIconTint
     * @see #Chip_closeIconVisible
     * @see #Chip_ensureMinTouchTargetSize
     * @see #Chip_hideMotionSpec
     * @see #Chip_iconEndPadding
     * @see #Chip_iconStartPadding
     * @see #Chip_rippleColor
     * @see #Chip_shapeAppearance
     * @see #Chip_shapeAppearanceOverlay
     * @see #Chip_showMotionSpec
     * @see #Chip_textEndPadding
     * @see #Chip_textStartPadding
     */
    public static final int[] Chip={
      0x01010034, 0x01010095, 0x01010098, 0x010100ab, 
      0x0101011f, 0x0101014f, 0x010101e5, 0x7f040098, 
      0x7f040099, 0x7f04009c, 0x7f04009d, 0x7f04009f, 
      0x7f0400a0, 0x7f0400a1, 0x7f0400a3, 0x7f0400a4, 
      0x7f0400a5, 0x7f0400a6, 0x7f0400a7, 0x7f0400a8, 
      0x7f0400a9, 0x7f0400ae, 0x7f0400af, 0x7f0400b0, 
      0x7f0400b2, 0x7f0400bb, 0x7f0400bc, 0x7f0400bd, 
      0x7f0400be, 0x7f0400bf, 0x7f0400c0, 0x7f0400c1, 
      0x7f040161, 0x7f0401c9, 0x7f0401d8, 0x7f0401dd, 
      0x7f040344, 0x7f040362, 0x7f040365, 0x7f04036d, 
      0x7f040469, 0x7f040470
    };
    /**
     * <p>
     * @attr description
     * Default appearance of text: color, typeface, size, and style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Chip_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Text size. Overrides the size set in the textAppearance
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int Chip_android_textSize=1;
    /**
     * <p>
     * @attr description
     * Text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int Chip_android_textColor=2;
    /**
     * <p>
     * @attr description
     * If set, causes words that are longer than the view is wide to be ellipsized instead of
     * truncated at the end.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td></td></tr>
     * <tr><td>marquee</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:ellipsize
     */
    public static final int Chip_android_ellipsize=3;
    /**
     * <p>
     * @attr description
     * Make the Chip to be at most this many pixels wide.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Chip_android_maxWidth=4;
    /**
     * <p>
     * @attr description
     * Text to display on the chip.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Chip_android_text=5;
    /**
     * <p>
     * @attr description
     * Whether the chip can be checked. If false, the chip will act as a button.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int Chip_android_checkable=6;
    /**
     * <p>
     * @attr description
     * Check icon drawable to overlay the chip's icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkedIcon
     */
    public static final int Chip_checkedIcon=7;
    /**
     * <p>
     * @attr description
     * Deprecated. Use checkedIconVisible instead
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:checkedIconEnabled
     */
    public static final int Chip_checkedIconEnabled=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:checkedIconTint
     */
    public static final int Chip_checkedIconTint=9;
    /**
     * <p>
     * @attr description
     * Whether to show the checked icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:checkedIconVisible
     */
    public static final int Chip_checkedIconVisible=10;
    /**
     * <p>
     * @attr description
     * Background color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:chipBackgroundColor
     */
    public static final int Chip_chipBackgroundColor=11;
    /**
     * <p>
     * @attr description
     * Corner radius to apply to the chip's shape.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipCornerRadius
     */
    public static final int Chip_chipCornerRadius=12;
    /**
     * <p>
     * @attr description
     * Padding at the end of the chip, after the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipEndPadding
     */
    public static final int Chip_chipEndPadding=13;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:chipIcon
     */
    public static final int Chip_chipIcon=14;
    /**
     * <p>
     * @attr description
     * Deprecated. Use chipIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:chipIconEnabled
     */
    public static final int Chip_chipIconEnabled=15;
    /**
     * <p>
     * @attr description
     * Size of the chip's icon and checked icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipIconSize
     */
    public static final int Chip_chipIconSize=16;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:chipIconTint
     */
    public static final int Chip_chipIconTint=17;
    /**
     * <p>
     * @attr description
     * Whether to show the chip icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:chipIconVisible
     */
    public static final int Chip_chipIconVisible=18;
    /**
     * <p>
     * @attr description
     * Min height to apply to the chip. Total height includes stroke width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipMinHeight
     */
    public static final int Chip_chipMinHeight=19;
    /**
     * <p>
     * @attr description
     * Minimum size of chip's touch target, by default, Android recommended 48dp.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipMinTouchTargetSize
     */
    public static final int Chip_chipMinTouchTargetSize=20;
    /**
     * <p>
     * @attr description
     * Padding at the start of the chip, before the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipStartPadding
     */
    public static final int Chip_chipStartPadding=21;
    /**
     * <p>
     * @attr description
     * Stroke color to apply to the chip's outline.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:chipStrokeColor
     */
    public static final int Chip_chipStrokeColor=22;
    /**
     * <p>
     * @attr description
     * Stroke width to apply to the chip's outline.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipStrokeWidth
     */
    public static final int Chip_chipStrokeWidth=23;
    /**
     * <p>
     * @attr description
     * Do not expose publicly because there is no public getter/setter and the user doesn't need
     * to configure this.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:chipSurfaceColor
     */
    public static final int Chip_chipSurfaceColor=24;
    /**
     * <p>
     * @attr description
     * Close icon drawable to display at the end of the chip.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:closeIcon
     */
    public static final int Chip_closeIcon=25;
    /**
     * <p>
     * @attr description
     * Deprecated. Use closeIconVisible instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:closeIconEnabled
     */
    public static final int Chip_closeIconEnabled=26;
    /**
     * <p>
     * @attr description
     * Padding at the end of the close icon, before the end of the chip. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:closeIconEndPadding
     */
    public static final int Chip_closeIconEndPadding=27;
    /**
     * <p>
     * @attr description
     * Size of the chip's close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:closeIconSize
     */
    public static final int Chip_closeIconSize=28;
    /**
     * <p>
     * @attr description
     * Padding at the start of the close icon, after the text. If close icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:closeIconStartPadding
     */
    public static final int Chip_closeIconStartPadding=29;
    /**
     * <p>
     * @attr description
     * Tint to apply to the chip's close icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:closeIconTint
     */
    public static final int Chip_closeIconTint=30;
    /**
     * <p>
     * @attr description
     * Whether to show the close icon.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:closeIconVisible
     */
    public static final int Chip_closeIconVisible=31;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of chip to meet chipMinTouchTargetSize.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:ensureMinTouchTargetSize
     */
    public static final int Chip_ensureMinTouchTargetSize=32;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:hideMotionSpec
     */
    public static final int Chip_hideMotionSpec=33;
    /**
     * <p>
     * @attr description
     * Padding at the end of the icon, before the text. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:iconEndPadding
     */
    public static final int Chip_iconEndPadding=34;
    /**
     * <p>
     * @attr description
     * Padding at the start of the icon, after the start of the chip. If icon exists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:iconStartPadding
     */
    public static final int Chip_iconStartPadding=35;
    /**
     * <p>
     * @attr description
     * Ripple color to apply to the chip.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:rippleColor
     */
    public static final int Chip_rippleColor=36;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for Chip. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int Chip_shapeAppearance=37;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for Chip. To be used to augment attributes
     * declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int Chip_shapeAppearanceOverlay=38;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:showMotionSpec
     */
    public static final int Chip_showMotionSpec=39;
    /**
     * <p>
     * @attr description
     * Padding at the end of the text, before the close icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:textEndPadding
     */
    public static final int Chip_textEndPadding=40;
    /**
     * <p>
     * @attr description
     * Padding at the start of the text, after the icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:textStartPadding
     */
    public static final int Chip_textStartPadding=41;
    /**
     * Attributes that can be used with a ChipGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChipGroup_checkedChip com.android.settings:checkedChip}</code></td><td>The id of the child chip that should be checked by default within this chip group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacing com.android.settings:chipSpacing}</code></td><td>Horizontal and vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingHorizontal com.android.settings:chipSpacingHorizontal}</code></td><td>Horizontal spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingVertical com.android.settings:chipSpacingVertical}</code></td><td>Vertical spacing between chips in this group.</td></tr>
     * <tr><td><code>{@link #ChipGroup_selectionRequired com.android.settings:selectionRequired}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleLine com.android.settings:singleLine}</code></td><td>Constrains the chips in this group to a single horizontal line.</td></tr>
     * <tr><td><code>{@link #ChipGroup_singleSelection com.android.settings:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #ChipGroup_checkedChip
     * @see #ChipGroup_chipSpacing
     * @see #ChipGroup_chipSpacingHorizontal
     * @see #ChipGroup_chipSpacingVertical
     * @see #ChipGroup_selectionRequired
     * @see #ChipGroup_singleLine
     * @see #ChipGroup_singleSelection
     */
    public static final int[] ChipGroup={
      0x7f040097, 0x7f0400aa, 0x7f0400ab, 0x7f0400ac, 
      0x7f040360, 0x7f040376, 0x7f040378
    };
    /**
     * <p>
     * @attr description
     * The id of the child chip that should be checked by default within this chip group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkedChip
     */
    public static final int ChipGroup_checkedChip=0;
    /**
     * <p>
     * @attr description
     * Horizontal and vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipSpacing
     */
    public static final int ChipGroup_chipSpacing=1;
    /**
     * <p>
     * @attr description
     * Horizontal spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipSpacingHorizontal
     */
    public static final int ChipGroup_chipSpacingHorizontal=2;
    /**
     * <p>
     * @attr description
     * Vertical spacing between chips in this group.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chipSpacingVertical
     */
    public static final int ChipGroup_chipSpacingVertical=3;
    /**
     * <p>
     * @attr description
     * Whether we prevent all child chips from being deselected.
     * It's false by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:selectionRequired
     */
    public static final int ChipGroup_selectionRequired=4;
    /**
     * <p>
     * @attr description
     * Constrains the chips in this group to a single horizontal line. By default, this is false
     * and the chips in this group will reflow to multiple lines.
     * If you set this to true, you'll usually want to wrap this ChipGroup in a
     * HorizontalScrollView.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:singleLine
     */
    public static final int ChipGroup_singleLine=5;
    /**
     * <p>
     * @attr description
     * Whether only a single chip in this group is allowed to be checked at any time. By default,
     * this is false and multiple chips in this group are allowed to be checked at once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:singleSelection
     */
    public static final int ChipGroup_singleSelection=6;
    /**
     * Attributes that can be used with a CircularProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorDirectionCircular com.android.settings:indicatorDirectionCircular}</code></td><td>The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.</td></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorInset com.android.settings:indicatorInset}</code></td><td>The extra space from the outer edge of the indicator to the edge of the
     * canvas.</td></tr>
     * <tr><td><code>{@link #CircularProgressIndicator_indicatorSize com.android.settings:indicatorSize}</code></td><td>Defines the size (outer diameter) of the circular progress indicator.</td></tr>
     * </table>
     * @see #CircularProgressIndicator_indicatorDirectionCircular
     * @see #CircularProgressIndicator_indicatorInset
     * @see #CircularProgressIndicator_indicatorSize
     */
    public static final int[] CircularProgressIndicator={
      0x7f0401ea, 0x7f0401ec, 0x7f0401ed
    };
    /**
     * <p>
     * @attr description
     * The direction in which the circular indicator progresses, in the
     * determinate mode, and is animated, in the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clockwise</td><td>0</td><td>In the indeterminate mode, the spinner will spin clockwise; in the
     * determinate mode, the indicator will progress from the top (12 o'clock)
     * clockwise.</td></tr>
     * <tr><td>counterclockwise</td><td>1</td><td>In the indeterminate mode, the spinner will spin counter-clockwise; in
     * the determinate mode, the indicator will progress from the top (12
     * o'clock) counter-clockwise.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:indicatorDirectionCircular
     */
    public static final int CircularProgressIndicator_indicatorDirectionCircular=0;
    /**
     * <p>
     * @attr description
     * The extra space from the outer edge of the indicator to the edge of the
     * canvas. Ignored for linear progress indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:indicatorInset
     */
    public static final int CircularProgressIndicator_indicatorInset=1;
    /**
     * <p>
     * @attr description
     * Defines the size (outer diameter) of the circular progress indicator. This
     * uses the central line of the indicator as reference. Ignored for linear
     * progress indicator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:indicatorSize
     */
    public static final int CircularProgressIndicator_indicatorSize=2;
    /**
     * Attributes that can be used with a ClockFaceView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ClockFaceView_clockFaceBackgroundColor com.android.settings:clockFaceBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockFaceView_clockNumberTextColor com.android.settings:clockNumberTextColor}</code></td><td></td></tr>
     * </table>
     * @see #ClockFaceView_clockFaceBackgroundColor
     * @see #ClockFaceView_clockNumberTextColor
     */
    public static final int[] ClockFaceView={
      0x7f0400b7, 0x7f0400ba
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#clockFaceBackgroundColor}
     * attribute's value can be found in the {@link #ClockFaceView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:clockFaceBackgroundColor
     */
    public static final int ClockFaceView_clockFaceBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#clockNumberTextColor}
     * attribute's value can be found in the {@link #ClockFaceView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:clockNumberTextColor
     */
    public static final int ClockFaceView_clockNumberTextColor=1;
    /**
     * Attributes that can be used with a ClockHandView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ClockHandView_clockHandColor com.android.settings:clockHandColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockHandView_materialCircleRadius com.android.settings:materialCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ClockHandView_selectorSize com.android.settings:selectorSize}</code></td><td></td></tr>
     * </table>
     * @see #ClockHandView_clockHandColor
     * @see #ClockHandView_materialCircleRadius
     * @see #ClockHandView_selectorSize
     */
    public static final int[] ClockHandView={
      0x7f0400b8, 0x7f040298, 0x7f040361
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#clockHandColor}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:clockHandColor
     */
    public static final int ClockHandView_clockHandColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#materialCircleRadius}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:materialCircleRadius
     */
    public static final int ClockHandView_materialCircleRadius=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#selectorSize}
     * attribute's value can be found in the {@link #ClockHandView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:selectorSize
     */
    public static final int ClockHandView_selectorSize=2;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity com.android.settings:collapsedTitleGravity}</code></td><td>Specifies how the title should be positioned when collapsed.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance com.android.settings:collapsedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim com.android.settings:contentScrim}</code></td><td>The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity com.android.settings:expandedTitleGravity}</code></td><td>Specifies how the title should be positioned when expanded.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin com.android.settings:expandedTitleMargin}</code></td><td>Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom com.android.settings:expandedTitleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd com.android.settings:expandedTitleMarginEnd}</code></td><td>Specifies extra space on the end side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart com.android.settings:expandedTitleMarginStart}</code></td><td>Specifies extra space on the start side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop com.android.settings:expandedTitleMarginTop}</code></td><td>Specifies extra space on the top side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance com.android.settings:expandedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_extraMultilineHeightEnabled com.android.settings:extraMultilineHeightEnabled}</code></td><td>Whether extra height should be added when the title text spans across
     * multiple lines.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_forceApplySystemWindowInsetTop com.android.settings:forceApplySystemWindowInsetTop}</code></td><td>Whether the system window inset top should be applied regardless of
     * what the layout_height is set to.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_maxLines com.android.settings:maxLines}</code></td><td>The maximum number of lines to display in the expanded state.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration com.android.settings:scrimAnimationDuration}</code></td><td>Specifies the duration used for scrim visibility animations.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger com.android.settings:scrimVisibleHeightTrigger}</code></td><td>Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim com.android.settings:statusBarScrim}</code></td><td>The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleCollapseMode com.android.settings:titleCollapseMode}</code></td><td>Mode to specify the effect used to collapse and expand the title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled com.android.settings:titleEnabled}</code></td><td>Whether the CollapsingToolbarLayout should draw its own collapsing title.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId com.android.settings:toolbarId}</code></td><td>The id of the primary Toolbar child that you wish to use for the purpose of collapsing.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_extraMultilineHeightEnabled
     * @see #CollapsingToolbarLayout_forceApplySystemWindowInsetTop
     * @see #CollapsingToolbarLayout_maxLines
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleCollapseMode
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
      0x7f0400c6, 0x7f0400c7, 0x7f0400f7, 0x7f040170, 
      0x7f040171, 0x7f040172, 0x7f040173, 0x7f040174, 
      0x7f040175, 0x7f040176, 0x7f04017b, 0x7f0401b0, 
      0x7f0402a3, 0x7f04034f, 0x7f040351, 0x7f04039d, 
      0x7f040488, 0x7f04048a, 0x7f04048c, 0x7f04049b
    };
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when collapsed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:collapsedTitleGravity
     */
    public static final int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:collapsedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:contentScrim
     */
    public static final int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when expanded.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:expandedTitleGravity
     */
    public static final int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:expandedTitleMargin
     */
    public static final int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:expandedTitleMarginBottom
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:expandedTitleMarginEnd
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:expandedTitleMarginStart
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:expandedTitleMarginTop
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:expandedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>
     * @attr description
     * Whether extra height should be added when the title text spans across
     * multiple lines. Experimental Feature.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:extraMultilineHeightEnabled
     */
    public static final int CollapsingToolbarLayout_extraMultilineHeightEnabled=10;
    /**
     * <p>
     * @attr description
     * Whether the system window inset top should be applied regardless of
     * what the layout_height is set to. Experimental Feature.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:forceApplySystemWindowInsetTop
     */
    public static final int CollapsingToolbarLayout_forceApplySystemWindowInsetTop=11;
    /**
     * <p>
     * @attr description
     * The maximum number of lines to display in the expanded state. Experimental Feature.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:maxLines
     */
    public static final int CollapsingToolbarLayout_maxLines=12;
    /**
     * <p>
     * @attr description
     * Specifies the duration used for scrim visibility animations.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:scrimAnimationDuration
     */
    public static final int CollapsingToolbarLayout_scrimAnimationDuration=13;
    /**
     * <p>
     * @attr description
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:scrimVisibleHeightTrigger
     */
    public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger=14;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop when used together with android:fitSystemWindows="true".
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:statusBarScrim
     */
    public static final int CollapsingToolbarLayout_statusBarScrim=15;
    /**
     * <p>
     * @attr description
     * The title to show when titleEnabled is set to true.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:title
     */
    public static final int CollapsingToolbarLayout_title=16;
    /**
     * <p>
     * @attr description
     * Mode to specify the effect used to collapse and expand the title text.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>The expanded title will fade out and translate, and the collapsed title will fade in.</td></tr>
     * <tr><td>scale</td><td>0</td><td>The expanded title will continuously scale and translate to its final collapsed position.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:titleCollapseMode
     */
    public static final int CollapsingToolbarLayout_titleCollapseMode=17;
    /**
     * <p>
     * @attr description
     * Whether the CollapsingToolbarLayout should draw its own collapsing title.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:titleEnabled
     */
    public static final int CollapsingToolbarLayout_titleEnabled=18;
    /**
     * <p>
     * @attr description
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:toolbarId
     */
    public static final int CollapsingToolbarLayout_toolbarId=19;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode com.android.settings:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier com.android.settings:layout_collapseParallaxMultiplier}</code></td><td>The multiplier used when layout_collapseMode is set to 'parallax'.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
      0x7f04021f, 0x7f040220
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_collapseMode
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>
     * @attr description
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_collapseParallaxMultiplier
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.settings:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f040031
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.android.settings:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.settings:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.settings:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f040082, 0x7f040088, 0x7f040089
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonCompat
     */
    public static final int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:buttonTint
     */
    public static final int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a Constraint.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Constraint_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_pivotX android:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_pivotY android:pivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_animate_relativeTo com.android.settings:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierAllowsGoneWidgets com.android.settings:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierDirection com.android.settings:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_barrierMargin com.android.settings:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_chainUseRtl com.android.settings:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_constraint_referenced_ids com.android.settings:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_drawPath com.android.settings:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstHorizontalBias com.android.settings:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstHorizontalStyle com.android.settings:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstVerticalBias com.android.settings:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_firstVerticalStyle com.android.settings:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalAlign com.android.settings:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalBias com.android.settings:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalGap com.android.settings:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_horizontalStyle com.android.settings:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastHorizontalBias com.android.settings:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastHorizontalStyle com.android.settings:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastVerticalBias com.android.settings:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_lastVerticalStyle com.android.settings:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_maxElementsWrap com.android.settings:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalAlign com.android.settings:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalBias com.android.settings:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalGap com.android.settings:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_verticalStyle com.android.settings:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_flow_wrapMode com.android.settings:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constrainedHeight com.android.settings:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constrainedWidth com.android.settings:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBaseline_creator com.android.settings:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBaseline_toBaselineOf com.android.settings:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_creator com.android.settings:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_toBottomOf com.android.settings:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintBottom_toTopOf com.android.settings:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircle com.android.settings:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircleAngle com.android.settings:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintCircleRadius com.android.settings:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintDimensionRatio com.android.settings:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintEnd_toEndOf com.android.settings:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintEnd_toStartOf com.android.settings:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_begin com.android.settings:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_end com.android.settings:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintGuide_percent com.android.settings:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_default com.android.settings:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_max com.android.settings:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_min com.android.settings:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHeight_percent com.android.settings:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_bias com.android.settings:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_chainStyle com.android.settings:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintHorizontal_weight com.android.settings:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_creator com.android.settings:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_toLeftOf com.android.settings:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintLeft_toRightOf com.android.settings:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_creator com.android.settings:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_toLeftOf com.android.settings:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintRight_toRightOf com.android.settings:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintStart_toEndOf com.android.settings:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintStart_toStartOf com.android.settings:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTag com.android.settings:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_creator com.android.settings:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_toBottomOf com.android.settings:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintTop_toTopOf com.android.settings:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_bias com.android.settings:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_chainStyle com.android.settings:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintVertical_weight com.android.settings:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_default com.android.settings:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_max com.android.settings:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_min com.android.settings:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_constraintWidth_percent com.android.settings:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_editor_absoluteX com.android.settings:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_editor_absoluteY com.android.settings:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginBottom com.android.settings:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginEnd com.android.settings:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginLeft com.android.settings:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginRight com.android.settings:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginStart com.android.settings:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_layout_goneMarginTop com.android.settings:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_motionStagger com.android.settings:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_pathMotionArc com.android.settings:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_pivotAnchor com.android.settings:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_progress com.android.settings:progress}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_transitionPathRotate com.android.settings:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Constraint_visibilityMode com.android.settings:visibilityMode}</code></td><td></td></tr>
     * </table>
     * @see #Constraint_android_orientation
     * @see #Constraint_android_id
     * @see #Constraint_android_visibility
     * @see #Constraint_android_layout_width
     * @see #Constraint_android_layout_height
     * @see #Constraint_android_layout_marginLeft
     * @see #Constraint_android_layout_marginTop
     * @see #Constraint_android_layout_marginRight
     * @see #Constraint_android_layout_marginBottom
     * @see #Constraint_android_maxWidth
     * @see #Constraint_android_maxHeight
     * @see #Constraint_android_minWidth
     * @see #Constraint_android_minHeight
     * @see #Constraint_android_pivotX
     * @see #Constraint_android_pivotY
     * @see #Constraint_android_alpha
     * @see #Constraint_android_transformPivotX
     * @see #Constraint_android_transformPivotY
     * @see #Constraint_android_translationX
     * @see #Constraint_android_translationY
     * @see #Constraint_android_scaleX
     * @see #Constraint_android_scaleY
     * @see #Constraint_android_rotation
     * @see #Constraint_android_rotationX
     * @see #Constraint_android_rotationY
     * @see #Constraint_android_layout_marginStart
     * @see #Constraint_android_layout_marginEnd
     * @see #Constraint_android_translationZ
     * @see #Constraint_android_elevation
     * @see #Constraint_animate_relativeTo
     * @see #Constraint_barrierAllowsGoneWidgets
     * @see #Constraint_barrierDirection
     * @see #Constraint_barrierMargin
     * @see #Constraint_chainUseRtl
     * @see #Constraint_constraint_referenced_ids
     * @see #Constraint_drawPath
     * @see #Constraint_flow_firstHorizontalBias
     * @see #Constraint_flow_firstHorizontalStyle
     * @see #Constraint_flow_firstVerticalBias
     * @see #Constraint_flow_firstVerticalStyle
     * @see #Constraint_flow_horizontalAlign
     * @see #Constraint_flow_horizontalBias
     * @see #Constraint_flow_horizontalGap
     * @see #Constraint_flow_horizontalStyle
     * @see #Constraint_flow_lastHorizontalBias
     * @see #Constraint_flow_lastHorizontalStyle
     * @see #Constraint_flow_lastVerticalBias
     * @see #Constraint_flow_lastVerticalStyle
     * @see #Constraint_flow_maxElementsWrap
     * @see #Constraint_flow_verticalAlign
     * @see #Constraint_flow_verticalBias
     * @see #Constraint_flow_verticalGap
     * @see #Constraint_flow_verticalStyle
     * @see #Constraint_flow_wrapMode
     * @see #Constraint_layout_constrainedHeight
     * @see #Constraint_layout_constrainedWidth
     * @see #Constraint_layout_constraintBaseline_creator
     * @see #Constraint_layout_constraintBaseline_toBaselineOf
     * @see #Constraint_layout_constraintBottom_creator
     * @see #Constraint_layout_constraintBottom_toBottomOf
     * @see #Constraint_layout_constraintBottom_toTopOf
     * @see #Constraint_layout_constraintCircle
     * @see #Constraint_layout_constraintCircleAngle
     * @see #Constraint_layout_constraintCircleRadius
     * @see #Constraint_layout_constraintDimensionRatio
     * @see #Constraint_layout_constraintEnd_toEndOf
     * @see #Constraint_layout_constraintEnd_toStartOf
     * @see #Constraint_layout_constraintGuide_begin
     * @see #Constraint_layout_constraintGuide_end
     * @see #Constraint_layout_constraintGuide_percent
     * @see #Constraint_layout_constraintHeight_default
     * @see #Constraint_layout_constraintHeight_max
     * @see #Constraint_layout_constraintHeight_min
     * @see #Constraint_layout_constraintHeight_percent
     * @see #Constraint_layout_constraintHorizontal_bias
     * @see #Constraint_layout_constraintHorizontal_chainStyle
     * @see #Constraint_layout_constraintHorizontal_weight
     * @see #Constraint_layout_constraintLeft_creator
     * @see #Constraint_layout_constraintLeft_toLeftOf
     * @see #Constraint_layout_constraintLeft_toRightOf
     * @see #Constraint_layout_constraintRight_creator
     * @see #Constraint_layout_constraintRight_toLeftOf
     * @see #Constraint_layout_constraintRight_toRightOf
     * @see #Constraint_layout_constraintStart_toEndOf
     * @see #Constraint_layout_constraintStart_toStartOf
     * @see #Constraint_layout_constraintTag
     * @see #Constraint_layout_constraintTop_creator
     * @see #Constraint_layout_constraintTop_toBottomOf
     * @see #Constraint_layout_constraintTop_toTopOf
     * @see #Constraint_layout_constraintVertical_bias
     * @see #Constraint_layout_constraintVertical_chainStyle
     * @see #Constraint_layout_constraintVertical_weight
     * @see #Constraint_layout_constraintWidth_default
     * @see #Constraint_layout_constraintWidth_max
     * @see #Constraint_layout_constraintWidth_min
     * @see #Constraint_layout_constraintWidth_percent
     * @see #Constraint_layout_editor_absoluteX
     * @see #Constraint_layout_editor_absoluteY
     * @see #Constraint_layout_goneMarginBottom
     * @see #Constraint_layout_goneMarginEnd
     * @see #Constraint_layout_goneMarginLeft
     * @see #Constraint_layout_goneMarginRight
     * @see #Constraint_layout_goneMarginStart
     * @see #Constraint_layout_goneMarginTop
     * @see #Constraint_motionStagger
     * @see #Constraint_pathMotionArc
     * @see #Constraint_pivotAnchor
     * @see #Constraint_progress
     * @see #Constraint_transitionEasing
     * @see #Constraint_transitionPathRotate
     * @see #Constraint_visibilityMode
     */
    public static final int[] Constraint={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x010101b5, 0x010101b6, 0x0101031f, 
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103b5, 0x010103b6, 0x010103fa, 
      0x01010440, 0x7f040035, 0x7f040059, 0x7f04005a, 
      0x7f04005b, 0x7f040093, 0x7f0400e5, 0x7f04013c, 
      0x7f04018e, 0x7f04018f, 0x7f040190, 0x7f040191, 
      0x7f040192, 0x7f040193, 0x7f040194, 0x7f040195, 
      0x7f040196, 0x7f040197, 0x7f040198, 0x7f040199, 
      0x7f04019a, 0x7f04019c, 0x7f04019d, 0x7f04019e, 
      0x7f04019f, 0x7f0401a0, 0x7f040221, 0x7f040222, 
      0x7f040223, 0x7f040224, 0x7f040225, 0x7f040226, 
      0x7f040227, 0x7f040228, 0x7f040229, 0x7f04022a, 
      0x7f04022b, 0x7f04022c, 0x7f04022d, 0x7f04022e, 
      0x7f04022f, 0x7f040230, 0x7f040231, 0x7f040232, 
      0x7f040233, 0x7f040234, 0x7f040235, 0x7f040236, 
      0x7f040237, 0x7f040238, 0x7f040239, 0x7f04023a, 
      0x7f04023b, 0x7f04023c, 0x7f04023d, 0x7f04023e, 
      0x7f04023f, 0x7f040240, 0x7f040241, 0x7f040242, 
      0x7f040243, 0x7f040244, 0x7f040245, 0x7f040246, 
      0x7f040247, 0x7f040248, 0x7f040249, 0x7f04024a, 
      0x7f04024c, 0x7f04024d, 0x7f04024e, 0x7f04024f, 
      0x7f040250, 0x7f040251, 0x7f040252, 0x7f040253, 
      0x7f0402d7, 0x7f040307, 0x7f04030f, 0x7f04032f, 
      0x7f0404af, 0x7f0404b0, 0x7f0404c3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int Constraint_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Constraint_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int Constraint_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int Constraint_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int Constraint_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int Constraint_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int Constraint_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int Constraint_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int Constraint_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Constraint_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int Constraint_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int Constraint_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Constraint_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotX
     */
    public static final int Constraint_android_pivotX=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotY
     */
    public static final int Constraint_android_pivotY=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int Constraint_android_alpha=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int Constraint_android_transformPivotX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int Constraint_android_transformPivotY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int Constraint_android_translationX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int Constraint_android_translationY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int Constraint_android_scaleX=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int Constraint_android_scaleY=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int Constraint_android_rotation=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int Constraint_android_rotationX=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int Constraint_android_rotationY=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int Constraint_android_layout_marginStart=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int Constraint_android_layout_marginEnd=26;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int Constraint_android_translationZ=27;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int Constraint_android_elevation=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:animate_relativeTo
     */
    public static final int Constraint_animate_relativeTo=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:barrierAllowsGoneWidgets
     */
    public static final int Constraint_barrierAllowsGoneWidgets=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:barrierDirection
     */
    public static final int Constraint_barrierDirection=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:barrierMargin
     */
    public static final int Constraint_barrierMargin=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:chainUseRtl
     */
    public static final int Constraint_chainUseRtl=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:constraint_referenced_ids
     */
    public static final int Constraint_constraint_referenced_ids=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawPath}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:drawPath
     */
    public static final int Constraint_drawPath=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_firstHorizontalBias
     */
    public static final int Constraint_flow_firstHorizontalBias=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_firstHorizontalStyle
     */
    public static final int Constraint_flow_firstHorizontalStyle=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_firstVerticalBias
     */
    public static final int Constraint_flow_firstVerticalBias=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_firstVerticalStyle
     */
    public static final int Constraint_flow_firstVerticalStyle=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_horizontalAlign
     */
    public static final int Constraint_flow_horizontalAlign=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_horizontalBias
     */
    public static final int Constraint_flow_horizontalBias=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:flow_horizontalGap
     */
    public static final int Constraint_flow_horizontalGap=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_horizontalStyle
     */
    public static final int Constraint_flow_horizontalStyle=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_lastHorizontalBias
     */
    public static final int Constraint_flow_lastHorizontalBias=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_lastHorizontalStyle
     */
    public static final int Constraint_flow_lastHorizontalStyle=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_lastVerticalBias
     */
    public static final int Constraint_flow_lastVerticalBias=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_lastVerticalStyle
     */
    public static final int Constraint_flow_lastVerticalStyle=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:flow_maxElementsWrap
     */
    public static final int Constraint_flow_maxElementsWrap=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_verticalAlign
     */
    public static final int Constraint_flow_verticalAlign=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_verticalBias
     */
    public static final int Constraint_flow_verticalBias=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:flow_verticalGap
     */
    public static final int Constraint_flow_verticalGap=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_verticalStyle
     */
    public static final int Constraint_flow_verticalStyle=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_wrapMode
     */
    public static final int Constraint_flow_wrapMode=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedHeight
     */
    public static final int Constraint_layout_constrainedHeight=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedWidth
     */
    public static final int Constraint_layout_constrainedWidth=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBaseline_creator
     */
    public static final int Constraint_layout_constraintBaseline_creator=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBaseline_toBaselineOf
     */
    public static final int Constraint_layout_constraintBaseline_toBaselineOf=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBottom_creator
     */
    public static final int Constraint_layout_constraintBottom_creator=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toBottomOf
     */
    public static final int Constraint_layout_constraintBottom_toBottomOf=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toTopOf
     */
    public static final int Constraint_layout_constraintBottom_toTopOf=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout_constraintCircle
     */
    public static final int Constraint_layout_constraintCircle=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintCircleAngle
     */
    public static final int Constraint_layout_constraintCircleAngle=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintCircleRadius
     */
    public static final int Constraint_layout_constraintCircleRadius=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintDimensionRatio
     */
    public static final int Constraint_layout_constraintDimensionRatio=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toEndOf
     */
    public static final int Constraint_layout_constraintEnd_toEndOf=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toStartOf
     */
    public static final int Constraint_layout_constraintEnd_toStartOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_begin
     */
    public static final int Constraint_layout_constraintGuide_begin=67;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_end
     */
    public static final int Constraint_layout_constraintGuide_end=68;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintGuide_percent
     */
    public static final int Constraint_layout_constraintGuide_percent=69;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_default
     */
    public static final int Constraint_layout_constraintHeight_default=70;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_max
     */
    public static final int Constraint_layout_constraintHeight_max=71;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_min
     */
    public static final int Constraint_layout_constraintHeight_min=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHeight_percent
     */
    public static final int Constraint_layout_constraintHeight_percent=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_bias
     */
    public static final int Constraint_layout_constraintHorizontal_bias=74;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHorizontal_chainStyle
     */
    public static final int Constraint_layout_constraintHorizontal_chainStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_weight
     */
    public static final int Constraint_layout_constraintHorizontal_weight=76;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintLeft_creator
     */
    public static final int Constraint_layout_constraintLeft_creator=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toLeftOf
     */
    public static final int Constraint_layout_constraintLeft_toLeftOf=78;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toRightOf
     */
    public static final int Constraint_layout_constraintLeft_toRightOf=79;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintRight_creator
     */
    public static final int Constraint_layout_constraintRight_creator=80;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toLeftOf
     */
    public static final int Constraint_layout_constraintRight_toLeftOf=81;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toRightOf
     */
    public static final int Constraint_layout_constraintRight_toRightOf=82;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toEndOf
     */
    public static final int Constraint_layout_constraintStart_toEndOf=83;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toStartOf
     */
    public static final int Constraint_layout_constraintStart_toStartOf=84;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintTag
     */
    public static final int Constraint_layout_constraintTag=85;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintTop_creator
     */
    public static final int Constraint_layout_constraintTop_creator=86;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toBottomOf
     */
    public static final int Constraint_layout_constraintTop_toBottomOf=87;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toTopOf
     */
    public static final int Constraint_layout_constraintTop_toTopOf=88;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_bias
     */
    public static final int Constraint_layout_constraintVertical_bias=89;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintVertical_chainStyle
     */
    public static final int Constraint_layout_constraintVertical_chainStyle=90;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_weight
     */
    public static final int Constraint_layout_constraintVertical_weight=91;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_default
     */
    public static final int Constraint_layout_constraintWidth_default=92;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_max
     */
    public static final int Constraint_layout_constraintWidth_max=93;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_min
     */
    public static final int Constraint_layout_constraintWidth_min=94;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintWidth_percent
     */
    public static final int Constraint_layout_constraintWidth_percent=95;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteX
     */
    public static final int Constraint_layout_editor_absoluteX=96;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteY
     */
    public static final int Constraint_layout_editor_absoluteY=97;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginBottom
     */
    public static final int Constraint_layout_goneMarginBottom=98;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginEnd
     */
    public static final int Constraint_layout_goneMarginEnd=99;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginLeft
     */
    public static final int Constraint_layout_goneMarginLeft=100;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginRight
     */
    public static final int Constraint_layout_goneMarginRight=101;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginStart
     */
    public static final int Constraint_layout_goneMarginStart=102;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginTop
     */
    public static final int Constraint_layout_goneMarginTop=103;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionStagger}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionStagger
     */
    public static final int Constraint_motionStagger=104;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pathMotionArc
     */
    public static final int Constraint_pathMotionArc=105;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pivotAnchor
     */
    public static final int Constraint_pivotAnchor=106;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#progress}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:progress
     */
    public static final int Constraint_progress=107;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int Constraint_transitionEasing=108;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:transitionPathRotate
     */
    public static final int Constraint_transitionPathRotate=109;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#visibilityMode}
     * attribute's value can be found in the {@link #Constraint} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:visibilityMode
     */
    public static final int Constraint_visibilityMode=110;
    /**
     * Attributes that can be used with a ConstraintLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_padding android:padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingLeft android:paddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingTop android:paddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingRight android:paddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingBottom android:paddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingStart android:paddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_paddingEnd android:paddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierAllowsGoneWidgets com.android.settings:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierDirection com.android.settings:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_barrierMargin com.android.settings:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_chainUseRtl com.android.settings:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraintSet com.android.settings:constraintSet}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_constraint_referenced_ids com.android.settings:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstHorizontalBias com.android.settings:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstHorizontalStyle com.android.settings:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstVerticalBias com.android.settings:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_firstVerticalStyle com.android.settings:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalAlign com.android.settings:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalBias com.android.settings:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalGap com.android.settings:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_horizontalStyle com.android.settings:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastHorizontalBias com.android.settings:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastHorizontalStyle com.android.settings:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastVerticalBias com.android.settings:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_lastVerticalStyle com.android.settings:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_maxElementsWrap com.android.settings:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalAlign com.android.settings:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalBias com.android.settings:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalGap com.android.settings:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_verticalStyle com.android.settings:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_flow_wrapMode com.android.settings:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layoutDescription com.android.settings:layoutDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedHeight com.android.settings:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constrainedWidth com.android.settings:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_creator com.android.settings:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf com.android.settings:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_creator com.android.settings:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf com.android.settings:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintBottom_toTopOf com.android.settings:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircle com.android.settings:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleAngle com.android.settings:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintCircleRadius com.android.settings:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintDimensionRatio com.android.settings:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toEndOf com.android.settings:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintEnd_toStartOf com.android.settings:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_begin com.android.settings:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_end com.android.settings:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintGuide_percent com.android.settings:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_default com.android.settings:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_max com.android.settings:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_min com.android.settings:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHeight_percent com.android.settings:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_bias com.android.settings:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle com.android.settings:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintHorizontal_weight com.android.settings:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_creator com.android.settings:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf com.android.settings:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintLeft_toRightOf com.android.settings:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_creator com.android.settings:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toLeftOf com.android.settings:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintRight_toRightOf com.android.settings:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toEndOf com.android.settings:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintStart_toStartOf com.android.settings:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTag com.android.settings:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_creator com.android.settings:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toBottomOf com.android.settings:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintTop_toTopOf com.android.settings:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_bias com.android.settings:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_chainStyle com.android.settings:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintVertical_weight com.android.settings:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_default com.android.settings:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_max com.android.settings:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_min com.android.settings:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_constraintWidth_percent com.android.settings:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteX com.android.settings:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_editor_absoluteY com.android.settings:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginBottom com.android.settings:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginEnd com.android.settings:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginLeft com.android.settings:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginRight com.android.settings:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginStart com.android.settings:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_goneMarginTop com.android.settings:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_Layout_layout_optimizationLevel com.android.settings:layout_optimizationLevel}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_Layout_android_orientation
     * @see #ConstraintLayout_Layout_android_padding
     * @see #ConstraintLayout_Layout_android_paddingLeft
     * @see #ConstraintLayout_Layout_android_paddingTop
     * @see #ConstraintLayout_Layout_android_paddingRight
     * @see #ConstraintLayout_Layout_android_paddingBottom
     * @see #ConstraintLayout_Layout_android_visibility
     * @see #ConstraintLayout_Layout_android_maxWidth
     * @see #ConstraintLayout_Layout_android_maxHeight
     * @see #ConstraintLayout_Layout_android_minWidth
     * @see #ConstraintLayout_Layout_android_minHeight
     * @see #ConstraintLayout_Layout_android_paddingStart
     * @see #ConstraintLayout_Layout_android_paddingEnd
     * @see #ConstraintLayout_Layout_android_elevation
     * @see #ConstraintLayout_Layout_barrierAllowsGoneWidgets
     * @see #ConstraintLayout_Layout_barrierDirection
     * @see #ConstraintLayout_Layout_barrierMargin
     * @see #ConstraintLayout_Layout_chainUseRtl
     * @see #ConstraintLayout_Layout_constraintSet
     * @see #ConstraintLayout_Layout_constraint_referenced_ids
     * @see #ConstraintLayout_Layout_flow_firstHorizontalBias
     * @see #ConstraintLayout_Layout_flow_firstHorizontalStyle
     * @see #ConstraintLayout_Layout_flow_firstVerticalBias
     * @see #ConstraintLayout_Layout_flow_firstVerticalStyle
     * @see #ConstraintLayout_Layout_flow_horizontalAlign
     * @see #ConstraintLayout_Layout_flow_horizontalBias
     * @see #ConstraintLayout_Layout_flow_horizontalGap
     * @see #ConstraintLayout_Layout_flow_horizontalStyle
     * @see #ConstraintLayout_Layout_flow_lastHorizontalBias
     * @see #ConstraintLayout_Layout_flow_lastHorizontalStyle
     * @see #ConstraintLayout_Layout_flow_lastVerticalBias
     * @see #ConstraintLayout_Layout_flow_lastVerticalStyle
     * @see #ConstraintLayout_Layout_flow_maxElementsWrap
     * @see #ConstraintLayout_Layout_flow_verticalAlign
     * @see #ConstraintLayout_Layout_flow_verticalBias
     * @see #ConstraintLayout_Layout_flow_verticalGap
     * @see #ConstraintLayout_Layout_flow_verticalStyle
     * @see #ConstraintLayout_Layout_flow_wrapMode
     * @see #ConstraintLayout_Layout_layoutDescription
     * @see #ConstraintLayout_Layout_layout_constrainedHeight
     * @see #ConstraintLayout_Layout_layout_constrainedWidth
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_creator
     * @see #ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_creator
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintBottom_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintCircle
     * @see #ConstraintLayout_Layout_layout_constraintCircleAngle
     * @see #ConstraintLayout_Layout_layout_constraintCircleRadius
     * @see #ConstraintLayout_Layout_layout_constraintDimensionRatio
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintEnd_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintGuide_begin
     * @see #ConstraintLayout_Layout_layout_constraintGuide_end
     * @see #ConstraintLayout_Layout_layout_constraintGuide_percent
     * @see #ConstraintLayout_Layout_layout_constraintHeight_default
     * @see #ConstraintLayout_Layout_layout_constraintHeight_max
     * @see #ConstraintLayout_Layout_layout_constraintHeight_min
     * @see #ConstraintLayout_Layout_layout_constraintHeight_percent
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_bias
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintHorizontal_weight
     * @see #ConstraintLayout_Layout_layout_constraintLeft_creator
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintLeft_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_creator
     * @see #ConstraintLayout_Layout_layout_constraintRight_toLeftOf
     * @see #ConstraintLayout_Layout_layout_constraintRight_toRightOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toEndOf
     * @see #ConstraintLayout_Layout_layout_constraintStart_toStartOf
     * @see #ConstraintLayout_Layout_layout_constraintTag
     * @see #ConstraintLayout_Layout_layout_constraintTop_creator
     * @see #ConstraintLayout_Layout_layout_constraintTop_toBottomOf
     * @see #ConstraintLayout_Layout_layout_constraintTop_toTopOf
     * @see #ConstraintLayout_Layout_layout_constraintVertical_bias
     * @see #ConstraintLayout_Layout_layout_constraintVertical_chainStyle
     * @see #ConstraintLayout_Layout_layout_constraintVertical_weight
     * @see #ConstraintLayout_Layout_layout_constraintWidth_default
     * @see #ConstraintLayout_Layout_layout_constraintWidth_max
     * @see #ConstraintLayout_Layout_layout_constraintWidth_min
     * @see #ConstraintLayout_Layout_layout_constraintWidth_percent
     * @see #ConstraintLayout_Layout_layout_editor_absoluteX
     * @see #ConstraintLayout_Layout_layout_editor_absoluteY
     * @see #ConstraintLayout_Layout_layout_goneMarginBottom
     * @see #ConstraintLayout_Layout_layout_goneMarginEnd
     * @see #ConstraintLayout_Layout_layout_goneMarginLeft
     * @see #ConstraintLayout_Layout_layout_goneMarginRight
     * @see #ConstraintLayout_Layout_layout_goneMarginStart
     * @see #ConstraintLayout_Layout_layout_goneMarginTop
     * @see #ConstraintLayout_Layout_layout_optimizationLevel
     */
    public static final int[] ConstraintLayout_Layout={
      0x010100c4, 0x010100d5, 0x010100d6, 0x010100d7, 
      0x010100d8, 0x010100d9, 0x010100dc, 0x0101011f, 
      0x01010120, 0x0101013f, 0x01010140, 0x010103b3, 
      0x010103b4, 0x01010440, 0x7f040059, 0x7f04005a, 
      0x7f04005b, 0x7f040093, 0x7f0400e2, 0x7f0400e5, 
      0x7f04018e, 0x7f04018f, 0x7f040190, 0x7f040191, 
      0x7f040192, 0x7f040193, 0x7f040194, 0x7f040195, 
      0x7f040196, 0x7f040197, 0x7f040198, 0x7f040199, 
      0x7f04019a, 0x7f04019c, 0x7f04019d, 0x7f04019e, 
      0x7f04019f, 0x7f0401a0, 0x7f040219, 0x7f040221, 
      0x7f040222, 0x7f040223, 0x7f040224, 0x7f040225, 
      0x7f040226, 0x7f040227, 0x7f040228, 0x7f040229, 
      0x7f04022a, 0x7f04022b, 0x7f04022c, 0x7f04022d, 
      0x7f04022e, 0x7f04022f, 0x7f040230, 0x7f040231, 
      0x7f040232, 0x7f040233, 0x7f040234, 0x7f040235, 
      0x7f040236, 0x7f040237, 0x7f040238, 0x7f040239, 
      0x7f04023a, 0x7f04023b, 0x7f04023c, 0x7f04023d, 
      0x7f04023e, 0x7f04023f, 0x7f040240, 0x7f040241, 
      0x7f040242, 0x7f040243, 0x7f040244, 0x7f040245, 
      0x7f040246, 0x7f040247, 0x7f040248, 0x7f040249, 
      0x7f04024a, 0x7f04024c, 0x7f04024d, 0x7f04024e, 
      0x7f04024f, 0x7f040250, 0x7f040251, 0x7f040252, 
      0x7f040253, 0x7f040256
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ConstraintLayout_Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#padding}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:padding
     */
    public static final int ConstraintLayout_Layout_android_padding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingLeft
     */
    public static final int ConstraintLayout_Layout_android_paddingLeft=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingTop
     */
    public static final int ConstraintLayout_Layout_android_paddingTop=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingRight
     */
    public static final int ConstraintLayout_Layout_android_paddingRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingBottom
     */
    public static final int ConstraintLayout_Layout_android_paddingBottom=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int ConstraintLayout_Layout_android_visibility=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int ConstraintLayout_Layout_android_maxWidth=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int ConstraintLayout_Layout_android_maxHeight=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ConstraintLayout_Layout_android_minWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int ConstraintLayout_Layout_android_minHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingStart
     */
    public static final int ConstraintLayout_Layout_android_paddingStart=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#paddingEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:paddingEnd
     */
    public static final int ConstraintLayout_Layout_android_paddingEnd=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int ConstraintLayout_Layout_android_elevation=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:barrierAllowsGoneWidgets
     */
    public static final int ConstraintLayout_Layout_barrierAllowsGoneWidgets=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:barrierDirection
     */
    public static final int ConstraintLayout_Layout_barrierDirection=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:barrierMargin
     */
    public static final int ConstraintLayout_Layout_barrierMargin=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:chainUseRtl
     */
    public static final int ConstraintLayout_Layout_chainUseRtl=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraintSet}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:constraintSet
     */
    public static final int ConstraintLayout_Layout_constraintSet=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:constraint_referenced_ids
     */
    public static final int ConstraintLayout_Layout_constraint_referenced_ids=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_firstHorizontalBias
     */
    public static final int ConstraintLayout_Layout_flow_firstHorizontalBias=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_firstHorizontalStyle
     */
    public static final int ConstraintLayout_Layout_flow_firstHorizontalStyle=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_firstVerticalBias
     */
    public static final int ConstraintLayout_Layout_flow_firstVerticalBias=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_firstVerticalStyle
     */
    public static final int ConstraintLayout_Layout_flow_firstVerticalStyle=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_horizontalAlign
     */
    public static final int ConstraintLayout_Layout_flow_horizontalAlign=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_horizontalBias
     */
    public static final int ConstraintLayout_Layout_flow_horizontalBias=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:flow_horizontalGap
     */
    public static final int ConstraintLayout_Layout_flow_horizontalGap=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_horizontalStyle
     */
    public static final int ConstraintLayout_Layout_flow_horizontalStyle=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_lastHorizontalBias
     */
    public static final int ConstraintLayout_Layout_flow_lastHorizontalBias=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_lastHorizontalStyle
     */
    public static final int ConstraintLayout_Layout_flow_lastHorizontalStyle=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_lastVerticalBias
     */
    public static final int ConstraintLayout_Layout_flow_lastVerticalBias=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_lastVerticalStyle
     */
    public static final int ConstraintLayout_Layout_flow_lastVerticalStyle=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:flow_maxElementsWrap
     */
    public static final int ConstraintLayout_Layout_flow_maxElementsWrap=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_verticalAlign
     */
    public static final int ConstraintLayout_Layout_flow_verticalAlign=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_verticalBias
     */
    public static final int ConstraintLayout_Layout_flow_verticalBias=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:flow_verticalGap
     */
    public static final int ConstraintLayout_Layout_flow_verticalGap=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_verticalStyle
     */
    public static final int ConstraintLayout_Layout_flow_verticalStyle=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_wrapMode
     */
    public static final int ConstraintLayout_Layout_flow_wrapMode=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layoutDescription}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layoutDescription
     */
    public static final int ConstraintLayout_Layout_layoutDescription=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedHeight
     */
    public static final int ConstraintLayout_Layout_layout_constrainedHeight=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedWidth
     */
    public static final int ConstraintLayout_Layout_layout_constrainedWidth=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBaseline_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintBaseline_creator=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBaseline_toBaselineOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBottom_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_creator=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toBottomOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toTopOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintBottom_toTopOf=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout_constraintCircle
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircle=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintCircleAngle
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircleAngle=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintCircleRadius
     */
    public static final int ConstraintLayout_Layout_layout_constraintCircleRadius=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintDimensionRatio
     */
    public static final int ConstraintLayout_Layout_layout_constraintDimensionRatio=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toEndOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintEnd_toEndOf=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toStartOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintEnd_toStartOf=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_begin
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_begin=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_end
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_end=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintGuide_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintGuide_percent=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_default
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_default=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_max
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_max=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_min
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_min=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHeight_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintHeight_percent=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_bias
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_bias=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHorizontal_chainStyle
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_weight
     */
    public static final int ConstraintLayout_Layout_layout_constraintHorizontal_weight=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintLeft_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_creator=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toLeftOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toRightOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintLeft_toRightOf=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintRight_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_creator=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toLeftOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_toLeftOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toRightOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintRight_toRightOf=67;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toEndOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintStart_toEndOf=68;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toStartOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintStart_toStartOf=69;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintTag
     */
    public static final int ConstraintLayout_Layout_layout_constraintTag=70;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintTop_creator
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_creator=71;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toBottomOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_toBottomOf=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toTopOf
     */
    public static final int ConstraintLayout_Layout_layout_constraintTop_toTopOf=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_bias
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_bias=74;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintVertical_chainStyle
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_chainStyle=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_weight
     */
    public static final int ConstraintLayout_Layout_layout_constraintVertical_weight=76;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_default
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_default=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_max
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_max=78;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_min
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_min=79;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintWidth_percent
     */
    public static final int ConstraintLayout_Layout_layout_constraintWidth_percent=80;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteX
     */
    public static final int ConstraintLayout_Layout_layout_editor_absoluteX=81;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteY
     */
    public static final int ConstraintLayout_Layout_layout_editor_absoluteY=82;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginBottom
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginBottom=83;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginEnd
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginEnd=84;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginLeft
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginLeft=85;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginRight
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginRight=86;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginStart
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginStart=87;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginTop
     */
    public static final int ConstraintLayout_Layout_layout_goneMarginTop=88;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_optimizationLevel}
     * attribute's value can be found in the {@link #ConstraintLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>barrier</td><td>2</td><td></td></tr>
     * <tr><td>chains</td><td>4</td><td></td></tr>
     * <tr><td>dimensions</td><td>8</td><td></td></tr>
     * <tr><td>direct</td><td>1</td><td>direct, barriers, chains</td></tr>
     * <tr><td>graph</td><td>40</td><td></td></tr>
     * <tr><td>graph_wrap</td><td>80</td><td></td></tr>
     * <tr><td>groups</td><td>20</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>ratio</td><td>10</td><td></td></tr>
     * <tr><td>standard</td><td>7</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_optimizationLevel
     */
    public static final int ConstraintLayout_Layout_layout_optimizationLevel=89;
    /**
     * Attributes that can be used with a ConstraintLayout_placeholder.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_content com.android.settings:content}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintLayout_placeholder_placeholder_emptyVisibility com.android.settings:placeholder_emptyVisibility}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintLayout_placeholder_content
     * @see #ConstraintLayout_placeholder_placeholder_emptyVisibility
     */
    public static final int[] ConstraintLayout_placeholder={
      0x7f0400e7, 0x7f040316
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#content}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:content
     */
    public static final int ConstraintLayout_placeholder_content=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#placeholder_emptyVisibility}
     * attribute's value can be found in the {@link #ConstraintLayout_placeholder} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>8</td><td></td></tr>
     * <tr><td>invisible</td><td>4</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:placeholder_emptyVisibility
     */
    public static final int ConstraintLayout_placeholder_placeholder_emptyVisibility=1;
    /**
     * Attributes that can be used with a ConstraintSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConstraintSet_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_pivotX android:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_pivotY android:pivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_animate_relativeTo com.android.settings:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierAllowsGoneWidgets com.android.settings:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierDirection com.android.settings:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_barrierMargin com.android.settings:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_chainUseRtl com.android.settings:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_constraint_referenced_ids com.android.settings:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_deriveConstraintsFrom com.android.settings:deriveConstraintsFrom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_drawPath com.android.settings:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstHorizontalBias com.android.settings:flow_firstHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstHorizontalStyle com.android.settings:flow_firstHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstVerticalBias com.android.settings:flow_firstVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_firstVerticalStyle com.android.settings:flow_firstVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalAlign com.android.settings:flow_horizontalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalBias com.android.settings:flow_horizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalGap com.android.settings:flow_horizontalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_horizontalStyle com.android.settings:flow_horizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastHorizontalBias com.android.settings:flow_lastHorizontalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastHorizontalStyle com.android.settings:flow_lastHorizontalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastVerticalBias com.android.settings:flow_lastVerticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_lastVerticalStyle com.android.settings:flow_lastVerticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_maxElementsWrap com.android.settings:flow_maxElementsWrap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalAlign com.android.settings:flow_verticalAlign}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalBias com.android.settings:flow_verticalBias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalGap com.android.settings:flow_verticalGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_verticalStyle com.android.settings:flow_verticalStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_flow_wrapMode com.android.settings:flow_wrapMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedHeight com.android.settings:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constrainedWidth com.android.settings:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_creator com.android.settings:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBaseline_toBaselineOf com.android.settings:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_creator com.android.settings:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toBottomOf com.android.settings:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintBottom_toTopOf com.android.settings:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircle com.android.settings:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleAngle com.android.settings:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintCircleRadius com.android.settings:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintDimensionRatio com.android.settings:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toEndOf com.android.settings:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintEnd_toStartOf com.android.settings:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_begin com.android.settings:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_end com.android.settings:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintGuide_percent com.android.settings:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_default com.android.settings:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_max com.android.settings:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_min com.android.settings:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHeight_percent com.android.settings:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_bias com.android.settings:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_chainStyle com.android.settings:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintHorizontal_weight com.android.settings:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_creator com.android.settings:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toLeftOf com.android.settings:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintLeft_toRightOf com.android.settings:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_creator com.android.settings:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toLeftOf com.android.settings:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintRight_toRightOf com.android.settings:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toEndOf com.android.settings:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintStart_toStartOf com.android.settings:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTag com.android.settings:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_creator com.android.settings:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toBottomOf com.android.settings:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintTop_toTopOf com.android.settings:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_bias com.android.settings:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_chainStyle com.android.settings:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintVertical_weight com.android.settings:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_default com.android.settings:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_max com.android.settings:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_min com.android.settings:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_constraintWidth_percent com.android.settings:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteX com.android.settings:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_editor_absoluteY com.android.settings:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginBottom com.android.settings:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginEnd com.android.settings:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginLeft com.android.settings:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginRight com.android.settings:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginStart com.android.settings:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_layout_goneMarginTop com.android.settings:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_motionProgress com.android.settings:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_motionStagger com.android.settings:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_pathMotionArc com.android.settings:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_pivotAnchor com.android.settings:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConstraintSet_transitionPathRotate com.android.settings:transitionPathRotate}</code></td><td></td></tr>
     * </table>
     * @see #ConstraintSet_android_orientation
     * @see #ConstraintSet_android_id
     * @see #ConstraintSet_android_visibility
     * @see #ConstraintSet_android_layout_width
     * @see #ConstraintSet_android_layout_height
     * @see #ConstraintSet_android_layout_marginLeft
     * @see #ConstraintSet_android_layout_marginTop
     * @see #ConstraintSet_android_layout_marginRight
     * @see #ConstraintSet_android_layout_marginBottom
     * @see #ConstraintSet_android_maxWidth
     * @see #ConstraintSet_android_maxHeight
     * @see #ConstraintSet_android_minWidth
     * @see #ConstraintSet_android_minHeight
     * @see #ConstraintSet_android_pivotX
     * @see #ConstraintSet_android_pivotY
     * @see #ConstraintSet_android_alpha
     * @see #ConstraintSet_android_transformPivotX
     * @see #ConstraintSet_android_transformPivotY
     * @see #ConstraintSet_android_translationX
     * @see #ConstraintSet_android_translationY
     * @see #ConstraintSet_android_scaleX
     * @see #ConstraintSet_android_scaleY
     * @see #ConstraintSet_android_rotation
     * @see #ConstraintSet_android_rotationX
     * @see #ConstraintSet_android_rotationY
     * @see #ConstraintSet_android_layout_marginStart
     * @see #ConstraintSet_android_layout_marginEnd
     * @see #ConstraintSet_android_translationZ
     * @see #ConstraintSet_android_elevation
     * @see #ConstraintSet_animate_relativeTo
     * @see #ConstraintSet_barrierAllowsGoneWidgets
     * @see #ConstraintSet_barrierDirection
     * @see #ConstraintSet_barrierMargin
     * @see #ConstraintSet_chainUseRtl
     * @see #ConstraintSet_constraint_referenced_ids
     * @see #ConstraintSet_deriveConstraintsFrom
     * @see #ConstraintSet_drawPath
     * @see #ConstraintSet_flow_firstHorizontalBias
     * @see #ConstraintSet_flow_firstHorizontalStyle
     * @see #ConstraintSet_flow_firstVerticalBias
     * @see #ConstraintSet_flow_firstVerticalStyle
     * @see #ConstraintSet_flow_horizontalAlign
     * @see #ConstraintSet_flow_horizontalBias
     * @see #ConstraintSet_flow_horizontalGap
     * @see #ConstraintSet_flow_horizontalStyle
     * @see #ConstraintSet_flow_lastHorizontalBias
     * @see #ConstraintSet_flow_lastHorizontalStyle
     * @see #ConstraintSet_flow_lastVerticalBias
     * @see #ConstraintSet_flow_lastVerticalStyle
     * @see #ConstraintSet_flow_maxElementsWrap
     * @see #ConstraintSet_flow_verticalAlign
     * @see #ConstraintSet_flow_verticalBias
     * @see #ConstraintSet_flow_verticalGap
     * @see #ConstraintSet_flow_verticalStyle
     * @see #ConstraintSet_flow_wrapMode
     * @see #ConstraintSet_layout_constrainedHeight
     * @see #ConstraintSet_layout_constrainedWidth
     * @see #ConstraintSet_layout_constraintBaseline_creator
     * @see #ConstraintSet_layout_constraintBaseline_toBaselineOf
     * @see #ConstraintSet_layout_constraintBottom_creator
     * @see #ConstraintSet_layout_constraintBottom_toBottomOf
     * @see #ConstraintSet_layout_constraintBottom_toTopOf
     * @see #ConstraintSet_layout_constraintCircle
     * @see #ConstraintSet_layout_constraintCircleAngle
     * @see #ConstraintSet_layout_constraintCircleRadius
     * @see #ConstraintSet_layout_constraintDimensionRatio
     * @see #ConstraintSet_layout_constraintEnd_toEndOf
     * @see #ConstraintSet_layout_constraintEnd_toStartOf
     * @see #ConstraintSet_layout_constraintGuide_begin
     * @see #ConstraintSet_layout_constraintGuide_end
     * @see #ConstraintSet_layout_constraintGuide_percent
     * @see #ConstraintSet_layout_constraintHeight_default
     * @see #ConstraintSet_layout_constraintHeight_max
     * @see #ConstraintSet_layout_constraintHeight_min
     * @see #ConstraintSet_layout_constraintHeight_percent
     * @see #ConstraintSet_layout_constraintHorizontal_bias
     * @see #ConstraintSet_layout_constraintHorizontal_chainStyle
     * @see #ConstraintSet_layout_constraintHorizontal_weight
     * @see #ConstraintSet_layout_constraintLeft_creator
     * @see #ConstraintSet_layout_constraintLeft_toLeftOf
     * @see #ConstraintSet_layout_constraintLeft_toRightOf
     * @see #ConstraintSet_layout_constraintRight_creator
     * @see #ConstraintSet_layout_constraintRight_toLeftOf
     * @see #ConstraintSet_layout_constraintRight_toRightOf
     * @see #ConstraintSet_layout_constraintStart_toEndOf
     * @see #ConstraintSet_layout_constraintStart_toStartOf
     * @see #ConstraintSet_layout_constraintTag
     * @see #ConstraintSet_layout_constraintTop_creator
     * @see #ConstraintSet_layout_constraintTop_toBottomOf
     * @see #ConstraintSet_layout_constraintTop_toTopOf
     * @see #ConstraintSet_layout_constraintVertical_bias
     * @see #ConstraintSet_layout_constraintVertical_chainStyle
     * @see #ConstraintSet_layout_constraintVertical_weight
     * @see #ConstraintSet_layout_constraintWidth_default
     * @see #ConstraintSet_layout_constraintWidth_max
     * @see #ConstraintSet_layout_constraintWidth_min
     * @see #ConstraintSet_layout_constraintWidth_percent
     * @see #ConstraintSet_layout_editor_absoluteX
     * @see #ConstraintSet_layout_editor_absoluteY
     * @see #ConstraintSet_layout_goneMarginBottom
     * @see #ConstraintSet_layout_goneMarginEnd
     * @see #ConstraintSet_layout_goneMarginLeft
     * @see #ConstraintSet_layout_goneMarginRight
     * @see #ConstraintSet_layout_goneMarginStart
     * @see #ConstraintSet_layout_goneMarginTop
     * @see #ConstraintSet_motionProgress
     * @see #ConstraintSet_motionStagger
     * @see #ConstraintSet_pathMotionArc
     * @see #ConstraintSet_pivotAnchor
     * @see #ConstraintSet_transitionEasing
     * @see #ConstraintSet_transitionPathRotate
     */
    public static final int[] ConstraintSet={
      0x010100c4, 0x010100d0, 0x010100dc, 0x010100f4, 
      0x010100f5, 0x010100f7, 0x010100f8, 0x010100f9, 
      0x010100fa, 0x0101011f, 0x01010120, 0x0101013f, 
      0x01010140, 0x010101b5, 0x010101b6, 0x0101031f, 
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103b5, 0x010103b6, 0x010103fa, 
      0x01010440, 0x7f040035, 0x7f040059, 0x7f04005a, 
      0x7f04005b, 0x7f040093, 0x7f0400e5, 0x7f040126, 
      0x7f04013c, 0x7f04018e, 0x7f04018f, 0x7f040190, 
      0x7f040191, 0x7f040192, 0x7f040193, 0x7f040194, 
      0x7f040195, 0x7f040196, 0x7f040197, 0x7f040198, 
      0x7f040199, 0x7f04019a, 0x7f04019c, 0x7f04019d, 
      0x7f04019e, 0x7f04019f, 0x7f0401a0, 0x7f040221, 
      0x7f040222, 0x7f040223, 0x7f040224, 0x7f040225, 
      0x7f040226, 0x7f040227, 0x7f040228, 0x7f040229, 
      0x7f04022a, 0x7f04022b, 0x7f04022c, 0x7f04022d, 
      0x7f04022e, 0x7f04022f, 0x7f040230, 0x7f040231, 
      0x7f040232, 0x7f040233, 0x7f040234, 0x7f040235, 
      0x7f040236, 0x7f040237, 0x7f040238, 0x7f040239, 
      0x7f04023a, 0x7f04023b, 0x7f04023c, 0x7f04023d, 
      0x7f04023e, 0x7f04023f, 0x7f040240, 0x7f040241, 
      0x7f040242, 0x7f040243, 0x7f040244, 0x7f040245, 
      0x7f040246, 0x7f040247, 0x7f040248, 0x7f040249, 
      0x7f04024a, 0x7f04024c, 0x7f04024d, 0x7f04024e, 
      0x7f04024f, 0x7f040250, 0x7f040251, 0x7f040252, 
      0x7f040253, 0x7f0402d6, 0x7f0402d7, 0x7f040307, 
      0x7f04030f, 0x7f0404af, 0x7f0404b0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ConstraintSet_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ConstraintSet_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int ConstraintSet_android_visibility=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int ConstraintSet_android_layout_width=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int ConstraintSet_android_layout_height=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int ConstraintSet_android_layout_marginLeft=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int ConstraintSet_android_layout_marginTop=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int ConstraintSet_android_layout_marginRight=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int ConstraintSet_android_layout_marginBottom=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int ConstraintSet_android_maxWidth=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int ConstraintSet_android_maxHeight=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ConstraintSet_android_minWidth=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int ConstraintSet_android_minHeight=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotX
     */
    public static final int ConstraintSet_android_pivotX=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#pivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:pivotY
     */
    public static final int ConstraintSet_android_pivotY=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ConstraintSet_android_alpha=15;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int ConstraintSet_android_transformPivotX=16;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int ConstraintSet_android_transformPivotY=17;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int ConstraintSet_android_translationX=18;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int ConstraintSet_android_translationY=19;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int ConstraintSet_android_scaleX=20;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int ConstraintSet_android_scaleY=21;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int ConstraintSet_android_rotation=22;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int ConstraintSet_android_rotationX=23;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int ConstraintSet_android_rotationY=24;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int ConstraintSet_android_layout_marginStart=25;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int ConstraintSet_android_layout_marginEnd=26;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int ConstraintSet_android_translationZ=27;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int ConstraintSet_android_elevation=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:animate_relativeTo
     */
    public static final int ConstraintSet_animate_relativeTo=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:barrierAllowsGoneWidgets
     */
    public static final int ConstraintSet_barrierAllowsGoneWidgets=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:barrierDirection
     */
    public static final int ConstraintSet_barrierDirection=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:barrierMargin
     */
    public static final int ConstraintSet_barrierMargin=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:chainUseRtl
     */
    public static final int ConstraintSet_chainUseRtl=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:constraint_referenced_ids
     */
    public static final int ConstraintSet_constraint_referenced_ids=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#deriveConstraintsFrom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:deriveConstraintsFrom
     */
    public static final int ConstraintSet_deriveConstraintsFrom=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawPath}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:drawPath
     */
    public static final int ConstraintSet_drawPath=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_firstHorizontalBias
     */
    public static final int ConstraintSet_flow_firstHorizontalBias=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_firstHorizontalStyle
     */
    public static final int ConstraintSet_flow_firstHorizontalStyle=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstVerticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_firstVerticalBias
     */
    public static final int ConstraintSet_flow_firstVerticalBias=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_firstVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_firstVerticalStyle
     */
    public static final int ConstraintSet_flow_firstVerticalStyle=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalAlign}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_horizontalAlign
     */
    public static final int ConstraintSet_flow_horizontalAlign=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_horizontalBias
     */
    public static final int ConstraintSet_flow_horizontalBias=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalGap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:flow_horizontalGap
     */
    public static final int ConstraintSet_flow_horizontalGap=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_horizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_horizontalStyle
     */
    public static final int ConstraintSet_flow_horizontalStyle=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastHorizontalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_lastHorizontalBias
     */
    public static final int ConstraintSet_flow_lastHorizontalBias=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastHorizontalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_lastHorizontalStyle
     */
    public static final int ConstraintSet_flow_lastHorizontalStyle=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastVerticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_lastVerticalBias
     */
    public static final int ConstraintSet_flow_lastVerticalBias=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_lastVerticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_lastVerticalStyle
     */
    public static final int ConstraintSet_flow_lastVerticalStyle=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_maxElementsWrap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:flow_maxElementsWrap
     */
    public static final int ConstraintSet_flow_maxElementsWrap=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalAlign}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>3</td><td></td></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>center</td><td>2</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_verticalAlign
     */
    public static final int ConstraintSet_flow_verticalAlign=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalBias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:flow_verticalBias
     */
    public static final int ConstraintSet_flow_verticalBias=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalGap}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:flow_verticalGap
     */
    public static final int ConstraintSet_flow_verticalGap=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_verticalStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_verticalStyle
     */
    public static final int ConstraintSet_flow_verticalStyle=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#flow_wrapMode}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>aligned</td><td>2</td><td></td></tr>
     * <tr><td>chain</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:flow_wrapMode
     */
    public static final int ConstraintSet_flow_wrapMode=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedHeight
     */
    public static final int ConstraintSet_layout_constrainedHeight=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedWidth
     */
    public static final int ConstraintSet_layout_constrainedWidth=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBaseline_creator
     */
    public static final int ConstraintSet_layout_constraintBaseline_creator=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBaseline_toBaselineOf
     */
    public static final int ConstraintSet_layout_constraintBaseline_toBaselineOf=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBottom_creator
     */
    public static final int ConstraintSet_layout_constraintBottom_creator=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toBottomOf
     */
    public static final int ConstraintSet_layout_constraintBottom_toBottomOf=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toTopOf
     */
    public static final int ConstraintSet_layout_constraintBottom_toTopOf=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout_constraintCircle
     */
    public static final int ConstraintSet_layout_constraintCircle=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintCircleAngle
     */
    public static final int ConstraintSet_layout_constraintCircleAngle=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintCircleRadius
     */
    public static final int ConstraintSet_layout_constraintCircleRadius=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintDimensionRatio
     */
    public static final int ConstraintSet_layout_constraintDimensionRatio=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toEndOf
     */
    public static final int ConstraintSet_layout_constraintEnd_toEndOf=66;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toStartOf
     */
    public static final int ConstraintSet_layout_constraintEnd_toStartOf=67;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_begin
     */
    public static final int ConstraintSet_layout_constraintGuide_begin=68;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_end
     */
    public static final int ConstraintSet_layout_constraintGuide_end=69;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintGuide_percent
     */
    public static final int ConstraintSet_layout_constraintGuide_percent=70;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_default
     */
    public static final int ConstraintSet_layout_constraintHeight_default=71;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_max
     */
    public static final int ConstraintSet_layout_constraintHeight_max=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_min
     */
    public static final int ConstraintSet_layout_constraintHeight_min=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHeight_percent
     */
    public static final int ConstraintSet_layout_constraintHeight_percent=74;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_bias
     */
    public static final int ConstraintSet_layout_constraintHorizontal_bias=75;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHorizontal_chainStyle
     */
    public static final int ConstraintSet_layout_constraintHorizontal_chainStyle=76;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_weight
     */
    public static final int ConstraintSet_layout_constraintHorizontal_weight=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintLeft_creator
     */
    public static final int ConstraintSet_layout_constraintLeft_creator=78;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toLeftOf
     */
    public static final int ConstraintSet_layout_constraintLeft_toLeftOf=79;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toRightOf
     */
    public static final int ConstraintSet_layout_constraintLeft_toRightOf=80;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintRight_creator
     */
    public static final int ConstraintSet_layout_constraintRight_creator=81;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toLeftOf
     */
    public static final int ConstraintSet_layout_constraintRight_toLeftOf=82;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toRightOf
     */
    public static final int ConstraintSet_layout_constraintRight_toRightOf=83;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toEndOf
     */
    public static final int ConstraintSet_layout_constraintStart_toEndOf=84;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toStartOf
     */
    public static final int ConstraintSet_layout_constraintStart_toStartOf=85;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintTag
     */
    public static final int ConstraintSet_layout_constraintTag=86;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintTop_creator
     */
    public static final int ConstraintSet_layout_constraintTop_creator=87;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toBottomOf
     */
    public static final int ConstraintSet_layout_constraintTop_toBottomOf=88;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toTopOf
     */
    public static final int ConstraintSet_layout_constraintTop_toTopOf=89;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_bias
     */
    public static final int ConstraintSet_layout_constraintVertical_bias=90;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintVertical_chainStyle
     */
    public static final int ConstraintSet_layout_constraintVertical_chainStyle=91;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_weight
     */
    public static final int ConstraintSet_layout_constraintVertical_weight=92;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_default
     */
    public static final int ConstraintSet_layout_constraintWidth_default=93;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_max
     */
    public static final int ConstraintSet_layout_constraintWidth_max=94;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_min
     */
    public static final int ConstraintSet_layout_constraintWidth_min=95;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintWidth_percent
     */
    public static final int ConstraintSet_layout_constraintWidth_percent=96;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteX
     */
    public static final int ConstraintSet_layout_editor_absoluteX=97;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteY
     */
    public static final int ConstraintSet_layout_editor_absoluteY=98;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginBottom
     */
    public static final int ConstraintSet_layout_goneMarginBottom=99;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginEnd
     */
    public static final int ConstraintSet_layout_goneMarginEnd=100;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginLeft
     */
    public static final int ConstraintSet_layout_goneMarginLeft=101;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginRight
     */
    public static final int ConstraintSet_layout_goneMarginRight=102;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginStart
     */
    public static final int ConstraintSet_layout_goneMarginStart=103;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginTop
     */
    public static final int ConstraintSet_layout_goneMarginTop=104;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionProgress}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionProgress
     */
    public static final int ConstraintSet_motionProgress=105;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionStagger}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionStagger
     */
    public static final int ConstraintSet_motionStagger=106;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pathMotionArc
     */
    public static final int ConstraintSet_pathMotionArc=107;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pivotAnchor
     */
    public static final int ConstraintSet_pivotAnchor=108;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int ConstraintSet_transitionEasing=109;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #ConstraintSet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:transitionPathRotate
     */
    public static final int ConstraintSet_transitionPathRotate=110;
    /**
     * For ConversationMessageView
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConversationMessageView_iconBackgroundColor com.android.settings:iconBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_iconText com.android.settings:iconText}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_iconTextColor com.android.settings:iconTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_incoming com.android.settings:incoming}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_messageText com.android.settings:messageText}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_timestampText com.android.settings:timestampText}</code></td><td></td></tr>
     * </table>
     * @see #ConversationMessageView_iconBackgroundColor
     * @see #ConversationMessageView_iconText
     * @see #ConversationMessageView_iconTextColor
     * @see #ConversationMessageView_incoming
     * @see #ConversationMessageView_messageText
     * @see #ConversationMessageView_timestampText
     */
    public static final int[] ConversationMessageView={
      0x7f0401d7, 0x7f0401de, 0x7f0401df, 0x7f0401e6, 
      0x7f0402b9, 0x7f040484
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#iconBackgroundColor}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconBackgroundColor
     */
    public static final int ConversationMessageView_iconBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#iconText}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:iconText
     */
    public static final int ConversationMessageView_iconText=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#iconTextColor}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconTextColor
     */
    public static final int ConversationMessageView_iconTextColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#incoming}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:incoming
     */
    public static final int ConversationMessageView_incoming=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#messageText}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:messageText
     */
    public static final int ConversationMessageView_messageText=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#timestampText}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:timestampText
     */
    public static final int ConversationMessageView_timestampText=5;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.settings:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.settings:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f04020f, 0x7f04039b
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.settings:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.settings:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.settings:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.settings:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.settings:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.settings:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f04021c, 0x7f04021d, 0x7f04021e, 
      0x7f04024b, 0x7f040254, 0x7f040255
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a CustomAttribute.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CustomAttribute_attributeName com.android.settings:attributeName}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customBoolean com.android.settings:customBoolean}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customColorDrawableValue com.android.settings:customColorDrawableValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customColorValue com.android.settings:customColorValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customDimension com.android.settings:customDimension}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customFloatValue com.android.settings:customFloatValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customIntegerValue com.android.settings:customIntegerValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customPixelDimension com.android.settings:customPixelDimension}</code></td><td></td></tr>
     * <tr><td><code>{@link #CustomAttribute_customStringValue com.android.settings:customStringValue}</code></td><td></td></tr>
     * </table>
     * @see #CustomAttribute_attributeName
     * @see #CustomAttribute_customBoolean
     * @see #CustomAttribute_customColorDrawableValue
     * @see #CustomAttribute_customColorValue
     * @see #CustomAttribute_customDimension
     * @see #CustomAttribute_customFloatValue
     * @see #CustomAttribute_customIntegerValue
     * @see #CustomAttribute_customPixelDimension
     * @see #CustomAttribute_customStringValue
     */
    public static final int[] CustomAttribute={
      0x7f040041, 0x7f040112, 0x7f040113, 0x7f040114, 
      0x7f040115, 0x7f040116, 0x7f040117, 0x7f040119, 
      0x7f04011a
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#attributeName}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:attributeName
     */
    public static final int CustomAttribute_attributeName=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customBoolean}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:customBoolean
     */
    public static final int CustomAttribute_customBoolean=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customColorDrawableValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:customColorDrawableValue
     */
    public static final int CustomAttribute_customColorDrawableValue=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customColorValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:customColorValue
     */
    public static final int CustomAttribute_customColorValue=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customDimension}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:customDimension
     */
    public static final int CustomAttribute_customDimension=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customFloatValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:customFloatValue
     */
    public static final int CustomAttribute_customFloatValue=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customIntegerValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:customIntegerValue
     */
    public static final int CustomAttribute_customIntegerValue=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customPixelDimension}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:customPixelDimension
     */
    public static final int CustomAttribute_customPixelDimension=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#customStringValue}
     * attribute's value can be found in the {@link #CustomAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:customStringValue
     */
    public static final int CustomAttribute_customStringValue=8;
    /**
     * Attributes that can be used with a DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.android.settings:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.android.settings:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.android.settings:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.android.settings:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.android.settings:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.android.settings:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
      0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
      0x010101f6, 0x010101f7, 0x7f040129, 0x7f04012a, 
      0x7f04012b, 0x7f04012f, 0x7f0402e3, 0x7f04031b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * For DotsPageIndicator
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DotsPageIndicator_animationDuration com.android.settings:animationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_currentPageIndicatorColor com.android.settings:currentPageIndicatorColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_dotDiameter com.android.settings:dotDiameter}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_dotGap com.android.settings:dotGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_pageIndicatorColor com.android.settings:pageIndicatorColor}</code></td><td></td></tr>
     * </table>
     * @see #DotsPageIndicator_animationDuration
     * @see #DotsPageIndicator_currentPageIndicatorColor
     * @see #DotsPageIndicator_dotDiameter
     * @see #DotsPageIndicator_dotGap
     * @see #DotsPageIndicator_pageIndicatorColor
     */
    public static final int[] DotsPageIndicator={
      0x7f040037, 0x7f04010f, 0x7f040138, 0x7f040139, 
      0x7f0402fe
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animationDuration}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:animationDuration
     */
    public static final int DotsPageIndicator_animationDuration=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#currentPageIndicatorColor}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:currentPageIndicatorColor
     */
    public static final int DotsPageIndicator_currentPageIndicatorColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dotDiameter}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dotDiameter
     */
    public static final int DotsPageIndicator_dotDiameter=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dotGap}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dotGap
     */
    public static final int DotsPageIndicator_dotGap=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pageIndicatorColor}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:pageIndicatorColor
     */
    public static final int DotsPageIndicator_pageIndicatorColor=4;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.settings:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.settings:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.settings:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.settings:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.settings:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.settings:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.settings:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.settings:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f04003d, 0x7f04003e, 0x7f040058, 0x7f0400c9, 
      0x7f040141, 0x7f0401b4, 0x7f040381, 0x7f040474
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x7f040150
    };
    /**
     * <p>
     * @attr description
     * The height difference between the drawer and the base surface. Only takes effect on API 21 and above
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a EditTextPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #EditTextPreference_useSimpleSummaryProvider com.android.settings:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #EditTextPreference_useSimpleSummaryProvider
     */
    public static final int[] EditTextPreference={
      0x7f0404bd
    };
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useSimpleSummaryProvider
     */
    public static final int EditTextPreference_useSimpleSummaryProvider=0;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_collapsedSize com.android.settings:collapsedSize}</code></td><td>FAB size when collapsed.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_extendMotionSpec com.android.settings:extendMotionSpec}</code></td><td>Motion spec for extend animation.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_hideMotionSpec com.android.settings:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_showMotionSpec com.android.settings:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_shrinkMotionSpec com.android.settings:shrinkMotionSpec}</code></td><td>Motion spec for shrink animation.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_collapsedSize
     * @see #ExtendedFloatingActionButton_elevation
     * @see #ExtendedFloatingActionButton_extendMotionSpec
     * @see #ExtendedFloatingActionButton_hideMotionSpec
     * @see #ExtendedFloatingActionButton_showMotionSpec
     * @see #ExtendedFloatingActionButton_shrinkMotionSpec
     */
    public static final int[] ExtendedFloatingActionButton={
      0x7f0400c5, 0x7f040150, 0x7f040177, 0x7f0401c9, 
      0x7f04036d, 0x7f040372
    };
    /**
     * <p>
     * @attr description
     * FAB size when collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:collapsedSize
     */
    public static final int ExtendedFloatingActionButton_collapsedSize=0;
    /**
     * <p>
     * @attr description
     * Elevation for the ExtendedFloatingActionButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int ExtendedFloatingActionButton_elevation=1;
    /**
     * <p>
     * @attr description
     * Motion spec for extend animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:extendMotionSpec
     */
    public static final int ExtendedFloatingActionButton_extendMotionSpec=2;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:hideMotionSpec
     */
    public static final int ExtendedFloatingActionButton_hideMotionSpec=3;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:showMotionSpec
     */
    public static final int ExtendedFloatingActionButton_showMotionSpec=4;
    /**
     * <p>
     * @attr description
     * Motion spec for shrink animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shrinkMotionSpec
     */
    public static final int ExtendedFloatingActionButton_shrinkMotionSpec=5;
    /**
     * Attributes that can be used with a ExtendedFloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide com.android.settings:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * <tr><td><code>{@link #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink com.android.settings:behavior_autoShrink}</code></td><td>Whether the extended FAB should automatically shrink when there is no space for it.</td></tr>
     * </table>
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide
     * @see #ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink
     */
    public static final int[] ExtendedFloatingActionButton_Behavior_Layout={
      0x7f04005c, 0x7f04005d
    };
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_autoHide
     */
    public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * <p>
     * @attr description
     * Whether the extended FAB should automatically shrink when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_autoShrink
     */
    public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink=1;
    /**
     * For Face enroll accessibility toggle
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FaceEnrollAccessibilityToggle_messageText com.android.settings:messageText}</code></td><td></td></tr>
     * </table>
     * @see #FaceEnrollAccessibilityToggle_messageText
     */
    public static final int[] FaceEnrollAccessibilityToggle={
      0x7f0402b9
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#messageText}
     * attribute's value can be found in the {@link #FaceEnrollAccessibilityToggle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:messageText
     */
    public static final int FaceEnrollAccessibilityToggle_messageText=0;
    /**
     * Attributes that can be used with a FixedLineSummaryPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FixedLineSummaryPreference_summaryLineCount com.android.settings:summaryLineCount}</code></td><td></td></tr>
     * </table>
     * @see #FixedLineSummaryPreference_summaryLineCount
     */
    public static final int[] FixedLineSummaryPreference={
      0x7f04041b
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#summaryLineCount}
     * attribute's value can be found in the {@link #FixedLineSummaryPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:summaryLineCount
     */
    public static final int FixedLineSummaryPreference_summaryLineCount=0;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode com.android.settings:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth com.android.settings:borderWidth}</code></td><td>The width of the border around the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_ensureMinTouchTargetSize com.android.settings:ensureMinTouchTargetSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabCustomSize com.android.settings:fabCustomSize}</code></td><td>Custom size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize com.android.settings:fabSize}</code></td><td>Size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hideMotionSpec com.android.settings:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hoveredFocusedTranslationZ com.android.settings:hoveredFocusedTranslationZ}</code></td><td>TranslationZ value for the FAB when hovered, focused, or hovered and focused.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_maxImageSize com.android.settings:maxImageSize}</code></td><td>Maximum icon image size.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ com.android.settings:pressedTranslationZ}</code></td><td>TranslationZ value for the FAB when pressed</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor com.android.settings:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_showMotionSpec com.android.settings:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding com.android.settings:useCompatPadding}</code></td><td>Enable compat padding.</td></tr>
     * </table>
     * @see #FloatingActionButton_android_enabled
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_ensureMinTouchTargetSize
     * @see #FloatingActionButton_fabCustomSize
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_hideMotionSpec
     * @see #FloatingActionButton_hoveredFocusedTranslationZ
     * @see #FloatingActionButton_maxImageSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_shapeAppearance
     * @see #FloatingActionButton_shapeAppearanceOverlay
     * @see #FloatingActionButton_showMotionSpec
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
      0x0101000e, 0x7f040052, 0x7f040053, 0x7f040068, 
      0x7f040150, 0x7f040161, 0x7f040181, 0x7f040182, 
      0x7f0401c9, 0x7f0401d4, 0x7f0402a2, 0x7f04032b, 
      0x7f040344, 0x7f040362, 0x7f040365, 0x7f04036d, 
      0x7f0404bb
    };
    /**
     * <p>
     * @attr description
     * Whether the FloatingActionButton is enabled
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int FloatingActionButton_android_enabled=0;
    /**
     * <p>
     * @attr description
     * Background for the FloatingActionButton
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int FloatingActionButton_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:backgroundTintMode
     */
    public static final int FloatingActionButton_backgroundTintMode=2;
    /**
     * <p>
     * @attr description
     * The width of the border around the FAB.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:borderWidth
     */
    public static final int FloatingActionButton_borderWidth=3;
    /**
     * <p>
     * @attr description
     * Elevation value for the FAB
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int FloatingActionButton_elevation=4;
    /**
     * <p>
     * @attr description
     * Whether to extend the bounds of the FloatingActionButton to meet
     * @dimen/mtrl_fab_min_touch_target.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:ensureMinTouchTargetSize
     */
    public static final int FloatingActionButton_ensureMinTouchTargetSize=5;
    /**
     * <p>
     * @attr description
     * Custom size for the FAB. If this is set, fabSize will be ignored.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:fabCustomSize
     */
    public static final int FloatingActionButton_fabCustomSize=6;
    /**
     * <p>
     * @attr description
     * Size for the FAB. If fabCustomSize is set, this will be ignored.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:fabSize
     */
    public static final int FloatingActionButton_fabSize=7;
    /**
     * <p>
     * @attr description
     * Motion spec for hide animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:hideMotionSpec
     */
    public static final int FloatingActionButton_hideMotionSpec=8;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when hovered, focused, or hovered and focused.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:hoveredFocusedTranslationZ
     */
    public static final int FloatingActionButton_hoveredFocusedTranslationZ=9;
    /**
     * <p>
     * @attr description
     * Maximum icon image size.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxImageSize
     */
    public static final int FloatingActionButton_maxImageSize=10;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when pressed
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:pressedTranslationZ
     */
    public static final int FloatingActionButton_pressedTranslationZ=11;
    /**
     * <p>
     * @attr description
     * Ripple color for the FAB.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:rippleColor
     */
    public static final int FloatingActionButton_rippleColor=12;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for FloatingActionButton. Attribute declaration
     * is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int FloatingActionButton_shapeAppearance=13;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for FloatingActionButton.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int FloatingActionButton_shapeAppearanceOverlay=14;
    /**
     * <p>
     * @attr description
     * Motion spec for show animation. This should be a MotionSpec resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:showMotionSpec
     */
    public static final int FloatingActionButton_showMotionSpec=15;
    /**
     * <p>
     * @attr description
     * Enable compat padding.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useCompatPadding
     */
    public static final int FloatingActionButton_useCompatPadding=16;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide com.android.settings:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
      0x7f04005c
    };
    /**
     * <p>
     * @attr description
     * Whether the FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:behavior_autoHide
     */
    public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that can be used with a FlowLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FlowLayout_itemSpacing com.android.settings:itemSpacing}</code></td><td>Horizontal spacing between two items being laid out.</td></tr>
     * <tr><td><code>{@link #FlowLayout_lineSpacing com.android.settings:lineSpacing}</code></td><td>Vertical Spacing between two lines of items being laid out.</td></tr>
     * </table>
     * @see #FlowLayout_itemSpacing
     * @see #FlowLayout_lineSpacing
     */
    public static final int[] FlowLayout={
      0x7f040205, 0x7f04025d
    };
    /**
     * <p>
     * @attr description
     * Horizontal spacing between two items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemSpacing
     */
    public static final int FlowLayout_itemSpacing=0;
    /**
     * <p>
     * @attr description
     * Vertical Spacing between two lines of items being laid out.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:lineSpacing
     */
    public static final int FlowLayout_lineSpacing=1;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.settings:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.settings:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.settings:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.settings:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.settings:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.settings:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.android.settings:fontProviderSystemFontFamily}</code></td><td>Provides the system font family name to check before downloading the font.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x7f0401a4, 0x7f0401a5, 0x7f0401a6, 0x7f0401a7, 
      0x7f0401a8, 0x7f0401a9, 0x7f0401aa
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * <p>
     * @attr description
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontProviderSystemFontFamily
     */
    public static final int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.settings:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.settings:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.settings:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.settings:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.settings:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f0401a2, 0x7f0401ab, 0x7f0401ac, 
      0x7f0401ad, 0x7f0404b5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding com.android.settings:foregroundInsidePadding}</code></td><td>Do not expose publicly, used by ForegroundLinearLayout but never set by any style.</td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
      0x01010109, 0x01010200, 0x7f0401b1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static final int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static final int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>
     * @attr description
     * Do not expose publicly, used by ForegroundLinearLayout but never set by any style.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:foregroundInsidePadding
     */
    public static final int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a ImageFilterView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ImageFilterView_altSrc com.android.settings:altSrc}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_brightness com.android.settings:brightness}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_contrast com.android.settings:contrast}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_crossfade com.android.settings:crossfade}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_overlay com.android.settings:overlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_round com.android.settings:round}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_roundPercent com.android.settings:roundPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_saturation com.android.settings:saturation}</code></td><td></td></tr>
     * <tr><td><code>{@link #ImageFilterView_warmth com.android.settings:warmth}</code></td><td></td></tr>
     * </table>
     * @see #ImageFilterView_altSrc
     * @see #ImageFilterView_brightness
     * @see #ImageFilterView_contrast
     * @see #ImageFilterView_crossfade
     * @see #ImageFilterView_overlay
     * @see #ImageFilterView_round
     * @see #ImageFilterView_roundPercent
     * @see #ImageFilterView_saturation
     * @see #ImageFilterView_warmth
     */
    public static final int[] ImageFilterView={
      0x7f040033, 0x7f04007c, 0x7f0400f9, 0x7f04010e, 
      0x7f0402f5, 0x7f040345, 0x7f040346, 0x7f04034e, 
      0x7f0404c5
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#altSrc}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:altSrc
     */
    public static final int ImageFilterView_altSrc=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#brightness}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:brightness
     */
    public static final int ImageFilterView_brightness=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#contrast}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:contrast
     */
    public static final int ImageFilterView_contrast=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#crossfade}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:crossfade
     */
    public static final int ImageFilterView_crossfade=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#overlay}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:overlay
     */
    public static final int ImageFilterView_overlay=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#round}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:round
     */
    public static final int ImageFilterView_round=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#roundPercent}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:roundPercent
     */
    public static final int ImageFilterView_roundPercent=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#saturation}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:saturation
     */
    public static final int ImageFilterView_saturation=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#warmth}
     * attribute's value can be found in the {@link #ImageFilterView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:warmth
     */
    public static final int ImageFilterView_warmth=8;
    /**
     * Attributes that can be used with a Insets.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Insets_paddingBottomSystemWindowInsets com.android.settings:paddingBottomSystemWindowInsets}</code></td><td>Just adding the parameters that we need for now.</td></tr>
     * <tr><td><code>{@link #Insets_paddingLeftSystemWindowInsets com.android.settings:paddingLeftSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Insets_paddingRightSystemWindowInsets com.android.settings:paddingRightSystemWindowInsets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Insets_paddingTopSystemWindowInsets com.android.settings:paddingTopSystemWindowInsets}</code></td><td></td></tr>
     * </table>
     * @see #Insets_paddingBottomSystemWindowInsets
     * @see #Insets_paddingLeftSystemWindowInsets
     * @see #Insets_paddingRightSystemWindowInsets
     * @see #Insets_paddingTopSystemWindowInsets
     */
    public static final int[] Insets={
      0x7f0402f7, 0x7f0402f9, 0x7f0402fa, 0x7f0402fd
    };
    /**
     * <p>
     * @attr description
     * Just adding the parameters that we need for now. We can add others if we need them, but
     * ideally we'll be able to use https://github.com/chrisbanes/insetter once it's ready.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingBottomSystemWindowInsets
     */
    public static final int Insets_paddingBottomSystemWindowInsets=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#paddingLeftSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingLeftSystemWindowInsets
     */
    public static final int Insets_paddingLeftSystemWindowInsets=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#paddingRightSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingRightSystemWindowInsets
     */
    public static final int Insets_paddingRightSystemWindowInsets=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#paddingTopSystemWindowInsets}
     * attribute's value can be found in the {@link #Insets} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:paddingTopSystemWindowInsets
     */
    public static final int Insets_paddingTopSystemWindowInsets=3;
    /**
     * Attributes that can be used with a KeyAttribute.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyAttribute_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_curveFit com.android.settings:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_framePosition com.android.settings:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_motionProgress com.android.settings:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_motionTarget com.android.settings:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyAttribute_transitionPathRotate com.android.settings:transitionPathRotate}</code></td><td></td></tr>
     * </table>
     * @see #KeyAttribute_android_alpha
     * @see #KeyAttribute_android_translationX
     * @see #KeyAttribute_android_translationY
     * @see #KeyAttribute_android_scaleX
     * @see #KeyAttribute_android_scaleY
     * @see #KeyAttribute_android_rotation
     * @see #KeyAttribute_android_rotationX
     * @see #KeyAttribute_android_rotationY
     * @see #KeyAttribute_android_translationZ
     * @see #KeyAttribute_android_elevation
     * @see #KeyAttribute_curveFit
     * @see #KeyAttribute_framePosition
     * @see #KeyAttribute_motionProgress
     * @see #KeyAttribute_motionTarget
     * @see #KeyAttribute_transitionEasing
     * @see #KeyAttribute_transitionPathRotate
     */
    public static final int[] KeyAttribute={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x7f040111, 0x7f0401b3, 
      0x7f0402d6, 0x7f0402d8, 0x7f0404af, 0x7f0404b0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int KeyAttribute_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int KeyAttribute_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int KeyAttribute_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int KeyAttribute_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int KeyAttribute_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int KeyAttribute_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int KeyAttribute_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int KeyAttribute_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int KeyAttribute_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int KeyAttribute_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:curveFit
     */
    public static final int KeyAttribute_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:framePosition
     */
    public static final int KeyAttribute_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionProgress
     */
    public static final int KeyAttribute_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:motionTarget
     */
    public static final int KeyAttribute_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int KeyAttribute_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyAttribute} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:transitionPathRotate
     */
    public static final int KeyAttribute_transitionPathRotate=15;
    /**
     * Attributes that can be used with a KeyCycle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyCycle_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_curveFit com.android.settings:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_framePosition com.android.settings:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_motionProgress com.android.settings:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_motionTarget com.android.settings:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_transitionPathRotate com.android.settings:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveOffset com.android.settings:waveOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_wavePeriod com.android.settings:wavePeriod}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveShape com.android.settings:waveShape}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyCycle_waveVariesBy com.android.settings:waveVariesBy}</code></td><td></td></tr>
     * </table>
     * @see #KeyCycle_android_alpha
     * @see #KeyCycle_android_translationX
     * @see #KeyCycle_android_translationY
     * @see #KeyCycle_android_scaleX
     * @see #KeyCycle_android_scaleY
     * @see #KeyCycle_android_rotation
     * @see #KeyCycle_android_rotationX
     * @see #KeyCycle_android_rotationY
     * @see #KeyCycle_android_translationZ
     * @see #KeyCycle_android_elevation
     * @see #KeyCycle_curveFit
     * @see #KeyCycle_framePosition
     * @see #KeyCycle_motionProgress
     * @see #KeyCycle_motionTarget
     * @see #KeyCycle_transitionEasing
     * @see #KeyCycle_transitionPathRotate
     * @see #KeyCycle_waveOffset
     * @see #KeyCycle_wavePeriod
     * @see #KeyCycle_waveShape
     * @see #KeyCycle_waveVariesBy
     */
    public static final int[] KeyCycle={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x7f040111, 0x7f0401b3, 
      0x7f0402d6, 0x7f0402d8, 0x7f0404af, 0x7f0404b0, 
      0x7f0404c7, 0x7f0404c8, 0x7f0404c9, 0x7f0404ca
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int KeyCycle_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int KeyCycle_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int KeyCycle_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int KeyCycle_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int KeyCycle_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int KeyCycle_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int KeyCycle_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int KeyCycle_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int KeyCycle_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int KeyCycle_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:curveFit
     */
    public static final int KeyCycle_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:framePosition
     */
    public static final int KeyCycle_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionProgress
     */
    public static final int KeyCycle_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:motionTarget
     */
    public static final int KeyCycle_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int KeyCycle_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:transitionPathRotate
     */
    public static final int KeyCycle_transitionPathRotate=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#waveOffset}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:waveOffset
     */
    public static final int KeyCycle_waveOffset=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#wavePeriod}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:wavePeriod
     */
    public static final int KeyCycle_wavePeriod=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#waveShape}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:waveShape
     */
    public static final int KeyCycle_waveShape=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#waveVariesBy}
     * attribute's value can be found in the {@link #KeyCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>position</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:waveVariesBy
     */
    public static final int KeyCycle_waveVariesBy=19;
    public static final int[] KeyFrame={
    };
    public static final int[] KeyFramesAcceleration={
    };
    public static final int[] KeyFramesVelocity={
    };
    /**
     * Attributes that can be used with a KeyPosition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyPosition_curveFit com.android.settings:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_drawPath com.android.settings:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_framePosition com.android.settings:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_keyPositionType com.android.settings:keyPositionType}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_motionTarget com.android.settings:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_pathMotionArc com.android.settings:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentHeight com.android.settings:percentHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentWidth com.android.settings:percentWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentX com.android.settings:percentX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_percentY com.android.settings:percentY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_sizePercent com.android.settings:sizePercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyPosition_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * </table>
     * @see #KeyPosition_curveFit
     * @see #KeyPosition_drawPath
     * @see #KeyPosition_framePosition
     * @see #KeyPosition_keyPositionType
     * @see #KeyPosition_motionTarget
     * @see #KeyPosition_pathMotionArc
     * @see #KeyPosition_percentHeight
     * @see #KeyPosition_percentWidth
     * @see #KeyPosition_percentX
     * @see #KeyPosition_percentY
     * @see #KeyPosition_sizePercent
     * @see #KeyPosition_transitionEasing
     */
    public static final int[] KeyPosition={
      0x7f040111, 0x7f04013c, 0x7f0401b3, 0x7f04020d, 
      0x7f0402d8, 0x7f040307, 0x7f040309, 0x7f04030a, 
      0x7f04030b, 0x7f04030c, 0x7f040379, 0x7f0404af
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:curveFit
     */
    public static final int KeyPosition_curveFit=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawPath}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:drawPath
     */
    public static final int KeyPosition_drawPath=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:framePosition
     */
    public static final int KeyPosition_framePosition=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#keyPositionType}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>deltaRelative</td><td>0</td><td></td></tr>
     * <tr><td>parentRelative</td><td>2</td><td></td></tr>
     * <tr><td>pathRelative</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:keyPositionType
     */
    public static final int KeyPosition_keyPositionType=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:motionTarget
     */
    public static final int KeyPosition_motionTarget=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pathMotionArc
     */
    public static final int KeyPosition_pathMotionArc=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#percentHeight}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:percentHeight
     */
    public static final int KeyPosition_percentHeight=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#percentWidth}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:percentWidth
     */
    public static final int KeyPosition_percentWidth=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#percentX}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:percentX
     */
    public static final int KeyPosition_percentX=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#percentY}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:percentY
     */
    public static final int KeyPosition_percentY=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sizePercent}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:sizePercent
     */
    public static final int KeyPosition_sizePercent=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyPosition} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int KeyPosition_transitionEasing=11;
    /**
     * Attributes that can be used with a KeyTimeCycle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_curveFit com.android.settings:curveFit}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_framePosition com.android.settings:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_motionProgress com.android.settings:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_motionTarget com.android.settings:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_transitionPathRotate com.android.settings:transitionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveDecay com.android.settings:waveDecay}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveOffset com.android.settings:waveOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_wavePeriod com.android.settings:wavePeriod}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTimeCycle_waveShape com.android.settings:waveShape}</code></td><td></td></tr>
     * </table>
     * @see #KeyTimeCycle_android_alpha
     * @see #KeyTimeCycle_android_translationX
     * @see #KeyTimeCycle_android_translationY
     * @see #KeyTimeCycle_android_scaleX
     * @see #KeyTimeCycle_android_scaleY
     * @see #KeyTimeCycle_android_rotation
     * @see #KeyTimeCycle_android_rotationX
     * @see #KeyTimeCycle_android_rotationY
     * @see #KeyTimeCycle_android_translationZ
     * @see #KeyTimeCycle_android_elevation
     * @see #KeyTimeCycle_curveFit
     * @see #KeyTimeCycle_framePosition
     * @see #KeyTimeCycle_motionProgress
     * @see #KeyTimeCycle_motionTarget
     * @see #KeyTimeCycle_transitionEasing
     * @see #KeyTimeCycle_transitionPathRotate
     * @see #KeyTimeCycle_waveDecay
     * @see #KeyTimeCycle_waveOffset
     * @see #KeyTimeCycle_wavePeriod
     * @see #KeyTimeCycle_waveShape
     */
    public static final int[] KeyTimeCycle={
      0x0101031f, 0x01010322, 0x01010323, 0x01010324, 
      0x01010325, 0x01010326, 0x01010327, 0x01010328, 
      0x010103fa, 0x01010440, 0x7f040111, 0x7f0401b3, 
      0x7f0402d6, 0x7f0402d8, 0x7f0404af, 0x7f0404b0, 
      0x7f0404c6, 0x7f0404c7, 0x7f0404c8, 0x7f0404c9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int KeyTimeCycle_android_alpha=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int KeyTimeCycle_android_translationX=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int KeyTimeCycle_android_translationY=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int KeyTimeCycle_android_scaleX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int KeyTimeCycle_android_scaleY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int KeyTimeCycle_android_rotation=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int KeyTimeCycle_android_rotationX=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int KeyTimeCycle_android_rotationY=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int KeyTimeCycle_android_translationZ=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int KeyTimeCycle_android_elevation=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#curveFit}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>1</td><td></td></tr>
     * <tr><td>spline</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:curveFit
     */
    public static final int KeyTimeCycle_curveFit=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:framePosition
     */
    public static final int KeyTimeCycle_framePosition=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionProgress}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionProgress
     */
    public static final int KeyTimeCycle_motionProgress=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:motionTarget
     */
    public static final int KeyTimeCycle_motionTarget=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int KeyTimeCycle_transitionEasing=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionPathRotate}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:transitionPathRotate
     */
    public static final int KeyTimeCycle_transitionPathRotate=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#waveDecay}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:waveDecay
     */
    public static final int KeyTimeCycle_waveDecay=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#waveOffset}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:waveOffset
     */
    public static final int KeyTimeCycle_waveOffset=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#wavePeriod}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:wavePeriod
     */
    public static final int KeyTimeCycle_wavePeriod=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#waveShape}
     * attribute's value can be found in the {@link #KeyTimeCycle} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>6</td><td></td></tr>
     * <tr><td>cos</td><td>5</td><td></td></tr>
     * <tr><td>reverseSawtooth</td><td>4</td><td></td></tr>
     * <tr><td>sawtooth</td><td>3</td><td></td></tr>
     * <tr><td>sin</td><td>0</td><td></td></tr>
     * <tr><td>square</td><td>1</td><td></td></tr>
     * <tr><td>triangle</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:waveShape
     */
    public static final int KeyTimeCycle_waveShape=19;
    /**
     * Attributes that can be used with a KeyTrigger.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #KeyTrigger_framePosition com.android.settings:framePosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motionTarget com.android.settings:motionTarget}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motion_postLayoutCollision com.android.settings:motion_postLayoutCollision}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_motion_triggerOnCollision com.android.settings:motion_triggerOnCollision}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onCross com.android.settings:onCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onNegativeCross com.android.settings:onNegativeCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_onPositiveCross com.android.settings:onPositiveCross}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerId com.android.settings:triggerId}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerReceiver com.android.settings:triggerReceiver}</code></td><td></td></tr>
     * <tr><td><code>{@link #KeyTrigger_triggerSlack com.android.settings:triggerSlack}</code></td><td></td></tr>
     * </table>
     * @see #KeyTrigger_framePosition
     * @see #KeyTrigger_motionTarget
     * @see #KeyTrigger_motion_postLayoutCollision
     * @see #KeyTrigger_motion_triggerOnCollision
     * @see #KeyTrigger_onCross
     * @see #KeyTrigger_onNegativeCross
     * @see #KeyTrigger_onPositiveCross
     * @see #KeyTrigger_triggerId
     * @see #KeyTrigger_triggerReceiver
     * @see #KeyTrigger_triggerSlack
     */
    public static final int[] KeyTrigger={
      0x7f0401b3, 0x7f0402d8, 0x7f0402d9, 0x7f0402da, 
      0x7f0402ea, 0x7f0402ec, 0x7f0402ed, 0x7f0404b2, 
      0x7f0404b3, 0x7f0404b4
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#framePosition}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:framePosition
     */
    public static final int KeyTrigger_framePosition=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionTarget}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:motionTarget
     */
    public static final int KeyTrigger_motionTarget=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motion_postLayoutCollision}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:motion_postLayoutCollision
     */
    public static final int KeyTrigger_motion_postLayoutCollision=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motion_triggerOnCollision}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:motion_triggerOnCollision
     */
    public static final int KeyTrigger_motion_triggerOnCollision=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#onCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:onCross
     */
    public static final int KeyTrigger_onCross=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#onNegativeCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:onNegativeCross
     */
    public static final int KeyTrigger_onNegativeCross=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#onPositiveCross}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:onPositiveCross
     */
    public static final int KeyTrigger_onPositiveCross=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#triggerId}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:triggerId
     */
    public static final int KeyTrigger_triggerId=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#triggerReceiver}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:triggerReceiver
     */
    public static final int KeyTrigger_triggerReceiver=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#triggerSlack}
     * attribute's value can be found in the {@link #KeyTrigger} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:triggerSlack
     */
    public static final int KeyTrigger_triggerSlack=9;
    /**
     * For LabeledSeekBarPreference
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LabeledSeekBarPreference_textEnd com.android.settings:textEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #LabeledSeekBarPreference_textStart com.android.settings:textStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #LabeledSeekBarPreference_tickMark com.android.settings:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * </table>
     * @see #LabeledSeekBarPreference_textEnd
     * @see #LabeledSeekBarPreference_textStart
     * @see #LabeledSeekBarPreference_tickMark
     */
    public static final int[] LabeledSeekBarPreference={
      0x7f040468, 0x7f04046f, 0x7f040480
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#textEnd}
     * attribute's value can be found in the {@link #LabeledSeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textEnd
     */
    public static final int LabeledSeekBarPreference_textEnd=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#textStart}
     * attribute's value can be found in the {@link #LabeledSeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textStart
     */
    public static final int LabeledSeekBarPreference_textStart=1;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tickMark
     */
    public static final int LabeledSeekBarPreference_tickMark=2;
    /**
     * Attributes that can be used with a Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Layout_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginStart android:layout_marginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_android_layout_marginEnd android:layout_marginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierAllowsGoneWidgets com.android.settings:barrierAllowsGoneWidgets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierDirection com.android.settings:barrierDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_barrierMargin com.android.settings:barrierMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_chainUseRtl com.android.settings:chainUseRtl}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_constraint_referenced_ids com.android.settings:constraint_referenced_ids}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constrainedHeight com.android.settings:layout_constrainedHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constrainedWidth com.android.settings:layout_constrainedWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBaseline_creator com.android.settings:layout_constraintBaseline_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBaseline_toBaselineOf com.android.settings:layout_constraintBaseline_toBaselineOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_creator com.android.settings:layout_constraintBottom_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_toBottomOf com.android.settings:layout_constraintBottom_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintBottom_toTopOf com.android.settings:layout_constraintBottom_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircle com.android.settings:layout_constraintCircle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircleAngle com.android.settings:layout_constraintCircleAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintCircleRadius com.android.settings:layout_constraintCircleRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintDimensionRatio com.android.settings:layout_constraintDimensionRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintEnd_toEndOf com.android.settings:layout_constraintEnd_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintEnd_toStartOf com.android.settings:layout_constraintEnd_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_begin com.android.settings:layout_constraintGuide_begin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_end com.android.settings:layout_constraintGuide_end}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintGuide_percent com.android.settings:layout_constraintGuide_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_default com.android.settings:layout_constraintHeight_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_max com.android.settings:layout_constraintHeight_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_min com.android.settings:layout_constraintHeight_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHeight_percent com.android.settings:layout_constraintHeight_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_bias com.android.settings:layout_constraintHorizontal_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_chainStyle com.android.settings:layout_constraintHorizontal_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintHorizontal_weight com.android.settings:layout_constraintHorizontal_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_creator com.android.settings:layout_constraintLeft_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_toLeftOf com.android.settings:layout_constraintLeft_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintLeft_toRightOf com.android.settings:layout_constraintLeft_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_creator com.android.settings:layout_constraintRight_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_toLeftOf com.android.settings:layout_constraintRight_toLeftOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintRight_toRightOf com.android.settings:layout_constraintRight_toRightOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintStart_toEndOf com.android.settings:layout_constraintStart_toEndOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintStart_toStartOf com.android.settings:layout_constraintStart_toStartOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_creator com.android.settings:layout_constraintTop_creator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_toBottomOf com.android.settings:layout_constraintTop_toBottomOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintTop_toTopOf com.android.settings:layout_constraintTop_toTopOf}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_bias com.android.settings:layout_constraintVertical_bias}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_chainStyle com.android.settings:layout_constraintVertical_chainStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintVertical_weight com.android.settings:layout_constraintVertical_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_default com.android.settings:layout_constraintWidth_default}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_max com.android.settings:layout_constraintWidth_max}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_min com.android.settings:layout_constraintWidth_min}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_constraintWidth_percent com.android.settings:layout_constraintWidth_percent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_editor_absoluteX com.android.settings:layout_editor_absoluteX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_editor_absoluteY com.android.settings:layout_editor_absoluteY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginBottom com.android.settings:layout_goneMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginEnd com.android.settings:layout_goneMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginLeft com.android.settings:layout_goneMarginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginRight com.android.settings:layout_goneMarginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginStart com.android.settings:layout_goneMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_layout_goneMarginTop com.android.settings:layout_goneMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_maxHeight com.android.settings:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_maxWidth com.android.settings:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_minHeight com.android.settings:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Layout_minWidth com.android.settings:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #Layout_android_orientation
     * @see #Layout_android_layout_width
     * @see #Layout_android_layout_height
     * @see #Layout_android_layout_marginLeft
     * @see #Layout_android_layout_marginTop
     * @see #Layout_android_layout_marginRight
     * @see #Layout_android_layout_marginBottom
     * @see #Layout_android_layout_marginStart
     * @see #Layout_android_layout_marginEnd
     * @see #Layout_barrierAllowsGoneWidgets
     * @see #Layout_barrierDirection
     * @see #Layout_barrierMargin
     * @see #Layout_chainUseRtl
     * @see #Layout_constraint_referenced_ids
     * @see #Layout_layout_constrainedHeight
     * @see #Layout_layout_constrainedWidth
     * @see #Layout_layout_constraintBaseline_creator
     * @see #Layout_layout_constraintBaseline_toBaselineOf
     * @see #Layout_layout_constraintBottom_creator
     * @see #Layout_layout_constraintBottom_toBottomOf
     * @see #Layout_layout_constraintBottom_toTopOf
     * @see #Layout_layout_constraintCircle
     * @see #Layout_layout_constraintCircleAngle
     * @see #Layout_layout_constraintCircleRadius
     * @see #Layout_layout_constraintDimensionRatio
     * @see #Layout_layout_constraintEnd_toEndOf
     * @see #Layout_layout_constraintEnd_toStartOf
     * @see #Layout_layout_constraintGuide_begin
     * @see #Layout_layout_constraintGuide_end
     * @see #Layout_layout_constraintGuide_percent
     * @see #Layout_layout_constraintHeight_default
     * @see #Layout_layout_constraintHeight_max
     * @see #Layout_layout_constraintHeight_min
     * @see #Layout_layout_constraintHeight_percent
     * @see #Layout_layout_constraintHorizontal_bias
     * @see #Layout_layout_constraintHorizontal_chainStyle
     * @see #Layout_layout_constraintHorizontal_weight
     * @see #Layout_layout_constraintLeft_creator
     * @see #Layout_layout_constraintLeft_toLeftOf
     * @see #Layout_layout_constraintLeft_toRightOf
     * @see #Layout_layout_constraintRight_creator
     * @see #Layout_layout_constraintRight_toLeftOf
     * @see #Layout_layout_constraintRight_toRightOf
     * @see #Layout_layout_constraintStart_toEndOf
     * @see #Layout_layout_constraintStart_toStartOf
     * @see #Layout_layout_constraintTop_creator
     * @see #Layout_layout_constraintTop_toBottomOf
     * @see #Layout_layout_constraintTop_toTopOf
     * @see #Layout_layout_constraintVertical_bias
     * @see #Layout_layout_constraintVertical_chainStyle
     * @see #Layout_layout_constraintVertical_weight
     * @see #Layout_layout_constraintWidth_default
     * @see #Layout_layout_constraintWidth_max
     * @see #Layout_layout_constraintWidth_min
     * @see #Layout_layout_constraintWidth_percent
     * @see #Layout_layout_editor_absoluteX
     * @see #Layout_layout_editor_absoluteY
     * @see #Layout_layout_goneMarginBottom
     * @see #Layout_layout_goneMarginEnd
     * @see #Layout_layout_goneMarginLeft
     * @see #Layout_layout_goneMarginRight
     * @see #Layout_layout_goneMarginStart
     * @see #Layout_layout_goneMarginTop
     * @see #Layout_maxHeight
     * @see #Layout_maxWidth
     * @see #Layout_minHeight
     * @see #Layout_minWidth
     */
    public static final int[] Layout={
      0x010100c4, 0x010100f4, 0x010100f5, 0x010100f7, 
      0x010100f8, 0x010100f9, 0x010100fa, 0x010103b5, 
      0x010103b6, 0x7f040059, 0x7f04005a, 0x7f04005b, 
      0x7f040093, 0x7f0400e5, 0x7f040221, 0x7f040222, 
      0x7f040223, 0x7f040224, 0x7f040225, 0x7f040226, 
      0x7f040227, 0x7f040228, 0x7f040229, 0x7f04022a, 
      0x7f04022b, 0x7f04022c, 0x7f04022d, 0x7f04022e, 
      0x7f04022f, 0x7f040230, 0x7f040231, 0x7f040232, 
      0x7f040233, 0x7f040234, 0x7f040235, 0x7f040236, 
      0x7f040237, 0x7f040238, 0x7f040239, 0x7f04023a, 
      0x7f04023b, 0x7f04023c, 0x7f04023d, 0x7f04023e, 
      0x7f04023f, 0x7f040241, 0x7f040242, 0x7f040243, 
      0x7f040244, 0x7f040245, 0x7f040246, 0x7f040247, 
      0x7f040248, 0x7f040249, 0x7f04024a, 0x7f04024c, 
      0x7f04024d, 0x7f04024e, 0x7f04024f, 0x7f040250, 
      0x7f040251, 0x7f040252, 0x7f040253, 0x7f0402a1, 
      0x7f0402a5, 0x7f0402bb, 0x7f0402c0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int Layout_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int Layout_android_layout_marginLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int Layout_android_layout_marginTop=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int Layout_android_layout_marginRight=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int Layout_android_layout_marginBottom=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginStart}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginStart
     */
    public static final int Layout_android_layout_marginStart=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginEnd}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginEnd
     */
    public static final int Layout_android_layout_marginEnd=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierAllowsGoneWidgets}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:barrierAllowsGoneWidgets
     */
    public static final int Layout_barrierAllowsGoneWidgets=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierDirection}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:barrierDirection
     */
    public static final int Layout_barrierDirection=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#barrierMargin}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:barrierMargin
     */
    public static final int Layout_barrierMargin=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#chainUseRtl}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:chainUseRtl
     */
    public static final int Layout_chainUseRtl=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraint_referenced_ids}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:constraint_referenced_ids
     */
    public static final int Layout_constraint_referenced_ids=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedHeight
     */
    public static final int Layout_layout_constrainedHeight=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constrainedWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:layout_constrainedWidth
     */
    public static final int Layout_layout_constrainedWidth=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBaseline_creator
     */
    public static final int Layout_layout_constraintBaseline_creator=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBaseline_toBaselineOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBaseline_toBaselineOf
     */
    public static final int Layout_layout_constraintBaseline_toBaselineOf=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintBottom_creator
     */
    public static final int Layout_layout_constraintBottom_creator=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toBottomOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toBottomOf
     */
    public static final int Layout_layout_constraintBottom_toBottomOf=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintBottom_toTopOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintBottom_toTopOf
     */
    public static final int Layout_layout_constraintBottom_toTopOf=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout_constraintCircle
     */
    public static final int Layout_layout_constraintCircle=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleAngle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintCircleAngle
     */
    public static final int Layout_layout_constraintCircleAngle=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintCircleRadius}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintCircleRadius
     */
    public static final int Layout_layout_constraintCircleRadius=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintDimensionRatio}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintDimensionRatio
     */
    public static final int Layout_layout_constraintDimensionRatio=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toEndOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toEndOf
     */
    public static final int Layout_layout_constraintEnd_toEndOf=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintEnd_toStartOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintEnd_toStartOf
     */
    public static final int Layout_layout_constraintEnd_toStartOf=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_begin}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_begin
     */
    public static final int Layout_layout_constraintGuide_begin=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_end}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_constraintGuide_end
     */
    public static final int Layout_layout_constraintGuide_end=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintGuide_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintGuide_percent
     */
    public static final int Layout_layout_constraintGuide_percent=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_default}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_default
     */
    public static final int Layout_layout_constraintHeight_default=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_max}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_max
     */
    public static final int Layout_layout_constraintHeight_max=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_min}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHeight_min
     */
    public static final int Layout_layout_constraintHeight_min=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHeight_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHeight_percent
     */
    public static final int Layout_layout_constraintHeight_percent=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_bias}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_bias
     */
    public static final int Layout_layout_constraintHorizontal_bias=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_chainStyle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintHorizontal_chainStyle
     */
    public static final int Layout_layout_constraintHorizontal_chainStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintHorizontal_weight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintHorizontal_weight
     */
    public static final int Layout_layout_constraintHorizontal_weight=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintLeft_creator
     */
    public static final int Layout_layout_constraintLeft_creator=37;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toLeftOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toLeftOf
     */
    public static final int Layout_layout_constraintLeft_toLeftOf=38;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintLeft_toRightOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintLeft_toRightOf
     */
    public static final int Layout_layout_constraintLeft_toRightOf=39;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintRight_creator
     */
    public static final int Layout_layout_constraintRight_creator=40;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toLeftOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toLeftOf
     */
    public static final int Layout_layout_constraintRight_toLeftOf=41;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintRight_toRightOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintRight_toRightOf
     */
    public static final int Layout_layout_constraintRight_toRightOf=42;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toEndOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toEndOf
     */
    public static final int Layout_layout_constraintStart_toEndOf=43;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintStart_toStartOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintStart_toStartOf
     */
    public static final int Layout_layout_constraintStart_toStartOf=44;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_creator}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:layout_constraintTop_creator
     */
    public static final int Layout_layout_constraintTop_creator=45;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toBottomOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toBottomOf
     */
    public static final int Layout_layout_constraintTop_toBottomOf=46;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTop_toTopOf}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintTop_toTopOf
     */
    public static final int Layout_layout_constraintTop_toTopOf=47;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_bias}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_bias
     */
    public static final int Layout_layout_constraintVertical_bias=48;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_chainStyle}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>packed</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>spread_inside</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintVertical_chainStyle
     */
    public static final int Layout_layout_constraintVertical_chainStyle=49;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintVertical_weight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintVertical_weight
     */
    public static final int Layout_layout_constraintVertical_weight=50;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_default}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>percent</td><td>2</td><td></td></tr>
     * <tr><td>spread</td><td>0</td><td></td></tr>
     * <tr><td>wrap</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_default
     */
    public static final int Layout_layout_constraintWidth_default=51;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_max}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_max
     */
    public static final int Layout_layout_constraintWidth_max=52;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_min}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layout_constraintWidth_min
     */
    public static final int Layout_layout_constraintWidth_min=53;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintWidth_percent}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:layout_constraintWidth_percent
     */
    public static final int Layout_layout_constraintWidth_percent=54;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteX}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteX
     */
    public static final int Layout_layout_editor_absoluteX=55;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_editor_absoluteY}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_editor_absoluteY
     */
    public static final int Layout_layout_editor_absoluteY=56;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginBottom}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginBottom
     */
    public static final int Layout_layout_goneMarginBottom=57;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginEnd}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginEnd
     */
    public static final int Layout_layout_goneMarginEnd=58;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginLeft}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginLeft
     */
    public static final int Layout_layout_goneMarginLeft=59;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginRight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginRight
     */
    public static final int Layout_layout_goneMarginRight=60;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginStart}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginStart
     */
    public static final int Layout_layout_goneMarginStart=61;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_goneMarginTop}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:layout_goneMarginTop
     */
    public static final int Layout_layout_goneMarginTop=62;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxHeight
     */
    public static final int Layout_maxHeight=63;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxWidth
     */
    public static final int Layout_maxWidth=64;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#minHeight}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:minHeight
     */
    public static final int Layout_minHeight=65;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#minWidth}
     * attribute's value can be found in the {@link #Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:minWidth
     */
    public static final int Layout_minWidth=66;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.settings:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.settings:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.settings:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.settings:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f040134, 0x7f040136, 0x7f0402a6, 
      0x7f04036c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a LinearProgressIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearProgressIndicator_indeterminateAnimationType com.android.settings:indeterminateAnimationType}</code></td><td>The animation style of the indeterminate mode.</td></tr>
     * <tr><td><code>{@link #LinearProgressIndicator_indicatorDirectionLinear com.android.settings:indicatorDirectionLinear}</code></td><td>The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.</td></tr>
     * </table>
     * @see #LinearProgressIndicator_indeterminateAnimationType
     * @see #LinearProgressIndicator_indicatorDirectionLinear
     */
    public static final int[] LinearProgressIndicator={
      0x7f0401e7, 0x7f0401eb
    };
    /**
     * <p>
     * @attr description
     * The animation style of the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>contiguous</td><td>0</td><td>The track will be filled with three adjacent segments in iterative different colors.
     * This type is only available when there are three or more indicator
     * colors.</td></tr>
     * <tr><td>disjoint</td><td>1</td><td>There will be two disjoint segments in the same color per cycle. The color iterates between cycles.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:indeterminateAnimationType
     */
    public static final int LinearProgressIndicator_indeterminateAnimationType=0;
    /**
     * <p>
     * @attr description
     * The direction in which the linear indicator progresses, in the determinate
     * mode, and is animated, in the indeterminate mode.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>endToStart</td><td>3</td><td>Animated from the end position to the start position of the track.
     * This will be same as the rightToLeft for API before 17.</td></tr>
     * <tr><td>leftToRight</td><td>0</td><td>Animated from the left end to the right end of the track.</td></tr>
     * <tr><td>rightToLeft</td><td>1</td><td>Animated from the right end to the left end of the track.</td></tr>
     * <tr><td>startToEnd</td><td>2</td><td>Animated from the start position to the end position of the track.
     * This will be same as the leftToRight for API before 17.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:indicatorDirectionLinear
     */
    public static final int LinearProgressIndicator_indicatorDirectionLinear=1;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.settings:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.settings:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * <tr><td><code>{@link #ListPreference_useSimpleSummaryProvider com.android.settings:useSimpleSummaryProvider}</code></td><td>Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     * @see #ListPreference_useSimpleSummaryProvider
     */
    public static final int[] ListPreference={
      0x010100b2, 0x010101f8, 0x7f040162, 0x7f040164, 
      0x7f0404bd
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * <p>
     * @attr description
     * Whether the preference should automatically set its summary to the value saved for the
     * preference, and update the summary when the value is changed. Defaults to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useSimpleSummaryProvider
     */
    public static final int ListPreference_useSimpleSummaryProvider=4;
    /**
     * Attributes that can be used with a ListWithEntrySummaryPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListWithEntrySummaryPreference_entrySummaries com.android.settings:entrySummaries}</code></td><td>Summaries of entry</td></tr>
     * </table>
     * @see #ListWithEntrySummaryPreference_entrySummaries
     */
    public static final int[] ListWithEntrySummaryPreference={
      0x7f040163
    };
    /**
     * <p>
     * @attr description
     * Summaries of entry
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entrySummaries
     */
    public static final int ListWithEntrySummaryPreference_entrySummaries=0;
    /**
     * Attributes that can be used with a LottieAnimationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_autoPlay com.android.settings:lottie_autoPlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_cacheComposition com.android.settings:lottie_cacheComposition}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_colorFilter com.android.settings:lottie_colorFilter}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove com.android.settings:lottie_enableMergePathsForKitKatAndAbove}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_fallbackRes com.android.settings:lottie_fallbackRes}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_fileName com.android.settings:lottie_fileName}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_imageAssetsFolder com.android.settings:lottie_imageAssetsFolder}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_loop com.android.settings:lottie_loop}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_progress com.android.settings:lottie_progress}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_rawRes com.android.settings:lottie_rawRes}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_renderMode com.android.settings:lottie_renderMode}</code></td><td>These values must be kept in sync with the RenderMode enum</td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_repeatCount com.android.settings:lottie_repeatCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_repeatMode com.android.settings:lottie_repeatMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_scale com.android.settings:lottie_scale}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_speed com.android.settings:lottie_speed}</code></td><td></td></tr>
     * <tr><td><code>{@link #LottieAnimationView_lottie_url com.android.settings:lottie_url}</code></td><td></td></tr>
     * </table>
     * @see #LottieAnimationView_lottie_autoPlay
     * @see #LottieAnimationView_lottie_cacheComposition
     * @see #LottieAnimationView_lottie_colorFilter
     * @see #LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove
     * @see #LottieAnimationView_lottie_fallbackRes
     * @see #LottieAnimationView_lottie_fileName
     * @see #LottieAnimationView_lottie_imageAssetsFolder
     * @see #LottieAnimationView_lottie_loop
     * @see #LottieAnimationView_lottie_progress
     * @see #LottieAnimationView_lottie_rawRes
     * @see #LottieAnimationView_lottie_renderMode
     * @see #LottieAnimationView_lottie_repeatCount
     * @see #LottieAnimationView_lottie_repeatMode
     * @see #LottieAnimationView_lottie_scale
     * @see #LottieAnimationView_lottie_speed
     * @see #LottieAnimationView_lottie_url
     */
    public static final int[] LottieAnimationView={
      0x7f040271, 0x7f040272, 0x7f040273, 0x7f040274, 
      0x7f040275, 0x7f040276, 0x7f040277, 0x7f040278, 
      0x7f040279, 0x7f04027a, 0x7f04027b, 0x7f04027c, 
      0x7f04027d, 0x7f04027e, 0x7f04027f, 0x7f040280
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_autoPlay}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:lottie_autoPlay
     */
    public static final int LottieAnimationView_lottie_autoPlay=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_cacheComposition}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:lottie_cacheComposition
     */
    public static final int LottieAnimationView_lottie_cacheComposition=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_colorFilter}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:lottie_colorFilter
     */
    public static final int LottieAnimationView_lottie_colorFilter=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_enableMergePathsForKitKatAndAbove}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:lottie_enableMergePathsForKitKatAndAbove
     */
    public static final int LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_fallbackRes}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:lottie_fallbackRes
     */
    public static final int LottieAnimationView_lottie_fallbackRes=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_fileName}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:lottie_fileName
     */
    public static final int LottieAnimationView_lottie_fileName=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_imageAssetsFolder}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:lottie_imageAssetsFolder
     */
    public static final int LottieAnimationView_lottie_imageAssetsFolder=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_loop}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:lottie_loop
     */
    public static final int LottieAnimationView_lottie_loop=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_progress}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:lottie_progress
     */
    public static final int LottieAnimationView_lottie_progress=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_rawRes}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:lottie_rawRes
     */
    public static final int LottieAnimationView_lottie_rawRes=9;
    /**
     * <p>
     * @attr description
     * These values must be kept in sync with the RenderMode enum
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>automatic</td><td>0</td><td></td></tr>
     * <tr><td>hardware</td><td>1</td><td></td></tr>
     * <tr><td>software</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:lottie_renderMode
     */
    public static final int LottieAnimationView_lottie_renderMode=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_repeatCount}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:lottie_repeatCount
     */
    public static final int LottieAnimationView_lottie_repeatCount=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_repeatMode}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>restart</td><td>1</td><td></td></tr>
     * <tr><td>reverse</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:lottie_repeatMode
     */
    public static final int LottieAnimationView_lottie_repeatMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_scale}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:lottie_scale
     */
    public static final int LottieAnimationView_lottie_scale=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_speed}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:lottie_speed
     */
    public static final int LottieAnimationView_lottie_speed=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#lottie_url}
     * attribute's value can be found in the {@link #LottieAnimationView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:lottie_url
     */
    public static final int LottieAnimationView_lottie_url=15;
    /**
     * Attributes that can be used with a MaterialAlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetBottom com.android.settings:backgroundInsetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetEnd com.android.settings:backgroundInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetStart com.android.settings:backgroundInsetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialog_backgroundInsetTop com.android.settings:backgroundInsetTop}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialog_backgroundInsetBottom
     * @see #MaterialAlertDialog_backgroundInsetEnd
     * @see #MaterialAlertDialog_backgroundInsetStart
     * @see #MaterialAlertDialog_backgroundInsetTop
     */
    public static final int[] MaterialAlertDialog={
      0x7f04004b, 0x7f04004c, 0x7f04004d, 0x7f04004e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#backgroundInsetBottom}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:backgroundInsetBottom
     */
    public static final int MaterialAlertDialog_backgroundInsetBottom=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#backgroundInsetEnd}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:backgroundInsetEnd
     */
    public static final int MaterialAlertDialog_backgroundInsetEnd=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#backgroundInsetStart}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:backgroundInsetStart
     */
    public static final int MaterialAlertDialog_backgroundInsetStart=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#backgroundInsetTop}
     * attribute's value can be found in the {@link #MaterialAlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:backgroundInsetTop
     */
    public static final int MaterialAlertDialog_backgroundInsetTop=3;
    /**
     * Attributes that can be used with a MaterialAlertDialogTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle com.android.settings:materialAlertDialogBodyTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTheme com.android.settings:materialAlertDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle com.android.settings:materialAlertDialogTitleIconStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle com.android.settings:materialAlertDialogTitlePanelStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle com.android.settings:materialAlertDialogTitleTextStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTheme
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle
     * @see #MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle
     */
    public static final int[] MaterialAlertDialogTheme={
      0x7f040281, 0x7f040282, 0x7f040283, 0x7f040284, 
      0x7f040285
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#materialAlertDialogBodyTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:materialAlertDialogBodyTextStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#materialAlertDialogTheme}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:materialAlertDialogTheme
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#materialAlertDialogTitleIconStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:materialAlertDialogTitleIconStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#materialAlertDialogTitlePanelStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:materialAlertDialogTitlePanelStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#materialAlertDialogTitleTextStyle}
     * attribute's value can be found in the {@link #MaterialAlertDialogTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:materialAlertDialogTitleTextStyle
     */
    public static final int MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle=4;
    /**
     * Attributes that can be used with a MaterialAutoCompleteTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialAutoCompleteTextView_android_inputType android:inputType}</code></td><td></td></tr>
     * </table>
     * @see #MaterialAutoCompleteTextView_android_inputType
     */
    public static final int[] MaterialAutoCompleteTextView={
      0x01010220
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#inputType}
     * attribute's value can be found in the {@link #MaterialAutoCompleteTextView} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int MaterialAutoCompleteTextView_android_inputType=0;
    /**
     * Attributes that can be used with a MaterialButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButton_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTintMode com.android.settings:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_cornerRadius com.android.settings:cornerRadius}</code></td><td>Specifies the radius for the corners of the button.</td></tr>
     * <tr><td><code>{@link #MaterialButton_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_icon com.android.settings:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconGravity com.android.settings:iconGravity}</code></td><td>Specifies how the icon should be positioned on the X axis.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconPadding com.android.settings:iconPadding}</code></td><td>Padding between icon and button text.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconSize com.android.settings:iconSize}</code></td><td>Specifies the width and height to use for the icon drawable.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTint com.android.settings:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTintMode com.android.settings:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_rippleColor com.android.settings:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialButton_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeColor com.android.settings:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeWidth com.android.settings:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButton_android_background
     * @see #MaterialButton_android_insetLeft
     * @see #MaterialButton_android_insetRight
     * @see #MaterialButton_android_insetTop
     * @see #MaterialButton_android_insetBottom
     * @see #MaterialButton_android_checkable
     * @see #MaterialButton_backgroundTint
     * @see #MaterialButton_backgroundTintMode
     * @see #MaterialButton_cornerRadius
     * @see #MaterialButton_elevation
     * @see #MaterialButton_icon
     * @see #MaterialButton_iconGravity
     * @see #MaterialButton_iconPadding
     * @see #MaterialButton_iconSize
     * @see #MaterialButton_iconTint
     * @see #MaterialButton_iconTintMode
     * @see #MaterialButton_rippleColor
     * @see #MaterialButton_shapeAppearance
     * @see #MaterialButton_shapeAppearanceOverlay
     * @see #MaterialButton_strokeColor
     * @see #MaterialButton_strokeWidth
     */
    public static final int[] MaterialButton={
      0x010100d4, 0x010101b7, 0x010101b8, 0x010101b9, 
      0x010101ba, 0x010101e5, 0x7f040052, 0x7f040053, 
      0x7f040102, 0x7f040150, 0x7f0401d6, 0x7f0401d9, 
      0x7f0401da, 0x7f0401db, 0x7f0401e0, 0x7f0401e1, 
      0x7f040344, 0x7f040362, 0x7f040365, 0x7f04039f, 
      0x7f0403a0
    };
    /**
     * <p>
     * @attr description
     * Background for the MaterialButton. If this is set to a drawable or color, MaterialButton
     * will respect this background and not create its own MaterialShapeDrawable for the
     * background. This means that the insets, shape appearance, and stroke will be ignored.
     * If this attribute is not set or is @empty or @null, a MaterialShapeDrawable will be used
     * for the background based on the insets, shape appearance, and stroke.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int MaterialButton_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialButton_android_insetLeft=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialButton_android_insetRight=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialButton_android_insetTop=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialButton_android_insetBottom=4;
    /**
     * <p>
     * @attr description
     * Whether the button can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MaterialButton_android_checkable=5;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int MaterialButton_backgroundTint=6;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:backgroundTintMode
     */
    public static final int MaterialButton_backgroundTintMode=7;
    /**
     * <p>
     * @attr description
     * Specifies the radius for the corners of the button. Default is 0, for non-rounded corners.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cornerRadius
     */
    public static final int MaterialButton_cornerRadius=8;
    /**
     * <p>
     * @attr description
     * Elevation for the MaterialButton.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int MaterialButton_elevation=9;
    /**
     * <p>
     * @attr description
     * Icon drawable to display at the start of this view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:icon
     */
    public static final int MaterialButton_icon=10;
    /**
     * <p>
     * @attr description
     * Specifies how the icon should be positioned on the X axis.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td>Push icon to the end of the button.</td></tr>
     * <tr><td>start</td><td>1</td><td>Push icon to the start of the button.</td></tr>
     * <tr><td>textEnd</td><td>4</td><td>Push the icon to the end of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textStart</td><td>2</td><td>Push the icon to the start of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>textTop</td><td>20</td><td>Push the icon to the top of the text keeping a distance equal to
     * {@link R.attr#iconPadding} from the text.</td></tr>
     * <tr><td>top</td><td>10</td><td>Push the icon to the top of the button.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:iconGravity
     */
    public static final int MaterialButton_iconGravity=11;
    /**
     * <p>
     * @attr description
     * Padding between icon and button text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:iconPadding
     */
    public static final int MaterialButton_iconPadding=12;
    /**
     * <p>
     * @attr description
     * Specifies the width and height to use for the icon drawable.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:iconSize
     */
    public static final int MaterialButton_iconSize=13;
    /**
     * <p>
     * @attr description
     * Tint for icon drawable to display.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconTint
     */
    public static final int MaterialButton_iconTint=14;
    /**
     * <p>
     * @attr description
     * Tint mode for icon drawable to display.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:iconTintMode
     */
    public static final int MaterialButton_iconTintMode=15;
    /**
     * <p>
     * @attr description
     * Ripple color for the button. This may be a color state list, if the desired ripple color
     * should be stateful. Attribute type definition is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:rippleColor
     */
    public static final int MaterialButton_rippleColor=16;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialButton. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int MaterialButton_shapeAppearance=17;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialButton. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int MaterialButton_shapeAppearanceOverlay=18;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the button. Attribute type definition
     * is in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:strokeColor
     */
    public static final int MaterialButton_strokeColor=19;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the button. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:strokeWidth
     */
    public static final int MaterialButton_strokeWidth=20;
    /**
     * Attributes that can be used with a MaterialButtonToggleGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_checkedButton com.android.settings:checkedButton}</code></td><td>The id of the child button that should be checked by default within this button group.</td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_selectionRequired com.android.settings:selectionRequired}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButtonToggleGroup_singleSelection com.android.settings:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButtonToggleGroup_checkedButton
     * @see #MaterialButtonToggleGroup_selectionRequired
     * @see #MaterialButtonToggleGroup_singleSelection
     */
    public static final int[] MaterialButtonToggleGroup={
      0x7f040096, 0x7f040360, 0x7f040378
    };
    /**
     * <p>
     * @attr description
     * The id of the child button that should be checked by default within this button group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkedButton
     */
    public static final int MaterialButtonToggleGroup_checkedButton=0;
    /**
     * <p>
     * @attr description
     * Whether we prevent all child buttons from being deselected.
     * It's false by default.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:selectionRequired
     */
    public static final int MaterialButtonToggleGroup_selectionRequired=1;
    /**
     * <p>
     * @attr description
     * Whether only a single button in this group is allowed to be checked at any time. By
     * default, this is false and multiple buttons in this group are allowed to be checked at
     * once.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:singleSelection
     */
    public static final int MaterialButtonToggleGroup_singleSelection=2;
    /**
     * Attributes that can be used with a MaterialCalendar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendar_android_windowFullscreen android:windowFullscreen}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayInvalidStyle com.android.settings:dayInvalidStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_daySelectedStyle com.android.settings:daySelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayStyle com.android.settings:dayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_dayTodayStyle com.android.settings:dayTodayStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_nestedScrollable com.android.settings:nestedScrollable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_rangeFillColor com.android.settings:rangeFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearSelectedStyle com.android.settings:yearSelectedStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearStyle com.android.settings:yearStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendar_yearTodayStyle com.android.settings:yearTodayStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendar_android_windowFullscreen
     * @see #MaterialCalendar_dayInvalidStyle
     * @see #MaterialCalendar_daySelectedStyle
     * @see #MaterialCalendar_dayStyle
     * @see #MaterialCalendar_dayTodayStyle
     * @see #MaterialCalendar_nestedScrollable
     * @see #MaterialCalendar_rangeFillColor
     * @see #MaterialCalendar_yearSelectedStyle
     * @see #MaterialCalendar_yearStyle
     * @see #MaterialCalendar_yearTodayStyle
     */
    public static final int[] MaterialCalendar={
      0x0101020d, 0x7f04011b, 0x7f04011c, 0x7f04011d, 
      0x7f04011e, 0x7f0402e7, 0x7f040339, 0x7f0404d9, 
      0x7f0404da, 0x7f0404db
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowFullscreen}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowFullscreen
     */
    public static final int MaterialCalendar_android_windowFullscreen=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dayInvalidStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dayInvalidStyle
     */
    public static final int MaterialCalendar_dayInvalidStyle=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#daySelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:daySelectedStyle
     */
    public static final int MaterialCalendar_daySelectedStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dayStyle
     */
    public static final int MaterialCalendar_dayStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dayTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dayTodayStyle
     */
    public static final int MaterialCalendar_dayTodayStyle=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#nestedScrollable}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:nestedScrollable
     */
    public static final int MaterialCalendar_nestedScrollable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#rangeFillColor}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:rangeFillColor
     */
    public static final int MaterialCalendar_rangeFillColor=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#yearSelectedStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:yearSelectedStyle
     */
    public static final int MaterialCalendar_yearSelectedStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#yearStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:yearStyle
     */
    public static final int MaterialCalendar_yearStyle=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#yearTodayStyle}
     * attribute's value can be found in the {@link #MaterialCalendar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:yearTodayStyle
     */
    public static final int MaterialCalendar_yearTodayStyle=9;
    /**
     * Attributes that can be used with a MaterialCalendarItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemFillColor com.android.settings:itemFillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearance com.android.settings:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemShapeAppearanceOverlay com.android.settings:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeColor com.android.settings:itemStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemStrokeWidth com.android.settings:itemStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCalendarItem_itemTextColor com.android.settings:itemTextColor}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCalendarItem_android_insetLeft
     * @see #MaterialCalendarItem_android_insetRight
     * @see #MaterialCalendarItem_android_insetTop
     * @see #MaterialCalendarItem_android_insetBottom
     * @see #MaterialCalendarItem_itemFillColor
     * @see #MaterialCalendarItem_itemShapeAppearance
     * @see #MaterialCalendarItem_itemShapeAppearanceOverlay
     * @see #MaterialCalendarItem_itemStrokeColor
     * @see #MaterialCalendarItem_itemStrokeWidth
     * @see #MaterialCalendarItem_itemTextColor
     */
    public static final int[] MaterialCalendarItem={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x7f0401f5, 0x7f0401fe, 0x7f0401ff, 0x7f040206, 
      0x7f040207, 0x7f04020b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialCalendarItem_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialCalendarItem_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialCalendarItem_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialCalendarItem_android_insetBottom=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemFillColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemFillColor
     */
    public static final int MaterialCalendarItem_itemFillColor=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemShapeAppearance}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemShapeAppearance
     */
    public static final int MaterialCalendarItem_itemShapeAppearance=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemShapeAppearanceOverlay}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemShapeAppearanceOverlay
     */
    public static final int MaterialCalendarItem_itemShapeAppearanceOverlay=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemStrokeColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemStrokeColor
     */
    public static final int MaterialCalendarItem_itemStrokeColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemStrokeWidth}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemStrokeWidth
     */
    public static final int MaterialCalendarItem_itemStrokeWidth=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #MaterialCalendarItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemTextColor
     */
    public static final int MaterialCalendarItem_itemTextColor=9;
    /**
     * Attributes that can be used with a MaterialCardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCardView_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_cardForegroundColor com.android.settings:cardForegroundColor}</code></td><td>Foreground color for CardView.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIcon com.android.settings:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconMargin com.android.settings:checkedIconMargin}</code></td><td>Check icon margin for Checkable Cards</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconSize com.android.settings:checkedIconSize}</code></td><td>Check icon size for Checkable Cards</td></tr>
     * <tr><td><code>{@link #MaterialCardView_checkedIconTint com.android.settings:checkedIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_rippleColor com.android.settings:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_state_dragged com.android.settings:state_dragged}</code></td><td>State when a Card is being dragged.</td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeColor com.android.settings:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeWidth com.android.settings:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCardView_android_checkable
     * @see #MaterialCardView_cardForegroundColor
     * @see #MaterialCardView_checkedIcon
     * @see #MaterialCardView_checkedIconMargin
     * @see #MaterialCardView_checkedIconSize
     * @see #MaterialCardView_checkedIconTint
     * @see #MaterialCardView_rippleColor
     * @see #MaterialCardView_shapeAppearance
     * @see #MaterialCardView_shapeAppearanceOverlay
     * @see #MaterialCardView_state_dragged
     * @see #MaterialCardView_strokeColor
     * @see #MaterialCardView_strokeWidth
     */
    public static final int[] MaterialCardView={
      0x010101e5, 0x7f04008d, 0x7f040098, 0x7f04009a, 
      0x7f04009b, 0x7f04009c, 0x7f040344, 0x7f040362, 
      0x7f040365, 0x7f040394, 0x7f04039f, 0x7f0403a0
    };
    /**
     * <p>
     * @attr description
     * Whether the card can be checked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MaterialCardView_android_checkable=0;
    /**
     * <p>
     * @attr description
     * Foreground color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:cardForegroundColor
     */
    public static final int MaterialCardView_cardForegroundColor=1;
    /**
     * <p>
     * @attr description
     * Check icon drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkedIcon
     */
    public static final int MaterialCardView_checkedIcon=2;
    /**
     * <p>
     * @attr description
     * Check icon margin for Checkable Cards
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:checkedIconMargin
     */
    public static final int MaterialCardView_checkedIconMargin=3;
    /**
     * <p>
     * @attr description
     * Check icon size for Checkable Cards
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:checkedIconSize
     */
    public static final int MaterialCardView_checkedIconSize=4;
    /**
     * <p>
     * @attr description
     * Tint color for the checked icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:checkedIconTint
     */
    public static final int MaterialCardView_checkedIconTint=5;
    /**
     * <p>
     * @attr description
     * Ripple color for the Card.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:rippleColor
     */
    public static final int MaterialCardView_rippleColor=6;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for MaterialCardView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int MaterialCardView_shapeAppearance=7;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for MaterialCardView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int MaterialCardView_shapeAppearanceOverlay=8;
    /**
     * <p>
     * @attr description
     * State when a Card is being dragged.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_dragged
     */
    public static final int MaterialCardView_state_dragged=9;
    /**
     * <p>
     * @attr description
     * Specifies the color used to draw the path outline of the card. Attribute type definition is
     * in resources package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:strokeColor
     */
    public static final int MaterialCardView_strokeColor=10;
    /**
     * <p>
     * @attr description
     * Width of the stroke path of the card. Default is 0. Attribute type definition is in
     * resources package.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:strokeWidth
     */
    public static final int MaterialCardView_strokeWidth=11;
    /**
     * Attributes that can be used with a MaterialCheckBox.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCheckBox_buttonTint com.android.settings:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialCheckBox_useMaterialThemeColors com.android.settings:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCheckBox_buttonTint
     * @see #MaterialCheckBox_useMaterialThemeColors
     */
    public static final int[] MaterialCheckBox={
      0x7f040088, 0x7f0404bc
    };
    /**
     * <p>
     * @attr description
     * Tint for the checkbox.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:buttonTint
     */
    public static final int MaterialCheckBox_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialCheckBox will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useMaterialThemeColors
     */
    public static final int MaterialCheckBox_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialRadioButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialRadioButton_buttonTint com.android.settings:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #MaterialRadioButton_useMaterialThemeColors com.android.settings:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #MaterialRadioButton_buttonTint
     * @see #MaterialRadioButton_useMaterialThemeColors
     */
    public static final int[] MaterialRadioButton={
      0x7f040088, 0x7f0404bc
    };
    /**
     * <p>
     * @attr description
     * Tint for the radio.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:buttonTint
     */
    public static final int MaterialRadioButton_buttonTint=0;
    /**
     * <p>
     * @attr description
     * When set to true, MaterialRadioButton will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useMaterialThemeColors
     */
    public static final int MaterialRadioButton_useMaterialThemeColors=1;
    /**
     * Attributes that can be used with a MaterialShape.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #MaterialShape_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #MaterialShape_shapeAppearance
     * @see #MaterialShape_shapeAppearanceOverlay
     */
    public static final int[] MaterialShape={
      0x7f040362, 0x7f040365
    };
    /**
     * <p>
     * @attr description
     * Shape appearance style reference to be used to construct a ShapeAppearanceModel.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int MaterialShape_shapeAppearance=0;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference to be used to modify the shapeAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int MaterialShape_shapeAppearanceOverlay=1;
    /**
     * Attributes that can be used with a MaterialTextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_letterSpacing android:letterSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextAppearance_lineHeight com.android.settings:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * </table>
     * @see #MaterialTextAppearance_android_letterSpacing
     * @see #MaterialTextAppearance_android_lineHeight
     * @see #MaterialTextAppearance_lineHeight
     */
    public static final int[] MaterialTextAppearance={
      0x010104b6, 0x0101057f, 0x7f04025c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#letterSpacing}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:letterSpacing
     */
    public static final int MaterialTextAppearance_android_letterSpacing=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static final int MaterialTextAppearance_android_lineHeight=1;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:lineHeight
     */
    public static final int MaterialTextAppearance_lineHeight=2;
    /**
     * Attributes that can be used with a MaterialTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_android_lineHeight android:lineHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTextView_lineHeight com.android.settings:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * </table>
     * @see #MaterialTextView_android_textAppearance
     * @see #MaterialTextView_android_lineHeight
     * @see #MaterialTextView_lineHeight
     */
    public static final int[] MaterialTextView={
      0x01010034, 0x0101057f, 0x7f04025c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int MaterialTextView_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lineHeight}
     * attribute's value can be found in the {@link #MaterialTextView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:lineHeight
     */
    public static final int MaterialTextView_android_lineHeight=1;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:lineHeight
     */
    public static final int MaterialTextView_lineHeight=2;
    /**
     * Attributes that can be used with a MaterialTimePicker.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialTimePicker_clockIcon com.android.settings:clockIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialTimePicker_keyboardIcon com.android.settings:keyboardIcon}</code></td><td></td></tr>
     * </table>
     * @see #MaterialTimePicker_clockIcon
     * @see #MaterialTimePicker_keyboardIcon
     */
    public static final int[] MaterialTimePicker={
      0x7f0400b9, 0x7f04020e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#clockIcon}
     * attribute's value can be found in the {@link #MaterialTimePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:clockIcon
     */
    public static final int MaterialTimePicker_clockIcon=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#keyboardIcon}
     * attribute's value can be found in the {@link #MaterialTimePicker} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:keyboardIcon
     */
    public static final int MaterialTimePicker_keyboardIcon=1;
    /**
     * Attributes that can be used with a MaterialToolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialToolbar_navigationIconTint com.android.settings:navigationIconTint}</code></td><td>The tint color for the navigation button icon drawable corresponding to
     * the "app:navigationIcon" attribute.</td></tr>
     * <tr><td><code>{@link #MaterialToolbar_subtitleCentered com.android.settings:subtitleCentered}</code></td><td>Whether the subtitle text corresponding to the "app:subtitle" attribute
     * should be centered horizontally within the toolbar.</td></tr>
     * <tr><td><code>{@link #MaterialToolbar_titleCentered com.android.settings:titleCentered}</code></td><td>Whether the title text corresponding to the "app:title" attribute
     * should be centered horizontally within the toolbar.</td></tr>
     * </table>
     * @see #MaterialToolbar_navigationIconTint
     * @see #MaterialToolbar_subtitleCentered
     * @see #MaterialToolbar_titleCentered
     */
    public static final int[] MaterialToolbar={
      0x7f0402df, 0x7f0403a6, 0x7f040489
    };
    /**
     * <p>
     * @attr description
     * The tint color for the navigation button icon drawable corresponding to
     * the "app:navigationIcon" attribute.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:navigationIconTint
     */
    public static final int MaterialToolbar_navigationIconTint=0;
    /**
     * <p>
     * @attr description
     * Whether the subtitle text corresponding to the "app:subtitle" attribute
     * should be centered horizontally within the toolbar. Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:subtitleCentered
     */
    public static final int MaterialToolbar_subtitleCentered=1;
    /**
     * <p>
     * @attr description
     * Whether the title text corresponding to the "app:title" attribute
     * should be centered horizontally within the toolbar. Default is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:titleCentered
     */
    public static final int MaterialToolbar_titleCentered=2;
    /**
     * Attributes that can be used with a MediaRouteButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MediaRouteButton_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #MediaRouteButton_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MediaRouteButton_externalRouteEnabledDrawable com.android.settings:externalRouteEnabledDrawable}</code></td><td>This drawable is a state list where the "checked" state
     * indicates active media routing.</td></tr>
     * <tr><td><code>{@link #MediaRouteButton_externalRouteEnabledDrawableStatic com.android.settings:externalRouteEnabledDrawableStatic}</code></td><td>This drawable is a static version of the above animation drawable.</td></tr>
     * <tr><td><code>{@link #MediaRouteButton_mediaRouteButtonTint com.android.settings:mediaRouteButtonTint}</code></td><td>Tint to apply to the media route button</td></tr>
     * </table>
     * @see #MediaRouteButton_android_minWidth
     * @see #MediaRouteButton_android_minHeight
     * @see #MediaRouteButton_externalRouteEnabledDrawable
     * @see #MediaRouteButton_externalRouteEnabledDrawableStatic
     * @see #MediaRouteButton_mediaRouteButtonTint
     */
    public static final int[] MediaRouteButton={
      0x0101013f, 0x01010140, 0x7f040179, 0x7f04017a, 
      0x7f0402aa
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #MediaRouteButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int MediaRouteButton_android_minWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #MediaRouteButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int MediaRouteButton_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * This drawable is a state list where the "checked" state
     * indicates active media routing.  Checkable indicates connecting
     * and non-checked / non-checkable indicates
     * that media is playing to the local device only.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:externalRouteEnabledDrawable
     */
    public static final int MediaRouteButton_externalRouteEnabledDrawable=2;
    /**
     * <p>
     * @attr description
     * This drawable is a static version of the above animation drawable.
     * In order to speed up the inflation, the static drawable is loaded first
     * and the animation drawable will be loaded lazily in a worker thread
     * when the user taps the button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:externalRouteEnabledDrawableStatic
     */
    public static final int MediaRouteButton_externalRouteEnabledDrawableStatic=3;
    /**
     * <p>
     * @attr description
     * Tint to apply to the media route button
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:mediaRouteButtonTint
     */
    public static final int MediaRouteButton_mediaRouteButtonTint=4;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.settings:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.settings:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.settings:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.settings:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.settings:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.settings:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.settings:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.settings:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.settings:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.settings:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f04000e, 0x7f040022, 0x7f040024, 
      0x7f040032, 0x7f0400e8, 0x7f0401e0, 0x7f0401e1, 
      0x7f0402e9, 0x7f04036a, 0x7f0404a1
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.settings:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.settings:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f04032a, 
      0x7f0403a3
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MockView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MockView_mock_diagonalsColor com.android.settings:mock_diagonalsColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_label com.android.settings:mock_label}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_labelBackgroundColor com.android.settings:mock_labelBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_labelColor com.android.settings:mock_labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_showDiagonals com.android.settings:mock_showDiagonals}</code></td><td></td></tr>
     * <tr><td><code>{@link #MockView_mock_showLabel com.android.settings:mock_showLabel}</code></td><td></td></tr>
     * </table>
     * @see #MockView_mock_diagonalsColor
     * @see #MockView_mock_label
     * @see #MockView_mock_labelBackgroundColor
     * @see #MockView_mock_labelColor
     * @see #MockView_mock_showDiagonals
     * @see #MockView_mock_showLabel
     */
    public static final int[] MockView={
      0x7f0402c1, 0x7f0402c2, 0x7f0402c3, 0x7f0402c4, 
      0x7f0402c5, 0x7f0402c6
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#mock_diagonalsColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:mock_diagonalsColor
     */
    public static final int MockView_mock_diagonalsColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#mock_label}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:mock_label
     */
    public static final int MockView_mock_label=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#mock_labelBackgroundColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:mock_labelBackgroundColor
     */
    public static final int MockView_mock_labelBackgroundColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#mock_labelColor}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:mock_labelColor
     */
    public static final int MockView_mock_labelColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#mock_showDiagonals}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:mock_showDiagonals
     */
    public static final int MockView_mock_showDiagonals=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#mock_showLabel}
     * attribute's value can be found in the {@link #MockView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:mock_showLabel
     */
    public static final int MockView_mock_showLabel=5;
    /**
     * Attributes that can be used with a Motion.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Motion_animate_relativeTo com.android.settings:animate_relativeTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_drawPath com.android.settings:drawPath}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_motionPathRotate com.android.settings:motionPathRotate}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_motionStagger com.android.settings:motionStagger}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_pathMotionArc com.android.settings:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Motion_transitionEasing com.android.settings:transitionEasing}</code></td><td></td></tr>
     * </table>
     * @see #Motion_animate_relativeTo
     * @see #Motion_drawPath
     * @see #Motion_motionPathRotate
     * @see #Motion_motionStagger
     * @see #Motion_pathMotionArc
     * @see #Motion_transitionEasing
     */
    public static final int[] Motion={
      0x7f040035, 0x7f04013c, 0x7f0402d5, 0x7f0402d7, 
      0x7f040307, 0x7f0404af
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animate_relativeTo}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:animate_relativeTo
     */
    public static final int Motion_animate_relativeTo=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#drawPath}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>asConfigured</td><td>4</td><td></td></tr>
     * <tr><td>deltaRelative</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>path</td><td>1</td><td></td></tr>
     * <tr><td>pathRelative</td><td>2</td><td></td></tr>
     * <tr><td>rectangles</td><td>5</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:drawPath
     */
    public static final int Motion_drawPath=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionPathRotate}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionPathRotate
     */
    public static final int Motion_motionPathRotate=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionStagger}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionStagger
     */
    public static final int Motion_motionStagger=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pathMotionArc
     */
    public static final int Motion_pathMotionArc=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionEasing}
     * attribute's value can be found in the {@link #Motion} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>accelerate</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * <tr><td>standard</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:transitionEasing
     */
    public static final int Motion_transitionEasing=5;
    /**
     * Attributes that can be used with a MotionHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionHelper_onHide com.android.settings:onHide}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionHelper_onShow com.android.settings:onShow}</code></td><td></td></tr>
     * </table>
     * @see #MotionHelper_onHide
     * @see #MotionHelper_onShow
     */
    public static final int[] MotionHelper={
      0x7f0402eb, 0x7f0402ee
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#onHide}
     * attribute's value can be found in the {@link #MotionHelper} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:onHide
     */
    public static final int MotionHelper_onHide=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#onShow}
     * attribute's value can be found in the {@link #MotionHelper} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:onShow
     */
    public static final int MotionHelper_onShow=1;
    /**
     * Attributes that can be used with a MotionLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionLayout_applyMotionScene com.android.settings:applyMotionScene}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_currentState com.android.settings:currentState}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_layoutDescription com.android.settings:layoutDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_motionDebug com.android.settings:motionDebug}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_motionProgress com.android.settings:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionLayout_showPaths com.android.settings:showPaths}</code></td><td></td></tr>
     * </table>
     * @see #MotionLayout_applyMotionScene
     * @see #MotionLayout_currentState
     * @see #MotionLayout_layoutDescription
     * @see #MotionLayout_motionDebug
     * @see #MotionLayout_motionProgress
     * @see #MotionLayout_showPaths
     */
    public static final int[] MotionLayout={
      0x7f04003b, 0x7f040110, 0x7f040219, 0x7f0402c7, 
      0x7f0402d6, 0x7f04036e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#applyMotionScene}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:applyMotionScene
     */
    public static final int MotionLayout_applyMotionScene=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#currentState}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:currentState
     */
    public static final int MotionLayout_currentState=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layoutDescription}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layoutDescription
     */
    public static final int MotionLayout_layoutDescription=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionDebug}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>NO_DEBUG</td><td>0</td><td></td></tr>
     * <tr><td>SHOW_ALL</td><td>3</td><td></td></tr>
     * <tr><td>SHOW_PATH</td><td>2</td><td></td></tr>
     * <tr><td>SHOW_PROGRESS</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:motionDebug
     */
    public static final int MotionLayout_motionDebug=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionProgress}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionProgress
     */
    public static final int MotionLayout_motionProgress=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#showPaths}
     * attribute's value can be found in the {@link #MotionLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showPaths
     */
    public static final int MotionLayout_showPaths=5;
    /**
     * Attributes that can be used with a MotionScene.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionScene_defaultDuration com.android.settings:defaultDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionScene_layoutDuringTransition com.android.settings:layoutDuringTransition}</code></td><td></td></tr>
     * </table>
     * @see #MotionScene_defaultDuration
     * @see #MotionScene_layoutDuringTransition
     */
    public static final int[] MotionScene={
      0x7f04011f, 0x7f04021a
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#defaultDuration}
     * attribute's value can be found in the {@link #MotionScene} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:defaultDuration
     */
    public static final int MotionScene_defaultDuration=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layoutDuringTransition}
     * attribute's value can be found in the {@link #MotionScene} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layoutDuringTransition
     */
    public static final int MotionScene_layoutDuringTransition=1;
    /**
     * Attributes that can be used with a MotionTelltales.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_tailColor com.android.settings:telltales_tailColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_tailScale com.android.settings:telltales_tailScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #MotionTelltales_telltales_velocityMode com.android.settings:telltales_velocityMode}</code></td><td></td></tr>
     * </table>
     * @see #MotionTelltales_telltales_tailColor
     * @see #MotionTelltales_telltales_tailScale
     * @see #MotionTelltales_telltales_velocityMode
     */
    public static final int[] MotionTelltales={
      0x7f04044a, 0x7f04044b, 0x7f04044c
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#telltales_tailColor}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:telltales_tailColor
     */
    public static final int MotionTelltales_telltales_tailColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#telltales_tailScale}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:telltales_tailScale
     */
    public static final int MotionTelltales_telltales_tailScale=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#telltales_velocityMode}
     * attribute's value can be found in the {@link #MotionTelltales} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>layout</td><td>0</td><td></td></tr>
     * <tr><td>postLayout</td><td>1</td><td></td></tr>
     * <tr><td>staticLayout</td><td>3</td><td></td></tr>
     * <tr><td>staticPostLayout</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:telltales_velocityMode
     */
    public static final int MotionTelltales_telltales_velocityMode=2;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.android.settings:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.android.settings:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
      0x010100b2, 0x010101f8, 0x7f040162, 0x7f040164
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a NavigationBarView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationBarView_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemBackground com.android.settings:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemIconSize com.android.settings:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemIconTint com.android.settings:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemRippleColor com.android.settings:itemRippleColor}</code></td><td>The ColorStateList to use for a ripple background.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemTextAppearanceActive com.android.settings:itemTextAppearanceActive}</code></td><td>The text appearance to apply to the active navigation item label.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemTextAppearanceInactive com.android.settings:itemTextAppearanceInactive}</code></td><td>The text appearance to apply to the inactive navigation item labels.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_itemTextColor com.android.settings:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationBarView_labelVisibilityMode com.android.settings:labelVisibilityMode}</code></td><td>Whether navigation items display with a label, without a label, or with a label during
     * selected state.</td></tr>
     * <tr><td><code>{@link #NavigationBarView_menu com.android.settings:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * </table>
     * @see #NavigationBarView_backgroundTint
     * @see #NavigationBarView_elevation
     * @see #NavigationBarView_itemBackground
     * @see #NavigationBarView_itemIconSize
     * @see #NavigationBarView_itemIconTint
     * @see #NavigationBarView_itemRippleColor
     * @see #NavigationBarView_itemTextAppearanceActive
     * @see #NavigationBarView_itemTextAppearanceInactive
     * @see #NavigationBarView_itemTextColor
     * @see #NavigationBarView_labelVisibilityMode
     * @see #NavigationBarView_menu
     */
    public static final int[] NavigationBarView={
      0x7f040052, 0x7f040150, 0x7f0401f4, 0x7f0401f9, 
      0x7f0401fa, 0x7f0401fd, 0x7f040209, 0x7f04020a, 
      0x7f04020b, 0x7f040216, 0x7f0402b7
    };
    /**
     * <p>
     * @attr description
     * Background tint for the navigation bar.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int NavigationBarView_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * The elevation to use for the navigation bar view
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int NavigationBarView_elevation=1;
    /**
     * <p>
     * @attr description
     * The background for the navigation items. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemBackground
     */
    public static final int NavigationBarView_itemBackground=2;
    /**
     * <p>
     * @attr description
     * The size to provide for the navigation item icons.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemIconSize
     */
    public static final int NavigationBarView_itemIconSize=3;
    /**
     * <p>
     * @attr description
     * The tint to apply to the navigation item icons. Attribute type definition is in navigation
     * package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemIconTint
     */
    public static final int NavigationBarView_itemIconTint=4;
    /**
     * <p>
     * @attr description
     * The ColorStateList to use for a ripple background. This only exists because creating
     * ripples in drawable xml based on theme colors is not supported pre-23. This will be ignored
     * if itemBackground is set.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemRippleColor
     */
    public static final int NavigationBarView_itemRippleColor=5;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the active navigation item label. You should not set
     * android:textColor in itemTextAppearanceActive. Instead, set itemTextColor to a
     * ColorStateList to make the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemTextAppearanceActive
     */
    public static final int NavigationBarView_itemTextAppearanceActive=6;
    /**
     * <p>
     * @attr description
     * The text appearance to apply to the inactive navigation item labels. Setting
     * android:textColor in itemTextAppearanceInactive will take precedence over android:textColor
     * in itemTextAppearanceActive. Instead, set itemTextColor with a ColorStateList to make
     * the text color stateful.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemTextAppearanceInactive
     */
    public static final int NavigationBarView_itemTextAppearanceInactive=7;
    /**
     * <p>
     * @attr description
     * The color to apply to the navigation items' text. Setting itemTextColor will take
     * precedence over android:textColor in itemTextAppearanceInactive or
     * itemTextAppearanceActive. Attribute type definition is in navigation package.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemTextColor
     */
    public static final int NavigationBarView_itemTextColor=8;
    /**
     * <p>
     * @attr description
     * Whether navigation items display with a label, without a label, or with a label during
     * selected state. Can also be "auto", which uses the item count to determine whether to show
     * or hide the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Label behaves as "labeled" when there are 3 items or less, or "selected" when there are
     * 4 items or more.</td></tr>
     * <tr><td>labeled</td><td>1</td><td>Label is shown on all navigation items.</td></tr>
     * <tr><td>selected</td><td>0</td><td>Label is shown on the selected navigation item.</td></tr>
     * <tr><td>unlabeled</td><td>2</td><td>Label is not shown on any navigation items.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:labelVisibilityMode
     */
    public static final int NavigationBarView_labelVisibilityMode=9;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from. Attribute type definition is in
     * navigation package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:menu
     */
    public static final int NavigationBarView_menu=10;
    /**
     * Attributes that can be used with a NavigationRailView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationRailView_headerLayout com.android.settings:headerLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationRailView_menuGravity com.android.settings:menuGravity}</code></td><td>Specifies how the navigation rail destinations should be aligned as a group.</td></tr>
     * </table>
     * @see #NavigationRailView_headerLayout
     * @see #NavigationRailView_menuGravity
     */
    public static final int[] NavigationRailView={
      0x7f0401be, 0x7f0402b8
    };
    /**
     * <p>
     * @attr description
     * Specifies the layout that will be used to create the header view, if any
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:headerLayout
     */
    public static final int NavigationRailView_headerLayout=0;
    /**
     * <p>
     * @attr description
     * Specifies how the navigation rail destinations should be aligned as a group.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>51</td><td>Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL</td></tr>
     * <tr><td>center</td><td>11</td><td>Gravity.CENTER</td></tr>
     * <tr><td>top</td><td>31</td><td>Gravity.TOP | Gravity.CENTER_HORIZONTAL</td></tr>
     * </table>
     *
     * @attr name com.android.settings:menuGravity
     */
    public static final int NavigationRailView_menuGravity=1;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout com.android.settings:headerLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground com.android.settings:itemBackground}</code></td><td>A background drawable to use for navigation items.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemHorizontalPadding com.android.settings:itemHorizontalPadding}</code></td><td>Horizontal padding (left and right) of navigation items, around the icon & text</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconPadding com.android.settings:itemIconPadding}</code></td><td>Padding between the icon and the text for navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconSize com.android.settings:itemIconSize}</code></td><td>The size of the icon navigation items that display an icon</td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint com.android.settings:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemMaxLines com.android.settings:itemMaxLines}</code></td><td>Makes the TextView of the item text be at most this many lines tall.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearance com.android.settings:itemShapeAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeAppearanceOverlay com.android.settings:itemShapeAppearanceOverlay}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeFillColor com.android.settings:itemShapeFillColor}</code></td><td>Fill color for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetBottom com.android.settings:itemShapeInsetBottom}</code></td><td>Inset bottom margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetEnd com.android.settings:itemShapeInsetEnd}</code></td><td>Inset end margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetStart com.android.settings:itemShapeInsetStart}</code></td><td>Inset start margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemShapeInsetTop com.android.settings:itemShapeInsetTop}</code></td><td>Inset top margin for the item background shape.</td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance com.android.settings:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor com.android.settings:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu com.android.settings:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #NavigationView_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #NavigationView_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemHorizontalPadding
     * @see #NavigationView_itemIconPadding
     * @see #NavigationView_itemIconSize
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemMaxLines
     * @see #NavigationView_itemShapeAppearance
     * @see #NavigationView_itemShapeAppearanceOverlay
     * @see #NavigationView_itemShapeFillColor
     * @see #NavigationView_itemShapeInsetBottom
     * @see #NavigationView_itemShapeInsetEnd
     * @see #NavigationView_itemShapeInsetStart
     * @see #NavigationView_itemShapeInsetTop
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     * @see #NavigationView_shapeAppearance
     * @see #NavigationView_shapeAppearanceOverlay
     */
    public static final int[] NavigationView={
      0x010100d4, 0x010100dd, 0x0101011f, 0x7f040150, 
      0x7f0401be, 0x7f0401f4, 0x7f0401f6, 0x7f0401f8, 
      0x7f0401f9, 0x7f0401fa, 0x7f0401fb, 0x7f0401fe, 
      0x7f0401ff, 0x7f040200, 0x7f040201, 0x7f040202, 
      0x7f040203, 0x7f040204, 0x7f040208, 0x7f04020b, 
      0x7f0402b7, 0x7f040362, 0x7f040365
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static final int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int NavigationView_android_maxWidth=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#elevation}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int NavigationView_elevation=3;
    /**
     * <p>
     * @attr description
     * Layout resource to inflate as the header
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:headerLayout
     */
    public static final int NavigationView_headerLayout=4;
    /**
     * <p>
     * @attr description
     * A background drawable to use for navigation items. If this is set, this overrides the
     * default background drawable for items and the itemShape* attributes will be ignored
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemBackground
     */
    public static final int NavigationView_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Horizontal padding (left and right) of navigation items, around the icon & text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemHorizontalPadding
     */
    public static final int NavigationView_itemHorizontalPadding=6;
    /**
     * <p>
     * @attr description
     * Padding between the icon and the text for navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemIconPadding
     */
    public static final int NavigationView_itemIconPadding=7;
    /**
     * <p>
     * @attr description
     * The size of the icon navigation items that display an icon
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemIconSize
     */
    public static final int NavigationView_itemIconSize=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemIconTint
     */
    public static final int NavigationView_itemIconTint=9;
    /**
     * <p>
     * @attr description
     * Makes the TextView of the item text be at most this many lines tall.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:itemMaxLines
     */
    public static final int NavigationView_itemMaxLines=10;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for the shaped item background. To use the shaped
     * item background, either itemShapeAppearance or itemShapeAppearanceOverlay must be set and
     * itemBackground must be null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemShapeAppearance
     */
    public static final int NavigationView_itemShapeAppearance=11;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for item background. To be used to augment
     * attributes declared in itemShapeAppearance. To use the shaped item background, either
     * itemShapeAppearance or itemShapeAppearanceOverlay must be set and itemBackground must be
     * null so that it can be set programmatically.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemShapeAppearanceOverlay
     */
    public static final int NavigationView_itemShapeAppearanceOverlay=12;
    /**
     * <p>
     * @attr description
     * Fill color for the item background shape. Used if itemBackground isn't set and there is an
     * itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemShapeFillColor
     */
    public static final int NavigationView_itemShapeFillColor=13;
    /**
     * <p>
     * @attr description
     * Inset bottom margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemShapeInsetBottom
     */
    public static final int NavigationView_itemShapeInsetBottom=14;
    /**
     * <p>
     * @attr description
     * Inset end margin for the item background shape. Used if itemBackground isn't set and there
     * and there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemShapeInsetEnd
     */
    public static final int NavigationView_itemShapeInsetEnd=15;
    /**
     * <p>
     * @attr description
     * Inset start margin for the item background shape. Used if itemBackground isn't set and
     * there is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemShapeInsetStart
     */
    public static final int NavigationView_itemShapeInsetStart=16;
    /**
     * <p>
     * @attr description
     * Inset top margin for the item background shape. Used if itemBackground isn't set and there
     * is an itemShapeAppearance or itemShapeAppearanceOverlay.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemShapeInsetTop
     */
    public static final int NavigationView_itemShapeInsetTop=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:itemTextAppearance
     */
    public static final int NavigationView_itemTextAppearance=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:itemTextColor
     */
    public static final int NavigationView_itemTextColor=19;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:menu
     */
    public static final int NavigationView_menu=20;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for NavigationView. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int NavigationView_shapeAppearance=21;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for NavigationView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int NavigationView_shapeAppearanceOverlay=22;
    /**
     * Attributes that can be used with a OnClick.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OnClick_clickAction com.android.settings:clickAction}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnClick_targetId com.android.settings:targetId}</code></td><td></td></tr>
     * </table>
     * @see #OnClick_clickAction
     * @see #OnClick_targetId
     */
    public static final int[] OnClick={
      0x7f0400b6, 0x7f040449
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#clickAction}
     * attribute's value can be found in the {@link #OnClick} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>jumpToEnd</td><td>100</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1000</td><td></td></tr>
     * <tr><td>toggle</td><td>11</td><td></td></tr>
     * <tr><td>transitionToEnd</td><td>1</td><td></td></tr>
     * <tr><td>transitionToStart</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:clickAction
     */
    public static final int OnClick_clickAction=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#targetId}
     * attribute's value can be found in the {@link #OnClick} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:targetId
     */
    public static final int OnClick_targetId=1;
    /**
     * Attributes that can be used with a OnSwipe.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #OnSwipe_dragDirection com.android.settings:dragDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_dragScale com.android.settings:dragScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_limitBoundsTo com.android.settings:limitBoundsTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_maxAcceleration com.android.settings:maxAcceleration}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_maxVelocity com.android.settings:maxVelocity}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_moveWhenScrollAtTop com.android.settings:moveWhenScrollAtTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_nestedScrollFlags com.android.settings:nestedScrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_onTouchUp com.android.settings:onTouchUp}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchAnchorId com.android.settings:touchAnchorId}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchAnchorSide com.android.settings:touchAnchorSide}</code></td><td></td></tr>
     * <tr><td><code>{@link #OnSwipe_touchRegionId com.android.settings:touchRegionId}</code></td><td></td></tr>
     * </table>
     * @see #OnSwipe_dragDirection
     * @see #OnSwipe_dragScale
     * @see #OnSwipe_limitBoundsTo
     * @see #OnSwipe_maxAcceleration
     * @see #OnSwipe_maxVelocity
     * @see #OnSwipe_moveWhenScrollAtTop
     * @see #OnSwipe_nestedScrollFlags
     * @see #OnSwipe_onTouchUp
     * @see #OnSwipe_touchAnchorId
     * @see #OnSwipe_touchAnchorSide
     * @see #OnSwipe_touchRegionId
     */
    public static final int[] OnSwipe={
      0x7f04013a, 0x7f04013b, 0x7f04025b, 0x7f04029d, 
      0x7f0402a4, 0x7f0402db, 0x7f0402e5, 0x7f0402ef, 
      0x7f0404a2, 0x7f0404a3, 0x7f0404a4
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dragDirection}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>dragDown</td><td>1</td><td></td></tr>
     * <tr><td>dragEnd</td><td>5</td><td></td></tr>
     * <tr><td>dragLeft</td><td>2</td><td></td></tr>
     * <tr><td>dragRight</td><td>3</td><td></td></tr>
     * <tr><td>dragStart</td><td>4</td><td></td></tr>
     * <tr><td>dragUp</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:dragDirection
     */
    public static final int OnSwipe_dragDirection=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dragScale}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:dragScale
     */
    public static final int OnSwipe_dragScale=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#limitBoundsTo}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:limitBoundsTo
     */
    public static final int OnSwipe_limitBoundsTo=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxAcceleration}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:maxAcceleration
     */
    public static final int OnSwipe_maxAcceleration=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxVelocity}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:maxVelocity
     */
    public static final int OnSwipe_maxVelocity=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#moveWhenScrollAtTop}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:moveWhenScrollAtTop
     */
    public static final int OnSwipe_moveWhenScrollAtTop=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#nestedScrollFlags}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disablePostScroll</td><td>1</td><td></td></tr>
     * <tr><td>disableScroll</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:nestedScrollFlags
     */
    public static final int OnSwipe_nestedScrollFlags=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#onTouchUp}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>autoComplete</td><td>0</td><td></td></tr>
     * <tr><td>autoCompleteToEnd</td><td>2</td><td></td></tr>
     * <tr><td>autoCompleteToStart</td><td>1</td><td></td></tr>
     * <tr><td>decelerate</td><td>4</td><td></td></tr>
     * <tr><td>decelerateAndComplete</td><td>5</td><td></td></tr>
     * <tr><td>stop</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:onTouchUp
     */
    public static final int OnSwipe_onTouchUp=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#touchAnchorId}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:touchAnchorId
     */
    public static final int OnSwipe_touchAnchorId=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#touchAnchorSide}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>3</td><td></td></tr>
     * <tr><td>end</td><td>6</td><td></td></tr>
     * <tr><td>left</td><td>1</td><td></td></tr>
     * <tr><td>middle</td><td>4</td><td></td></tr>
     * <tr><td>right</td><td>2</td><td></td></tr>
     * <tr><td>start</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:touchAnchorSide
     */
    public static final int OnSwipe_touchAnchorSide=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#touchRegionId}
     * attribute's value can be found in the {@link #OnSwipe} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:touchRegionId
     */
    public static final int OnSwipe_touchRegionId=10;
    /**
     * Attributes that can be used with a PercentageBarChart.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PercentageBarChart_emptyColor com.android.settings:emptyColor}</code></td><td>Background color</td></tr>
     * <tr><td><code>{@link #PercentageBarChart_minTickWidth com.android.settings:minTickWidth}</code></td><td>Minimum tick width for each slice in the bar chart.</td></tr>
     * </table>
     * @see #PercentageBarChart_emptyColor
     * @see #PercentageBarChart_minTickWidth
     */
    public static final int[] PercentageBarChart={
      0x7f040153, 0x7f0402be
    };
    /**
     * <p>
     * @attr description
     * Background color
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:emptyColor
     */
    public static final int PercentageBarChart_emptyColor=0;
    /**
     * <p>
     * @attr description
     * Minimum tick width for each slice in the bar chart.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:minTickWidth
     */
    public static final int PercentageBarChart_minTickWidth=1;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.settings:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f0402f4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.settings:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f040391
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.android.settings:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.android.settings:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_controller com.android.settings:controller}</code></td><td>Classname of a PreferenceController corresponding to the preference</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.android.settings:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.android.settings:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enableCopying com.android.settings:enableCopying}</code></td><td>Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.android.settings:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_forWork com.android.settings:forWork}</code></td><td>Whether or not the preference is for work profile, by default it's false.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.android.settings:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_highlightableMenuKey com.android.settings:highlightableMenuKey}</code></td><td>Identifier for highlighting the menu preference on 2-pane</td></tr>
     * <tr><td><code>{@link #Preference_icon com.android.settings:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.android.settings:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_isPreferenceVisible com.android.settings:isPreferenceVisible}</code></td><td>Whether the Preference is visible.</td></tr>
     * <tr><td><code>{@link #Preference_key com.android.settings:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_keywords com.android.settings:keywords}</code></td><td>Synonyms for search results</td></tr>
     * <tr><td><code>{@link #Preference_layout com.android.settings:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.android.settings:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.android.settings:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_searchable com.android.settings:searchable}</code></td><td>Whether or not the preference is searchable, by default it's true.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.android.settings:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.android.settings:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.android.settings:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.android.settings:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_unavailableSliceSubtitle com.android.settings:unavailableSliceSubtitle}</code></td><td>Customized subtitle if it's an unavailable slice</td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.android.settings:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_controller
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enableCopying
     * @see #Preference_enabled
     * @see #Preference_forWork
     * @see #Preference_fragment
     * @see #Preference_highlightableMenuKey
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_isPreferenceVisible
     * @see #Preference_key
     * @see #Preference_keywords
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_searchable
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_unavailableSliceSubtitle
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
      0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
      0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
      0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
      0x7f04002d, 0x7f04002f, 0x7f0400fb, 0x7f040122, 
      0x7f040125, 0x7f040154, 0x7f040156, 0x7f0401af, 
      0x7f0401b2, 0x7f0401cc, 0x7f0401d6, 0x7f0401dc, 
      0x7f0401f3, 0x7f04020c, 0x7f040210, 0x7f040218, 
      0x7f0402f2, 0x7f04030e, 0x7f040355, 0x7f04035d, 
      0x7f040368, 0x7f040377, 0x7f04041a, 0x7f040488, 
      0x7f0404b7, 0x7f0404cb
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * Classname of a PreferenceController corresponding to the preference
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:controller
     */
    public static final int Preference_controller=18;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:defaultValue
     */
    public static final int Preference_defaultValue=19;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:dependency
     */
    public static final int Preference_dependency=20;
    /**
     * <p>
     * @attr description
     * Whether the summary of this preference can be copied to the clipboard by long pressing
     * on the preference. By default, this is set to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:enableCopying
     */
    public static final int Preference_enableCopying=21;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:enabled
     */
    public static final int Preference_enabled=22;
    /**
     * <p>
     * @attr description
     * Whether or not the preference is for work profile, by default it's false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:forWork
     */
    public static final int Preference_forWork=23;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fragment
     */
    public static final int Preference_fragment=24;
    /**
     * <p>
     * @attr description
     * Identifier for highlighting the menu preference on 2-pane
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:highlightableMenuKey
     */
    public static final int Preference_highlightableMenuKey=25;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:icon
     */
    public static final int Preference_icon=26;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=27;
    /**
     * <p>
     * @attr description
     * Whether the Preference is visible. By default, this is set to true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:isPreferenceVisible
     */
    public static final int Preference_isPreferenceVisible=28;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:key
     */
    public static final int Preference_key=29;
    /**
     * <p>
     * @attr description
     * Synonyms for search results
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:keywords
     */
    public static final int Preference_keywords=30;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout
     */
    public static final int Preference_layout=31;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:order
     */
    public static final int Preference_order=32;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:persistent
     */
    public static final int Preference_persistent=33;
    /**
     * <p>
     * @attr description
     * Whether or not the preference is searchable, by default it's true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:searchable
     */
    public static final int Preference_searchable=34;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:selectable
     */
    public static final int Preference_selectable=35;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:shouldDisableView
     */
    public static final int Preference_shouldDisableView=36;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:singleLineTitle
     */
    public static final int Preference_singleLineTitle=37;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summary
     */
    public static final int Preference_summary=38;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:title
     */
    public static final int Preference_title=39;
    /**
     * <p>
     * @attr description
     * Customized subtitle if it's an unavailable slice
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:unavailableSliceSubtitle
     */
    public static final int Preference_unavailableSliceSubtitle=40;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:widgetLayout
     */
    public static final int Preference_widgetLayout=41;
    /**
     * Attributes that can be used with a PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.android.settings:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f04002e
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceFragmentCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.android.settings:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
      0x010100f2, 0x01010129, 0x0101012a, 0x7f04002e
    };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Attributes that can be used with a PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_initialExpandedChildrenCount com.android.settings:initialExpandedChildrenCount}</code></td><td>The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden.</td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.android.settings:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_initialExpandedChildrenCount
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
      0x010101e7, 0x7f0401ef, 0x7f0402f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * The maximal number of children that are shown when the preference group is launched
     * where the rest of the children will be hidden. If some children are hidden an expand
     * button will be provided to show all the hidden children.
     * Any child in any level of the hierarchy that is also a preference group (e.g.
     * preference category) will not be counted towards the limit. But instead the children of
     * such group will be counted.
     * By default, all children will be shown, so the default value of this attribute is equal
     * to Integer.MAX_VALUE.
     * The group should have a key defined if an expandable preference is present to correctly
     * persist state.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:initialExpandedChildrenCount
     */
    public static final int PreferenceGroup_initialExpandedChildrenCount=1;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=2;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.android.settings:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.android.settings:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
      0x0101011f, 0x01010120, 0x7f0402a1, 0x7f0402a5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceScreen.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceScreen_staticPreferenceLocation com.android.settings:staticPreferenceLocation}</code></td><td>Determines if static preferences defined in addStaticPreferences are added before or after the radio buttons</td></tr>
     * </table>
     * @see #PreferenceScreen_staticPreferenceLocation
     */
    public static final int[] PreferenceScreen={
      0x7f04039a
    };
    /**
     * <p>
     * @attr description
     * Determines if static preferences defined in addStaticPreferences are added before or after the radio buttons
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>append</td><td>1</td><td></td></tr>
     * <tr><td>prepend</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:staticPreferenceLocation
     */
    public static final int PreferenceScreen_staticPreferenceLocation=0;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.android.settings:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.android.settings:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.android.settings:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.android.settings:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.android.settings:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextAppearance com.android.settings:preferenceCategoryTitleTextAppearance}</code></td><td>The preferred TextAppearance for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryTitleTextColor com.android.settings:preferenceCategoryTitleTextColor}</code></td><td>The preferred color for the title displayed in a PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.android.settings:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.android.settings:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.android.settings:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.android.settings:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.android.settings:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.android.settings:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.android.settings:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.android.settings:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.android.settings:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.android.settings:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceCategoryTitleTextAppearance
     * @see #PreferenceTheme_preferenceCategoryTitleTextColor
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     */
    public static final int[] PreferenceTheme={
      0x7f040094, 0x7f04012c, 0x7f04014a, 0x7f04014e, 
      0x7f04031d, 0x7f04031e, 0x7f04031f, 0x7f040320, 
      0x7f040321, 0x7f040322, 0x7f040323, 0x7f040324, 
      0x7f040325, 0x7f040326, 0x7f04035b, 0x7f040428, 
      0x7f040429
    };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=4;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the title displayed in a PreferenceCategory.
     * This is needed as there are no relevant android: attributes we can use for this as we
     * do with other text appearance styles.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceCategoryTitleTextAppearance
     */
    public static final int PreferenceTheme_preferenceCategoryTitleTextAppearance=5;
    /**
     * <p>
     * @attr description
     * The preferred color for the title displayed in a PreferenceCategory.
     * If this is not specified by a developer, we use ?android:attr/colorAccent above
     * Lollipop, and ?attr/colorAccent below Lollipop (when using an AppCompat theme).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:preferenceCategoryTitleTextColor
     */
    public static final int PreferenceTheme_preferenceCategoryTitleTextColor=6;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=7;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=9;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=11;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=12;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=13;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=15;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=16;
    /**
     * Attributes that can be used with a PropertySet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PropertySet_android_visibility android:visibility}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_layout_constraintTag com.android.settings:layout_constraintTag}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_motionProgress com.android.settings:motionProgress}</code></td><td></td></tr>
     * <tr><td><code>{@link #PropertySet_visibilityMode com.android.settings:visibilityMode}</code></td><td></td></tr>
     * </table>
     * @see #PropertySet_android_visibility
     * @see #PropertySet_android_alpha
     * @see #PropertySet_layout_constraintTag
     * @see #PropertySet_motionProgress
     * @see #PropertySet_visibilityMode
     */
    public static final int[] PropertySet={
      0x010100dc, 0x0101031f, 0x7f040240, 0x7f0402d6, 
      0x7f0404c3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visibility}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>gone</td><td>2</td><td></td></tr>
     * <tr><td>invisible</td><td>1</td><td></td></tr>
     * <tr><td>visible</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:visibility
     */
    public static final int PropertySet_android_visibility=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int PropertySet_android_alpha=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layout_constraintTag}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layout_constraintTag
     */
    public static final int PropertySet_layout_constraintTag=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionProgress}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:motionProgress
     */
    public static final int PropertySet_motionProgress=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#visibilityMode}
     * attribute's value can be found in the {@link #PropertySet} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ignore</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:visibilityMode
     */
    public static final int PropertySet_visibilityMode=4;
    /**
     * Attributes that can be used with a RadialViewGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadialViewGroup_materialCircleRadius com.android.settings:materialCircleRadius}</code></td><td></td></tr>
     * </table>
     * @see #RadialViewGroup_materialCircleRadius
     */
    public static final int[] RadialViewGroup={
      0x7f040298
    };
    /**
     * <p>
     * @attr description
     * Radius indicating how far away from the center of the group the
     * children are positioned
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:materialCircleRadius
     */
    public static final int RadialViewGroup_materialCircleRadius=0;
    /**
     * Attributes that can be used with a RangeSlider.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RangeSlider_minSeparation com.android.settings:minSeparation}</code></td><td>If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen</td></tr>
     * <tr><td><code>{@link #RangeSlider_values com.android.settings:values}</code></td><td></td></tr>
     * </table>
     * @see #RangeSlider_minSeparation
     * @see #RangeSlider_values
     */
    public static final int[] RangeSlider={
      0x7f0402bd, 0x7f0404bf
    };
    /**
     * <p>
     * @attr description
     * If there is more than one thumb, and the slider is
     * not discrete the thumbs will be separated by this dimen
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:minSeparation
     */
    public static final int RangeSlider_minSeparation=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#values}
     * attribute's value can be found in the {@link #RangeSlider} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:values
     */
    public static final int RangeSlider_values=1;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.settings:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.settings:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f0402f6, 0x7f0402fc
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_clipToPadding android:clipToPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.settings:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.settings:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.settings:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.settings:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.settings:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.settings:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.settings:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.settings:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.settings:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_clipToPadding
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100eb, 0x010100f1, 0x7f040184, 
      0x7f040185, 0x7f040186, 0x7f040187, 0x7f040188, 
      0x7f04021b, 0x7f040343, 0x7f040380, 0x7f04038a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#clipToPadding}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:clipToPadding
     */
    public static final int RecyclerView_android_clipToPadding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=7;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layoutManager
     */
    public static final int RecyclerView_layoutManager=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:spanCount
     */
    public static final int RecyclerView_spanCount=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=11;
    /**
     * Attributes that can be used with a RestrictedPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RestrictedPreference_useAdminDisabledSummary com.android.settings:useAdminDisabledSummary}</code></td><td>If true then we can use enabled/disabled by admin strings for summary (android.R.id.summary).</td></tr>
     * <tr><td><code>{@link #RestrictedPreference_userRestriction com.android.settings:userRestriction}</code></td><td>The user restriction on which the preference disabled by admin state will be based on.</td></tr>
     * </table>
     * @see #RestrictedPreference_useAdminDisabledSummary
     * @see #RestrictedPreference_userRestriction
     */
    public static final int[] RestrictedPreference={
      0x7f0404ba, 0x7f0404be
    };
    /**
     * <p>
     * @attr description
     * If true then we can use enabled/disabled by admin strings for summary (android.R.id.summary).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useAdminDisabledSummary
     */
    public static final int RestrictedPreference_useAdminDisabledSummary=0;
    /**
     * <p>
     * @attr description
     * The user restriction on which the preference disabled by admin state will be based on.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:userRestriction
     */
    public static final int RestrictedPreference_userRestriction=1;
    /**
     * Attributes that can be used with a RestrictedSwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RestrictedSwitchPreference_restrictedSwitchSummary com.android.settings:restrictedSwitchSummary}</code></td><td>This is used as summary for restricted switch preferences, default value is
     * @string/disabled_by_admin (Disabled by administrator).</td></tr>
     * <tr><td><code>{@link #RestrictedSwitchPreference_useAdditionalSummary com.android.settings:useAdditionalSummary}</code></td><td>If true, an additional summary will be added in addition to the existing summary and
     * this will be used for enabled/disabled by admin strings leaving android.R.id.summary untouched.</td></tr>
     * </table>
     * @see #RestrictedSwitchPreference_restrictedSwitchSummary
     * @see #RestrictedSwitchPreference_useAdditionalSummary
     */
    public static final int[] RestrictedSwitchPreference={
      0x7f040342, 0x7f0404b9
    };
    /**
     * <p>
     * @attr description
     * This is used as summary for restricted switch preferences, default value is
     * @string/disabled_by_admin (Disabled by administrator).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:restrictedSwitchSummary
     */
    public static final int RestrictedSwitchPreference_restrictedSwitchSummary=0;
    /**
     * <p>
     * @attr description
     * If true, an additional summary will be added in addition to the existing summary and
     * this will be used for enabled/disabled by admin strings leaving android.R.id.summary untouched.
     * As such when this is true, useAdminDisabledSummary will be overwritten to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useAdditionalSummary
     */
    public static final int RestrictedSwitchPreference_useAdditionalSummary=1;
    /**
     * Attributes that can be used with a RowStyle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RowStyle_actionDividerHeight com.android.settings:actionDividerHeight}</code></td><td>Height to use for action divider in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_bottomDividerEndPadding com.android.settings:bottomDividerEndPadding}</code></td><td>Padding to the end edge of the bottom divider in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_bottomDividerStartPadding com.android.settings:bottomDividerStartPadding}</code></td><td>Padding to the start edge of the bottom divider in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_contentEndPadding com.android.settings:contentEndPadding}</code></td><td>Padding to the end edge of the content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_contentStartPadding com.android.settings:contentStartPadding}</code></td><td>Padding to the start edge of the content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_disableRecyclerViewItemAnimator com.android.settings:disableRecyclerViewItemAnimator}</code></td><td>Control whether RecyclerView item animator is disable or not, true for disable
     * otherwise enable.</td></tr>
     * <tr><td><code>{@link #RowStyle_endItemEndPadding com.android.settings:endItemEndPadding}</code></td><td>Padding to the end edge of the collection of items shown at the end of the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_endItemStartPadding com.android.settings:endItemStartPadding}</code></td><td>Padding to the start edge of the collection of items shown at the end of the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_iconSize com.android.settings:iconSize}</code></td><td>Specifies the width and height to use for the icon drawable.</td></tr>
     * <tr><td><code>{@link #RowStyle_imageSize com.android.settings:imageSize}</code></td><td>Size of small images in a slice.</td></tr>
     * <tr><td><code>{@link #RowStyle_progressBarEndPadding com.android.settings:progressBarEndPadding}</code></td><td>Padding to the end edge of the progress bar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_progressBarInlineWidth com.android.settings:progressBarInlineWidth}</code></td><td>Width to use for inline progress bar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_progressBarStartPadding com.android.settings:progressBarStartPadding}</code></td><td>Padding to the start edge of the progress bar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_seekBarInlineWidth com.android.settings:seekBarInlineWidth}</code></td><td>Width to use for inline SeekBar in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_subContentEndPadding com.android.settings:subContentEndPadding}</code></td><td>Padding to the end edge of the sub content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_subContentStartPadding com.android.settings:subContentStartPadding}</code></td><td>Padding to the start edge of the sub content in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_subtitleColor com.android.settings:subtitleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RowStyle_textActionPadding com.android.settings:textActionPadding}</code></td><td>Padding to the edge of the button in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_tintColor com.android.settings:tintColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RowStyle_titleColor com.android.settings:titleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RowStyle_titleEndPadding com.android.settings:titleEndPadding}</code></td><td>Padding to the end edge of the title in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_titleItemEndPadding com.android.settings:titleItemEndPadding}</code></td><td>Padding to the end edge of title items shown in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_titleItemStartPadding com.android.settings:titleItemStartPadding}</code></td><td>Padding to the start edge of title items shown in the row.</td></tr>
     * <tr><td><code>{@link #RowStyle_titleStartPadding com.android.settings:titleStartPadding}</code></td><td>Padding to the start edge of the title in the row.</td></tr>
     * </table>
     * @see #RowStyle_actionDividerHeight
     * @see #RowStyle_bottomDividerEndPadding
     * @see #RowStyle_bottomDividerStartPadding
     * @see #RowStyle_contentEndPadding
     * @see #RowStyle_contentStartPadding
     * @see #RowStyle_disableRecyclerViewItemAnimator
     * @see #RowStyle_endItemEndPadding
     * @see #RowStyle_endItemStartPadding
     * @see #RowStyle_iconSize
     * @see #RowStyle_imageSize
     * @see #RowStyle_progressBarEndPadding
     * @see #RowStyle_progressBarInlineWidth
     * @see #RowStyle_progressBarStartPadding
     * @see #RowStyle_seekBarInlineWidth
     * @see #RowStyle_subContentEndPadding
     * @see #RowStyle_subContentStartPadding
     * @see #RowStyle_subtitleColor
     * @see #RowStyle_textActionPadding
     * @see #RowStyle_tintColor
     * @see #RowStyle_titleColor
     * @see #RowStyle_titleEndPadding
     * @see #RowStyle_titleItemEndPadding
     * @see #RowStyle_titleItemStartPadding
     * @see #RowStyle_titleStartPadding
     */
    public static final int[] RowStyle={
      0x7f04000c, 0x7f04006b, 0x7f04006c, 0x7f0400e9, 
      0x7f0400f8, 0x7f040131, 0x7f04015d, 0x7f04015e, 
      0x7f0401db, 0x7f0401e5, 0x7f040330, 0x7f040331, 
      0x7f040333, 0x7f04035a, 0x7f0403a1, 0x7f0403a2, 
      0x7f0403a7, 0x7f04044d, 0x7f040486, 0x7f04048b, 
      0x7f04048d, 0x7f04048e, 0x7f04048f, 0x7f040497
    };
    /**
     * <p>
     * @attr description
     * Height to use for action divider in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:actionDividerHeight
     */
    public static final int RowStyle_actionDividerHeight=0;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the bottom divider in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:bottomDividerEndPadding
     */
    public static final int RowStyle_bottomDividerEndPadding=1;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the bottom divider in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:bottomDividerStartPadding
     */
    public static final int RowStyle_bottomDividerStartPadding=2;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentEndPadding
     */
    public static final int RowStyle_contentEndPadding=3;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentStartPadding
     */
    public static final int RowStyle_contentStartPadding=4;
    /**
     * <p>
     * @attr description
     * Control whether RecyclerView item animator is disable or not, true for disable
     * otherwise enable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableRecyclerViewItemAnimator
     */
    public static final int RowStyle_disableRecyclerViewItemAnimator=5;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the collection of items shown at the end of the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:endItemEndPadding
     */
    public static final int RowStyle_endItemEndPadding=6;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the collection of items shown at the end of the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:endItemStartPadding
     */
    public static final int RowStyle_endItemStartPadding=7;
    /**
     * <p>
     * @attr description
     * Size of icon.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:iconSize
     */
    public static final int RowStyle_iconSize=8;
    /**
     * <p>
     * @attr description
     * Size of small images in a slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:imageSize
     */
    public static final int RowStyle_imageSize=9;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the progress bar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:progressBarEndPadding
     */
    public static final int RowStyle_progressBarEndPadding=10;
    /**
     * <p>
     * @attr description
     * Width to use for inline progress bar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:progressBarInlineWidth
     */
    public static final int RowStyle_progressBarInlineWidth=11;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the progress bar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:progressBarStartPadding
     */
    public static final int RowStyle_progressBarStartPadding=12;
    /**
     * <p>
     * @attr description
     * Width to use for inline SeekBar in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:seekBarInlineWidth
     */
    public static final int RowStyle_seekBarInlineWidth=13;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the sub content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:subContentEndPadding
     */
    public static final int RowStyle_subContentEndPadding=14;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the sub content in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:subContentStartPadding
     */
    public static final int RowStyle_subContentStartPadding=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#subtitleColor}
     * attribute's value can be found in the {@link #RowStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:subtitleColor
     */
    public static final int RowStyle_subtitleColor=16;
    /**
     * <p>
     * @attr description
     * Padding to the edge of the button in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:textActionPadding
     */
    public static final int RowStyle_textActionPadding=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#tintColor}
     * attribute's value can be found in the {@link #RowStyle} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tintColor
     */
    public static final int RowStyle_tintColor=18;
    /**
     * <p>
     * @attr description
     * These override the corresponding styles from SliceView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:titleColor
     */
    public static final int RowStyle_titleColor=19;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of the title in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleEndPadding
     */
    public static final int RowStyle_titleEndPadding=20;
    /**
     * <p>
     * @attr description
     * Padding to the end edge of title items shown in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleItemEndPadding
     */
    public static final int RowStyle_titleItemEndPadding=21;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of title items shown in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleItemStartPadding
     */
    public static final int RowStyle_titleItemStartPadding=22;
    /**
     * <p>
     * @attr description
     * Padding to the start edge of the title in the row.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleStartPadding
     */
    public static final int RowStyle_titleStartPadding=23;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground com.android.settings:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
      0x7f0401f0
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:insetForeground
     */
    public static final int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop com.android.settings:behavior_overlapTop}</code></td><td>The amount that the scrolling view should overlap the bottom of any AppBarLayout</td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
      0x7f040063
    };
    /**
     * <p>
     * @attr description
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:behavior_overlapTop
     */
    public static final int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.settings:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.settings:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.settings:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.settings:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.settings:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.settings:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.settings:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.settings:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.settings:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.settings:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.settings:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.settings:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.settings:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f0400bb, 0x7f0400df, 0x7f040120, 0x7f0401b6, 
      0x7f0401e2, 0x7f040218, 0x7f040335, 0x7f040336, 
      0x7f040352, 0x7f040353, 0x7f0403a4, 0x7f040419, 
      0x7f0404c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.android.settings:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.android.settings:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.android.settings:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.android.settings:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_updatesContinuously com.android.settings:updatesContinuously}</code></td><td>Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     * @see #SeekBarPreference_updatesContinuously
     */
    public static final int[] SeekBarPreference={
      0x010100f2, 0x01010136, 0x7f040028, 0x7f0402ba, 
      0x7f040359, 0x7f04036f, 0x7f0404b8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is GONE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=5;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the SeekBarPreference should continuously save the Seekbar
     * value while the Seekbar is being dragged. If true, the SeekBarPreference should continuously
     * save the Seekbar value while it is being dragged. If false, the Seekbar value is only saved
     * when released. By default, this boolean is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:updatesContinuously
     */
    public static final int SeekBarPreference_updatesContinuously=6;
    /**
     * Attributes that can be used with a SettingsBarView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SettingsBarView_barColor com.android.settings:barColor}</code></td><td>The color of bar view</td></tr>
     * </table>
     * @see #SettingsBarView_barColor
     */
    public static final int[] SettingsBarView={
      0x7f040057
    };
    /**
     * <p>
     * @attr description
     * The color of bar view
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:barColor
     */
    public static final int SettingsBarView_barColor=0;
    /**
     * Attributes that can be used with a ShapeAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamily com.android.settings:cornerFamily}</code></td><td>Corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomLeft com.android.settings:cornerFamilyBottomLeft}</code></td><td>Bottom left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyBottomRight com.android.settings:cornerFamilyBottomRight}</code></td><td>Bottom right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopLeft com.android.settings:cornerFamilyTopLeft}</code></td><td>Top left corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerFamilyTopRight com.android.settings:cornerFamilyTopRight}</code></td><td>Top right corner family to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSize com.android.settings:cornerSize}</code></td><td>Corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomLeft com.android.settings:cornerSizeBottomLeft}</code></td><td>Bottom left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeBottomRight com.android.settings:cornerSizeBottomRight}</code></td><td>Bottom right corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopLeft com.android.settings:cornerSizeTopLeft}</code></td><td>Top left corner size to be used in the ShapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeAppearance_cornerSizeTopRight com.android.settings:cornerSizeTopRight}</code></td><td>Top right corner size to be used in the ShapeAppearance.</td></tr>
     * </table>
     * @see #ShapeAppearance_cornerFamily
     * @see #ShapeAppearance_cornerFamilyBottomLeft
     * @see #ShapeAppearance_cornerFamilyBottomRight
     * @see #ShapeAppearance_cornerFamilyTopLeft
     * @see #ShapeAppearance_cornerFamilyTopRight
     * @see #ShapeAppearance_cornerSize
     * @see #ShapeAppearance_cornerSizeBottomLeft
     * @see #ShapeAppearance_cornerSizeBottomRight
     * @see #ShapeAppearance_cornerSizeTopLeft
     * @see #ShapeAppearance_cornerSizeTopRight
     */
    public static final int[] ShapeAppearance={
      0x7f0400fd, 0x7f0400fe, 0x7f0400ff, 0x7f040100, 
      0x7f040101, 0x7f040103, 0x7f040104, 0x7f040105, 
      0x7f040106, 0x7f040107
    };
    /**
     * <p>
     * @attr description
     * Corner family to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:cornerFamily
     */
    public static final int ShapeAppearance_cornerFamily=0;
    /**
     * <p>
     * @attr description
     * Bottom left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:cornerFamilyBottomLeft
     */
    public static final int ShapeAppearance_cornerFamilyBottomLeft=1;
    /**
     * <p>
     * @attr description
     * Bottom right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:cornerFamilyBottomRight
     */
    public static final int ShapeAppearance_cornerFamilyBottomRight=2;
    /**
     * <p>
     * @attr description
     * Top left corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:cornerFamilyTopLeft
     */
    public static final int ShapeAppearance_cornerFamilyTopLeft=3;
    /**
     * <p>
     * @attr description
     * Top right corner family to be used in the ShapeAppearance.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>cut</td><td>1</td><td></td></tr>
     * <tr><td>rounded</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:cornerFamilyTopRight
     */
    public static final int ShapeAppearance_cornerFamilyTopRight=4;
    /**
     * <p>
     * @attr description
     * Corner size to be used in the ShapeAppearance. All corners default to this value
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:cornerSize
     */
    public static final int ShapeAppearance_cornerSize=5;
    /**
     * <p>
     * @attr description
     * Bottom left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:cornerSizeBottomLeft
     */
    public static final int ShapeAppearance_cornerSizeBottomLeft=6;
    /**
     * <p>
     * @attr description
     * Bottom right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:cornerSizeBottomRight
     */
    public static final int ShapeAppearance_cornerSizeBottomRight=7;
    /**
     * <p>
     * @attr description
     * Top left corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:cornerSizeTopLeft
     */
    public static final int ShapeAppearance_cornerSizeTopLeft=8;
    /**
     * <p>
     * @attr description
     * Top right corner size to be used in the ShapeAppearance.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:cornerSizeTopRight
     */
    public static final int ShapeAppearance_cornerSizeTopRight=9;
    /**
     * Attributes that can be used with a ShapeableImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPadding com.android.settings:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingBottom com.android.settings:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingEnd com.android.settings:contentPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingLeft com.android.settings:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingRight com.android.settings:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingStart com.android.settings:contentPaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_contentPaddingTop com.android.settings:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #ShapeableImageView_strokeColor com.android.settings:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ShapeableImageView_strokeWidth com.android.settings:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #ShapeableImageView_contentPadding
     * @see #ShapeableImageView_contentPaddingBottom
     * @see #ShapeableImageView_contentPaddingEnd
     * @see #ShapeableImageView_contentPaddingLeft
     * @see #ShapeableImageView_contentPaddingRight
     * @see #ShapeableImageView_contentPaddingStart
     * @see #ShapeableImageView_contentPaddingTop
     * @see #ShapeableImageView_shapeAppearance
     * @see #ShapeableImageView_shapeAppearanceOverlay
     * @see #ShapeableImageView_strokeColor
     * @see #ShapeableImageView_strokeWidth
     */
    public static final int[] ShapeableImageView={
      0x7f0400f0, 0x7f0400f1, 0x7f0400f2, 0x7f0400f3, 
      0x7f0400f4, 0x7f0400f5, 0x7f0400f6, 0x7f040362, 
      0x7f040365, 0x7f04039f, 0x7f0403a0
    };
    /**
     * <p>
     * @attr description
     * Attributes for padding the image, since android:padding is applied to the background
     * for ShapeableImageView
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPadding
     */
    public static final int ShapeableImageView_contentPadding=0;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingBottom
     */
    public static final int ShapeableImageView_contentPaddingBottom=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#contentPaddingEnd}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingEnd
     */
    public static final int ShapeableImageView_contentPaddingEnd=2;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingLeft
     */
    public static final int ShapeableImageView_contentPaddingLeft=3;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingRight
     */
    public static final int ShapeableImageView_contentPaddingRight=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#contentPaddingStart}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingStart
     */
    public static final int ShapeableImageView_contentPaddingStart=5;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingTop
     */
    public static final int ShapeableImageView_contentPaddingTop=6;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for ShapeableImageView. Attribute declaration is in the
     * shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int ShapeableImageView_shapeAppearance=7;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for ShapeableImageView. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the shape package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int ShapeableImageView_shapeAppearanceOverlay=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#strokeColor}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:strokeColor
     */
    public static final int ShapeableImageView_strokeColor=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #ShapeableImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:strokeWidth
     */
    public static final int ShapeableImageView_strokeWidth=10;
    /**
     * Attributes that can be used with a SliceView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SliceView_expandToAvailableHeight com.android.settings:expandToAvailableHeight}</code></td><td>Removes the height restriction of slices in MODE_LARGE.</td></tr>
     * <tr><td><code>{@link #SliceView_gridBottomPadding com.android.settings:gridBottomPadding}</code></td><td>A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice.</td></tr>
     * <tr><td><code>{@link #SliceView_gridSubtitleSize com.android.settings:gridSubtitleSize}</code></td><td>Text size to use for the subtitle text in a grid row of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_gridTextVerticalPadding com.android.settings:gridTextVerticalPadding}</code></td><td>Vertical padding to use between title text and subtitle text in a grid cell.</td></tr>
     * <tr><td><code>{@link #SliceView_gridTitleSize com.android.settings:gridTitleSize}</code></td><td>Text size to use for title text in a grid row of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_gridTopPadding com.android.settings:gridTopPadding}</code></td><td>A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice.</td></tr>
     * <tr><td><code>{@link #SliceView_headerSubtitleSize com.android.settings:headerSubtitleSize}</code></td><td>Text size to use for subtitle text in the header of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_headerTextVerticalPadding com.android.settings:headerTextVerticalPadding}</code></td><td>Vertical padding to use between header title text and header subtitle text.</td></tr>
     * <tr><td><code>{@link #SliceView_headerTitleSize com.android.settings:headerTitleSize}</code></td><td>Text size to use for title text in the header of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_hideHeaderRow com.android.settings:hideHeaderRow}</code></td><td>Hide the slice's header row unless the slice only has a single row.</td></tr>
     * <tr><td><code>{@link #SliceView_imageCornerRadius com.android.settings:imageCornerRadius}</code></td><td>The corner radius to be applied to each corner of large images.</td></tr>
     * <tr><td><code>{@link #SliceView_rowInlineRangeHeight com.android.settings:rowInlineRangeHeight}</code></td><td>Size of row view when range is inline</td></tr>
     * <tr><td><code>{@link #SliceView_rowMaxHeight com.android.settings:rowMaxHeight}</code></td><td>Size of row view with two lines of text</td></tr>
     * <tr><td><code>{@link #SliceView_rowMinHeight com.android.settings:rowMinHeight}</code></td><td>Min height of row view; default size if one line of text</td></tr>
     * <tr><td><code>{@link #SliceView_rowRangeHeight com.android.settings:rowRangeHeight}</code></td><td>Size of range area in a row to fit a slider or progress bar</td></tr>
     * <tr><td><code>{@link #SliceView_rowRangeSingleTextHeight com.android.settings:rowRangeSingleTextHeight}</code></td><td>Size of text area row with one line of text and then a range element</td></tr>
     * <tr><td><code>{@link #SliceView_rowStyle com.android.settings:rowStyle}</code></td><td>To apply a style for all slice rows shown within an activity or app you
     * may set this in your app theme pointing to your custom RowView style.</td></tr>
     * <tr><td><code>{@link #SliceView_subtitleColor com.android.settings:subtitleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SliceView_subtitleSize com.android.settings:subtitleSize}</code></td><td>Text size to use for subtitle text in a non-header row of the slice.</td></tr>
     * <tr><td><code>{@link #SliceView_textVerticalPadding com.android.settings:textVerticalPadding}</code></td><td>Vertical padding to use between title text and subtitle text.</td></tr>
     * <tr><td><code>{@link #SliceView_tintColor com.android.settings:tintColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SliceView_titleColor com.android.settings:titleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SliceView_titleSize com.android.settings:titleSize}</code></td><td>Text size to use for title text in a non-header row of the slice.</td></tr>
     * </table>
     * @see #SliceView_expandToAvailableHeight
     * @see #SliceView_gridBottomPadding
     * @see #SliceView_gridSubtitleSize
     * @see #SliceView_gridTextVerticalPadding
     * @see #SliceView_gridTitleSize
     * @see #SliceView_gridTopPadding
     * @see #SliceView_headerSubtitleSize
     * @see #SliceView_headerTextVerticalPadding
     * @see #SliceView_headerTitleSize
     * @see #SliceView_hideHeaderRow
     * @see #SliceView_imageCornerRadius
     * @see #SliceView_rowInlineRangeHeight
     * @see #SliceView_rowMaxHeight
     * @see #SliceView_rowMinHeight
     * @see #SliceView_rowRangeHeight
     * @see #SliceView_rowRangeSingleTextHeight
     * @see #SliceView_rowStyle
     * @see #SliceView_subtitleColor
     * @see #SliceView_subtitleSize
     * @see #SliceView_textVerticalPadding
     * @see #SliceView_tintColor
     * @see #SliceView_titleColor
     * @see #SliceView_titleSize
     */
    public static final int[] SliceView={
      0x7f04016d, 0x7f0401b7, 0x7f0401b8, 0x7f0401b9, 
      0x7f0401ba, 0x7f0401bb, 0x7f0401bf, 0x7f0401c0, 
      0x7f0401c1, 0x7f0401c8, 0x7f0401e4, 0x7f040347, 
      0x7f040348, 0x7f040349, 0x7f04034a, 0x7f04034b, 
      0x7f04034c, 0x7f0403a7, 0x7f0403a8, 0x7f040471, 
      0x7f040486, 0x7f04048b, 0x7f040496
    };
    /**
     * <p>
     * @attr description
     * Removes the height restriction of slices in MODE_LARGE. If the slice
     * is smaller than the available height, wrap_content decides whether the slice takes
     * up the entire height or only the required height. If the slice is bigger than
     * the available height, the height mode decides whether the slice fills the height
     * (height mode AT_MOST/EXACTLY), or expands to fit all items (height mode UNSPECIFIED).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:expandToAvailableHeight
     */
    public static final int SliceView_expandToAvailableHeight=0;
    /**
     * <p>
     * @attr description
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the bottom of the grid row in
     * this situation.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gridBottomPadding
     */
    public static final int SliceView_gridBottomPadding=1;
    /**
     * <p>
     * @attr description
     * Text size to use for the subtitle text in a grid row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gridSubtitleSize
     */
    public static final int SliceView_gridSubtitleSize=2;
    /**
     * <p>
     * @attr description
     * Vertical padding to use between title text and subtitle text in a grid cell.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gridTextVerticalPadding
     */
    public static final int SliceView_gridTextVerticalPadding=3;
    /**
     * <p>
     * @attr description
     * Text size to use for title text in a grid row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gridTitleSize
     */
    public static final int SliceView_gridTitleSize=4;
    /**
     * <p>
     * @attr description
     * A grid row with all images goes right to the edge of the view if it's the first or
     * last row of a slice. Use this to specify padding to apply to the top of the grid row in
     * this situation.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gridTopPadding
     */
    public static final int SliceView_gridTopPadding=5;
    /**
     * <p>
     * @attr description
     * Text size to use for subtitle text in the header of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:headerSubtitleSize
     */
    public static final int SliceView_headerSubtitleSize=6;
    /**
     * <p>
     * @attr description
     * Vertical padding to use between header title text and header subtitle text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:headerTextVerticalPadding
     */
    public static final int SliceView_headerTextVerticalPadding=7;
    /**
     * <p>
     * @attr description
     * Text size to use for title text in the header of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:headerTitleSize
     */
    public static final int SliceView_headerTitleSize=8;
    /**
     * <p>
     * @attr description
     * Hide the slice's header row unless the slice only has a single row. Note that if
     * the slice doesn't have an explicit header row, the first row is considered the header row.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:hideHeaderRow
     */
    public static final int SliceView_hideHeaderRow=9;
    /**
     * <p>
     * @attr description
     * The corner radius to be applied to each corner of large images.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:imageCornerRadius
     */
    public static final int SliceView_imageCornerRadius=10;
    /**
     * <p>
     * @attr description
     * Size of row view when range is inline
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:rowInlineRangeHeight
     */
    public static final int SliceView_rowInlineRangeHeight=11;
    /**
     * <p>
     * @attr description
     * Size of row view with two lines of text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:rowMaxHeight
     */
    public static final int SliceView_rowMaxHeight=12;
    /**
     * <p>
     * @attr description
     * Min height of row view; default size if one line of text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:rowMinHeight
     */
    public static final int SliceView_rowMinHeight=13;
    /**
     * <p>
     * @attr description
     * Size of range area in a row to fit a slider or progress bar
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:rowRangeHeight
     */
    public static final int SliceView_rowRangeHeight=14;
    /**
     * <p>
     * @attr description
     * Size of text area row with one line of text and then a range element
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:rowRangeSingleTextHeight
     */
    public static final int SliceView_rowRangeSingleTextHeight=15;
    /**
     * <p>
     * @attr description
     * To apply a style for all slice rows shown within an activity or app you
     * may set this in your app theme pointing to your custom RowView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:rowStyle
     */
    public static final int SliceView_rowStyle=16;
    /**
     * <p>
     * @attr description
     * Color to use for any other text within the slice.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:subtitleColor
     */
    public static final int SliceView_subtitleColor=17;
    /**
     * <p>
     * @attr description
     * Text size to use for subtitle text in a non-header row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:subtitleSize
     */
    public static final int SliceView_subtitleSize=18;
    /**
     * <p>
     * @attr description
     * Vertical padding to use between title text and subtitle text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:textVerticalPadding
     */
    public static final int SliceView_textVerticalPadding=19;
    /**
     * <p>
     * @attr description
     * Color to use for tinting elements within the slice. Normally an app
     * providing a slice is able to specify a color to use for tinting, specifying
     * a tint color here will override the app supplied color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tintColor
     */
    public static final int SliceView_tintColor=20;
    /**
     * <p>
     * @attr description
     * Color to use for any title text within the slice.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:titleColor
     */
    public static final int SliceView_titleColor=21;
    /**
     * <p>
     * @attr description
     * Text size to use for title text in a non-header row of the slice.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleSize
     */
    public static final int SliceView_titleSize=22;
    /**
     * Attributes that can be used with a Slider.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Slider_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_value android:value}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_stepSize android:stepSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_valueFrom android:valueFrom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_android_valueTo android:valueTo}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_haloColor com.android.settings:haloColor}</code></td><td>The color of the slider's halo.</td></tr>
     * <tr><td><code>{@link #Slider_haloRadius com.android.settings:haloRadius}</code></td><td>The radius of the halo.</td></tr>
     * <tr><td><code>{@link #Slider_labelBehavior com.android.settings:labelBehavior}</code></td><td>Determines if Slider should increase its default height to include space for the label.</td></tr>
     * <tr><td><code>{@link #Slider_labelStyle com.android.settings:labelStyle}</code></td><td>The style used for the label TooltipDrawable.</td></tr>
     * <tr><td><code>{@link #Slider_thumbColor com.android.settings:thumbColor}</code></td><td>The color of the slider's thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbElevation com.android.settings:thumbElevation}</code></td><td>The elevation of the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbRadius com.android.settings:thumbRadius}</code></td><td>The radius of the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbStrokeColor com.android.settings:thumbStrokeColor}</code></td><td>The stroke color for the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_thumbStrokeWidth com.android.settings:thumbStrokeWidth}</code></td><td>The stroke width for the thumb.</td></tr>
     * <tr><td><code>{@link #Slider_tickColor com.android.settings:tickColor}</code></td><td>The color of the slider's tick marks.</td></tr>
     * <tr><td><code>{@link #Slider_tickColorActive com.android.settings:tickColorActive}</code></td><td>The color of the slider's tick marks for the active portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_tickColorInactive com.android.settings:tickColorInactive}</code></td><td>The color of the slider's tick marks for the inactive portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_tickVisible com.android.settings:tickVisible}</code></td><td>Whether to show the tick marks.</td></tr>
     * <tr><td><code>{@link #Slider_trackColor com.android.settings:trackColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Slider_trackColorActive com.android.settings:trackColorActive}</code></td><td>The color of active portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_trackColorInactive com.android.settings:trackColorInactive}</code></td><td>The color of inactive portion of the track.</td></tr>
     * <tr><td><code>{@link #Slider_trackHeight com.android.settings:trackHeight}</code></td><td>The height of the track.</td></tr>
     * </table>
     * @see #Slider_android_enabled
     * @see #Slider_android_value
     * @see #Slider_android_stepSize
     * @see #Slider_android_valueFrom
     * @see #Slider_android_valueTo
     * @see #Slider_haloColor
     * @see #Slider_haloRadius
     * @see #Slider_labelBehavior
     * @see #Slider_labelStyle
     * @see #Slider_thumbColor
     * @see #Slider_thumbElevation
     * @see #Slider_thumbRadius
     * @see #Slider_thumbStrokeColor
     * @see #Slider_thumbStrokeWidth
     * @see #Slider_tickColor
     * @see #Slider_tickColorActive
     * @see #Slider_tickColorInactive
     * @see #Slider_tickVisible
     * @see #Slider_trackColor
     * @see #Slider_trackColorActive
     * @see #Slider_trackColorInactive
     * @see #Slider_trackHeight
     */
    public static final int[] Slider={
      0x0101000e, 0x01010024, 0x01010146, 0x010102de, 
      0x010102df, 0x7f0401bc, 0x7f0401bd, 0x7f040211, 
      0x7f040214, 0x7f040475, 0x7f040476, 0x7f040477, 
      0x7f040478, 0x7f040479, 0x7f04047d, 0x7f04047e, 
      0x7f04047f, 0x7f040483, 0x7f0404a6, 0x7f0404a7, 
      0x7f0404a8, 0x7f0404aa
    };
    /**
     * <p>
     * @attr description
     * Whether the Slider is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Slider_android_enabled=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#value}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:value
     */
    public static final int Slider_android_value=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#stepSize}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:stepSize
     */
    public static final int Slider_android_stepSize=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#valueFrom}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:valueFrom
     */
    public static final int Slider_android_valueFrom=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#valueTo}
     * attribute's value can be found in the {@link #Slider} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:valueTo
     */
    public static final int Slider_android_valueTo=4;
    /**
     * <p>
     * @attr description
     * The color of the slider's halo.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:haloColor
     */
    public static final int Slider_haloColor=5;
    /**
     * <p>
     * @attr description
     * The radius of the halo.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:haloRadius
     */
    public static final int Slider_haloRadius=6;
    /**
     * <p>
     * @attr description
     * Determines if Slider should increase its default height to include space for the label.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>floating</td><td>0</td><td>Mode that draws the label floating above the bounds of this view.</td></tr>
     * <tr><td>gone</td><td>2</td><td>Mode that prevents the label from being drawn</td></tr>
     * <tr><td>withinBounds</td><td>1</td><td>Mode that draws the label within the bounds of the view.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:labelBehavior
     */
    public static final int Slider_labelBehavior=7;
    /**
     * <p>
     * @attr description
     * The style used for the label TooltipDrawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:labelStyle
     */
    public static final int Slider_labelStyle=8;
    /**
     * <p>
     * @attr description
     * The color of the slider's thumb.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:thumbColor
     */
    public static final int Slider_thumbColor=9;
    /**
     * <p>
     * @attr description
     * The elevation of the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thumbElevation
     */
    public static final int Slider_thumbElevation=10;
    /**
     * <p>
     * @attr description
     * The radius of the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thumbRadius
     */
    public static final int Slider_thumbRadius=11;
    /**
     * <p>
     * @attr description
     * The stroke color for the thumb.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:thumbStrokeColor
     */
    public static final int Slider_thumbStrokeColor=12;
    /**
     * <p>
     * @attr description
     * The stroke width for the thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thumbStrokeWidth
     */
    public static final int Slider_thumbStrokeWidth=13;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks. Only used when the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tickColor
     */
    public static final int Slider_tickColor=14;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks for the active portion of the track. Only used when
     * the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tickColorActive
     */
    public static final int Slider_tickColorActive=15;
    /**
     * <p>
     * @attr description
     * The color of the slider's tick marks for the inactive portion of the track. Only used when
     * the slider is in discrete mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tickColorInactive
     */
    public static final int Slider_tickColorInactive=16;
    /**
     * <p>
     * @attr description
     * Whether to show the tick marks. Only used when the slider is in discrete mode.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:tickVisible
     */
    public static final int Slider_tickVisible=17;
    /**
     * <p>
     * @attr description
     * The color of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:trackColor
     */
    public static final int Slider_trackColor=18;
    /**
     * <p>
     * @attr description
     * The color of active portion of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:trackColorActive
     */
    public static final int Slider_trackColorActive=19;
    /**
     * <p>
     * @attr description
     * The color of inactive portion of the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:trackColorInactive
     */
    public static final int Slider_trackColorInactive=20;
    /**
     * <p>
     * @attr description
     * The height of the track.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:trackHeight
     */
    public static final int Slider_trackHeight=21;
    /**
     * Attributes that can be used with a Snackbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Snackbar_snackbarButtonStyle com.android.settings:snackbarButtonStyle}</code></td><td>Style to use for action button within a Snackbar in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarStyle com.android.settings:snackbarStyle}</code></td><td>Style to use for Snackbars in this theme.</td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarTextViewStyle com.android.settings:snackbarTextViewStyle}</code></td><td>Style to use for message text within a Snackbar in this theme.</td></tr>
     * </table>
     * @see #Snackbar_snackbarButtonStyle
     * @see #Snackbar_snackbarStyle
     * @see #Snackbar_snackbarTextViewStyle
     */
    public static final int[] Snackbar={
      0x7f04037d, 0x7f04037e, 0x7f04037f
    };
    /**
     * <p>
     * @attr description
     * Style to use for action button within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:snackbarButtonStyle
     */
    public static final int Snackbar_snackbarButtonStyle=0;
    /**
     * <p>
     * @attr description
     * Style to use for Snackbars in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:snackbarStyle
     */
    public static final int Snackbar_snackbarStyle=1;
    /**
     * <p>
     * @attr description
     * Style to use for message text within a Snackbar in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:snackbarTextViewStyle
     */
    public static final int Snackbar_snackbarTextViewStyle=2;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_actionTextColorAlpha com.android.settings:actionTextColorAlpha}</code></td><td>Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_animationMode com.android.settings:animationMode}</code></td><td>Sets the enter and exit animations for a Snackbar.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundOverlayColorAlpha com.android.settings:backgroundOverlayColorAlpha}</code></td><td>Alpha level for the color that is overlaid on top of the background color.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_backgroundTintMode com.android.settings:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation com.android.settings:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth com.android.settings:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_actionTextColorAlpha
     * @see #SnackbarLayout_animationMode
     * @see #SnackbarLayout_backgroundOverlayColorAlpha
     * @see #SnackbarLayout_backgroundTint
     * @see #SnackbarLayout_backgroundTintMode
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
      0x0101011f, 0x7f040023, 0x7f040038, 0x7f04004f, 
      0x7f040052, 0x7f040053, 0x7f040150, 0x7f04029e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Alpha level for the action button text, to allow for adjusting the lightness or darkness of
     * the theme color used for Snackbar text buttons (e.g., colorPrimary).
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:actionTextColorAlpha
     */
    public static final int SnackbarLayout_actionTextColorAlpha=1;
    /**
     * <p>
     * @attr description
     * Sets the enter and exit animations for a Snackbar.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fade</td><td>1</td><td>Mode that corresponds to the fade in and out animations.</td></tr>
     * <tr><td>slide</td><td>0</td><td>Mode that corresponds to the slide in and out animations.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:animationMode
     */
    public static final int SnackbarLayout_animationMode=2;
    /**
     * <p>
     * @attr description
     * Alpha level for the color that is overlaid on top of the background color. Ignored if
     * backgroundTint is set.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:backgroundOverlayColorAlpha
     */
    public static final int SnackbarLayout_backgroundOverlayColorAlpha=3;
    /**
     * <p>
     * @attr description
     * Background tint used by the Snackbar background drawable. Accepts a ColorStateList or
     * ColorInt.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int SnackbarLayout_backgroundTint=4;
    /**
     * <p>
     * @attr description
     * Background tint mode used by the Snackbar background drawable.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:backgroundTintMode
     */
    public static final int SnackbarLayout_backgroundTintMode=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#elevation}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int SnackbarLayout_elevation=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxActionInlineWidth
     */
    public static final int SnackbarLayout_maxActionInlineWidth=7;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.settings:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f040319
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a SplitPairFilter.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SplitPairFilter_primaryActivityName com.android.settings:primaryActivityName}</code></td><td>Component name of the primary activity in the split.</td></tr>
     * <tr><td><code>{@link #SplitPairFilter_secondaryActivityAction com.android.settings:secondaryActivityAction}</code></td><td>Action used for secondary activity launch.</td></tr>
     * <tr><td><code>{@link #SplitPairFilter_secondaryActivityName com.android.settings:secondaryActivityName}</code></td><td>Component name of the secondary activity in the split.</td></tr>
     * </table>
     * @see #SplitPairFilter_primaryActivityName
     * @see #SplitPairFilter_secondaryActivityAction
     * @see #SplitPairFilter_secondaryActivityName
     */
    public static final int[] SplitPairFilter={
      0x7f04032d, 0x7f040356, 0x7f040357
    };
    /**
     * <p>
     * @attr description
     * Component name of the primary activity in the split. Must be non-empty. Can contain a
     * wildcard at the end or instead of package name and/or class name.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:primaryActivityName
     */
    public static final int SplitPairFilter_primaryActivityName=0;
    /**
     * <p>
     * @attr description
     * Action used for secondary activity launch. May be empty. Must not contain wildcards.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:secondaryActivityAction
     */
    public static final int SplitPairFilter_secondaryActivityAction=1;
    /**
     * <p>
     * @attr description
     * Component name of the secondary activity in the split. Must be non-empty. Can contain a
     * wildcard at the end or instead of package name and/or class name.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:secondaryActivityName
     */
    public static final int SplitPairFilter_secondaryActivityName=2;
    /**
     * Attributes that can be used with a SplitPairRule.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SplitPairRule_clearTop com.android.settings:clearTop}</code></td><td>If there is an existing split with the same primary container, indicates whether the
     * existing secondary container on top and all activities in it should be destroyed when a new
     * split is created using this rule.</td></tr>
     * <tr><td><code>{@link #SplitPairRule_finishPrimaryWithSecondary com.android.settings:finishPrimaryWithSecondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_finishSecondaryWithPrimary com.android.settings:finishSecondaryWithPrimary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitLayoutDirection com.android.settings:splitLayoutDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMinSmallestWidth com.android.settings:splitMinSmallestWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMinWidth com.android.settings:splitMinWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitRatio com.android.settings:splitRatio}</code></td><td></td></tr>
     * </table>
     * @see #SplitPairRule_clearTop
     * @see #SplitPairRule_finishPrimaryWithSecondary
     * @see #SplitPairRule_finishSecondaryWithPrimary
     * @see #SplitPairRule_splitLayoutDirection
     * @see #SplitPairRule_splitMinSmallestWidth
     * @see #SplitPairRule_splitMinWidth
     * @see #SplitPairRule_splitRatio
     */
    public static final int[] SplitPairRule={
      0x7f0400b5, 0x7f04018a, 0x7f04018b, 0x7f040384, 
      0x7f040385, 0x7f040386, 0x7f040387
    };
    /**
     * <p>
     * @attr description
     * If there is an existing split with the same primary container, indicates whether the
     * existing secondary container on top and all activities in it should be destroyed when a new
     * split is created using this rule. Otherwise the new secondary will appear on top. Defaults
     * to "false".
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:clearTop
     */
    public static final int SplitPairRule_clearTop=0;
    /**
     * <p>
     * @attr description
     * When all activities are finished in the secondary container, the activity in the
     * primary container that created the split should also be finished. Defaults to "false".
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:finishPrimaryWithSecondary
     */
    public static final int SplitPairRule_finishPrimaryWithSecondary=1;
    /**
     * <p>
     * @attr description
     * When all activities are finished in the primary container, the activities in the
     * secondary container in the split should also be finished. Defaults to "true".
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:finishSecondaryWithPrimary
     */
    public static final int SplitPairRule_finishSecondaryWithPrimary=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitLayoutDirection}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>locale</td><td>0</td><td></td></tr>
     * <tr><td>ltr</td><td>1</td><td></td></tr>
     * <tr><td>rtl</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:splitLayoutDirection
     */
    public static final int SplitPairRule_splitLayoutDirection=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitMinSmallestWidth}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:splitMinSmallestWidth
     */
    public static final int SplitPairRule_splitMinSmallestWidth=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitMinWidth}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:splitMinWidth
     */
    public static final int SplitPairRule_splitMinWidth=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitRatio}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:splitRatio
     */
    public static final int SplitPairRule_splitRatio=6;
    /**
     * Attributes that can be used with a SplitPlaceholderRule.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_finishPrimaryWithSecondary com.android.settings:finishPrimaryWithSecondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_placeholderActivityName com.android.settings:placeholderActivityName}</code></td><td>Component name of the placeholder activity in the split.</td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitLayoutDirection com.android.settings:splitLayoutDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMinSmallestWidth com.android.settings:splitMinSmallestWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMinWidth com.android.settings:splitMinWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitRatio com.android.settings:splitRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_stickyPlaceholder com.android.settings:stickyPlaceholder}</code></td><td>Determines whether the placeholder will show on top in a smaller window size after
     * it first appeared in a split with sufficient minimum width.</td></tr>
     * </table>
     * @see #SplitPlaceholderRule_finishPrimaryWithSecondary
     * @see #SplitPlaceholderRule_placeholderActivityName
     * @see #SplitPlaceholderRule_splitLayoutDirection
     * @see #SplitPlaceholderRule_splitMinSmallestWidth
     * @see #SplitPlaceholderRule_splitMinWidth
     * @see #SplitPlaceholderRule_splitRatio
     * @see #SplitPlaceholderRule_stickyPlaceholder
     */
    public static final int[] SplitPlaceholderRule={
      0x7f04018a, 0x7f040312, 0x7f040384, 0x7f040385, 
      0x7f040386, 0x7f040387, 0x7f04039e
    };
    /**
     * <p>
     * @attr description
     * When all activities are finished in the secondary container, the activity in the
     * primary container that created the split should also be finished. Defaults to "false".
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:finishPrimaryWithSecondary
     */
    public static final int SplitPlaceholderRule_finishPrimaryWithSecondary=0;
    /**
     * <p>
     * @attr description
     * Component name of the placeholder activity in the split. Must be non-empty.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:placeholderActivityName
     */
    public static final int SplitPlaceholderRule_placeholderActivityName=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitLayoutDirection}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>locale</td><td>0</td><td></td></tr>
     * <tr><td>ltr</td><td>1</td><td></td></tr>
     * <tr><td>rtl</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:splitLayoutDirection
     */
    public static final int SplitPlaceholderRule_splitLayoutDirection=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitMinSmallestWidth}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:splitMinSmallestWidth
     */
    public static final int SplitPlaceholderRule_splitMinSmallestWidth=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitMinWidth}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:splitMinWidth
     */
    public static final int SplitPlaceholderRule_splitMinWidth=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#splitRatio}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:splitRatio
     */
    public static final int SplitPlaceholderRule_splitRatio=5;
    /**
     * <p>
     * @attr description
     * Determines whether the placeholder will show on top in a smaller window size after
     * it first appeared in a split with sufficient minimum width.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:stickyPlaceholder
     */
    public static final int SplitPlaceholderRule_stickyPlaceholder=6;
    /**
     * Attributes that can be used with a State.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #State_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #State_constraints com.android.settings:constraints}</code></td><td></td></tr>
     * </table>
     * @see #State_android_id
     * @see #State_constraints
     */
    public static final int[] State={
      0x010100d0, 0x7f0400e6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #State} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int State_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraints}
     * attribute's value can be found in the {@link #State} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:constraints
     */
    public static final int State_constraints=1;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a StateSet.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateSet_defaultState com.android.settings:defaultState}</code></td><td></td></tr>
     * </table>
     * @see #StateSet_defaultState
     */
    public static final int[] StateSet={
      0x7f040121
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#defaultState}
     * attribute's value can be found in the {@link #StateSet} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:defaultState
     */
    public static final int StateSet_defaultState=0;
    /**
     * Button of footer attributes
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarButtonAllCaps com.android.settings:sucFooterBarButtonAllCaps}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarButtonColorControlHighlight com.android.settings:sucFooterBarButtonColorControlHighlight}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarButtonColorControlHighlightRipple com.android.settings:sucFooterBarButtonColorControlHighlightRipple}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarButtonCornerRadius com.android.settings:sucFooterBarButtonCornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarButtonFontFamily com.android.settings:sucFooterBarButtonFontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarButtonHighlightAlpha com.android.settings:sucFooterBarButtonHighlightAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarMinHeight com.android.settings:sucFooterBarMinHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPaddingBottom com.android.settings:sucFooterBarPaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPaddingEnd com.android.settings:sucFooterBarPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPaddingStart com.android.settings:sucFooterBarPaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPaddingTop com.android.settings:sucFooterBarPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPaddingVertical com.android.settings:sucFooterBarPaddingVertical}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPrimaryFooterBackground com.android.settings:sucFooterBarPrimaryFooterBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarPrimaryFooterButton com.android.settings:sucFooterBarPrimaryFooterButton}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarSecondaryFooterBackground com.android.settings:sucFooterBarSecondaryFooterBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterBarMixin_sucFooterBarSecondaryFooterButton com.android.settings:sucFooterBarSecondaryFooterButton}</code></td><td></td></tr>
     * </table>
     * @see #SucFooterBarMixin_sucFooterBarButtonAllCaps
     * @see #SucFooterBarMixin_sucFooterBarButtonColorControlHighlight
     * @see #SucFooterBarMixin_sucFooterBarButtonColorControlHighlightRipple
     * @see #SucFooterBarMixin_sucFooterBarButtonCornerRadius
     * @see #SucFooterBarMixin_sucFooterBarButtonFontFamily
     * @see #SucFooterBarMixin_sucFooterBarButtonHighlightAlpha
     * @see #SucFooterBarMixin_sucFooterBarMinHeight
     * @see #SucFooterBarMixin_sucFooterBarPaddingBottom
     * @see #SucFooterBarMixin_sucFooterBarPaddingEnd
     * @see #SucFooterBarMixin_sucFooterBarPaddingStart
     * @see #SucFooterBarMixin_sucFooterBarPaddingTop
     * @see #SucFooterBarMixin_sucFooterBarPaddingVertical
     * @see #SucFooterBarMixin_sucFooterBarPrimaryFooterBackground
     * @see #SucFooterBarMixin_sucFooterBarPrimaryFooterButton
     * @see #SucFooterBarMixin_sucFooterBarSecondaryFooterBackground
     * @see #SucFooterBarMixin_sucFooterBarSecondaryFooterButton
     */
    public static final int[] SucFooterBarMixin={
      0x7f0403ae, 0x7f0403af, 0x7f0403b0, 0x7f0403b1, 
      0x7f0403b2, 0x7f0403b3, 0x7f0403b4, 0x7f0403b5, 
      0x7f0403b6, 0x7f0403b7, 0x7f0403b8, 0x7f0403b9, 
      0x7f0403ba, 0x7f0403bb, 0x7f0403bc, 0x7f0403bd
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarButtonAllCaps}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sucFooterBarButtonAllCaps
     */
    public static final int SucFooterBarMixin_sucFooterBarButtonAllCaps=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarButtonColorControlHighlight}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucFooterBarButtonColorControlHighlight
     */
    public static final int SucFooterBarMixin_sucFooterBarButtonColorControlHighlight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarButtonColorControlHighlightRipple}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucFooterBarButtonColorControlHighlightRipple
     */
    public static final int SucFooterBarMixin_sucFooterBarButtonColorControlHighlightRipple=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarButtonCornerRadius}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarButtonCornerRadius
     */
    public static final int SucFooterBarMixin_sucFooterBarButtonCornerRadius=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarButtonFontFamily}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:sucFooterBarButtonFontFamily
     */
    public static final int SucFooterBarMixin_sucFooterBarButtonFontFamily=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarButtonHighlightAlpha}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:sucFooterBarButtonHighlightAlpha
     */
    public static final int SucFooterBarMixin_sucFooterBarButtonHighlightAlpha=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarMinHeight}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarMinHeight
     */
    public static final int SucFooterBarMixin_sucFooterBarMinHeight=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPaddingBottom}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarPaddingBottom
     */
    public static final int SucFooterBarMixin_sucFooterBarPaddingBottom=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPaddingEnd}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarPaddingEnd
     */
    public static final int SucFooterBarMixin_sucFooterBarPaddingEnd=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPaddingStart}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarPaddingStart
     */
    public static final int SucFooterBarMixin_sucFooterBarPaddingStart=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPaddingTop}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarPaddingTop
     */
    public static final int SucFooterBarMixin_sucFooterBarPaddingTop=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPaddingVertical}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterBarPaddingVertical
     */
    public static final int SucFooterBarMixin_sucFooterBarPaddingVertical=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPrimaryFooterBackground}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucFooterBarPrimaryFooterBackground
     */
    public static final int SucFooterBarMixin_sucFooterBarPrimaryFooterBackground=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarPrimaryFooterButton}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sucFooterBarPrimaryFooterButton
     */
    public static final int SucFooterBarMixin_sucFooterBarPrimaryFooterButton=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarSecondaryFooterBackground}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucFooterBarSecondaryFooterBackground
     */
    public static final int SucFooterBarMixin_sucFooterBarSecondaryFooterBackground=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterBarSecondaryFooterButton}
     * attribute's value can be found in the {@link #SucFooterBarMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sucFooterBarSecondaryFooterButton
     */
    public static final int SucFooterBarMixin_sucFooterBarSecondaryFooterButton=15;
    /**
     * FooterButton attributes
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucFooterButton_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterButton_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterButton_sucButtonType com.android.settings:sucButtonType}</code></td><td>Next value: 9</td></tr>
     * <tr><td><code>{@link #SucFooterButton_sucFooterButtonPaddingEnd com.android.settings:sucFooterButtonPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucFooterButton_sucFooterButtonPaddingStart com.android.settings:sucFooterButtonPaddingStart}</code></td><td></td></tr>
     * </table>
     * @see #SucFooterButton_android_theme
     * @see #SucFooterButton_android_text
     * @see #SucFooterButton_sucButtonType
     * @see #SucFooterButton_sucFooterButtonPaddingEnd
     * @see #SucFooterButton_sucFooterButtonPaddingStart
     */
    public static final int[] SucFooterButton={
      0x01010000, 0x0101014f, 0x7f0403ac, 0x7f0403be, 
      0x7f0403bf
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#theme}
     * attribute's value can be found in the {@link #SucFooterButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int SucFooterButton_android_theme=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #SucFooterButton} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int SucFooterButton_android_text=1;
    /**
     * <p>
     * @attr description
     * Next value: 9
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add_another</td><td>1</td><td></td></tr>
     * <tr><td>cancel</td><td>2</td><td></td></tr>
     * <tr><td>clear</td><td>3</td><td></td></tr>
     * <tr><td>done</td><td>4</td><td></td></tr>
     * <tr><td>next</td><td>5</td><td></td></tr>
     * <tr><td>opt_in</td><td>6</td><td></td></tr>
     * <tr><td>other</td><td>0</td><td></td></tr>
     * <tr><td>skip</td><td>7</td><td></td></tr>
     * <tr><td>stop</td><td>8</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:sucButtonType
     */
    public static final int SucFooterButton_sucButtonType=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterButtonPaddingEnd}
     * attribute's value can be found in the {@link #SucFooterButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterButtonPaddingEnd
     */
    public static final int SucFooterButton_sucFooterButtonPaddingEnd=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFooterButtonPaddingStart}
     * attribute's value can be found in the {@link #SucFooterButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucFooterButtonPaddingStart
     */
    public static final int SucFooterButton_sucFooterButtonPaddingStart=4;
    /**
     * Attributes that can be used with a SucHeaderMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucHeaderMixin_sucGlifHeaderMarginBottom com.android.settings:sucGlifHeaderMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucHeaderMixin_sucGlifHeaderMarginTop com.android.settings:sucGlifHeaderMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucHeaderMixin_sucGlifIconMarginTop com.android.settings:sucGlifIconMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucHeaderMixin_sucHeaderContainerMarginBottom com.android.settings:sucHeaderContainerMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucHeaderMixin_sucHeaderText com.android.settings:sucHeaderText}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucHeaderMixin_sucHeaderTextColor com.android.settings:sucHeaderTextColor}</code></td><td></td></tr>
     * </table>
     * @see #SucHeaderMixin_sucGlifHeaderMarginBottom
     * @see #SucHeaderMixin_sucGlifHeaderMarginTop
     * @see #SucHeaderMixin_sucGlifIconMarginTop
     * @see #SucHeaderMixin_sucHeaderContainerMarginBottom
     * @see #SucHeaderMixin_sucHeaderText
     * @see #SucHeaderMixin_sucHeaderTextColor
     */
    public static final int[] SucHeaderMixin={
      0x7f0403c1, 0x7f0403c2, 0x7f0403c3, 0x7f0403c4, 
      0x7f0403c5, 0x7f0403c6
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucGlifHeaderMarginBottom}
     * attribute's value can be found in the {@link #SucHeaderMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucGlifHeaderMarginBottom
     */
    public static final int SucHeaderMixin_sucGlifHeaderMarginBottom=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucGlifHeaderMarginTop}
     * attribute's value can be found in the {@link #SucHeaderMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucGlifHeaderMarginTop
     */
    public static final int SucHeaderMixin_sucGlifHeaderMarginTop=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucGlifIconMarginTop}
     * attribute's value can be found in the {@link #SucHeaderMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucGlifIconMarginTop
     */
    public static final int SucHeaderMixin_sucGlifIconMarginTop=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucHeaderContainerMarginBottom}
     * attribute's value can be found in the {@link #SucHeaderMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sucHeaderContainerMarginBottom
     */
    public static final int SucHeaderMixin_sucHeaderContainerMarginBottom=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucHeaderText}
     * attribute's value can be found in the {@link #SucHeaderMixin} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:sucHeaderText
     */
    public static final int SucHeaderMixin_sucHeaderText=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucHeaderTextColor}
     * attribute's value can be found in the {@link #SucHeaderMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucHeaderTextColor
     */
    public static final int SucHeaderMixin_sucHeaderTextColor=5;
    /**
     * Attributes that can be used with a SucPartnerCustomizationLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucPartnerCustomizationLayout_sucFullDynamicColor com.android.settings:sucFullDynamicColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucPartnerCustomizationLayout_sucLayoutFullscreen com.android.settings:sucLayoutFullscreen}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucPartnerCustomizationLayout_sucUsePartnerResource com.android.settings:sucUsePartnerResource}</code></td><td>When set to false, prevents the layout applying partner resource.</td></tr>
     * </table>
     * @see #SucPartnerCustomizationLayout_sucFullDynamicColor
     * @see #SucPartnerCustomizationLayout_sucLayoutFullscreen
     * @see #SucPartnerCustomizationLayout_sucUsePartnerResource
     */
    public static final int[] SucPartnerCustomizationLayout={
      0x7f0403c0, 0x7f0403c7, 0x7f0403ce
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucFullDynamicColor}
     * attribute's value can be found in the {@link #SucPartnerCustomizationLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sucFullDynamicColor
     */
    public static final int SucPartnerCustomizationLayout_sucFullDynamicColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucLayoutFullscreen}
     * attribute's value can be found in the {@link #SucPartnerCustomizationLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sucLayoutFullscreen
     */
    public static final int SucPartnerCustomizationLayout_sucLayoutFullscreen=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout applying partner resource. This attribute is
     * particularly useful when the layout would like to apply their customized attributes.
     * This attribute will be ignored and use partner resource when inside setup wizard flow.
     * The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sucUsePartnerResource
     */
    public static final int SucPartnerCustomizationLayout_sucUsePartnerResource=2;
    /**
     * Status bar attributes; only takes effect on M or above
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucStatusBarMixin_sucLightStatusBar com.android.settings:sucLightStatusBar}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucStatusBarMixin_sucStatusBarBackground com.android.settings:sucStatusBarBackground}</code></td><td>The color for the status bar.</td></tr>
     * </table>
     * @see #SucStatusBarMixin_sucLightStatusBar
     * @see #SucStatusBarMixin_sucStatusBarBackground
     */
    public static final int[] SucStatusBarMixin={
      0x7f0403c9, 0x7f0403cb
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucLightStatusBar}
     * attribute's value can be found in the {@link #SucStatusBarMixin} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sucLightStatusBar
     */
    public static final int SucStatusBarMixin_sucLightStatusBar=0;
    /**
     * <p>
     * @attr description
     * The color for the status bar. For this to take effect,
     * "android:windowDrawsSystemBarBackgrounds" should be set to true and
     * "android:windowTranslucentStatus" should be set to false. Also,
     * View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN should be set to true and
     * android:statusBarColor should be transparent.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucStatusBarBackground
     */
    public static final int SucStatusBarMixin_sucStatusBarBackground=1;
    /**
     * System navigation bar attributes; only takes effect on O_MR1 or above
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucSystemNavBarMixin_sucLightSystemNavBar com.android.settings:sucLightSystemNavBar}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucSystemNavBarMixin_sucSystemNavBarBackgroundColor com.android.settings:sucSystemNavBarBackgroundColor}</code></td><td>The color for the system navigation bar.</td></tr>
     * <tr><td><code>{@link #SucSystemNavBarMixin_sucSystemNavBarDividerColor com.android.settings:sucSystemNavBarDividerColor}</code></td><td>The color for the system navigation bar divider.</td></tr>
     * </table>
     * @see #SucSystemNavBarMixin_sucLightSystemNavBar
     * @see #SucSystemNavBarMixin_sucSystemNavBarBackgroundColor
     * @see #SucSystemNavBarMixin_sucSystemNavBarDividerColor
     */
    public static final int[] SucSystemNavBarMixin={
      0x7f0403ca, 0x7f0403cc, 0x7f0403cd
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucLightSystemNavBar}
     * attribute's value can be found in the {@link #SucSystemNavBarMixin} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sucLightSystemNavBar
     */
    public static final int SucSystemNavBarMixin_sucLightSystemNavBar=0;
    /**
     * <p>
     * @attr description
     * The color for the system navigation bar. For this to take effect,
     * "android:windowDrawsSystemBarBackgrounds" should be set to true and
     * "android:windowTranslucentNavigation" should be set to false.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucSystemNavBarBackgroundColor
     */
    public static final int SucSystemNavBarMixin_sucSystemNavBarBackgroundColor=1;
    /**
     * <p>
     * @attr description
     * The color for the system navigation bar divider. For this to take effect,
     * "android:windowDrawsSystemBarBackgrounds" should be set to true and
     * "android:windowTranslucentNavigation" should be set to false.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sucSystemNavBarDividerColor
     */
    public static final int SucSystemNavBarMixin_sucSystemNavBarDividerColor=2;
    /**
     * Attributes that can be used with a SucTemplateLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SucTemplateLayout_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SucTemplateLayout_sucContainer com.android.settings:sucContainer}</code></td><td></td></tr>
     * </table>
     * @see #SucTemplateLayout_android_layout
     * @see #SucTemplateLayout_sucContainer
     */
    public static final int[] SucTemplateLayout={
      0x010100f2, 0x7f0403ad
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SucTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SucTemplateLayout_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sucContainer}
     * attribute's value can be found in the {@link #SucTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sucContainer
     */
    public static final int SucTemplateLayout_sucContainer=1;
    /**
     * Attributes that can be used with a SudAbstractItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudAbstractItem_android_id android:id}</code></td><td></td></tr>
     * </table>
     * @see #SudAbstractItem_android_id
     */
    public static final int[] SudAbstractItem={
      0x010100d0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #SudAbstractItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int SudAbstractItem_android_id=0;
    /**
     * Attributes that can be used with a SudButtonItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudButtonItem_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudButtonItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudButtonItem_android_buttonStyle android:buttonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudButtonItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #SudButtonItem_android_theme
     * @see #SudButtonItem_android_enabled
     * @see #SudButtonItem_android_buttonStyle
     * @see #SudButtonItem_android_text
     */
    public static final int[] SudButtonItem={
      0x01010000, 0x0101000e, 0x01010048, 0x0101014f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#theme}
     * attribute's value can be found in the {@link #SudButtonItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int SudButtonItem_android_theme=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #SudButtonItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int SudButtonItem_android_enabled=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#buttonStyle}
     * attribute's value can be found in the {@link #SudButtonItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:buttonStyle
     */
    public static final int SudButtonItem_android_buttonStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #SudButtonItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int SudButtonItem_android_text=3;
    /**
     * Attributes that can be used with a SudDescriptionMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudDescriptionMixin_sudDescriptionText com.android.settings:sudDescriptionText}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudDescriptionMixin_sudDescriptionTextColor com.android.settings:sudDescriptionTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudDescriptionMixin_sudGlifDescriptionMarginBottom com.android.settings:sudGlifDescriptionMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudDescriptionMixin_sudGlifDescriptionMarginTop com.android.settings:sudGlifDescriptionMarginTop}</code></td><td></td></tr>
     * </table>
     * @see #SudDescriptionMixin_sudDescriptionText
     * @see #SudDescriptionMixin_sudDescriptionTextColor
     * @see #SudDescriptionMixin_sudGlifDescriptionMarginBottom
     * @see #SudDescriptionMixin_sudGlifDescriptionMarginTop
     */
    public static final int[] SudDescriptionMixin={
      0x7f0403e3, 0x7f0403e4, 0x7f0403ed, 0x7f0403ee
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDescriptionText}
     * attribute's value can be found in the {@link #SudDescriptionMixin} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:sudDescriptionText
     */
    public static final int SudDescriptionMixin_sudDescriptionText=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDescriptionTextColor}
     * attribute's value can be found in the {@link #SudDescriptionMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudDescriptionTextColor
     */
    public static final int SudDescriptionMixin_sudDescriptionTextColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudGlifDescriptionMarginBottom}
     * attribute's value can be found in the {@link #SudDescriptionMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudGlifDescriptionMarginBottom
     */
    public static final int SudDescriptionMixin_sudGlifDescriptionMarginBottom=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudGlifDescriptionMarginTop}
     * attribute's value can be found in the {@link #SudDescriptionMixin} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudGlifDescriptionMarginTop
     */
    public static final int SudDescriptionMixin_sudGlifDescriptionMarginTop=3;
    /**
     * Attributes that can be used with a SudDividerItemDecoration.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudDividerItemDecoration_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudDividerItemDecoration_android_listDivider android:listDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudDividerItemDecoration_sudDividerCondition com.android.settings:sudDividerCondition}</code></td><td></td></tr>
     * </table>
     * @see #SudDividerItemDecoration_android_dividerHeight
     * @see #SudDividerItemDecoration_android_listDivider
     * @see #SudDividerItemDecoration_sudDividerCondition
     */
    public static final int[] SudDividerItemDecoration={
      0x0101012a, 0x01010214, 0x7f0403e5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dividerHeight}
     * attribute's value can be found in the {@link #SudDividerItemDecoration} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int SudDividerItemDecoration_android_dividerHeight=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#listDivider}
     * attribute's value can be found in the {@link #SudDividerItemDecoration} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:listDivider
     */
    public static final int SudDividerItemDecoration_android_listDivider=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDividerCondition}
     * attribute's value can be found in the {@link #SudDividerItemDecoration} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>1</td><td></td></tr>
     * <tr><td>either</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:sudDividerCondition
     */
    public static final int SudDividerItemDecoration_sudDividerCondition=2;
    /**
     * Attributes that can be used with a SudExpandableSwitchItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudExpandableSwitchItem_sudCollapsedSummary com.android.settings:sudCollapsedSummary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudExpandableSwitchItem_sudExpandedSummary com.android.settings:sudExpandedSummary}</code></td><td></td></tr>
     * </table>
     * @see #SudExpandableSwitchItem_sudCollapsedSummary
     * @see #SudExpandableSwitchItem_sudExpandedSummary
     */
    public static final int[] SudExpandableSwitchItem={
      0x7f0403d9, 0x7f0403eb
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudCollapsedSummary}
     * attribute's value can be found in the {@link #SudExpandableSwitchItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:sudCollapsedSummary
     */
    public static final int SudExpandableSwitchItem_sudCollapsedSummary=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudExpandedSummary}
     * attribute's value can be found in the {@link #SudExpandableSwitchItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:sudExpandedSummary
     */
    public static final int SudExpandableSwitchItem_sudExpandedSummary=1;
    /**
     * Attributes that can be used with a SudFillContentLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudFillContentLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudFillContentLayout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * </table>
     * @see #SudFillContentLayout_android_maxWidth
     * @see #SudFillContentLayout_android_maxHeight
     */
    public static final int[] SudFillContentLayout={
      0x0101011f, 0x01010120
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SudFillContentLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SudFillContentLayout_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #SudFillContentLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int SudFillContentLayout_android_maxHeight=1;
    /**
     * Attributes that can be used with a SudGlifLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudGlifLayout_sudBackgroundBaseColor com.android.settings:sudBackgroundBaseColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudGlifLayout_sudBackgroundPatterned com.android.settings:sudBackgroundPatterned}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudGlifLayout_sudColorPrimary com.android.settings:sudColorPrimary}</code></td><td>Custom view attributes</td></tr>
     * <tr><td><code>{@link #SudGlifLayout_sudStickyHeader com.android.settings:sudStickyHeader}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudGlifLayout_sudUsePartnerHeavyTheme com.android.settings:sudUsePartnerHeavyTheme}</code></td><td>This attribute is false by default.</td></tr>
     * </table>
     * @see #SudGlifLayout_sudBackgroundBaseColor
     * @see #SudGlifLayout_sudBackgroundPatterned
     * @see #SudGlifLayout_sudColorPrimary
     * @see #SudGlifLayout_sudStickyHeader
     * @see #SudGlifLayout_sudUsePartnerHeavyTheme
     */
    public static final int[] SudGlifLayout={
      0x7f0403d1, 0x7f0403d2, 0x7f0403da, 0x7f04040d, 
      0x7f040414
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudBackgroundBaseColor}
     * attribute's value can be found in the {@link #SudGlifLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudBackgroundBaseColor
     */
    public static final int SudGlifLayout_sudBackgroundBaseColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudBackgroundPatterned}
     * attribute's value can be found in the {@link #SudGlifLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sudBackgroundPatterned
     */
    public static final int SudGlifLayout_sudBackgroundPatterned=1;
    /**
     * <p>
     * @attr description
     * Custom view attributes
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudColorPrimary
     */
    public static final int SudGlifLayout_sudColorPrimary=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudStickyHeader}
     * attribute's value can be found in the {@link #SudGlifLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sudStickyHeader
     */
    public static final int SudGlifLayout_sudStickyHeader=3;
    /**
     * <p>
     * @attr description
     * This attribute is false by default. When set to true, the layout will apply partner
     * customizations to Header, Icon and Description. This attribute will be ignored when
     * GlifLayout.shouldApplyPartnerResource() returns false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sudUsePartnerHeavyTheme
     */
    public static final int SudGlifLayout_sudUsePartnerHeavyTheme=4;
    /**
     * Attributes that can be used with a SudGlifLoadingFramePadding.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingBottom com.android.settings:sudLoadingContentFramePaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingEnd com.android.settings:sudLoadingContentFramePaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingStart com.android.settings:sudLoadingContentFramePaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingTop com.android.settings:sudLoadingContentFramePaddingTop}</code></td><td></td></tr>
     * </table>
     * @see #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingBottom
     * @see #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingEnd
     * @see #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingStart
     * @see #SudGlifLoadingFramePadding_sudLoadingContentFramePaddingTop
     */
    public static final int[] SudGlifLoadingFramePadding={
      0x7f0403ff, 0x7f040400, 0x7f040401, 0x7f040402
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudLoadingContentFramePaddingBottom}
     * attribute's value can be found in the {@link #SudGlifLoadingFramePadding} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudLoadingContentFramePaddingBottom
     */
    public static final int SudGlifLoadingFramePadding_sudLoadingContentFramePaddingBottom=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudLoadingContentFramePaddingEnd}
     * attribute's value can be found in the {@link #SudGlifLoadingFramePadding} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudLoadingContentFramePaddingEnd
     */
    public static final int SudGlifLoadingFramePadding_sudLoadingContentFramePaddingEnd=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudLoadingContentFramePaddingStart}
     * attribute's value can be found in the {@link #SudGlifLoadingFramePadding} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudLoadingContentFramePaddingStart
     */
    public static final int SudGlifLoadingFramePadding_sudLoadingContentFramePaddingStart=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudLoadingContentFramePaddingTop}
     * attribute's value can be found in the {@link #SudGlifLoadingFramePadding} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudLoadingContentFramePaddingTop
     */
    public static final int SudGlifLoadingFramePadding_sudLoadingContentFramePaddingTop=3;
    /**
     * Attributes that can be used with a SudHeaderRecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudHeaderRecyclerView_sudHeader com.android.settings:sudHeader}</code></td><td></td></tr>
     * </table>
     * @see #SudHeaderRecyclerView_sudHeader
     */
    public static final int[] SudHeaderRecyclerView={
      0x7f0403f4
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudHeader}
     * attribute's value can be found in the {@link #SudHeaderRecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sudHeader
     */
    public static final int SudHeaderRecyclerView_sudHeader=0;
    /**
     * Attributes that can be used with a SudIconMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudIconMixin_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudIconMixin_sudIconTint com.android.settings:sudIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudIconMixin_sudUpscaleIcon com.android.settings:sudUpscaleIcon}</code></td><td></td></tr>
     * </table>
     * @see #SudIconMixin_android_icon
     * @see #SudIconMixin_sudIconTint
     * @see #SudIconMixin_sudUpscaleIcon
     */
    public static final int[] SudIconMixin={
      0x01010002, 0x7f0403f6, 0x7f040412
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #SudIconMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int SudIconMixin_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIconTint}
     * attribute's value can be found in the {@link #SudIconMixin} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudIconTint
     */
    public static final int SudIconMixin_sudIconTint=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudUpscaleIcon}
     * attribute's value can be found in the {@link #SudIconMixin} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sudUpscaleIcon
     */
    public static final int SudIconMixin_sudUpscaleIcon=2;
    /**
     * Attributes that can be used with a SudIllustration.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudIllustration_sudAspectRatio com.android.settings:sudAspectRatio}</code></td><td></td></tr>
     * </table>
     * @see #SudIllustration_sudAspectRatio
     */
    public static final int[] SudIllustration={
      0x7f0403cf
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudAspectRatio}
     * attribute's value can be found in the {@link #SudIllustration} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:sudAspectRatio
     */
    public static final int SudIllustration_sudAspectRatio=0;
    /**
     * Attributes that can be used with a SudIllustrationVideoView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudIllustrationVideoView_sudPauseVideoWhenFinished com.android.settings:sudPauseVideoWhenFinished}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudIllustrationVideoView_sudVideo com.android.settings:sudVideo}</code></td><td></td></tr>
     * </table>
     * @see #SudIllustrationVideoView_sudPauseVideoWhenFinished
     * @see #SudIllustrationVideoView_sudVideo
     */
    public static final int[] SudIllustrationVideoView={
      0x7f04040a, 0x7f040415
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudPauseVideoWhenFinished}
     * attribute's value can be found in the {@link #SudIllustrationVideoView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sudPauseVideoWhenFinished
     */
    public static final int SudIllustrationVideoView_sudPauseVideoWhenFinished=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudVideo}
     * attribute's value can be found in the {@link #SudIllustrationVideoView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sudVideo
     */
    public static final int SudIllustrationVideoView_sudVideo=1;
    /**
     * Attributes that can be used with a SudIntrinsicSizeFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudIntrinsicSizeFrameLayout_android_height android:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudIntrinsicSizeFrameLayout_android_width android:width}</code></td><td></td></tr>
     * </table>
     * @see #SudIntrinsicSizeFrameLayout_android_height
     * @see #SudIntrinsicSizeFrameLayout_android_width
     */
    public static final int[] SudIntrinsicSizeFrameLayout={
      0x01010155, 0x01010159
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#height}
     * attribute's value can be found in the {@link #SudIntrinsicSizeFrameLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:height
     */
    public static final int SudIntrinsicSizeFrameLayout_android_height=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#width}
     * attribute's value can be found in the {@link #SudIntrinsicSizeFrameLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:width
     */
    public static final int SudIntrinsicSizeFrameLayout_android_width=1;
    /**
     * Attributes that can be used with a SudItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_android_contentDescription android:contentDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_sudIconGravity com.android.settings:sudIconGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudItem_sudIconTint com.android.settings:sudIconTint}</code></td><td></td></tr>
     * </table>
     * @see #SudItem_android_icon
     * @see #SudItem_android_enabled
     * @see #SudItem_android_layout
     * @see #SudItem_android_visible
     * @see #SudItem_android_title
     * @see #SudItem_android_summary
     * @see #SudItem_android_contentDescription
     * @see #SudItem_sudIconGravity
     * @see #SudItem_sudIconTint
     */
    public static final int[] SudItem={
      0x01010002, 0x0101000e, 0x010100f2, 0x01010194, 
      0x010101e1, 0x010101e9, 0x01010273, 0x7f0403f5, 
      0x7f0403f6
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int SudItem_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int SudItem_android_enabled=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SudItem_android_layout=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visible}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int SudItem_android_visible=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int SudItem_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int SudItem_android_summary=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#contentDescription}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:contentDescription
     */
    public static final int SudItem_android_contentDescription=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIconGravity}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td>Values in the enum has to be the same as in android.view.Gravity</td></tr>
     * </table>
     *
     * @attr name com.android.settings:sudIconGravity
     */
    public static final int SudItem_sudIconGravity=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIconTint}
     * attribute's value can be found in the {@link #SudItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudIconTint
     */
    public static final int SudItem_sudIconTint=8;
    /**
     * Attributes that can be used with a SudListMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudListMixin_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudListMixin_sudDividerInset com.android.settings:sudDividerInset}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #SudListMixin_sudDividerInsetEnd com.android.settings:sudDividerInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudListMixin_sudDividerInsetStart com.android.settings:sudDividerInsetStart}</code></td><td></td></tr>
     * </table>
     * @see #SudListMixin_android_entries
     * @see #SudListMixin_sudDividerInset
     * @see #SudListMixin_sudDividerInsetEnd
     * @see #SudListMixin_sudDividerInsetStart
     */
    public static final int[] SudListMixin={
      0x010100b2, 0x7f0403e6, 0x7f0403e7, 0x7f0403e8
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #SudListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int SudListMixin_android_entries=0;
    /**
     * <p>
     * @attr description
     * Deprecated. Use sudDividerInsetStart and sudDividerInsetEnd instead
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDividerInset
     */
    public static final int SudListMixin_sudDividerInset=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDividerInsetEnd}
     * attribute's value can be found in the {@link #SudListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDividerInsetEnd
     */
    public static final int SudListMixin_sudDividerInsetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDividerInsetStart}
     * attribute's value can be found in the {@link #SudListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDividerInsetStart
     */
    public static final int SudListMixin_sudDividerInsetStart=3;
    /**
     * Attributes that can be used with a SudProgressBarMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudProgressBarMixin_sudUseBottomProgressBar com.android.settings:sudUseBottomProgressBar}</code></td><td></td></tr>
     * </table>
     * @see #SudProgressBarMixin_sudUseBottomProgressBar
     */
    public static final int[] SudProgressBarMixin={
      0x7f040413
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudUseBottomProgressBar}
     * attribute's value can be found in the {@link #SudProgressBarMixin} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sudUseBottomProgressBar
     */
    public static final int SudProgressBarMixin_sudUseBottomProgressBar=0;
    /**
     * Attributes that can be used with a SudRecyclerItemAdapter.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudRecyclerItemAdapter_android_colorBackground android:colorBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudRecyclerItemAdapter_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudRecyclerItemAdapter_selectableItemBackground com.android.settings:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #SudRecyclerItemAdapter_android_colorBackground
     * @see #SudRecyclerItemAdapter_android_selectableItemBackground
     * @see #SudRecyclerItemAdapter_selectableItemBackground
     */
    public static final int[] SudRecyclerItemAdapter={
      0x01010031, 0x0101030e, 0x7f04035e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#colorBackground}
     * attribute's value can be found in the {@link #SudRecyclerItemAdapter} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:colorBackground
     */
    public static final int SudRecyclerItemAdapter_android_colorBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #SudRecyclerItemAdapter} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int SudRecyclerItemAdapter_android_selectableItemBackground=1;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackground
     */
    public static final int SudRecyclerItemAdapter_selectableItemBackground=2;
    /**
     * Attributes that can be used with a SudRecyclerMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudRecyclerMixin_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudRecyclerMixin_sudDividerInset com.android.settings:sudDividerInset}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #SudRecyclerMixin_sudDividerInsetEnd com.android.settings:sudDividerInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudRecyclerMixin_sudDividerInsetStart com.android.settings:sudDividerInsetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudRecyclerMixin_sudHasStableIds com.android.settings:sudHasStableIds}</code></td><td></td></tr>
     * </table>
     * @see #SudRecyclerMixin_android_entries
     * @see #SudRecyclerMixin_sudDividerInset
     * @see #SudRecyclerMixin_sudDividerInsetEnd
     * @see #SudRecyclerMixin_sudDividerInsetStart
     * @see #SudRecyclerMixin_sudHasStableIds
     */
    public static final int[] SudRecyclerMixin={
      0x010100b2, 0x7f0403e6, 0x7f0403e7, 0x7f0403e8, 
      0x7f0403f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #SudRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int SudRecyclerMixin_android_entries=0;
    /**
     * <p>
     * @attr description
     * Deprecated. Use sudDividerInsetStart and sudDividerInsetEnd instead
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDividerInset
     */
    public static final int SudRecyclerMixin_sudDividerInset=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDividerInsetEnd}
     * attribute's value can be found in the {@link #SudRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDividerInsetEnd
     */
    public static final int SudRecyclerMixin_sudDividerInsetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDividerInsetStart}
     * attribute's value can be found in the {@link #SudRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDividerInsetStart
     */
    public static final int SudRecyclerMixin_sudDividerInsetStart=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudHasStableIds}
     * attribute's value can be found in the {@link #SudRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:sudHasStableIds
     */
    public static final int SudRecyclerMixin_sudHasStableIds=4;
    /**
     * Attributes that can be used with a SudSetupWizardLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudBackground com.android.settings:sudBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudBackgroundTile com.android.settings:sudBackgroundTile}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudDecorPaddingTop com.android.settings:sudDecorPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudIllustration com.android.settings:sudIllustration}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudIllustrationAspectRatio com.android.settings:sudIllustrationAspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudIllustrationHorizontalTile com.android.settings:sudIllustrationHorizontalTile}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudSetupWizardLayout_sudIllustrationImage com.android.settings:sudIllustrationImage}</code></td><td></td></tr>
     * </table>
     * @see #SudSetupWizardLayout_sudBackground
     * @see #SudSetupWizardLayout_sudBackgroundTile
     * @see #SudSetupWizardLayout_sudDecorPaddingTop
     * @see #SudSetupWizardLayout_sudIllustration
     * @see #SudSetupWizardLayout_sudIllustrationAspectRatio
     * @see #SudSetupWizardLayout_sudIllustrationHorizontalTile
     * @see #SudSetupWizardLayout_sudIllustrationImage
     */
    public static final int[] SudSetupWizardLayout={
      0x7f0403d0, 0x7f0403d3, 0x7f0403e2, 0x7f0403f7, 
      0x7f0403f8, 0x7f0403f9, 0x7f0403fa
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudBackground}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudBackground
     */
    public static final int SudSetupWizardLayout_sudBackground=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudBackgroundTile}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudBackgroundTile
     */
    public static final int SudSetupWizardLayout_sudBackgroundTile=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudDecorPaddingTop}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:sudDecorPaddingTop
     */
    public static final int SudSetupWizardLayout_sudDecorPaddingTop=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIllustration}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudIllustration
     */
    public static final int SudSetupWizardLayout_sudIllustration=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIllustrationAspectRatio}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:sudIllustrationAspectRatio
     */
    public static final int SudSetupWizardLayout_sudIllustrationAspectRatio=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIllustrationHorizontalTile}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudIllustrationHorizontalTile
     */
    public static final int SudSetupWizardLayout_sudIllustrationHorizontalTile=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudIllustrationImage}
     * attribute's value can be found in the {@link #SudSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:sudIllustrationImage
     */
    public static final int SudSetupWizardLayout_sudIllustrationImage=6;
    /**
     * Attributes that can be used with a SudStickyHeaderListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudStickyHeaderListView_sudHeader com.android.settings:sudHeader}</code></td><td></td></tr>
     * </table>
     * @see #SudStickyHeaderListView_sudHeader
     */
    public static final int[] SudStickyHeaderListView={
      0x7f0403f4
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudHeader}
     * attribute's value can be found in the {@link #SudStickyHeaderListView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sudHeader
     */
    public static final int SudStickyHeaderListView_sudHeader=0;
    /**
     * Attributes that can be used with a SudSwitchItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudSwitchItem_android_checked android:checked}</code></td><td></td></tr>
     * </table>
     * @see #SudSwitchItem_android_checked
     */
    public static final int[] SudSwitchItem={
      0x01010106
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#checked}
     * attribute's value can be found in the {@link #SudSwitchItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int SudSwitchItem_android_checked=0;
    /**
     * Attributes that can be used with a SudTemplateLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SudTemplateLayout_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SudTemplateLayout_sudContainer com.android.settings:sudContainer}</code></td><td></td></tr>
     * </table>
     * @see #SudTemplateLayout_android_layout
     * @see #SudTemplateLayout_sudContainer
     */
    public static final int[] SudTemplateLayout={
      0x010100f2, 0x7f0403db
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SudTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SudTemplateLayout_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sudContainer}
     * attribute's value can be found in the {@link #SudTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sudContainer
     */
    public static final int SudTemplateLayout_sudContainer=1;
    /**
     * Attributes that can be used with a SwipeRefreshLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor com.android.settings:swipeRefreshLayoutProgressSpinnerBackgroundColor}</code></td><td>Background color for SwipeRefreshLayout progress spinner.</td></tr>
     * </table>
     * @see #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int[] SwipeRefreshLayout={
      0x7f04041f
    };
    /**
     * <p>
     * @attr description
     * Background color for SwipeRefreshLayout progress spinner.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.settings:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.settings:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.settings:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.settings:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.settings:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.settings:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.settings:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.settings:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.settings:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.settings:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.settings:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f040370, 
      0x7f040388, 0x7f040426, 0x7f040427, 0x7f04042b, 
      0x7f04047a, 0x7f04047b, 0x7f04047c, 0x7f0404a5, 
      0x7f0404ac, 0x7f0404ad
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchMaterial.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchMaterial_useMaterialThemeColors com.android.settings:useMaterialThemeColors}</code></td><td></td></tr>
     * </table>
     * @see #SwitchMaterial_useMaterialThemeColors
     */
    public static final int[] SwitchMaterial={
      0x7f0404bc
    };
    /**
     * <p>
     * @attr description
     * When set to true, SwitchMaterial will tint itself according to
     * Material Theme colors. When set to false, Material Theme colors will
     * be ignored. This value should be set to false when using custom drawables
     * that should not be tinted. This value is ignored if a buttonTint is set.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useMaterialThemeColors
     */
    public static final int SwitchMaterial_useMaterialThemeColors=0;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.android.settings:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.android.settings:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.android.settings:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.android.settings:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.android.settings:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f040130, 0x7f04041c, 0x7f04041d, 
      0x7f04042c, 0x7f04042d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.android.settings:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.android.settings:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.android.settings:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.android.settings:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.android.settings:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
      0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
      0x0101036c, 0x7f040130, 0x7f04041c, 0x7f04041d, 
      0x7f04042c, 0x7f04042d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
      0x01010002, 0x010100f2, 0x0101014f
    };
    /**
     * <p>
     * @attr description
     * Icon to display in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int TabItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * A reference to a layout resource to be displayed in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int TabItem_android_layout=1;
    /**
     * <p>
     * @attr description
     * Text to display in the tab.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground com.android.settings:tabBackground}</code></td><td>Reference to a background to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart com.android.settings:tabContentStart}</code></td><td>Position in the Y axis from the starting edge that tabs should be positioned from.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity com.android.settings:tabGravity}</code></td><td>Gravity constant for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTint com.android.settings:tabIconTint}</code></td><td>Tint to apply to tab icons, if present.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTintMode com.android.settings:tabIconTintMode}</code></td><td>Blending mode to apply to tab icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicator com.android.settings:tabIndicator}</code></td><td>Reference to a drawable to use as selection indicator for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationDuration com.android.settings:tabIndicatorAnimationDuration}</code></td><td>Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationMode com.android.settings:tabIndicatorAnimationMode}</code></td><td>The animation mode used to animate the selection indicator between
     * destinations.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor com.android.settings:tabIndicatorColor}</code></td><td>Color of the indicator used to show the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorFullWidth com.android.settings:tabIndicatorFullWidth}</code></td><td>Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorGravity com.android.settings:tabIndicatorGravity}</code></td><td>Gravity constant for tab selection indicator.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight com.android.settings:tabIndicatorHeight}</code></td><td>{@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabInlineLabel com.android.settings:tabInlineLabel}</code></td><td>Whether to display tab labels horizontally inline with icons, or underneath icons.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth com.android.settings:tabMaxWidth}</code></td><td>The maximum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth com.android.settings:tabMinWidth}</code></td><td>The minimum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode com.android.settings:tabMode}</code></td><td>The behavior mode for the Tabs in this layout</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding com.android.settings:tabPadding}</code></td><td>The preferred padding along all edges of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom com.android.settings:tabPaddingBottom}</code></td><td>The preferred padding along the bottom edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd com.android.settings:tabPaddingEnd}</code></td><td>The preferred padding along the end edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart com.android.settings:tabPaddingStart}</code></td><td>The preferred padding along the start edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop com.android.settings:tabPaddingTop}</code></td><td>The preferred padding along the top edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabRippleColor com.android.settings:tabRippleColor}</code></td><td>Ripple color for the tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor com.android.settings:tabSelectedTextColor}</code></td><td>{@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance com.android.settings:tabTextAppearance}</code></td><td>A reference to a TextAppearance style to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor com.android.settings:tabTextColor}</code></td><td>The default text color to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabUnboundedRipple com.android.settings:tabUnboundedRipple}</code></td><td>Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.</td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIconTint
     * @see #TabLayout_tabIconTintMode
     * @see #TabLayout_tabIndicator
     * @see #TabLayout_tabIndicatorAnimationDuration
     * @see #TabLayout_tabIndicatorAnimationMode
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorFullWidth
     * @see #TabLayout_tabIndicatorGravity
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabInlineLabel
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabRippleColor
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     * @see #TabLayout_tabUnboundedRipple
     */
    @Deprecated
    public static final int[] TabLayout={
      0x7f04042e, 0x7f04042f, 0x7f040430, 0x7f040431, 
      0x7f040432, 0x7f040433, 0x7f040434, 0x7f040435, 
      0x7f040436, 0x7f040437, 0x7f040438, 0x7f040439, 
      0x7f04043a, 0x7f04043b, 0x7f04043c, 0x7f04043d, 
      0x7f04043e, 0x7f04043f, 0x7f040440, 0x7f040441, 
      0x7f040442, 0x7f040443, 0x7f040444, 0x7f040446, 
      0x7f040447, 0x7f040448
    };
    /**
     * <p>
     * @attr description
     * Reference to a background to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tabBackground
     */
    public static final int TabLayout_tabBackground=0;
    /**
     * <p>
     * @attr description
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabContentStart
     */
    public static final int TabLayout_tabContentStart=1;
    /**
     * <p>
     * @attr description
     * Gravity constant for tabs.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:tabGravity
     */
    public static final int TabLayout_tabGravity=2;
    /**
     * <p>
     * @attr description
     * Tint to apply to tab icons, if present. This can be a color state list or a color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tabIconTint
     */
    public static final int TabLayout_tabIconTint=3;
    /**
     * <p>
     * @attr description
     * Blending mode to apply to tab icons.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:tabIconTintMode
     */
    public static final int TabLayout_tabIconTintMode=4;
    /**
     * <p>
     * @attr description
     * Reference to a drawable to use as selection indicator for tabs. If this attribute is not
     * specified, indicator defaults to a line along the bottom of the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tabIndicator
     */
    public static final int TabLayout_tabIndicator=5;
    /**
     * <p>
     * @attr description
     * Duration in milliseconds for the animation of the selection indicator from one tab item
     * to another.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:tabIndicatorAnimationDuration
     */
    public static final int TabLayout_tabIndicatorAnimationDuration=6;
    /**
     * <p>
     * @attr description
     * The animation mode used to animate the selection indicator between
     * destinations.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>elastic</td><td>1</td><td>Animate the selection indicator's left and right bounds out of step
     * with each other, decelerating the front and accelerating the back.
     * This causes the indicator to look like it stretches between destinations
     * an then shrinks back down to fit the size of it's target tab.</td></tr>
     * <tr><td>linear</td><td>0</td><td>Animate the selection indicator's left and right bounds in step with
     * each other.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:tabIndicatorAnimationMode
     */
    public static final int TabLayout_tabIndicatorAnimationMode=7;
    /**
     * <p>
     * @attr description
     * Color of the indicator used to show the currently selected tab.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tabIndicatorColor
     */
    public static final int TabLayout_tabIndicatorColor=8;
    /**
     * <p>
     * @attr description
     * Whether the selection indicator width should fill the full width of the tab item,
     * or if it should be fitted to the content of the tab text label. If no text label is
     * present, it will be set to the width of the icon or to a minimum width of 24dp.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:tabIndicatorFullWidth
     */
    public static final int TabLayout_tabIndicatorFullWidth=9;
    /**
     * <p>
     * @attr description
     * Gravity constant for tab selection indicator.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td>Align indicator to the bottom of this tab layout.</td></tr>
     * <tr><td>center</td><td>1</td><td>Align indicator along the center of this tab layout.</td></tr>
     * <tr><td>stretch</td><td>3</td><td>Stretch indicator to match the height and width of a tab item in this layout.</td></tr>
     * <tr><td>top</td><td>2</td><td>Align indicator to the top of this tab layout.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:tabIndicatorGravity
     */
    public static final int TabLayout_tabIndicatorGravity=10;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, set the intrinsic size of the custom drawable provided to the
     * tabIndicator attribute in order to change the indicator height. For example, this can be
     * done by setting the <size> property in a <shape> resource.}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabIndicatorHeight
     */
    @Deprecated
    public static final int TabLayout_tabIndicatorHeight=11;
    /**
     * <p>
     * @attr description
     * Whether to display tab labels horizontally inline with icons, or underneath icons.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:tabInlineLabel
     */
    public static final int TabLayout_tabInlineLabel=12;
    /**
     * <p>
     * @attr description
     * The maximum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabMaxWidth
     */
    public static final int TabLayout_tabMaxWidth=13;
    /**
     * <p>
     * @attr description
     * The minimum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabMinWidth
     */
    public static final int TabLayout_tabMinWidth=14;
    /**
     * <p>
     * @attr description
     * The behavior mode for the Tabs in this layout
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>2</td><td></td></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:tabMode
     */
    public static final int TabLayout_tabMode=15;
    /**
     * <p>
     * @attr description
     * The preferred padding along all edges of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabPadding
     */
    public static final int TabLayout_tabPadding=16;
    /**
     * <p>
     * @attr description
     * The preferred padding along the bottom edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabPaddingBottom
     */
    public static final int TabLayout_tabPaddingBottom=17;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabPaddingEnd
     */
    public static final int TabLayout_tabPaddingEnd=18;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabPaddingStart
     */
    public static final int TabLayout_tabPaddingStart=19;
    /**
     * <p>
     * @attr description
     * The preferred padding along the top edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:tabPaddingTop
     */
    public static final int TabLayout_tabPaddingTop=20;
    /**
     * <p>
     * @attr description
     * Ripple color for the tabs. This may be a color state list, if the desired ripple color
     * should be stateful.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tabRippleColor
     */
    public static final int TabLayout_tabRippleColor=21;
    /**
     * <p>
     * @attr description
     * {@deprecated Instead, provide a ColorStateList to the tabTextColor attribute with a
     * selected color set.}
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tabSelectedTextColor
     */
    @Deprecated
    public static final int TabLayout_tabSelectedTextColor=22;
    /**
     * <p>
     * @attr description
     * A reference to a TextAppearance style to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tabTextAppearance
     */
    public static final int TabLayout_tabTextAppearance=23;
    /**
     * <p>
     * @attr description
     * The default text color to be applied to tabs.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tabTextColor
     */
    public static final int TabLayout_tabTextColor=24;
    /**
     * <p>
     * @attr description
     * Whether to use unbounded ripple effect for tabs, or if ripple should instead be bound to
     * tab item bounds.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:tabUnboundedRipple
     */
    public static final int TabLayout_tabUnboundedRipple=25;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.settings:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.android.settings:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.settings:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.android.settings:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x7f0401a3, 0x7f0401ac, 0x7f04044e, 0x7f04046c
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static final int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontFamily
     */
    public static final int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontVariationSettings
     */
    public static final int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:textLocale
     */
    public static final int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a TextInputEditText.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputEditText_textInputLayoutFocusedRectEnabled com.android.settings:textInputLayoutFocusedRectEnabled}</code></td><td>Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.</td></tr>
     * </table>
     * @see #TextInputEditText_textInputLayoutFocusedRectEnabled
     */
    public static final int[] TextInputEditText={
      0x7f04046a
    };
    /**
     * <p>
     * @attr description
     * Whether the TextInputEditText should use the TextInputLayout's focused
     * rectangle instead of its own.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:textInputLayoutFocusedRectEnabled
     */
    public static final int TextInputEditText_textInputLayoutFocusedRectEnabled=0;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundColor com.android.settings:boxBackgroundColor}</code></td><td>The color to use for the box's background color when in filled box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundMode com.android.settings:boxBackgroundMode}</code></td><td>Whether the text input area should be drawn as a filled box, an outline box, or not as a box.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCollapsedPaddingTop com.android.settings:boxCollapsedPaddingTop}</code></td><td>Value to use for the EditText's collapsed top padding in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomEnd com.android.settings:boxCornerRadiusBottomEnd}</code></td><td>The value to use for the box's bottom end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomStart com.android.settings:boxCornerRadiusBottomStart}</code></td><td>The value to use for the box's bottom start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopEnd com.android.settings:boxCornerRadiusTopEnd}</code></td><td>The value to use for the box's top end corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopStart com.android.settings:boxCornerRadiusTopStart}</code></td><td>The value to use for the box's top start corner radius when in box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeColor com.android.settings:boxStrokeColor}</code></td><td>The color to use for the box's stroke when in outline box mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeErrorColor com.android.settings:boxStrokeErrorColor}</code></td><td>The color to use for the box's stroke in outline box mode when an error
     * is being displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidth com.android.settings:boxStrokeWidth}</code></td><td>The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidthFocused com.android.settings:boxStrokeWidthFocused}</code></td><td>The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled com.android.settings:counterEnabled}</code></td><td>Whether the layout is laid out as if the character counter will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength com.android.settings:counterMaxLength}</code></td><td>The max length to display in the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance com.android.settings:counterOverflowTextAppearance}</code></td><td>TextAppearance of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextColor com.android.settings:counterOverflowTextColor}</code></td><td>Text color of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance com.android.settings:counterTextAppearance}</code></td><td>TextAppearance of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextColor com.android.settings:counterTextColor}</code></td><td>Text color of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconCheckable com.android.settings:endIconCheckable}</code></td><td>Whether the end icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconContentDescription com.android.settings:endIconContentDescription}</code></td><td>Text to set as the content description for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconDrawable com.android.settings:endIconDrawable}</code></td><td>Drawable to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconMode com.android.settings:endIconMode}</code></td><td>The end icon mode of the TextInputLayout.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTint com.android.settings:endIconTint}</code></td><td>Tint color to use for the end icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_endIconTintMode com.android.settings:endIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorContentDescription com.android.settings:errorContentDescription}</code></td><td>Text to set as the content description for the error view.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled com.android.settings:errorEnabled}</code></td><td>Whether the layout is laid out as if an error will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconDrawable com.android.settings:errorIconDrawable}</code></td><td>End icon to be shown when an error is displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTint com.android.settings:errorIconTint}</code></td><td>Tint color to use for the error icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorIconTintMode com.android.settings:errorIconTintMode}</code></td><td>Blending mode used to apply the error icon tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance com.android.settings:errorTextAppearance}</code></td><td>TextAppearance of any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextColor com.android.settings:errorTextColor}</code></td><td>Text color for any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_expandedHintEnabled com.android.settings:expandedHintEnabled}</code></td><td>Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperText com.android.settings:helperText}</code></td><td>The text to display as helper text underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextEnabled com.android.settings:helperTextEnabled}</code></td><td>Whether the layout's helper text functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextAppearance com.android.settings:helperTextTextAppearance}</code></td><td>TextAppearance of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextColor com.android.settings:helperTextTextColor}</code></td><td>Text color of the helper text displayed underneath the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled com.android.settings:hintAnimationEnabled}</code></td><td>Whether to animate hint state changes.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled com.android.settings:hintEnabled}</code></td><td>Whether the layout's floating label functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance com.android.settings:hintTextAppearance}</code></td><td>TextAppearance of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextColor com.android.settings:hintTextColor}</code></td><td>Text color of the hint in the collapsed floating label.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription com.android.settings:passwordToggleContentDescription}</code></td><td>Text to set as the content description for the password input visibility toggle.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable com.android.settings:passwordToggleDrawable}</code></td><td>Drawable to use as the password input visibility toggle icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled com.android.settings:passwordToggleEnabled}</code></td><td>Whether the view will display a toggle when the EditText has a password.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint com.android.settings:passwordToggleTint}</code></td><td>Icon to use for the password input visibility toggle
     * Deprecated.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode com.android.settings:passwordToggleTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderText com.android.settings:placeholderText}</code></td><td>The text to display as placeholder text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderTextAppearance com.android.settings:placeholderTextAppearance}</code></td><td>TextAppearance of the placeholder text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_placeholderTextColor com.android.settings:placeholderTextColor}</code></td><td>Text color of the placeholder text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixText com.android.settings:prefixText}</code></td><td>The text to display as prefix text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixTextAppearance com.android.settings:prefixTextAppearance}</code></td><td>TextAppearance of the prefix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_prefixTextColor com.android.settings:prefixTextColor}</code></td><td>Text color of the prefix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearance com.android.settings:shapeAppearance}</code></td><td>Shape appearance style reference to be used to construct a ShapeAppearanceModel.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_shapeAppearanceOverlay com.android.settings:shapeAppearanceOverlay}</code></td><td>Shape appearance overlay style reference to be used to modify the shapeAppearance.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconCheckable com.android.settings:startIconCheckable}</code></td><td>Whether the start icon is checkable.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconContentDescription com.android.settings:startIconContentDescription}</code></td><td>Text to set as the content description for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconDrawable com.android.settings:startIconDrawable}</code></td><td>Drawable to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTint com.android.settings:startIconTint}</code></td><td>Tint color to use for the start icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_startIconTintMode com.android.settings:startIconTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixText com.android.settings:suffixText}</code></td><td>The text to display as suffix text in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixTextAppearance com.android.settings:suffixTextAppearance}</code></td><td>TextAppearance of the suffix text displayed in the text input area.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_suffixTextColor com.android.settings:suffixTextColor}</code></td><td>Text color of the suffix text displayed in the text input area.</td></tr>
     * </table>
     * @see #TextInputLayout_android_enabled
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_maxWidth
     * @see #TextInputLayout_android_minWidth
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_boxBackgroundColor
     * @see #TextInputLayout_boxBackgroundMode
     * @see #TextInputLayout_boxCollapsedPaddingTop
     * @see #TextInputLayout_boxCornerRadiusBottomEnd
     * @see #TextInputLayout_boxCornerRadiusBottomStart
     * @see #TextInputLayout_boxCornerRadiusTopEnd
     * @see #TextInputLayout_boxCornerRadiusTopStart
     * @see #TextInputLayout_boxStrokeColor
     * @see #TextInputLayout_boxStrokeErrorColor
     * @see #TextInputLayout_boxStrokeWidth
     * @see #TextInputLayout_boxStrokeWidthFocused
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterOverflowTextColor
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_counterTextColor
     * @see #TextInputLayout_endIconCheckable
     * @see #TextInputLayout_endIconContentDescription
     * @see #TextInputLayout_endIconDrawable
     * @see #TextInputLayout_endIconMode
     * @see #TextInputLayout_endIconTint
     * @see #TextInputLayout_endIconTintMode
     * @see #TextInputLayout_errorContentDescription
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorIconDrawable
     * @see #TextInputLayout_errorIconTint
     * @see #TextInputLayout_errorIconTintMode
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_errorTextColor
     * @see #TextInputLayout_expandedHintEnabled
     * @see #TextInputLayout_helperText
     * @see #TextInputLayout_helperTextEnabled
     * @see #TextInputLayout_helperTextTextAppearance
     * @see #TextInputLayout_helperTextTextColor
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_hintTextColor
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     * @see #TextInputLayout_placeholderText
     * @see #TextInputLayout_placeholderTextAppearance
     * @see #TextInputLayout_placeholderTextColor
     * @see #TextInputLayout_prefixText
     * @see #TextInputLayout_prefixTextAppearance
     * @see #TextInputLayout_prefixTextColor
     * @see #TextInputLayout_shapeAppearance
     * @see #TextInputLayout_shapeAppearanceOverlay
     * @see #TextInputLayout_startIconCheckable
     * @see #TextInputLayout_startIconContentDescription
     * @see #TextInputLayout_startIconDrawable
     * @see #TextInputLayout_startIconTint
     * @see #TextInputLayout_startIconTintMode
     * @see #TextInputLayout_suffixText
     * @see #TextInputLayout_suffixTextAppearance
     * @see #TextInputLayout_suffixTextColor
     */
    public static final int[] TextInputLayout={
      0x0101000e, 0x0101009a, 0x0101011f, 0x0101013f, 
      0x01010150, 0x7f040071, 0x7f040072, 0x7f040073, 
      0x7f040074, 0x7f040075, 0x7f040076, 0x7f040077, 
      0x7f040078, 0x7f040079, 0x7f04007a, 0x7f04007b, 
      0x7f040108, 0x7f040109, 0x7f04010a, 0x7f04010b, 
      0x7f04010c, 0x7f04010d, 0x7f040157, 0x7f040158, 
      0x7f040159, 0x7f04015a, 0x7f04015b, 0x7f04015c, 
      0x7f040165, 0x7f040166, 0x7f040167, 0x7f040168, 
      0x7f040169, 0x7f04016a, 0x7f04016b, 0x7f04016f, 
      0x7f0401c3, 0x7f0401c4, 0x7f0401c5, 0x7f0401c6, 
      0x7f0401cd, 0x7f0401ce, 0x7f0401cf, 0x7f0401d0, 
      0x7f040302, 0x7f040303, 0x7f040304, 0x7f040305, 
      0x7f040306, 0x7f040313, 0x7f040314, 0x7f040315, 
      0x7f040327, 0x7f040328, 0x7f040329, 0x7f040362, 
      0x7f040365, 0x7f04038c, 0x7f04038d, 0x7f04038e, 
      0x7f04038f, 0x7f040390, 0x7f040416, 0x7f040417, 
      0x7f040418
    };
    /**
     * <p>
     * @attr description
     * Whether the layout is enabled
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int TextInputLayout_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The text color for the hint when the text field is not activated (such
     * as for the resting and disabled states).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextInputLayout_android_textColorHint=1;
    /**
     * <p>
     * @attr description
     * Makes the text field be at most this dimension wide if its width is set
     * to wrap_content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int TextInputLayout_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Makes the text field be at least this dimension wide if its width is
     * set to wrap_content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int TextInputLayout_android_minWidth=3;
    /**
     * <p>
     * @attr description
     * The hint to display in the floating label.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static final int TextInputLayout_android_hint=4;
    /**
     * <p>
     * @attr description
     * The color to use for the box's background color when in filled box mode.
     * If a non-stateful color resource is specified, default colors will be used for the hover
     * and disabled states.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:boxBackgroundColor
     */
    public static final int TextInputLayout_boxBackgroundColor=5;
    /**
     * <p>
     * @attr description
     * Whether the text input area should be drawn as a filled box, an outline box, or not as a box.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td>Filled box mode for the text input box.</td></tr>
     * <tr><td>none</td><td>0</td><td>Specifies that there should be no box set on the text input area.</td></tr>
     * <tr><td>outline</td><td>2</td><td>Outline box mode for the text input box.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:boxBackgroundMode
     */
    public static final int TextInputLayout_boxBackgroundMode=6;
    /**
     * <p>
     * @attr description
     * Value to use for the EditText's collapsed top padding in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxCollapsedPaddingTop
     */
    public static final int TextInputLayout_boxCollapsedPaddingTop=7;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxCornerRadiusBottomEnd
     */
    public static final int TextInputLayout_boxCornerRadiusBottomEnd=8;
    /**
     * <p>
     * @attr description
     * The value to use for the box's bottom start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxCornerRadiusBottomStart
     */
    public static final int TextInputLayout_boxCornerRadiusBottomStart=9;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top end corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxCornerRadiusTopEnd
     */
    public static final int TextInputLayout_boxCornerRadiusTopEnd=10;
    /**
     * <p>
     * @attr description
     * The value to use for the box's top start corner radius when in box mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxCornerRadiusTopStart
     */
    public static final int TextInputLayout_boxCornerRadiusTopStart=11;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke when in outline box mode.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:boxStrokeColor
     */
    public static final int TextInputLayout_boxStrokeColor=12;
    /**
     * <p>
     * @attr description
     * The color to use for the box's stroke in outline box mode when an error
     * is being displayed. If not set, it defaults to errorTextColor if on
     * error state, or to counterOverflowTextColor if on overflow state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:boxStrokeErrorColor
     */
    public static final int TextInputLayout_boxStrokeErrorColor=13;
    /**
     * <p>
     * @attr description
     * The value to use for the box's stroke when in outline box mode, or for the underline stroke
     * in filled mode.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxStrokeWidth
     */
    public static final int TextInputLayout_boxStrokeWidth=14;
    /**
     * <p>
     * @attr description
     * The value to use for the focused box's stroke when in outline box mode, or for the focused
     * underline stroke in filled mode..
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:boxStrokeWidthFocused
     */
    public static final int TextInputLayout_boxStrokeWidthFocused=15;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if the character counter will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:counterEnabled
     */
    public static final int TextInputLayout_counterEnabled=16;
    /**
     * <p>
     * @attr description
     * The max length to display in the character counter.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:counterMaxLength
     */
    public static final int TextInputLayout_counterMaxLength=17;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter when the text is longer than the max.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:counterOverflowTextAppearance
     */
    public static final int TextInputLayout_counterOverflowTextAppearance=18;
    /**
     * <p>
     * @attr description
     * Text color of the character counter when the text is longer than the max.
     * If set, this takes precedence over counterOverflowTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:counterOverflowTextColor
     */
    public static final int TextInputLayout_counterOverflowTextColor=19;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:counterTextAppearance
     */
    public static final int TextInputLayout_counterTextAppearance=20;
    /**
     * <p>
     * @attr description
     * Text color of the character counter.
     * If set, this takes precedence over counterTextAppearance.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:counterTextColor
     */
    public static final int TextInputLayout_counterTextColor=21;
    /**
     * <p>
     * @attr description
     * Whether the end icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:endIconCheckable
     */
    public static final int TextInputLayout_endIconCheckable=22;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the end icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:endIconContentDescription
     */
    public static final int TextInputLayout_endIconContentDescription=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the end icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:endIconDrawable
     */
    public static final int TextInputLayout_endIconDrawable=24;
    /**
     * <p>
     * @attr description
     * The end icon mode of the TextInputLayout. It will display one of the end icons detailed
     * below, or no end icon.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clear_text</td><td>2</td><td>The view will display a clear text button while the EditText contains input.</td></tr>
     * <tr><td>custom</td><td>ffffffff</td><td>The view will display a custom icon specified by the user.</td></tr>
     * <tr><td>dropdown_menu</td><td>3</td><td>The view will display a toggle that displays/hides a dropdown menu.</td></tr>
     * <tr><td>none</td><td>0</td><td>No end icon.</td></tr>
     * <tr><td>password_toggle</td><td>1</td><td>The view will display a toggle when the EditText has a password.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:endIconMode
     */
    public static final int TextInputLayout_endIconMode=25;
    /**
     * <p>
     * @attr description
     * Tint color to use for the end icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:endIconTint
     */
    public static final int TextInputLayout_endIconTint=26;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:endIconTintMode
     */
    public static final int TextInputLayout_endIconTintMode=27;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the error view.
     * Should be set when the error message has special characters that a
     * screen reader is not able to announce properly.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:errorContentDescription
     */
    public static final int TextInputLayout_errorContentDescription=28;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if an error will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:errorEnabled
     */
    public static final int TextInputLayout_errorEnabled=29;
    /**
     * <p>
     * @attr description
     * End icon to be shown when an error is displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:errorIconDrawable
     */
    public static final int TextInputLayout_errorIconDrawable=30;
    /**
     * <p>
     * @attr description
     * Tint color to use for the error icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:errorIconTint
     */
    public static final int TextInputLayout_errorIconTint=31;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the error icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:errorIconTintMode
     */
    public static final int TextInputLayout_errorIconTintMode=32;
    /**
     * <p>
     * @attr description
     * TextAppearance of any error message displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:errorTextAppearance
     */
    public static final int TextInputLayout_errorTextAppearance=33;
    /**
     * <p>
     * @attr description
     * Text color for any error message displayed.
     * If set, this takes precedence over errorTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:errorTextColor
     */
    public static final int TextInputLayout_errorTextColor=34;
    /**
     * <p>
     * @attr description
     * Whether the hint should occupy the input area when the text field is
     * unpopulated and not focused.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:expandedHintEnabled
     */
    public static final int TextInputLayout_expandedHintEnabled=35;
    /**
     * <p>
     * @attr description
     * The text to display as helper text underneath the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:helperText
     */
    public static final int TextInputLayout_helperText=36;
    /**
     * <p>
     * @attr description
     * Whether the layout's helper text functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:helperTextEnabled
     */
    public static final int TextInputLayout_helperTextEnabled=37;
    /**
     * <p>
     * @attr description
     * TextAppearance of the helper text displayed underneath the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:helperTextTextAppearance
     */
    public static final int TextInputLayout_helperTextTextAppearance=38;
    /**
     * <p>
     * @attr description
     * Text color of the helper text displayed underneath the text input area.
     * If set, this takes precedence over helperTextTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:helperTextTextColor
     */
    public static final int TextInputLayout_helperTextTextColor=39;
    /**
     * <p>
     * @attr description
     * Whether to animate hint state changes.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:hintAnimationEnabled
     */
    public static final int TextInputLayout_hintAnimationEnabled=40;
    /**
     * <p>
     * @attr description
     * Whether the layout's floating label functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:hintEnabled
     */
    public static final int TextInputLayout_hintEnabled=41;
    /**
     * <p>
     * @attr description
     * TextAppearance of the hint in the collapsed floating label.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:hintTextAppearance
     */
    public static final int TextInputLayout_hintTextAppearance=42;
    /**
     * <p>
     * @attr description
     * Text color of the hint in the collapsed floating label.
     * If set, this takes precedence over hintTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:hintTextColor
     */
    public static final int TextInputLayout_hintTextColor=43;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the password input visibility toggle.
     * Deprecated. Use endIconContentDescription instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:passwordToggleContentDescription
     */
    public static final int TextInputLayout_passwordToggleContentDescription=44;
    /**
     * <p>
     * @attr description
     * Drawable to use as the password input visibility toggle icon.
     * Deprecated. Use endIconDrawable instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:passwordToggleDrawable
     */
    public static final int TextInputLayout_passwordToggleDrawable=45;
    /**
     * <p>
     * @attr description
     * Whether the view will display a toggle when the EditText has a password.
     * Deprecated. The view's end icon should be specified via endIconMode instead.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:passwordToggleEnabled
     */
    public static final int TextInputLayout_passwordToggleEnabled=46;
    /**
     * <p>
     * @attr description
     * Icon to use for the password input visibility toggle
     * Deprecated. Use endIconTint instead.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:passwordToggleTint
     */
    public static final int TextInputLayout_passwordToggleTint=47;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     * Deprecated. Use endIconTintMode instead.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:passwordToggleTintMode
     */
    public static final int TextInputLayout_passwordToggleTintMode=48;
    /**
     * <p>
     * @attr description
     * The text to display as placeholder text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:placeholderText
     */
    public static final int TextInputLayout_placeholderText=49;
    /**
     * <p>
     * @attr description
     * TextAppearance of the placeholder text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:placeholderTextAppearance
     */
    public static final int TextInputLayout_placeholderTextAppearance=50;
    /**
     * <p>
     * @attr description
     * Text color of the placeholder text displayed in the text input area.
     * If set, this takes precedence over placeholderTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:placeholderTextColor
     */
    public static final int TextInputLayout_placeholderTextColor=51;
    /**
     * <p>
     * @attr description
     * The text to display as prefix text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:prefixText
     */
    public static final int TextInputLayout_prefixText=52;
    /**
     * <p>
     * @attr description
     * TextAppearance of the prefix text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:prefixTextAppearance
     */
    public static final int TextInputLayout_prefixTextAppearance=53;
    /**
     * <p>
     * @attr description
     * Text color of the prefix text displayed in the text input area.
     * If set, this takes precedence over prefixTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:prefixTextColor
     */
    public static final int TextInputLayout_prefixTextColor=54;
    /**
     * <p>
     * @attr description
     * Shape appearance style reference for TextInputLayout. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearance
     */
    public static final int TextInputLayout_shapeAppearance=55;
    /**
     * <p>
     * @attr description
     * Shape appearance overlay style reference for TextInputLayout. To be used to augment
     * attributes declared in the shapeAppearance. Attribute declaration is in the Shape
     * package.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:shapeAppearanceOverlay
     */
    public static final int TextInputLayout_shapeAppearanceOverlay=56;
    /**
     * <p>
     * @attr description
     * Whether the start icon is checkable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:startIconCheckable
     */
    public static final int TextInputLayout_startIconCheckable=57;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the start icon.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:startIconContentDescription
     */
    public static final int TextInputLayout_startIconContentDescription=58;
    /**
     * <p>
     * @attr description
     * Drawable to use for the start icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:startIconDrawable
     */
    public static final int TextInputLayout_startIconDrawable=59;
    /**
     * <p>
     * @attr description
     * Tint color to use for the start icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:startIconTint
     */
    public static final int TextInputLayout_startIconTint=60;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:startIconTintMode
     */
    public static final int TextInputLayout_startIconTintMode=61;
    /**
     * <p>
     * @attr description
     * The text to display as suffix text in the text input area.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:suffixText
     */
    public static final int TextInputLayout_suffixText=62;
    /**
     * <p>
     * @attr description
     * TextAppearance of the suffix text displayed in the text input area.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suffixTextAppearance
     */
    public static final int TextInputLayout_suffixTextAppearance=63;
    /**
     * <p>
     * @attr description
     * Text color of the suffix text displayed in the text input area.
     * If set, this takes precedence over suffixTextAppearance.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suffixTextColor
     */
    public static final int TextInputLayout_suffixTextColor=64;
    /**
     * Attributes that can be used with a ThemeEnforcement.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ThemeEnforcement_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceMaterialTheme com.android.settings:enforceMaterialTheme}</code></td><td>Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.</td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceTextAppearance com.android.settings:enforceTextAppearance}</code></td><td>Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.</td></tr>
     * </table>
     * @see #ThemeEnforcement_android_textAppearance
     * @see #ThemeEnforcement_enforceMaterialTheme
     * @see #ThemeEnforcement_enforceTextAppearance
     */
    public static final int[] ThemeEnforcement={
      0x01010034, 0x7f04015f, 0x7f040160
    };
    /**
     * <p>
     * @attr description
     * Attribute used to check that a component has a TextAppearance specified on it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ThemeEnforcement_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style uses new attributes defined by
     * Theme.MaterialComponents, and that the component should check via ThemeEnforcement that the
     * client's app theme inherits from Theme.MaterialComponents.
     * Not all usages of new attributes are problematic in the context of a legacy app theme. You
     * should only use this flag if a particular usage is known to cause a visual glitch or crash.
     * For example, tinting a vector drawable with a non-existent theme attribute is known to
     * crash on pre-21 devices.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:enforceMaterialTheme
     */
    public static final int ThemeEnforcement_enforceMaterialTheme=1;
    /**
     * <p>
     * @attr description
     * Internal flag used to denote that a style requires that the textAppearance attribute is
     * specified and evaluates to a valid text appearance.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:enforceTextAppearance
     */
    public static final int ThemeEnforcement_enforceTextAppearance=2;
    /**
     * Attributes that can be used with a TintDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TintDrawable_android_tint android:tint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TintDrawable_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #TintDrawable_android_tint
     * @see #TintDrawable_android_drawable
     */
    public static final int[] TintDrawable={
      0x01010121, 0x01010199
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tint}
     * attribute's value can be found in the {@link #TintDrawable} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:tint
     */
    public static final int TintDrawable_android_tint=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawable}
     * attribute's value can be found in the {@link #TintDrawable} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int TintDrawable_android_drawable=1;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.settings:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.settings:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.settings:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.settings:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.settings:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.settings:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.settings:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.settings:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.settings:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.settings:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.settings:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.settings:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.android.settings:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.settings:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.settings:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.settings:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.settings:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.settings:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.settings:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.settings:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.settings:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.settings:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.settings:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.settings:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.settings:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.settings:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.settings:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f040083, 0x7f0400c3, 
      0x7f0400c4, 0x7f0400ea, 0x7f0400eb, 0x7f0400ec, 
      0x7f0400ed, 0x7f0400ee, 0x7f0400ef, 0x7f04026f, 
      0x7f040270, 0x7f04029f, 0x7f0402b7, 0x7f0402dd, 
      0x7f0402de, 0x7f040319, 0x7f0403a5, 0x7f0403a9, 
      0x7f0403aa, 0x7f040488, 0x7f040490, 0x7f040491, 
      0x7f040492, 0x7f040493, 0x7f040494, 0x7f040495, 
      0x7f040498, 0x7f040499
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:menu
     */
    public static final int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:navigationIcon
     */
    public static final int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupTheme
     */
    public static final int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:subtitle
     */
    public static final int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:title
     */
    public static final int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMargin
     */
    public static final int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:titleTextColor
     */
    public static final int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a Tooltip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Tooltip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_padding android:padding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_layout_margin android:layout_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Tooltip_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * </table>
     * @see #Tooltip_android_textAppearance
     * @see #Tooltip_android_padding
     * @see #Tooltip_android_layout_margin
     * @see #Tooltip_android_minWidth
     * @see #Tooltip_android_minHeight
     * @see #Tooltip_android_text
     * @see #Tooltip_backgroundTint
     */
    public static final int[] Tooltip={
      0x01010034, 0x010100d5, 0x010100f6, 0x0101013f, 
      0x01010140, 0x0101014f, 0x7f040052
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Tooltip_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#padding}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:padding
     */
    public static final int Tooltip_android_padding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_margin}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_margin
     */
    public static final int Tooltip_android_layout_margin=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int Tooltip_android_minWidth=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Tooltip_android_minHeight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #Tooltip} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Tooltip_android_text=5;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int Tooltip_backgroundTint=6;
    /**
     * Attributes that can be used with a Transform.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Transform_android_transformPivotX android:transformPivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_transformPivotY android:transformPivotY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationX android:translationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationY android:translationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_scaleX android:scaleX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_scaleY android:scaleY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotation android:rotation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotationX android:rotationX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_rotationY android:rotationY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_translationZ android:translationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_android_elevation android:elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_pivotAnchor com.android.settings:pivotAnchor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_pivotX com.android.settings:pivotX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transform_pivotY com.android.settings:pivotY}</code></td><td></td></tr>
     * </table>
     * @see #Transform_android_transformPivotX
     * @see #Transform_android_transformPivotY
     * @see #Transform_android_translationX
     * @see #Transform_android_translationY
     * @see #Transform_android_scaleX
     * @see #Transform_android_scaleY
     * @see #Transform_android_rotation
     * @see #Transform_android_rotationX
     * @see #Transform_android_rotationY
     * @see #Transform_android_translationZ
     * @see #Transform_android_elevation
     * @see #Transform_pivotAnchor
     * @see #Transform_pivotX
     * @see #Transform_pivotY
     */
    public static final int[] Transform={
      0x01010320, 0x01010321, 0x01010322, 0x01010323, 
      0x01010324, 0x01010325, 0x01010326, 0x01010327, 
      0x01010328, 0x010103fa, 0x01010440, 0x7f04030f, 
      0x7f040310, 0x7f040311
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotX
     */
    public static final int Transform_android_transformPivotX=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#transformPivotY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:transformPivotY
     */
    public static final int Transform_android_transformPivotY=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationX
     */
    public static final int Transform_android_translationX=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationY
     */
    public static final int Transform_android_translationY=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleX
     */
    public static final int Transform_android_scaleX=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#scaleY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:scaleY
     */
    public static final int Transform_android_scaleY=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotation}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotation
     */
    public static final int Transform_android_rotation=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationX
     */
    public static final int Transform_android_rotationX=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#rotationY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:rotationY
     */
    public static final int Transform_android_rotationY=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#translationZ}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:translationZ
     */
    public static final int Transform_android_translationZ=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#elevation}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:elevation
     */
    public static final int Transform_android_elevation=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pivotAnchor}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>parent</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pivotAnchor
     */
    public static final int Transform_pivotAnchor=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pivotX}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:pivotX
     */
    public static final int Transform_pivotX=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pivotY}
     * attribute's value can be found in the {@link #Transform} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:pivotY
     */
    public static final int Transform_pivotY=13;
    /**
     * Attributes that can be used with a Transition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Transition_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_autoTransition com.android.settings:autoTransition}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_constraintSetEnd com.android.settings:constraintSetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_constraintSetStart com.android.settings:constraintSetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_duration com.android.settings:duration}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_layoutDuringTransition com.android.settings:layoutDuringTransition}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_motionInterpolator com.android.settings:motionInterpolator}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_pathMotionArc com.android.settings:pathMotionArc}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_staggered com.android.settings:staggered}</code></td><td></td></tr>
     * <tr><td><code>{@link #Transition_transitionDisable com.android.settings:transitionDisable}</code></td><td></td></tr>
     * </table>
     * @see #Transition_android_id
     * @see #Transition_autoTransition
     * @see #Transition_constraintSetEnd
     * @see #Transition_constraintSetStart
     * @see #Transition_duration
     * @see #Transition_layoutDuringTransition
     * @see #Transition_motionInterpolator
     * @see #Transition_pathMotionArc
     * @see #Transition_staggered
     * @see #Transition_transitionDisable
     */
    public static final int[] Transition={
      0x010100d0, 0x7f040048, 0x7f0400e3, 0x7f0400e4, 
      0x7f04014b, 0x7f04021a, 0x7f0402d3, 0x7f040307, 
      0x7f04038b, 0x7f0404ae
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Transition_android_id=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#autoTransition}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>animateToEnd</td><td>4</td><td></td></tr>
     * <tr><td>animateToStart</td><td>3</td><td></td></tr>
     * <tr><td>jumpToEnd</td><td>2</td><td></td></tr>
     * <tr><td>jumpToStart</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:autoTransition
     */
    public static final int Transition_autoTransition=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraintSetEnd}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:constraintSetEnd
     */
    public static final int Transition_constraintSetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraintSetStart}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:constraintSetStart
     */
    public static final int Transition_constraintSetStart=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#duration}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:duration
     */
    public static final int Transition_duration=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#layoutDuringTransition}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>honorRequest</td><td>1</td><td></td></tr>
     * <tr><td>ignoreRequest</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:layoutDuringTransition
     */
    public static final int Transition_layoutDuringTransition=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#motionInterpolator}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bounce</td><td>5</td><td></td></tr>
     * <tr><td>easeIn</td><td>1</td><td></td></tr>
     * <tr><td>easeInOut</td><td>0</td><td></td></tr>
     * <tr><td>easeOut</td><td>2</td><td></td></tr>
     * <tr><td>linear</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:motionInterpolator
     */
    public static final int Transition_motionInterpolator=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pathMotionArc}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>flip</td><td>3</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>startHorizontal</td><td>2</td><td></td></tr>
     * <tr><td>startVertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:pathMotionArc
     */
    public static final int Transition_pathMotionArc=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#staggered}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:staggered
     */
    public static final int Transition_staggered=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#transitionDisable}
     * attribute's value can be found in the {@link #Transition} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:transitionDisable
     */
    public static final int Transition_transitionDisable=9;
    /**
     * For TwoStatesButtonPreference
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TwoStateButtonPreference_textOff com.android.settings:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #TwoStateButtonPreference_textOn com.android.settings:textOn}</code></td><td></td></tr>
     * </table>
     * @see #TwoStateButtonPreference_textOff
     * @see #TwoStateButtonPreference_textOn
     */
    public static final int[] TwoStateButtonPreference={
      0x7f04046d, 0x7f04046e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#textOff}
     * attribute's value can be found in the {@link #TwoStateButtonPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textOff
     */
    public static final int TwoStateButtonPreference_textOff=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#textOn}
     * attribute's value can be found in the {@link #TwoStateButtonPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textOn
     */
    public static final int TwoStateButtonPreference_textOn=1;
    /**
     * For UsageView
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #UsageView_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_android_colorAccent android:colorAccent}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_bottomLabels com.android.settings:bottomLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_sideLabels com.android.settings:sideLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_textColor com.android.settings:textColor}</code></td><td></td></tr>
     * </table>
     * @see #UsageView_android_gravity
     * @see #UsageView_android_colorAccent
     * @see #UsageView_bottomLabels
     * @see #UsageView_sideLabels
     * @see #UsageView_textColor
     */
    public static final int[] UsageView={
      0x010100af, 0x01010435, 0x7f04006d, 0x7f040373, 
      0x7f040465
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int UsageView_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#colorAccent}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:colorAccent
     */
    public static final int UsageView_android_colorAccent=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#bottomLabels}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:bottomLabels
     */
    public static final int UsageView_bottomLabels=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sideLabels}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sideLabels
     */
    public static final int UsageView_sideLabels=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#textColor}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:textColor
     */
    public static final int UsageView_textColor=4;
    /**
     * Attributes that can be used with a Variant.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Variant_constraints com.android.settings:constraints}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_heightLessThan com.android.settings:region_heightLessThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_heightMoreThan com.android.settings:region_heightMoreThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_widthLessThan com.android.settings:region_widthLessThan}</code></td><td></td></tr>
     * <tr><td><code>{@link #Variant_region_widthMoreThan com.android.settings:region_widthMoreThan}</code></td><td></td></tr>
     * </table>
     * @see #Variant_constraints
     * @see #Variant_region_heightLessThan
     * @see #Variant_region_heightMoreThan
     * @see #Variant_region_widthLessThan
     * @see #Variant_region_widthMoreThan
     */
    public static final int[] Variant={
      0x7f0400e6, 0x7f04033e, 0x7f04033f, 0x7f040340, 
      0x7f040341
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#constraints}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:constraints
     */
    public static final int Variant_constraints=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#region_heightLessThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:region_heightLessThan
     */
    public static final int Variant_region_heightLessThan=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#region_heightMoreThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:region_heightMoreThan
     */
    public static final int Variant_region_heightMoreThan=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#region_widthLessThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:region_widthLessThan
     */
    public static final int Variant_region_widthLessThan=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#region_widthMoreThan}
     * attribute's value can be found in the {@link #Variant} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:region_widthMoreThan
     */
    public static final int Variant_region_widthMoreThan=4;
    /**
     * Attributes that can be used with a VideoPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #VideoPreference_animation com.android.settings:animation}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoPreference_preview com.android.settings:preview}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoPreference_vectorAnimation com.android.settings:vectorAnimation}</code></td><td></td></tr>
     * </table>
     * @see #VideoPreference_animation
     * @see #VideoPreference_preview
     * @see #VideoPreference_vectorAnimation
     */
    public static final int[] VideoPreference={
      0x7f040036, 0x7f04032c, 0x7f0404c0
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animation}
     * attribute's value can be found in the {@link #VideoPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:animation
     */
    public static final int VideoPreference_animation=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#preview}
     * attribute's value can be found in the {@link #VideoPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preview
     */
    public static final int VideoPreference_preview=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#vectorAnimation}
     * attribute's value can be found in the {@link #VideoPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:vectorAnimation
     */
    public static final int VideoPreference_vectorAnimation=2;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.settings:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.settings:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.settings:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f0402f8, 0x7f0402fb, 
      0x7f040472
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.settings:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f040052, 0x7f040053
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewPager2.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewPager2_android_orientation android:orientation}</code></td><td></td></tr>
     * </table>
     * @see #ViewPager2_android_orientation
     */
    public static final int[] ViewPager2={
      0x010100c4
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #ViewPager2} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int ViewPager2_android_orientation=0;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
    /**
     * Attributes that can be used with a WifiEncryptionState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.android.settings:state_encrypted}</code></td><td></td></tr>
     * </table>
     * @see #WifiEncryptionState_state_encrypted
     */
    public static final int[] WifiEncryptionState={
      0x7f040395
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_encrypted}
     * attribute's value can be found in the {@link #WifiEncryptionState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_encrypted
     */
    public static final int WifiEncryptionState_state_encrypted=0;
    /**
     * Attributes that can be used with a WifiMeteredState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WifiMeteredState_state_metered com.android.settings:state_metered}</code></td><td></td></tr>
     * </table>
     * @see #WifiMeteredState_state_metered
     */
    public static final int[] WifiMeteredState={
      0x7f040398
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_metered}
     * attribute's value can be found in the {@link #WifiMeteredState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_metered
     */
    public static final int WifiMeteredState_state_metered=0;
    /**
     * Attributes that can be used with a WifiSavedState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WifiSavedState_state_saved com.android.settings:state_saved}</code></td><td></td></tr>
     * </table>
     * @see #WifiSavedState_state_saved
     */
    public static final int[] WifiSavedState={
      0x7f040399
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_saved}
     * attribute's value can be found in the {@link #WifiSavedState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_saved
     */
    public static final int WifiSavedState_state_saved=0;
  }
  public static final class xml {
    public static final int about_legal=0x7f140000;
    public static final int accessibility_audio_adjustment=0x7f140001;
    public static final int accessibility_autoclick_settings=0x7f140002;
    public static final int accessibility_button_settings=0x7f140003;
    public static final int accessibility_color_inversion_settings=0x7f140004;
    public static final int accessibility_control_timeout_settings=0x7f140005;
    public static final int accessibility_daltonizer_settings=0x7f140006;
    public static final int accessibility_magnification_service_settings=0x7f140007;
    public static final int accessibility_magnification_settings=0x7f140008;
    public static final int accessibility_notification_vibration_settings=0x7f140009;
    public static final int accessibility_ring_vibration_settings=0x7f14000a;
    public static final int accessibility_settings=0x7f14000b;
    public static final int accessibility_settings_for_setup_wizard=0x7f14000c;
    public static final int accessibility_shortcut_service_settings=0x7f14000d;
    public static final int accessibility_shortcuts_settings=0x7f14000e;
    public static final int accessibility_system_controls=0x7f14000f;
    public static final int accessibility_tap_assistance=0x7f140010;
    public static final int accessibility_text_and_display=0x7f140011;
    public static final int accessibility_touch_vibration_settings=0x7f140012;
    public static final int accessibility_vibration_settings=0x7f140013;
    public static final int account_sync_settings=0x7f140014;
    public static final int account_type_settings=0x7f140015;
    public static final int accounts_dashboard_settings=0x7f140016;
    public static final int accounts_dashboard_settings_header=0x7f140017;
    public static final int accounts_personal_dashboard_settings=0x7f140018;
    public static final int accounts_work_dashboard_settings=0x7f140019;
    public static final int adaptive_connectivity_settings=0x7f14001a;
    public static final int adb_device_details_fragment=0x7f14001b;
    public static final int adb_wireless_settings=0x7f14001c;
    public static final int add_account_settings=0x7f14001d;
    public static final int alarms_and_reminders=0x7f14001e;
    public static final int all_tether_prefs=0x7f14001f;
    public static final int apn_editor=0x7f140020;
    public static final int apn_settings=0x7f140021;
    public static final int app_bubble_notification_settings=0x7f140022;
    public static final int app_channels_bypassing_dnd_settings=0x7f140023;
    public static final int app_data_usage=0x7f140024;
    public static final int app_info_settings=0x7f140025;
    public static final int app_list_disclosure_settings=0x7f140026;
    public static final int app_memory_settings=0x7f140027;
    public static final int app_notification_settings=0x7f140028;
    public static final int app_ops_permissions_details=0x7f140029;
    public static final int app_restrictions=0x7f14002a;
    public static final int app_storage_settings=0x7f14002b;
    public static final int apps=0x7f14002c;
    public static final int assist_gesture_settings=0x7f14002d;
    public static final int auto_brightness_detail=0x7f14002e;
    public static final int auto_rotate_settings=0x7f14002f;
    public static final int automatic_storage_management_settings=0x7f140030;
    public static final int available_virtual_keyboard=0x7f140031;
    public static final int backup_settings=0x7f140032;
    public static final int backup_transport_settings=0x7f140033;
    public static final int battery_saver_schedule_settings=0x7f140034;
    public static final int battery_saver_settings=0x7f140035;
    public static final int billing_cycle=0x7f140036;
    public static final int bluetooth_device_advanced=0x7f140037;
    public static final int bluetooth_device_details_fragment=0x7f140038;
    public static final int bluetooth_pairing_detail=0x7f140039;
    public static final int bluetooth_screen=0x7f14003a;
    public static final int bluetooth_settings=0x7f14003b;
    public static final int bluetooth_settings_obsolete=0x7f14003c;
    public static final int bubble_notification_settings=0x7f14003d;
    public static final int bug_report_handler_settings=0x7f14003e;
    public static final int captioning_appearance=0x7f14003f;
    public static final int captioning_more_options=0x7f140040;
    public static final int captioning_settings=0x7f140041;
    public static final int change_wifi_state_details=0x7f140042;
    public static final int channel_notification_settings=0x7f140043;
    public static final int choose_network=0x7f140044;
    public static final int color_mode_settings=0x7f140045;
    public static final int configure_notification_settings=0x7f140046;
    public static final int connected_devices=0x7f140047;
    public static final int connected_devices_advanced=0x7f140048;
    public static final int conversation_list_settings=0x7f140049;
    public static final int conversation_notification_settings=0x7f14004a;
    public static final int create_shortcut=0x7f14004b;
    public static final int credential_management_app_fragment=0x7f14004c;
    public static final int current_dream_settings=0x7f14004d;
    public static final int dark_mode_settings=0x7f14004e;
    public static final int dark_ui_settings=0x7f14004f;
    public static final int data_saver=0x7f140050;
    public static final int data_usage=0x7f140051;
    public static final int data_usage_cellular=0x7f140052;
    public static final int data_usage_ethernet=0x7f140053;
    public static final int data_usage_list=0x7f140054;
    public static final int data_usage_metered_prefs=0x7f140055;
    public static final int data_usage_wifi=0x7f140056;
    public static final int date_time_prefs=0x7f140057;
    public static final int default_autofill_settings=0x7f140058;
    public static final int default_voice_settings=0x7f140059;
    public static final int development_settings=0x7f14005a;
    public static final int development_tile_settings=0x7f14005b;
    public static final int device_admin_settings=0x7f14005c;
    public static final int device_info_phone_status=0x7f14005d;
    public static final int device_info_status=0x7f14005e;
    public static final int device_info_storage_volume=0x7f14005f;
    public static final int device_picker=0x7f140060;
    public static final int display_settings=0x7f140061;
    public static final int double_tap_power_settings=0x7f140062;
    public static final int double_tap_screen_settings=0x7f140063;
    public static final int double_twist_gesture_settings=0x7f140064;
    public static final int draw_overlay_permissions_details=0x7f140065;
    public static final int dream_fragment_overview=0x7f140066;
    public static final int emergency_gesture_settings=0x7f140067;
    public static final int emergency_settings=0x7f140068;
    public static final int encryption_and_credential=0x7f140069;
    public static final int enterprise_privacy_settings=0x7f14006a;
    public static final int enterprise_set_default_apps_settings=0x7f14006b;
    public static final int external_sources_details=0x7f14006c;
    public static final int feature_flags_settings=0x7f14006d;
    public static final int file_paths=0x7f14006e;
    public static final int financed_privacy_settings=0x7f14006f;
    public static final int firmware_version=0x7f140070;
    public static final int gesture_navigation_settings=0x7f140071;
    public static final int gestures=0x7f140072;
    public static final int graphics_driver_settings=0x7f140073;
    public static final int hardware_info=0x7f140074;
    public static final int high_power_details=0x7f140075;
    public static final int inapp_notification_settings=0x7f140076;
    public static final int input_methods_prefs=0x7f140077;
    public static final int input_methods_subtype=0x7f140078;
    public static final int install_certificate_from_storage=0x7f140079;
    public static final int installed_app_launch_settings=0x7f14007a;
    public static final int interact_across_profiles=0x7f14007b;
    public static final int interact_across_profiles_permissions_details=0x7f14007c;
    public static final int items_multiple_carrier=0x7f14007d;
    public static final int keyboard_layout_picker_fragment=0x7f14007e;
    public static final int language_and_input=0x7f14007f;
    public static final int location_recent_access_see_all=0x7f140080;
    public static final int location_recent_location_access_header=0x7f140081;
    public static final int location_recent_requests_header=0x7f140082;
    public static final int location_recent_requests_see_all=0x7f140083;
    public static final int location_services=0x7f140084;
    public static final int location_services_bluetooth_scanning=0x7f140085;
    public static final int location_services_header=0x7f140086;
    public static final int location_services_wifi_scanning=0x7f140087;
    public static final int location_services_workprofile=0x7f140088;
    public static final int location_settings=0x7f140089;
    public static final int location_settings_header=0x7f14008a;
    public static final int location_settings_personal=0x7f14008b;
    public static final int location_settings_workprofile=0x7f14008c;
    public static final int manage_assist=0x7f14008d;
    public static final int manage_domain_url_settings=0x7f14008e;
    public static final int manage_external_storage_permission_details=0x7f14008f;
    public static final int managed_profile_settings=0x7f140090;
    public static final int media_controls_settings=0x7f140091;
    public static final int media_management_apps=0x7f140092;
    public static final int mobile_network_list=0x7f140093;
    public static final int mobile_network_settings=0x7f140094;
    public static final int module_licenses=0x7f140095;
    public static final int my_device_info=0x7f140096;
    public static final int network_and_internet=0x7f140097;
    public static final int network_provider_calls_sms=0x7f140098;
    public static final int network_provider_internet=0x7f140099;
    public static final int network_provider_settings=0x7f14009a;
    public static final int network_provider_sims_list=0x7f14009b;
    public static final int network_scorer_picker_prefs=0x7f14009c;
    public static final int nfc_and_payment_settings=0x7f14009d;
    public static final int nfc_payment_settings=0x7f14009e;
    public static final int night_display_settings=0x7f14009f;
    public static final int notification_access_bridged_apps_settings=0x7f1400a0;
    public static final int notification_access_permission_details=0x7f1400a1;
    public static final int notification_access_settings=0x7f1400a2;
    public static final int notification_assistant_settings=0x7f1400a3;
    public static final int notification_group_settings=0x7f1400a4;
    public static final int notification_importance=0x7f1400a5;
    public static final int notification_settings=0x7f1400a6;
    public static final int one_handed_settings=0x7f1400a7;
    public static final int open_supported_links=0x7f1400a8;
    public static final int other_sound_settings=0x7f1400a9;
    public static final int physical_keyboard_settings=0x7f1400aa;
    public static final int pick_up_gesture_settings=0x7f1400ab;
    public static final int picture_in_picture_permissions_details=0x7f1400ac;
    public static final int picture_in_picture_settings=0x7f1400ad;
    public static final int placeholder_preference_screen=0x7f1400ae;
    public static final int placeholder_prefs=0x7f1400af;
    public static final int platform_compat_settings=0x7f1400b0;
    public static final int power_menu_settings=0x7f1400b1;
    public static final int power_usage_advanced=0x7f1400b2;
    public static final int power_usage_detail=0x7f1400b3;
    public static final int power_usage_detail_legacy=0x7f1400b4;
    public static final int power_usage_summary=0x7f1400b5;
    public static final int premium_sms_settings=0x7f1400b6;
    public static final int prevent_ringing_gesture_settings=0x7f1400b7;
    public static final int previously_connected_devices=0x7f1400b8;
    public static final int print_job_settings=0x7f1400b9;
    public static final int print_settings=0x7f1400ba;
    public static final int privacy_dashboard_settings=0x7f1400bb;
    public static final int privacy_settings=0x7f1400bc;
    public static final int process_stats_summary=0x7f1400bd;
    public static final int process_stats_ui=0x7f1400be;
    public static final int profile_challenge_settings=0x7f1400bf;
    public static final int reduce_bright_colors_settings=0x7f1400c0;
    public static final int reset_dashboard_fragment=0x7f1400c1;
    public static final int restricted_apps_detail=0x7f1400c2;
    public static final int screen_lock_settings=0x7f1400c3;
    public static final int screen_off_udfps_settings=0x7f1400c4;
    public static final int screen_pinning_settings=0x7f1400c5;
    public static final int screen_timeout_settings=0x7f1400c6;
    public static final int security_dashboard_settings=0x7f1400c7;
    public static final int security_lockscreen_settings=0x7f1400c8;
    public static final int security_settings_combined_biometric=0x7f1400c9;
    public static final int security_settings_combined_biometric_profile=0x7f1400ca;
    public static final int security_settings_face=0x7f1400cb;
    public static final int security_settings_fingerprint=0x7f1400cc;
    public static final int security_settings_pattern_size=0x7f1400cd;
    public static final int security_settings_picker=0x7f1400ce;
    public static final int setup_security_settings_picker=0x7f1400cf;
    public static final int shortcuts=0x7f1400d0;
    public static final int sim_lock_settings=0x7f1400d1;
    public static final int single_choice_list_item_2=0x7f1400d2;
    public static final int smart_battery_detail=0x7f1400d3;
    public static final int smart_forwarding_mdn_handler=0x7f1400d4;
    public static final int smart_forwarding_mdn_handler_header=0x7f1400d5;
    public static final int smart_forwarding_switch=0x7f1400d6;
    public static final int sound_settings=0x7f1400d7;
    public static final int sound_work_settings=0x7f1400d8;
    public static final int special_access=0x7f1400d9;
    public static final int spellchecker_prefs=0x7f1400da;
    public static final int standalone_badge=0x7f1400db;
    public static final int standalone_badge_gravity_bottom_end=0x7f1400dc;
    public static final int standalone_badge_gravity_bottom_start=0x7f1400dd;
    public static final int standalone_badge_gravity_top_start=0x7f1400de;
    public static final int standalone_badge_offset=0x7f1400df;
    public static final int storage_category_fragment=0x7f1400e0;
    public static final int storage_dashboard_fragment=0x7f1400e1;
    public static final int storage_dashboard_header_fragment=0x7f1400e2;
    public static final int swipe_to_notification_settings=0x7f1400e3;
    public static final int sync_settings=0x7f1400e4;
    public static final int system_dashboard_fragment=0x7f1400e5;
    public static final int system_navigation_gesture_settings=0x7f1400e6;
    public static final int tap_screen_gesture_settings=0x7f1400e7;
    public static final int testing_settings=0x7f1400e8;
    public static final int testing_wifi_settings=0x7f1400e9;
    public static final int tether_prefs=0x7f1400ea;
    public static final int time_zone_prefs=0x7f1400eb;
    public static final int timezones=0x7f1400ec;
    public static final int top_level_settings=0x7f1400ed;
    public static final int transcode_settings=0x7f1400ee;
    public static final int trust_agent_settings=0x7f1400ef;
    public static final int tts_engine_picker=0x7f1400f0;
    public static final int tts_settings=0x7f1400f1;
    public static final int unrestricted_data_access_settings=0x7f1400f2;
    public static final int usage_access_settings=0x7f1400f3;
    public static final int usb_default_fragment=0x7f1400f4;
    public static final int usb_details_fragment=0x7f1400f5;
    public static final int user_details_settings=0x7f1400f6;
    public static final int user_dictionary_list_fragment=0x7f1400f7;
    public static final int user_settings=0x7f1400f8;
    public static final int vibrate_for_calls_settings=0x7f1400f9;
    public static final int virtual_keyboard_settings=0x7f1400fa;
    public static final int voice_input_settings=0x7f1400fb;
    public static final int vpn_app_management=0x7f1400fc;
    public static final int vpn_settings2=0x7f1400fd;
    public static final int vr_display_settings=0x7f1400fe;
    public static final int vr_listeners_settings=0x7f1400ff;
    public static final int wallpaper_settings=0x7f140100;
    public static final int webview_app_settings=0x7f140101;
    public static final int when_to_dream_settings=0x7f140102;
    public static final int wifi_access_points=0x7f140103;
    public static final int wifi_access_points_for_wifi_setup_xl=0x7f140104;
    public static final int wifi_calling_settings=0x7f140105;
    public static final int wifi_configure_settings=0x7f140106;
    public static final int wifi_display_saved_access_points2=0x7f140107;
    public static final int wifi_display_settings=0x7f140108;
    public static final int wifi_dpp_network_list=0x7f140109;
    public static final int wifi_network_details_fragment2=0x7f14010a;
    public static final int wifi_p2p_settings=0x7f14010b;
    public static final int wifi_settings=0x7f14010c;
    public static final int wifi_tether_settings=0x7f14010d;
    public static final int write_system_settings_permissions_details=0x7f14010e;
    public static final int zen_access_permission_details=0x7f14010f;
    public static final int zen_access_settings=0x7f140110;
    public static final int zen_mode_automation_settings=0x7f140111;
    public static final int zen_mode_block_settings=0x7f140112;
    public static final int zen_mode_bypassing_apps=0x7f140113;
    public static final int zen_mode_calls_settings=0x7f140114;
    public static final int zen_mode_conversations_settings=0x7f140115;
    public static final int zen_mode_custom_rule_calls_settings=0x7f140116;
    public static final int zen_mode_custom_rule_configuration=0x7f140117;
    public static final int zen_mode_custom_rule_messages_settings=0x7f140118;
    public static final int zen_mode_custom_rule_settings=0x7f140119;
    public static final int zen_mode_event_rule_settings=0x7f14011a;
    public static final int zen_mode_messages_settings=0x7f14011b;
    public static final int zen_mode_people_settings=0x7f14011c;
    public static final int zen_mode_restrict_notifications_settings=0x7f14011d;
    public static final int zen_mode_schedule_rule_settings=0x7f14011e;
    public static final int zen_mode_settings=0x7f14011f;
    public static final int zen_mode_sound_vibration_settings=0x7f140120;
  }
}