# compiler: R8
# compiler_version: 3.0.41-sc04
# min_api: 32
# pg_map_id: a4b6f60
# common_typos_disable
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesCompatParcelizer -> android.support.v4.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi21Parcelizer -> android.support.v4.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi26Parcelizer -> android.support.v4.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplBaseParcelizer -> android.support.v4.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2278:2289:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    572:572:void <clinit>() -> <clinit>
    546:548:void <init>(android.os.Parcel) -> <init>
    565:569:java.lang.String toString() -> toString
    558:559:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    573:573:void <init>() -> <init>
    573:573:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    576:576:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    573:573:java.lang.Object[] newArray(int) -> newArray
    581:581:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2310:2326:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    426:426:void <clinit>() -> <clinit>
    195:203:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    206:216:void <init>(android.os.Parcel) -> <init>
    380:418:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    336:362:java.lang.Object getMediaDescription() -> getMediaDescription
    321:321:java.lang.String toString() -> toString
    305:315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    427:427:void <init>() -> <init>
    427:427:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    430:433:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    427:427:java.lang.Object[] newArray(int) -> newArray
    439:439:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    459:459:void <init>() -> <init>
    560:560:android.support.v4.media.MediaDescriptionCompat build() -> build
    503:503:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    538:538:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    515:515:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    527:527:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    469:469:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    549:549:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    491:491:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    480:480:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    299:632:void <clinit>() -> <clinit>
    364:365:void <init>(android.os.Parcel) -> <init>
    598:604:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    553:553:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    633:633:void <init>() -> <init>
    633:633:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    636:636:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    633:633:java.lang.Object[] newArray(int) -> newArray
    641:641:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    131:131:void <clinit>() -> <clinit>
    109:111:void <init>(int,float) -> <init>
    122:122:int describeContents() -> describeContents
    116:117:java.lang.String toString() -> toString
    127:128:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    140:140:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    145:145:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    67:68:void <init>() -> <init>
    96:233:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    212:216:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    2051:2051:android.support.v4.media.session.IMediaSession getDefaultImpl() -> getDefaultImpl
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    831:832:void <init>(android.os.IBinder) -> <init>
    836:836:android.os.IBinder asBinder() -> asBinder
    906:921:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    696:701:void <init>() -> <init>
    828:828:void binderDied() -> binderDied
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21:
    860:861:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    934:941:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    925:928:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    901:903:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    888:894:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    909:911:void onQueueChanged(java.util.List) -> onQueueChanged
    917:919:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    866:868:void onSessionDestroyed() -> onSessionDestroyed
    874:881:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    949:950:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    1003:1006:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    955:957:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1034:1036:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    979:981:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    971:973:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    987:989:void onQueueChanged(java.util.List) -> onQueueChanged
    995:997:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1012:1014:void onRepeatModeChanged(int) -> onRepeatModeChanged
    963:965:void onSessionDestroyed() -> onSessionDestroyed
    1055:1057:void onSessionReady() -> onSessionReady
    1025:1028:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1042:1049:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2290:2305:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2318:2331:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2337:2337:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2367:2367:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2349:2349:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2355:2355:void onQueueChanged(java.util.List) -> onQueueChanged
    2361:2361:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2343:2343:void onSessionDestroyed() -> onSessionDestroyed
    2373:2373:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1384:1384:void <init>(int,int,int,int,int) -> <init>
    1389:1394:void <init>(int,androidx.media.AudioAttributesCompat,int,int,int) -> <init>
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    1059:1059:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
    1076:1082:android.os.Bundle unparcelWithClassLoader(android.os.Bundle) -> unparcelWithClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    2270:2270:void <clinit>() -> <clinit>
    2165:2174:void <init>(android.media.session.MediaSession$QueueItem,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    2177:2179:void <init>(android.os.Parcel) -> <init>
    2238:2246:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    2260:2265:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    2286:2286:java.lang.String toString() -> toString
    2198:2199:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    2271:2271:void <init>() -> <init>
    2271:2271:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2275:2275:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    2271:2271:java.lang.Object[] newArray(int) -> newArray
    2280:2280:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    2310:2310:void <clinit>() -> <clinit>
    2305:2306:void <init>(android.os.Parcel) -> <init>
    2329:2329:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    2310:2310:void <init>() -> <init>
    2310:2310:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2313:2313:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    2310:2310:java.lang.Object[] newArray(int) -> newArray
    2318:2318:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    2115:2115:void <clinit>() -> <clinit>
    1930:1930:void <init>(java.lang.Object) -> <init>
    1921:1940:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,androidx.versionedparcelable.VersionedParcelable) -> <init>
    2010:2021:boolean equals(java.lang.Object) -> equals
    2042:2044:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1999:2002:int hashCode() -> hashCode
    2052:2054:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    2072:2074:void setSession2Token(androidx.versionedparcelable.VersionedParcelable) -> setSession2Token
    1990:1993:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    2116:2116:void <init>() -> <init>
    2116:2116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2120:2125:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    2116:2116:java.lang.Object[] newArray(int) -> newArray
    2130:2130:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    67:67:void <clinit>() -> <clinit>
    44:49:void <init>(android.os.Parcel) -> <init>
    59:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    871:871:void <clinit>() -> <clinit>
    564:575:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    578:590:void <init>(android.os.Parcel) -> <init>
    807:836:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    595:607:java.lang.String toString() -> toString
    617:628:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    872:872:void <init>() -> <init>
    872:872:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    875:875:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    872:872:java.lang.Object[] newArray(int) -> newArray
    880:880:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    978:978:void <clinit>() -> <clinit>
    900:904:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    907:911:void <init>(android.os.Parcel) -> <init>
    939:953:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1035:1035:java.lang.String toString() -> toString
    916:919:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    979:979:void <init>() -> <init>
    979:979:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    983:983:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    979:979:java.lang.Object[] newArray(int) -> newArray
    988:988:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    25:26:void <init>() -> <init>
    37:41:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    54:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:83:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    138:141:void <init>(android.os.Parcel) -> <init>
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:58:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:63:void run() -> run
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    50:52:void <init>(android.os.Parcel) -> <init>
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    124:128:void <init>(android.os.Parcel) -> <init>
    151:154:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    62:62:void <init>() -> <init>
    87:88:boolean containsAll(java.util.Collection) -> containsAll
    152:154:java.util.Set entrySet() -> entrySet
    640:644:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    169:171:java.util.Set keySet() -> keySet
    101:103:void putAll(java.util.Map) -> putAll
    113:117:boolean removeAll(java.util.Collection) -> removeAll
    127:133:boolean retainAll(java.util.Collection) -> retainAll
    621:631:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    186:188:java.util.Collection values() -> values
androidx.collection.ArrayMap$EntrySet -> androidx.collection.ArrayMap$EntrySet:
    193:193:void <init>(androidx.collection.ArrayMap) -> <init>
    193:193:boolean add(java.lang.Object) -> add
    197:197:boolean add(java.util.Map$Entry) -> add
    202:206:boolean addAll(java.util.Collection) -> addAll
    211:211:void clear() -> clear
    216:224:boolean contains(java.lang.Object) -> contains
    229:230:boolean containsAll(java.util.Collection) -> containsAll
    282:282:boolean equals(java.lang.Object) -> equals
    288:292:int hashCode() -> hashCode
    239:239:boolean isEmpty() -> isEmpty
    244:244:java.util.Iterator iterator() -> iterator
    250:250:boolean remove(java.lang.Object) -> remove
    256:256:boolean removeAll(java.util.Collection) -> removeAll
    262:262:boolean retainAll(java.util.Collection) -> retainAll
    267:267:int size() -> size
    272:272:java.lang.Object[] toArray() -> toArray
    277:277:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$KeyIterator -> androidx.collection.ArrayMap$KeyIterator:
    495:496:void <init>(androidx.collection.ArrayMap) -> <init>
    501:501:java.lang.Object elementAt(int) -> elementAt
    506:506:void removeAt(int) -> removeAt
androidx.collection.ArrayMap$KeySet -> androidx.collection.ArrayMap$KeySet:
    298:298:void <init>(androidx.collection.ArrayMap) -> <init>
    301:301:boolean add(java.lang.Object) -> add
    306:306:boolean addAll(java.util.Collection) -> addAll
    311:311:void clear() -> clear
    316:316:boolean contains(java.lang.Object) -> contains
    321:321:boolean containsAll(java.util.Collection) -> containsAll
    376:376:boolean equals(java.lang.Object) -> equals
    382:384:int hashCode() -> hashCode
    326:326:boolean isEmpty() -> isEmpty
    331:331:java.util.Iterator iterator() -> iterator
    336:338:boolean remove(java.lang.Object) -> remove
    346:346:boolean removeAll(java.util.Collection) -> removeAll
    351:351:boolean retainAll(java.util.Collection) -> retainAll
    356:356:int size() -> size
    361:364:java.lang.Object[] toArray() -> toArray
    371:371:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$MapIterator -> androidx.collection.ArrayMap$MapIterator:
    531:533:void <init>(androidx.collection.ArrayMap) -> <init>
    589:598:boolean equals(java.lang.Object) -> equals
    562:566:java.lang.Object getKey() -> getKey
    571:575:java.lang.Object getValue() -> getValue
    538:538:boolean hasNext() -> hasNext
    603:610:int hashCode() -> hashCode
    526:526:java.lang.Object next() -> next
    543:545:java.util.Map$Entry next() -> next
    551:557:void remove() -> remove
    580:584:java.lang.Object setValue(java.lang.Object) -> setValue
    615:615:java.lang.String toString() -> toString
androidx.collection.ArrayMap$ValueCollection -> androidx.collection.ArrayMap$ValueCollection:
    390:390:void <init>(androidx.collection.ArrayMap) -> <init>
    393:393:boolean add(java.lang.Object) -> add
    398:398:boolean addAll(java.util.Collection) -> addAll
    403:403:void clear() -> clear
    408:408:boolean contains(java.lang.Object) -> contains
    413:414:boolean containsAll(java.util.Collection) -> containsAll
    423:423:boolean isEmpty() -> isEmpty
    428:428:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    443:448:boolean removeAll(java.util.Collection) -> removeAll
    459:464:boolean retainAll(java.util.Collection) -> retainAll
    475:475:int size() -> size
    480:483:java.lang.Object[] toArray() -> toArray
    490:490:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$ValueIterator -> androidx.collection.ArrayMap$ValueIterator:
    511:512:void <init>(androidx.collection.ArrayMap) -> <init>
    517:517:java.lang.Object elementAt(int) -> elementAt
    522:522:void removeAt(int) -> removeAt
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
androidx.collection.IndexBasedArrayIterator -> androidx.collection.IndexBasedArrayIterator:
    27:28:void <init>(int) -> <init>
    36:36:boolean hasNext() -> hasNext
    41:44:java.lang.Object next() -> next
    50:56:void remove() -> remove
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    687:721:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    381:382:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    738:743:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    423:423:boolean isEmpty() -> isEmpty
    392:392:java.lang.Object keyAt(int) -> keyAt
    437:494:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    528:530:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    543:545:java.lang.Object remove(java.lang.Object) -> remove
    558:562:boolean remove(java.lang.Object,java.lang.Object) -> remove
    576:626:java.lang.Object removeAt(int) -> removeAt
    639:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    655:659:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    414:415:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    670:670:int size() -> size
    757:782:java.lang.String toString() -> toString
    402:402:java.lang.Object valueAt(int) -> valueAt
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3396:3396:void <clinit>() -> <clinit>
    3358:3369:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3379:3392:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3397:3397:void <init>() -> <init>
    3397:3397:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3397:3397:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3400:3400:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3405:3405:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3397:3397:java.lang.Object[] newArray(int) -> newArray
    3410:3410:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    552:553:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    48:64:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:81:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    159:162:void <clinit>() -> <clinit>
    458:461:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    405:408:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    840:840:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    845:845:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    361:383:void <clinit>() -> <clinit>
    360:360:void <init>() -> <init>
    406:416:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    876:878:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    885:886:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    891:892:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    596:597:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    631:645:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    548:553:java.lang.String getType(android.net.Uri) -> getType
    441:442:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    568:568:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    851:869:int modeToMode(java.lang.String) -> modeToMode
    620:622:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    657:709:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    508:532:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    578:578:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    754:757:void <init>(java.lang.String) -> <init>
    765:777:void addRoot(java.lang.String,java.io.File) -> addRoot
    820:839:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    784:815:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:379:void <init>() -> <init>
    1211:1245:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    436:442:int getResId() -> getResId
    1157:1169:int getResId(android.graphics.drawable.Icon) -> getResId
    937:973:void onPostParceling() -> onPostParceling
    900:930:void onPreParceling(boolean) -> onPreParceling
    858:895:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2197:2197:void <clinit>() -> <clinit>
    2179:2180:void <init>(android.os.Parcel) -> <init>
    2192:2193:java.lang.String toString() -> toString
    2185:2186:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2198:2198:void <init>() -> <init>
    2198:2198:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2198:2198:java.lang.Object[] newArray(int) -> newArray
    2206:2206:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2201:2201:void <clinit>() -> <clinit>
    2172:2184:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2193:2198:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2201:2201:void <init>() -> <init>
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2204:2204:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2209:2209:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object[] newArray(int) -> newArray
    2214:2214:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.fragment.app.BackStackRecordState -> androidx.fragment.app.BackStackRecordState:
    204:204:void <clinit>() -> <clinit>
    86:100:void <init>(android.os.Parcel) -> <init>
    188:201:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> androidx.fragment.app.BackStackRecordState$1:
    205:205:void <init>() -> <init>
    205:205:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:208:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel) -> createFromParcel
    205:205:java.lang.Object[] newArray(int) -> newArray
    213:213:androidx.fragment.app.BackStackRecordState[] newArray(int) -> newArray
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    75:75:void <clinit>() -> <clinit>
    40:42:void <init>(android.os.Parcel) -> <init>
    71:72:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    76:76:void <init>() -> <init>
    76:76:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    79:79:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    76:76:java.lang.Object[] newArray(int) -> newArray
    84:84:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    472:475:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    486:486:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3783:3783:void <clinit>() -> <clinit>
    3767:3769:void <init>(android.os.Parcel) -> <init>
    3779:3780:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3784:3784:void <init>() -> <init>
    3784:3784:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3787:3787:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3784:3784:java.lang.Object[] newArray(int) -> newArray
    3792:3792:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:37:void <init>() -> <init>
    32:48:void <init>(android.os.Parcel) -> <init>
    58:65:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    165:165:void <clinit>() -> <clinit>
    59:72:void <init>(android.os.Parcel) -> <init>
    111:140:java.lang.String toString() -> toString
    150:162:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    166:166:void <init>() -> <init>
    166:166:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    169:169:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:java.lang.Object[] newArray(int) -> newArray
    174:174:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    96:97:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    102:103:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    173:185:void <clinit>() -> <clinit>
    250:250:void <init>() -> <init>
    253:254:void <init>(androidx.media.AudioAttributesImpl) -> <init>
    619:626:boolean equals(java.lang.Object) -> equals
    493:493:int hashCode() -> hashCode
    498:498:java.lang.String toString() -> toString
    609:609:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    536:536:java.lang.String usageToString(int) -> usageToString
    305:311:androidx.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
androidx.media.AudioAttributesCompat$Builder -> androidx.media.AudioAttributesCompat$Builder:
    373:381:void <init>() -> <init>
    409:409:androidx.media.AudioAttributesCompat build() -> build
    486:486:androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    14:15:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    21:22:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    46:56:void <init>() -> <init>
    60:60:void <init>(android.media.AudioAttributes) -> <init>
    46:65:void <init>(android.media.AudioAttributes,int) -> <init>
    116:120:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21$Builder -> androidx.media.AudioAttributesImplApi21$Builder:
    132:133:void <init>() -> <init>
    143:143:androidx.media.AudioAttributesImpl build() -> build
    129:129:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    174:174:androidx.media.AudioAttributesImplApi21$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi26 -> androidx.media.AudioAttributesImplApi26:
    41:41:void <init>() -> <init>
    45:45:void <init>(android.media.AudioAttributes) -> <init>
androidx.media.AudioAttributesImplApi26$Builder -> androidx.media.AudioAttributesImplApi26$Builder:
    55:55:void <init>() -> <init>
    65:65:androidx.media.AudioAttributesImpl build() -> build
androidx.media.AudioAttributesImplApi26Parcelizer -> androidx.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    63:91:void <init>() -> <init>
    63:97:void <init>(int,int,int,int) -> <init>
    156:162:boolean equals(java.lang.Object) -> equals
    126:126:int getContentType() -> getContentType
    136:137:int getFlags() -> getFlags
    113:116:int getLegacyStreamType() -> getLegacyStreamType
    131:131:int getUsage() -> getUsage
    151:151:int hashCode() -> hashCode
    169:180:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBase$Builder -> androidx.media.AudioAttributesImplBase$Builder:
    184:189:void <init>() -> <init>
    202:202:androidx.media.AudioAttributesImpl build() -> build
    277:313:androidx.media.AudioAttributesImplBase$Builder setInternalLegacyStreamType(int) -> setInternalLegacyStreamType
    183:183:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    266:271:androidx.media.AudioAttributesImplBase$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    14:18:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    24:28:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    1503:1503:void <clinit>() -> <clinit>
    1493:1494:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1499:1500:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
    1503:1503:void <init>() -> <init>
    1503:1503:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1503:1503:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1506:1506:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1511:1511:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1503:1503:java.lang.Object[] newArray(int) -> newArray
    1516:1516:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
    264:264:void <clinit>() -> <clinit>
    254:255:void <init>(android.os.Parcel) -> <init>
    260:261:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
    265:265:void <init>() -> <init>
    265:265:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    268:268:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    265:265:java.lang.Object[] newArray(int) -> newArray
    273:273:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
    58:61:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:114:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    87:90:void <init>(androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap) -> <init>
    1635:1640:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1613:1617:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1624:1628:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    400:403:boolean readBoolean(boolean,int) -> readBoolean
    473:476:byte[] readByteArray(byte[],int) -> readByteArray
    617:620:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1566:1582:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    410:413:int readInt(int,int) -> readInt
    482:485:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    452:455:java.lang.String readString(java.lang.String,int) -> readString
    1496:1499:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1512:1516:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    295:296:void writeBoolean(boolean,int) -> writeBoolean
    305:306:void writeByteArray(byte[],int) -> writeByteArray
    326:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    335:336:void writeInt(int,int) -> writeInt
    392:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    371:372:void writeString(java.lang.String,int) -> writeString
    1591:1607:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1022:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1030:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1043:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:120:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1403:1403:void <clinit>() -> <clinit>
    1420:1426:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1398:1399:java.lang.String toString() -> toString
    1391:1393:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1403:1403:void <init>() -> <init>
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1406:1406:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1411:1411:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object[] newArray(int) -> newArray
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
com.android.apps.tag.TagViewer -> com.android.apps.tag.TagViewer:
    41:41:void <init>() -> <init>
    78:82:void addView(android.view.LayoutInflater,android.widget.LinearLayout,android.view.View) -> addView
    86:108:void buildTagViews(android.nfc.NdefMessage) -> buildTagViews
    122:122:void onClick(android.view.View) -> onClick
    48:54:void onCreate(android.os.Bundle) -> onCreate
    116:117:void onNewIntent(android.content.Intent) -> onNewIntent
    59:71:void resolveIntent(android.content.Intent) -> resolveIntent
com.android.apps.tag.message.NdefMessageParser -> com.android.apps.tag.message.NdefMessageParser:
    48:48:java.util.List getRecords(android.nfc.NdefMessage) -> getRecords
    52:67:java.util.List getRecords(android.nfc.NdefRecord[]) -> getRecords
    44:44:com.android.apps.tag.message.ParsedNdefMessage parse(android.nfc.NdefMessage) -> parse
com.android.apps.tag.message.ParsedNdefMessage -> com.android.apps.tag.message.ParsedNdefMessage:
    37:38:void <init>(java.util.List) -> <init>
    45:45:java.util.List getRecords() -> getRecords
com.android.apps.tag.record.ImageRecord -> com.android.apps.tag.record.ImageRecord:
    42:43:void <init>(android.graphics.Bitmap) -> <init>
    48:49:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
    71:71:boolean isImage(android.nfc.NdefRecord) -> isImage
    54:66:com.android.apps.tag.record.ImageRecord parse(android.nfc.NdefRecord) -> parse
com.android.apps.tag.record.MimeRecord -> com.android.apps.tag.record.MimeRecord:
    42:45:void <init>(java.lang.String,byte[]) -> <init>
    55:55:byte[] getContent() -> getContent
    50:50:java.lang.String getMimeType() -> getMimeType
    60:61:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
    76:76:boolean isMime(android.nfc.NdefRecord) -> isMime
    71:72:com.android.apps.tag.record.MimeRecord parse(android.nfc.NdefRecord) -> parse
com.android.apps.tag.record.ParsedNdefRecord -> com.android.apps.tag.record.ParsedNdefRecord:
    32:32:void <init>() -> <init>
com.android.apps.tag.record.RecordUtils -> com.android.apps.tag.record.RecordUtils:
    108:124:android.view.View buildActivityView(android.app.Activity,android.content.pm.ResolveInfo,android.content.pm.PackageManager,android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener,android.content.Intent,java.lang.String) -> buildActivityView
    66:95:android.view.View getViewsForIntent(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener,android.content.Intent,java.lang.String) -> getViewsForIntent
com.android.apps.tag.record.RecordUtils$ClickInfo -> com.android.apps.tag.record.RecordUtils$ClickInfo:
    53:55:void <init>(android.app.Activity,android.content.Intent) -> <init>
com.android.apps.tag.record.SmartPoster -> com.android.apps.tag.record.SmartPoster:
    233:247:void <clinit>() -> <clinit>
    105:110:void <init>(com.android.apps.tag.record.UriRecord,com.android.apps.tag.record.TextRecord,com.android.apps.tag.record.ImageRecord,com.android.apps.tag.record.SmartPoster$RecommendedAction,java.lang.String) -> <init>
    225:226:android.nfc.NdefRecord getByType(byte[],android.nfc.NdefRecord[]) -> getByType
    193:196:java.lang.Object getFirstIfExists(java.lang.Iterable,java.lang.Class) -> getFirstIfExists
    161:174:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
    152:152:boolean isPoster(android.nfc.NdefRecord) -> isPoster
    125:131:com.android.apps.tag.record.SmartPoster parse(android.nfc.NdefRecord) -> parse
    137:146:com.android.apps.tag.record.SmartPoster parse(android.nfc.NdefRecord[]) -> parse
    236:244:com.android.apps.tag.record.SmartPoster$RecommendedAction parseRecommendedAction(android.nfc.NdefRecord[]) -> parseRecommendedAction
    250:254:java.lang.String parseType(android.nfc.NdefRecord[]) -> parseType
com.android.apps.tag.record.SmartPoster$RecommendedAction -> com.android.apps.tag.record.SmartPoster$RecommendedAction:
    201:211:void <clinit>() -> <clinit>
    216:217:void <init>(java.lang.String,int,byte) -> <init>
    201:201:com.google.common.collect.ImmutableMap access$000() -> access$000
    220:220:byte getByte() -> getByte
    201:201:com.android.apps.tag.record.SmartPoster$RecommendedAction valueOf(java.lang.String) -> valueOf
    201:201:com.android.apps.tag.record.SmartPoster$RecommendedAction[] values() -> values
com.android.apps.tag.record.TextRecord -> com.android.apps.tag.record.TextRecord:
    48:50:void <init>(java.lang.String,java.lang.String) -> <init>
    76:76:java.lang.String getLanguageCode() -> getLanguageCode
    55:56:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
    121:121:boolean isText(android.nfc.NdefRecord) -> isText
    130:130:android.nfc.NdefRecord newTextRecord(java.lang.String,java.util.Locale) -> newTextRecord
    134:151:android.nfc.NdefRecord newTextRecord(java.lang.String,java.util.Locale,boolean) -> newTextRecord
    81:115:com.android.apps.tag.record.TextRecord parse(android.nfc.NdefRecord) -> parse
com.android.apps.tag.record.UnknownRecord -> com.android.apps.tag.record.UnknownRecord:
    27:27:void <init>() -> <init>
    31:32:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
com.android.apps.tag.record.UriRecord -> com.android.apps.tag.record.UriRecord:
    66:67:void <init>(android.net.Uri) -> <init>
    71:77:android.content.Intent getIntentForUri() -> getIntentForUri
    82:97:java.lang.String getPrettyUriString(android.content.Context) -> getPrettyUriString
    136:136:android.net.Uri getUri() -> getUri
    103:104:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
    153:153:boolean isUri(android.nfc.NdefRecord) -> isUri
    114:130:void onClick(android.view.View) -> onClick
    147:149:com.android.apps.tag.record.UriRecord parse(android.nfc.NdefRecord) -> parse
    165:182:boolean requestPermissionIfNeeded(android.app.Activity,android.content.Intent) -> requestPermissionIfNeeded
com.android.apps.tag.record.VCardRecord -> com.android.apps.tag.record.VCardRecord:
    72:72:void <clinit>() -> <clinit>
    78:79:void <init>(byte[]) -> <init>
    109:111:java.lang.String getDisplayName() -> getDisplayName
    120:140:java.util.ArrayList getVCardEntries() -> getVCardEntries
    85:98:android.view.View getView(android.app.Activity,android.view.LayoutInflater,android.view.ViewGroup,int) -> getView
    180:180:boolean isVCard(android.nfc.NdefRecord) -> isVCard
    168:174:void onClick(android.view.View) -> onClick
    155:159:com.android.apps.tag.record.VCardRecord parse(android.nfc.NdefRecord) -> parse
com.android.apps.tag.record.VCardRecord$1 -> com.android.apps.tag.record.VCardRecord$1:
    124:124:void <init>(com.android.apps.tag.record.VCardRecord,java.util.ArrayList) -> <init>
    130:130:void onEntryCreated(com.android.vcard.VCardEntry) -> onEntryCreated
com.android.vcard.VCardConfig -> com.android.vcard.VCardConfig:
    391:405:void <clinit>() -> <clinit>
    469:469:boolean isJapaneseDevice(int) -> isJapaneseDevice
com.android.vcard.VCardEntry -> com.android.vcard.VCardEntry:
    73:1863:void <clinit>() -> <clinit>
    1767:1767:void <init>() -> <init>
    1771:1771:void <init>(int) -> <init>
    90:1776:void <init>(int,android.accounts.Account) -> <init>
    2475:2478:void addChild(com.android.vcard.VCardEntry) -> addChild
    1835:1838:void addEmail(int,java.lang.String,java.lang.String,boolean) -> addEmail
    1978:1981:void addIm(int,java.lang.String,java.lang.String,int,boolean) -> addIm
    1855:1858:void addNewOrganization(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> addNewOrganization
    1828:1831:void addNickName(java.lang.String) -> addNickName
    1985:1988:void addNote(java.lang.String) -> addNote
    1780:1817:void addPhone(int,java.lang.String,java.lang.String,boolean) -> addPhone
    1992:1996:void addPhotoBytes(java.lang.String,byte[],boolean) -> addPhotoBytes
    1842:1845:void addPostal(int,java.util.List,java.lang.String,boolean) -> addPostal
    2139:2425:void addProperty(com.android.vcard.VCardProperty) -> addProperty
    1821:1824:void addSip(java.lang.String,int,java.lang.String,boolean) -> addSip
    1866:1879:java.lang.String buildSinglePhoneticNameFromSortAsParam(java.util.Map) -> buildSinglePhoneticNameFromSortAsParam
    2522:2522:void consolidateFields() -> consolidateFields
    2495:2510:java.lang.String constructDisplayName() -> constructDisplayName
    2669:2672:java.lang.String getDisplayName() -> getDisplayName
    2482:2486:void handleAndroidCustomProperty(java.util.List) -> handleAndroidCustomProperty
    2045:2067:void handleNProperty(java.util.List,java.util.Map) -> handleNProperty
    1894:1948:void handleOrgValue(int,java.util.List,java.util.Map,boolean) -> handleOrgValue
    2079:2134:void handlePhoneticNameFromSound(java.util.List) -> handlePhoneticNameFromSound
    2436:2471:void handleSipCase(java.lang.String,java.util.Collection) -> handleSipCase
    1959:1973:void handleTitleValue(java.lang.String) -> handleTitleValue
    1599:1626:void iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator) -> iterateAllData
    1631:1636:void iterateOneList(java.util.List,com.android.vcard.VCardEntry$EntryElementIterator) -> iterateOneList
    2599:2611:java.lang.String listToString(java.util.List) -> listToString
    1761:1763:java.lang.String toString() -> toString
    2009:2035:void tryHandleSortAsName(java.util.Map) -> tryHandleSortAsName
com.android.vcard.VCardEntry$AndroidCustomData -> com.android.vcard.VCardEntry$AndroidCustomData:
    1451:1453:void <init>(java.lang.String,java.util.List) -> <init>
    1463:1473:com.android.vcard.VCardEntry$AndroidCustomData constructAndroidCustomData(java.util.List) -> constructAndroidCustomData
    1503:1518:boolean equals(java.lang.Object) -> equals
    1547:1547:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1528:1531:int hashCode() -> hashCode
    1539:1542:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$AnniversaryData -> com.android.vcard.VCardEntry$AnniversaryData:
    1304:1305:void <init>(java.lang.String) -> <init>
    1330:1334:boolean equals(java.lang.Object) -> equals
    1349:1349:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1339:1339:int hashCode() -> hashCode
    1344:1344:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$BirthdayData -> com.android.vcard.VCardEntry$BirthdayData:
    1248:1249:void <init>(java.lang.String) -> <init>
    1274:1278:boolean equals(java.lang.Object) -> equals
    1293:1293:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1283:1283:int hashCode() -> hashCode
    1288:1288:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$EmailData -> com.android.vcard.VCardEntry$EmailData:
    415:419:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    408:408:java.lang.String access$1500(com.android.vcard.VCardEntry$EmailData) -> access$1500
    451:457:boolean equals(java.lang.Object) -> equals
    478:478:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    463:466:int hashCode() -> hashCode
    472:473:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$EntryLabel -> com.android.vcard.VCardEntry$EntryLabel:
    99:113:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:com.android.vcard.VCardEntry$EntryLabel valueOf(java.lang.String) -> valueOf
    99:99:com.android.vcard.VCardEntry$EntryLabel[] values() -> values
com.android.vcard.VCardEntry$ImData -> com.android.vcard.VCardEntry$ImData:
    891:896:void <init>(int,java.lang.String,java.lang.String,int,boolean) -> <init>
    928:935:boolean equals(java.lang.Object) -> equals
    958:958:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    941:945:int hashCode() -> hashCode
    951:953:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$NameData -> com.android.vcard.VCardEntry$NameData:
    133:133:void <init>() -> <init>
    133:133:java.lang.String access$1000(com.android.vcard.VCardEntry$NameData) -> access$1000
    133:133:java.lang.String access$1002(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1002
    133:133:java.lang.String access$1100(com.android.vcard.VCardEntry$NameData) -> access$1100
    133:133:java.lang.String access$1102(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1102
    133:133:java.lang.String access$1200(com.android.vcard.VCardEntry$NameData) -> access$1200
    133:133:java.lang.String access$1202(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1202
    133:133:java.lang.String access$1300(com.android.vcard.VCardEntry$NameData) -> access$1300
    133:133:java.lang.String access$1302(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1302
    133:133:java.lang.String access$1402(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1402
    133:133:java.lang.String access$500(com.android.vcard.VCardEntry$NameData) -> access$500
    133:133:java.lang.String access$502(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$502
    133:133:java.lang.String access$600(com.android.vcard.VCardEntry$NameData) -> access$600
    133:133:java.lang.String access$602(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$602
    133:133:java.lang.String access$700(com.android.vcard.VCardEntry$NameData) -> access$700
    133:133:java.lang.String access$702(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$702
    133:133:java.lang.String access$800(com.android.vcard.VCardEntry$NameData) -> access$800
    133:133:java.lang.String access$802(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$802
    133:133:java.lang.String access$900(com.android.vcard.VCardEntry$NameData) -> access$900
    133:133:java.lang.String access$902(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$902
    168:169:boolean emptyPhoneticStructuredName() -> emptyPhoneticStructuredName
    162:164:boolean emptyStructuredName() -> emptyStructuredName
    235:249:boolean equals(java.lang.Object) -> equals
    272:272:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    254:259:int hashCode() -> hashCode
    266:266:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$NicknameData -> com.android.vcard.VCardEntry$NicknameData:
    1082:1083:void <init>(java.lang.String) -> <init>
    1105:1109:boolean equals(java.lang.Object) -> equals
    1124:1124:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1114:1114:int hashCode() -> hashCode
    1119:1119:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$NoteData -> com.android.vcard.VCardEntry$NoteData:
    1135:1136:void <init>(java.lang.String) -> <init>
    1160:1164:boolean equals(java.lang.Object) -> equals
    1179:1179:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1169:1169:int hashCode() -> hashCode
    1174:1174:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$OrganizationData -> com.android.vcard.VCardEntry$OrganizationData:
    756:762:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> <init>
    743:743:java.lang.String access$100(com.android.vcard.VCardEntry$OrganizationData) -> access$100
    743:743:java.lang.String access$102(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$102
    743:743:java.lang.String access$200(com.android.vcard.VCardEntry$OrganizationData) -> access$200
    743:743:java.lang.String access$202(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$202
    743:743:boolean access$302(com.android.vcard.VCardEntry$OrganizationData,boolean) -> access$302
    743:743:java.lang.String access$400(com.android.vcard.VCardEntry$OrganizationData) -> access$400
    743:743:java.lang.String access$402(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$402
    825:832:boolean equals(java.lang.Object) -> equals
    855:855:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    766:785:java.lang.String getFormattedString() -> getFormattedString
    838:842:int hashCode() -> hashCode
    848:850:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$PhoneData -> com.android.vcard.VCardEntry$PhoneData:
    325:329:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    315:315:java.lang.String access$1600(com.android.vcard.VCardEntry$PhoneData) -> access$1600
    361:367:boolean equals(java.lang.Object) -> equals
    388:388:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    373:376:int hashCode() -> hashCode
    382:383:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$PhotoData -> com.android.vcard.VCardEntry$PhotoData:
    995:1000:void <init>(java.lang.String,byte[],boolean) -> <init>
    1027:1032:boolean equals(java.lang.Object) -> equals
    1063:1063:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1038:1051:int hashCode() -> hashCode
    1057:1058:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$PostalData -> com.android.vcard.VCardEntry$PostalData:
    519:530:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,boolean,int) -> <init>
    540:561:com.android.vcard.VCardEntry$PostalData constructPostalData(java.util.List,int,java.lang.String,boolean,int) -> constructPostalData
    658:672:boolean equals(java.lang.Object) -> equals
    699:699:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    607:639:java.lang.String getFormattedAddress(int) -> getFormattedAddress
    677:684:int hashCode() -> hashCode
    691:693:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$SipData -> com.android.vcard.VCardEntry$SipData:
    1366:1374:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    1405:1411:boolean equals(java.lang.Object) -> equals
    1431:1431:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1417:1420:int hashCode() -> hashCode
    1426:1426:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$ToStringIterator -> com.android.vcard.VCardEntry$ToStringIterator:
    1675:1675:void <init>(com.android.vcard.VCardEntry) -> <init>
    1675:1675:void <init>(com.android.vcard.VCardEntry,com.android.vcard.VCardEntry$1) -> <init>
    1694:1698:boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
    1704:1704:void onElementGroupEnded() -> onElementGroupEnded
    1688:1689:void onElementGroupStarted(com.android.vcard.VCardEntry$EntryLabel) -> onElementGroupStarted
    1709:1709:void onIterationEnded() -> onIterationEnded
    1682:1683:void onIterationStarted() -> onIterationStarted
    1714:1714:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$WebsiteData -> com.android.vcard.VCardEntry$WebsiteData:
    1190:1191:void <init>(java.lang.String) -> <init>
    1218:1222:boolean equals(java.lang.Object) -> equals
    1237:1237:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1227:1227:int hashCode() -> hashCode
    1232:1232:java.lang.String toString() -> toString
com.android.vcard.VCardEntryConstructor -> com.android.vcard.VCardEntryConstructor:
    63:63:void <init>(int) -> <init>
    50:78:void <init>(int,android.accounts.Account,java.lang.String) -> <init>
    82:82:void addEntryHandler(com.android.vcard.VCardEntryHandler) -> addEntryHandler
    112:125:void onEntryEnded() -> onEntryEnded
    106:107:void onEntryStarted() -> onEntryStarted
    130:130:void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
    94:95:void onVCardEnded() -> onVCardEnded
    87:88:void onVCardStarted() -> onVCardStarted
com.android.vcard.VCardParser -> com.android.vcard.VCardParser:
    23:23:void <init>() -> <init>
    83:84:void parse(java.io.InputStream,com.android.vcard.VCardInterpreter) -> parse
com.android.vcard.VCardParserImpl_V21 -> com.android.vcard.VCardParserImpl_V21:
    104:161:void <init>(int) -> <init>
    998:998:void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    365:433:com.android.vcard.VCardProperty constructPropertyData(java.lang.String) -> constructPropertyData
    982:982:java.util.Set getAvailableEncodingSet() -> getAvailableEncodingSet
    834:872:java.lang.String getBase64(java.lang.String) -> getBase64
    970:970:java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
    974:974:java.util.Set getKnownTypeSet() -> getKnownTypeSet
    978:978:java.util.Set getKnownValueSet() -> getKnownValueSet
    182:182:java.lang.String getLine() -> getLine
    197:200:java.lang.String getNonEmptyLine() -> getNonEmptyLine
    808:830:java.lang.String getPotentialMultiline(java.lang.String) -> getPotentialMultiline
    889:902:java.lang.String getPropertyNameUpperCase(java.lang.String) -> getPropertyNameUpperCase
    767:793:java.lang.String getQuotedPrintablePart(java.lang.String) -> getQuotedPrintablePart
    701:735:void handleAdrOrgN(com.android.vcard.VCardProperty,java.lang.String,java.lang.String,java.lang.String) -> handleAdrOrgN
    916:923:void handleAgent(com.android.vcard.VCardProperty) -> handleAgent
    568:568:void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> handleAnyParam
    526:527:void handleCharset(com.android.vcard.VCardProperty,java.lang.String) -> handleCharset
    508:514:void handleEncoding(com.android.vcard.VCardProperty,java.lang.String) -> handleEncoding
    535:553:void handleLanguage(com.android.vcard.VCardProperty,java.lang.String) -> handleLanguage
    349:354:void handleNest() -> handleNest
    473:473:void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String) -> handleParamWithoutName
    445:465:void handleParams(com.android.vcard.VCardProperty,java.lang.String) -> handleParams
    573:694:void handlePropertyValue(com.android.vcard.VCardProperty,java.lang.String) -> handlePropertyValue
    480:486:void handleType(com.android.vcard.VCardProperty,java.lang.String) -> handleType
    493:500:void handleValue(com.android.vcard.VCardProperty,java.lang.String) -> handleValue
    168:172:boolean isValidPropertyName(java.lang.String) -> isValidPropertyName
    1003:1028:void parse(java.io.InputStream) -> parse
    305:326:boolean parseItem() -> parseItem
    333:344:void parseItemInter(com.android.vcard.VCardProperty,java.lang.String) -> parseItemInter
    283:292:void parseItems() -> parseItems
    216:229:boolean parseOneVCard() -> parseOneVCard
    186:186:java.lang.String peekLine() -> peekLine
    244:267:boolean readBeginVCard(boolean) -> readBeginVCard
    949:949:java.lang.String unescapeCharacter(char) -> unescapeCharacter
com.android.vcard.VCardParserImpl_V21$CustomBufferedReader -> com.android.vcard.VCardParserImpl_V21$CustomBufferedReader:
    58:58:void <init>(java.io.Reader) -> <init>
    81:91:java.lang.String peekLine() -> peekLine
    63:73:java.lang.String readLine() -> readLine
com.android.vcard.VCardParserImpl_V30 -> com.android.vcard.VCardParserImpl_V30:
    42:49:void <init>(int) -> <init>
    272:272:java.lang.String encodeParamValue(java.lang.String) -> encodeParamValue
    361:361:java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
    74:79:java.lang.String getLine() -> getLine
    91:123:java.lang.String getNonEmptyLine() -> getNonEmptyLine
    296:298:void handleAgent(com.android.vcard.VCardProperty) -> handleAgent
    164:164:void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> handleAnyParam
    169:169:void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String) -> handleParamWithoutName
    147:155:void handleParams(com.android.vcard.VCardProperty,java.lang.String) -> handleParams
    186:186:void handleType(com.android.vcard.VCardProperty,java.lang.String) -> handleType
    324:324:java.lang.String maybeUnescapeText(java.lang.String) -> maybeUnescapeText
    64:68:java.lang.String peekLine() -> peekLine
    137:137:boolean readBeginVCard(boolean) -> readBeginVCard
    212:263:void splitAndPutParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> splitAndPutParam
    355:355:java.lang.String unescapeCharacter(char) -> unescapeCharacter
    328:343:java.lang.String unescapeText(java.lang.String) -> unescapeText
com.android.vcard.VCardParserImpl_V40 -> com.android.vcard.VCardParserImpl_V40:
    84:84:java.lang.String unescapeCharacter(char) -> unescapeCharacter
com.android.vcard.VCardParser_V21 -> com.android.vcard.VCardParser_V21:
    47:85:void <clinit>() -> <clinit>
    97:98:void <init>(int) -> <init>
    103:103:void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    108:108:void parse(java.io.InputStream) -> parse
com.android.vcard.VCardParser_V30 -> com.android.vcard.VCardParser_V30:
    42:64:void <clinit>() -> <clinit>
    76:77:void <init>(int) -> <init>
    82:82:void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    87:87:void parse(java.io.InputStream) -> parse
com.android.vcard.VCardProperty -> com.android.vcard.VCardProperty:
    60:65:void <init>() -> <init>
    81:84:void addGroup(java.lang.String) -> addGroup
    94:104:void addParameter(java.lang.String,java.lang.String) -> addParameter
    167:167:byte[] getByteValue() -> getByteValue
    143:143:java.lang.String getName() -> getName
    151:151:java.util.Map getParameterMap() -> getParameterMap
    155:155:java.util.Collection getParameters(java.lang.String) -> getParameters
    159:159:java.lang.String getRawValue() -> getRawValue
    163:163:java.util.List getValueList() -> getValueList
    139:139:void setByteValue(byte[]) -> setByteValue
    73:77:void setName(java.lang.String) -> setName
    108:108:void setRawValue(java.lang.String) -> setRawValue
    115:115:void setValues(java.lang.String[]) -> setValues
    119:119:void setValues(java.util.List) -> setValues
com.android.vcard.VCardUtils -> com.android.vcard.VCardUtils:
    129:578:void <clinit>() -> <clinit>
    709:714:boolean appearsLikeAndroidVCardQuotedPrintable(java.lang.String) -> appearsLikeAndroidVCardQuotedPrintable
    376:409:java.util.List constructListFromValue(java.lang.String,int) -> constructListFromValue
    336:336:java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    343:366:java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    417:417:boolean containsOnlyPrintableAscii(java.lang.String[]) -> containsOnlyPrintableAscii
    424:428:boolean containsOnlyPrintableAscii(java.util.Collection) -> containsOnlyPrintableAscii
    834:846:java.lang.String convertStringCharset(java.lang.String,java.lang.String,java.lang.String) -> convertStringCharset
    327:327:int getPhoneNumberFormat(int) -> getPhoneNumberFormat
    202:272:java.lang.Object getPhoneTypeFromStrings(java.util.Collection,java.lang.String) -> getPhoneTypeFromStrings
    733:815:java.lang.String parseQuotedPrintable(java.lang.String,boolean,java.lang.String,java.lang.String) -> parseQuotedPrintable
    295:299:java.lang.String[] sortNameElements(int,java.lang.String,java.lang.String,java.lang.String) -> sortNameElements
com.android.vcard.VCardUtils$DecoderException -> com.android.vcard.VCardUtils$DecoderException:
    51:51:void <init>(java.lang.String) -> <init>
com.android.vcard.VCardUtils$PhoneNumberUtilsPort -> com.android.vcard.VCardUtils$PhoneNumberUtilsPort:
    92:94:java.lang.String formatNumber(java.lang.String,int) -> formatNumber
com.android.vcard.VCardUtils$QuotedPrintableCodecPort -> com.android.vcard.VCardUtils$QuotedPrintableCodecPort:
    65:83:byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
com.android.vcard.VCardUtils$TextUtilsPort -> com.android.vcard.VCardUtils$TextUtilsPort:
    109:111:boolean isPrintableAsciiOnly(java.lang.CharSequence) -> isPrintableAsciiOnly
com.android.vcard.exception.VCardAgentNotSupportedException -> com.android.vcard.exception.VCardAgentNotSupportedException:
    20:20:void <init>() -> <init>
    24:24:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardException -> com.android.vcard.exception.VCardException:
    23:23:void <init>() -> <init>
    32:32:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardInvalidCommentLineException -> com.android.vcard.exception.VCardInvalidCommentLineException:
    26:26:void <init>() -> <init>
    30:30:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardInvalidLineException -> com.android.vcard.exception.VCardInvalidLineException:
    25:25:void <init>() -> <init>
    29:29:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardNotSupportedException -> com.android.vcard.exception.VCardNotSupportedException:
    28:28:void <init>() -> <init>
    31:31:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardVersionException -> com.android.vcard.exception.VCardVersionException:
    23:23:void <init>() -> <init>
    26:26:void <init>(java.lang.String) -> <init>
com.google.common.base.Absent -> com.google.common.base.Absent:
    27:27:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    48:48:java.lang.Object or(java.lang.Object) -> or
    96:96:java.lang.Object readResolve() -> readResolve
    31:31:com.google.common.base.Optional withType() -> withType
com.google.common.base.AbstractIterator -> com.google.common.base.AbstractIterator:
    31:33:void <init>() -> <init>
    49:49:java.lang.Object endOfData() -> endOfData
    55:63:boolean hasNext() -> hasNext
    78:83:java.lang.Object next() -> next
    89:89:void remove() -> remove
    67:70:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.base.AbstractIterator$1 -> com.google.common.base.AbstractIterator$1:
    56:56:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator$State -> com.google.common.base.AbstractIterator$State:
    35:39:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    35:35:com.google.common.base.AbstractIterator$State[] values() -> values
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    407:417:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    359:359:void <init>() -> <init>
    64:64:java.lang.String access$100(char) -> access$100
    63:63:boolean apply(java.lang.Object) -> apply
    909:909:boolean apply(java.lang.Character) -> apply
    560:563:int indexIn(java.lang.CharSequence,int) -> indexIn
    295:295:com.google.common.base.CharMatcher is(char) -> is
    127:127:com.google.common.base.CharMatcher none() -> none
    927:932:java.lang.String showCharacter(char) -> showCharacter
com.google.common.base.CharMatcher$FastMatcher -> com.google.common.base.CharMatcher$FastMatcher:
    938:938:void <init>() -> <init>
com.google.common.base.CharMatcher$Is -> com.google.common.base.CharMatcher$Is:
    1609:1610:void <init>(char) -> <init>
    1615:1615:boolean matches(char) -> matches
    1646:1646:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$NamedFastMatcher -> com.google.common.base.CharMatcher$NamedFastMatcher:
    956:957:void <init>(java.lang.String) -> <init>
    962:962:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$None -> com.google.common.base.CharMatcher$None:
    1107:1107:void <clinit>() -> <clinit>
    1110:1110:void <init>() -> <init>
    1126:1127:int indexIn(java.lang.CharSequence,int) -> indexIn
com.google.common.base.CharMatcher$Whitespace -> com.google.common.base.CharMatcher$Whitespace:
    1221:1223:void <clinit>() -> <clinit>
    1226:1226:void <init>() -> <init>
    1231:1231:boolean matches(char) -> matches
com.google.common.base.Charsets -> com.google.common.base.Charsets:
    45:94:void <clinit>() -> <clinit>
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    43:43:void <init>() -> <init>
    313:313:com.google.common.base.Equivalence equals() -> equals
    69:69:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    102:102:int hash(java.lang.Object) -> hash
    325:325:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    330:330:void <clinit>() -> <clinit>
    328:328:void <init>() -> <init>
    334:334:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    339:339:int doHash(java.lang.Object) -> doHash
    343:343:java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    351:351:void <clinit>() -> <clinit>
    349:349:void <init>() -> <init>
    360:360:int doHash(java.lang.Object) -> doHash
    364:364:java.lang.Object readResolve() -> readResolve
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    79:80:void <init>(java.lang.String) -> <init>
    104:109:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    139:139:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    69:69:com.google.common.base.Joiner on(java.lang.String) -> on
    456:457:java.lang.CharSequence toString(java.lang.Object) -> toString
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    64:64:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    108:108:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    143:143:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    145:151:void <init>(java.lang.String) -> <init>
    174:174:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    224:224:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    364:365:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    370:371:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    376:378:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    245:245:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    337:360:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    382:382:void <init>() -> <init>
    382:382:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    52:52:boolean equal(java.lang.Object,java.lang.Object) -> equal
    77:77:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Optional -> com.google.common.base.Optional:
    119:119:void <init>() -> <init>
    93:93:com.google.common.base.Optional absent() -> absent
com.google.common.base.Platform -> com.google.common.base.Platform:
    33:34:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    84:84:com.google.common.base.PatternCompiler loadPatternCompiler() -> loadPatternCompiler
    41:41:long systemNanoTime() -> systemNanoTime
com.google.common.base.Platform$JdkPatternCompiler -> com.google.common.base.Platform$JdkPatternCompiler:
    91:91:void <init>() -> <init>
    91:91:void <init>(com.google.common.base.Platform$1) -> <init>
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    1409:1413:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    1454:1458:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    1483:1489:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    128:128:void checkArgument(boolean) -> checkArgument
    142:142:void checkArgument(boolean,java.lang.Object) -> checkArgument
    217:217:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    301:301:void checkArgument(boolean,java.lang.String,int,int) -> checkArgument
    444:444:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object) -> checkArgument
    1384:1384:int checkElementIndex(int,int) -> checkElementIndex
    1402:1402:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    890:890:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    910:910:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    1429:1429:int checkPositionIndex(int,int) -> checkPositionIndex
    1447:1447:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    1477:1477:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    495:495:void checkState(boolean) -> checkState
    511:511:void checkState(boolean,java.lang.Object) -> checkState
    563:563:void checkState(boolean,java.lang.String,int) -> checkState
    592:592:void checkState(boolean,java.lang.String,java.lang.Object) -> checkState
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    173:173:com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
com.google.common.base.Predicates$InstanceOfPredicate -> com.google.common.base.Predicates$InstanceOfPredicate:
    475:475:void <init>(java.lang.Class,com.google.common.base.Predicates$1) -> <init>
    478:479:void <init>(java.lang.Class) -> <init>
    484:484:boolean apply(java.lang.Object) -> apply
    494:496:boolean equals(java.lang.Object) -> equals
    489:489:int hashCode() -> hashCode
    503:503:java.lang.String toString() -> toString
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    107:107:void <init>(com.google.common.base.Splitter$Strategy) -> <init>
    110:114:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int) -> <init>
    100:100:java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> access$000
    100:100:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    100:100:boolean access$300(com.google.common.base.Splitter) -> access$300
    100:100:int access$400(com.google.common.base.Splitter) -> access$400
    319:319:com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    125:125:com.google.common.base.Splitter on(char) -> on
    139:141:com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    169:173:com.google.common.base.Splitter on(java.lang.String) -> on
    381:383:java.lang.Iterable split(java.lang.CharSequence) -> split
    400:400:java.util.Iterator splittingIterator(java.lang.CharSequence) -> splittingIterator
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    142:142:void <init>(com.google.common.base.CharMatcher) -> <init>
    142:142:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    145:145:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    145:145:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    148:148:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    174:174:void <init>(java.lang.String) -> <init>
    174:174:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    177:177:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    177:177:void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    196:196:int separatorEnd(int) -> separatorEnd
    180:185:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    383:383:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    386:386:java.util.Iterator iterator() -> iterator
    391:394:java.lang.String toString() -> toString
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    540:547:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    523:523:java.lang.Object computeNext() -> computeNext
    557:613:java.lang.String computeNext() -> computeNext
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    26:111:void <clinit>() -> <clinit>
    115:116:void <init>(java.lang.String,int,java.lang.String) -> <init>
    121:121:java.lang.String key() -> key
    136:136:java.lang.String toString() -> toString
    130:130:java.lang.String value() -> value
    26:26:com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.base.StandardSystemProperty[] values() -> values
com.google.common.base.Strings -> com.google.common.base.Strings:
    261:297:java.lang.String lenientFormat(java.lang.String,java.lang.Object[]) -> lenientFormat
    305:313:java.lang.String lenientToString(java.lang.Object) -> lenientToString
    222:224:boolean validSurrogatePairAt(java.lang.CharSequence,int) -> validSurrogatePairAt
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    238:253:java.lang.Object get() -> get
    260:260:java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    126:136:java.lang.Object get() -> get
    141:142:java.lang.String toString() -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier -> com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:
    164:176:java.lang.Object get() -> get
    181:183:java.lang.String toString() -> toString
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    61:64:void <init>(int,int) -> <init>
    69:69:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    74:77:java.lang.Object next() -> next
    82:82:int nextIndex() -> nextIndex
    92:95:java.lang.Object previous() -> previous
    100:100:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    65:68:void <init>() -> <init>
    121:121:java.lang.Object endOfData() -> endOfData
    128:136:boolean hasNext() -> hasNext
    152:157:java.lang.Object next() -> next
    140:143:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    129:129:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    70:81:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractMapBasedMultimap -> com.google.common.collect.AbstractMapBasedMultimap:
    114:116:void <init>(java.util.Map) -> <init>
    84:84:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> access$000
    84:84:java.util.Iterator access$100(java.util.Collection) -> access$100
    84:84:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> access$208
    84:84:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> access$210
    84:84:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$212
    84:84:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$220
    84:84:void access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> access$300
    163:163:java.util.Map backingMap() -> backingMap
    268:272:void clear() -> clear
    1232:1232:java.util.Map createAsMap() -> createAsMap
    159:159:java.util.Collection createCollection(java.lang.Object) -> createCollection
    1205:1208:java.util.Collection createEntries() -> createEntries
    891:891:java.util.Set createKeySet() -> createKeySet
    1236:1241:java.util.Map createMaybeNavigableAsMap() -> createMaybeNavigableAsMap
    895:900:java.util.Set createMaybeNavigableKeySet() -> createMaybeNavigableKeySet
    1200:1200:java.util.Collection entries() -> entries
    1222:1222:java.util.Iterator entryIterator() -> entryIterator
    573:575:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    182:193:boolean put(java.lang.Object,java.lang.Object) -> put
    1102:1107:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    121:125:void setMap(java.util.Map) -> setMap
    170:170:int size() -> size
com.google.common.collect.AbstractMapBasedMultimap$2 -> com.google.common.collect.AbstractMapBasedMultimap$2:
    1222:1222:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1222:1222:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    1225:1225:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.google.common.collect.AbstractMapBasedMultimap$AsMap:
    1253:1254:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1321:1324:void clear() -> clear
    1266:1266:boolean containsKey(java.lang.Object) -> containsKey
    1259:1259:java.util.Set createEntrySet() -> createEntrySet
    1306:1306:boolean equals(java.lang.Object) -> equals
    1245:1245:java.lang.Object get(java.lang.Object) -> get
    1271:1277:java.util.Collection get(java.lang.Object) -> get
    1311:1311:int hashCode() -> hashCode
    1282:1282:java.util.Set keySet() -> keySet
    1245:1245:java.lang.Object remove(java.lang.Object) -> remove
    1292:1300:java.util.Collection remove(java.lang.Object) -> remove
    1287:1287:int size() -> size
    1316:1316:java.lang.String toString() -> toString
    1329:1330:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:
    1334:1334:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1349:1349:boolean contains(java.lang.Object) -> contains
    1342:1342:java.util.Iterator iterator() -> iterator
    1337:1337:java.util.Map map() -> map
    1354:1358:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:
    1364:1365:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1370:1370:boolean hasNext() -> hasNext
    1364:1364:java.lang.Object next() -> next
    1375:1377:java.util.Map$Entry next() -> next
    1382:1386:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$Itr -> com.google.common.collect.AbstractMapBasedMultimap$Itr:
    1117:1121:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1128:1128:boolean hasNext() -> hasNext
    1133:1139:java.lang.Object next() -> next
    1144:1148:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.google.common.collect.AbstractMapBasedMultimap$KeySet:
    906:907:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    955:955:void clear() -> clear
    960:960:boolean containsAll(java.util.Collection) -> containsAll
    965:965:boolean equals(java.lang.Object) -> equals
    970:970:int hashCode() -> hashCode
    912:913:java.util.Iterator iterator() -> iterator
    944:948:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.google.common.collect.AbstractMapBasedMultimap$KeySet$1:
    913:913:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    918:918:boolean hasNext() -> hasNext
    923:924:java.lang.Object next() -> next
    929:934:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:
    1449:1450:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1482:1483:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1488:1488:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1447:1447:java.util.SortedSet createKeySet() -> createKeySet
    1547:1547:java.util.NavigableSet createKeySet() -> createKeySet
    1557:1557:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1537:1537:java.util.NavigableMap descendingMap() -> descendingMap
    1504:1505:java.util.Map$Entry firstEntry() -> firstEntry
    1471:1472:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1477:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1447:1447:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1573:1573:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1578:1578:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1493:1494:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1499:1499:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1447:1447:java.util.Set keySet() -> keySet
    1447:1447:java.util.SortedSet keySet() -> keySet
    1542:1542:java.util.NavigableSet keySet() -> keySet
    1510:1511:java.util.Map$Entry lastEntry() -> lastEntry
    1460:1461:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1466:1466:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1552:1552:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1525:1532:java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> pollAsMapEntry
    1516:1516:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1521:1521:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1447:1447:java.util.SortedMap sortedMap() -> sortedMap
    1455:1455:java.util.NavigableMap sortedMap() -> sortedMap
    1447:1447:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1562:1562:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1568:1568:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1447:1447:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1583:1583:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    1588:1588:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:
    1018:1019:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1039:1039:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1064:1064:java.util.Iterator descendingIterator() -> descendingIterator
    1059:1059:java.util.NavigableSet descendingSet() -> descendingSet
    1034:1034:java.lang.Object floor(java.lang.Object) -> floor
    1016:1016:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1069:1069:java.util.NavigableSet headSet(java.lang.Object) -> headSet
    1074:1074:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1044:1044:java.lang.Object higher(java.lang.Object) -> higher
    1029:1029:java.lang.Object lower(java.lang.Object) -> lower
    1049:1049:java.lang.Object pollFirst() -> pollFirst
    1054:1054:java.lang.Object pollLast() -> pollLast
    1016:1016:java.util.SortedMap sortedMap() -> sortedMap
    1024:1024:java.util.NavigableMap sortedMap() -> sortedMap
    1016:1016:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1079:1079:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1085:1086:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1016:1016:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1091:1091:java.util.NavigableSet tailSet(java.lang.Object) -> tailSet
    1096:1096:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:
    1393:1394:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1403:1403:java.util.Comparator comparator() -> comparator
    1443:1443:java.util.SortedSet createKeySet() -> createKeySet
    1408:1408:java.lang.Object firstKey() -> firstKey
    1418:1418:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1391:1391:java.util.Set keySet() -> keySet
    1437:1438:java.util.SortedSet keySet() -> keySet
    1413:1413:java.lang.Object lastKey() -> lastKey
    1398:1398:java.util.SortedMap sortedMap() -> sortedMap
    1423:1423:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1428:1428:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:
    977:978:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    987:987:java.util.Comparator comparator() -> comparator
    992:992:java.lang.Object first() -> first
    997:997:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1002:1002:java.lang.Object last() -> last
    982:982:java.util.SortedMap sortedMap() -> sortedMap
    1007:1007:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1012:1012:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:
    329:333:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    474:480:boolean add(java.lang.Object) -> add
    494:503:boolean addAll(java.util.Collection) -> addAll
    380:383:void addToMap() -> addToMap
    523:529:void clear() -> clear
    511:512:boolean contains(java.lang.Object) -> contains
    517:518:boolean containsAll(java.util.Collection) -> containsAll
    398:399:boolean equals(java.lang.Object) -> equals
    487:487:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> getAncestor
    415:415:java.util.Collection getDelegate() -> getDelegate
    370:370:java.lang.Object getKey() -> getKey
    404:405:int hashCode() -> hashCode
    420:421:java.util.Iterator iterator() -> iterator
    344:352:void refreshIfEmpty() -> refreshIfEmpty
    534:538:boolean remove(java.lang.Object) -> remove
    545:553:boolean removeAll(java.util.Collection) -> removeAll
    362:365:void removeIfEmpty() -> removeIfEmpty
    560:566:boolean retainAll(java.util.Collection) -> retainAll
    389:390:int size() -> size
    410:411:java.lang.String toString() -> toString
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:
    427:430:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    427:434:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    449:450:boolean hasNext() -> hasNext
    455:456:java.lang.Object next() -> next
    461:463:void remove() -> remove
    441:443:void validateIterator() -> validateIterator
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:
    665:666:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    686:686:java.lang.Object ceiling(java.lang.Object) -> ceiling
    715:715:java.util.Iterator descendingIterator() -> descendingIterator
    710:710:java.util.NavigableSet descendingSet() -> descendingSet
    681:681:java.lang.Object floor(java.lang.Object) -> floor
    662:662:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    671:671:java.util.NavigableSet getSortedSetDelegate() -> getSortedSetDelegate
    727:727:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    691:691:java.lang.Object higher(java.lang.Object) -> higher
    676:676:java.lang.Object lower(java.lang.Object) -> lower
    696:696:java.lang.Object pollFirst() -> pollFirst
    701:701:java.lang.Object pollLast() -> pollLast
    721:722:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    732:732:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    705:705:java.util.NavigableSet wrap(java.util.NavigableSet) -> wrap
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:
    581:582:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    587:599:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:
    609:610:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    619:619:java.util.Comparator comparator() -> comparator
    624:625:java.lang.Object first() -> first
    614:614:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    636:640:java.util.SortedSet headSet(java.lang.Object) -> headSet
    630:631:java.lang.Object last() -> last
    645:649:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    654:658:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    31:31:void <init>() -> <init>
    46:49:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    38:38:void <init>() -> <init>
    207:208:java.util.Map asMap() -> asMap
    57:58:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    112:113:java.util.Collection entries() -> entries
    217:217:boolean equals(java.lang.Object) -> equals
    230:230:int hashCode() -> hashCode
    150:151:java.util.Set keySet() -> keySet
    64:65:boolean remove(java.lang.Object,java.lang.Object) -> remove
    241:241:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    119:119:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    127:127:java.util.Iterator iterator() -> iterator
    122:122:com.google.common.collect.Multimap multimap() -> multimap
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    132:132:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    140:140:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
com.google.common.collect.AbstractNavigableMap -> com.google.common.collect.AbstractNavigableMap:
    35:35:void <init>() -> <init>
    101:101:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    122:122:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    159:159:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    164:164:java.util.NavigableMap descendingMap() -> descendingMap
    45:45:java.util.Map$Entry firstEntry() -> firstEntry
    68:72:java.lang.Object firstKey() -> firstKey
    95:95:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    117:117:java.lang.Object floorKey(java.lang.Object) -> floorKey
    139:139:java.util.SortedMap headMap(java.lang.Object) -> headMap
    107:107:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    127:127:java.lang.Object higherKey(java.lang.Object) -> higherKey
    154:154:java.util.Set keySet() -> keySet
    51:51:java.util.Map$Entry lastEntry() -> lastEntry
    78:82:java.lang.Object lastKey() -> lastKey
    89:89:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    112:112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    149:149:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    57:57:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    63:63:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    134:134:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    144:144:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.google.common.collect.AbstractNavigableMap$DescendingMap:
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
    175:175:java.util.Iterator entryIterator() -> entryIterator
    170:170:java.util.NavigableMap forward() -> forward
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    123:123:java.util.Map asMap() -> asMap
    86:86:java.util.Set entries() -> entries
    148:148:boolean equals(java.lang.Object) -> equals
    137:137:boolean put(java.lang.Object,java.lang.Object) -> put
    57:57:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    62:62:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    26:30:void <clinit>() -> <clinit>
    34:35:void <init>(java.lang.String,int,boolean) -> <init>
    40:40:com.google.common.collect.BoundType forBoolean(boolean) -> forBoolean
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.collect.BoundType[] values() -> values
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    36:38:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    51:53:boolean equals(java.lang.Object) -> equals
    60:60:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    30:32:void checkEntryNotNull(java.lang.Object,java.lang.Object) -> checkEntryNotNull
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    63:63:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    328:329:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    99:101:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
com.google.common.collect.CompactHashMap -> com.google.common.collect.CompactHashMap:
    102:102:void <clinit>() -> <clinit>
    180:181:void <init>() -> <init>
    189:190:void <init>(int) -> <init>
    75:75:int access$000(com.google.common.collect.CompactHashMap) -> access$000
    75:75:java.lang.Object access$100(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$100
    75:75:java.lang.Object access$200() -> access$200
    75:75:int access$400(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$400
    75:75:int access$500(com.google.common.collect.CompactHashMap) -> access$500
    75:75:java.lang.Object access$600(com.google.common.collect.CompactHashMap) -> access$600
    75:75:int access$710(com.google.common.collect.CompactHashMap) -> access$710
    210:219:int allocArrays() -> allocArrays
    890:906:void clear() -> clear
    440:441:boolean containsKey(java.lang.Object) -> containsKey
    807:812:boolean containsValue(java.lang.Object) -> containsValue
    242:250:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    663:663:java.util.Set createEntrySet() -> createEntrySet
    235:235:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    607:607:java.util.Set createKeySet() -> createKeySet
    827:827:java.util.Collection createValues() -> createValues
    99:99:com.google.common.collect.CompactHashMap createWithExpectedSize(int) -> createWithExpectedSize
    228:229:java.util.Map delegateOrNull() -> delegateOrNull
    659:659:java.util.Set entrySet() -> entrySet
    726:730:java.util.Iterator entrySetIterator() -> entrySetIterator
    538:538:int firstEntryIndex() -> firstEntryIndex
    447:456:java.lang.Object get(java.lang.Object) -> get
    542:542:int getSuccessor(int) -> getSuccessor
    263:263:int hashTableMask() -> hashTableMask
    267:267:void incrementModCount() -> incrementModCount
    416:433:int indexOf(java.lang.Object) -> indexOf
    195:198:void init(int) -> init
    350:352:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    802:802:boolean isEmpty() -> isEmpty
    603:603:java.util.Set keySet() -> keySet
    642:646:java.util.Iterator keySetIterator() -> keySetIterator
    498:533:void moveLastEntry(int,int) -> moveLastEntry
    204:204:boolean needsAllocArrays() -> needsAllocArrays
    282:342:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    923:932:void readObject(java.io.ObjectInputStream) -> readObject
    464:469:java.lang.Object remove(java.lang.Object) -> remove
    474:489:java.lang.Object removeHelper(java.lang.Object) -> removeHelper
    373:375:void resizeEntries(int) -> resizeEntries
    357:363:void resizeMeMaybe(int) -> resizeMeMaybe
    380:411:int resizeTable(int,int,int,int) -> resizeTable
    256:258:void setHashTableMask(int) -> setHashTableMask
    796:797:int size() -> size
    823:823:java.util.Collection values() -> values
    849:853:java.util.Iterator valuesIterator() -> valuesIterator
    911:917:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashMap$1 -> com.google.common.collect.CompactHashMap$1:
    646:646:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    650:650:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$2 -> com.google.common.collect.CompactHashMap$2:
    730:730:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    730:730:java.lang.Object getOutput(int) -> getOutput
    733:733:java.util.Map$Entry getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$3 -> com.google.common.collect.CompactHashMap$3:
    853:853:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    857:857:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$EntrySetView -> com.google.common.collect.CompactHashMap$EntrySetView:
    667:667:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    676:676:void clear() -> clear
    686:692:boolean contains(java.lang.Object) -> contains
    681:681:java.util.Iterator iterator() -> iterator
    699:717:boolean remove(java.lang.Object) -> remove
    671:671:int size() -> size
com.google.common.collect.CompactHashMap$Itr -> com.google.common.collect.CompactHashMap$Itr:
    554:557:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    554:554:void <init>(com.google.common.collect.CompactHashMap,com.google.common.collect.CompactHashMap$1) -> <init>
    593:594:void checkForConcurrentModification() -> checkForConcurrentModification
    561:561:boolean hasNext() -> hasNext
    589:589:void incrementExpectedModCount() -> incrementExpectedModCount
    568:574:java.lang.Object next() -> next
    580:585:void remove() -> remove
com.google.common.collect.CompactHashMap$KeySetView -> com.google.common.collect.CompactHashMap$KeySetView:
    611:611:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    637:637:void clear() -> clear
    619:619:boolean contains(java.lang.Object) -> contains
    632:632:java.util.Iterator iterator() -> iterator
    624:627:boolean remove(java.lang.Object) -> remove
    614:614:int size() -> size
com.google.common.collect.CompactHashMap$MapEntry -> com.google.common.collect.CompactHashMap$MapEntry:
    744:746:void <init>(com.google.common.collect.CompactHashMap,int) -> <init>
    752:752:java.lang.Object getKey() -> getKey
    767:772:java.lang.Object getValue() -> getValue
    778:788:java.lang.Object setValue(java.lang.Object) -> setValue
    756:759:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.CompactHashMap$ValuesView -> com.google.common.collect.CompactHashMap$ValuesView:
    831:831:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    839:839:void clear() -> clear
    844:844:java.util.Iterator iterator() -> iterator
    834:834:int size() -> size
com.google.common.collect.CompactHashSet -> com.google.common.collect.CompactHashSet:
    191:192:void <init>() -> <init>
    200:201:void <init>(int) -> <init>
    73:73:int access$000(com.google.common.collect.CompactHashSet) -> access$000
    287:340:boolean add(java.lang.Object) -> add
    221:229:int allocArrays() -> allocArrays
    635:650:void clear() -> clear
    413:434:boolean contains(java.lang.Object) -> contains
    252:259:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    245:245:java.util.Set createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    238:239:java.util.Set delegateOrNull() -> delegateOrNull
    505:505:int firstEntryIndex() -> firstEntryIndex
    509:509:int getSuccessor(int) -> getSuccessor
    277:277:int hashTableMask() -> hashTableMask
    281:281:void incrementModCount() -> incrementModCount
    206:209:void init(int) -> init
    348:349:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    580:580:boolean isEmpty() -> isEmpty
    265:265:boolean isUsingHashFloodingResistance() -> isUsingHashFloodingResistance
    523:527:java.util.Iterator iterator() -> iterator
    468:500:void moveLastEntry(int,int) -> moveLastEntry
    215:215:boolean needsAllocArrays() -> needsAllocArrays
    664:672:void readObject(java.io.ObjectInputStream) -> readObject
    442:459:boolean remove(java.lang.Object) -> remove
    370:371:void resizeEntries(int) -> resizeEntries
    354:360:void resizeMeMaybe(int) -> resizeMeMaybe
    376:407:int resizeTable(int,int,int,int) -> resizeTable
    270:272:void setHashTableMask(int) -> setHashTableMask
    574:575:int size() -> size
    585:589:java.lang.Object[] toArray() -> toArray
    595:604:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    655:658:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashSet$1 -> com.google.common.collect.CompactHashSet$1:
    527:530:void <init>(com.google.common.collect.CompactHashSet) -> <init>
    565:566:void checkForConcurrentModification() -> checkForConcurrentModification
    534:534:boolean hasNext() -> hasNext
    561:561:void incrementExpectedModCount() -> incrementExpectedModCount
    540:546:java.lang.Object next() -> next
    552:557:void remove() -> remove
com.google.common.collect.CompactHashing -> com.google.common.collect.CompactHashing:
    77:85:java.lang.Object createTable(int) -> createTable
    153:179:int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[]) -> remove
    90:95:void tableClear(java.lang.Object) -> tableClear
    100:105:int tableGet(java.lang.Object,int) -> tableGet
    110:115:void tableSet(java.lang.Object,int,int) -> tableSet
    70:70:int tableSize(int) -> tableSize
com.google.common.collect.CompactLinkedHashMap -> com.google.common.collect.CompactLinkedHashMap:
    91:91:void <init>() -> <init>
    95:95:void <init>(int) -> <init>
    99:100:void <init>(int,boolean) -> <init>
    172:178:void accessEntry(int) -> accessEntry
    208:208:int adjustAfterRemove(int,int) -> adjustAfterRemove
    112:113:int allocArrays() -> allocArrays
    213:221:void clear() -> clear
    125:126:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    119:119:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    66:66:com.google.common.collect.CompactLinkedHashMap createWithExpectedSize(int) -> createWithExpectedSize
    203:203:int firstEntryIndex() -> firstEntryIndex
    131:131:int getPredecessor(int) -> getPredecessor
    136:136:int getSuccessor(int) -> getSuccessor
    105:107:void init(int) -> init
    165:167:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    184:192:void moveLastEntry(int,int) -> moveLastEntry
    197:198:void resizeEntries(int) -> resizeEntries
    146:146:void setPredecessor(int,int) -> setPredecessor
    151:159:void setSucceeds(int,int) -> setSucceeds
    141:141:void setSuccessor(int,int) -> setSuccessor
com.google.common.collect.CompactLinkedHashSet -> com.google.common.collect.CompactLinkedHashSet:
    121:121:void <init>() -> <init>
    125:125:void <init>(int) -> <init>
    218:218:int adjustAfterRemove(int,int) -> adjustAfterRemove
    137:139:int allocArrays() -> allocArrays
    233:242:void clear() -> clear
    146:148:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    93:93:com.google.common.collect.CompactLinkedHashSet createWithExpectedSize(int) -> createWithExpectedSize
    213:213:int firstEntryIndex() -> firstEntryIndex
    153:153:int getPredecessor(int) -> getPredecessor
    158:158:int getSuccessor(int) -> getSuccessor
    130:132:void init(int) -> init
    185:187:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    192:201:void moveLastEntry(int,int) -> moveLastEntry
    206:208:void resizeEntries(int) -> resizeEntries
    166:166:void setPredecessor(int,int) -> setPredecessor
    171:179:void setSucceeds(int,int) -> setSucceeds
    162:162:void setSuccessor(int,int) -> setSuccessor
    223:223:java.lang.Object[] toArray() -> toArray
    228:228:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    31:32:void <init>(java.util.Comparator) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    45:47:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.common.collect.Cut -> com.google.common.collect.Cut:
    38:39:void <init>(java.lang.Comparable) -> <init>
    215:215:com.google.common.collect.Cut aboveAll() -> aboveAll
    383:383:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> aboveValue
    114:114:com.google.common.collect.Cut belowAll() -> belowAll
    300:300:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> belowValue
    34:34:int compareTo(java.lang.Object) -> compareTo
    71:82:int compareTo(com.google.common.collect.Cut) -> compareTo
    86:86:java.lang.Comparable endpoint() -> endpoint
    92:96:boolean equals(java.lang.Object) -> equals
com.google.common.collect.Cut$AboveAll -> com.google.common.collect.Cut$AboveAll:
    219:219:void <clinit>() -> <clinit>
    222:222:void <init>() -> <init>
    218:218:com.google.common.collect.Cut$AboveAll access$100() -> access$100
    218:218:int compareTo(java.lang.Object) -> compareTo
    259:259:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    264:264:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    227:227:java.lang.Comparable endpoint() -> endpoint
    284:284:int hashCode() -> hashCode
    293:293:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$AboveValue -> com.google.common.collect.Cut$AboveValue:
    388:388:void <init>(java.lang.Comparable) -> <init>
    434:434:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    439:439:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    460:460:int hashCode() -> hashCode
    393:393:boolean isLessThan(java.lang.Comparable) -> isLessThan
    465:465:java.lang.String toString() -> toString
com.google.common.collect.Cut$BelowAll -> com.google.common.collect.Cut$BelowAll:
    120:120:void <clinit>() -> <clinit>
    123:123:void <init>() -> <init>
    119:119:com.google.common.collect.Cut$BelowAll access$000() -> access$000
    119:119:int compareTo(java.lang.Object) -> compareTo
    160:160:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    165:165:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    128:128:java.lang.Comparable endpoint() -> endpoint
    194:194:int hashCode() -> hashCode
    203:203:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$BelowValue -> com.google.common.collect.Cut$BelowValue:
    305:305:void <init>(java.lang.Comparable) -> <init>
    351:351:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    356:356:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    371:371:int hashCode() -> hashCode
    310:310:boolean isLessThan(java.lang.Comparable) -> isLessThan
    376:376:java.lang.String toString() -> toString
com.google.common.collect.FluentIterable -> com.google.common.collect.FluentIterable:
    121:122:void <init>() -> <init>
    131:131:java.lang.Iterable getDelegate() -> getDelegate
    340:340:java.lang.String toString() -> toString
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    87:87:boolean add(java.lang.Object) -> add
    104:104:boolean addAll(java.util.Collection) -> addAll
    115:115:void clear() -> clear
    81:81:boolean contains(java.lang.Object) -> contains
    98:98:boolean containsAll(java.util.Collection) -> containsAll
    76:76:boolean isEmpty() -> isEmpty
    60:60:java.util.Iterator iterator() -> iterator
    93:93:boolean remove(java.lang.Object) -> remove
    71:71:boolean removeAll(java.util.Collection) -> removeAll
    110:110:boolean retainAll(java.util.Collection) -> retainAll
    65:65:int size() -> size
    120:120:java.lang.Object[] toArray() -> toArray
    126:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    43:43:void <init>() -> <init>
    51:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:57:boolean remove(java.lang.Object,java.lang.Object) -> remove
    63:63:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    69:69:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    62:62:void <init>() -> <init>
    85:85:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    126:126:java.util.Set entrySet() -> entrySet
    131:131:boolean equals(java.lang.Object) -> equals
    100:100:java.lang.Object get(java.lang.Object) -> get
    136:136:int hashCode() -> hashCode
    74:74:boolean isEmpty() -> isEmpty
    116:116:java.util.Set keySet() -> keySet
    106:106:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    111:111:void putAll(java.util.Map) -> putAll
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    69:69:int size() -> size
    303:303:java.lang.String standardToString() -> standardToString
    121:121:java.util.Collection values() -> values
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    50:50:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    58:58:void <init>() -> <init>
    65:65:java.util.Comparator comparator() -> comparator
    70:70:java.lang.Object first() -> first
    75:75:java.util.SortedSet headSet(java.lang.Object) -> headSet
    80:80:java.lang.Object last() -> last
    85:85:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    90:90:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    62:63:int closedTableSize(int,double) -> closedTableSize
    50:50:int smear(int) -> smear
    54:54:int smearedHash(java.lang.Object) -> smearedHash
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    174:174:void <clinit>() -> <clinit>
    168:168:void <init>() -> <init>
    235:235:boolean add(java.lang.Object) -> add
    261:261:boolean addAll(java.util.Collection) -> addAll
    313:313:com.google.common.collect.ImmutableList asList() -> asList
    299:299:void clear() -> clear
    330:331:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    219:219:int internalArrayEnd() -> internalArrayEnd
    211:211:int internalArrayStart() -> internalArrayStart
    161:161:java.util.Iterator iterator() -> iterator
    248:248:boolean remove(java.lang.Object) -> remove
    274:274:boolean removeAll(java.util.Collection) -> removeAll
    287:287:boolean retainAll(java.util.Collection) -> retainAll
    178:178:java.lang.Object[] toArray() -> toArray
    184:196:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    338:338:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.google.common.collect.ImmutableCollection$ArrayBasedBuilder:
    449:452:void <init>(int) -> <init>
    474:476:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    483:486:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    461:467:void getReadyToExpandTo(int) -> getReadyToExpandTo
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    366:366:void <init>() -> <init>
    352:357:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    29:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    37:37:java.lang.Object getKey() -> getKey
    43:43:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    372:372:void <clinit>() -> <clinit>
    346:346:void <init>() -> <init>
    514:514:void add(int,java.lang.Object) -> add
    489:489:boolean addAll(int,java.util.Collection) -> addAll
    335:335:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    341:343:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    671:671:com.google.common.collect.ImmutableList$Builder builder() -> builder
    326:326:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    401:401:boolean contains(java.lang.Object) -> contains
    543:545:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    238:243:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    271:273:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    623:623:boolean equals(java.lang.Object) -> equals
    629:631:int hashCode() -> hashCode
    391:391:int indexOf(java.lang.Object) -> indexOf
    55:55:java.util.Iterator iterator() -> iterator
    352:352:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    396:396:int lastIndexOf(java.lang.Object) -> lastIndexOf
    55:55:java.util.ListIterator listIterator() -> listIterator
    55:55:java.util.ListIterator listIterator(int) -> listIterator
    357:357:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    363:367:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    67:67:com.google.common.collect.ImmutableList of() -> of
    78:78:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    658:658:void readObject(java.io.ObjectInputStream) -> readObject
    527:527:java.lang.Object remove(int) -> remove
    558:558:com.google.common.collect.ImmutableList reverse() -> reverse
    502:502:java.lang.Object set(int,java.lang.Object) -> set
    55:55:java.util.List subList(int,int) -> subList
    413:420:com.google.common.collect.ImmutableList subList(int,int) -> subList
    429:429:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    663:663:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    718:718:void <init>() -> <init>
    722:722:void <init>(int) -> <init>
    735:735:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    786:787:com.google.common.collect.ImmutableList build() -> build
com.google.common.collect.ImmutableList$Itr -> com.google.common.collect.ImmutableList$Itr:
    379:380:void <init>(com.google.common.collect.ImmutableList,int) -> <init>
    385:385:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    564:565:void <init>(com.google.common.collect.ImmutableList) -> <init>
    583:583:boolean contains(java.lang.Object) -> contains
    606:607:java.lang.Object get(int) -> get
    588:589:int indexOf(java.lang.Object) -> indexOf
    617:617:boolean isPartialView() -> isPartialView
    594:595:int lastIndexOf(java.lang.Object) -> lastIndexOf
    578:578:com.google.common.collect.ImmutableList reverse() -> reverse
    569:569:int reverseIndex(int) -> reverseIndex
    573:573:int reversePosition(int) -> reversePosition
    612:612:int size() -> size
    561:561:java.util.List subList(int,int) -> subList
    600:601:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    646:647:void <init>(java.lang.Object[]) -> <init>
    651:651:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    436:438:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    463:464:java.lang.Object get(int) -> get
    448:448:java.lang.Object[] internalArray() -> internalArray
    458:458:int internalArrayEnd() -> internalArrayEnd
    453:453:int internalArrayStart() -> internalArrayStart
    443:443:int size() -> size
    432:432:java.util.List subList(int,int) -> subList
    469:470:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    408:408:void <clinit>() -> <clinit>
    440:440:void <init>() -> <init>
    149:149:com.google.common.collect.ImmutableMap$Builder builder() -> builder
    489:489:void clear() -> clear
    499:499:boolean containsKey(java.lang.Object) -> containsKey
    504:504:boolean containsValue(java.lang.Object) -> containsValue
    378:385:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    400:405:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable) -> copyOf
    54:54:java.util.Set entrySet() -> entrySet
    536:537:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    685:685:boolean equals(java.lang.Object) -> equals
    524:524:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    692:692:int hashCode() -> hashCode
    494:494:boolean isEmpty() -> isEmpty
    54:54:java.util.Set keySet() -> keySet
    550:551:com.google.common.collect.ImmutableSet keySet() -> keySet
    452:452:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    477:477:void putAll(java.util.Map) -> putAll
    465:465:java.lang.Object remove(java.lang.Object) -> remove
    701:701:java.lang.String toString() -> toString
    54:54:java.util.Collection values() -> values
    584:585:com.google.common.collect.ImmutableCollection values() -> values
    788:788:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    224:224:void <init>() -> <init>
    228:231:void <init>(int) -> <init>
    339:341:com.google.common.collect.ImmutableMap build() -> build
    235:241:void ensureCapacity(int) -> ensureCapacity
    251:255:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    267:267:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    291:295:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    345:359:void sortEntries() -> sortEntries
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    720:731:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    761:769:java.lang.Object legacyReadResolve() -> legacyReadResolve
    776:776:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    740:756:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet -> com.google.common.collect.ImmutableMapEntrySet:
    68:68:void <init>() -> <init>
    79:82:boolean contains(java.lang.Object) -> contains
    100:100:int hashCode() -> hashCode
    95:95:boolean isHashCodeFast() -> isHashCodeFast
    74:74:int size() -> size
    106:106:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:
    113:114:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    118:118:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    310:310:void <init>() -> <init>
    48:48:boolean access$000(int,int) -> access$000
    48:48:com.google.common.collect.ImmutableSet access$100(int,java.lang.Object[]) -> access$100
    344:345:com.google.common.collect.ImmutableList asList() -> asList
    383:383:com.google.common.collect.ImmutableSet$Builder builder() -> builder
    210:222:int chooseTableSize(int) -> chooseTableSize
    144:186:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    300:306:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    349:349:com.google.common.collect.ImmutableList createAsList() -> createAsList
    321:327:boolean equals(java.lang.Object) -> equals
    332:332:int hashCode() -> hashCode
    46:46:java.util.Iterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableSet of() -> of
    64:64:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    375:375:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    431:431:void <init>() -> <init>
    451:457:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    473:478:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    484:494:void addDeduping(java.lang.Object) -> addDeduping
    546:566:com.google.common.collect.ImmutableSet build() -> build
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    362:363:void <init>(java.lang.Object[]) -> <init>
    367:367:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    61:65:void <clinit>() -> <clinit>
    548:548:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    554:557:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    54:54:com.google.common.collect.ImmutableSortedMap access$000(java.util.Comparator,java.lang.Object,java.lang.Object) -> access$000
    54:54:com.google.common.collect.RegularImmutableSortedSet access$100(com.google.common.collect.ImmutableSortedMap) -> access$100
    54:54:com.google.common.collect.ImmutableList access$200(com.google.common.collect.ImmutableSortedMap) -> access$200
    798:798:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    803:803:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    651:651:java.util.Comparator comparator() -> comparator
    616:616:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    627:627:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    641:641:com.google.common.collect.ImmutableCollection createValues() -> createValues
    53:53:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    876:876:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    53:53:java.util.NavigableMap descendingMap() -> descendingMap
    856:863:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    68:72:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    53:53:java.util.Set entrySet() -> entrySet
    579:579:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    818:818:java.util.Map$Entry firstEntry() -> firstEntry
    656:656:java.lang.Object firstKey() -> firstKey
    788:788:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    793:793:java.lang.Object floorKey(java.lang.Object) -> floorKey
    567:568:java.lang.Object get(java.lang.Object) -> get
    665:671:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    53:53:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    53:53:java.util.SortedMap headMap(java.lang.Object) -> headMap
    686:686:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    702:702:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    808:808:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    813:813:java.lang.Object higherKey(java.lang.Object) -> higherKey
    573:573:boolean isPartialView() -> isPartialView
    53:53:com.google.common.collect.ImmutableSet keySet() -> keySet
    53:53:java.util.Set keySet() -> keySet
    622:622:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    823:823:java.util.Map$Entry lastEntry() -> lastEntry
    661:661:java.lang.Object lastKey() -> lastKey
    778:778:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    783:783:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    53:53:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    871:871:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    81:81:com.google.common.collect.ImmutableSortedMap of() -> of
    91:93:com.google.common.collect.ImmutableSortedMap of(java.util.Comparator,java.lang.Object,java.lang.Object) -> of
    836:836:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    849:849:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    562:562:int size() -> size
    53:53:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    717:717:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    736:743:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    757:757:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    773:773:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.Collection values() -> values
    636:636:com.google.common.collect.ImmutableCollection values() -> values
    902:902:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedMap$1EntrySet -> com.google.common.collect.ImmutableSortedMap$1EntrySet:
    584:584:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    592:592:com.google.common.collect.ImmutableList createAsList() -> createAsList
    584:584:java.util.Iterator iterator() -> iterator
    587:587:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    613:613:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableSortedMap$1EntrySet$1 -> com.google.common.collect.ImmutableSortedMap$1EntrySet$1:
    592:592:void <init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> <init>
    592:592:java.lang.Object get(int) -> get
    595:596:java.util.Map$Entry get(int) -> get
    606:606:int size() -> size
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    411:411:void <init>(java.util.Comparator) -> <init>
    414:417:void <init>(java.util.Comparator,int) -> <init>
    400:400:com.google.common.collect.ImmutableMap build() -> build
    510:538:com.google.common.collect.ImmutableSortedMap build() -> build
    421:424:void ensureCapacity(int) -> ensureCapacity
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    436:440:com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    454:454:com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    484:484:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.lang.Iterable) -> putAll
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    888:889:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    884:884:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    894:894:com.google.common.collect.ImmutableSortedMap$Builder makeBuilder(int) -> makeBuilder
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    29:29:void <init>() -> <init>
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    513:514:void <init>(java.util.Comparator) -> <init>
    627:627:java.lang.Object ceiling(java.lang.Object) -> ceiling
    524:524:java.util.Comparator comparator() -> comparator
    342:361:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> construct
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    57:57:java.util.NavigableSet descendingSet() -> descendingSet
    686:689:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    62:65:com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    639:639:java.lang.Object first() -> first
    621:621:java.lang.Object floor(java.lang.Object) -> floor
    57:57:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    57:57:java.util.SortedSet headSet(java.lang.Object) -> headSet
    542:542:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    548:548:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    634:634:java.lang.Object higher(java.lang.Object) -> higher
    57:57:java.util.Iterator iterator() -> iterator
    644:644:java.lang.Object last() -> last
    615:615:java.lang.Object lower(java.lang.Object) -> lower
    659:659:java.lang.Object pollFirst() -> pollFirst
    674:674:java.lang.Object pollLast() -> pollLast
    732:732:void readObject(java.io.ObjectInputStream) -> readObject
    57:57:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    565:565:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    573:576:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    57:57:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    591:591:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    597:597:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    499:499:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    508:508:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    737:737:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    418:419:void <init>(java.util.Comparator) -> <init>
    411:411:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    434:434:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    449:449:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    411:411:com.google.common.collect.ImmutableSet build() -> build
    490:493:com.google.common.collect.ImmutableSortedSet build() -> build
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    718:720:void <init>(java.util.Comparator,java.lang.Object[]) -> <init>
    725:725:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    39:39:void <init>() -> <init>
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    342:344:java.util.Collection castOrCopyToCollection(java.lang.Iterable) -> castOrCopyToCollection
    587:589:java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    614:616:java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    735:738:java.lang.Object get(java.lang.Iterable,int) -> get
    790:790:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    292:292:java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    981:984:boolean isEmpty(java.lang.Iterable) -> isEmpty
    333:333:java.lang.Object[] toArray(java.lang.Iterable) -> toArray
    279:279:java.lang.String toString(java.lang.Iterable) -> toString
com.google.common.collect.Iterables$4 -> com.google.common.collect.Iterables$4:
    589:589:void <init>(java.lang.Iterable,com.google.common.base.Predicate) -> <init>
    592:592:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    352:356:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    890:895:int advance(java.util.Iterator,int) -> advance
    836:836:void checkNonnegative(int) -> checkNonnegative
    989:992:void clear(java.util.Iterator) -> clear
    263:273:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    121:121:java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    630:632:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    801:811:java.lang.Object get(java.util.Iterator,int) -> get
    850:850:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    301:315:java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    1201:1208:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    976:978:java.lang.Object pollNext(java.util.Iterator) -> pollNext
    198:202:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    1056:1056:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    163:167:int size(java.util.Iterator) -> size
    281:290:java.lang.String toString(java.util.Iterator) -> toString
    127:133:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    133:133:void <init>(java.util.Iterator) -> <init>
    136:136:boolean hasNext() -> hasNext
    141:141:java.lang.Object next() -> next
com.google.common.collect.Iterators$5 -> com.google.common.collect.Iterators$5:
    632:632:void <init>(java.util.Iterator,com.google.common.base.Predicate) -> <init>
    635:641:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    1056:1056:void <init>(java.lang.Object) -> <init>
    1061:1061:boolean hasNext() -> hasNext
    1066:1070:java.lang.Object next() -> next
com.google.common.collect.Iterators$EmptyModifiableIterator -> com.google.common.collect.Iterators$EmptyModifiableIterator:
    95:96:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    105:105:java.lang.Object next() -> next
    110:110:void remove() -> remove
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String) -> valueOf
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator[] values() -> values
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    1128:1129:void <init>(java.util.Iterator) -> <init>
    1134:1134:boolean hasNext() -> hasNext
    1139:1144:java.lang.Object next() -> next
    1156:1160:java.lang.Object peek() -> peek
    1150:1151:void remove() -> remove
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    77:77:void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$200
    77:77:com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> access$300
    77:77:void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$400
    77:77:void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$500
    77:77:void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$600
    76:76:java.util.Map asMap() -> asMap
    542:543:void clear() -> clear
    76:76:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    76:76:java.util.Collection createCollection() -> createCollection
    236:236:java.util.Set createCollection() -> createCollection
    250:250:java.util.Collection createCollection(java.lang.Object) -> createCollection
    139:139:void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> deleteFromMultimap
    135:135:void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> deleteFromValueSet
    279:279:java.util.Set entries() -> entries
    506:506:java.util.Iterator entryIterator() -> entryIterator
    76:76:boolean equals(java.lang.Object) -> equals
    76:76:int hashCode() -> hashCode
    294:294:java.util.Set keySet() -> keySet
    76:76:boolean put(java.lang.Object,java.lang.Object) -> put
    566:585:void readObject(java.io.ObjectInputStream) -> readObject
    76:76:boolean remove(java.lang.Object,java.lang.Object) -> remove
    76:76:int size() -> size
    130:131:void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> succeedsInMultimap
    125:126:void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> succeedsInValueSet
    76:76:java.lang.String toString() -> toString
    552:560:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    506:507:void <init>(com.google.common.collect.LinkedHashMultimap) -> <init>
    512:512:boolean hasNext() -> hasNext
    506:506:java.lang.Object next() -> next
    517:522:java.util.Map$Entry next() -> next
    528:530:void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueEntry -> com.google.common.collect.LinkedHashMultimap$ValueEntry:
    165:167:void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> <init>
    195:195:com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> getPredecessorInMultimap
    176:176:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    199:199:com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> getSuccessorInMultimap
    181:181:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    171:171:boolean matchesValue(java.lang.Object,int) -> matchesValue
    207:207:void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setPredecessorInMultimap
    186:186:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    203:203:void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setSuccessorInMultimap
    191:191:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
com.google.common.collect.LinkedHashMultimap$ValueSet -> com.google.common.collect.LinkedHashMultimap$ValueSet:
    319:336:void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int) -> <init>
    311:311:com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$000
    311:311:int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$100
    425:442:boolean add(java.lang.Object) -> add
    491:500:void clear() -> clear
    412:416:boolean contains(java.lang.Object) -> contains
    345:345:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    350:350:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    365:365:java.util.Iterator iterator() -> iterator
    340:340:int mask() -> mask
    447:458:void rehashIfNecessary() -> rehashIfNecessary
    466:482:boolean remove(java.lang.Object) -> remove
    355:355:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    360:360:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    407:407:int size() -> size
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> com.google.common.collect.LinkedHashMultimap$ValueSet$1:
    365:368:void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet) -> <init>
    371:372:void checkForComodification() -> checkForComodification
    378:379:boolean hasNext() -> hasNext
    384:390:java.lang.Object next() -> next
    396:400:void remove() -> remove
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    148:151:int computeArrayListCapacity(int) -> computeArrayListCapacity
    953:973:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    990:996:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1004:1013:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1023:1029:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1038:1045:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    82:82:java.util.ArrayList newArrayList() -> newArrayList
    125:129:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    141:142:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    98:110:void <init>() -> <init>
    178:183:com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    188:188:int getConcurrencyLevel() -> getConcurrencyLevel
    154:154:int getInitialCapacity() -> getInitialCapacity
    129:129:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    219:219:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    265:265:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    144:149:com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    122:124:com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    280:283:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    209:213:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    255:259:com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setValueStrength
    292:308:java.lang.String toString() -> toString
    205:205:com.google.common.collect.MapMaker weakKeys() -> weakKeys
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    1005:1005:void <clinit>() -> <clinit>
    160:192:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper) -> <init>
    69:69:java.util.ArrayList access$900(java.util.Collection) -> access$900
    2473:2474:void clear() -> clear
    2363:2364:boolean containsKey(java.lang.Object) -> containsKey
    2378:2395:boolean containsValue(java.lang.Object) -> containsValue
    1074:1075:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    199:214:com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker) -> create
    1115:1115:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    2498:2499:java.util.Set entrySet() -> entrySet
    2342:2343:java.lang.Object get(java.lang.Object) -> get
    1123:1126:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1079:1080:int hash(java.lang.Object) -> hash
    2307:2320:boolean isEmpty() -> isEmpty
    1100:1100:boolean isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isLiveForTesting
    2482:2483:java.util.Set keySet() -> keySet
    2282:2282:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    1131:1131:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    2408:2411:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2425:2426:void putAll(java.util.Map) -> putAll
    2417:2420:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1090:1091:void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> reclaimKey
    1084:1086:void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    2436:2437:java.lang.Object remove(java.lang.Object) -> remove
    2446:2447:boolean remove(java.lang.Object,java.lang.Object) -> remove
    2453:2459:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    2465:2468:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1111:1111:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    2329:2334:int size() -> size
    2825:2826:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    385:385:com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference() -> unsetWeakValueReference
    2292:2292:com.google.common.base.Equivalence valueEquivalence() -> valueEquivalence
    2287:2287:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
    2490:2491:java.util.Collection values() -> values
    2835:2839:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    1006:1006:void <init>() -> <init>
    1006:1006:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1006:1006:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:
    2866:2872:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2848:2848:java.lang.Object delegate() -> delegate
    2848:2848:java.util.Map delegate() -> delegate
    2877:2877:java.util.concurrent.ConcurrentMap delegate() -> delegate
    2903:2908:void readEntries(java.io.ObjectInputStream) -> readEntries
    2891:2897:com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    2881:2886:void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry:
    344:347:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    357:357:int getHash() -> getHash
    352:352:java.lang.Object getKey() -> getKey
    362:362:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry:
    652:654:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    664:664:int getHash() -> getHash
    659:659:java.lang.Object getKey() -> getKey
    669:669:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$DummyInternalEntry -> com.google.common.collect.MapMakerInternalMap$DummyInternalEntry:
    976:977:void <init>() -> <init>
    987:987:int getHash() -> getHash
    992:992:java.lang.Object getKey() -> getKey
    974:974:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
    982:982:com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext() -> getNext
    997:997:java.lang.Object getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    2675:2675:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2675:2675:java.lang.Object next() -> next
    2679:2679:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    2760:2760:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2804:2804:void clear() -> clear
    2769:2779:boolean contains(java.lang.Object) -> contains
    2799:2799:boolean isEmpty() -> isEmpty
    2764:2764:java.util.Iterator iterator() -> iterator
    2784:2789:boolean remove(java.lang.Object) -> remove
    2794:2794:int size() -> size
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    2514:2517:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2524:2539:void advance() -> advance
    2576:2587:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> advanceTo
    2592:2592:boolean hasNext() -> hasNext
    2596:2601:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    2548:2550:boolean nextInChain() -> nextInChain
    2560:2562:boolean nextInTable() -> nextInTable
    2606:2608:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    2612:2612:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2616:2616:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    2684:2684:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2713:2713:void clear() -> clear
    2703:2703:boolean contains(java.lang.Object) -> contains
    2698:2698:boolean isEmpty() -> isEmpty
    2688:2688:java.util.Iterator iterator() -> iterator
    2708:2708:boolean remove(java.lang.Object) -> remove
    2693:2693:int size() -> size
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    2808:2808:void <init>() -> <init>
    2808:2808:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
    2814:2814:java.lang.Object[] toArray() -> toArray
    2819:2819:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    1205:1210:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1773:1787:void clear() -> clear
    1379:1379:void clearReferenceQueue(java.lang.ref.ReferenceQueue) -> clearReferenceQueue
    1436:1444:boolean containsKey(java.lang.Object,int) -> containsKey
    1454:1473:boolean containsValue(java.lang.Object) -> containsValue
    1235:1235:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    1354:1357:void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> drainKeyReferenceQueue
    1368:1371:void drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> drainValueReferenceQueue
    1536:1599:void expand() -> expand
    1419:1431:java.lang.Object get(java.lang.Object,int) -> get
    1392:1404:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int) -> getEntry
    1385:1386:com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int) -> getFirst
    1414:1414:com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    1949:1955:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1334:1334:java.lang.Object getLiveValueForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValueForTesting
    1243:1248:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    1940:1940:boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isCollected
    1239:1239:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    1968:1969:void postReadCleanup() -> postReadCleanup
    1979:1979:void preWriteCleanup() -> preWriteCleanup
    1477:1530:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    1822:1843:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int) -> reclaimKey
    1849:1877:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    1692:1728:java.lang.Object remove(java.lang.Object,int) -> remove
    1732:1769:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1805:1815:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChain
    1603:1646:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    1650:1687:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    1983:1983:void runCleanup() -> runCleanup
    1987:1993:void runLockedCleanup() -> runLockedCleanup
    1230:1230:void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    1341:1346:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> com.google.common.collect.MapMakerInternalMap$SerializationProxy:
    2927:2927:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2937:2940:void readObject(java.io.ObjectInputStream) -> readObject
    2944:2944:java.lang.Object readResolve() -> readResolve
    2932:2933:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    244:252:void <clinit>() -> <clinit>
    244:244:void <init>(java.lang.String,int) -> <init>
    244:244:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    244:244:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    244:244:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    245:245:void <init>(java.lang.String,int) -> <init>
    248:248:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    252:252:void <init>(java.lang.String,int) -> <init>
    255:255:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:
    392:395:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> <init>
    409:411:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    401:401:java.lang.Object getValue() -> getValue
    405:405:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:
    419:419:void <clinit>() -> <clinit>
    416:416:void <init>() -> <init>
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    451:451:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    423:423:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance() -> instance
    428:428:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    468:468:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> newEntry
    416:416:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    443:443:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    416:416:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    459:459:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object) -> setValue
    433:433:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:
    2007:2007:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1999:1999:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2018:2018:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    1999:1999:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:
    478:481:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> <init>
    502:503:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    486:486:java.lang.Object getValue() -> getValue
    509:509:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    495:497:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:
    516:516:void <clinit>() -> <clinit>
    513:513:void <init>() -> <init>
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    547:550:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    520:520:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance() -> instance
    525:525:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    565:565:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> newEntry
    513:513:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    539:539:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    513:513:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    556:556:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object) -> setValue
    530:530:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:
    2025:2032:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2023:2023:java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> access$100
    2023:2023:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2048:2048:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2083:2083:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2078:2078:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2023:2023:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    2620:2620:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2624:2624:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    2718:2718:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2742:2742:void clear() -> clear
    2737:2737:boolean contains(java.lang.Object) -> contains
    2732:2732:boolean isEmpty() -> isEmpty
    2722:2722:java.util.Iterator iterator() -> iterator
    2727:2727:int size() -> size
    2750:2750:java.lang.Object[] toArray() -> toArray
    2755:2755:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:
    757:764:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> <init>
    779:781:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    770:770:java.lang.Object getValue() -> getValue
    774:774:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:
    789:789:void <clinit>() -> <clinit>
    786:786:void <init>() -> <init>
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    820:824:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    793:793:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance() -> instance
    798:798:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    839:839:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> newEntry
    786:786:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    812:812:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    786:786:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    830:830:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object) -> setValue
    803:803:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:
    2113:2120:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2111:2111:java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment) -> access$300
    2111:2111:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2136:2136:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2146:2146:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2141:2141:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2111:2111:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:
    849:853:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> <init>
    865:867:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    858:858:java.lang.Object getValue() -> getValue
    884:884:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    877:879:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:
    891:891:void <clinit>() -> <clinit>
    888:888:void <init>() -> <init>
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    921:928:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    895:895:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance() -> instance
    900:900:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    943:943:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> newEntry
    888:888:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    913:913:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    888:888:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    934:934:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object) -> setValue
    905:905:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:
    2153:2160:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2151:2151:java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$400
    2151:2151:java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$500
    2151:2151:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2181:2181:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2217:2217:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2211:2212:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2151:2151:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl -> com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl:
    1033:1034:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    1044:1044:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1039:1039:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    2636:2638:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    2654:2656:boolean equals(java.lang.Object) -> equals
    2643:2643:java.lang.Object getKey() -> getKey
    2648:2648:java.lang.Object getValue() -> getValue
    2664:2664:int hashCode() -> hashCode
    2669:2670:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    225:225:int capacity(int) -> capacity
    3484:3486:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    1252:1252:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    112:112:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    3560:3560:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    249:249:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    3412:3414:boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    3399:3401:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    3425:3427:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> safeRemove
    3493:3502:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    108:108:com.google.common.base.Function valueFunction() -> valueFunction
    121:121:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    112:112:void <init>(java.util.Iterator) -> <init>
    112:112:java.lang.Object transform(java.lang.Object) -> transform
    115:115:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    121:121:void <init>(java.util.Iterator) -> <init>
    121:121:java.lang.Object transform(java.lang.Object) -> transform
    124:124:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$DescendingMap -> com.google.common.collect.Maps$DescendingMap:
    3841:3841:void <init>() -> <init>
    3904:3904:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3909:3909:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3856:3862:java.util.Comparator comparator() -> comparator
    3970:3970:java.util.Set createEntrySet() -> createEntrySet
    3840:3840:java.lang.Object delegate() -> delegate
    3848:3848:java.util.Map delegate() -> delegate
    3988:3988:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3944:3944:java.util.NavigableMap descendingMap() -> descendingMap
    3951:3952:java.util.Set entrySet() -> entrySet
    3924:3924:java.util.Map$Entry firstEntry() -> firstEntry
    3874:3874:java.lang.Object firstKey() -> firstKey
    3894:3894:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3899:3899:java.lang.Object floorKey(java.lang.Object) -> floorKey
    4004:4004:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    4009:4009:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3914:3914:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3919:3919:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3975:3975:java.util.Set keySet() -> keySet
    3929:3929:java.util.Map$Entry lastEntry() -> lastEntry
    3879:3879:java.lang.Object lastKey() -> lastKey
    3884:3884:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3889:3889:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3982:3983:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3934:3934:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3939:3939:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3869:3869:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    3994:3994:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3999:3999:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    4014:4014:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    4019:4019:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    4029:4029:java.lang.String toString() -> toString
    4024:4024:java.util.Collection values() -> values
com.google.common.collect.Maps$DescendingMap$1EntrySetImpl -> com.google.common.collect.Maps$DescendingMap$1EntrySetImpl:
    3959:3959:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    3967:3967:java.util.Iterator iterator() -> iterator
    3962:3962:java.util.Map map() -> map
com.google.common.collect.Maps$EntryFunction -> com.google.common.collect.Maps$EntryFunction:
    84:92:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    84:84:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    84:84:com.google.common.collect.Maps$EntryFunction[] values() -> values
com.google.common.collect.Maps$EntryFunction$1 -> com.google.common.collect.Maps$EntryFunction$1:
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:java.lang.Object apply(java.lang.Object) -> apply
    89:89:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> com.google.common.collect.Maps$EntryFunction$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.Object apply(java.lang.Object) -> apply
    96:96:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntrySet -> com.google.common.collect.Maps$EntrySet:
    3774:3774:void <init>() -> <init>
    3784:3784:void clear() -> clear
    3789:3793:boolean contains(java.lang.Object) -> contains
    3800:3800:boolean isEmpty() -> isEmpty
    3805:3807:boolean remove(java.lang.Object) -> remove
    3815:3818:boolean removeAll(java.util.Collection) -> removeAll
    3825:3835:boolean retainAll(java.util.Collection) -> retainAll
    3779:3779:int size() -> size
com.google.common.collect.Maps$IteratorBasedAbstractMap -> com.google.common.collect.Maps$IteratorBasedAbstractMap:
    3367:3367:void <init>() -> <init>
    3390:3390:void clear() -> clear
    3375:3375:java.util.Set entrySet() -> entrySet
com.google.common.collect.Maps$IteratorBasedAbstractMap$1 -> com.google.common.collect.Maps$IteratorBasedAbstractMap$1:
    3375:3375:void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> <init>
    3383:3383:java.util.Iterator iterator() -> iterator
    3378:3378:java.util.Map map() -> map
com.google.common.collect.Maps$KeySet -> com.google.common.collect.Maps$KeySet:
    3515:3516:void <init>(java.util.Map) -> <init>
    3554:3554:void clear() -> clear
    3540:3540:boolean contains(java.lang.Object) -> contains
    3535:3535:boolean isEmpty() -> isEmpty
    3525:3525:java.util.Iterator iterator() -> iterator
    3520:3520:java.util.Map map() -> map
    3545:3546:boolean remove(java.lang.Object) -> remove
    3530:3530:int size() -> size
com.google.common.collect.Maps$NavigableKeySet -> com.google.common.collect.Maps$NavigableKeySet:
    3612:3612:void <init>(java.util.NavigableMap) -> <init>
    3632:3632:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3657:3657:java.util.Iterator descendingIterator() -> descendingIterator
    3652:3652:java.util.NavigableSet descendingSet() -> descendingSet
    3627:3627:java.lang.Object floor(java.lang.Object) -> floor
    3673:3673:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3678:3678:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3637:3637:java.lang.Object higher(java.lang.Object) -> higher
    3622:3622:java.lang.Object lower(java.lang.Object) -> lower
    3609:3609:java.util.Map map() -> map
    3609:3609:java.util.SortedMap map() -> map
    3617:3617:java.util.NavigableMap map() -> map
    3642:3642:java.lang.Object pollFirst() -> pollFirst
    3647:3647:java.lang.Object pollLast() -> pollLast
    3663:3663:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3668:3668:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3683:3683:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3688:3688:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$SortedKeySet -> com.google.common.collect.Maps$SortedKeySet:
    3570:3570:void <init>(java.util.SortedMap) -> <init>
    3580:3580:java.util.Comparator comparator() -> comparator
    3600:3600:java.lang.Object first() -> first
    3605:3605:java.lang.Object last() -> last
com.google.common.collect.Maps$Values -> com.google.common.collect.Maps$Values:
    3695:3696:void <init>(java.util.Map) -> <init>
    3770:3770:void clear() -> clear
    3765:3765:boolean contains(java.lang.Object) -> contains
    3760:3760:boolean isEmpty() -> isEmpty
    3705:3705:java.util.Iterator iterator() -> iterator
    3700:3700:java.util.Map map() -> map
    3711:3715:boolean remove(java.lang.Object) -> remove
    3726:3734:boolean removeAll(java.util.Collection) -> removeAll
    3741:3749:boolean retainAll(java.util.Collection) -> retainAll
    3755:3755:int size() -> size
com.google.common.collect.Maps$ViewCachingAbstractMap -> com.google.common.collect.Maps$ViewCachingAbstractMap:
    3327:3327:void <init>() -> <init>
    3363:3363:java.util.Collection createValues() -> createValues
    3338:3339:java.util.Set entrySet() -> entrySet
    3358:3359:java.util.Collection values() -> values
com.google.common.collect.MultimapBuilder -> com.google.common.collect.MultimapBuilder:
    64:64:void <init>(com.google.common.collect.MultimapBuilder$1) -> <init>
    70:70:void <init>() -> <init>
    76:76:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys() -> hashKeys
    86:87:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int) -> hashKeys
com.google.common.collect.MultimapBuilder$1 -> com.google.common.collect.MultimapBuilder$1:
    87:87:void <init>(int) -> <init>
    90:90:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier -> com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:
    228:229:void <init>(int) -> <init>
    225:225:java.lang.Object get() -> get
    234:234:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:
    276:276:void <init>() -> <init>
    339:339:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues() -> linkedHashSetValues
    349:350:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues(int) -> linkedHashSetValues
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4:
    350:350:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    353:354:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$SetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SetMultimapBuilder:
    438:438:void <init>() -> <init>
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    2070:2072:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> equalsImpl
    298:298:com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    305:306:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    316:316:java.util.Map createAsMap() -> createAsMap
    301:301:java.util.Collection createCollection() -> createCollection
    321:321:java.util.Set createCollection() -> createCollection
    311:311:java.util.Set createKeySet() -> createKeySet
    357:360:void readObject(java.io.ObjectInputStream) -> readObject
    326:331:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    337:342:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    349:351:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$Entries -> com.google.common.collect.Multimaps$Entries:
    1667:1667:void <init>() -> <init>
    1695:1695:void clear() -> clear
    1677:1679:boolean contains(java.lang.Object) -> contains
    1686:1688:boolean remove(java.lang.Object) -> remove
    1672:1672:int size() -> size
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    36:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    66:66:java.lang.Object readResolve() -> readResolve
    61:61:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    225:225:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    209:209:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    215:215:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    194:195:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    128:134:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    151:157:java.lang.Object[] toArrayImpl(java.lang.Object[],int,int,java.lang.Object[]) -> toArrayImpl
    174:174:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    391:391:void <init>() -> <init>
    182:184:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    162:162:com.google.common.collect.Ordering natural() -> natural
    449:449:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    405:405:com.google.common.collect.Ordering reverse() -> reverse
    841:843:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    323:327:void <init>() -> <init>
    353:362:int compare(java.lang.Object,java.lang.Object) -> compare
    330:336:java.lang.Integer getUid(java.lang.Object) -> getUid
    381:381:int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    92:92:java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[]) -> copy
    81:86:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    34:34:java.util.Map newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    42:42:java.util.Map newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    55:55:java.util.Set newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    101:101:com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
com.google.common.collect.Range -> com.google.common.collect.Range:
    298:298:void <clinit>() -> <clinit>
    352:358:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    307:307:com.google.common.collect.Range all() -> all
    118:118:boolean apply(java.lang.Object) -> apply
    445:445:boolean apply(java.lang.Comparable) -> apply
    278:278:com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    243:243:com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    712:712:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> compareOrThrow
    433:435:boolean contains(java.lang.Comparable) -> contains
    156:156:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> create
    288:294:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    667:669:boolean equals(java.lang.Object) -> equals
    269:269:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    364:364:boolean hasLowerBound() -> hasLowerBound
    390:390:boolean hasUpperBound() -> hasUpperBound
    677:677:int hashCode() -> hashCode
    549:558:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    528:529:boolean isConnected(com.google.common.collect.Range) -> isConnected
    234:234:com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    374:374:java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    218:225:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    703:704:java.lang.Object readResolve() -> readResolve
    686:686:java.lang.String toString() -> toString
    690:694:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> toString
    253:259:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    400:400:java.lang.Comparable upperEndpoint() -> upperEndpoint
com.google.common.collect.Range$1 -> com.google.common.collect.Range$1:
    253:253:void <clinit>() -> <clinit>
com.google.common.collect.RangeGwtSerializationDependencies -> com.google.common.collect.RangeGwtSerializationDependencies:
    32:32:void <init>() -> <init>
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    32:32:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.Object[],int) -> <init>
    69:70:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    77:78:java.lang.Object get(int) -> get
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    44:44:int size() -> size
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    47:47:void <clinit>() -> <clinit>
    192:195:void <init>(java.lang.Object,java.lang.Object[],int) -> <init>
    74:82:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[]) -> create
    266:266:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    93:171:java.lang.Object createHashTable(java.lang.Object[],int,int,int) -> createHashTable
    342:344:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    418:418:com.google.common.collect.ImmutableCollection createValues() -> createValues
    181:181:java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int) -> duplicateKeyException
    207:207:java.lang.Object get(java.lang.Object) -> get
    219:258:java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object) -> get
    200:200:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet -> com.google.common.collect.RegularImmutableMap$EntrySet:
    275:279:void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int) -> <init>
    269:269:int access$000(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$000
    269:269:java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$100
    269:269:int access$200(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$200
    319:323:boolean contains(java.lang.Object) -> contains
    289:289:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    294:294:com.google.common.collect.ImmutableList createAsList() -> createAsList
    269:269:java.util.Iterator iterator() -> iterator
    284:284:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    335:335:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet$1 -> com.google.common.collect.RegularImmutableMap$EntrySet$1:
    294:294:void <init>(com.google.common.collect.RegularImmutableMap$EntrySet) -> <init>
    294:294:java.lang.Object get(int) -> get
    297:302:java.util.Map$Entry get(int) -> get
    307:307:int size() -> size
com.google.common.collect.RegularImmutableMap$KeySet -> com.google.common.collect.RegularImmutableMap$KeySet:
    379:381:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList) -> <init>
    396:396:com.google.common.collect.ImmutableList asList() -> asList
    401:401:boolean contains(java.lang.Object) -> contains
    391:391:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    375:375:java.util.Iterator iterator() -> iterator
    386:386:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    411:411:int size() -> size
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList -> com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList:
    352:355:void <init>(java.lang.Object[],int,int) -> <init>
    360:361:java.lang.Object get(int) -> get
    371:371:int size() -> size
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    31:31:void <clinit>() -> <clinit>
    42:47:void <init>(java.lang.Object[],int,java.lang.Object[],int,int) -> <init>
    52:61:boolean contains(java.lang.Object) -> contains
    94:95:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    100:100:com.google.common.collect.ImmutableList createAsList() -> createAsList
    110:110:int hashCode() -> hashCode
    79:79:java.lang.Object[] internalArray() -> internalArray
    89:89:int internalArrayEnd() -> internalArrayEnd
    28:28:java.util.Iterator iterator() -> iterator
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:int size() -> size
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    42:43:void <clinit>() -> <clinit>
    48:49:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    304:304:com.google.common.collect.ImmutableList asList() -> asList
    225:226:java.lang.Object ceiling(java.lang.Object) -> ceiling
    86:86:boolean contains(java.lang.Object) -> contains
    98:133:boolean containsAll(java.util.Collection) -> containsAll
    155:155:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    309:312:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    39:39:java.util.Iterator descendingIterator() -> descendingIterator
    75:75:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    163:192:boolean equals(java.lang.Object) -> equals
    197:200:java.lang.Object first() -> first
    219:220:java.lang.Object floor(java.lang.Object) -> floor
    278:284:com.google.common.collect.RegularImmutableSortedSet getSubSet(int,int) -> getSubSet
    241:241:int headIndex(java.lang.Object,boolean) -> headIndex
    237:237:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    231:232:java.lang.Object higher(java.lang.Object) -> higher
    295:295:int indexOf(java.lang.Object) -> indexOf
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    59:59:int internalArrayStart() -> internalArrayStart
    150:150:boolean isPartialView() -> isPartialView
    39:39:java.util.Iterator iterator() -> iterator
    69:69:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    205:208:java.lang.Object last() -> last
    213:214:java.lang.Object lower(java.lang.Object) -> lower
    80:80:int size() -> size
    252:252:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    261:261:int tailIndex(java.lang.Object,boolean) -> tailIndex
    257:257:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    145:145:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    274:274:java.util.Comparator unsafeComparator() -> unsafeComparator
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    98:98:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    33:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    90:90:java.lang.Object readResolve() -> readResolve
    43:43:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    31:32:void <init>(com.google.common.collect.Ordering) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    98:100:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    107:107:java.lang.String toString() -> toString
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    1668:1672:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    1654:1655:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    255:255:java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    164:164:java.util.HashSet newHashSet() -> newHashSet
    241:241:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    1835:1836:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1842:1856:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
    1694:1697:java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    73:73:void <init>() -> <init>
    76:76:boolean removeAll(java.util.Collection) -> removeAll
    81:81:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$UnmodifiableNavigableSet -> com.google.common.collect.Sets$UnmodifiableNavigableSet:
    1705:1707:void <init>(java.util.NavigableSet) -> <init>
    1727:1727:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1700:1700:java.lang.Object delegate() -> delegate
    1700:1700:java.util.Collection delegate() -> delegate
    1700:1700:java.util.Set delegate() -> delegate
    1712:1712:java.util.SortedSet delegate() -> delegate
    1759:1759:java.util.Iterator descendingIterator() -> descendingIterator
    1749:1752:java.util.NavigableSet descendingSet() -> descendingSet
    1722:1722:java.lang.Object floor(java.lang.Object) -> floor
    1771:1771:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1732:1732:java.lang.Object higher(java.lang.Object) -> higher
    1717:1717:java.lang.Object lower(java.lang.Object) -> lower
    1737:1737:java.lang.Object pollFirst() -> pollFirst
    1742:1742:java.lang.Object pollLast() -> pollLast
    1765:1766:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1776:1776:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    43:44:void <init>(java.lang.Object) -> <init>
    47:50:void <init>(java.lang.Object,int) -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    80:80:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    70:70:com.google.common.collect.ImmutableList createAsList() -> createAsList
    87:89:int hashCode() -> hashCode
    96:96:boolean isHashCodeFast() -> isHashCodeFast
    29:29:java.util.Iterator iterator() -> iterator
    65:65:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    101:101:java.lang.String toString() -> toString
com.google.common.collect.SortedIterables -> com.google.common.collect.SortedIterables:
    53:55:java.util.Comparator comparator(java.util.SortedSet) -> comparator
    37:47:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    58:58:java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    58:58:java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
    58:58:java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> access$700
    101:101:java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    960:960:java.util.Map map(java.util.Map,java.lang.Object) -> map
    1404:1404:java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> navigableMap
    1388:1388:java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> navigableSet
    1592:1592:java.util.Map$Entry nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object) -> nullableSynchronizedEntry
    210:210:java.util.Set set(java.util.Set,java.lang.Object) -> set
    1092:1092:java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    245:245:java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    1159:1159:java.util.Map delegate() -> delegate
    1173:1173:com.google.common.collect.BiMap delegate() -> delegate
    1159:1159:java.util.Collection values() -> values
    1178:1183:java.util.Set values() -> values
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    105:105:void <init>(java.util.Collection,java.lang.Object,com.google.common.collect.Synchronized$1) -> <init>
    107:107:void <init>(java.util.Collection,java.lang.Object) -> <init>
    118:120:boolean add(java.lang.Object) -> add
    125:127:boolean addAll(java.util.Collection) -> addAll
    132:134:void clear() -> clear
    139:141:boolean contains(java.lang.Object) -> contains
    146:148:boolean containsAll(java.util.Collection) -> containsAll
    113:113:java.util.Collection delegate() -> delegate
    153:155:boolean isEmpty() -> isEmpty
    160:160:java.util.Iterator iterator() -> iterator
    165:167:boolean remove(java.lang.Object) -> remove
    172:174:boolean removeAll(java.util.Collection) -> removeAll
    179:181:boolean retainAll(java.util.Collection) -> retainAll
    186:188:int size() -> size
    193:195:java.lang.Object[] toArray() -> toArray
    200:202:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Synchronized$SynchronizedEntry -> com.google.common.collect.Synchronized$SynchronizedEntry:
    1599:1599:void <init>(java.util.Map$Entry,java.lang.Object) -> <init>
    1605:1605:java.util.Map$Entry delegate() -> delegate
    1610:1612:boolean equals(java.lang.Object) -> equals
    1624:1626:java.lang.Object getKey() -> getKey
    1631:1633:java.lang.Object getValue() -> getValue
    1617:1619:int hashCode() -> hashCode
    1638:1640:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    969:969:void <init>(java.util.Map,java.lang.Object) -> <init>
    980:982:void clear() -> clear
    987:989:boolean containsKey(java.lang.Object) -> containsKey
    994:996:boolean containsValue(java.lang.Object) -> containsValue
    975:975:java.util.Map delegate() -> delegate
    1001:1006:java.util.Set entrySet() -> entrySet
    1076:1078:boolean equals(java.lang.Object) -> equals
    1011:1013:java.lang.Object get(java.lang.Object) -> get
    1083:1085:int hashCode() -> hashCode
    1018:1020:boolean isEmpty() -> isEmpty
    1025:1030:java.util.Set keySet() -> keySet
    1035:1037:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1042:1044:void putAll(java.util.Map) -> putAll
    1049:1051:java.lang.Object remove(java.lang.Object) -> remove
    1056:1058:int size() -> size
    1063:1068:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> com.google.common.collect.Synchronized$SynchronizedNavigableMap:
    1413:1413:void <init>(java.util.NavigableMap,java.lang.Object) -> <init>
    1423:1425:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1430:1432:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1407:1407:java.util.Map delegate() -> delegate
    1407:1407:java.util.SortedMap delegate() -> delegate
    1418:1418:java.util.NavigableMap delegate() -> delegate
    1439:1444:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1451:1456:java.util.NavigableMap descendingMap() -> descendingMap
    1461:1463:java.util.Map$Entry firstEntry() -> firstEntry
    1468:1470:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1475:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1482:1484:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1489:1489:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1494:1496:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1501:1503:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1529:1529:java.util.Set keySet() -> keySet
    1508:1510:java.util.Map$Entry lastEntry() -> lastEntry
    1515:1517:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1522:1524:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1536:1541:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1546:1548:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1553:1555:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1561:1563:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1568:1568:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1573:1575:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1580:1580:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> com.google.common.collect.Synchronized$SynchronizedNavigableSet:
    1275:1275:void <init>(java.util.NavigableSet,java.lang.Object) -> <init>
    1285:1287:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1270:1270:java.util.Collection delegate() -> delegate
    1270:1270:java.util.Set delegate() -> delegate
    1270:1270:java.util.SortedSet delegate() -> delegate
    1280:1280:java.util.NavigableSet delegate() -> delegate
    1292:1292:java.util.Iterator descendingIterator() -> descendingIterator
    1299:1306:java.util.NavigableSet descendingSet() -> descendingSet
    1311:1313:java.lang.Object floor(java.lang.Object) -> floor
    1318:1320:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1325:1325:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1330:1332:java.lang.Object higher(java.lang.Object) -> higher
    1337:1339:java.lang.Object lower(java.lang.Object) -> lower
    1344:1346:java.lang.Object pollFirst() -> pollFirst
    1351:1353:java.lang.Object pollLast() -> pollLast
    1359:1362:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1367:1367:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1372:1374:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1379:1379:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    65:67:void <init>(java.lang.Object,java.lang.Object) -> <init>
    71:71:java.lang.Object delegate() -> delegate
    78:80:java.lang.String toString() -> toString
    90:92:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    216:216:void <init>(java.util.Set,java.lang.Object) -> <init>
    213:213:java.util.Collection delegate() -> delegate
    221:221:java.util.Set delegate() -> delegate
    229:231:boolean equals(java.lang.Object) -> equals
    236:238:int hashCode() -> hashCode
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    1099:1099:void <init>(java.util.SortedMap,java.lang.Object) -> <init>
    1109:1111:java.util.Comparator comparator() -> comparator
    1095:1095:java.util.Map delegate() -> delegate
    1104:1104:java.util.SortedMap delegate() -> delegate
    1116:1118:java.lang.Object firstKey() -> firstKey
    1123:1125:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1130:1132:java.lang.Object lastKey() -> lastKey
    1137:1139:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1144:1146:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    250:250:void <init>(java.util.SortedSet,java.lang.Object) -> <init>
    260:262:java.util.Comparator comparator() -> comparator
    248:248:java.util.Collection delegate() -> delegate
    248:248:java.util.Set delegate() -> delegate
    255:255:java.util.SortedSet delegate() -> delegate
    288:290:java.lang.Object first() -> first
    274:276:java.util.SortedSet headSet(java.lang.Object) -> headSet
    295:297:java.lang.Object last() -> last
    267:269:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    281:283:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.TransformedIterator -> com.google.common.collect.TransformedIterator:
    34:35:void <init>(java.util.Iterator) -> <init>
    42:42:boolean hasNext() -> hasNext
    47:47:java.lang.Object next() -> next
    52:52:void remove() -> remove
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.google.common.collect.TreeRangeSet$RangesByUpperBound:
    297:299:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    281:281:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> access$000
    331:331:java.util.Comparator comparator() -> comparator
    336:336:boolean containsKey(java.lang.Object) -> containsKey
    402:416:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    366:383:java.util.Iterator entryIterator() -> entryIterator
    280:280:java.lang.Object get(java.lang.Object) -> get
    341:350:com.google.common.collect.Range get(java.lang.Object) -> get
    280:280:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    321:321:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    440:442:boolean isEmpty() -> isEmpty
    432:435:int size() -> size
    280:280:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    303:306:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    313:316:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    280:280:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    326:326:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$1:
    383:383:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    383:383:java.lang.Object computeNext() -> computeNext
    386:393:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$2:
    416:416:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    416:416:java.lang.Object computeNext() -> computeNext
    419:425:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    35:35:void <init>() -> <init>
    46:46:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    32:32:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    55:55:void set(java.lang.Object) -> set
com.google.common.eventbus.Subscriber -> com.google.common.eventbus.Subscriber:
    112:117:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
    87:96:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.eventbus.Subscriber$SynchronizedSubscriber -> com.google.common.eventbus.Subscriber$SynchronizedSubscriber:
    143:145:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.io.Closer$LoggingSuppressor -> com.google.common.io.Closer$LoggingSuppressor:
    244:244:void <clinit>() -> <clinit>
    242:242:void <init>() -> <init>
com.google.common.io.Closer$SuppressingSuppressor -> com.google.common.io.Closer$SuppressingSuppressor:
    261:267:void <clinit>() -> <clinit>
    259:259:void <init>() -> <init>
    271:271:java.lang.reflect.Method addSuppressedMethodOrNull() -> addSuppressedMethodOrNull
com.google.common.primitives.Bytes -> com.google.common.primitives.Bytes:
    161:168:byte[] concat(byte[][]) -> concat
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    271:272:int constrainToRange(int,int,int) -> constrainToRange
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    120:120:int compare(byte,byte) -> compare
    276:276:java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    288:291:void <clinit>() -> <clinit>
    287:287:void <init>() -> <init>
    438:445:java.util.Comparator getBestComparator() -> getBestComparator
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:int compare(java.lang.Object,java.lang.Object) -> compare
    416:423:int compare(byte[],byte[]) -> compare
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    293:327:void <clinit>() -> <clinit>
    294:294:void <init>(java.lang.String,int) -> <init>
    293:293:int compare(java.lang.Object,java.lang.Object) -> compare
    367:402:int compare(byte[],byte[]) -> compare
    339:360:sun.misc.Unsafe getUnsafe() -> getUnsafe
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    345:345:void <init>() -> <init>
    345:345:java.lang.Object run() -> run
    348:356:sun.misc.Unsafe run() -> run
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    79:79:int compare(long,long) -> compare
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    79:91:void <clinit>() -> <clinit>
    78:78:java.util.logging.Logger access$100() -> access$100
    78:78:com.google.common.base.Splitter access$200() -> access$200
    585:586:java.lang.String getClassName(java.lang.String) -> getClassName
    592:596:java.io.File toFile(java.net.URL) -> toFile
com.google.common.reflect.ClassPath$1 -> com.google.common.reflect.ClassPath$1:
    82:82:void <init>() -> <init>
    82:82:boolean apply(java.lang.Object) -> apply
    85:85:boolean apply(com.google.common.reflect.ClassPath$ClassInfo) -> apply
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    280:281:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    276:276:java.lang.String access$000(com.google.common.reflect.ClassPath$ClassInfo) -> access$000
    344:344:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$DefaultScanner -> com.google.common.reflect.ClassPath$DefaultScanner:
    569:571:void <init>() -> <init>
    579:579:void scanResource(com.google.common.reflect.ClassPath$ResourceInfo) -> scanResource
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    194:197:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    256:258:boolean equals(java.lang.Object) -> equals
    251:251:int hashCode() -> hashCode
    187:190:com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader) -> of
    266:266:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> com.google.common.reflect.ClassPath$Scanner:
    353:357:void <init>() -> <init>
    470:476:com.google.common.collect.ImmutableList getClassLoaderUrls(java.lang.ClassLoader) -> getClassLoaderUrls
    452:466:com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> getClassPathEntries
    508:508:java.net.URL getClassPathEntry(java.io.File,java.lang.String) -> getClassPathEntry
    427:447:com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> getClassPathFromManifest
    485:497:com.google.common.collect.ImmutableList parseJavaClassPath() -> parseJavaClassPath
    367:368:void scan(java.io.File,java.lang.ClassLoader) -> scan
    524:526:void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    544:561:void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,java.util.Set) -> scanDirectory
    380:391:void scanFrom(java.io.File,java.lang.ClassLoader) -> scanFrom
    398:413:void scanJar(java.io.File,java.lang.ClassLoader) -> scanJar
    513:519:void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    33:33:void <init>() -> <init>
    37:37:void <init>(java.lang.String) -> <init>
    47:47:void <init>(java.lang.Error) -> <init>
com.google.common.util.concurrent.ForwardingCondition -> com.google.common.util.concurrent.ForwardingCondition:
    22:22:void <init>() -> <init>
    27:27:void await() -> await
    32:32:boolean await(long,java.util.concurrent.TimeUnit) -> await
    42:42:long awaitNanos(long) -> awaitNanos
    37:37:void awaitUninterruptibly() -> awaitUninterruptibly
    47:47:boolean awaitUntil(java.util.Date) -> awaitUntil
    52:52:void signal() -> signal
    57:57:void signalAll() -> signalAll
com.google.common.util.concurrent.ForwardingLock -> com.google.common.util.concurrent.ForwardingLock:
    22:22:void <init>() -> <init>
    27:27:void lock() -> lock
    32:32:void lockInterruptibly() -> lockInterruptibly
    37:37:boolean tryLock() -> tryLock
    42:42:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    47:47:void unlock() -> unlock
com.google.common.util.concurrent.FuturesGetChecked -> com.google.common.util.concurrent.FuturesGetChecked:
    249:257:void <clinit>() -> <clinit>
    290:295:void checkExceptionClassValidity(java.lang.Class) -> checkExceptionClassValidity
    101:101:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator() -> classValueValidator
    53:61:java.lang.Object getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class) -> getChecked
    216:216:boolean hasConstructorUsableByGetChecked(java.lang.Class) -> hasConstructorUsableByGetChecked
    285:285:boolean isCheckedException(java.lang.Class) -> isCheckedException
    261:274:java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> newFromConstructor
    226:236:java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> newWithCause
    245:245:java.util.List preferringStrings(java.util.List) -> preferringStrings
    95:95:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator() -> weakSetValidator
    199:205:void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> wrapAndThrowExceptionOrError
com.google.common.util.concurrent.FuturesGetChecked$1 -> com.google.common.util.concurrent.FuturesGetChecked$1:
    251:251:void <init>() -> <init>
    251:251:java.lang.Object apply(java.lang.Object) -> apply
    254:254:java.lang.Boolean apply(java.lang.reflect.Constructor) -> apply
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:
    112:115:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    188:191:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator getBestValidator() -> getBestValidator
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator:
    117:126:void <clinit>() -> <clinit>
    119:119:void <init>(java.lang.String,int) -> <init>
    137:137:void validateClass(java.lang.Class) -> validateClass
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator valueOf(java.lang.String) -> valueOf
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] values() -> values
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1 -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1:
    127:127:void <init>() -> <init>
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:
    141:152:void <clinit>() -> <clinit>
    141:141:void <init>(java.lang.String,int) -> <init>
    157:178:void validateClass(java.lang.Class) -> validateClass
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator valueOf(java.lang.String) -> valueOf
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] values() -> values
com.google.common.util.concurrent.MoreExecutors$Application -> com.google.common.util.concurrent.MoreExecutors$Application:
    170:170:void <init>() -> <init>
    224:224:void addShutdownHook(java.lang.Thread) -> addShutdownHook
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    300:308:void <clinit>() -> <clinit>
    93:93:void <init>() -> <init>
com.google.common.util.concurrent.Striped$5 -> com.google.common.util.concurrent.Striped$5:
    301:301:void <init>() -> <init>
    301:301:java.lang.Object get() -> get
    304:304:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$6 -> com.google.common.util.concurrent.Striped$6:
    309:309:void <init>() -> <init>
    309:309:java.lang.Object get() -> get
    312:312:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$WeakSafeCondition -> com.google.common.util.concurrent.Striped$WeakSafeCondition:
    369:371:void <init>(java.util.concurrent.locks.Condition,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    376:376:java.util.concurrent.locks.Condition delegate() -> delegate
com.google.common.util.concurrent.Striped$WeakSafeLock -> com.google.common.util.concurrent.Striped$WeakSafeLock:
    346:348:void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    353:353:java.util.concurrent.locks.Lock delegate() -> delegate
    358:358:java.util.concurrent.locks.Condition newCondition() -> newCondition
com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock -> com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:
    324:325:void <init>() -> <init>
    330:330:java.util.concurrent.locks.Lock readLock() -> readLock
    335:335:java.util.concurrent.locks.Lock writeLock() -> writeLock
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    57:57:void <clinit>() -> <clinit>
    68:77:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    38:38:void <init>() -> <init>
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.Throwable) -> <init>
