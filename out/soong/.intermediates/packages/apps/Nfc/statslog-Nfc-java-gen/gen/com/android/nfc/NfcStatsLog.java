// This file is autogenerated

package com.android.nfc;


import android.util.StatsEvent;
import android.util.StatsLog;


/**
 * Utility class for logging statistics events.
 */
public class NfcStatsLog {
    // Constants for atom codes.

    /**
     * NfcErrorOccurred nfc_error_occurred<br>
     * Usage: StatsLog.write(StatsLog.NFC_ERROR_OCCURRED, int type, int nci_cmd, int error_ntf_status_code);<br>
     */
    public static final int NFC_ERROR_OCCURRED = 134;

    /**
     * NfcStateChanged nfc_state_changed<br>
     * Usage: StatsLog.write(StatsLog.NFC_STATE_CHANGED, int state);<br>
     */
    public static final int NFC_STATE_CHANGED = 135;

    /**
     * NfcBeamOccurred nfc_beam_occurred<br>
     * Usage: StatsLog.write(StatsLog.NFC_BEAM_OCCURRED, int operation);<br>
     */
    public static final int NFC_BEAM_OCCURRED = 136;

    /**
     * NfcCardemulationOccurred nfc_cardemulation_occurred<br>
     * Usage: StatsLog.write(StatsLog.NFC_CARDEMULATION_OCCURRED, int category, java.lang.String se_name);<br>
     */
    public static final int NFC_CARDEMULATION_OCCURRED = 137;

    /**
     * NfcTagOccurred nfc_tag_occurred<br>
     * Usage: StatsLog.write(StatsLog.NFC_TAG_OCCURRED, int type);<br>
     */
    public static final int NFC_TAG_OCCURRED = 138;

    /**
     * NfcHceTransactionOccurred nfc_hce_transaction_occurred<br>
     * Usage: StatsLog.write(StatsLog.NFC_HCE_TRANSACTION_OCCURRED, int latency_micros);<br>
     */
    public static final int NFC_HCE_TRANSACTION_OCCURRED = 139;

    // Constants for enum values.

    // Values for NfcErrorOccurred.type
    public static final int NFC_ERROR_OCCURRED__TYPE__UNKNOWN = 0;
    public static final int NFC_ERROR_OCCURRED__TYPE__CMD_TIMEOUT = 1;
    public static final int NFC_ERROR_OCCURRED__TYPE__ERROR_NOTIFICATION = 2;
    public static final int NFC_ERROR_OCCURRED__TYPE__AID_OVERFLOW = 3;

    // Values for NfcStateChanged.state
    public static final int NFC_STATE_CHANGED__STATE__UNKNOWN = 0;
    public static final int NFC_STATE_CHANGED__STATE__OFF = 1;
    public static final int NFC_STATE_CHANGED__STATE__ON = 2;
    public static final int NFC_STATE_CHANGED__STATE__ON_LOCKED = 3;
    public static final int NFC_STATE_CHANGED__STATE__CRASH_RESTART = 4;

    // Values for NfcBeamOccurred.operation
    public static final int NFC_BEAM_OCCURRED__OPERATION__UNKNOWN = 0;
    public static final int NFC_BEAM_OCCURRED__OPERATION__SEND = 1;
    public static final int NFC_BEAM_OCCURRED__OPERATION__RECEIVE = 2;

    // Values for NfcCardemulationOccurred.category
    public static final int NFC_CARDEMULATION_OCCURRED__CATEGORY__UNKNOWN = 0;
    public static final int NFC_CARDEMULATION_OCCURRED__CATEGORY__HCE_PAYMENT = 1;
    public static final int NFC_CARDEMULATION_OCCURRED__CATEGORY__HCE_OTHER = 2;
    public static final int NFC_CARDEMULATION_OCCURRED__CATEGORY__OFFHOST = 3;

    // Values for NfcTagOccurred.type
    public static final int NFC_TAG_OCCURRED__TYPE__UNKNOWN = 0;
    public static final int NFC_TAG_OCCURRED__TYPE__URL = 1;
    public static final int NFC_TAG_OCCURRED__TYPE__BT_PAIRING = 2;
    public static final int NFC_TAG_OCCURRED__TYPE__PROVISION = 3;
    public static final int NFC_TAG_OCCURRED__TYPE__WIFI_CONNECT = 4;
    public static final int NFC_TAG_OCCURRED__TYPE__APP_LAUNCH = 5;
    public static final int NFC_TAG_OCCURRED__TYPE__OTHERS = 6;

    // Annotation constants.
    public static final byte ANNOTATION_ID_IS_UID = StatsLog.ANNOTATION_ID_IS_UID;
    public static final byte ANNOTATION_ID_TRUNCATE_TIMESTAMP = StatsLog.ANNOTATION_ID_TRUNCATE_TIMESTAMP;
    public static final byte ANNOTATION_ID_PRIMARY_FIELD = StatsLog.ANNOTATION_ID_PRIMARY_FIELD;
    public static final byte ANNOTATION_ID_EXCLUSIVE_STATE = StatsLog.ANNOTATION_ID_EXCLUSIVE_STATE;
    public static final byte ANNOTATION_ID_PRIMARY_FIELD_FIRST_UID = StatsLog.ANNOTATION_ID_PRIMARY_FIELD_FIRST_UID;
    public static final byte ANNOTATION_ID_TRIGGER_STATE_RESET = StatsLog.ANNOTATION_ID_TRIGGER_STATE_RESET;
    public static final byte ANNOTATION_ID_STATE_NESTED = StatsLog.ANNOTATION_ID_STATE_NESTED;

    // Write methods
    public static void write(int code, int arg1) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, java.lang.String arg2) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeString(arg2);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

}
