/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.certinstaller;

public final class R {
  public static final class array {
    /**
     * Usage type for a credential that the user is installing. The label will restrict the
     * type of use for that credential. [CHAR LIMIT=40]
     */
    public static final int credential_usage=0x7f010000;
  }
  public static final class color {
    public static final int red=0x7f020000;
  }
  public static final class dimen {
    public static final int dialog_normal_text_size=0x7f030000;
  }
  public static final class drawable {
    public static final int signal_wifi_4_bar_lock_black_24dp=0x7f040000;
  }
  public static final class id {
    public static final int certificate_name=0x7f050000;
    public static final int certificate_usage=0x7f050001;
    public static final int certificate_usage_group=0x7f050002;
    public static final int credential_installed_content=0x7f050003;
    public static final int credential_password=0x7f050004;
    public static final int error=0x7f050005;
    public static final int user_certificate=0x7f050006;
    public static final int wifi_certificate=0x7f050007;
    public static final int wifi_info=0x7f050008;
  }
  public static final class layout {
    public static final int credentials_installed_dialog=0x7f060000;
    public static final int name_certificate_dialog=0x7f060001;
    public static final int password_dialog=0x7f060002;
    public static final int select_certificate_usage_dialog=0x7f060003;
    public static final int wifi_main_dialog=0x7f060004;
  }
  public static final class string {
    public static final int action_missing_private_key=0x7f070000;
    public static final int action_missing_user_cert=0x7f070001;
    public static final int app_name=0x7f070002;
    /**
     * Confirmation toast. This toast lets the user know that they successfully installed a CA certificate on their device.
     */
    public static final int ca_cert_is_added=0x7f070003;
    /**
     * CA certificate type used in dialog to inform user that certificate selected is invalid
     */
    public static final int ca_certificate=0x7f070004;
    /**
     * toast message
     */
    public static final int cert_missing_error=0x7f070005;
    public static final int cert_not_saved=0x7f070006;
    /**
     * toast message
     */
    public static final int cert_read_error=0x7f070007;
    /**
     * toast message
     */
    public static final int cert_temp_error=0x7f070008;
    /**
     * toast message
     */
    public static final int cert_too_large_error=0x7f070009;
    /**
     * Default certificate type used in dialog to inform user that certificate selected is invalid
     */
    public static final int certificate=0x7f07000a;
    /**
     * Explain that the issuer of the CA certificate that is about to be installed can inspect
     * all of the traffic of the device.
     */
    public static final int certificate_capabilities_warning=0x7f07000b;
    /**
     * Input field in a dialog. This dialog is asking the user to name the certificate they are installing on their device.
     */
    public static final int certificate_name=0x7f07000c;
    public static final int config_system_install_component=0x7f07000d;
    public static final int credential_info=0x7f07000e;
    /**
     * Description for the credential password input box
     */
    public static final int credential_password=0x7f07000f;
    /**
     * Label for spinner that shows the possible usage for a credential. Shown when user is
     * installing a credential [CHAR LIMIT=40]
     */
    public static final int credential_usage_label=0x7f070010;
    public static final int done_label=0x7f070011;
    /**
     * message in progress bar when waiting for extracting certs from a pkcs12 package
     */
    public static final int extracting_pkcs12=0x7f070012;
    public static final int install_done=0x7f070013;
    public static final int install_done_title=0x7f070014;
    public static final int invalid_cert=0x7f070015;
    /**
     * Button of dialog to inform user that certificate selected is invalid
     */
    public static final int invalid_certificate_close_button=0x7f070016;
    /**
     * Message of dialog to inform user that certificate selected is invalid
     */
    public static final int invalid_certificate_message=0x7f070017;
    /**
     * Title of dialog to inform user that certificate selected is invalid
     */
    public static final int invalid_certificate_title=0x7f070018;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int n_cacrts=0x7f070019;
    public static final int name_char_error=0x7f07001a;
    /**
     * Title of a dialog. This title is asking the user to name the certificate they're installing on their device.
     */
    public static final int name_credential_dialog_title=0x7f07001b;
    public static final int name_empty_error=0x7f07001c;
    public static final int no_cert_to_saved=0x7f07001d;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_cacrt=0x7f07001e;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_usercrt=0x7f07001f;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_userkey=0x7f070020;
    /**
     * Message displayed when a user other than the owner on a multi-user system tries to
     * install a certificate into the certificate store. [CHAR LIMIT=NONE]
     */
    public static final int only_primary_user_allowed=0x7f070021;
    public static final int p12_description=0x7f070022;
    public static final int password_empty_error=0x7f070023;
    public static final int password_error=0x7f070024;
    /**
     * Title of the file picker screen
     */
    public static final int pick_file_title=0x7f070025;
    /**
     * Title of dialog to enter password for pkcs12 file
     */
    public static final int pkcs12_file_password_dialog_title=0x7f070026;
    /**
     * Title of dialog to enter password for pkcs12
     */
    public static final int pkcs12_password_dialog_title=0x7f070027;
    /**
     * Button of dialog to redirect user when installing a CA certificate outside Settings
     */
    public static final int redirect_ca_certificate_close_button=0x7f070028;
    /**
     * Title of dialog that lets the user know that they must install CA certificates
     * in Settings.
     */
    public static final int redirect_ca_certificate_title=0x7f070029;
    /**
     * Message of dialog that lets the user know that they must install CA certificates in
     * Settings. The placeholder is the name of the app that was trying to install the CA
     * certificate.
     */
    public static final int redirect_ca_certificate_with_app_info_message=0x7f07002a;
    /**
     * Title of dialog to select the certificate usage when installing a certificate outside Settings
     */
    public static final int select_certificate_usage_title=0x7f07002b;
    public static final int unable_to_save_cert=0x7f07002c;
    /**
     * Confirmation toast. This toast lets the user know that they successfully installed a user certificate on their device.
     */
    public static final int user_cert_is_added=0x7f07002d;
    /**
     * User certificate type used in dialog to inform user that certificate selected is invalid
     */
    public static final int user_certificate=0x7f07002e;
    /**
     * Type of key found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int userkey_type=0x7f07002f;
    public static final int wifi_cancel_label=0x7f070030;
    /**
     * Confirmation toast. This toast lets the user know that they successfully installed a Wi-Fi certificate on their device.
     */
    public static final int wifi_cert_is_added=0x7f070031;
    /**
     * WiFi certificate type used in dialog to inform user that certificate selected is invalid
     */
    public static final int wifi_certificate=0x7f070032;
    public static final int wifi_config_text=0x7f070033;
    public static final int wifi_detail_label=0x7f070034;
    public static final int wifi_detail_title=0x7f070035;
    public static final int wifi_dismiss_label=0x7f070036;
    public static final int wifi_install_label=0x7f070037;
    public static final int wifi_installer_detail=0x7f070038;
    public static final int wifi_installer_download_error=0x7f070039;
    public static final int wifi_installer_fail=0x7f07003a;
    public static final int wifi_installer_fail_no_wifi=0x7f07003b;
    public static final int wifi_installer_fail_no_wifi_title=0x7f07003c;
    public static final int wifi_installer_fail_title=0x7f07003d;
    /**
     * Toast message to be displayed when installing Hotspot 2.0 credentials [CHAR LIMIT=40]
     */
    public static final int wifi_installing_label=0x7f07003e;
    public static final int wifi_no_config=0x7f07003f;
    public static final int wifi_sim_config_text=0x7f070040;
    public static final int wifi_title=0x7f070041;
    public static final int wifi_tls_config_text=0x7f070042;
    public static final int wifi_trust_config_text=0x7f070043;
    public static final int wifi_ttls_config_text=0x7f070044;
  }
  public static final class style {
    public static final int Transparent=0x7f080000;
    public static final int dialog_button=0x7f080001;
    public static final int dialog_edit_text=0x7f080002;
    public static final int dialog_item=0x7f080003;
    public static final int dialog_title=0x7f080004;
  }
  public static final class xml {
    public static final int pick_file_pref=0x7f090000;
  }
}