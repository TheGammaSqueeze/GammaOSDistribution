// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/modules/StatsD/statsd/src/statsd_metadata.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace os {
namespace statsd {
namespace metadata {
class AlertDimensionKeyedData;
class AlertDimensionKeyedDataDefaultTypeInternal;
extern AlertDimensionKeyedDataDefaultTypeInternal _AlertDimensionKeyedData_default_instance_;
class AlertMetadata;
class AlertMetadataDefaultTypeInternal;
extern AlertMetadataDefaultTypeInternal _AlertMetadata_default_instance_;
class ConfigKey;
class ConfigKeyDefaultTypeInternal;
extern ConfigKeyDefaultTypeInternal _ConfigKey_default_instance_;
class Field;
class FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class FieldValue;
class FieldValueDefaultTypeInternal;
extern FieldValueDefaultTypeInternal _FieldValue_default_instance_;
class MetricDimensionKey;
class MetricDimensionKeyDefaultTypeInternal;
extern MetricDimensionKeyDefaultTypeInternal _MetricDimensionKey_default_instance_;
class StatsMetadata;
class StatsMetadataDefaultTypeInternal;
extern StatsMetadataDefaultTypeInternal _StatsMetadata_default_instance_;
class StatsMetadataList;
class StatsMetadataListDefaultTypeInternal;
extern StatsMetadataListDefaultTypeInternal _StatsMetadataList_default_instance_;
}  // namespace metadata
}  // namespace statsd
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::statsd::metadata::AlertDimensionKeyedData* Arena::CreateMaybeMessage<::android::os::statsd::metadata::AlertDimensionKeyedData>(Arena*);
template<> ::android::os::statsd::metadata::AlertMetadata* Arena::CreateMaybeMessage<::android::os::statsd::metadata::AlertMetadata>(Arena*);
template<> ::android::os::statsd::metadata::ConfigKey* Arena::CreateMaybeMessage<::android::os::statsd::metadata::ConfigKey>(Arena*);
template<> ::android::os::statsd::metadata::Field* Arena::CreateMaybeMessage<::android::os::statsd::metadata::Field>(Arena*);
template<> ::android::os::statsd::metadata::FieldValue* Arena::CreateMaybeMessage<::android::os::statsd::metadata::FieldValue>(Arena*);
template<> ::android::os::statsd::metadata::MetricDimensionKey* Arena::CreateMaybeMessage<::android::os::statsd::metadata::MetricDimensionKey>(Arena*);
template<> ::android::os::statsd::metadata::StatsMetadata* Arena::CreateMaybeMessage<::android::os::statsd::metadata::StatsMetadata>(Arena*);
template<> ::android::os::statsd::metadata::StatsMetadataList* Arena::CreateMaybeMessage<::android::os::statsd::metadata::StatsMetadataList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {
namespace statsd {
namespace metadata {

// ===================================================================

class ConfigKey :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.ConfigKey) */ {
 public:
  ConfigKey();
  virtual ~ConfigKey();

  ConfigKey(const ConfigKey& from);
  ConfigKey(ConfigKey&& from) noexcept
    : ConfigKey() {
    *this = ::std::move(from);
  }

  inline ConfigKey& operator=(const ConfigKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigKey& operator=(ConfigKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ConfigKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigKey* internal_default_instance() {
    return reinterpret_cast<const ConfigKey*>(
               &_ConfigKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConfigKey& a, ConfigKey& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigKey* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigKey* New() const final {
    return CreateMaybeMessage<ConfigKey>(nullptr);
  }

  ConfigKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigKey>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ConfigKey& from);
  void MergeFrom(const ConfigKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.ConfigKey";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 1,
    kUidFieldNumber = 2,
  };
  // optional int64 config_id = 1;
  bool has_config_id() const;
  void clear_config_id();
  ::PROTOBUF_NAMESPACE_ID::int64 config_id() const;
  void set_config_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.ConfigKey)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 config_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class Field :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.Field) */ {
 public:
  Field();
  virtual ~Field();

  Field(const Field& from);
  Field(Field&& from) noexcept
    : Field() {
    *this = ::std::move(from);
  }

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline Field& operator=(Field&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const Field& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Field& a, Field& b) {
    a.Swap(&b);
  }
  inline void Swap(Field* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Field* New() const final {
    return CreateMaybeMessage<Field>(nullptr);
  }

  Field* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Field>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Field* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.Field";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
    kFieldFieldNumber = 2,
  };
  // optional int32 tag = 1;
  bool has_tag() const;
  void clear_tag();
  ::PROTOBUF_NAMESPACE_ID::int32 tag() const;
  void set_tag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 field = 2;
  bool has_field() const;
  void clear_field();
  ::PROTOBUF_NAMESPACE_ID::int32 field() const;
  void set_field(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.Field)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 tag_;
  ::PROTOBUF_NAMESPACE_ID::int32 field_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class FieldValue :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.FieldValue) */ {
 public:
  FieldValue();
  virtual ~FieldValue();

  FieldValue(const FieldValue& from);
  FieldValue(FieldValue&& from) noexcept
    : FieldValue() {
    *this = ::std::move(from);
  }

  inline FieldValue& operator=(const FieldValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldValue& operator=(FieldValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FieldValue& default_instance();

  enum ValueCase {
    kValueInt = 2,
    kValueLong = 3,
    kValueFloat = 4,
    kValueDouble = 5,
    kValueStr = 6,
    kValueStorage = 7,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldValue* internal_default_instance() {
    return reinterpret_cast<const FieldValue*>(
               &_FieldValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FieldValue& a, FieldValue& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldValue* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FieldValue* New() const final {
    return CreateMaybeMessage<FieldValue>(nullptr);
  }

  FieldValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FieldValue>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const FieldValue& from);
  void MergeFrom(const FieldValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FieldValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.FieldValue";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kValueIntFieldNumber = 2,
    kValueLongFieldNumber = 3,
    kValueFloatFieldNumber = 4,
    kValueDoubleFieldNumber = 5,
    kValueStrFieldNumber = 6,
    kValueStorageFieldNumber = 7,
  };
  // optional .android.os.statsd.metadata.Field field = 1;
  bool has_field() const;
  void clear_field();
  const ::android::os::statsd::metadata::Field& field() const;
  ::android::os::statsd::metadata::Field* release_field();
  ::android::os::statsd::metadata::Field* mutable_field();
  void set_allocated_field(::android::os::statsd::metadata::Field* field);

  // optional int32 value_int = 2;
  bool has_value_int() const;
  void clear_value_int();
  ::PROTOBUF_NAMESPACE_ID::int32 value_int() const;
  void set_value_int(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 value_long = 3;
  bool has_value_long() const;
  void clear_value_long();
  ::PROTOBUF_NAMESPACE_ID::int64 value_long() const;
  void set_value_long(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional float value_float = 4;
  bool has_value_float() const;
  void clear_value_float();
  float value_float() const;
  void set_value_float(float value);

  // optional double value_double = 5;
  bool has_value_double() const;
  void clear_value_double();
  double value_double() const;
  void set_value_double(double value);

  // optional string value_str = 6;
  bool has_value_str() const;
  void clear_value_str();
  const std::string& value_str() const;
  void set_value_str(const std::string& value);
  void set_value_str(std::string&& value);
  void set_value_str(const char* value);
  void set_value_str(const char* value, size_t size);
  std::string* mutable_value_str();
  std::string* release_value_str();
  void set_allocated_value_str(std::string* value_str);

  // optional bytes value_storage = 7;
  bool has_value_storage() const;
  void clear_value_storage();
  const std::string& value_storage() const;
  void set_value_storage(const std::string& value);
  void set_value_storage(std::string&& value);
  void set_value_storage(const char* value);
  void set_value_storage(const void* value, size_t size);
  std::string* mutable_value_storage();
  std::string* release_value_storage();
  void set_allocated_value_storage(std::string* value_storage);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.FieldValue)
 private:
  class _Internal;
  void set_has_value_int();
  void set_has_value_long();
  void set_has_value_float();
  void set_has_value_double();
  void set_has_value_str();
  void set_has_value_storage();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::os::statsd::metadata::Field* field_;
  union ValueUnion {
    ValueUnion() {}
    ::PROTOBUF_NAMESPACE_ID::int32 value_int_;
    ::PROTOBUF_NAMESPACE_ID::int64 value_long_;
    float value_float_;
    double value_double_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_str_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_storage_;
  } value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class MetricDimensionKey :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.MetricDimensionKey) */ {
 public:
  MetricDimensionKey();
  virtual ~MetricDimensionKey();

  MetricDimensionKey(const MetricDimensionKey& from);
  MetricDimensionKey(MetricDimensionKey&& from) noexcept
    : MetricDimensionKey() {
    *this = ::std::move(from);
  }

  inline MetricDimensionKey& operator=(const MetricDimensionKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricDimensionKey& operator=(MetricDimensionKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MetricDimensionKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MetricDimensionKey* internal_default_instance() {
    return reinterpret_cast<const MetricDimensionKey*>(
               &_MetricDimensionKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MetricDimensionKey& a, MetricDimensionKey& b) {
    a.Swap(&b);
  }
  inline void Swap(MetricDimensionKey* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MetricDimensionKey* New() const final {
    return CreateMaybeMessage<MetricDimensionKey>(nullptr);
  }

  MetricDimensionKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MetricDimensionKey>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const MetricDimensionKey& from);
  void MergeFrom(const MetricDimensionKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetricDimensionKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.MetricDimensionKey";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionKeyInWhatFieldNumber = 1,
    kStateValuesKeyFieldNumber = 2,
  };
  // repeated .android.os.statsd.metadata.FieldValue dimension_key_in_what = 1;
  int dimension_key_in_what_size() const;
  void clear_dimension_key_in_what();
  ::android::os::statsd::metadata::FieldValue* mutable_dimension_key_in_what(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >*
      mutable_dimension_key_in_what();
  const ::android::os::statsd::metadata::FieldValue& dimension_key_in_what(int index) const;
  ::android::os::statsd::metadata::FieldValue* add_dimension_key_in_what();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >&
      dimension_key_in_what() const;

  // repeated .android.os.statsd.metadata.FieldValue state_values_key = 2;
  int state_values_key_size() const;
  void clear_state_values_key();
  ::android::os::statsd::metadata::FieldValue* mutable_state_values_key(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >*
      mutable_state_values_key();
  const ::android::os::statsd::metadata::FieldValue& state_values_key(int index) const;
  ::android::os::statsd::metadata::FieldValue* add_state_values_key();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >&
      state_values_key() const;

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.MetricDimensionKey)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue > dimension_key_in_what_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue > state_values_key_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class AlertDimensionKeyedData :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.AlertDimensionKeyedData) */ {
 public:
  AlertDimensionKeyedData();
  virtual ~AlertDimensionKeyedData();

  AlertDimensionKeyedData(const AlertDimensionKeyedData& from);
  AlertDimensionKeyedData(AlertDimensionKeyedData&& from) noexcept
    : AlertDimensionKeyedData() {
    *this = ::std::move(from);
  }

  inline AlertDimensionKeyedData& operator=(const AlertDimensionKeyedData& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertDimensionKeyedData& operator=(AlertDimensionKeyedData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AlertDimensionKeyedData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertDimensionKeyedData* internal_default_instance() {
    return reinterpret_cast<const AlertDimensionKeyedData*>(
               &_AlertDimensionKeyedData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AlertDimensionKeyedData& a, AlertDimensionKeyedData& b) {
    a.Swap(&b);
  }
  inline void Swap(AlertDimensionKeyedData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlertDimensionKeyedData* New() const final {
    return CreateMaybeMessage<AlertDimensionKeyedData>(nullptr);
  }

  AlertDimensionKeyedData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlertDimensionKeyedData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AlertDimensionKeyedData& from);
  void MergeFrom(const AlertDimensionKeyedData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlertDimensionKeyedData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.AlertDimensionKeyedData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionKeyFieldNumber = 2,
    kLastRefractoryEndsSecFieldNumber = 1,
  };
  // optional .android.os.statsd.metadata.MetricDimensionKey dimension_key = 2;
  bool has_dimension_key() const;
  void clear_dimension_key();
  const ::android::os::statsd::metadata::MetricDimensionKey& dimension_key() const;
  ::android::os::statsd::metadata::MetricDimensionKey* release_dimension_key();
  ::android::os::statsd::metadata::MetricDimensionKey* mutable_dimension_key();
  void set_allocated_dimension_key(::android::os::statsd::metadata::MetricDimensionKey* dimension_key);

  // optional int32 last_refractory_ends_sec = 1;
  bool has_last_refractory_ends_sec() const;
  void clear_last_refractory_ends_sec();
  ::PROTOBUF_NAMESPACE_ID::int32 last_refractory_ends_sec() const;
  void set_last_refractory_ends_sec(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.AlertDimensionKeyedData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::os::statsd::metadata::MetricDimensionKey* dimension_key_;
  ::PROTOBUF_NAMESPACE_ID::int32 last_refractory_ends_sec_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class AlertMetadata :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.AlertMetadata) */ {
 public:
  AlertMetadata();
  virtual ~AlertMetadata();

  AlertMetadata(const AlertMetadata& from);
  AlertMetadata(AlertMetadata&& from) noexcept
    : AlertMetadata() {
    *this = ::std::move(from);
  }

  inline AlertMetadata& operator=(const AlertMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertMetadata& operator=(AlertMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AlertMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlertMetadata* internal_default_instance() {
    return reinterpret_cast<const AlertMetadata*>(
               &_AlertMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AlertMetadata& a, AlertMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(AlertMetadata* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlertMetadata* New() const final {
    return CreateMaybeMessage<AlertMetadata>(nullptr);
  }

  AlertMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlertMetadata>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AlertMetadata& from);
  void MergeFrom(const AlertMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlertMetadata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.AlertMetadata";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlertDimKeyedDataFieldNumber = 2,
    kAlertIdFieldNumber = 1,
  };
  // repeated .android.os.statsd.metadata.AlertDimensionKeyedData alert_dim_keyed_data = 2;
  int alert_dim_keyed_data_size() const;
  void clear_alert_dim_keyed_data();
  ::android::os::statsd::metadata::AlertDimensionKeyedData* mutable_alert_dim_keyed_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertDimensionKeyedData >*
      mutable_alert_dim_keyed_data();
  const ::android::os::statsd::metadata::AlertDimensionKeyedData& alert_dim_keyed_data(int index) const;
  ::android::os::statsd::metadata::AlertDimensionKeyedData* add_alert_dim_keyed_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertDimensionKeyedData >&
      alert_dim_keyed_data() const;

  // optional int64 alert_id = 1;
  bool has_alert_id() const;
  void clear_alert_id();
  ::PROTOBUF_NAMESPACE_ID::int64 alert_id() const;
  void set_alert_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.AlertMetadata)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertDimensionKeyedData > alert_dim_keyed_data_;
  ::PROTOBUF_NAMESPACE_ID::int64 alert_id_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class StatsMetadata :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.StatsMetadata) */ {
 public:
  StatsMetadata();
  virtual ~StatsMetadata();

  StatsMetadata(const StatsMetadata& from);
  StatsMetadata(StatsMetadata&& from) noexcept
    : StatsMetadata() {
    *this = ::std::move(from);
  }

  inline StatsMetadata& operator=(const StatsMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatsMetadata& operator=(StatsMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StatsMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatsMetadata* internal_default_instance() {
    return reinterpret_cast<const StatsMetadata*>(
               &_StatsMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(StatsMetadata& a, StatsMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(StatsMetadata* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatsMetadata* New() const final {
    return CreateMaybeMessage<StatsMetadata>(nullptr);
  }

  StatsMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatsMetadata>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StatsMetadata& from);
  void MergeFrom(const StatsMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatsMetadata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.StatsMetadata";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlertMetadataFieldNumber = 2,
    kConfigKeyFieldNumber = 1,
  };
  // repeated .android.os.statsd.metadata.AlertMetadata alert_metadata = 2;
  int alert_metadata_size() const;
  void clear_alert_metadata();
  ::android::os::statsd::metadata::AlertMetadata* mutable_alert_metadata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertMetadata >*
      mutable_alert_metadata();
  const ::android::os::statsd::metadata::AlertMetadata& alert_metadata(int index) const;
  ::android::os::statsd::metadata::AlertMetadata* add_alert_metadata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertMetadata >&
      alert_metadata() const;

  // optional .android.os.statsd.metadata.ConfigKey config_key = 1;
  bool has_config_key() const;
  void clear_config_key();
  const ::android::os::statsd::metadata::ConfigKey& config_key() const;
  ::android::os::statsd::metadata::ConfigKey* release_config_key();
  ::android::os::statsd::metadata::ConfigKey* mutable_config_key();
  void set_allocated_config_key(::android::os::statsd::metadata::ConfigKey* config_key);

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.StatsMetadata)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertMetadata > alert_metadata_;
  ::android::os::statsd::metadata::ConfigKey* config_key_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// -------------------------------------------------------------------

class StatsMetadataList :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.statsd.metadata.StatsMetadataList) */ {
 public:
  StatsMetadataList();
  virtual ~StatsMetadataList();

  StatsMetadataList(const StatsMetadataList& from);
  StatsMetadataList(StatsMetadataList&& from) noexcept
    : StatsMetadataList() {
    *this = ::std::move(from);
  }

  inline StatsMetadataList& operator=(const StatsMetadataList& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatsMetadataList& operator=(StatsMetadataList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StatsMetadataList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatsMetadataList* internal_default_instance() {
    return reinterpret_cast<const StatsMetadataList*>(
               &_StatsMetadataList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(StatsMetadataList& a, StatsMetadataList& b) {
    a.Swap(&b);
  }
  inline void Swap(StatsMetadataList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatsMetadataList* New() const final {
    return CreateMaybeMessage<StatsMetadataList>(nullptr);
  }

  StatsMetadataList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatsMetadataList>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StatsMetadataList& from);
  void MergeFrom(const StatsMetadataList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatsMetadataList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.statsd.metadata.StatsMetadataList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatsMetadataFieldNumber = 1,
  };
  // repeated .android.os.statsd.metadata.StatsMetadata stats_metadata = 1;
  int stats_metadata_size() const;
  void clear_stats_metadata();
  ::android::os::statsd::metadata::StatsMetadata* mutable_stats_metadata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::StatsMetadata >*
      mutable_stats_metadata();
  const ::android::os::statsd::metadata::StatsMetadata& stats_metadata(int index) const;
  ::android::os::statsd::metadata::StatsMetadata* add_stats_metadata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::StatsMetadata >&
      stats_metadata() const;

  // @@protoc_insertion_point(class_scope:android.os.statsd.metadata.StatsMetadataList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::StatsMetadata > stats_metadata_;
  friend struct ::TableStruct_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigKey

// optional int64 config_id = 1;
inline bool ConfigKey::has_config_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigKey::clear_config_id() {
  config_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConfigKey::config_id() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.ConfigKey.config_id)
  return config_id_;
}
inline void ConfigKey::set_config_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  config_id_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.ConfigKey.config_id)
}

// optional int32 uid = 2;
inline bool ConfigKey::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigKey::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigKey::uid() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.ConfigKey.uid)
  return uid_;
}
inline void ConfigKey::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.ConfigKey.uid)
}

// -------------------------------------------------------------------

// Field

// optional int32 tag = 1;
inline bool Field::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Field::clear_tag() {
  tag_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Field::tag() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.Field.tag)
  return tag_;
}
inline void Field::set_tag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  tag_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.Field.tag)
}

// optional int32 field = 2;
inline bool Field::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Field::clear_field() {
  field_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Field::field() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.Field.field)
  return field_;
}
inline void Field::set_field(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  field_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.Field.field)
}

// -------------------------------------------------------------------

// FieldValue

// optional .android.os.statsd.metadata.Field field = 1;
inline bool FieldValue::has_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldValue::clear_field() {
  if (field_ != nullptr) field_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::os::statsd::metadata::Field& FieldValue::field() const {
  const ::android::os::statsd::metadata::Field* p = field_;
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.field)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::statsd::metadata::Field*>(
      &::android::os::statsd::metadata::_Field_default_instance_);
}
inline ::android::os::statsd::metadata::Field* FieldValue::release_field() {
  // @@protoc_insertion_point(field_release:android.os.statsd.metadata.FieldValue.field)
  _has_bits_[0] &= ~0x00000001u;
  ::android::os::statsd::metadata::Field* temp = field_;
  field_ = nullptr;
  return temp;
}
inline ::android::os::statsd::metadata::Field* FieldValue::mutable_field() {
  _has_bits_[0] |= 0x00000001u;
  if (field_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::statsd::metadata::Field>(GetArenaNoVirtual());
    field_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.FieldValue.field)
  return field_;
}
inline void FieldValue::set_allocated_field(::android::os::statsd::metadata::Field* field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete field_;
  }
  if (field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, field, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field_ = field;
  // @@protoc_insertion_point(field_set_allocated:android.os.statsd.metadata.FieldValue.field)
}

// optional int32 value_int = 2;
inline bool FieldValue::has_value_int() const {
  return value_case() == kValueInt;
}
inline void FieldValue::set_has_value_int() {
  _oneof_case_[0] = kValueInt;
}
inline void FieldValue::clear_value_int() {
  if (has_value_int()) {
    value_.value_int_ = 0;
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FieldValue::value_int() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.value_int)
  if (has_value_int()) {
    return value_.value_int_;
  }
  return 0;
}
inline void FieldValue::set_value_int(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!has_value_int()) {
    clear_value();
    set_has_value_int();
  }
  value_.value_int_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_int)
}

// optional int64 value_long = 3;
inline bool FieldValue::has_value_long() const {
  return value_case() == kValueLong;
}
inline void FieldValue::set_has_value_long() {
  _oneof_case_[0] = kValueLong;
}
inline void FieldValue::clear_value_long() {
  if (has_value_long()) {
    value_.value_long_ = PROTOBUF_LONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 FieldValue::value_long() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.value_long)
  if (has_value_long()) {
    return value_.value_long_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void FieldValue::set_value_long(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!has_value_long()) {
    clear_value();
    set_has_value_long();
  }
  value_.value_long_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_long)
}

// optional float value_float = 4;
inline bool FieldValue::has_value_float() const {
  return value_case() == kValueFloat;
}
inline void FieldValue::set_has_value_float() {
  _oneof_case_[0] = kValueFloat;
}
inline void FieldValue::clear_value_float() {
  if (has_value_float()) {
    value_.value_float_ = 0;
    clear_has_value();
  }
}
inline float FieldValue::value_float() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.value_float)
  if (has_value_float()) {
    return value_.value_float_;
  }
  return 0;
}
inline void FieldValue::set_value_float(float value) {
  if (!has_value_float()) {
    clear_value();
    set_has_value_float();
  }
  value_.value_float_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_float)
}

// optional double value_double = 5;
inline bool FieldValue::has_value_double() const {
  return value_case() == kValueDouble;
}
inline void FieldValue::set_has_value_double() {
  _oneof_case_[0] = kValueDouble;
}
inline void FieldValue::clear_value_double() {
  if (has_value_double()) {
    value_.value_double_ = 0;
    clear_has_value();
  }
}
inline double FieldValue::value_double() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.value_double)
  if (has_value_double()) {
    return value_.value_double_;
  }
  return 0;
}
inline void FieldValue::set_value_double(double value) {
  if (!has_value_double()) {
    clear_value();
    set_has_value_double();
  }
  value_.value_double_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_double)
}

// optional string value_str = 6;
inline bool FieldValue::has_value_str() const {
  return value_case() == kValueStr;
}
inline void FieldValue::set_has_value_str() {
  _oneof_case_[0] = kValueStr;
}
inline void FieldValue::clear_value_str() {
  if (has_value_str()) {
    value_.value_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const std::string& FieldValue::value_str() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.value_str)
  if (has_value_str()) {
    return value_.value_str_.GetNoArena();
  }
  return *&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void FieldValue::set_value_str(const std::string& value) {
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_str)
  if (!has_value_str()) {
    clear_value();
    set_has_value_str();
    value_.value_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_str)
}
inline void FieldValue::set_value_str(std::string&& value) {
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_str)
  if (!has_value_str()) {
    clear_value();
    set_has_value_str();
    value_.value_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.statsd.metadata.FieldValue.value_str)
}
inline void FieldValue::set_value_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_value_str()) {
    clear_value();
    set_has_value_str();
    value_.value_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.statsd.metadata.FieldValue.value_str)
}
inline void FieldValue::set_value_str(const char* value, size_t size) {
  if (!has_value_str()) {
    clear_value();
    set_has_value_str();
    value_.value_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.statsd.metadata.FieldValue.value_str)
}
inline std::string* FieldValue::mutable_value_str() {
  if (!has_value_str()) {
    clear_value();
    set_has_value_str();
    value_.value_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.FieldValue.value_str)
  return value_.value_str_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FieldValue::release_value_str() {
  // @@protoc_insertion_point(field_release:android.os.statsd.metadata.FieldValue.value_str)
  if (has_value_str()) {
    clear_has_value();
    return value_.value_str_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void FieldValue::set_allocated_value_str(std::string* value_str) {
  if (has_value()) {
    clear_value();
  }
  if (value_str != nullptr) {
    set_has_value_str();
    value_.value_str_.UnsafeSetDefault(value_str);
  }
  // @@protoc_insertion_point(field_set_allocated:android.os.statsd.metadata.FieldValue.value_str)
}

// optional bytes value_storage = 7;
inline bool FieldValue::has_value_storage() const {
  return value_case() == kValueStorage;
}
inline void FieldValue::set_has_value_storage() {
  _oneof_case_[0] = kValueStorage;
}
inline void FieldValue::clear_value_storage() {
  if (has_value_storage()) {
    value_.value_storage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const std::string& FieldValue::value_storage() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.FieldValue.value_storage)
  if (has_value_storage()) {
    return value_.value_storage_.GetNoArena();
  }
  return *&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void FieldValue::set_value_storage(const std::string& value) {
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_storage)
  if (!has_value_storage()) {
    clear_value();
    set_has_value_storage();
    value_.value_storage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_storage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_storage)
}
inline void FieldValue::set_value_storage(std::string&& value) {
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.FieldValue.value_storage)
  if (!has_value_storage()) {
    clear_value();
    set_has_value_storage();
    value_.value_storage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_storage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.statsd.metadata.FieldValue.value_storage)
}
inline void FieldValue::set_value_storage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_value_storage()) {
    clear_value();
    set_has_value_storage();
    value_.value_storage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_storage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.statsd.metadata.FieldValue.value_storage)
}
inline void FieldValue::set_value_storage(const void* value, size_t size) {
  if (!has_value_storage()) {
    clear_value();
    set_has_value_storage();
    value_.value_storage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_storage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.statsd.metadata.FieldValue.value_storage)
}
inline std::string* FieldValue::mutable_value_storage() {
  if (!has_value_storage()) {
    clear_value();
    set_has_value_storage();
    value_.value_storage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.FieldValue.value_storage)
  return value_.value_storage_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FieldValue::release_value_storage() {
  // @@protoc_insertion_point(field_release:android.os.statsd.metadata.FieldValue.value_storage)
  if (has_value_storage()) {
    clear_has_value();
    return value_.value_storage_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void FieldValue::set_allocated_value_storage(std::string* value_storage) {
  if (has_value()) {
    clear_value();
  }
  if (value_storage != nullptr) {
    set_has_value_storage();
    value_.value_storage_.UnsafeSetDefault(value_storage);
  }
  // @@protoc_insertion_point(field_set_allocated:android.os.statsd.metadata.FieldValue.value_storage)
}

inline bool FieldValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void FieldValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline FieldValue::ValueCase FieldValue::value_case() const {
  return FieldValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MetricDimensionKey

// repeated .android.os.statsd.metadata.FieldValue dimension_key_in_what = 1;
inline int MetricDimensionKey::dimension_key_in_what_size() const {
  return dimension_key_in_what_.size();
}
inline void MetricDimensionKey::clear_dimension_key_in_what() {
  dimension_key_in_what_.Clear();
}
inline ::android::os::statsd::metadata::FieldValue* MetricDimensionKey::mutable_dimension_key_in_what(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.MetricDimensionKey.dimension_key_in_what)
  return dimension_key_in_what_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >*
MetricDimensionKey::mutable_dimension_key_in_what() {
  // @@protoc_insertion_point(field_mutable_list:android.os.statsd.metadata.MetricDimensionKey.dimension_key_in_what)
  return &dimension_key_in_what_;
}
inline const ::android::os::statsd::metadata::FieldValue& MetricDimensionKey::dimension_key_in_what(int index) const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.MetricDimensionKey.dimension_key_in_what)
  return dimension_key_in_what_.Get(index);
}
inline ::android::os::statsd::metadata::FieldValue* MetricDimensionKey::add_dimension_key_in_what() {
  // @@protoc_insertion_point(field_add:android.os.statsd.metadata.MetricDimensionKey.dimension_key_in_what)
  return dimension_key_in_what_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >&
MetricDimensionKey::dimension_key_in_what() const {
  // @@protoc_insertion_point(field_list:android.os.statsd.metadata.MetricDimensionKey.dimension_key_in_what)
  return dimension_key_in_what_;
}

// repeated .android.os.statsd.metadata.FieldValue state_values_key = 2;
inline int MetricDimensionKey::state_values_key_size() const {
  return state_values_key_.size();
}
inline void MetricDimensionKey::clear_state_values_key() {
  state_values_key_.Clear();
}
inline ::android::os::statsd::metadata::FieldValue* MetricDimensionKey::mutable_state_values_key(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.MetricDimensionKey.state_values_key)
  return state_values_key_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >*
MetricDimensionKey::mutable_state_values_key() {
  // @@protoc_insertion_point(field_mutable_list:android.os.statsd.metadata.MetricDimensionKey.state_values_key)
  return &state_values_key_;
}
inline const ::android::os::statsd::metadata::FieldValue& MetricDimensionKey::state_values_key(int index) const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.MetricDimensionKey.state_values_key)
  return state_values_key_.Get(index);
}
inline ::android::os::statsd::metadata::FieldValue* MetricDimensionKey::add_state_values_key() {
  // @@protoc_insertion_point(field_add:android.os.statsd.metadata.MetricDimensionKey.state_values_key)
  return state_values_key_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::FieldValue >&
MetricDimensionKey::state_values_key() const {
  // @@protoc_insertion_point(field_list:android.os.statsd.metadata.MetricDimensionKey.state_values_key)
  return state_values_key_;
}

// -------------------------------------------------------------------

// AlertDimensionKeyedData

// optional int32 last_refractory_ends_sec = 1;
inline bool AlertDimensionKeyedData::has_last_refractory_ends_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlertDimensionKeyedData::clear_last_refractory_ends_sec() {
  last_refractory_ends_sec_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlertDimensionKeyedData::last_refractory_ends_sec() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.AlertDimensionKeyedData.last_refractory_ends_sec)
  return last_refractory_ends_sec_;
}
inline void AlertDimensionKeyedData::set_last_refractory_ends_sec(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  last_refractory_ends_sec_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.AlertDimensionKeyedData.last_refractory_ends_sec)
}

// optional .android.os.statsd.metadata.MetricDimensionKey dimension_key = 2;
inline bool AlertDimensionKeyedData::has_dimension_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlertDimensionKeyedData::clear_dimension_key() {
  if (dimension_key_ != nullptr) dimension_key_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::os::statsd::metadata::MetricDimensionKey& AlertDimensionKeyedData::dimension_key() const {
  const ::android::os::statsd::metadata::MetricDimensionKey* p = dimension_key_;
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.AlertDimensionKeyedData.dimension_key)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::statsd::metadata::MetricDimensionKey*>(
      &::android::os::statsd::metadata::_MetricDimensionKey_default_instance_);
}
inline ::android::os::statsd::metadata::MetricDimensionKey* AlertDimensionKeyedData::release_dimension_key() {
  // @@protoc_insertion_point(field_release:android.os.statsd.metadata.AlertDimensionKeyedData.dimension_key)
  _has_bits_[0] &= ~0x00000001u;
  ::android::os::statsd::metadata::MetricDimensionKey* temp = dimension_key_;
  dimension_key_ = nullptr;
  return temp;
}
inline ::android::os::statsd::metadata::MetricDimensionKey* AlertDimensionKeyedData::mutable_dimension_key() {
  _has_bits_[0] |= 0x00000001u;
  if (dimension_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::statsd::metadata::MetricDimensionKey>(GetArenaNoVirtual());
    dimension_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.AlertDimensionKeyedData.dimension_key)
  return dimension_key_;
}
inline void AlertDimensionKeyedData::set_allocated_dimension_key(::android::os::statsd::metadata::MetricDimensionKey* dimension_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dimension_key_;
  }
  if (dimension_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dimension_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dimension_key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dimension_key_ = dimension_key;
  // @@protoc_insertion_point(field_set_allocated:android.os.statsd.metadata.AlertDimensionKeyedData.dimension_key)
}

// -------------------------------------------------------------------

// AlertMetadata

// optional int64 alert_id = 1;
inline bool AlertMetadata::has_alert_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlertMetadata::clear_alert_id() {
  alert_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlertMetadata::alert_id() const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.AlertMetadata.alert_id)
  return alert_id_;
}
inline void AlertMetadata::set_alert_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  alert_id_ = value;
  // @@protoc_insertion_point(field_set:android.os.statsd.metadata.AlertMetadata.alert_id)
}

// repeated .android.os.statsd.metadata.AlertDimensionKeyedData alert_dim_keyed_data = 2;
inline int AlertMetadata::alert_dim_keyed_data_size() const {
  return alert_dim_keyed_data_.size();
}
inline void AlertMetadata::clear_alert_dim_keyed_data() {
  alert_dim_keyed_data_.Clear();
}
inline ::android::os::statsd::metadata::AlertDimensionKeyedData* AlertMetadata::mutable_alert_dim_keyed_data(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.AlertMetadata.alert_dim_keyed_data)
  return alert_dim_keyed_data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertDimensionKeyedData >*
AlertMetadata::mutable_alert_dim_keyed_data() {
  // @@protoc_insertion_point(field_mutable_list:android.os.statsd.metadata.AlertMetadata.alert_dim_keyed_data)
  return &alert_dim_keyed_data_;
}
inline const ::android::os::statsd::metadata::AlertDimensionKeyedData& AlertMetadata::alert_dim_keyed_data(int index) const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.AlertMetadata.alert_dim_keyed_data)
  return alert_dim_keyed_data_.Get(index);
}
inline ::android::os::statsd::metadata::AlertDimensionKeyedData* AlertMetadata::add_alert_dim_keyed_data() {
  // @@protoc_insertion_point(field_add:android.os.statsd.metadata.AlertMetadata.alert_dim_keyed_data)
  return alert_dim_keyed_data_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertDimensionKeyedData >&
AlertMetadata::alert_dim_keyed_data() const {
  // @@protoc_insertion_point(field_list:android.os.statsd.metadata.AlertMetadata.alert_dim_keyed_data)
  return alert_dim_keyed_data_;
}

// -------------------------------------------------------------------

// StatsMetadata

// optional .android.os.statsd.metadata.ConfigKey config_key = 1;
inline bool StatsMetadata::has_config_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatsMetadata::clear_config_key() {
  if (config_key_ != nullptr) config_key_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::os::statsd::metadata::ConfigKey& StatsMetadata::config_key() const {
  const ::android::os::statsd::metadata::ConfigKey* p = config_key_;
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.StatsMetadata.config_key)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::statsd::metadata::ConfigKey*>(
      &::android::os::statsd::metadata::_ConfigKey_default_instance_);
}
inline ::android::os::statsd::metadata::ConfigKey* StatsMetadata::release_config_key() {
  // @@protoc_insertion_point(field_release:android.os.statsd.metadata.StatsMetadata.config_key)
  _has_bits_[0] &= ~0x00000001u;
  ::android::os::statsd::metadata::ConfigKey* temp = config_key_;
  config_key_ = nullptr;
  return temp;
}
inline ::android::os::statsd::metadata::ConfigKey* StatsMetadata::mutable_config_key() {
  _has_bits_[0] |= 0x00000001u;
  if (config_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::statsd::metadata::ConfigKey>(GetArenaNoVirtual());
    config_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.StatsMetadata.config_key)
  return config_key_;
}
inline void StatsMetadata::set_allocated_config_key(::android::os::statsd::metadata::ConfigKey* config_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete config_key_;
  }
  if (config_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config_key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_key_ = config_key;
  // @@protoc_insertion_point(field_set_allocated:android.os.statsd.metadata.StatsMetadata.config_key)
}

// repeated .android.os.statsd.metadata.AlertMetadata alert_metadata = 2;
inline int StatsMetadata::alert_metadata_size() const {
  return alert_metadata_.size();
}
inline void StatsMetadata::clear_alert_metadata() {
  alert_metadata_.Clear();
}
inline ::android::os::statsd::metadata::AlertMetadata* StatsMetadata::mutable_alert_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.StatsMetadata.alert_metadata)
  return alert_metadata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertMetadata >*
StatsMetadata::mutable_alert_metadata() {
  // @@protoc_insertion_point(field_mutable_list:android.os.statsd.metadata.StatsMetadata.alert_metadata)
  return &alert_metadata_;
}
inline const ::android::os::statsd::metadata::AlertMetadata& StatsMetadata::alert_metadata(int index) const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.StatsMetadata.alert_metadata)
  return alert_metadata_.Get(index);
}
inline ::android::os::statsd::metadata::AlertMetadata* StatsMetadata::add_alert_metadata() {
  // @@protoc_insertion_point(field_add:android.os.statsd.metadata.StatsMetadata.alert_metadata)
  return alert_metadata_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::AlertMetadata >&
StatsMetadata::alert_metadata() const {
  // @@protoc_insertion_point(field_list:android.os.statsd.metadata.StatsMetadata.alert_metadata)
  return alert_metadata_;
}

// -------------------------------------------------------------------

// StatsMetadataList

// repeated .android.os.statsd.metadata.StatsMetadata stats_metadata = 1;
inline int StatsMetadataList::stats_metadata_size() const {
  return stats_metadata_.size();
}
inline void StatsMetadataList::clear_stats_metadata() {
  stats_metadata_.Clear();
}
inline ::android::os::statsd::metadata::StatsMetadata* StatsMetadataList::mutable_stats_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.statsd.metadata.StatsMetadataList.stats_metadata)
  return stats_metadata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::StatsMetadata >*
StatsMetadataList::mutable_stats_metadata() {
  // @@protoc_insertion_point(field_mutable_list:android.os.statsd.metadata.StatsMetadataList.stats_metadata)
  return &stats_metadata_;
}
inline const ::android::os::statsd::metadata::StatsMetadata& StatsMetadataList::stats_metadata(int index) const {
  // @@protoc_insertion_point(field_get:android.os.statsd.metadata.StatsMetadataList.stats_metadata)
  return stats_metadata_.Get(index);
}
inline ::android::os::statsd::metadata::StatsMetadata* StatsMetadataList::add_stats_metadata() {
  // @@protoc_insertion_point(field_add:android.os.statsd.metadata.StatsMetadataList.stats_metadata)
  return stats_metadata_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::statsd::metadata::StatsMetadata >&
StatsMetadataList::stats_metadata() const {
  // @@protoc_insertion_point(field_list:android.os.statsd.metadata.StatsMetadataList.stats_metadata)
  return stats_metadata_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace metadata
}  // namespace statsd
}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto
