// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/modules/StatsD/statsd/src/statsd_metadata.proto

#include "packages/modules/StatsD/statsd/src/statsd_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Field_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto;
namespace android {
namespace os {
namespace statsd {
namespace metadata {
class ConfigKeyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigKey> _instance;
} _ConfigKey_default_instance_;
class FieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Field> _instance;
} _Field_default_instance_;
class FieldValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FieldValue> _instance;
  ::PROTOBUF_NAMESPACE_ID::int32 value_int_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_long_;
  float value_float_;
  double value_double_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_storage_;
} _FieldValue_default_instance_;
class MetricDimensionKeyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetricDimensionKey> _instance;
} _MetricDimensionKey_default_instance_;
class AlertDimensionKeyedDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AlertDimensionKeyedData> _instance;
} _AlertDimensionKeyedData_default_instance_;
class AlertMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AlertMetadata> _instance;
} _AlertMetadata_default_instance_;
class StatsMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatsMetadata> _instance;
} _StatsMetadata_default_instance_;
class StatsMetadataListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatsMetadataList> _instance;
} _StatsMetadataList_default_instance_;
}  // namespace metadata
}  // namespace statsd
}  // namespace os
}  // namespace android
static void InitDefaultsscc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_AlertDimensionKeyedData_default_instance_;
    new (ptr) ::android::os::statsd::metadata::AlertDimensionKeyedData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::AlertDimensionKeyedData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {
      &scc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_AlertMetadata_default_instance_;
    new (ptr) ::android::os::statsd::metadata::AlertMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::AlertMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {
      &scc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_ConfigKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_ConfigKey_default_instance_;
    new (ptr) ::android::os::statsd::metadata::ConfigKey();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::ConfigKey::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ConfigKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {}};

static void InitDefaultsscc_info_Field_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_Field_default_instance_;
    new (ptr) ::android::os::statsd::metadata::Field();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::Field::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Field_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Field_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {}};

static void InitDefaultsscc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_FieldValue_default_instance_;
    new (ptr) ::android::os::statsd::metadata::FieldValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::FieldValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {
      &scc_info_Field_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_MetricDimensionKey_default_instance_;
    new (ptr) ::android::os::statsd::metadata::MetricDimensionKey();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::MetricDimensionKey::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {
      &scc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_StatsMetadata_default_instance_;
    new (ptr) ::android::os::statsd::metadata::StatsMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::StatsMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {
      &scc_info_ConfigKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,
      &scc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_StatsMetadataList_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::metadata::_StatsMetadataList_default_instance_;
    new (ptr) ::android::os::statsd::metadata::StatsMetadataList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::metadata::StatsMetadataList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatsMetadataList_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_StatsMetadataList_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto}, {
      &scc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base,}};

namespace android {
namespace os {
namespace statsd {
namespace metadata {

// ===================================================================

void ConfigKey::InitAsDefaultInstance() {
}
class ConfigKey::_Internal {
 public:
  using HasBits = decltype(std::declval<ConfigKey>()._has_bits_);
  static void set_has_config_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ConfigKey::ConfigKey()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.ConfigKey)
}
ConfigKey::ConfigKey(const ConfigKey& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&config_id_, &from.config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&config_id_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.ConfigKey)
}

void ConfigKey::SharedCtor() {
  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(uid_));
}

ConfigKey::~ConfigKey() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.ConfigKey)
  SharedDtor();
}

void ConfigKey::SharedDtor() {
}

void ConfigKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigKey& ConfigKey::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void ConfigKey::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.ConfigKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&config_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&config_id_)) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConfigKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 config_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_config_id(&has_bits);
          config_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConfigKey::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.ConfigKey)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 config_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_config_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.ConfigKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.ConfigKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConfigKey::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.ConfigKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 config_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->config_id(), output);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.ConfigKey)
}

size_t ConfigKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.ConfigKey)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 config_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->config_id());
    }

    // optional int32 uid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigKey::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ConfigKey*>(
      &from));
}

void ConfigKey::MergeFrom(const ConfigKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.ConfigKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      config_id_ = from.config_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigKey::CopyFrom(const ConfigKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.ConfigKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigKey::IsInitialized() const {
  return true;
}

void ConfigKey::InternalSwap(ConfigKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(config_id_, other->config_id_);
  swap(uid_, other->uid_);
}

std::string ConfigKey::GetTypeName() const {
  return "android.os.statsd.metadata.ConfigKey";
}


// ===================================================================

void Field::InitAsDefaultInstance() {
}
class Field::_Internal {
 public:
  using HasBits = decltype(std::declval<Field>()._has_bits_);
  static void set_has_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_field(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Field::Field()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.Field)
}
Field::Field(const Field& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tag_, &from.tag_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_) -
    reinterpret_cast<char*>(&tag_)) + sizeof(field_));
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.Field)
}

void Field::SharedCtor() {
  ::memset(&tag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_) -
      reinterpret_cast<char*>(&tag_)) + sizeof(field_));
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.Field)
  SharedDtor();
}

void Field::SharedDtor() {
}

void Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Field& Field::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Field_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.Field)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&tag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&field_) -
        reinterpret_cast<char*>(&tag_)) + sizeof(field_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Field::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 tag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_tag(&has_bits);
          tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_field(&has_bits);
          field_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Field::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.Field)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tag = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_tag(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 field = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_field(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.Field)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Field::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.Field)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->tag(), output);
  }

  // optional int32 field = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->field(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.Field)
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.Field)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 tag = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->tag());
    }

    // optional int32 field = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->field());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const Field*>(
      &from));
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      tag_ = from.tag_;
    }
    if (cached_has_bits & 0x00000002u) {
      field_ = from.field_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::InternalSwap(Field* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(tag_, other->tag_);
  swap(field_, other->field_);
}

std::string Field::GetTypeName() const {
  return "android.os.statsd.metadata.Field";
}


// ===================================================================

void FieldValue::InitAsDefaultInstance() {
  ::android::os::statsd::metadata::_FieldValue_default_instance_._instance.get_mutable()->field_ = const_cast< ::android::os::statsd::metadata::Field*>(
      ::android::os::statsd::metadata::Field::internal_default_instance());
}
class FieldValue::_Internal {
 public:
  using HasBits = decltype(std::declval<FieldValue>()._has_bits_);
  static const ::android::os::statsd::metadata::Field& field(const FieldValue* msg);
  static void set_has_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::os::statsd::metadata::Field&
FieldValue::_Internal::field(const FieldValue* msg) {
  return *msg->field_;
}
FieldValue::FieldValue()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.FieldValue)
}
FieldValue::FieldValue(const FieldValue& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_field()) {
    field_ = new ::android::os::statsd::metadata::Field(*from.field_);
  } else {
    field_ = nullptr;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kValueInt: {
      set_value_int(from.value_int());
      break;
    }
    case kValueLong: {
      set_value_long(from.value_long());
      break;
    }
    case kValueFloat: {
      set_value_float(from.value_float());
      break;
    }
    case kValueDouble: {
      set_value_double(from.value_double());
      break;
    }
    case kValueStr: {
      set_value_str(from.value_str());
      break;
    }
    case kValueStorage: {
      set_value_storage(from.value_storage());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.FieldValue)
}

void FieldValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  field_ = nullptr;
  clear_has_value();
}

FieldValue::~FieldValue() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.FieldValue)
  SharedDtor();
}

void FieldValue::SharedDtor() {
  if (this != internal_default_instance()) delete field_;
  if (has_value()) {
    clear_value();
  }
}

void FieldValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FieldValue& FieldValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FieldValue_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void FieldValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:android.os.statsd.metadata.FieldValue)
  switch (value_case()) {
    case kValueInt: {
      // No need to clear
      break;
    }
    case kValueLong: {
      // No need to clear
      break;
    }
    case kValueFloat: {
      // No need to clear
      break;
    }
    case kValueDouble: {
      // No need to clear
      break;
    }
    case kValueStr: {
      value_.value_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValueStorage: {
      value_.value_storage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void FieldValue::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.FieldValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(field_ != nullptr);
    field_->Clear();
  }
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FieldValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.os.statsd.metadata.Field field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 value_int = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          set_value_int(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 value_long = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          set_value_long(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float value_float = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          set_value_float(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional double value_double = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          set_value_double(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional string value_str = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_value_str(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes value_storage = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_value_storage(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FieldValue::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.FieldValue)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.os.statsd.metadata.Field field = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 value_int = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          clear_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.value_int_)));
          set_has_value_int();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 value_long = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          clear_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.value_long_)));
          set_has_value_long();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value_float = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (37 & 0xFF)) {
          clear_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.value_float_)));
          set_has_value_float();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double value_double = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (41 & 0xFF)) {
          clear_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.value_double_)));
          set_has_value_double();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value_str = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_value_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value_storage = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.FieldValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.FieldValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FieldValue::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.FieldValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.os.statsd.metadata.Field field = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::field(this), output);
  }

  switch (value_case()) {
    case kValueInt:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->value_int(), output);
      break;
    case kValueLong:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->value_long(), output);
      break;
    case kValueFloat:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(4, this->value_float(), output);
      break;
    case kValueDouble:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDouble(5, this->value_double(), output);
      break;
    case kValueStr:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
        6, this->value_str(), output);
      break;
    case kValueStorage:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
        7, this->value_storage(), output);
      break;
    default: ;
  }
  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.FieldValue)
}

size_t FieldValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.FieldValue)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .android.os.statsd.metadata.Field field = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *field_);
  }

  switch (value_case()) {
    // optional int32 value_int = 2;
    case kValueInt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->value_int());
      break;
    }
    // optional int64 value_long = 3;
    case kValueLong: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->value_long());
      break;
    }
    // optional float value_float = 4;
    case kValueFloat: {
      total_size += 1 + 4;
      break;
    }
    // optional double value_double = 5;
    case kValueDouble: {
      total_size += 1 + 8;
      break;
    }
    // optional string value_str = 6;
    case kValueStr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->value_str());
      break;
    }
    // optional bytes value_storage = 7;
    case kValueStorage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->value_storage());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldValue::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const FieldValue*>(
      &from));
}

void FieldValue::MergeFrom(const FieldValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.FieldValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_field()) {
    mutable_field()->::android::os::statsd::metadata::Field::MergeFrom(from.field());
  }
  switch (from.value_case()) {
    case kValueInt: {
      set_value_int(from.value_int());
      break;
    }
    case kValueLong: {
      set_value_long(from.value_long());
      break;
    }
    case kValueFloat: {
      set_value_float(from.value_float());
      break;
    }
    case kValueDouble: {
      set_value_double(from.value_double());
      break;
    }
    case kValueStr: {
      set_value_str(from.value_str());
      break;
    }
    case kValueStorage: {
      set_value_storage(from.value_storage());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void FieldValue::CopyFrom(const FieldValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.FieldValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldValue::IsInitialized() const {
  return true;
}

void FieldValue::InternalSwap(FieldValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(field_, other->field_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string FieldValue::GetTypeName() const {
  return "android.os.statsd.metadata.FieldValue";
}


// ===================================================================

void MetricDimensionKey::InitAsDefaultInstance() {
}
class MetricDimensionKey::_Internal {
 public:
  using HasBits = decltype(std::declval<MetricDimensionKey>()._has_bits_);
};

MetricDimensionKey::MetricDimensionKey()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.MetricDimensionKey)
}
MetricDimensionKey::MetricDimensionKey(const MetricDimensionKey& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      dimension_key_in_what_(from.dimension_key_in_what_),
      state_values_key_(from.state_values_key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.MetricDimensionKey)
}

void MetricDimensionKey::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
}

MetricDimensionKey::~MetricDimensionKey() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.MetricDimensionKey)
  SharedDtor();
}

void MetricDimensionKey::SharedDtor() {
}

void MetricDimensionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetricDimensionKey& MetricDimensionKey::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MetricDimensionKey_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void MetricDimensionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.MetricDimensionKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_key_in_what_.Clear();
  state_values_key_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetricDimensionKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.os.statsd.metadata.FieldValue dimension_key_in_what = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_dimension_key_in_what(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.statsd.metadata.FieldValue state_values_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_state_values_key(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetricDimensionKey::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.MetricDimensionKey)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.os.statsd.metadata.FieldValue dimension_key_in_what = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_dimension_key_in_what()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.statsd.metadata.FieldValue state_values_key = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_state_values_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.MetricDimensionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.MetricDimensionKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetricDimensionKey::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.MetricDimensionKey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.statsd.metadata.FieldValue dimension_key_in_what = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimension_key_in_what_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->dimension_key_in_what(static_cast<int>(i)),
      output);
  }

  // repeated .android.os.statsd.metadata.FieldValue state_values_key = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->state_values_key_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->state_values_key(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.MetricDimensionKey)
}

size_t MetricDimensionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.MetricDimensionKey)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.statsd.metadata.FieldValue dimension_key_in_what = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dimension_key_in_what_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->dimension_key_in_what(static_cast<int>(i)));
    }
  }

  // repeated .android.os.statsd.metadata.FieldValue state_values_key = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->state_values_key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->state_values_key(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricDimensionKey::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const MetricDimensionKey*>(
      &from));
}

void MetricDimensionKey::MergeFrom(const MetricDimensionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.MetricDimensionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_key_in_what_.MergeFrom(from.dimension_key_in_what_);
  state_values_key_.MergeFrom(from.state_values_key_);
}

void MetricDimensionKey::CopyFrom(const MetricDimensionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.MetricDimensionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricDimensionKey::IsInitialized() const {
  return true;
}

void MetricDimensionKey::InternalSwap(MetricDimensionKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&dimension_key_in_what_)->InternalSwap(CastToBase(&other->dimension_key_in_what_));
  CastToBase(&state_values_key_)->InternalSwap(CastToBase(&other->state_values_key_));
}

std::string MetricDimensionKey::GetTypeName() const {
  return "android.os.statsd.metadata.MetricDimensionKey";
}


// ===================================================================

void AlertDimensionKeyedData::InitAsDefaultInstance() {
  ::android::os::statsd::metadata::_AlertDimensionKeyedData_default_instance_._instance.get_mutable()->dimension_key_ = const_cast< ::android::os::statsd::metadata::MetricDimensionKey*>(
      ::android::os::statsd::metadata::MetricDimensionKey::internal_default_instance());
}
class AlertDimensionKeyedData::_Internal {
 public:
  using HasBits = decltype(std::declval<AlertDimensionKeyedData>()._has_bits_);
  static void set_has_last_refractory_ends_sec(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::os::statsd::metadata::MetricDimensionKey& dimension_key(const AlertDimensionKeyedData* msg);
  static void set_has_dimension_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::os::statsd::metadata::MetricDimensionKey&
AlertDimensionKeyedData::_Internal::dimension_key(const AlertDimensionKeyedData* msg) {
  return *msg->dimension_key_;
}
AlertDimensionKeyedData::AlertDimensionKeyedData()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.AlertDimensionKeyedData)
}
AlertDimensionKeyedData::AlertDimensionKeyedData(const AlertDimensionKeyedData& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dimension_key()) {
    dimension_key_ = new ::android::os::statsd::metadata::MetricDimensionKey(*from.dimension_key_);
  } else {
    dimension_key_ = nullptr;
  }
  last_refractory_ends_sec_ = from.last_refractory_ends_sec_;
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.AlertDimensionKeyedData)
}

void AlertDimensionKeyedData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  ::memset(&dimension_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refractory_ends_sec_) -
      reinterpret_cast<char*>(&dimension_key_)) + sizeof(last_refractory_ends_sec_));
}

AlertDimensionKeyedData::~AlertDimensionKeyedData() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.AlertDimensionKeyedData)
  SharedDtor();
}

void AlertDimensionKeyedData::SharedDtor() {
  if (this != internal_default_instance()) delete dimension_key_;
}

void AlertDimensionKeyedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlertDimensionKeyedData& AlertDimensionKeyedData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AlertDimensionKeyedData_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void AlertDimensionKeyedData::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.AlertDimensionKeyedData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(dimension_key_ != nullptr);
    dimension_key_->Clear();
  }
  last_refractory_ends_sec_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlertDimensionKeyedData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 last_refractory_ends_sec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_last_refractory_ends_sec(&has_bits);
          last_refractory_ends_sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.os.statsd.metadata.MetricDimensionKey dimension_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_dimension_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlertDimensionKeyedData::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.AlertDimensionKeyedData)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_refractory_ends_sec = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_last_refractory_ends_sec(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_refractory_ends_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.statsd.metadata.MetricDimensionKey dimension_key = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_dimension_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.AlertDimensionKeyedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.AlertDimensionKeyedData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlertDimensionKeyedData::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.AlertDimensionKeyedData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 last_refractory_ends_sec = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->last_refractory_ends_sec(), output);
  }

  // optional .android.os.statsd.metadata.MetricDimensionKey dimension_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::dimension_key(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.AlertDimensionKeyedData)
}

size_t AlertDimensionKeyedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.AlertDimensionKeyedData)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.os.statsd.metadata.MetricDimensionKey dimension_key = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dimension_key_);
    }

    // optional int32 last_refractory_ends_sec = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_refractory_ends_sec());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertDimensionKeyedData::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const AlertDimensionKeyedData*>(
      &from));
}

void AlertDimensionKeyedData::MergeFrom(const AlertDimensionKeyedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.AlertDimensionKeyedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_dimension_key()->::android::os::statsd::metadata::MetricDimensionKey::MergeFrom(from.dimension_key());
    }
    if (cached_has_bits & 0x00000002u) {
      last_refractory_ends_sec_ = from.last_refractory_ends_sec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AlertDimensionKeyedData::CopyFrom(const AlertDimensionKeyedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.AlertDimensionKeyedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertDimensionKeyedData::IsInitialized() const {
  return true;
}

void AlertDimensionKeyedData::InternalSwap(AlertDimensionKeyedData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(dimension_key_, other->dimension_key_);
  swap(last_refractory_ends_sec_, other->last_refractory_ends_sec_);
}

std::string AlertDimensionKeyedData::GetTypeName() const {
  return "android.os.statsd.metadata.AlertDimensionKeyedData";
}


// ===================================================================

void AlertMetadata::InitAsDefaultInstance() {
}
class AlertMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<AlertMetadata>()._has_bits_);
  static void set_has_alert_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AlertMetadata::AlertMetadata()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.AlertMetadata)
}
AlertMetadata::AlertMetadata(const AlertMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      alert_dim_keyed_data_(from.alert_dim_keyed_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alert_id_ = from.alert_id_;
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.AlertMetadata)
}

void AlertMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  alert_id_ = PROTOBUF_LONGLONG(0);
}

AlertMetadata::~AlertMetadata() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.AlertMetadata)
  SharedDtor();
}

void AlertMetadata::SharedDtor() {
}

void AlertMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlertMetadata& AlertMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AlertMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void AlertMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.AlertMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alert_dim_keyed_data_.Clear();
  alert_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlertMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 alert_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_alert_id(&has_bits);
          alert_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.statsd.metadata.AlertDimensionKeyedData alert_dim_keyed_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_alert_dim_keyed_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlertMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.AlertMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 alert_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_alert_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &alert_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.statsd.metadata.AlertDimensionKeyedData alert_dim_keyed_data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_alert_dim_keyed_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.AlertMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.AlertMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlertMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.AlertMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 alert_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->alert_id(), output);
  }

  // repeated .android.os.statsd.metadata.AlertDimensionKeyedData alert_dim_keyed_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alert_dim_keyed_data_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->alert_dim_keyed_data(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.AlertMetadata)
}

size_t AlertMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.AlertMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.statsd.metadata.AlertDimensionKeyedData alert_dim_keyed_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->alert_dim_keyed_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->alert_dim_keyed_data(static_cast<int>(i)));
    }
  }

  // optional int64 alert_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->alert_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlertMetadata::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const AlertMetadata*>(
      &from));
}

void AlertMetadata::MergeFrom(const AlertMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.AlertMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alert_dim_keyed_data_.MergeFrom(from.alert_dim_keyed_data_);
  if (from.has_alert_id()) {
    set_alert_id(from.alert_id());
  }
}

void AlertMetadata::CopyFrom(const AlertMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.AlertMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertMetadata::IsInitialized() const {
  return true;
}

void AlertMetadata::InternalSwap(AlertMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&alert_dim_keyed_data_)->InternalSwap(CastToBase(&other->alert_dim_keyed_data_));
  swap(alert_id_, other->alert_id_);
}

std::string AlertMetadata::GetTypeName() const {
  return "android.os.statsd.metadata.AlertMetadata";
}


// ===================================================================

void StatsMetadata::InitAsDefaultInstance() {
  ::android::os::statsd::metadata::_StatsMetadata_default_instance_._instance.get_mutable()->config_key_ = const_cast< ::android::os::statsd::metadata::ConfigKey*>(
      ::android::os::statsd::metadata::ConfigKey::internal_default_instance());
}
class StatsMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<StatsMetadata>()._has_bits_);
  static const ::android::os::statsd::metadata::ConfigKey& config_key(const StatsMetadata* msg);
  static void set_has_config_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::os::statsd::metadata::ConfigKey&
StatsMetadata::_Internal::config_key(const StatsMetadata* msg) {
  return *msg->config_key_;
}
StatsMetadata::StatsMetadata()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.StatsMetadata)
}
StatsMetadata::StatsMetadata(const StatsMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      alert_metadata_(from.alert_metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config_key()) {
    config_key_ = new ::android::os::statsd::metadata::ConfigKey(*from.config_key_);
  } else {
    config_key_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.StatsMetadata)
}

void StatsMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  config_key_ = nullptr;
}

StatsMetadata::~StatsMetadata() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.StatsMetadata)
  SharedDtor();
}

void StatsMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete config_key_;
}

void StatsMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatsMetadata& StatsMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatsMetadata_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void StatsMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.StatsMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alert_metadata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(config_key_ != nullptr);
    config_key_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatsMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.os.statsd.metadata.ConfigKey config_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_config_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.statsd.metadata.AlertMetadata alert_metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_alert_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatsMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.StatsMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.os.statsd.metadata.ConfigKey config_key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.statsd.metadata.AlertMetadata alert_metadata = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_alert_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.StatsMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.StatsMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatsMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.StatsMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.os.statsd.metadata.ConfigKey config_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::config_key(this), output);
  }

  // repeated .android.os.statsd.metadata.AlertMetadata alert_metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alert_metadata_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->alert_metadata(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.StatsMetadata)
}

size_t StatsMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.StatsMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.statsd.metadata.AlertMetadata alert_metadata = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->alert_metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->alert_metadata(static_cast<int>(i)));
    }
  }

  // optional .android.os.statsd.metadata.ConfigKey config_key = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_key_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatsMetadata::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const StatsMetadata*>(
      &from));
}

void StatsMetadata::MergeFrom(const StatsMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.StatsMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alert_metadata_.MergeFrom(from.alert_metadata_);
  if (from.has_config_key()) {
    mutable_config_key()->::android::os::statsd::metadata::ConfigKey::MergeFrom(from.config_key());
  }
}

void StatsMetadata::CopyFrom(const StatsMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.StatsMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsMetadata::IsInitialized() const {
  return true;
}

void StatsMetadata::InternalSwap(StatsMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&alert_metadata_)->InternalSwap(CastToBase(&other->alert_metadata_));
  swap(config_key_, other->config_key_);
}

std::string StatsMetadata::GetTypeName() const {
  return "android.os.statsd.metadata.StatsMetadata";
}


// ===================================================================

void StatsMetadataList::InitAsDefaultInstance() {
}
class StatsMetadataList::_Internal {
 public:
  using HasBits = decltype(std::declval<StatsMetadataList>()._has_bits_);
};

StatsMetadataList::StatsMetadataList()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.metadata.StatsMetadataList)
}
StatsMetadataList::StatsMetadataList(const StatsMetadataList& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      stats_metadata_(from.stats_metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.metadata.StatsMetadataList)
}

void StatsMetadataList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatsMetadataList_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
}

StatsMetadataList::~StatsMetadataList() {
  // @@protoc_insertion_point(destructor:android.os.statsd.metadata.StatsMetadataList)
  SharedDtor();
}

void StatsMetadataList::SharedDtor() {
}

void StatsMetadataList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatsMetadataList& StatsMetadataList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatsMetadataList_packages_2fmodules_2fStatsD_2fstatsd_2fsrc_2fstatsd_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void StatsMetadataList::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.metadata.StatsMetadataList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_metadata_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatsMetadataList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.os.statsd.metadata.StatsMetadata stats_metadata = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_stats_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatsMetadataList::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.os.statsd.metadata.StatsMetadataList)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.os.statsd.metadata.StatsMetadata stats_metadata = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_stats_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.metadata.StatsMetadataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.metadata.StatsMetadataList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatsMetadataList::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.metadata.StatsMetadataList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.statsd.metadata.StatsMetadata stats_metadata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_metadata_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->stats_metadata(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.os.statsd.metadata.StatsMetadataList)
}

size_t StatsMetadataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.metadata.StatsMetadataList)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.statsd.metadata.StatsMetadata stats_metadata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->stats_metadata(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatsMetadataList::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const StatsMetadataList*>(
      &from));
}

void StatsMetadataList::MergeFrom(const StatsMetadataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.metadata.StatsMetadataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_metadata_.MergeFrom(from.stats_metadata_);
}

void StatsMetadataList::CopyFrom(const StatsMetadataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.metadata.StatsMetadataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatsMetadataList::IsInitialized() const {
  return true;
}

void StatsMetadataList::InternalSwap(StatsMetadataList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&stats_metadata_)->InternalSwap(CastToBase(&other->stats_metadata_));
}

std::string StatsMetadataList::GetTypeName() const {
  return "android.os.statsd.metadata.StatsMetadataList";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace metadata
}  // namespace statsd
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::ConfigKey* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::ConfigKey >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::ConfigKey >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::Field* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::Field >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::Field >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::FieldValue* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::FieldValue >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::FieldValue >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::MetricDimensionKey* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::MetricDimensionKey >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::MetricDimensionKey >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::AlertDimensionKeyedData* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::AlertDimensionKeyedData >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::AlertDimensionKeyedData >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::AlertMetadata* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::AlertMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::AlertMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::StatsMetadata* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::StatsMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::StatsMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::statsd::metadata::StatsMetadataList* Arena::CreateMaybeMessage< ::android::os::statsd::metadata::StatsMetadataList >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::metadata::StatsMetadataList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
