/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.cellbroadcastservice;

public final class R {
  public static final class array {
    /**
     * Package names of additional cell broadcast receivers
     */
    public static final int additional_cell_broadcast_receiver_packages=0x7f010000;
    /**
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     * Cell broadcast channels for area info update. Note the channel configuration for area info
     * is needed in CellBroadcastReceiver as well.
     */
    public static final int area_info_channels=0x7f010001;
    /**
     * Package names of the area info receivers
     */
    public static final int config_area_info_receiver_packages=0x7f010002;
    /**
     * Package names of the test cell broadcast receivers, only used on debug builds
     */
    public static final int test_cell_broadcast_receiver_packages=0x7f010003;
  }
  public static final class bool {
    /**
     * If this value is true, SMS encoded as octet is decoded by utf8 decoder.
     * If false, decoded by Latin decoder.
     * If this value is true, SMS encoded as octet is decoded by utf8 decoder.
     * If false, decoded by Latin decoder.
     */
    public static final int config_sms_utf8_support=0x7f020000;
    /**
     * Whether to enable cross SIM message duplicate detection or not. If enabled, messages
     * with the same content from different SIM will be treated as duplicates. If disbled,
     * multiple identical messages will be displayed on multi-SIM devices
     */
    public static final int cross_sim_duplicate_detection=0x7f020001;
    /**
     * Whether to compare message body when deduping messages
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     * Whether to compare message body when performing message duplicate detection
     */
    public static final int duplicate_compare_body=0x7f020002;
    /**
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     * Whether to compare message service category when deduping messages
     */
    public static final int duplicate_compare_service_category=0x7f020003;
    /**
     * Whether or not to reset Area Info Updates available with
     * DefaultCellBroadcastService#getCellBroadcastAreaInfo(slot) when device goes OOS on a slot
     */
    public static final int reset_area_info_on_oos=0x7f020004;
    /**
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     * Whether to reset alert message duplicate detection and geo-fencing check after
     * reboot or toggling airplane mode
     */
    public static final int reset_on_power_cycle_or_airplane_mode=0x7f020005;
    /**
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     * A toggle that controls whether or not to use the new geo fence calculation.
     */
    public static final int use_new_geo_fence_calculation=0x7f020006;
  }
  public static final class integer {
    /**
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * Default is according to FCC spec of .1 miles which is ~160 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     * The threshold in which a UE can be outside of the geofence and still
     * receive a Cell Broadcast message. The value given is in meters.
     * The set value is per carrier's request of .05 miles which is ~80 meters.
     */
    public static final int geo_fence_threshold=0x7f030000;
    /**
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     * The maximum waiting time in seconds for location to perform
     * device based geo-fencing
     */
    public static final int max_location_waiting_time=0x7f030001;
    /**
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     * The message expiration time in milliseconds for duplicate detection
     */
    public static final int message_expiration_time=0x7f030002;
  }
  public static final class string {
    /**
     * Primary ETWS (Earthquake and Tsunami Warning System) default message for earthquake
     */
    public static final int etws_primary_default_message_earthquake=0x7f040000;
    /**
     * Primary ETWS (Earthquake and Tsunami Warning System) default message for earthquake and Tsunami
     */
    public static final int etws_primary_default_message_earthquake_and_tsunami=0x7f040001;
    /**
     * Primary ETWS (Earthquake and Tsunami Warning System) default message for others
     */
    public static final int etws_primary_default_message_others=0x7f040002;
    /**
     * Primary ETWS (Earthquake and Tsunami Warning System) default message for test
     */
    public static final int etws_primary_default_message_test=0x7f040003;
    /**
     * Primary ETWS (Earthquake and Tsunami Warning System) default message for Tsunami
     */
    public static final int etws_primary_default_message_tsunami=0x7f040004;
  }
}