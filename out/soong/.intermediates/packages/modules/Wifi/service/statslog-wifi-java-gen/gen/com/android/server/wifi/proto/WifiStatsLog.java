// This file is autogenerated

package com.android.server.wifi.proto;


import android.os.Build;
import android.util.StatsEvent;
import android.util.StatsLog;


/**
 * Utility class for logging statistics events.
 */
public class WifiStatsLog {
    // Constants for atom codes.

    /**
     * WifiLockStateChanged wifi_lock_state_changed<br>
     * Usage: StatsLog.write(StatsLog.WIFI_LOCK_STATE_CHANGED, android.os.WorkSource workSource, int state, int mode);<br>
     * Usage: StatsLog.write_non_chained(StatsLog.WIFI_LOCK_STATE_CHANGED, int uid, java.lang.String tag, int state, int mode);<br>
     */
    public static final int WIFI_LOCK_STATE_CHANGED = 37;

    /**
     * WifiSignalStrengthChanged wifi_signal_strength_changed<br>
     * Usage: StatsLog.write(StatsLog.WIFI_SIGNAL_STRENGTH_CHANGED, int signal_strength);<br>
     */
    public static final int WIFI_SIGNAL_STRENGTH_CHANGED = 38;

    /**
     * WifiScanStateChanged wifi_scan_state_changed<br>
     * Usage: StatsLog.write(StatsLog.WIFI_SCAN_STATE_CHANGED, android.os.WorkSource workSource, int state);<br>
     * Usage: StatsLog.write_non_chained(StatsLog.WIFI_SCAN_STATE_CHANGED, int uid, java.lang.String tag, int state);<br>
     */
    public static final int WIFI_SCAN_STATE_CHANGED = 39;

    /**
     * WifiMulticastLockStateChanged wifi_multicast_lock_state_changed<br>
     * Usage: StatsLog.write(StatsLog.WIFI_MULTICAST_LOCK_STATE_CHANGED, android.os.WorkSource workSource, int state, java.lang.String tag);<br>
     * Usage: StatsLog.write_non_chained(StatsLog.WIFI_MULTICAST_LOCK_STATE_CHANGED, int uid, java.lang.String tag, int state, java.lang.String tag);<br>
     */
    public static final int WIFI_MULTICAST_LOCK_STATE_CHANGED = 53;

    /**
     * WifiHealthStatReported wifi_health_stat_reported<br>
     * Usage: StatsLog.write(StatsLog.WIFI_HEALTH_STAT_REPORTED, int duration_millis, boolean is_sufficient, boolean is_cell_data_available, int band);<br>
     */
    public static final int WIFI_HEALTH_STAT_REPORTED = 251;

    /**
     * WifiFailureStatReported wifi_failure_stat_reported<br>
     * Usage: StatsLog.write(StatsLog.WIFI_FAILURE_STAT_REPORTED, int abnormality_type, int failure_type, int failure_count);<br>
     */
    public static final int WIFI_FAILURE_STAT_REPORTED = 252;

    /**
     * WifiConnectionResultReported wifi_connection_result_reported<br>
     * Usage: StatsLog.write(StatsLog.WIFI_CONNECTION_RESULT_REPORTED, boolean connection_result, int failure_code, int rssi, int connection_attempt_duration_millis, int band, int auth_type, int trigger, boolean network_used, int time_since_last_connection_seconds);<br>
     */
    public static final int WIFI_CONNECTION_RESULT_REPORTED = 253;

    /**
     * WifiDisconnectReported wifi_disconnect_reported<br>
     * Usage: StatsLog.write(StatsLog.WIFI_DISCONNECT_REPORTED, int connected_duration_seconds, int failure_code, int band, int auth_type, int last_rssi, int last_link_speed);<br>
     */
    public static final int WIFI_DISCONNECT_REPORTED = 307;

    /**
     * WifiConnectionStateChanged wifi_connection_state_changed<br>
     * Usage: StatsLog.write(StatsLog.WIFI_CONNECTION_STATE_CHANGED, boolean is_connected, int band, int auth_type);<br>
     */
    public static final int WIFI_CONNECTION_STATE_CHANGED = 308;

    /**
     * WifiScanReported wifi_scan_reported<br>
     * Usage: StatsLog.write(StatsLog.WIFI_SCAN_REPORTED, int type, int result, int source, int importance, int scan_duration_millis, int count_networks_found);<br>
     */
    public static final int WIFI_SCAN_REPORTED = 325;

    /**
     * WifiPnoScanReported wifi_pno_scan_reported<br>
     * Usage: StatsLog.write(StatsLog.WIFI_PNO_SCAN_REPORTED, int state);<br>
     */
    public static final int WIFI_PNO_SCAN_REPORTED = 326;

    // Constants for enum values.

    // Values for WifiLockStateChanged.state
    public static final int WIFI_LOCK_STATE_CHANGED__STATE__OFF = 0;
    public static final int WIFI_LOCK_STATE_CHANGED__STATE__ON = 1;

    // Values for WifiLockStateChanged.mode
    public static final int WIFI_LOCK_STATE_CHANGED__MODE__WIFI_MODE_FULL = 1;
    public static final int WIFI_LOCK_STATE_CHANGED__MODE__WIFI_MODE_SCAN_ONLY = 2;
    public static final int WIFI_LOCK_STATE_CHANGED__MODE__WIFI_MODE_FULL_HIGH_PERF = 3;
    public static final int WIFI_LOCK_STATE_CHANGED__MODE__WIFI_MODE_FULL_LOW_LATENCY = 4;

    // Values for WifiSignalStrengthChanged.signal_strength
    public static final int WIFI_SIGNAL_STRENGTH_CHANGED__SIGNAL_STRENGTH__SIGNAL_STRENGTH_NONE_OR_UNKNOWN = 0;
    public static final int WIFI_SIGNAL_STRENGTH_CHANGED__SIGNAL_STRENGTH__SIGNAL_STRENGTH_POOR = 1;
    public static final int WIFI_SIGNAL_STRENGTH_CHANGED__SIGNAL_STRENGTH__SIGNAL_STRENGTH_MODERATE = 2;
    public static final int WIFI_SIGNAL_STRENGTH_CHANGED__SIGNAL_STRENGTH__SIGNAL_STRENGTH_GOOD = 3;
    public static final int WIFI_SIGNAL_STRENGTH_CHANGED__SIGNAL_STRENGTH__SIGNAL_STRENGTH_GREAT = 4;

    // Values for WifiScanStateChanged.state
    public static final int WIFI_SCAN_STATE_CHANGED__STATE__OFF = 0;
    public static final int WIFI_SCAN_STATE_CHANGED__STATE__ON = 1;

    // Values for WifiMulticastLockStateChanged.state
    public static final int WIFI_MULTICAST_LOCK_STATE_CHANGED__STATE__OFF = 0;
    public static final int WIFI_MULTICAST_LOCK_STATE_CHANGED__STATE__ON = 1;

    // Values for WifiHealthStatReported.band
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__UNKNOWN = 0;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_2G = 1;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_5G_LOW = 2;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_5G_MIDDLE = 3;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_5G_HIGH = 4;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_6G_LOW = 5;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_6G_MIDDLE = 6;
    public static final int WIFI_HEALTH_STAT_REPORTED__BAND__BAND_6G_HIGH = 7;

    // Values for WifiFailureStatReported.abnormality_type
    public static final int WIFI_FAILURE_STAT_REPORTED__ABNORMALITY_TYPE__UNKNOWN = 0;
    public static final int WIFI_FAILURE_STAT_REPORTED__ABNORMALITY_TYPE__SIGNIFICANT_INCREASE = 1;
    public static final int WIFI_FAILURE_STAT_REPORTED__ABNORMALITY_TYPE__SIGNIFICANT_DECREASE = 2;
    public static final int WIFI_FAILURE_STAT_REPORTED__ABNORMALITY_TYPE__SIMPLY_HIGH = 3;

    // Values for WifiFailureStatReported.failure_type
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_UNKNOWN = 0;
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_CONNECTION = 1;
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_ASSOCIATION_REJECTION = 2;
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_ASSOCIATION_TIMEOUT = 3;
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_AUTHENTICATION = 4;
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_NON_LOCAL_DISCONNECTION = 5;
    public static final int WIFI_FAILURE_STAT_REPORTED__FAILURE_TYPE__FAILURE_SHORT_CONNECTION_DUE_TO_NON_LOCAL_DISCONNECTION = 6;

    // Values for WifiConnectionResultReported.failure_code
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_UNKNOWN = 0;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_ASSOCIATION_TIMEOUT = 1;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_ASSOCIATION_REJECTION = 2;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_AUTHENTICATION_GENERAL = 3;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_AUTHENTICATION_EAP = 4;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_DHCP = 5;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_NETWORK_DISCONNECTION = 6;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_ROAM_TIMEOUT = 7;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__FAILURE_CODE__FAILURE_WRONG_PASSWORD = 8;

    // Values for WifiConnectionResultReported.band
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_UNKNOWN = 0;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_2G = 1;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_5G_LOW = 2;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_5G_MIDDLE = 3;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_5G_HIGH = 4;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_6G_LOW = 5;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_6G_MIDDLE = 6;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__BAND__BAND_6G_HIGH = 7;

    // Values for WifiConnectionResultReported.auth_type
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_NONE = 0;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_PSK = 1;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_EAP = 2;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_IEEE8021X = 3;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA2_PSK = 4;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_OSEN = 5;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_FT_PSK = 6;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_FT_EAP = 7;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_SAE = 8;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_OWE = 9;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_SUITE_B_192 = 10;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_PSK_SHA256 = 11;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_EAP_SHA256 = 12;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WAPI_PSK = 13;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_WAPI_CERT = 14;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_FILS_SHA256 = 15;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__AUTH_TYPE__AUTH_TYPE_FILS_SHA384 = 16;

    // Values for WifiConnectionResultReported.trigger
    public static final int WIFI_CONNECTION_RESULT_REPORTED__TRIGGER__UNKNOWN = 0;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__TRIGGER__MANUAL = 1;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__TRIGGER__RECONNECT_SAME_NETWORK = 2;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__TRIGGER__AUTOCONNECT_CONFIGURED_NETWORK = 3;
    public static final int WIFI_CONNECTION_RESULT_REPORTED__TRIGGER__AUTOCONNECT_BOOT = 4;

    // Values for WifiDisconnectReported.failure_code
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__UNKNOWN = 0;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__UNSPECIFIED = 1;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__PREV_AUTH_NOT_VALID = 2;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__DEAUTH_LEAVING = 3;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__DISASSOC_DUE_TO_INACTIVITY = 4;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__DISASSOC_AP_BUSY = 5;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__CLASS2_FRAME_FROM_NONAUTH_STA = 6;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__CLASS3_FRAME_FROM_NONASSOC_STA = 7;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__DISASSOC_STA_HAS_LEFT = 8;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__STA_REQ_ASSOC_WITHOUT_AUTH = 9;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__PWR_CAPABILITY_NOT_VALID = 10;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__SUPPORTED_CHANNEL_NOT_VALID = 11;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__BSS_TRANSITION_DISASSOC = 12;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__INVALID_IE = 13;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MICHAEL_MIC_FAILURE = 14;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__FOURWAY_HANDSHAKE_TIMEOUT = 15;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__GROUP_KEY_UPDATE_TIMEOUT = 16;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__IE_IN_4WAY_DIFFERS = 17;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__GROUP_CIPHER_NOT_VALID = 18;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__PAIRWISE_CIPHER_NOT_VALID = 19;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__AKMP_NOT_VALID = 20;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__UNSUPPORTED_RSN_IE_VERSION = 21;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__INVALID_RSN_IE_CAPAB = 22;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__IEEE_802_1X_AUTH_FAILED = 23;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__CIPHER_SUITE_REJECTED = 24;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__TDLS_TEARDOWN_UNREACHABLE = 25;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__TDLS_TEARDOWN_UNSPECIFIED = 26;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__SSP_REQUESTED_DISASSOC = 27;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__NO_SSP_ROAMING_AGREEMENT = 28;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__BAD_CIPHER_OR_AKM = 29;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__NOT_AUTHORIZED_THIS_LOCATION = 30;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__SERVICE_CHANGE_PRECLUDES_TS = 31;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__UNSPECIFIED_QOS_REASON = 32;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__NOT_ENOUGH_BANDWIDTH = 33;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__DISASSOC_LOW_ACK = 34;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__EXCEEDED_TXOP = 35;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__STA_LEAVING = 36;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__END_TS_BA_DLS = 37;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__UNKNOWN_TS_BA = 38;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__TIMEOUT = 39;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__PEERKEY_MISMATCH = 45;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__AUTHORIZED_ACCESS_LIMIT_REACHED = 46;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__EXTERNAL_SERVICE_REQUIREMENTS = 47;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__INVALID_FT_ACTION_FRAME_COUNT = 48;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__INVALID_PMKID = 49;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__INVALID_MDE = 50;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__INVALID_FTE = 51;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_PEERING_CANCELLED = 52;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_MAX_PEERS = 53;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_CONFIG_POLICY_VIOLATION = 54;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_CLOSE_RCVD = 55;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_MAX_RETRIES = 56;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_CONFIRM_TIMEOUT = 57;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_INVALID_GTK = 58;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_INCONSISTENT_PARAMS = 59;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_INVALID_SECURITY_CAP = 60;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_PATH_ERROR_NO_PROXY_INFO = 61;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_PATH_ERROR_NO_FORWARDING_INFO = 62;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_PATH_ERROR_DEST_UNREACHABLE = 63;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MAC_ADDRESS_ALREADY_EXISTS_IN_MBSS = 64;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_CHANNEL_SWITCH_REGULATORY_REQ = 65;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__MESH_CHANNEL_SWITCH_UNSPECIFIED = 66;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__IFACE_DESTROYED = 10000;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__WIFI_DISABLED = 10001;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__SUPPLICANT_DISCONNECTED = 10002;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__CONNECTING_WATCHDOG_TIMER = 10003;
    public static final int WIFI_DISCONNECT_REPORTED__FAILURE_CODE__ROAM_WATCHDOG_TIMER = 10004;

    // Values for WifiDisconnectReported.band
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_UNKNOWN = 0;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_2G = 1;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_5G_LOW = 2;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_5G_MIDDLE = 3;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_5G_HIGH = 4;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_6G_LOW = 5;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_6G_MIDDLE = 6;
    public static final int WIFI_DISCONNECT_REPORTED__BAND__BAND_6G_HIGH = 7;

    // Values for WifiDisconnectReported.auth_type
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_NONE = 0;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_PSK = 1;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_EAP = 2;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_IEEE8021X = 3;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA2_PSK = 4;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_OSEN = 5;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_FT_PSK = 6;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_FT_EAP = 7;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_SAE = 8;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_OWE = 9;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_SUITE_B_192 = 10;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_PSK_SHA256 = 11;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WPA_EAP_SHA256 = 12;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WAPI_PSK = 13;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_WAPI_CERT = 14;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_FILS_SHA256 = 15;
    public static final int WIFI_DISCONNECT_REPORTED__AUTH_TYPE__AUTH_TYPE_FILS_SHA384 = 16;

    // Values for WifiConnectionStateChanged.band
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_UNKNOWN = 0;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_2G = 1;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_5G_LOW = 2;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_5G_MIDDLE = 3;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_5G_HIGH = 4;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_6G_LOW = 5;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_6G_MIDDLE = 6;
    public static final int WIFI_CONNECTION_STATE_CHANGED__BAND__BAND_6G_HIGH = 7;

    // Values for WifiConnectionStateChanged.auth_type
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_NONE = 0;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WPA_PSK = 1;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WPA_EAP = 2;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_IEEE8021X = 3;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WPA2_PSK = 4;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_OSEN = 5;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_FT_PSK = 6;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_FT_EAP = 7;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_SAE = 8;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_OWE = 9;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_SUITE_B_192 = 10;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WPA_PSK_SHA256 = 11;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WPA_EAP_SHA256 = 12;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WAPI_PSK = 13;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_WAPI_CERT = 14;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_FILS_SHA256 = 15;
    public static final int WIFI_CONNECTION_STATE_CHANGED__AUTH_TYPE__AUTH_TYPE_FILS_SHA384 = 16;

    // Values for WifiScanReported.type
    public static final int WIFI_SCAN_REPORTED__TYPE__TYPE_UNKNOWN = 0;
    public static final int WIFI_SCAN_REPORTED__TYPE__TYPE_SINGLE = 1;
    public static final int WIFI_SCAN_REPORTED__TYPE__TYPE_BACKGROUND = 2;

    // Values for WifiScanReported.result
    public static final int WIFI_SCAN_REPORTED__RESULT__RESULT_UNKNOWN = 0;
    public static final int WIFI_SCAN_REPORTED__RESULT__RESULT_FAILED_TO_START = 1;
    public static final int WIFI_SCAN_REPORTED__RESULT__RESULT_FAILED_TO_SCAN = 2;
    public static final int WIFI_SCAN_REPORTED__RESULT__RESULT_SUCCESS = 3;

    // Values for WifiScanReported.source
    public static final int WIFI_SCAN_REPORTED__SOURCE__SOURCE_UNKNOWN = 0;
    public static final int WIFI_SCAN_REPORTED__SOURCE__SOURCE_NO_WORK_SOURCE = 1;
    public static final int WIFI_SCAN_REPORTED__SOURCE__SOURCE_WIFI_STACK = 2;
    public static final int WIFI_SCAN_REPORTED__SOURCE__SOURCE_GMS = 3;
    public static final int WIFI_SCAN_REPORTED__SOURCE__SOURCE_SETTINGS_APP = 4;
    public static final int WIFI_SCAN_REPORTED__SOURCE__SOURCE_OTHER_APP = 5;

    // Values for WifiScanReported.importance
    public static final int WIFI_SCAN_REPORTED__IMPORTANCE__IMPORTANCE_UNKNOWN = 0;
    public static final int WIFI_SCAN_REPORTED__IMPORTANCE__IMPORTANCE_FOREGROUND = 1;
    public static final int WIFI_SCAN_REPORTED__IMPORTANCE__IMPORTANCE_FOREGROUND_SERVICE = 2;
    public static final int WIFI_SCAN_REPORTED__IMPORTANCE__IMPORTANCE_BACKGROUND = 3;

    // Values for WifiPnoScanReported.state
    public static final int WIFI_PNO_SCAN_REPORTED__STATE__UNKNOWN = 0;
    public static final int WIFI_PNO_SCAN_REPORTED__STATE__STARTED = 1;
    public static final int WIFI_PNO_SCAN_REPORTED__STATE__FAILED_TO_START = 2;
    public static final int WIFI_PNO_SCAN_REPORTED__STATE__FINISHED_NETWORKS_FOUND = 3;
    public static final int WIFI_PNO_SCAN_REPORTED__STATE__FAILED = 4;

    // Annotation constants.
    public static final byte ANNOTATION_ID_IS_UID =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            1 : StatsLog.ANNOTATION_ID_IS_UID;

    public static final byte ANNOTATION_ID_TRUNCATE_TIMESTAMP =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            2 : StatsLog.ANNOTATION_ID_TRUNCATE_TIMESTAMP;

    public static final byte ANNOTATION_ID_PRIMARY_FIELD =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            3 : StatsLog.ANNOTATION_ID_PRIMARY_FIELD;

    public static final byte ANNOTATION_ID_EXCLUSIVE_STATE =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            4 : StatsLog.ANNOTATION_ID_EXCLUSIVE_STATE;

    public static final byte ANNOTATION_ID_PRIMARY_FIELD_FIRST_UID =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            5 : StatsLog.ANNOTATION_ID_PRIMARY_FIELD_FIRST_UID;

    public static final byte ANNOTATION_ID_TRIGGER_STATE_RESET =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            7 : StatsLog.ANNOTATION_ID_TRIGGER_STATE_RESET;

    public static final byte ANNOTATION_ID_STATE_NESTED =
            Build.VERSION.SDK_INT <= Build.VERSION_CODES.R ?
            8 : StatsLog.ANNOTATION_ID_STATE_NESTED;


    // Write methods
    public static void write(int code, int[] uid, java.lang.String[] tag, int arg2) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeAttributionChain(
                null == uid ? new int[0] : uid,
                null == tag ? new String[0] : tag);
        builder.writeInt(arg2);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int[] uid, java.lang.String[] tag, int arg2, int arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeAttributionChain(
                null == uid ? new int[0] : uid,
                null == tag ? new String[0] : tag);
        builder.writeInt(arg2);
        builder.writeInt(arg3);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int[] uid, java.lang.String[] tag, int arg2, java.lang.String arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeAttributionChain(
                null == uid ? new int[0] : uid,
                null == tag ? new String[0] : tag);
        builder.writeInt(arg2);
        builder.writeString(arg3);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, boolean arg1, int arg2, int arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeBoolean(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, boolean arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, boolean arg8, int arg9) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeBoolean(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeInt(arg5);
        builder.writeInt(arg6);
        builder.writeInt(arg7);
        builder.writeBoolean(arg8);
        builder.writeInt(arg9);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, boolean arg2, boolean arg3, int arg4) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeBoolean(arg2);
        builder.writeBoolean(arg3);
        builder.writeInt(arg4);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeInt(arg5);
        builder.writeInt(arg6);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write_non_chained(int code, int arg1, java.lang.String arg2, int arg3) {
        write(code, new int[] {arg1}, new java.lang.String[] {arg2}, arg3);
    }

    public static void write_non_chained(int code, int arg1, java.lang.String arg2, int arg3, int arg4) {
        write(code, new int[] {arg1}, new java.lang.String[] {arg2}, arg3, arg4);
    }

    public static void write_non_chained(int code, int arg1, java.lang.String arg2, int arg3, java.lang.String arg4) {
        write(code, new int[] {arg1}, new java.lang.String[] {arg2}, arg3, arg4);
    }

}
