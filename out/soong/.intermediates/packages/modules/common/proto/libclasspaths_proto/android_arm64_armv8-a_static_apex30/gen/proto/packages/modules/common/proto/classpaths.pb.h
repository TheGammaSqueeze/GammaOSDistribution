// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/modules/common/proto/classpaths.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
class ExportedClasspathsJars;
class ExportedClasspathsJarsDefaultTypeInternal;
extern ExportedClasspathsJarsDefaultTypeInternal _ExportedClasspathsJars_default_instance_;
class Jar;
class JarDefaultTypeInternal;
extern JarDefaultTypeInternal _Jar_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ExportedClasspathsJars* Arena::CreateMaybeMessage<::ExportedClasspathsJars>(Arena*);
template<> ::Jar* Arena::CreateMaybeMessage<::Jar>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum Classpath : int {
  UNKNOWN = 0,
  BOOTCLASSPATH = 1,
  SYSTEMSERVERCLASSPATH = 2,
  DEX2OATBOOTCLASSPATH = 3,
  Classpath_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Classpath_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Classpath_IsValid(int value);
constexpr Classpath Classpath_MIN = UNKNOWN;
constexpr Classpath Classpath_MAX = DEX2OATBOOTCLASSPATH;
constexpr int Classpath_ARRAYSIZE = Classpath_MAX + 1;

const std::string& Classpath_Name(Classpath value);
template<typename T>
inline const std::string& Classpath_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Classpath>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Classpath_Name.");
  return Classpath_Name(static_cast<Classpath>(enum_t_value));
}
bool Classpath_Parse(
    const std::string& name, Classpath* value);
// ===================================================================

class Jar :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:Jar) */ {
 public:
  Jar();
  virtual ~Jar();

  Jar(const Jar& from);
  Jar(Jar&& from) noexcept
    : Jar() {
    *this = ::std::move(from);
  }

  inline Jar& operator=(const Jar& from) {
    CopyFrom(from);
    return *this;
  }
  inline Jar& operator=(Jar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const Jar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Jar* internal_default_instance() {
    return reinterpret_cast<const Jar*>(
               &_Jar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Jar& a, Jar& b) {
    a.Swap(&b);
  }
  inline void Swap(Jar* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Jar* New() const final {
    return CreateMaybeMessage<Jar>(nullptr);
  }

  Jar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Jar>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const Jar& from);
  void MergeFrom(const Jar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Jar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jar";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kClasspathFieldNumber = 2,
    kMinSdkVersionFieldNumber = 3,
    kMaxSdkVersionFieldNumber = 4,
  };
  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);

  // .Classpath classpath = 2;
  void clear_classpath();
  ::Classpath classpath() const;
  void set_classpath(::Classpath value);

  // int32 min_sdk_version = 3;
  void clear_min_sdk_version();
  ::PROTOBUF_NAMESPACE_ID::int32 min_sdk_version() const;
  void set_min_sdk_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 max_sdk_version = 4;
  void clear_max_sdk_version();
  ::PROTOBUF_NAMESPACE_ID::int32 max_sdk_version() const;
  void set_max_sdk_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:Jar)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  int classpath_;
  ::PROTOBUF_NAMESPACE_ID::int32 min_sdk_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_sdk_version_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto;
};
// -------------------------------------------------------------------

class ExportedClasspathsJars :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:ExportedClasspathsJars) */ {
 public:
  ExportedClasspathsJars();
  virtual ~ExportedClasspathsJars();

  ExportedClasspathsJars(const ExportedClasspathsJars& from);
  ExportedClasspathsJars(ExportedClasspathsJars&& from) noexcept
    : ExportedClasspathsJars() {
    *this = ::std::move(from);
  }

  inline ExportedClasspathsJars& operator=(const ExportedClasspathsJars& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportedClasspathsJars& operator=(ExportedClasspathsJars&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ExportedClasspathsJars& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExportedClasspathsJars* internal_default_instance() {
    return reinterpret_cast<const ExportedClasspathsJars*>(
               &_ExportedClasspathsJars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ExportedClasspathsJars& a, ExportedClasspathsJars& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportedClasspathsJars* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExportedClasspathsJars* New() const final {
    return CreateMaybeMessage<ExportedClasspathsJars>(nullptr);
  }

  ExportedClasspathsJars* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExportedClasspathsJars>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ExportedClasspathsJars& from);
  void MergeFrom(const ExportedClasspathsJars& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExportedClasspathsJars* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ExportedClasspathsJars";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJarsFieldNumber = 1,
  };
  // repeated .Jar jars = 1;
  int jars_size() const;
  void clear_jars();
  ::Jar* mutable_jars(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jar >*
      mutable_jars();
  const ::Jar& jars(int index) const;
  ::Jar* add_jars();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jar >&
      jars() const;

  // @@protoc_insertion_point(class_scope:ExportedClasspathsJars)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jar > jars_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Jar

// string path = 1;
inline void Jar::clear_path() {
  path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Jar::path() const {
  // @@protoc_insertion_point(field_get:Jar.path)
  return path_.GetNoArena();
}
inline void Jar::set_path(const std::string& value) {
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Jar.path)
}
inline void Jar::set_path(std::string&& value) {
  
  path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Jar.path)
}
inline void Jar::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Jar.path)
}
inline void Jar::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Jar.path)
}
inline std::string* Jar::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:Jar.path)
  return path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Jar::release_path() {
  // @@protoc_insertion_point(field_release:Jar.path)
  
  return path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Jar::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:Jar.path)
}

// .Classpath classpath = 2;
inline void Jar::clear_classpath() {
  classpath_ = 0;
}
inline ::Classpath Jar::classpath() const {
  // @@protoc_insertion_point(field_get:Jar.classpath)
  return static_cast< ::Classpath >(classpath_);
}
inline void Jar::set_classpath(::Classpath value) {
  
  classpath_ = value;
  // @@protoc_insertion_point(field_set:Jar.classpath)
}

// int32 min_sdk_version = 3;
inline void Jar::clear_min_sdk_version() {
  min_sdk_version_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Jar::min_sdk_version() const {
  // @@protoc_insertion_point(field_get:Jar.min_sdk_version)
  return min_sdk_version_;
}
inline void Jar::set_min_sdk_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  min_sdk_version_ = value;
  // @@protoc_insertion_point(field_set:Jar.min_sdk_version)
}

// int32 max_sdk_version = 4;
inline void Jar::clear_max_sdk_version() {
  max_sdk_version_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Jar::max_sdk_version() const {
  // @@protoc_insertion_point(field_get:Jar.max_sdk_version)
  return max_sdk_version_;
}
inline void Jar::set_max_sdk_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_sdk_version_ = value;
  // @@protoc_insertion_point(field_set:Jar.max_sdk_version)
}

// -------------------------------------------------------------------

// ExportedClasspathsJars

// repeated .Jar jars = 1;
inline int ExportedClasspathsJars::jars_size() const {
  return jars_.size();
}
inline void ExportedClasspathsJars::clear_jars() {
  jars_.Clear();
}
inline ::Jar* ExportedClasspathsJars::mutable_jars(int index) {
  // @@protoc_insertion_point(field_mutable:ExportedClasspathsJars.jars)
  return jars_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jar >*
ExportedClasspathsJars::mutable_jars() {
  // @@protoc_insertion_point(field_mutable_list:ExportedClasspathsJars.jars)
  return &jars_;
}
inline const ::Jar& ExportedClasspathsJars::jars(int index) const {
  // @@protoc_insertion_point(field_get:ExportedClasspathsJars.jars)
  return jars_.Get(index);
}
inline ::Jar* ExportedClasspathsJars::add_jars() {
  // @@protoc_insertion_point(field_add:ExportedClasspathsJars.jars)
  return jars_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jar >&
ExportedClasspathsJars::jars() const {
  // @@protoc_insertion_point(field_list:ExportedClasspathsJars.jars)
  return jars_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Classpath> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_packages_2fmodules_2fcommon_2fproto_2fclasspaths_2eproto
