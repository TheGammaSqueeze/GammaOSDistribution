/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.networkstack;

public final class R {
  public static final class array {
    /**
     * An array of Denylisted EtherType, packets with EtherTypes within this array
     * will be dropped
     * TODO: need to put proper values, these are for testing purposes only
     */
    public static final int config_apfEthTypeDenyList=0x7f010000;
    public static final int config_captive_portal_fallback_probe_specs=0x7f010001;
    /**
     * Literal commas are not allowed in the url configuration because they
     * are used as a separator internally.
     */
    public static final int config_captive_portal_fallback_urls=0x7f010002;
    public static final int config_captive_portal_http_urls=0x7f010003;
    public static final int config_captive_portal_https_urls=0x7f010004;
    /**
     * Customized default DNS Servers address.
     */
    public static final int config_default_dns_servers=0x7f010005;
    /**
     * default_captive_portal_fallback_urls is not configured as overlayable
     * so OEMs that wish to change captive_portal_fallback_urls configuration
     * must do so via configuring runtime resource overlay to
     * config_captive_portal_fallback_urls and *NOT* by changing or overlaying
     * this resource. It will break if the enforcement of overlayable starts.
     * default_captive_portal_fallback_urls is not configured as overlayable
     * so OEMs that wish to change captive_portal_fallback_urls configuration
     * must do so via configuring runtime resource overlay to
     * config_captive_portal_fallback_urls and *NOT* by changing or overlaying
     * this resource. It will break if the enforcement of overlayable starts.
     */
    public static final int default_captive_portal_fallback_urls=0x7f010006;
  }
  public static final class bool {
    /**
     * Whether the APF Filter in the device should filter out IEEE 802.3 Frames
     * Those frames are identified by the field Eth-type having values
     * less than 0x600
     */
    public static final int config_apfDrop802_3Frames=0x7f020000;
    /**
     * Configuration for including DHCP client hostname option
     */
    public static final int config_dhcp_client_hostname=0x7f020001;
    /**
     * Whether to force considering DNS probes returning private IP addresses as failed
     * when attempting to detect captive portals.
     * The impact of this feature will be evaluated separately through experiments.
     * Force-enabling the feature regardless of the experiment results is not advised, as it
     * could result in valid captive portals being incorrectly classified as having no
     * connectivity.
     */
    public static final int config_force_dns_probe_private_ip_no_internet=0x7f020002;
    /**
     * Set to true if NetworkMonitor needs to load the resource by neighbor mcc when device
     * doesn't have a SIM card inserted.
     */
    public static final int config_no_sim_card_uses_neighbor_mcc=0x7f020003;
  }
  public static final class drawable {
    public static final int icon_wifi=0x7f030000;
  }
  public static final class integer {
    /**
     * Configuration hooks for the above settings.
     * Empty by default but may be overridden by RROs.
     */
    public static final int config_captive_portal_dns_probe_timeout=0x7f040000;
    public static final int config_evaluating_bandwidth_max_retry_timer_ms=0x7f040001;
    /**
     * The retry timer will start from config_min_retry_timer, and the timer will be exponential
     * increased until reaching the config_max_retry_timer.
     */
    public static final int config_evaluating_bandwidth_min_retry_timer_ms=0x7f040002;
    /**
     * A timeout for evaluating bandwidth.
     */
    public static final int config_evaluating_bandwidth_timeout_ms=0x7f040003;
    public static final int config_max_matches_http_content_length=0x7f040004;
    /**
     * Define the min and max range of the content-length that should be in the HTTP response
     * header of probe responses for the validation success/failed regexp to be used. The RegExp
     * will be used to match the probe response content when the content-length is inside this
     * interval(Strictly greater than the config_min_matches_http_content_length and strictly
     * smaller than the config_max_matches_http_content_length). When the content-length is out of
     * this interval, the RegExp will not be used.
     */
    public static final int config_min_matches_http_content_length=0x7f040005;
    public static final int config_nud_postroaming_solicit_interval=0x7f040006;
    public static final int config_nud_postroaming_solicit_num=0x7f040007;
    public static final int config_nud_steadystate_solicit_interval=0x7f040008;
    /**
     * Customized neighbor unreachable probe parameters.
     */
    public static final int config_nud_steadystate_solicit_num=0x7f040009;
  }
  public static final class string {
    /**
     * The label of application. It's also a sender name of notification. [CHAR LIMIT=50]
     */
    public static final int application_label=0x7f050000;
    /**
     * suppress CheckTagEmptyBody: overlayable resource to use as configuration hook
     */
    public static final int config_captive_portal_http_url=0x7f050001;
    /**
     * suppress CheckTagEmptyBody: overlayable resource to use as configuration hook
     */
    public static final int config_captive_portal_https_url=0x7f050002;
    /**
     * URL for evaluating bandwidth. If the download cannot be finished before the timeout, then
     * it means the bandwidth check is failed. If the download can be finished before the timeout,
     * then it means the bandwidth check is passed. So the OEMs should set this URL appropriately.
     */
    public static final int config_evaluating_bandwidth_url=0x7f050003;
    /**
     * A regular expression to match the content of a network validation probe.
     * Treat the network validation as failed when the content matches the
     * config_network_validation_failed_content_regexp and treat the network validation as success
     * when the content matches the config_network_validation_success_content_regexp. If the
     * content matches both of the config_network_validation_failed_content_regexp and
     * the config_network_validation_success_content_regexp, the result will be considered as
     * failed.
     */
    public static final int config_network_validation_failed_content_regexp=0x7f050004;
    public static final int config_network_validation_success_content_regexp=0x7f050005;
    /**
     * A notification is shown after the user logs in to a captive portal network, to indicate
     * that the network should now have internet connectivity. This is the description of the
     * notification, indicating that the device is connected to the network. [CHAR LIMIT=50]
     */
    public static final int connected=0x7f050006;
    /**
     * default_captive_portal_http_url is not configured as overlayable so
     * OEMs that wish to change captive_portal_http_url configuration must
     * do so via configuring runtime resource overlay to
     * config_captive_portal_http_url and *NOT* by changing or overlaying
     * this resource. It will break if the enforcement of overlayable starts.
     */
    public static final int default_captive_portal_http_url=0x7f050007;
    /**
     * default_captive_portal_https_url is not configured as overlayable so
     * OEMs that wish to change captive_portal_https_url configuration must
     * do so via configuring runtime resource overlay to
     * config_captive_portal_https_url and *NOT* by changing or overlaying
     * this resource. It will break if the enforcement of overlayable starts.
     * default_captive_portal_https_url is not configured as overlayable so
     * OEMs that wish to change captive_portal_https_url configuration must
     * do so via configuring runtime resource overlay to
     * config_captive_portal_https_url and *NOT* by changing or overlaying
     * this resource. It will break if the enforcement of overlayable starts.
     */
    public static final int default_captive_portal_https_url=0x7f050008;
    /**
     * Notifications are shown after the user logs in to a captive portal network, to indicate
     * that the network should now have internet connectivity. This is the description of the
     * channel for these notifications. [CHAR LIMIT=300]
     */
    public static final int notification_channel_description_connected=0x7f050009;
    /**
     * Notifications are shown when a user connects to a network that advertises a venue
     * information page, so that the user can access that page. [CHAR LIMIT=300]
     */
    public static final int notification_channel_description_network_venue_info=0x7f05000a;
    /**
     * Notifications are shown after the user logs in to a captive portal network, to indicate
     * that the network should now have internet connectivity. This is the channel name of
     * the notification. [CHAR LIMIT=40]
     */
    public static final int notification_channel_name_connected=0x7f05000b;
    /**
     * Notifications are shown when a user connects to a network that advertises a venue
     * information page, so that the user can access that page. This is the channel name of
     * the notification. [CHAR LIMIT=40]
     */
    public static final int notification_channel_name_network_venue_info=0x7f05000c;
    /**
     * Notifications are shown when a user connects to a network that advertises a venue
     * information page, so that the user can access that page. This is the description of
     * the notification. [CHAR LIMIT=50]
     */
    public static final int tap_for_info=0x7f05000d;
  }
}