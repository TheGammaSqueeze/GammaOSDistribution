#include <iostream>

#include "gc/allocator/rosalloc.h"

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
namespace gc {
namespace allocator {
std::ostream& operator<<(std::ostream& os, RosAlloc::PageReleaseMode rhs) {
  switch (rhs) {
    case RosAlloc::kPageReleaseModeNone: os << "PageReleaseModeNone"; break;
    case RosAlloc::kPageReleaseModeEnd: os << "PageReleaseModeEnd"; break;
    case RosAlloc::kPageReleaseModeSize: os << "PageReleaseModeSize"; break;
    case RosAlloc::kPageReleaseModeSizeAndEnd: os << "PageReleaseModeSizeAndEnd"; break;
    case RosAlloc::kPageReleaseModeAll: os << "PageReleaseModeAll"; break;
    default: os << "RosAlloc::PageReleaseMode[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace allocator
}  // namespace gc
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
namespace gc {
namespace allocator {
std::ostream& operator<<(std::ostream& os, RosAlloc::PageMapKind rhs) {
  switch (rhs) {
    case RosAlloc::kPageMapReleased: os << "PageMapReleased"; break;
    case RosAlloc::kPageMapEmpty: os << "PageMapEmpty"; break;
    case RosAlloc::kPageMapRun: os << "PageMapRun"; break;
    case RosAlloc::kPageMapRunPart: os << "PageMapRunPart"; break;
    case RosAlloc::kPageMapLargeObject: os << "PageMapLargeObject"; break;
    case RosAlloc::kPageMapLargeObjectPart: os << "PageMapLargeObjectPart"; break;
    default: os << "RosAlloc::PageMapKind[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace allocator
}  // namespace gc
}  // namespace art

