#include <iostream>

#include "thread.h"

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, StackedShadowFrameType rhs) {
  switch (rhs) {
    case StackedShadowFrameType::kShadowFrameUnderConstruction: os << "ShadowFrameUnderConstruction"; break;
    case StackedShadowFrameType::kDeoptimizationShadowFrame: os << "DeoptimizationShadowFrame"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, ThreadFlag rhs) {
  switch (rhs) {
    case kSuspendRequest: os << "SuspendRequest"; break;
    case kCheckpointRequest: os << "CheckpointRequest"; break;
    case kEmptyCheckpointRequest: os << "EmptyCheckpointRequest"; break;
    case kActiveSuspendBarrier: os << "ActiveSuspendBarrier"; break;
    default: os << "ThreadFlag[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, DeoptimizationMethodType rhs) {
  switch (rhs) {
    case DeoptimizationMethodType::kKeepDexPc: os << "KeepDexPc"; break;
    case DeoptimizationMethodType::kDefault: os << "Default"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, ThreadPriority rhs) {
  switch (rhs) {
    case kMinThreadPriority: os << "MinThreadPriority"; break;
    case kNormThreadPriority: os << "NormThreadPriority"; break;
    case kMaxThreadPriority: os << "MaxThreadPriority"; break;
    default: os << "ThreadPriority[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace art

