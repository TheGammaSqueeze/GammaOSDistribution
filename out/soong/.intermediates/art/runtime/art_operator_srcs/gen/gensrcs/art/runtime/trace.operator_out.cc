#include <iostream>

#include "trace.h"

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, TracingMode rhs) {
  switch (rhs) {
    case kTracingInactive: os << "TracingInactive"; break;
    case kMethodTracingActive: os << "MethodTracingActive"; break;
    case kSampleProfilingActive: os << "SampleProfilingActive"; break;
    default: os << "TracingMode[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, TraceAction rhs) {
  switch (rhs) {
    case kTraceMethodEnter: os << "TraceMethodEnter"; break;
    case kTraceMethodExit: os << "TraceMethodExit"; break;
    case kTraceUnroll: os << "TraceUnroll"; break;
    case kTraceMethodActionMask: os << "TraceMethodActionMask"; break;
    default: os << "TraceAction[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, Trace::TraceMode rhs) {
  switch (rhs) {
    case Trace::TraceMode::kMethodTracing: os << "MethodTracing"; break;
    case Trace::TraceMode::kSampling: os << "Sampling"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, Trace::TraceFlag rhs) {
  switch (rhs) {
    case Trace::kTraceCountAllocs: os << "TraceCountAllocs"; break;
    default: os << "Trace::TraceFlag[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
std::ostream& operator<<(std::ostream& os, Trace::TraceOutputMode rhs) {
  switch (rhs) {
    case Trace::TraceOutputMode::kFile: os << "File"; break;
    case Trace::TraceOutputMode::kDDMS: os << "DDMS"; break;
    case Trace::TraceOutputMode::kStreaming: os << "Streaming"; break;
  }
  return os;
}
}  // namespace art

