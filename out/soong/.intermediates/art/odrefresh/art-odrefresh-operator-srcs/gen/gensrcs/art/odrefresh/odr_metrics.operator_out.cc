#include <iostream>

#include "odr_metrics.h"

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
namespace odrefresh {
std::ostream& operator<<(std::ostream& os, OdrMetrics::Stage rhs) {
  switch (rhs) {
    case OdrMetrics::Stage::kUnknown: os << "Unknown"; break;
    case OdrMetrics::Stage::kCheck: os << "Check"; break;
    case OdrMetrics::Stage::kPreparation: os << "Preparation"; break;
    case OdrMetrics::Stage::kPrimaryBootClasspath: os << "PrimaryBootClasspath"; break;
    case OdrMetrics::Stage::kSecondaryBootClasspath: os << "SecondaryBootClasspath"; break;
    case OdrMetrics::Stage::kSystemServerClasspath: os << "SystemServerClasspath"; break;
    case OdrMetrics::Stage::kComplete: os << "Complete"; break;
  }
  return os;
}
}  // namespace odrefresh
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
namespace odrefresh {
std::ostream& operator<<(std::ostream& os, OdrMetrics::Status rhs) {
  switch (rhs) {
    case OdrMetrics::Status::kUnknown: os << "Unknown"; break;
    case OdrMetrics::Status::kOK: os << "OK"; break;
    case OdrMetrics::Status::kNoSpace: os << "NoSpace"; break;
    case OdrMetrics::Status::kIoError: os << "IoError"; break;
    case OdrMetrics::Status::kDex2OatError: os << "Dex2OatError"; break;
    case OdrMetrics::Status::kTimeLimitExceeded: os << "TimeLimitExceeded"; break;
    case OdrMetrics::Status::kStagingFailed: os << "StagingFailed"; break;
    case OdrMetrics::Status::kInstallFailed: os << "InstallFailed"; break;
  }
  return os;
}
}  // namespace odrefresh
}  // namespace art

// This was automatically generated by art/tools/generate_operator_out.py --- do not edit!
namespace art {
namespace odrefresh {
std::ostream& operator<<(std::ostream& os, OdrMetrics::Trigger rhs) {
  switch (rhs) {
    case OdrMetrics::Trigger::kUnknown: os << "Unknown"; break;
    case OdrMetrics::Trigger::kApexVersionMismatch: os << "ApexVersionMismatch"; break;
    case OdrMetrics::Trigger::kDexFilesChanged: os << "DexFilesChanged"; break;
    case OdrMetrics::Trigger::kMissingArtifacts: os << "MissingArtifacts"; break;
  }
  return os;
}
}  // namespace odrefresh
}  // namespace art

