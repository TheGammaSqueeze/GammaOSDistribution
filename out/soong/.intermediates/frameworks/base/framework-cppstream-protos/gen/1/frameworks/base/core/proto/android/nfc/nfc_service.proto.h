// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/nfc/nfc_service.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_NFC_NFC_SERVICE_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_NFC_NFC_SERVICE_PROTO_STREAM_H

namespace com {
namespace android {
namespace nfc {

// message NfcServiceDumpProto
namespace NfcServiceDumpProto {
    // enum State
    const int STATE_UNKNOWN = 0;
    const int STATE_OFF = 1;
    const int STATE_TURNING_ON = 2;
    const int STATE_ON = 3;
    const int STATE_TURNING_OFF = 4;
    static const int _ENUM_STATE_COUNT = 5;
    static const char* _ENUM_STATE_NAMES[5] = {
        "UNKNOWN",
        "OFF",
        "TURNING_ON",
        "ON",
        "TURNING_OFF",
    };
    static const int _ENUM_STATE_VALUES[5] = {
        STATE_UNKNOWN,
        STATE_OFF,
        STATE_TURNING_ON,
        STATE_ON,
        STATE_TURNING_OFF,
    };

    // enum ScreenState
    const int SCREEN_STATE_UNKNOWN = 0;
    const int SCREEN_STATE_OFF_UNLOCKED = 1;
    const int SCREEN_STATE_OFF_LOCKED = 2;
    const int SCREEN_STATE_ON_LOCKED = 3;
    const int SCREEN_STATE_ON_UNLOCKED = 4;
    static const int _ENUM_SCREEN_STATE_COUNT = 5;
    static const char* _ENUM_SCREEN_STATE_NAMES[5] = {
        "UNKNOWN",
        "OFF_UNLOCKED",
        "OFF_LOCKED",
        "ON_LOCKED",
        "ON_UNLOCKED",
    };
    static const int _ENUM_SCREEN_STATE_VALUES[5] = {
        SCREEN_STATE_UNKNOWN,
        SCREEN_STATE_OFF_UNLOCKED,
        SCREEN_STATE_OFF_LOCKED,
        SCREEN_STATE_ON_LOCKED,
        SCREEN_STATE_ON_UNLOCKED,
    };

    // optional .com.android.nfc.NfcServiceDumpProto.State state = 1;
    const uint64_t STATE = 0x0000010e00000001LL;

    // optional bool in_provision_mode = 2;
    const uint64_t IN_PROVISION_MODE = 0x0000010800000002LL;

    // optional bool ndef_push_enabled = 3;
    const uint64_t NDEF_PUSH_ENABLED = 0x0000010800000003LL;

    // optional .com.android.nfc.NfcServiceDumpProto.ScreenState screen_state = 4;
    const uint64_t SCREEN_STATE = 0x0000010e00000004LL;

    // optional bool secure_nfc_enabled = 5;
    const uint64_t SECURE_NFC_ENABLED = 0x0000010800000005LL;

    // optional bool polling_paused = 6;
    const uint64_t POLLING_PAUSED = 0x0000010800000006LL;

    // optional int32 num_tags_detected = 7;
    const uint64_t NUM_TAGS_DETECTED = 0x0000010500000007LL;

    // optional int32 num_p2p_detected = 8;
    const uint64_t NUM_P2P_DETECTED = 0x0000010500000008LL;

    // optional int32 num_hce_detected = 9;
    const uint64_t NUM_HCE_DETECTED = 0x0000010500000009LL;

    // optional bool hce_capable = 10;
    const uint64_t HCE_CAPABLE = 0x000001080000000aLL;

    // optional bool hce_f_capable = 11;
    const uint64_t HCE_F_CAPABLE = 0x000001080000000bLL;

    // optional bool beam_capable = 12;
    const uint64_t BEAM_CAPABLE = 0x000001080000000cLL;

    // optional bool secure_nfc_capable = 13;
    const uint64_t SECURE_NFC_CAPABLE = 0x000001080000000dLL;

    // optional bool vr_mode_enabled = 14;
    const uint64_t VR_MODE_ENABLED = 0x000001080000000eLL;

    // optional .com.android.nfc.DiscoveryParamsProto discovery_params = 15;
    const uint64_t DISCOVERY_PARAMS = 0x0000010b0000000fLL;

    // optional .com.android.nfc.P2pLinkManagerProto p2p_link_manager = 16;
    const uint64_t P2P_LINK_MANAGER = 0x0000010b00000010LL;

    // optional .com.android.nfc.cardemulation.CardEmulationManagerProto card_emulation_manager = 17;
    const uint64_t CARD_EMULATION_MANAGER = 0x0000010b00000011LL;

    // optional .com.android.nfc.NfcDispatcherProto nfc_dispatcher = 18;
    const uint64_t NFC_DISPATCHER = 0x0000010b00000012LL;

    // optional string native_crash_logs = 19;
    const uint64_t NATIVE_CRASH_LOGS = 0x0000010900000013LL;

    static const int _FIELD_COUNT = 19;
    static const char* _FIELD_NAMES[19] = {
        "state",
        "in_provision_mode",
        "ndef_push_enabled",
        "screen_state",
        "secure_nfc_enabled",
        "polling_paused",
        "num_tags_detected",
        "num_p2p_detected",
        "num_hce_detected",
        "hce_capable",
        "hce_f_capable",
        "beam_capable",
        "secure_nfc_capable",
        "vr_mode_enabled",
        "discovery_params",
        "p2p_link_manager",
        "card_emulation_manager",
        "nfc_dispatcher",
        "native_crash_logs",
    };
    static const uint64_t _FIELD_IDS[19] = {
        STATE,
        IN_PROVISION_MODE,
        NDEF_PUSH_ENABLED,
        SCREEN_STATE,
        SECURE_NFC_ENABLED,
        POLLING_PAUSED,
        NUM_TAGS_DETECTED,
        NUM_P2P_DETECTED,
        NUM_HCE_DETECTED,
        HCE_CAPABLE,
        HCE_F_CAPABLE,
        BEAM_CAPABLE,
        SECURE_NFC_CAPABLE,
        VR_MODE_ENABLED,
        DISCOVERY_PARAMS,
        P2P_LINK_MANAGER,
        CARD_EMULATION_MANAGER,
        NFC_DISPATCHER,
        NATIVE_CRASH_LOGS,
    };

} //NfcServiceDumpProto

// message DiscoveryParamsProto
namespace DiscoveryParamsProto {
    // optional int32 tech_mask = 1;
    const uint64_t TECH_MASK = 0x0000010500000001LL;

    // optional bool enable_lpd = 2;
    const uint64_t ENABLE_LPD = 0x0000010800000002LL;

    // optional bool enable_reader = 3;
    const uint64_t ENABLE_READER = 0x0000010800000003LL;

    // optional bool enable_host_routing = 4;
    const uint64_t ENABLE_HOST_ROUTING = 0x0000010800000004LL;

    // optional bool enable_p2p = 5;
    const uint64_t ENABLE_P2P = 0x0000010800000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "tech_mask",
        "enable_lpd",
        "enable_reader",
        "enable_host_routing",
        "enable_p2p",
    };
    static const uint64_t _FIELD_IDS[5] = {
        TECH_MASK,
        ENABLE_LPD,
        ENABLE_READER,
        ENABLE_HOST_ROUTING,
        ENABLE_P2P,
    };

} //DiscoveryParamsProto

// message P2pLinkManagerProto
namespace P2pLinkManagerProto {
    // enum LinkState
    const int LINK_STATE_UNKNOWN = 0;
    const int LINK_STATE_DOWN = 1;
    const int LINK_STATE_DEBOUNCE = 2;
    const int LINK_STATE_UP = 3;
    static const int _ENUM_LINK_STATE_COUNT = 4;
    static const char* _ENUM_LINK_STATE_NAMES[4] = {
        "UNKNOWN",
        "DOWN",
        "DEBOUNCE",
        "UP",
    };
    static const int _ENUM_LINK_STATE_VALUES[4] = {
        LINK_STATE_UNKNOWN,
        LINK_STATE_DOWN,
        LINK_STATE_DEBOUNCE,
        LINK_STATE_UP,
    };

    // enum SendState
    const int SEND_STATE_UNKNOWN = 0;
    const int SEND_STATE_NOTHING_TO_SEND = 1;
    const int SEND_STATE_NEED_CONFIRMATION = 2;
    const int SEND_STATE_SENDING = 3;
    const int SEND_STATE_COMPLETE = 4;
    const int SEND_STATE_CANCELED = 5;
    static const int _ENUM_SEND_STATE_COUNT = 6;
    static const char* _ENUM_SEND_STATE_NAMES[6] = {
        "UNKNOWN",
        "NOTHING_TO_SEND",
        "NEED_CONFIRMATION",
        "SENDING",
        "COMPLETE",
        "CANCELED",
    };
    static const int _ENUM_SEND_STATE_VALUES[6] = {
        SEND_STATE_UNKNOWN,
        SEND_STATE_NOTHING_TO_SEND,
        SEND_STATE_NEED_CONFIRMATION,
        SEND_STATE_SENDING,
        SEND_STATE_COMPLETE,
        SEND_STATE_CANCELED,
    };

    // optional int32 default_miu = 1;
    const uint64_t DEFAULT_MIU = 0x0000010500000001LL;

    // optional int32 default_rw_size = 2;
    const uint64_t DEFAULT_RW_SIZE = 0x0000010500000002LL;

    // optional .com.android.nfc.P2pLinkManagerProto.LinkState link_state = 3;
    const uint64_t LINK_STATE = 0x0000010e00000003LL;

    // optional .com.android.nfc.P2pLinkManagerProto.SendState send_state = 4;
    const uint64_t SEND_STATE = 0x0000010e00000004LL;

    // optional int32 send_flags = 5;
    const uint64_t SEND_FLAGS = 0x0000010500000005LL;

    // optional bool send_enabled = 6;
    const uint64_t SEND_ENABLED = 0x0000010800000006LL;

    // optional bool receive_enabled = 7;
    const uint64_t RECEIVE_ENABLED = 0x0000010800000007LL;

    // optional string callback_ndef = 8;
    const uint64_t CALLBACK_NDEF = 0x0000010900000008LL;

    // optional .android.nfc.NdefMessageProto message_to_send = 9;
    const uint64_t MESSAGE_TO_SEND = 0x0000010b00000009LL;

    // repeated string uris_to_send = 10;
    const uint64_t URIS_TO_SEND = 0x000002090000000aLL;

    static const int _FIELD_COUNT = 10;
    static const char* _FIELD_NAMES[10] = {
        "default_miu",
        "default_rw_size",
        "link_state",
        "send_state",
        "send_flags",
        "send_enabled",
        "receive_enabled",
        "callback_ndef",
        "message_to_send",
        "uris_to_send",
    };
    static const uint64_t _FIELD_IDS[10] = {
        DEFAULT_MIU,
        DEFAULT_RW_SIZE,
        LINK_STATE,
        SEND_STATE,
        SEND_FLAGS,
        SEND_ENABLED,
        RECEIVE_ENABLED,
        CALLBACK_NDEF,
        MESSAGE_TO_SEND,
        URIS_TO_SEND,
    };

} //P2pLinkManagerProto

// message NfcDispatcherProto
namespace NfcDispatcherProto {
    // optional bool device_supports_bluetooth = 1;
    const uint64_t DEVICE_SUPPORTS_BLUETOOTH = 0x0000010800000001LL;

    // optional bool bluetooth_enabled_by_nfc = 2;
    const uint64_t BLUETOOTH_ENABLED_BY_NFC = 0x0000010800000002LL;

    // optional bool provisioning_only = 3;
    const uint64_t PROVISIONING_ONLY = 0x0000010800000003LL;

    // optional .android.app.PendingIntentProto override_intent = 4;
    const uint64_t OVERRIDE_INTENT = 0x0000010b00000004LL;

    // repeated .android.content.IntentFilterProto override_filters = 5;
    const uint64_t OVERRIDE_FILTERS = 0x0000020b00000005LL;

    // optional string override_tech_lists = 6;
    const uint64_t OVERRIDE_TECH_LISTS = 0x0000010900000006LL;

    static const int _FIELD_COUNT = 6;
    static const char* _FIELD_NAMES[6] = {
        "device_supports_bluetooth",
        "bluetooth_enabled_by_nfc",
        "provisioning_only",
        "override_intent",
        "override_filters",
        "override_tech_lists",
    };
    static const uint64_t _FIELD_IDS[6] = {
        DEVICE_SUPPORTS_BLUETOOTH,
        BLUETOOTH_ENABLED_BY_NFC,
        PROVISIONING_ONLY,
        OVERRIDE_INTENT,
        OVERRIDE_FILTERS,
        OVERRIDE_TECH_LISTS,
    };

} //NfcDispatcherProto

} // nfc
} // android
} // com

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_NFC_NFC_SERVICE_PROTO_STREAM_H
