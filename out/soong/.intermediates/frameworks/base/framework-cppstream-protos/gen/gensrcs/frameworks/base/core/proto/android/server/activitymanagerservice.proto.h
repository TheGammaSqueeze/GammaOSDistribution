// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/server/activitymanagerservice.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_ACTIVITYMANAGERSERVICE_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_ACTIVITYMANAGERSERVICE_PROTO_STREAM_H

namespace com {
namespace android {
namespace server {
namespace am {

// message ActivityManagerServiceProto
namespace ActivityManagerServiceProto {
    // optional .com.android.server.am.ActivityManagerServiceDumpActivitiesProto activities = 1;
    const uint64_t ACTIVITIES = 0x0000010b00000001LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpBroadcastsProto broadcasts = 2;
    const uint64_t BROADCASTS = 0x0000010b00000002LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpServicesProto services = 3;
    const uint64_t SERVICES = 0x0000010b00000003LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto processes = 4;
    const uint64_t PROCESSES = 0x0000010b00000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "activities",
        "broadcasts",
        "services",
        "processes",
    };
    static const uint64_t _FIELD_IDS[4] = {
        ACTIVITIES,
        BROADCASTS,
        SERVICES,
        PROCESSES,
    };

} //ActivityManagerServiceProto

// message ActivityManagerServiceDumpActivitiesProto
namespace ActivityManagerServiceDumpActivitiesProto {
    // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
    const uint64_t ROOT_WINDOW_CONTAINER = 0x0000010b00000002LL;

    static const int _FIELD_COUNT = 1;
    static const char* _FIELD_NAMES[1] = {
        "root_window_container",
    };
    static const uint64_t _FIELD_IDS[1] = {
        ROOT_WINDOW_CONTAINER,
    };

} //ActivityManagerServiceDumpActivitiesProto

// message ActivityManagerServiceDumpBroadcastsProto
namespace ActivityManagerServiceDumpBroadcastsProto {
    // message MainHandler
    namespace MainHandler {
        // optional string handler = 1;
        const uint64_t HANDLER = 0x0000010900000001LL;

        // optional .android.os.LooperProto looper = 2;
        const uint64_t LOOPER = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "handler",
            "looper",
        };
        static const uint64_t _FIELD_IDS[2] = {
            HANDLER,
            LOOPER,
        };

    } //MainHandler

    // repeated .com.android.server.am.ReceiverListProto receiver_list = 1;
    const uint64_t RECEIVER_LIST = 0x0000020b00000001LL;

    // optional .com.android.server.IntentResolverProto receiver_resolver = 2;
    const uint64_t RECEIVER_RESOLVER = 0x0000010b00000002LL;

    // repeated .com.android.server.am.BroadcastQueueProto broadcast_queue = 3;
    const uint64_t BROADCAST_QUEUE = 0x0000020b00000003LL;

    // repeated .com.android.server.am.StickyBroadcastProto sticky_broadcasts = 4;
    const uint64_t STICKY_BROADCASTS = 0x0000020b00000004LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpBroadcastsProto.MainHandler handler = 5;
    const uint64_t HANDLER = 0x0000010b00000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "receiver_list",
        "receiver_resolver",
        "broadcast_queue",
        "sticky_broadcasts",
        "handler",
    };
    static const uint64_t _FIELD_IDS[5] = {
        RECEIVER_LIST,
        RECEIVER_RESOLVER,
        BROADCAST_QUEUE,
        STICKY_BROADCASTS,
        HANDLER,
    };

} //ActivityManagerServiceDumpBroadcastsProto

// message ReceiverListProto
namespace ReceiverListProto {
    // optional .com.android.server.am.ProcessRecordProto app = 1;
    const uint64_t APP = 0x0000010b00000001LL;

    // optional int32 pid = 2;
    const uint64_t PID = 0x0000010500000002LL;

    // optional int32 uid = 3;
    const uint64_t UID = 0x0000010500000003LL;

    // optional int32 user = 4;
    const uint64_t USER = 0x0000010500000004LL;

    // optional .com.android.server.am.BroadcastRecordProto current = 5;
    const uint64_t CURRENT = 0x0000010b00000005LL;

    // optional bool linked_to_death = 6;
    const uint64_t LINKED_TO_DEATH = 0x0000010800000006LL;

    // repeated .com.android.server.am.BroadcastFilterProto filters = 7;
    const uint64_t FILTERS = 0x0000020b00000007LL;

    // optional string hex_hash = 8;
    const uint64_t HEX_HASH = 0x0000010900000008LL;

    static const int _FIELD_COUNT = 8;
    static const char* _FIELD_NAMES[8] = {
        "app",
        "pid",
        "uid",
        "user",
        "current",
        "linked_to_death",
        "filters",
        "hex_hash",
    };
    static const uint64_t _FIELD_IDS[8] = {
        APP,
        PID,
        UID,
        USER,
        CURRENT,
        LINKED_TO_DEATH,
        FILTERS,
        HEX_HASH,
    };

} //ReceiverListProto

// message ProcessRecordProto
namespace ProcessRecordProto {
    // optional int32 pid = 1;
    const uint64_t PID = 0x0000010500000001LL;

    // optional string process_name = 2;
    const uint64_t PROCESS_NAME = 0x0000010900000002LL;

    // optional int32 uid = 3;
    const uint64_t UID = 0x0000010500000003LL;

    // optional int32 user_id = 4;
    const uint64_t USER_ID = 0x0000010500000004LL;

    // optional int32 app_id = 5;
    const uint64_t APP_ID = 0x0000010500000005LL;

    // optional int32 isolated_app_id = 6;
    const uint64_t ISOLATED_APP_ID = 0x0000010500000006LL;

    // optional bool persistent = 7;
    const uint64_t PERSISTENT = 0x0000010800000007LL;

    // optional int32 lru_index = 8;
    const uint64_t LRU_INDEX = 0x0000010500000008LL;

    static const int _FIELD_COUNT = 8;
    static const char* _FIELD_NAMES[8] = {
        "pid",
        "process_name",
        "uid",
        "user_id",
        "app_id",
        "isolated_app_id",
        "persistent",
        "lru_index",
    };
    static const uint64_t _FIELD_IDS[8] = {
        PID,
        PROCESS_NAME,
        UID,
        USER_ID,
        APP_ID,
        ISOLATED_APP_ID,
        PERSISTENT,
        LRU_INDEX,
    };

} //ProcessRecordProto

// message BroadcastRecordProto
namespace BroadcastRecordProto {
    // optional int32 user_id = 1;
    const uint64_t USER_ID = 0x0000010500000001LL;

    // optional string intent_action = 2;
    const uint64_t INTENT_ACTION = 0x0000010900000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "user_id",
        "intent_action",
    };
    static const uint64_t _FIELD_IDS[2] = {
        USER_ID,
        INTENT_ACTION,
    };

} //BroadcastRecordProto

// message BroadcastFilterProto
namespace BroadcastFilterProto {
    // optional .android.content.IntentFilterProto intent_filter = 1;
    const uint64_t INTENT_FILTER = 0x0000010b00000001LL;

    // optional string required_permission = 2;
    const uint64_t REQUIRED_PERMISSION = 0x0000010900000002LL;

    // optional string hex_hash = 3;
    const uint64_t HEX_HASH = 0x0000010900000003LL;

    // optional int32 owning_user_id = 4;
    const uint64_t OWNING_USER_ID = 0x0000010500000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "intent_filter",
        "required_permission",
        "hex_hash",
        "owning_user_id",
    };
    static const uint64_t _FIELD_IDS[4] = {
        INTENT_FILTER,
        REQUIRED_PERMISSION,
        HEX_HASH,
        OWNING_USER_ID,
    };

} //BroadcastFilterProto

// message BroadcastQueueProto
namespace BroadcastQueueProto {
    // message BroadcastSummary
    namespace BroadcastSummary {
        // optional .android.content.IntentProto intent = 1;
        const uint64_t INTENT = 0x0000010b00000001LL;

        // optional int64 enqueue_clock_time_ms = 2;
        const uint64_t ENQUEUE_CLOCK_TIME_MS = 0x0000010300000002LL;

        // optional int64 dispatch_clock_time_ms = 3;
        const uint64_t DISPATCH_CLOCK_TIME_MS = 0x0000010300000003LL;

        // optional int64 finish_clock_time_ms = 4;
        const uint64_t FINISH_CLOCK_TIME_MS = 0x0000010300000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "intent",
            "enqueue_clock_time_ms",
            "dispatch_clock_time_ms",
            "finish_clock_time_ms",
        };
        static const uint64_t _FIELD_IDS[4] = {
            INTENT,
            ENQUEUE_CLOCK_TIME_MS,
            DISPATCH_CLOCK_TIME_MS,
            FINISH_CLOCK_TIME_MS,
        };

    } //BroadcastSummary

    // optional string queue_name = 1;
    const uint64_t QUEUE_NAME = 0x0000010900000001LL;

    // repeated .com.android.server.am.BroadcastRecordProto parallel_broadcasts = 2;
    const uint64_t PARALLEL_BROADCASTS = 0x0000020b00000002LL;

    // repeated .com.android.server.am.BroadcastRecordProto ordered_broadcasts = 3;
    const uint64_t ORDERED_BROADCASTS = 0x0000020b00000003LL;

    // optional .com.android.server.am.BroadcastRecordProto pending_broadcast = 4;
    const uint64_t PENDING_BROADCAST = 0x0000010b00000004LL;

    // repeated .com.android.server.am.BroadcastRecordProto historical_broadcasts = 5;
    const uint64_t HISTORICAL_BROADCASTS = 0x0000020b00000005LL;

    // repeated .com.android.server.am.BroadcastQueueProto.BroadcastSummary historical_broadcasts_summary = 6;
    const uint64_t HISTORICAL_BROADCASTS_SUMMARY = 0x0000020b00000006LL;

    static const int _FIELD_COUNT = 6;
    static const char* _FIELD_NAMES[6] = {
        "queue_name",
        "parallel_broadcasts",
        "ordered_broadcasts",
        "pending_broadcast",
        "historical_broadcasts",
        "historical_broadcasts_summary",
    };
    static const uint64_t _FIELD_IDS[6] = {
        QUEUE_NAME,
        PARALLEL_BROADCASTS,
        ORDERED_BROADCASTS,
        PENDING_BROADCAST,
        HISTORICAL_BROADCASTS,
        HISTORICAL_BROADCASTS_SUMMARY,
    };

} //BroadcastQueueProto

// message MemInfoDumpProto
namespace MemInfoDumpProto {
    // message ProcessMemory
    namespace ProcessMemory {
        // message MemoryInfo
        namespace MemoryInfo {
            // optional string name = 1;
            const uint64_t NAME = 0x0000010900000001LL;

            // optional int32 total_pss_kb = 2;
            const uint64_t TOTAL_PSS_KB = 0x0000010500000002LL;

            // optional int32 clean_pss_kb = 3;
            const uint64_t CLEAN_PSS_KB = 0x0000010500000003LL;

            // optional int32 shared_dirty_kb = 4;
            const uint64_t SHARED_DIRTY_KB = 0x0000010500000004LL;

            // optional int32 private_dirty_kb = 5;
            const uint64_t PRIVATE_DIRTY_KB = 0x0000010500000005LL;

            // optional int32 shared_clean_kb = 6;
            const uint64_t SHARED_CLEAN_KB = 0x0000010500000006LL;

            // optional int32 private_clean_kb = 7;
            const uint64_t PRIVATE_CLEAN_KB = 0x0000010500000007LL;

            // optional int32 dirty_swap_kb = 8;
            const uint64_t DIRTY_SWAP_KB = 0x0000010500000008LL;

            // optional int32 dirty_swap_pss_kb = 9;
            const uint64_t DIRTY_SWAP_PSS_KB = 0x0000010500000009LL;

            // optional int32 total_rss_kb = 10;
            const uint64_t TOTAL_RSS_KB = 0x000001050000000aLL;

            static const int _FIELD_COUNT = 10;
            static const char* _FIELD_NAMES[10] = {
                "name",
                "total_pss_kb",
                "clean_pss_kb",
                "shared_dirty_kb",
                "private_dirty_kb",
                "shared_clean_kb",
                "private_clean_kb",
                "dirty_swap_kb",
                "dirty_swap_pss_kb",
                "total_rss_kb",
            };
            static const uint64_t _FIELD_IDS[10] = {
                NAME,
                TOTAL_PSS_KB,
                CLEAN_PSS_KB,
                SHARED_DIRTY_KB,
                PRIVATE_DIRTY_KB,
                SHARED_CLEAN_KB,
                PRIVATE_CLEAN_KB,
                DIRTY_SWAP_KB,
                DIRTY_SWAP_PSS_KB,
                TOTAL_RSS_KB,
            };

        } //MemoryInfo

        // message HeapInfo
        namespace HeapInfo {
            // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory.MemoryInfo mem_info = 1;
            const uint64_t MEM_INFO = 0x0000010b00000001LL;

            // optional int32 heap_size_kb = 2;
            const uint64_t HEAP_SIZE_KB = 0x0000010500000002LL;

            // optional int32 heap_alloc_kb = 3;
            const uint64_t HEAP_ALLOC_KB = 0x0000010500000003LL;

            // optional int32 heap_free_kb = 4;
            const uint64_t HEAP_FREE_KB = 0x0000010500000004LL;

            static const int _FIELD_COUNT = 4;
            static const char* _FIELD_NAMES[4] = {
                "mem_info",
                "heap_size_kb",
                "heap_alloc_kb",
                "heap_free_kb",
            };
            static const uint64_t _FIELD_IDS[4] = {
                MEM_INFO,
                HEAP_SIZE_KB,
                HEAP_ALLOC_KB,
                HEAP_FREE_KB,
            };

        } //HeapInfo

        // message AppSummary
        namespace AppSummary {
            // optional int32 java_heap_pss_kb = 1;
            const uint64_t JAVA_HEAP_PSS_KB = 0x0000010500000001LL;

            // optional int32 native_heap_pss_kb = 2;
            const uint64_t NATIVE_HEAP_PSS_KB = 0x0000010500000002LL;

            // optional int32 code_pss_kb = 3;
            const uint64_t CODE_PSS_KB = 0x0000010500000003LL;

            // optional int32 stack_pss_kb = 4;
            const uint64_t STACK_PSS_KB = 0x0000010500000004LL;

            // optional int32 graphics_pss_kb = 5;
            const uint64_t GRAPHICS_PSS_KB = 0x0000010500000005LL;

            // optional int32 private_other_pss_kb = 6;
            const uint64_t PRIVATE_OTHER_PSS_KB = 0x0000010500000006LL;

            // optional int32 system_pss_kb = 7;
            const uint64_t SYSTEM_PSS_KB = 0x0000010500000007LL;

            // optional int32 total_swap_pss = 8;
            const uint64_t TOTAL_SWAP_PSS = 0x0000010500000008LL;

            // optional int32 total_swap_kb = 9;
            const uint64_t TOTAL_SWAP_KB = 0x0000010500000009LL;

            // optional int32 java_heap_rss_kb = 10;
            const uint64_t JAVA_HEAP_RSS_KB = 0x000001050000000aLL;

            // optional int32 native_heap_rss_kb = 11;
            const uint64_t NATIVE_HEAP_RSS_KB = 0x000001050000000bLL;

            // optional int32 code_rss_kb = 12;
            const uint64_t CODE_RSS_KB = 0x000001050000000cLL;

            // optional int32 stack_rss_kb = 13;
            const uint64_t STACK_RSS_KB = 0x000001050000000dLL;

            // optional int32 graphics_rss_kb = 14;
            const uint64_t GRAPHICS_RSS_KB = 0x000001050000000eLL;

            // optional int32 unknown_rss_kb = 15;
            const uint64_t UNKNOWN_RSS_KB = 0x000001050000000fLL;

            static const int _FIELD_COUNT = 15;
            static const char* _FIELD_NAMES[15] = {
                "java_heap_pss_kb",
                "native_heap_pss_kb",
                "code_pss_kb",
                "stack_pss_kb",
                "graphics_pss_kb",
                "private_other_pss_kb",
                "system_pss_kb",
                "total_swap_pss",
                "total_swap_kb",
                "java_heap_rss_kb",
                "native_heap_rss_kb",
                "code_rss_kb",
                "stack_rss_kb",
                "graphics_rss_kb",
                "unknown_rss_kb",
            };
            static const uint64_t _FIELD_IDS[15] = {
                JAVA_HEAP_PSS_KB,
                NATIVE_HEAP_PSS_KB,
                CODE_PSS_KB,
                STACK_PSS_KB,
                GRAPHICS_PSS_KB,
                PRIVATE_OTHER_PSS_KB,
                SYSTEM_PSS_KB,
                TOTAL_SWAP_PSS,
                TOTAL_SWAP_KB,
                JAVA_HEAP_RSS_KB,
                NATIVE_HEAP_RSS_KB,
                CODE_RSS_KB,
                STACK_RSS_KB,
                GRAPHICS_RSS_KB,
                UNKNOWN_RSS_KB,
            };

        } //AppSummary

        // optional int32 pid = 1;
        const uint64_t PID = 0x0000010500000001LL;

        // optional string process_name = 2;
        const uint64_t PROCESS_NAME = 0x0000010900000002LL;

        // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory.HeapInfo native_heap = 3;
        const uint64_t NATIVE_HEAP = 0x0000010b00000003LL;

        // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory.HeapInfo dalvik_heap = 4;
        const uint64_t DALVIK_HEAP = 0x0000010b00000004LL;

        // repeated .com.android.server.am.MemInfoDumpProto.ProcessMemory.MemoryInfo other_heaps = 5;
        const uint64_t OTHER_HEAPS = 0x0000020b00000005LL;

        // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory.MemoryInfo unknown_heap = 6;
        const uint64_t UNKNOWN_HEAP = 0x0000010b00000006LL;

        // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory.HeapInfo total_heap = 7;
        const uint64_t TOTAL_HEAP = 0x0000010b00000007LL;

        // repeated .com.android.server.am.MemInfoDumpProto.ProcessMemory.MemoryInfo dalvik_details = 8;
        const uint64_t DALVIK_DETAILS = 0x0000020b00000008LL;

        // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory.AppSummary app_summary = 9;
        const uint64_t APP_SUMMARY = 0x0000010b00000009LL;

        static const int _FIELD_COUNT = 9;
        static const char* _FIELD_NAMES[9] = {
            "pid",
            "process_name",
            "native_heap",
            "dalvik_heap",
            "other_heaps",
            "unknown_heap",
            "total_heap",
            "dalvik_details",
            "app_summary",
        };
        static const uint64_t _FIELD_IDS[9] = {
            PID,
            PROCESS_NAME,
            NATIVE_HEAP,
            DALVIK_HEAP,
            OTHER_HEAPS,
            UNKNOWN_HEAP,
            TOTAL_HEAP,
            DALVIK_DETAILS,
            APP_SUMMARY,
        };

    } //ProcessMemory

    // message AppData
    namespace AppData {
        // message ObjectStats
        namespace ObjectStats {
            // optional int32 view_instance_count = 1;
            const uint64_t VIEW_INSTANCE_COUNT = 0x0000010500000001LL;

            // optional int32 view_root_instance_count = 2;
            const uint64_t VIEW_ROOT_INSTANCE_COUNT = 0x0000010500000002LL;

            // optional int32 app_context_instance_count = 3;
            const uint64_t APP_CONTEXT_INSTANCE_COUNT = 0x0000010500000003LL;

            // optional int32 activity_instance_count = 4;
            const uint64_t ACTIVITY_INSTANCE_COUNT = 0x0000010500000004LL;

            // optional int32 global_asset_count = 5;
            const uint64_t GLOBAL_ASSET_COUNT = 0x0000010500000005LL;

            // optional int32 global_asset_manager_count = 6;
            const uint64_t GLOBAL_ASSET_MANAGER_COUNT = 0x0000010500000006LL;

            // optional int32 local_binder_object_count = 7;
            const uint64_t LOCAL_BINDER_OBJECT_COUNT = 0x0000010500000007LL;

            // optional int32 proxy_binder_object_count = 8;
            const uint64_t PROXY_BINDER_OBJECT_COUNT = 0x0000010500000008LL;

            // optional int64 parcel_memory_kb = 9;
            const uint64_t PARCEL_MEMORY_KB = 0x0000010300000009LL;

            // optional int32 parcel_count = 10;
            const uint64_t PARCEL_COUNT = 0x000001050000000aLL;

            // optional int32 binder_object_death_count = 11;
            const uint64_t BINDER_OBJECT_DEATH_COUNT = 0x000001050000000bLL;

            // optional int32 open_ssl_socket_count = 12;
            const uint64_t OPEN_SSL_SOCKET_COUNT = 0x000001050000000cLL;

            // optional int32 webview_instance_count = 13;
            const uint64_t WEBVIEW_INSTANCE_COUNT = 0x000001050000000dLL;

            static const int _FIELD_COUNT = 13;
            static const char* _FIELD_NAMES[13] = {
                "view_instance_count",
                "view_root_instance_count",
                "app_context_instance_count",
                "activity_instance_count",
                "global_asset_count",
                "global_asset_manager_count",
                "local_binder_object_count",
                "proxy_binder_object_count",
                "parcel_memory_kb",
                "parcel_count",
                "binder_object_death_count",
                "open_ssl_socket_count",
                "webview_instance_count",
            };
            static const uint64_t _FIELD_IDS[13] = {
                VIEW_INSTANCE_COUNT,
                VIEW_ROOT_INSTANCE_COUNT,
                APP_CONTEXT_INSTANCE_COUNT,
                ACTIVITY_INSTANCE_COUNT,
                GLOBAL_ASSET_COUNT,
                GLOBAL_ASSET_MANAGER_COUNT,
                LOCAL_BINDER_OBJECT_COUNT,
                PROXY_BINDER_OBJECT_COUNT,
                PARCEL_MEMORY_KB,
                PARCEL_COUNT,
                BINDER_OBJECT_DEATH_COUNT,
                OPEN_SSL_SOCKET_COUNT,
                WEBVIEW_INSTANCE_COUNT,
            };

        } //ObjectStats

        // message SqlStats
        namespace SqlStats {
            // message Database
            namespace Database {
                // optional string name = 1;
                const uint64_t NAME = 0x0000010900000001LL;

                // optional int32 page_size = 2;
                const uint64_t PAGE_SIZE = 0x0000010500000002LL;

                // optional int32 db_size = 3;
                const uint64_t DB_SIZE = 0x0000010500000003LL;

                // optional int32 lookaside_b = 4;
                const uint64_t LOOKASIDE_B = 0x0000010500000004LL;

                // optional string cache = 5;
                const uint64_t CACHE = 0x0000010900000005LL;

                static const int _FIELD_COUNT = 5;
                static const char* _FIELD_NAMES[5] = {
                    "name",
                    "page_size",
                    "db_size",
                    "lookaside_b",
                    "cache",
                };
                static const uint64_t _FIELD_IDS[5] = {
                    NAME,
                    PAGE_SIZE,
                    DB_SIZE,
                    LOOKASIDE_B,
                    CACHE,
                };

            } //Database

            // optional int32 memory_used_kb = 1;
            const uint64_t MEMORY_USED_KB = 0x0000010500000001LL;

            // optional int32 pagecache_overflow_kb = 2;
            const uint64_t PAGECACHE_OVERFLOW_KB = 0x0000010500000002LL;

            // optional int32 malloc_size_kb = 3;
            const uint64_t MALLOC_SIZE_KB = 0x0000010500000003LL;

            // repeated .com.android.server.am.MemInfoDumpProto.AppData.SqlStats.Database databases = 4;
            const uint64_t DATABASES = 0x0000020b00000004LL;

            static const int _FIELD_COUNT = 4;
            static const char* _FIELD_NAMES[4] = {
                "memory_used_kb",
                "pagecache_overflow_kb",
                "malloc_size_kb",
                "databases",
            };
            static const uint64_t _FIELD_IDS[4] = {
                MEMORY_USED_KB,
                PAGECACHE_OVERFLOW_KB,
                MALLOC_SIZE_KB,
                DATABASES,
            };

        } //SqlStats

        // optional .com.android.server.am.MemInfoDumpProto.ProcessMemory process_memory = 1;
        const uint64_t PROCESS_MEMORY = 0x0000010b00000001LL;

        // optional .com.android.server.am.MemInfoDumpProto.AppData.ObjectStats objects = 2;
        const uint64_t OBJECTS = 0x0000010b00000002LL;

        // optional .com.android.server.am.MemInfoDumpProto.AppData.SqlStats sql = 3;
        const uint64_t SQL = 0x0000010b00000003LL;

        // optional string asset_allocations = 4;
        const uint64_t ASSET_ALLOCATIONS = 0x0000010900000004LL;

        // optional string unreachable_memory = 5;
        const uint64_t UNREACHABLE_MEMORY = 0x0000010900000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "process_memory",
            "objects",
            "sql",
            "asset_allocations",
            "unreachable_memory",
        };
        static const uint64_t _FIELD_IDS[5] = {
            PROCESS_MEMORY,
            OBJECTS,
            SQL,
            ASSET_ALLOCATIONS,
            UNREACHABLE_MEMORY,
        };

    } //AppData

    // message MemItem
    namespace MemItem {
        // optional string tag = 1;
        const uint64_t TAG = 0x0000010900000001LL;

        // optional string label = 2;
        const uint64_t LABEL = 0x0000010900000002LL;

        // optional int32 id = 3;
        const uint64_t ID = 0x0000010500000003LL;

        // optional bool is_proc = 4;
        const uint64_t IS_PROC = 0x0000010800000004LL;

        // optional bool has_activities = 5;
        const uint64_t HAS_ACTIVITIES = 0x0000010800000005LL;

        // optional int64 pss_kb = 6;
        const uint64_t PSS_KB = 0x0000010300000006LL;

        // optional int64 rss_kb = 9;
        const uint64_t RSS_KB = 0x0000010300000009LL;

        // optional int64 swap_pss_kb = 7;
        const uint64_t SWAP_PSS_KB = 0x0000010300000007LL;

        // repeated .com.android.server.am.MemInfoDumpProto.MemItem sub_items = 8;
        const uint64_t SUB_ITEMS = 0x0000020b00000008LL;

        static const int _FIELD_COUNT = 9;
        static const char* _FIELD_NAMES[9] = {
            "tag",
            "label",
            "id",
            "is_proc",
            "has_activities",
            "pss_kb",
            "rss_kb",
            "swap_pss_kb",
            "sub_items",
        };
        static const uint64_t _FIELD_IDS[9] = {
            TAG,
            LABEL,
            ID,
            IS_PROC,
            HAS_ACTIVITIES,
            PSS_KB,
            RSS_KB,
            SWAP_PSS_KB,
            SUB_ITEMS,
        };

    } //MemItem

    // optional int64 uptime_duration_ms = 1;
    const uint64_t UPTIME_DURATION_MS = 0x0000010300000001LL;

    // optional int64 elapsed_realtime_ms = 2;
    const uint64_t ELAPSED_REALTIME_MS = 0x0000010300000002LL;

    // repeated .com.android.server.am.MemInfoDumpProto.ProcessMemory native_processes = 3;
    const uint64_t NATIVE_PROCESSES = 0x0000020b00000003LL;

    // repeated .com.android.server.am.MemInfoDumpProto.AppData app_processes = 4;
    const uint64_t APP_PROCESSES = 0x0000020b00000004LL;

    // repeated .com.android.server.am.MemInfoDumpProto.MemItem total_rss_by_process = 29;
    const uint64_t TOTAL_RSS_BY_PROCESS = 0x0000020b0000001dLL;

    // repeated .com.android.server.am.MemInfoDumpProto.MemItem total_rss_by_oom_adjustment = 30;
    const uint64_t TOTAL_RSS_BY_OOM_ADJUSTMENT = 0x0000020b0000001eLL;

    // repeated .com.android.server.am.MemInfoDumpProto.MemItem total_rss_by_category = 31;
    const uint64_t TOTAL_RSS_BY_CATEGORY = 0x0000020b0000001fLL;

    // repeated .com.android.server.am.MemInfoDumpProto.MemItem total_pss_by_process = 5;
    const uint64_t TOTAL_PSS_BY_PROCESS = 0x0000020b00000005LL;

    // repeated .com.android.server.am.MemInfoDumpProto.MemItem total_pss_by_oom_adjustment = 6;
    const uint64_t TOTAL_PSS_BY_OOM_ADJUSTMENT = 0x0000020b00000006LL;

    // repeated .com.android.server.am.MemInfoDumpProto.MemItem total_pss_by_category = 7;
    const uint64_t TOTAL_PSS_BY_CATEGORY = 0x0000020b00000007LL;

    // optional int64 total_ram_kb = 8;
    const uint64_t TOTAL_RAM_KB = 0x0000010300000008LL;

    // optional .com.android.internal.app.procstats.ProcessStatsProto.MemoryFactor status = 9;
    const uint64_t STATUS = 0x0000010e00000009LL;

    // optional int64 cached_pss_kb = 10;
    const uint64_t CACHED_PSS_KB = 0x000001030000000aLL;

    // optional int64 cached_kernel_kb = 11;
    const uint64_t CACHED_KERNEL_KB = 0x000001030000000bLL;

    // optional int64 free_kb = 12;
    const uint64_t FREE_KB = 0x000001030000000cLL;

    // optional int64 used_pss_kb = 13;
    const uint64_t USED_PSS_KB = 0x000001030000000dLL;

    // optional int64 used_kernel_kb = 14;
    const uint64_t USED_KERNEL_KB = 0x000001030000000eLL;

    // optional int64 lost_ram_kb = 15;
    const uint64_t LOST_RAM_KB = 0x000001030000000fLL;

    // optional int64 total_zram_kb = 16;
    const uint64_t TOTAL_ZRAM_KB = 0x0000010300000010LL;

    // optional int64 zram_physical_used_in_swap_kb = 17;
    const uint64_t ZRAM_PHYSICAL_USED_IN_SWAP_KB = 0x0000010300000011LL;

    // optional int64 total_zram_swap_kb = 18;
    const uint64_t TOTAL_ZRAM_SWAP_KB = 0x0000010300000012LL;

    // optional int64 ksm_sharing_kb = 19;
    const uint64_t KSM_SHARING_KB = 0x0000010300000013LL;

    // optional int64 ksm_shared_kb = 20;
    const uint64_t KSM_SHARED_KB = 0x0000010300000014LL;

    // optional int64 ksm_unshared_kb = 21;
    const uint64_t KSM_UNSHARED_KB = 0x0000010300000015LL;

    // optional int64 ksm_volatile_kb = 22;
    const uint64_t KSM_VOLATILE_KB = 0x0000010300000016LL;

    // optional int32 tuning_mb = 23;
    const uint64_t TUNING_MB = 0x0000010500000017LL;

    // optional int32 tuning_large_mb = 24;
    const uint64_t TUNING_LARGE_MB = 0x0000010500000018LL;

    // optional int64 oom_kb = 25;
    const uint64_t OOM_KB = 0x0000010300000019LL;

    // optional int64 restore_limit_kb = 26;
    const uint64_t RESTORE_LIMIT_KB = 0x000001030000001aLL;

    // optional bool is_low_ram_device = 27;
    const uint64_t IS_LOW_RAM_DEVICE = 0x000001080000001bLL;

    // optional bool is_high_end_gfx = 28;
    const uint64_t IS_HIGH_END_GFX = 0x000001080000001cLL;

    static const int _FIELD_COUNT = 31;
    static const char* _FIELD_NAMES[31] = {
        "uptime_duration_ms",
        "elapsed_realtime_ms",
        "native_processes",
        "app_processes",
        "total_rss_by_process",
        "total_rss_by_oom_adjustment",
        "total_rss_by_category",
        "total_pss_by_process",
        "total_pss_by_oom_adjustment",
        "total_pss_by_category",
        "total_ram_kb",
        "status",
        "cached_pss_kb",
        "cached_kernel_kb",
        "free_kb",
        "used_pss_kb",
        "used_kernel_kb",
        "lost_ram_kb",
        "total_zram_kb",
        "zram_physical_used_in_swap_kb",
        "total_zram_swap_kb",
        "ksm_sharing_kb",
        "ksm_shared_kb",
        "ksm_unshared_kb",
        "ksm_volatile_kb",
        "tuning_mb",
        "tuning_large_mb",
        "oom_kb",
        "restore_limit_kb",
        "is_low_ram_device",
        "is_high_end_gfx",
    };
    static const uint64_t _FIELD_IDS[31] = {
        UPTIME_DURATION_MS,
        ELAPSED_REALTIME_MS,
        NATIVE_PROCESSES,
        APP_PROCESSES,
        TOTAL_RSS_BY_PROCESS,
        TOTAL_RSS_BY_OOM_ADJUSTMENT,
        TOTAL_RSS_BY_CATEGORY,
        TOTAL_PSS_BY_PROCESS,
        TOTAL_PSS_BY_OOM_ADJUSTMENT,
        TOTAL_PSS_BY_CATEGORY,
        TOTAL_RAM_KB,
        STATUS,
        CACHED_PSS_KB,
        CACHED_KERNEL_KB,
        FREE_KB,
        USED_PSS_KB,
        USED_KERNEL_KB,
        LOST_RAM_KB,
        TOTAL_ZRAM_KB,
        ZRAM_PHYSICAL_USED_IN_SWAP_KB,
        TOTAL_ZRAM_SWAP_KB,
        KSM_SHARING_KB,
        KSM_SHARED_KB,
        KSM_UNSHARED_KB,
        KSM_VOLATILE_KB,
        TUNING_MB,
        TUNING_LARGE_MB,
        OOM_KB,
        RESTORE_LIMIT_KB,
        IS_LOW_RAM_DEVICE,
        IS_HIGH_END_GFX,
    };

} //MemInfoDumpProto

// message StickyBroadcastProto
namespace StickyBroadcastProto {
    // message StickyAction
    namespace StickyAction {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // repeated .android.content.IntentProto intents = 2;
        const uint64_t INTENTS = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "intents",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            INTENTS,
        };

    } //StickyAction

    // optional int32 user = 1;
    const uint64_t USER = 0x0000010500000001LL;

    // repeated .com.android.server.am.StickyBroadcastProto.StickyAction actions = 2;
    const uint64_t ACTIONS = 0x0000020b00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "user",
        "actions",
    };
    static const uint64_t _FIELD_IDS[2] = {
        USER,
        ACTIONS,
    };

} //StickyBroadcastProto

// message ActivityManagerServiceDumpServicesProto
namespace ActivityManagerServiceDumpServicesProto {
    // optional .com.android.server.am.ActiveServicesProto active_services = 1;
    const uint64_t ACTIVE_SERVICES = 0x0000010b00000001LL;

    static const int _FIELD_COUNT = 1;
    static const char* _FIELD_NAMES[1] = {
        "active_services",
    };
    static const uint64_t _FIELD_IDS[1] = {
        ACTIVE_SERVICES,
    };

} //ActivityManagerServiceDumpServicesProto

// message ActiveServicesProto
namespace ActiveServicesProto {
    // message ServicesByUser
    namespace ServicesByUser {
        // optional int32 user_id = 1;
        const uint64_t USER_ID = 0x0000010500000001LL;

        // repeated .com.android.server.am.ServiceRecordProto service_records = 2;
        const uint64_t SERVICE_RECORDS = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "user_id",
            "service_records",
        };
        static const uint64_t _FIELD_IDS[2] = {
            USER_ID,
            SERVICE_RECORDS,
        };

    } //ServicesByUser

    // repeated .com.android.server.am.ActiveServicesProto.ServicesByUser services_by_users = 1;
    const uint64_t SERVICES_BY_USERS = 0x0000020b00000001LL;

    static const int _FIELD_COUNT = 1;
    static const char* _FIELD_NAMES[1] = {
        "services_by_users",
    };
    static const uint64_t _FIELD_IDS[1] = {
        SERVICES_BY_USERS,
    };

} //ActiveServicesProto

// message GrantUriProto
namespace GrantUriProto {
    // optional int32 source_user_id = 1;
    const uint64_t SOURCE_USER_ID = 0x0000010500000001LL;

    // optional string uri = 2;
    const uint64_t URI = 0x0000010900000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "source_user_id",
        "uri",
    };
    static const uint64_t _FIELD_IDS[2] = {
        SOURCE_USER_ID,
        URI,
    };

} //GrantUriProto

// message NeededUriGrantsProto
namespace NeededUriGrantsProto {
    // optional string target_package = 1;
    const uint64_t TARGET_PACKAGE = 0x0000010900000001LL;

    // optional int32 target_uid = 2;
    const uint64_t TARGET_UID = 0x0000010500000002LL;

    // optional int32 flags = 3;
    const uint64_t FLAGS = 0x0000010500000003LL;

    // repeated .com.android.server.am.GrantUriProto grants = 4;
    const uint64_t GRANTS = 0x0000020b00000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "target_package",
        "target_uid",
        "flags",
        "grants",
    };
    static const uint64_t _FIELD_IDS[4] = {
        TARGET_PACKAGE,
        TARGET_UID,
        FLAGS,
        GRANTS,
    };

} //NeededUriGrantsProto

// message UriPermissionOwnerProto
namespace UriPermissionOwnerProto {
    // optional string owner = 1;
    const uint64_t OWNER = 0x0000010900000001LL;

    // repeated .com.android.server.am.GrantUriProto read_perms = 2;
    const uint64_t READ_PERMS = 0x0000020b00000002LL;

    // repeated .com.android.server.am.GrantUriProto write_perms = 3;
    const uint64_t WRITE_PERMS = 0x0000020b00000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "owner",
        "read_perms",
        "write_perms",
    };
    static const uint64_t _FIELD_IDS[3] = {
        OWNER,
        READ_PERMS,
        WRITE_PERMS,
    };

} //UriPermissionOwnerProto

// message ServiceRecordProto
namespace ServiceRecordProto {
    // message AppInfo
    namespace AppInfo {
        // optional string base_dir = 1;
        const uint64_t BASE_DIR = 0x0000010900000001LL;

        // optional string res_dir = 2;
        const uint64_t RES_DIR = 0x0000010900000002LL;

        // optional string data_dir = 3;
        const uint64_t DATA_DIR = 0x0000010900000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "base_dir",
            "res_dir",
            "data_dir",
        };
        static const uint64_t _FIELD_IDS[3] = {
            BASE_DIR,
            RES_DIR,
            DATA_DIR,
        };

    } //AppInfo

    // message Foreground
    namespace Foreground {
        // optional int32 id = 1;
        const uint64_t ID = 0x0000010500000001LL;

        // optional .android.app.NotificationProto notification = 2;
        const uint64_t NOTIFICATION = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "id",
            "notification",
        };
        static const uint64_t _FIELD_IDS[2] = {
            ID,
            NOTIFICATION,
        };

    } //Foreground

    // message Start
    namespace Start {
        // optional bool start_requested = 1;
        const uint64_t START_REQUESTED = 0x0000010800000001LL;

        // optional bool delayed_stop = 2;
        const uint64_t DELAYED_STOP = 0x0000010800000002LL;

        // optional bool stop_if_killed = 3;
        const uint64_t STOP_IF_KILLED = 0x0000010800000003LL;

        // optional bool call_start = 4;
        const uint64_t CALL_START = 0x0000010800000004LL;

        // optional int32 last_start_id = 5;
        const uint64_t LAST_START_ID = 0x0000010500000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "start_requested",
            "delayed_stop",
            "stop_if_killed",
            "call_start",
            "last_start_id",
        };
        static const uint64_t _FIELD_IDS[5] = {
            START_REQUESTED,
            DELAYED_STOP,
            STOP_IF_KILLED,
            CALL_START,
            LAST_START_ID,
        };

    } //Start

    // message ExecuteNesting
    namespace ExecuteNesting {
        // optional int32 execute_nesting = 1;
        const uint64_t EXECUTE_NESTING = 0x0000010500000001LL;

        // optional bool execute_fg = 2;
        const uint64_t EXECUTE_FG = 0x0000010800000002LL;

        // optional .android.util.Duration executing_start = 3;
        const uint64_t EXECUTING_START = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "execute_nesting",
            "execute_fg",
            "executing_start",
        };
        static const uint64_t _FIELD_IDS[3] = {
            EXECUTE_NESTING,
            EXECUTE_FG,
            EXECUTING_START,
        };

    } //ExecuteNesting

    // message Crash
    namespace Crash {
        // optional int32 restart_count = 1;
        const uint64_t RESTART_COUNT = 0x0000010500000001LL;

        // optional .android.util.Duration restart_delay = 2;
        const uint64_t RESTART_DELAY = 0x0000010b00000002LL;

        // optional .android.util.Duration next_restart_time = 3;
        const uint64_t NEXT_RESTART_TIME = 0x0000010b00000003LL;

        // optional int32 crash_count = 4;
        const uint64_t CRASH_COUNT = 0x0000010500000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "restart_count",
            "restart_delay",
            "next_restart_time",
            "crash_count",
        };
        static const uint64_t _FIELD_IDS[4] = {
            RESTART_COUNT,
            RESTART_DELAY,
            NEXT_RESTART_TIME,
            CRASH_COUNT,
        };

    } //Crash

    // message StartItem
    namespace StartItem {
        // optional int32 id = 1;
        const uint64_t ID = 0x0000010500000001LL;

        // optional .android.util.Duration duration = 2;
        const uint64_t DURATION = 0x0000010b00000002LL;

        // optional int32 delivery_count = 3;
        const uint64_t DELIVERY_COUNT = 0x0000010500000003LL;

        // optional int32 done_executing_count = 4;
        const uint64_t DONE_EXECUTING_COUNT = 0x0000010500000004LL;

        // optional .android.content.IntentProto intent = 5;
        const uint64_t INTENT = 0x0000010b00000005LL;

        // optional .com.android.server.am.NeededUriGrantsProto needed_grants = 6;
        const uint64_t NEEDED_GRANTS = 0x0000010b00000006LL;

        // optional .com.android.server.am.UriPermissionOwnerProto uri_permissions = 7;
        const uint64_t URI_PERMISSIONS = 0x0000010b00000007LL;

        static const int _FIELD_COUNT = 7;
        static const char* _FIELD_NAMES[7] = {
            "id",
            "duration",
            "delivery_count",
            "done_executing_count",
            "intent",
            "needed_grants",
            "uri_permissions",
        };
        static const uint64_t _FIELD_IDS[7] = {
            ID,
            DURATION,
            DELIVERY_COUNT,
            DONE_EXECUTING_COUNT,
            INTENT,
            NEEDED_GRANTS,
            URI_PERMISSIONS,
        };

    } //StartItem

    // optional string short_name = 1;
    const uint64_t SHORT_NAME = 0x0000010900000001LL;

    // optional bool is_running = 2;
    const uint64_t IS_RUNNING = 0x0000010800000002LL;

    // optional int32 pid = 3;
    const uint64_t PID = 0x0000010500000003LL;

    // optional .android.content.IntentProto intent = 4;
    const uint64_t INTENT = 0x0000010b00000004LL;

    // optional string package_name = 5;
    const uint64_t PACKAGE_NAME = 0x0000010900000005LL;

    // optional string process_name = 6;
    const uint64_t PROCESS_NAME = 0x0000010900000006LL;

    // optional string permission = 7;
    const uint64_t PERMISSION = 0x0000010900000007LL;

    // optional .com.android.server.am.ServiceRecordProto.AppInfo appinfo = 8;
    const uint64_t APPINFO = 0x0000010b00000008LL;

    // optional .com.android.server.am.ProcessRecordProto app = 9;
    const uint64_t APP = 0x0000010b00000009LL;

    // optional .com.android.server.am.ProcessRecordProto isolated_proc = 10;
    const uint64_t ISOLATED_PROC = 0x0000010b0000000aLL;

    // optional bool whitelist_manager = 11;
    const uint64_t WHITELIST_MANAGER = 0x000001080000000bLL;

    // optional bool delayed = 12;
    const uint64_t DELAYED = 0x000001080000000cLL;

    // optional .com.android.server.am.ServiceRecordProto.Foreground foreground = 13;
    const uint64_t FOREGROUND = 0x0000010b0000000dLL;

    // optional .android.util.Duration create_real_time = 14;
    const uint64_t CREATE_REAL_TIME = 0x0000010b0000000eLL;

    // optional .android.util.Duration starting_bg_timeout = 15;
    const uint64_t STARTING_BG_TIMEOUT = 0x0000010b0000000fLL;

    // optional .android.util.Duration last_activity_time = 16;
    const uint64_t LAST_ACTIVITY_TIME = 0x0000010b00000010LL;

    // optional .android.util.Duration restart_time = 17;
    const uint64_t RESTART_TIME = 0x0000010b00000011LL;

    // optional bool created_from_fg = 18;
    const uint64_t CREATED_FROM_FG = 0x0000010800000012LL;

    // optional .com.android.server.am.ServiceRecordProto.Start start = 19;
    const uint64_t START = 0x0000010b00000013LL;

    // optional .com.android.server.am.ServiceRecordProto.ExecuteNesting execute = 20;
    const uint64_t EXECUTE = 0x0000010b00000014LL;

    // optional .android.util.Duration destory_time = 21;
    const uint64_t DESTORY_TIME = 0x0000010b00000015LL;

    // optional .com.android.server.am.ServiceRecordProto.Crash crash = 22;
    const uint64_t CRASH = 0x0000010b00000016LL;

    // repeated .com.android.server.am.ServiceRecordProto.StartItem delivered_starts = 23;
    const uint64_t DELIVERED_STARTS = 0x0000020b00000017LL;

    // repeated .com.android.server.am.ServiceRecordProto.StartItem pending_starts = 24;
    const uint64_t PENDING_STARTS = 0x0000020b00000018LL;

    // repeated .com.android.server.am.IntentBindRecordProto bindings = 25;
    const uint64_t BINDINGS = 0x0000020b00000019LL;

    // repeated .com.android.server.am.ConnectionRecordProto connections = 26;
    const uint64_t CONNECTIONS = 0x0000020b0000001aLL;

    // optional bool allow_while_in_use_permission_in_fgs = 27;
    const uint64_t ALLOW_WHILE_IN_USE_PERMISSION_IN_FGS = 0x000001080000001bLL;

    static const int _FIELD_COUNT = 27;
    static const char* _FIELD_NAMES[27] = {
        "short_name",
        "is_running",
        "pid",
        "intent",
        "package_name",
        "process_name",
        "permission",
        "appinfo",
        "app",
        "isolated_proc",
        "whitelist_manager",
        "delayed",
        "foreground",
        "create_real_time",
        "starting_bg_timeout",
        "last_activity_time",
        "restart_time",
        "created_from_fg",
        "start",
        "execute",
        "destory_time",
        "crash",
        "delivered_starts",
        "pending_starts",
        "bindings",
        "connections",
        "allow_while_in_use_permission_in_fgs",
    };
    static const uint64_t _FIELD_IDS[27] = {
        SHORT_NAME,
        IS_RUNNING,
        PID,
        INTENT,
        PACKAGE_NAME,
        PROCESS_NAME,
        PERMISSION,
        APPINFO,
        APP,
        ISOLATED_PROC,
        WHITELIST_MANAGER,
        DELAYED,
        FOREGROUND,
        CREATE_REAL_TIME,
        STARTING_BG_TIMEOUT,
        LAST_ACTIVITY_TIME,
        RESTART_TIME,
        CREATED_FROM_FG,
        START,
        EXECUTE,
        DESTORY_TIME,
        CRASH,
        DELIVERED_STARTS,
        PENDING_STARTS,
        BINDINGS,
        CONNECTIONS,
        ALLOW_WHILE_IN_USE_PERMISSION_IN_FGS,
    };

} //ServiceRecordProto

// message ConnectionRecordProto
namespace ConnectionRecordProto {
    // enum Flag
    const int AUTO_CREATE = 0;
    const int DEBUG_UNBIND = 1;
    const int NOT_FG = 2;
    const int IMPORTANT_BG = 3;
    const int ABOVE_CLIENT = 4;
    const int ALLOW_OOM_MANAGEMENT = 5;
    const int WAIVE_PRIORITY = 6;
    const int IMPORTANT = 7;
    const int ADJUST_WITH_ACTIVITY = 8;
    const int FG_SERVICE_WHILE_AWAKE = 9;
    const int FG_SERVICE = 10;
    const int TREAT_LIKE_ACTIVITY = 11;
    const int VISIBLE = 12;
    const int SHOWING_UI = 13;
    const int NOT_VISIBLE = 14;
    const int DEAD = 15;
    const int NOT_PERCEPTIBLE = 16;
    const int INCLUDE_CAPABILITIES = 17;
    static const int _ENUM_FLAG_COUNT = 18;
    static const char* _ENUM_FLAG_NAMES[18] = {
        "AUTO_CREATE",
        "DEBUG_UNBIND",
        "NOT_FG",
        "IMPORTANT_BG",
        "ABOVE_CLIENT",
        "ALLOW_OOM_MANAGEMENT",
        "WAIVE_PRIORITY",
        "IMPORTANT",
        "ADJUST_WITH_ACTIVITY",
        "FG_SERVICE_WHILE_AWAKE",
        "FG_SERVICE",
        "TREAT_LIKE_ACTIVITY",
        "VISIBLE",
        "SHOWING_UI",
        "NOT_VISIBLE",
        "DEAD",
        "NOT_PERCEPTIBLE",
        "INCLUDE_CAPABILITIES",
    };
    static const int _ENUM_FLAG_VALUES[18] = {
        AUTO_CREATE,
        DEBUG_UNBIND,
        NOT_FG,
        IMPORTANT_BG,
        ABOVE_CLIENT,
        ALLOW_OOM_MANAGEMENT,
        WAIVE_PRIORITY,
        IMPORTANT,
        ADJUST_WITH_ACTIVITY,
        FG_SERVICE_WHILE_AWAKE,
        FG_SERVICE,
        TREAT_LIKE_ACTIVITY,
        VISIBLE,
        SHOWING_UI,
        NOT_VISIBLE,
        DEAD,
        NOT_PERCEPTIBLE,
        INCLUDE_CAPABILITIES,
    };

    // optional string hex_hash = 1;
    const uint64_t HEX_HASH = 0x0000010900000001LL;

    // optional int32 user_id = 2;
    const uint64_t USER_ID = 0x0000010500000002LL;

    // repeated .com.android.server.am.ConnectionRecordProto.Flag flags = 3;
    const uint64_t FLAGS = 0x0000020e00000003LL;

    // optional string service_name = 4;
    const uint64_t SERVICE_NAME = 0x0000010900000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "hex_hash",
        "user_id",
        "flags",
        "service_name",
    };
    static const uint64_t _FIELD_IDS[4] = {
        HEX_HASH,
        USER_ID,
        FLAGS,
        SERVICE_NAME,
    };

} //ConnectionRecordProto

// message AppBindRecordProto
namespace AppBindRecordProto {
    // optional string service_name = 1;
    const uint64_t SERVICE_NAME = 0x0000010900000001LL;

    // optional string client_proc_name = 2;
    const uint64_t CLIENT_PROC_NAME = 0x0000010900000002LL;

    // repeated string connections = 3;
    const uint64_t CONNECTIONS = 0x0000020900000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "service_name",
        "client_proc_name",
        "connections",
    };
    static const uint64_t _FIELD_IDS[3] = {
        SERVICE_NAME,
        CLIENT_PROC_NAME,
        CONNECTIONS,
    };

} //AppBindRecordProto

// message IntentBindRecordProto
namespace IntentBindRecordProto {
    // optional .android.content.IntentProto intent = 1;
    const uint64_t INTENT = 0x0000010b00000001LL;

    // optional string binder = 2;
    const uint64_t BINDER = 0x0000010900000002LL;

    // optional bool auto_create = 3;
    const uint64_t AUTO_CREATE = 0x0000010800000003LL;

    // optional bool requested = 4;
    const uint64_t REQUESTED = 0x0000010800000004LL;

    // optional bool received = 5;
    const uint64_t RECEIVED = 0x0000010800000005LL;

    // optional bool has_bound = 6;
    const uint64_t HAS_BOUND = 0x0000010800000006LL;

    // optional bool do_rebind = 7;
    const uint64_t DO_REBIND = 0x0000010800000007LL;

    // repeated .com.android.server.am.AppBindRecordProto apps = 8;
    const uint64_t APPS = 0x0000020b00000008LL;

    static const int _FIELD_COUNT = 8;
    static const char* _FIELD_NAMES[8] = {
        "intent",
        "binder",
        "auto_create",
        "requested",
        "received",
        "has_bound",
        "do_rebind",
        "apps",
    };
    static const uint64_t _FIELD_IDS[8] = {
        INTENT,
        BINDER,
        AUTO_CREATE,
        REQUESTED,
        RECEIVED,
        HAS_BOUND,
        DO_REBIND,
        APPS,
    };

} //IntentBindRecordProto

// message ActivityManagerServiceDumpProcessesProto
namespace ActivityManagerServiceDumpProcessesProto {
    // message LruProcesses
    namespace LruProcesses {
        // optional int32 size = 1;
        const uint64_t SIZE = 0x0000010500000001LL;

        // optional int32 non_act_at = 2;
        const uint64_t NON_ACT_AT = 0x0000010500000002LL;

        // optional int32 non_svc_at = 3;
        const uint64_t NON_SVC_AT = 0x0000010500000003LL;

        // repeated .com.android.server.am.ProcessOomProto list = 4;
        const uint64_t LIST = 0x0000020b00000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "size",
            "non_act_at",
            "non_svc_at",
            "list",
        };
        static const uint64_t _FIELD_IDS[4] = {
            SIZE,
            NON_ACT_AT,
            NON_SVC_AT,
            LIST,
        };

    } //LruProcesses

    // message ScreenCompatPackage
    namespace ScreenCompatPackage {
        // optional string package = 1;
        const uint64_t PACKAGE = 0x0000010900000001LL;

        // optional int32 mode = 2;
        const uint64_t MODE = 0x0000010500000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "package",
            "mode",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PACKAGE,
            MODE,
        };

    } //ScreenCompatPackage

    // message UidObserverRegistrationProto
    namespace UidObserverRegistrationProto {
        // message ProcState
        namespace ProcState {
            // optional int32 uid = 1;
            const uint64_t UID = 0x0000010500000001LL;

            // optional int32 state = 2;
            const uint64_t STATE = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "uid",
                "state",
            };
            static const uint64_t _FIELD_IDS[2] = {
                UID,
                STATE,
            };

        } //ProcState

        // optional int32 uid = 1;
        const uint64_t UID = 0x0000010500000001LL;

        // optional string package = 2;
        const uint64_t PACKAGE = 0x0000010900000002LL;

        // repeated .android.app.UidObserverFlag flags = 3;
        const uint64_t FLAGS = 0x0000020e00000003LL;

        // optional int32 cut_point = 4;
        const uint64_t CUT_POINT = 0x0000010500000004LL;

        // repeated .com.android.server.am.ActivityManagerServiceDumpProcessesProto.UidObserverRegistrationProto.ProcState last_proc_states = 5;
        const uint64_t LAST_PROC_STATES = 0x0000020b00000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "uid",
            "package",
            "flags",
            "cut_point",
            "last_proc_states",
        };
        static const uint64_t _FIELD_IDS[5] = {
            UID,
            PACKAGE,
            FLAGS,
            CUT_POINT,
            LAST_PROC_STATES,
        };

    } //UidObserverRegistrationProto

    // message PendingTempWhitelist
    namespace PendingTempWhitelist {
        // optional int32 target_uid = 1;
        const uint64_t TARGET_UID = 0x0000010500000001LL;

        // optional int64 duration_ms = 2;
        const uint64_t DURATION_MS = 0x0000010300000002LL;

        // optional string tag = 3;
        const uint64_t TAG = 0x0000010900000003LL;

        // optional int32 type = 4;
        const uint64_t TYPE = 0x0000010500000004LL;

        // optional int32 reason_code = 5;
        const uint64_t REASON_CODE = 0x0000010500000005LL;

        // optional int32 calling_uid = 6;
        const uint64_t CALLING_UID = 0x0000010500000006LL;

        static const int _FIELD_COUNT = 6;
        static const char* _FIELD_NAMES[6] = {
            "target_uid",
            "duration_ms",
            "tag",
            "type",
            "reason_code",
            "calling_uid",
        };
        static const uint64_t _FIELD_IDS[6] = {
            TARGET_UID,
            DURATION_MS,
            TAG,
            TYPE,
            REASON_CODE,
            CALLING_UID,
        };

    } //PendingTempWhitelist

    // message SleepStatus
    namespace SleepStatus {
        // optional .android.os.PowerManagerInternalProto.Wakefulness wakefulness = 1;
        const uint64_t WAKEFULNESS = 0x0000010e00000001LL;

        // repeated string sleep_tokens = 2;
        const uint64_t SLEEP_TOKENS = 0x0000020900000002LL;

        // optional bool sleeping = 3;
        const uint64_t SLEEPING = 0x0000010800000003LL;

        // optional bool shutting_down = 4;
        const uint64_t SHUTTING_DOWN = 0x0000010800000004LL;

        // optional bool test_pss_mode = 5;
        const uint64_t TEST_PSS_MODE = 0x0000010800000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "wakefulness",
            "sleep_tokens",
            "sleeping",
            "shutting_down",
            "test_pss_mode",
        };
        static const uint64_t _FIELD_IDS[5] = {
            WAKEFULNESS,
            SLEEP_TOKENS,
            SLEEPING,
            SHUTTING_DOWN,
            TEST_PSS_MODE,
        };

    } //SleepStatus

    // message Voice
    namespace Voice {
        // optional string session = 1;
        const uint64_t SESSION = 0x0000010900000001LL;

        // optional .android.os.PowerManagerProto.WakeLock wakelock = 2;
        const uint64_t WAKELOCK = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "session",
            "wakelock",
        };
        static const uint64_t _FIELD_IDS[2] = {
            SESSION,
            WAKELOCK,
        };

    } //Voice

    // message DebugApp
    namespace DebugApp {
        // optional string debug_app = 1;
        const uint64_t DEBUG_APP = 0x0000010900000001LL;

        // optional string orig_debug_app = 2;
        const uint64_t ORIG_DEBUG_APP = 0x0000010900000002LL;

        // optional bool debug_transient = 3;
        const uint64_t DEBUG_TRANSIENT = 0x0000010800000003LL;

        // optional bool orig_wait_for_debugger = 4;
        const uint64_t ORIG_WAIT_FOR_DEBUGGER = 0x0000010800000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "debug_app",
            "orig_debug_app",
            "debug_transient",
            "orig_wait_for_debugger",
        };
        static const uint64_t _FIELD_IDS[4] = {
            DEBUG_APP,
            ORIG_DEBUG_APP,
            DEBUG_TRANSIENT,
            ORIG_WAIT_FOR_DEBUGGER,
        };

    } //DebugApp

    // message MemWatchProcess
    namespace MemWatchProcess {
        // message Process
        namespace Process {
            // message MemStats
            namespace MemStats {
                // optional int32 uid = 1;
                const uint64_t UID = 0x0000010500000001LL;

                // optional string size = 2;
                const uint64_t SIZE = 0x0000010900000002LL;

                // optional string report_to = 3;
                const uint64_t REPORT_TO = 0x0000010900000003LL;

                static const int _FIELD_COUNT = 3;
                static const char* _FIELD_NAMES[3] = {
                    "uid",
                    "size",
                    "report_to",
                };
                static const uint64_t _FIELD_IDS[3] = {
                    UID,
                    SIZE,
                    REPORT_TO,
                };

            } //MemStats

            // optional string name = 1;
            const uint64_t NAME = 0x0000010900000001LL;

            // repeated .com.android.server.am.ActivityManagerServiceDumpProcessesProto.MemWatchProcess.Process.MemStats mem_stats = 2;
            const uint64_t MEM_STATS = 0x0000020b00000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "name",
                "mem_stats",
            };
            static const uint64_t _FIELD_IDS[2] = {
                NAME,
                MEM_STATS,
            };

        } //Process

        // message Dump
        namespace Dump {
            // optional string proc_name = 1;
            const uint64_t PROC_NAME = 0x0000010900000001LL;

            // optional int32 pid = 3;
            const uint64_t PID = 0x0000010500000003LL;

            // optional int32 uid = 4;
            const uint64_t UID = 0x0000010500000004LL;

            // optional bool is_user_initiated = 5;
            const uint64_t IS_USER_INITIATED = 0x0000010800000005LL;

            // optional string uri = 6;
            const uint64_t URI = 0x0000010900000006LL;

            static const int _FIELD_COUNT = 5;
            static const char* _FIELD_NAMES[5] = {
                "proc_name",
                "pid",
                "uid",
                "is_user_initiated",
                "uri",
            };
            static const uint64_t _FIELD_IDS[5] = {
                PROC_NAME,
                PID,
                UID,
                IS_USER_INITIATED,
                URI,
            };

        } //Dump

        // repeated .com.android.server.am.ActivityManagerServiceDumpProcessesProto.MemWatchProcess.Process procs = 1;
        const uint64_t PROCS = 0x0000020b00000001LL;

        // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.MemWatchProcess.Dump dump = 2;
        const uint64_t DUMP = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "procs",
            "dump",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PROCS,
            DUMP,
        };

    } //MemWatchProcess

    // message Profile
    namespace Profile {
        // optional string app_name = 1;
        const uint64_t APP_NAME = 0x0000010900000001LL;

        // optional .com.android.server.am.ProcessRecordProto proc = 2;
        const uint64_t PROC = 0x0000010b00000002LL;

        // optional .android.app.ProfilerInfoProto info = 3;
        const uint64_t INFO = 0x0000010b00000003LL;

        // optional int32 type = 4;
        const uint64_t TYPE = 0x0000010500000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "app_name",
            "proc",
            "info",
            "type",
        };
        static const uint64_t _FIELD_IDS[4] = {
            APP_NAME,
            PROC,
            INFO,
            TYPE,
        };

    } //Profile

    // message Controller
    namespace Controller {
        // optional string controller = 1;
        const uint64_t CONTROLLER = 0x0000010900000001LL;

        // optional bool is_a_monkey = 2;
        const uint64_t IS_A_MONKEY = 0x0000010800000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "controller",
            "is_a_monkey",
        };
        static const uint64_t _FIELD_IDS[2] = {
            CONTROLLER,
            IS_A_MONKEY,
        };

    } //Controller

    // repeated .com.android.server.am.ProcessRecordProto procs = 1;
    const uint64_t PROCS = 0x0000020b00000001LL;

    // repeated .com.android.server.am.ProcessRecordProto isolated_procs = 2;
    const uint64_t ISOLATED_PROCS = 0x0000020b00000002LL;

    // repeated .com.android.server.am.ActiveInstrumentationProto active_instrumentations = 3;
    const uint64_t ACTIVE_INSTRUMENTATIONS = 0x0000020b00000003LL;

    // repeated .com.android.server.am.UidRecordProto active_uids = 4;
    const uint64_t ACTIVE_UIDS = 0x0000020b00000004LL;

    // repeated .com.android.server.am.UidRecordProto validate_uids = 5;
    const uint64_t VALIDATE_UIDS = 0x0000020b00000005LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.LruProcesses lru_procs = 6;
    const uint64_t LRU_PROCS = 0x0000010b00000006LL;

    // repeated .com.android.server.am.ProcessRecordProto pids_self_locked = 7;
    const uint64_t PIDS_SELF_LOCKED = 0x0000020b00000007LL;

    // repeated .com.android.server.am.ImportanceTokenProto important_procs = 8;
    const uint64_t IMPORTANT_PROCS = 0x0000020b00000008LL;

    // repeated .com.android.server.am.ProcessRecordProto persistent_starting_procs = 9;
    const uint64_t PERSISTENT_STARTING_PROCS = 0x0000020b00000009LL;

    // repeated .com.android.server.am.ProcessRecordProto removed_procs = 10;
    const uint64_t REMOVED_PROCS = 0x0000020b0000000aLL;

    // repeated .com.android.server.am.ProcessRecordProto on_hold_procs = 11;
    const uint64_t ON_HOLD_PROCS = 0x0000020b0000000bLL;

    // repeated .com.android.server.am.ProcessToGcProto gc_procs = 12;
    const uint64_t GC_PROCS = 0x0000020b0000000cLL;

    // optional .com.android.server.am.AppErrorsProto app_errors = 13;
    const uint64_t APP_ERRORS = 0x0000010b0000000dLL;

    // optional .com.android.server.am.UserControllerProto user_controller = 14;
    const uint64_t USER_CONTROLLER = 0x0000010b0000000eLL;

    // optional .com.android.server.am.ProcessRecordProto home_proc = 15;
    const uint64_t HOME_PROC = 0x0000010b0000000fLL;

    // optional .com.android.server.am.ProcessRecordProto previous_proc = 16;
    const uint64_t PREVIOUS_PROC = 0x0000010b00000010LL;

    // optional int64 previous_proc_visible_time_ms = 17;
    const uint64_t PREVIOUS_PROC_VISIBLE_TIME_MS = 0x0000010300000011LL;

    // optional .com.android.server.am.ProcessRecordProto heavy_weight_proc = 18;
    const uint64_t HEAVY_WEIGHT_PROC = 0x0000010b00000012LL;

    // optional .android.content.ConfigurationProto global_configuration = 19;
    const uint64_t GLOBAL_CONFIGURATION = 0x0000010b00000013LL;

    // optional bool config_will_change = 21;
    const uint64_t CONFIG_WILL_CHANGE = 0x0000010800000015LL;

    // repeated .com.android.server.am.ActivityManagerServiceDumpProcessesProto.ScreenCompatPackage screen_compat_packages = 22;
    const uint64_t SCREEN_COMPAT_PACKAGES = 0x0000020b00000016LL;

    // repeated .com.android.server.am.ActivityManagerServiceDumpProcessesProto.UidObserverRegistrationProto uid_observers = 23;
    const uint64_t UID_OBSERVERS = 0x0000020b00000017LL;

    // repeated int32 device_idle_whitelist = 24;
    const uint64_t DEVICE_IDLE_WHITELIST = 0x0000020500000018LL;

    // repeated int32 device_idle_temp_whitelist = 25;
    const uint64_t DEVICE_IDLE_TEMP_WHITELIST = 0x0000020500000019LL;

    // repeated .com.android.server.am.ActivityManagerServiceDumpProcessesProto.PendingTempWhitelist pending_temp_whitelist = 26;
    const uint64_t PENDING_TEMP_WHITELIST = 0x0000020b0000001aLL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.SleepStatus sleep_status = 27;
    const uint64_t SLEEP_STATUS = 0x0000010b0000001bLL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.Voice running_voice = 28;
    const uint64_t RUNNING_VOICE = 0x0000010b0000001cLL;

    // optional .com.android.server.am.VrControllerProto vr_controller = 29;
    const uint64_t VR_CONTROLLER = 0x0000010b0000001dLL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.DebugApp debug = 30;
    const uint64_t DEBUG = 0x0000010b0000001eLL;

    // optional .com.android.server.am.AppTimeTrackerProto current_tracker = 31;
    const uint64_t CURRENT_TRACKER = 0x0000010b0000001fLL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.MemWatchProcess mem_watch_processes = 32;
    const uint64_t MEM_WATCH_PROCESSES = 0x0000010b00000020LL;

    // optional string track_allocation_app = 33;
    const uint64_t TRACK_ALLOCATION_APP = 0x0000010900000021LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.Profile profile = 34;
    const uint64_t PROFILE = 0x0000010b00000022LL;

    // optional string native_debugging_app = 35;
    const uint64_t NATIVE_DEBUGGING_APP = 0x0000010900000023LL;

    // optional bool always_finish_activities = 36;
    const uint64_t ALWAYS_FINISH_ACTIVITIES = 0x0000010800000024LL;

    // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto.Controller controller = 37;
    const uint64_t CONTROLLER = 0x0000010b00000025LL;

    // optional int32 total_persistent_procs = 38;
    const uint64_t TOTAL_PERSISTENT_PROCS = 0x0000010500000026LL;

    // optional bool processes_ready = 39;
    const uint64_t PROCESSES_READY = 0x0000010800000027LL;

    // optional bool system_ready = 40;
    const uint64_t SYSTEM_READY = 0x0000010800000028LL;

    // optional bool booted = 41;
    const uint64_t BOOTED = 0x0000010800000029LL;

    // optional int32 factory_test = 42;
    const uint64_t FACTORY_TEST = 0x000001050000002aLL;

    // optional bool booting = 43;
    const uint64_t BOOTING = 0x000001080000002bLL;

    // optional bool call_finish_booting = 44;
    const uint64_t CALL_FINISH_BOOTING = 0x000001080000002cLL;

    // optional bool boot_animation_complete = 45;
    const uint64_t BOOT_ANIMATION_COMPLETE = 0x000001080000002dLL;

    // optional int64 last_power_check_uptime_ms = 46;
    const uint64_t LAST_POWER_CHECK_UPTIME_MS = 0x000001030000002eLL;

    // optional .android.os.PowerManagerProto.WakeLock going_to_sleep = 47;
    const uint64_t GOING_TO_SLEEP = 0x0000010b0000002fLL;

    // optional .android.os.PowerManagerProto.WakeLock launching_activity = 48;
    const uint64_t LAUNCHING_ACTIVITY = 0x0000010b00000030LL;

    // optional int32 adj_seq = 49;
    const uint64_t ADJ_SEQ = 0x0000010500000031LL;

    // optional int32 lru_seq = 50;
    const uint64_t LRU_SEQ = 0x0000010500000032LL;

    // optional int32 num_non_cached_procs = 51;
    const uint64_t NUM_NON_CACHED_PROCS = 0x0000010500000033LL;

    // optional int32 num_cached_hidden_procs = 52;
    const uint64_t NUM_CACHED_HIDDEN_PROCS = 0x0000010500000034LL;

    // optional int32 num_service_procs = 53;
    const uint64_t NUM_SERVICE_PROCS = 0x0000010500000035LL;

    // optional int32 new_num_service_procs = 54;
    const uint64_t NEW_NUM_SERVICE_PROCS = 0x0000010500000036LL;

    // optional bool allow_lower_mem_level = 55;
    const uint64_t ALLOW_LOWER_MEM_LEVEL = 0x0000010800000037LL;

    // optional int32 last_memory_level = 56;
    const uint64_t LAST_MEMORY_LEVEL = 0x0000010500000038LL;

    // optional int32 last_num_processes = 57;
    const uint64_t LAST_NUM_PROCESSES = 0x0000010500000039LL;

    // optional .android.util.Duration last_idle_time = 58;
    const uint64_t LAST_IDLE_TIME = 0x0000010b0000003aLL;

    // optional int64 low_ram_since_last_idle_ms = 59;
    const uint64_t LOW_RAM_SINCE_LAST_IDLE_MS = 0x000001030000003bLL;

    static const int _FIELD_COUNT = 58;
    static const char* _FIELD_NAMES[58] = {
        "procs",
        "isolated_procs",
        "active_instrumentations",
        "active_uids",
        "validate_uids",
        "lru_procs",
        "pids_self_locked",
        "important_procs",
        "persistent_starting_procs",
        "removed_procs",
        "on_hold_procs",
        "gc_procs",
        "app_errors",
        "user_controller",
        "home_proc",
        "previous_proc",
        "previous_proc_visible_time_ms",
        "heavy_weight_proc",
        "global_configuration",
        "config_will_change",
        "screen_compat_packages",
        "uid_observers",
        "device_idle_whitelist",
        "device_idle_temp_whitelist",
        "pending_temp_whitelist",
        "sleep_status",
        "running_voice",
        "vr_controller",
        "debug",
        "current_tracker",
        "mem_watch_processes",
        "track_allocation_app",
        "profile",
        "native_debugging_app",
        "always_finish_activities",
        "controller",
        "total_persistent_procs",
        "processes_ready",
        "system_ready",
        "booted",
        "factory_test",
        "booting",
        "call_finish_booting",
        "boot_animation_complete",
        "last_power_check_uptime_ms",
        "going_to_sleep",
        "launching_activity",
        "adj_seq",
        "lru_seq",
        "num_non_cached_procs",
        "num_cached_hidden_procs",
        "num_service_procs",
        "new_num_service_procs",
        "allow_lower_mem_level",
        "last_memory_level",
        "last_num_processes",
        "last_idle_time",
        "low_ram_since_last_idle_ms",
    };
    static const uint64_t _FIELD_IDS[58] = {
        PROCS,
        ISOLATED_PROCS,
        ACTIVE_INSTRUMENTATIONS,
        ACTIVE_UIDS,
        VALIDATE_UIDS,
        LRU_PROCS,
        PIDS_SELF_LOCKED,
        IMPORTANT_PROCS,
        PERSISTENT_STARTING_PROCS,
        REMOVED_PROCS,
        ON_HOLD_PROCS,
        GC_PROCS,
        APP_ERRORS,
        USER_CONTROLLER,
        HOME_PROC,
        PREVIOUS_PROC,
        PREVIOUS_PROC_VISIBLE_TIME_MS,
        HEAVY_WEIGHT_PROC,
        GLOBAL_CONFIGURATION,
        CONFIG_WILL_CHANGE,
        SCREEN_COMPAT_PACKAGES,
        UID_OBSERVERS,
        DEVICE_IDLE_WHITELIST,
        DEVICE_IDLE_TEMP_WHITELIST,
        PENDING_TEMP_WHITELIST,
        SLEEP_STATUS,
        RUNNING_VOICE,
        VR_CONTROLLER,
        DEBUG,
        CURRENT_TRACKER,
        MEM_WATCH_PROCESSES,
        TRACK_ALLOCATION_APP,
        PROFILE,
        NATIVE_DEBUGGING_APP,
        ALWAYS_FINISH_ACTIVITIES,
        CONTROLLER,
        TOTAL_PERSISTENT_PROCS,
        PROCESSES_READY,
        SYSTEM_READY,
        BOOTED,
        FACTORY_TEST,
        BOOTING,
        CALL_FINISH_BOOTING,
        BOOT_ANIMATION_COMPLETE,
        LAST_POWER_CHECK_UPTIME_MS,
        GOING_TO_SLEEP,
        LAUNCHING_ACTIVITY,
        ADJ_SEQ,
        LRU_SEQ,
        NUM_NON_CACHED_PROCS,
        NUM_CACHED_HIDDEN_PROCS,
        NUM_SERVICE_PROCS,
        NEW_NUM_SERVICE_PROCS,
        ALLOW_LOWER_MEM_LEVEL,
        LAST_MEMORY_LEVEL,
        LAST_NUM_PROCESSES,
        LAST_IDLE_TIME,
        LOW_RAM_SINCE_LAST_IDLE_MS,
    };

} //ActivityManagerServiceDumpProcessesProto

// message ActiveInstrumentationProto
namespace ActiveInstrumentationProto {
    // optional .android.content.ComponentNameProto class = 1;
    const uint64_t CLASS = 0x0000010b00000001LL;

    // optional bool finished = 2;
    const uint64_t FINISHED = 0x0000010800000002LL;

    // repeated .com.android.server.am.ProcessRecordProto running_processes = 3;
    const uint64_t RUNNING_PROCESSES = 0x0000020b00000003LL;

    // repeated string target_processes = 4;
    const uint64_t TARGET_PROCESSES = 0x0000020900000004LL;

    // optional .android.content.pm.ApplicationInfoProto target_info = 5;
    const uint64_t TARGET_INFO = 0x0000010b00000005LL;

    // optional string profile_file = 6;
    const uint64_t PROFILE_FILE = 0x0000010900000006LL;

    // optional string watcher = 7;
    const uint64_t WATCHER = 0x0000010900000007LL;

    // optional string ui_automation_connection = 8;
    const uint64_t UI_AUTOMATION_CONNECTION = 0x0000010900000008LL;

    // optional .android.os.BundleProto arguments = 10;
    const uint64_t ARGUMENTS = 0x0000010b0000000aLL;

    static const int _FIELD_COUNT = 9;
    static const char* _FIELD_NAMES[9] = {
        "class",
        "finished",
        "running_processes",
        "target_processes",
        "target_info",
        "profile_file",
        "watcher",
        "ui_automation_connection",
        "arguments",
    };
    static const uint64_t _FIELD_IDS[9] = {
        CLASS,
        FINISHED,
        RUNNING_PROCESSES,
        TARGET_PROCESSES,
        TARGET_INFO,
        PROFILE_FILE,
        WATCHER,
        UI_AUTOMATION_CONNECTION,
        ARGUMENTS,
    };

} //ActiveInstrumentationProto

// message UidRecordProto
namespace UidRecordProto {
    // enum Change
    const int CHANGE_GONE = 0;
    const int CHANGE_IDLE = 1;
    const int CHANGE_ACTIVE = 2;
    const int CHANGE_CACHED = 3;
    const int CHANGE_UNCACHED = 4;
    const int CHANGE_CAPABILITY = 5;
    static const int _ENUM_CHANGE_COUNT = 6;
    static const char* _ENUM_CHANGE_NAMES[6] = {
        "GONE",
        "IDLE",
        "ACTIVE",
        "CACHED",
        "UNCACHED",
        "CAPABILITY",
    };
    static const int _ENUM_CHANGE_VALUES[6] = {
        CHANGE_GONE,
        CHANGE_IDLE,
        CHANGE_ACTIVE,
        CHANGE_CACHED,
        CHANGE_UNCACHED,
        CHANGE_CAPABILITY,
    };

    // message ProcStateSequence
    namespace ProcStateSequence {
        // optional int64 cururent = 1;
        const uint64_t CURURENT = 0x0000010300000001LL;

        // optional int64 last_network_updated = 2;
        const uint64_t LAST_NETWORK_UPDATED = 0x0000010300000002LL;

        // optional int64 last_dispatched = 3;
        const uint64_t LAST_DISPATCHED = 0x0000010300000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "cururent",
            "last_network_updated",
            "last_dispatched",
        };
        static const uint64_t _FIELD_IDS[3] = {
            CURURENT,
            LAST_NETWORK_UPDATED,
            LAST_DISPATCHED,
        };

    } //ProcStateSequence

    // optional int32 uid = 1;
    const uint64_t UID = 0x0000010500000001LL;

    // optional .android.app.ProcessStateEnum current = 2;
    const uint64_t CURRENT = 0x0000010e00000002LL;

    // optional bool ephemeral = 3;
    const uint64_t EPHEMERAL = 0x0000010800000003LL;

    // optional bool fg_services = 4;
    const uint64_t FG_SERVICES = 0x0000010800000004LL;

    // optional bool whilelist = 5;
    const uint64_t WHILELIST = 0x0000010800000005LL;

    // optional .android.util.Duration last_background_time = 6;
    const uint64_t LAST_BACKGROUND_TIME = 0x0000010b00000006LL;

    // optional bool idle = 7;
    const uint64_t IDLE = 0x0000010800000007LL;

    // repeated .com.android.server.am.UidRecordProto.Change last_reported_changes = 8;
    const uint64_t LAST_REPORTED_CHANGES = 0x0000020e00000008LL;

    // optional int32 num_procs = 9;
    const uint64_t NUM_PROCS = 0x0000010500000009LL;

    // optional .com.android.server.am.UidRecordProto.ProcStateSequence network_state_update = 10;
    const uint64_t NETWORK_STATE_UPDATE = 0x0000010b0000000aLL;

    static const int _FIELD_COUNT = 10;
    static const char* _FIELD_NAMES[10] = {
        "uid",
        "current",
        "ephemeral",
        "fg_services",
        "whilelist",
        "last_background_time",
        "idle",
        "last_reported_changes",
        "num_procs",
        "network_state_update",
    };
    static const uint64_t _FIELD_IDS[10] = {
        UID,
        CURRENT,
        EPHEMERAL,
        FG_SERVICES,
        WHILELIST,
        LAST_BACKGROUND_TIME,
        IDLE,
        LAST_REPORTED_CHANGES,
        NUM_PROCS,
        NETWORK_STATE_UPDATE,
    };

} //UidRecordProto

// message ImportanceTokenProto
namespace ImportanceTokenProto {
    // optional int32 pid = 1;
    const uint64_t PID = 0x0000010500000001LL;

    // optional string token = 2;
    const uint64_t TOKEN = 0x0000010900000002LL;

    // optional string reason = 3;
    const uint64_t REASON = 0x0000010900000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "pid",
        "token",
        "reason",
    };
    static const uint64_t _FIELD_IDS[3] = {
        PID,
        TOKEN,
        REASON,
    };

} //ImportanceTokenProto

// message VrControllerProto
namespace VrControllerProto {
    // enum VrMode
    const int FLAG_NON_VR_MODE = 0;
    const int FLAG_VR_MODE = 1;
    const int FLAG_PERSISTENT_VR_MODE = 2;
    static const int _ENUM_VR_MODE_COUNT = 3;
    static const char* _ENUM_VR_MODE_NAMES[3] = {
        "FLAG_NON_VR_MODE",
        "FLAG_VR_MODE",
        "FLAG_PERSISTENT_VR_MODE",
    };
    static const int _ENUM_VR_MODE_VALUES[3] = {
        FLAG_NON_VR_MODE,
        FLAG_VR_MODE,
        FLAG_PERSISTENT_VR_MODE,
    };

    // repeated .com.android.server.am.VrControllerProto.VrMode vr_mode = 1;
    const uint64_t VR_MODE = 0x0000020e00000001LL;

    // optional int32 render_thread_id = 2;
    const uint64_t RENDER_THREAD_ID = 0x0000010500000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "vr_mode",
        "render_thread_id",
    };
    static const uint64_t _FIELD_IDS[2] = {
        VR_MODE,
        RENDER_THREAD_ID,
    };

} //VrControllerProto

// message ProcessOomProto
namespace ProcessOomProto {
    // enum SchedGroup
    const int SCHED_GROUP_UNKNOWN = -1;
    const int SCHED_GROUP_BACKGROUND = 0;
    const int SCHED_GROUP_DEFAULT = 1;
    const int SCHED_GROUP_TOP_APP = 2;
    const int SCHED_GROUP_TOP_APP_BOUND = 3;
    static const int _ENUM_SCHED_GROUP_COUNT = 5;
    static const char* _ENUM_SCHED_GROUP_NAMES[5] = {
        "UNKNOWN",
        "BACKGROUND",
        "DEFAULT",
        "TOP_APP",
        "TOP_APP_BOUND",
    };
    static const int _ENUM_SCHED_GROUP_VALUES[5] = {
        SCHED_GROUP_UNKNOWN,
        SCHED_GROUP_BACKGROUND,
        SCHED_GROUP_DEFAULT,
        SCHED_GROUP_TOP_APP,
        SCHED_GROUP_TOP_APP_BOUND,
    };

    // message Detail
    namespace Detail {
        // message CpuRunTime
        namespace CpuRunTime {
            // optional int64 over_ms = 1;
            const uint64_t OVER_MS = 0x0000010300000001LL;

            // optional int64 used_ms = 2;
            const uint64_t USED_MS = 0x0000010300000002LL;

            // optional float ultilization = 3;
            const uint64_t ULTILIZATION = 0x0000010200000003LL;

            static const int _FIELD_COUNT = 3;
            static const char* _FIELD_NAMES[3] = {
                "over_ms",
                "used_ms",
                "ultilization",
            };
            static const uint64_t _FIELD_IDS[3] = {
                OVER_MS,
                USED_MS,
                ULTILIZATION,
            };

        } //CpuRunTime

        // optional int32 max_adj = 1;
        const uint64_t MAX_ADJ = 0x0000010500000001LL;

        // optional int32 cur_raw_adj = 2;
        const uint64_t CUR_RAW_ADJ = 0x0000010500000002LL;

        // optional int32 set_raw_adj = 3;
        const uint64_t SET_RAW_ADJ = 0x0000010500000003LL;

        // optional int32 cur_adj = 4;
        const uint64_t CUR_ADJ = 0x0000010500000004LL;

        // optional int32 set_adj = 5;
        const uint64_t SET_ADJ = 0x0000010500000005LL;

        // optional .android.app.ProcessStateEnum current_state = 7;
        const uint64_t CURRENT_STATE = 0x0000010e00000007LL;

        // optional .android.app.ProcessStateEnum set_state = 8;
        const uint64_t SET_STATE = 0x0000010e00000008LL;

        // optional string last_pss = 9;
        const uint64_t LAST_PSS = 0x0000010900000009LL;

        // optional string last_swap_pss = 10;
        const uint64_t LAST_SWAP_PSS = 0x000001090000000aLL;

        // optional string last_cached_pss = 11;
        const uint64_t LAST_CACHED_PSS = 0x000001090000000bLL;

        // optional bool cached = 12;
        const uint64_t CACHED = 0x000001080000000cLL;

        // optional bool empty = 13;
        const uint64_t EMPTY = 0x000001080000000dLL;

        // optional bool has_above_client = 14;
        const uint64_t HAS_ABOVE_CLIENT = 0x000001080000000eLL;

        // optional .com.android.server.am.ProcessOomProto.Detail.CpuRunTime service_run_time = 15;
        const uint64_t SERVICE_RUN_TIME = 0x0000010b0000000fLL;

        static const int _FIELD_COUNT = 14;
        static const char* _FIELD_NAMES[14] = {
            "max_adj",
            "cur_raw_adj",
            "set_raw_adj",
            "cur_adj",
            "set_adj",
            "current_state",
            "set_state",
            "last_pss",
            "last_swap_pss",
            "last_cached_pss",
            "cached",
            "empty",
            "has_above_client",
            "service_run_time",
        };
        static const uint64_t _FIELD_IDS[14] = {
            MAX_ADJ,
            CUR_RAW_ADJ,
            SET_RAW_ADJ,
            CUR_ADJ,
            SET_ADJ,
            CURRENT_STATE,
            SET_STATE,
            LAST_PSS,
            LAST_SWAP_PSS,
            LAST_CACHED_PSS,
            CACHED,
            EMPTY,
            HAS_ABOVE_CLIENT,
            SERVICE_RUN_TIME,
        };

    } //Detail

    // optional bool persistent = 1;
    const uint64_t PERSISTENT = 0x0000010800000001LL;

    // optional int32 num = 2;
    const uint64_t NUM = 0x0000010500000002LL;

    // optional string oom_adj = 3;
    const uint64_t OOM_ADJ = 0x0000010900000003LL;

    // optional .com.android.server.am.ProcessOomProto.SchedGroup sched_group = 4;
    const uint64_t SCHED_GROUP = 0x0000010e00000004LL;

    // optional bool activities = 5;
    const uint64_t ACTIVITIES = 0x0000010800000005LL;

    // optional bool services = 6;
    const uint64_t SERVICES = 0x0000010800000006LL;

    // optional .android.app.ProcessStateEnum state = 7;
    const uint64_t STATE = 0x0000010e00000007LL;

    // optional int32 trim_memory_level = 8;
    const uint64_t TRIM_MEMORY_LEVEL = 0x0000010500000008LL;

    // optional .com.android.server.am.ProcessRecordProto proc = 9;
    const uint64_t PROC = 0x0000010b00000009LL;

    // optional string adj_type = 10;
    const uint64_t ADJ_TYPE = 0x000001090000000aLL;

    // optional .android.content.ComponentNameProto adj_target_component_name = 11;
    const uint64_t ADJ_TARGET_COMPONENT_NAME = 0x0000010b0000000bLL;

    // optional string adj_target_object = 12;
    const uint64_t ADJ_TARGET_OBJECT = 0x000001090000000cLL;

    // optional .com.android.server.am.ProcessRecordProto adj_source_proc = 13;
    const uint64_t ADJ_SOURCE_PROC = 0x0000010b0000000dLL;

    // optional string adj_source_object = 14;
    const uint64_t ADJ_SOURCE_OBJECT = 0x000001090000000eLL;

    // optional .com.android.server.am.ProcessOomProto.Detail detail = 15;
    const uint64_t DETAIL = 0x0000010b0000000fLL;

    static const int _FIELD_COUNT = 15;
    static const char* _FIELD_NAMES[15] = {
        "persistent",
        "num",
        "oom_adj",
        "sched_group",
        "activities",
        "services",
        "state",
        "trim_memory_level",
        "proc",
        "adj_type",
        "adj_target_component_name",
        "adj_target_object",
        "adj_source_proc",
        "adj_source_object",
        "detail",
    };
    static const uint64_t _FIELD_IDS[15] = {
        PERSISTENT,
        NUM,
        OOM_ADJ,
        SCHED_GROUP,
        ACTIVITIES,
        SERVICES,
        STATE,
        TRIM_MEMORY_LEVEL,
        PROC,
        ADJ_TYPE,
        ADJ_TARGET_COMPONENT_NAME,
        ADJ_TARGET_OBJECT,
        ADJ_SOURCE_PROC,
        ADJ_SOURCE_OBJECT,
        DETAIL,
    };

} //ProcessOomProto

// message ProcessToGcProto
namespace ProcessToGcProto {
    // optional .com.android.server.am.ProcessRecordProto proc = 1;
    const uint64_t PROC = 0x0000010b00000001LL;

    // optional bool report_low_memory = 2;
    const uint64_t REPORT_LOW_MEMORY = 0x0000010800000002LL;

    // optional int64 now_uptime_ms = 3;
    const uint64_t NOW_UPTIME_MS = 0x0000010300000003LL;

    // optional int64 last_gced_ms = 4;
    const uint64_t LAST_GCED_MS = 0x0000010300000004LL;

    // optional int64 last_low_memory_ms = 5;
    const uint64_t LAST_LOW_MEMORY_MS = 0x0000010300000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "proc",
        "report_low_memory",
        "now_uptime_ms",
        "last_gced_ms",
        "last_low_memory_ms",
    };
    static const uint64_t _FIELD_IDS[5] = {
        PROC,
        REPORT_LOW_MEMORY,
        NOW_UPTIME_MS,
        LAST_GCED_MS,
        LAST_LOW_MEMORY_MS,
    };

} //ProcessToGcProto

// message AppErrorsProto
namespace AppErrorsProto {
    // message ProcessCrashTime
    namespace ProcessCrashTime {
        // message Entry
        namespace Entry {
            // optional int32 uid = 1;
            const uint64_t UID = 0x0000010500000001LL;

            // optional int64 last_crashed_at_ms = 2;
            const uint64_t LAST_CRASHED_AT_MS = 0x0000010300000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "uid",
                "last_crashed_at_ms",
            };
            static const uint64_t _FIELD_IDS[2] = {
                UID,
                LAST_CRASHED_AT_MS,
            };

        } //Entry

        // optional string process_name = 1;
        const uint64_t PROCESS_NAME = 0x0000010900000001LL;

        // repeated .com.android.server.am.AppErrorsProto.ProcessCrashTime.Entry entries = 2;
        const uint64_t ENTRIES = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "process_name",
            "entries",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PROCESS_NAME,
            ENTRIES,
        };

    } //ProcessCrashTime

    // message BadProcess
    namespace BadProcess {
        // message Entry
        namespace Entry {
            // optional int32 uid = 1;
            const uint64_t UID = 0x0000010500000001LL;

            // optional int64 crashed_at_ms = 2;
            const uint64_t CRASHED_AT_MS = 0x0000010300000002LL;

            // optional string short_msg = 3;
            const uint64_t SHORT_MSG = 0x0000010900000003LL;

            // optional string long_msg = 4;
            const uint64_t LONG_MSG = 0x0000010900000004LL;

            // optional string stack = 5;
            const uint64_t STACK = 0x0000010900000005LL;

            static const int _FIELD_COUNT = 5;
            static const char* _FIELD_NAMES[5] = {
                "uid",
                "crashed_at_ms",
                "short_msg",
                "long_msg",
                "stack",
            };
            static const uint64_t _FIELD_IDS[5] = {
                UID,
                CRASHED_AT_MS,
                SHORT_MSG,
                LONG_MSG,
                STACK,
            };

        } //Entry

        // optional string process_name = 1;
        const uint64_t PROCESS_NAME = 0x0000010900000001LL;

        // repeated .com.android.server.am.AppErrorsProto.BadProcess.Entry entries = 2;
        const uint64_t ENTRIES = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "process_name",
            "entries",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PROCESS_NAME,
            ENTRIES,
        };

    } //BadProcess

    // optional int64 now_uptime_ms = 1;
    const uint64_t NOW_UPTIME_MS = 0x0000010300000001LL;

    // repeated .com.android.server.am.AppErrorsProto.ProcessCrashTime process_crash_times = 2;
    const uint64_t PROCESS_CRASH_TIMES = 0x0000020b00000002LL;

    // repeated .com.android.server.am.AppErrorsProto.BadProcess bad_processes = 3;
    const uint64_t BAD_PROCESSES = 0x0000020b00000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "now_uptime_ms",
        "process_crash_times",
        "bad_processes",
    };
    static const uint64_t _FIELD_IDS[3] = {
        NOW_UPTIME_MS,
        PROCESS_CRASH_TIMES,
        BAD_PROCESSES,
    };

} //AppErrorsProto

// message UserStateProto
namespace UserStateProto {
    // enum State
    const int STATE_BOOTING = 0;
    const int STATE_RUNNING_LOCKED = 1;
    const int STATE_RUNNING_UNLOCKING = 2;
    const int STATE_RUNNING_UNLOCKED = 3;
    const int STATE_STOPPING = 4;
    const int STATE_SHUTDOWN = 5;
    static const int _ENUM_STATE_COUNT = 6;
    static const char* _ENUM_STATE_NAMES[6] = {
        "BOOTING",
        "RUNNING_LOCKED",
        "RUNNING_UNLOCKING",
        "RUNNING_UNLOCKED",
        "STOPPING",
        "SHUTDOWN",
    };
    static const int _ENUM_STATE_VALUES[6] = {
        STATE_BOOTING,
        STATE_RUNNING_LOCKED,
        STATE_RUNNING_UNLOCKING,
        STATE_RUNNING_UNLOCKED,
        STATE_STOPPING,
        STATE_SHUTDOWN,
    };

    // optional .com.android.server.am.UserStateProto.State state = 1;
    const uint64_t STATE = 0x0000010e00000001LL;

    // optional bool switching = 2;
    const uint64_t SWITCHING = 0x0000010800000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "state",
        "switching",
    };
    static const uint64_t _FIELD_IDS[2] = {
        STATE,
        SWITCHING,
    };

} //UserStateProto

// message UserControllerProto
namespace UserControllerProto {
    // message User
    namespace User {
        // optional int32 id = 1;
        const uint64_t ID = 0x0000010500000001LL;

        // optional .com.android.server.am.UserStateProto state = 2;
        const uint64_t STATE = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "id",
            "state",
        };
        static const uint64_t _FIELD_IDS[2] = {
            ID,
            STATE,
        };

    } //User

    // message UserProfile
    namespace UserProfile {
        // optional int32 user = 1;
        const uint64_t USER = 0x0000010500000001LL;

        // optional int32 profile = 2;
        const uint64_t PROFILE = 0x0000010500000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "user",
            "profile",
        };
        static const uint64_t _FIELD_IDS[2] = {
            USER,
            PROFILE,
        };

    } //UserProfile

    // repeated .com.android.server.am.UserControllerProto.User started_users = 1;
    const uint64_t STARTED_USERS = 0x0000020b00000001LL;

    // repeated int32 started_user_array = 2;
    const uint64_t STARTED_USER_ARRAY = 0x0000020500000002LL;

    // repeated int32 user_lru = 3;
    const uint64_t USER_LRU = 0x0000020500000003LL;

    // repeated .com.android.server.am.UserControllerProto.UserProfile user_profile_group_ids = 4;
    const uint64_t USER_PROFILE_GROUP_IDS = 0x0000020b00000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "started_users",
        "started_user_array",
        "user_lru",
        "user_profile_group_ids",
    };
    static const uint64_t _FIELD_IDS[4] = {
        STARTED_USERS,
        STARTED_USER_ARRAY,
        USER_LRU,
        USER_PROFILE_GROUP_IDS,
    };

} //UserControllerProto

// message AppTimeTrackerProto
namespace AppTimeTrackerProto {
    // message PackageTime
    namespace PackageTime {
        // optional string package = 1;
        const uint64_t PACKAGE = 0x0000010900000001LL;

        // optional int64 duration_ms = 2;
        const uint64_t DURATION_MS = 0x0000010300000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "package",
            "duration_ms",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PACKAGE,
            DURATION_MS,
        };

    } //PackageTime

    // optional string receiver = 1;
    const uint64_t RECEIVER = 0x0000010900000001LL;

    // optional int64 total_duration_ms = 2;
    const uint64_t TOTAL_DURATION_MS = 0x0000010300000002LL;

    // repeated .com.android.server.am.AppTimeTrackerProto.PackageTime package_times = 3;
    const uint64_t PACKAGE_TIMES = 0x0000020b00000003LL;

    // optional .android.util.Duration started_time = 4;
    const uint64_t STARTED_TIME = 0x0000010b00000004LL;

    // optional string started_package = 5;
    const uint64_t STARTED_PACKAGE = 0x0000010900000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "receiver",
        "total_duration_ms",
        "package_times",
        "started_time",
        "started_package",
    };
    static const uint64_t _FIELD_IDS[5] = {
        RECEIVER,
        TOTAL_DURATION_MS,
        PACKAGE_TIMES,
        STARTED_TIME,
        STARTED_PACKAGE,
    };

} //AppTimeTrackerProto

// message AppsExitInfoProto
namespace AppsExitInfoProto {
    // message Package
    namespace Package {
        // message User
        namespace User {
            // optional int32 uid = 1;
            const uint64_t UID = 0x0000010500000001LL;

            // repeated .android.app.ApplicationExitInfoProto app_exit_info = 2;
            const uint64_t APP_EXIT_INFO = 0x0000020b00000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "uid",
                "app_exit_info",
            };
            static const uint64_t _FIELD_IDS[2] = {
                UID,
                APP_EXIT_INFO,
            };

        } //User

        // optional string package_name = 1;
        const uint64_t PACKAGE_NAME = 0x0000010900000001LL;

        // repeated .com.android.server.am.AppsExitInfoProto.Package.User users = 2;
        const uint64_t USERS = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "package_name",
            "users",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PACKAGE_NAME,
            USERS,
        };

    } //Package

    // optional int64 last_update_timestamp = 1;
    const uint64_t LAST_UPDATE_TIMESTAMP = 0x0000010300000001LL;

    // repeated .com.android.server.am.AppsExitInfoProto.Package packages = 2;
    const uint64_t PACKAGES = 0x0000020b00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "last_update_timestamp",
        "packages",
    };
    static const uint64_t _FIELD_IDS[2] = {
        LAST_UPDATE_TIMESTAMP,
        PACKAGES,
    };

} //AppsExitInfoProto

} // am
} // server
} // android
} // com

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_ACTIVITYMANAGERSERVICE_PROTO_STREAM_H
