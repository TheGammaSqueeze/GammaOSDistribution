// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/server/jobscheduler.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_JOBSCHEDULER_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_JOBSCHEDULER_PROTO_STREAM_H

namespace com {
namespace android {
namespace server {
namespace job {

// message JobSchedulerServiceDumpProto
namespace JobSchedulerServiceDumpProto {
    // message JobRestriction
    namespace JobRestriction {
        // optional .android.app.job.InternalStopReasonEnum reason = 1;
        const uint64_t REASON = 0x0000010e00000001LL;

        // optional bool is_restricting = 2;
        const uint64_t IS_RESTRICTING = 0x0000010800000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "reason",
            "is_restricting",
        };
        static const uint64_t _FIELD_IDS[2] = {
            REASON,
            IS_RESTRICTING,
        };

    } //JobRestriction

    // message RegisteredJob
    namespace RegisteredJob {
        // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
        const uint64_t INFO = 0x0000010b00000001LL;

        // optional .com.android.server.job.JobStatusDumpProto dump = 2;
        const uint64_t DUMP = 0x0000010b00000002LL;

        // optional bool is_job_ready_to_be_executed = 10;
        const uint64_t IS_JOB_READY_TO_BE_EXECUTED = 0x000001080000000aLL;

        // optional bool is_job_ready = 3;
        const uint64_t IS_JOB_READY = 0x0000010800000003LL;

        // optional bool are_users_started = 4;
        const uint64_t ARE_USERS_STARTED = 0x0000010800000004LL;

        // optional bool is_job_restricted = 11;
        const uint64_t IS_JOB_RESTRICTED = 0x000001080000000bLL;

        // optional bool is_job_pending = 5;
        const uint64_t IS_JOB_PENDING = 0x0000010800000005LL;

        // optional bool is_job_currently_active = 6;
        const uint64_t IS_JOB_CURRENTLY_ACTIVE = 0x0000010800000006LL;

        // optional bool is_uid_backing_up = 7;
        const uint64_t IS_UID_BACKING_UP = 0x0000010800000007LL;

        // optional bool is_component_usable = 8;
        const uint64_t IS_COMPONENT_USABLE = 0x0000010800000008LL;

        // repeated .com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction restrictions = 12;
        const uint64_t RESTRICTIONS = 0x0000020b0000000cLL;

        static const int _FIELD_COUNT = 11;
        static const char* _FIELD_NAMES[11] = {
            "info",
            "dump",
            "is_job_ready_to_be_executed",
            "is_job_ready",
            "are_users_started",
            "is_job_restricted",
            "is_job_pending",
            "is_job_currently_active",
            "is_uid_backing_up",
            "is_component_usable",
            "restrictions",
        };
        static const uint64_t _FIELD_IDS[11] = {
            INFO,
            DUMP,
            IS_JOB_READY_TO_BE_EXECUTED,
            IS_JOB_READY,
            ARE_USERS_STARTED,
            IS_JOB_RESTRICTED,
            IS_JOB_PENDING,
            IS_JOB_CURRENTLY_ACTIVE,
            IS_UID_BACKING_UP,
            IS_COMPONENT_USABLE,
            RESTRICTIONS,
        };

    } //RegisteredJob

    // message PriorityOverride
    namespace PriorityOverride {
        // optional int32 uid = 1;
        const uint64_t UID = 0x0000010500000001LL;

        // optional sint32 override_value = 2;
        const uint64_t OVERRIDE_VALUE = 0x0000011100000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "uid",
            "override_value",
        };
        static const uint64_t _FIELD_IDS[2] = {
            UID,
            OVERRIDE_VALUE,
        };

    } //PriorityOverride

    // message PendingJob
    namespace PendingJob {
        // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
        const uint64_t INFO = 0x0000010b00000001LL;

        // optional .com.android.server.job.JobStatusDumpProto dump = 2;
        const uint64_t DUMP = 0x0000010b00000002LL;

        // optional sint32 evaluated_priority = 3;
        const uint64_t EVALUATED_PRIORITY = 0x0000011100000003LL;

        // optional int64 pending_duration_ms = 4;
        const uint64_t PENDING_DURATION_MS = 0x0000010300000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "info",
            "dump",
            "evaluated_priority",
            "pending_duration_ms",
        };
        static const uint64_t _FIELD_IDS[4] = {
            INFO,
            DUMP,
            EVALUATED_PRIORITY,
            PENDING_DURATION_MS,
        };

    } //PendingJob

    // message ActiveJob
    namespace ActiveJob {
        // message InactiveJob
        namespace InactiveJob {
            // optional int64 time_since_stopped_ms = 1;
            const uint64_t TIME_SINCE_STOPPED_MS = 0x0000010300000001LL;

            // optional string stopped_reason = 2;
            const uint64_t STOPPED_REASON = 0x0000010900000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "time_since_stopped_ms",
                "stopped_reason",
            };
            static const uint64_t _FIELD_IDS[2] = {
                TIME_SINCE_STOPPED_MS,
                STOPPED_REASON,
            };

        } //InactiveJob

        // message RunningJob
        namespace RunningJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int64 running_duration_ms = 2;
            const uint64_t RUNNING_DURATION_MS = 0x0000010300000002LL;

            // optional int64 time_until_timeout_ms = 3;
            const uint64_t TIME_UNTIL_TIMEOUT_MS = 0x0000010300000003LL;

            // optional .com.android.server.job.JobStatusDumpProto dump = 4;
            const uint64_t DUMP = 0x0000010b00000004LL;

            // optional sint32 evaluated_priority = 5;
            const uint64_t EVALUATED_PRIORITY = 0x0000011100000005LL;

            // optional int64 time_since_made_active_ms = 6;
            const uint64_t TIME_SINCE_MADE_ACTIVE_MS = 0x0000010300000006LL;

            // optional int64 pending_duration_ms = 7;
            const uint64_t PENDING_DURATION_MS = 0x0000010300000007LL;

            static const int _FIELD_COUNT = 7;
            static const char* _FIELD_NAMES[7] = {
                "info",
                "running_duration_ms",
                "time_until_timeout_ms",
                "dump",
                "evaluated_priority",
                "time_since_made_active_ms",
                "pending_duration_ms",
            };
            static const uint64_t _FIELD_IDS[7] = {
                INFO,
                RUNNING_DURATION_MS,
                TIME_UNTIL_TIMEOUT_MS,
                DUMP,
                EVALUATED_PRIORITY,
                TIME_SINCE_MADE_ACTIVE_MS,
                PENDING_DURATION_MS,
            };

        } //RunningJob

        // optional .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob inactive = 1;
        const uint64_t INACTIVE = 0x0000010b00000001LL;

        // optional .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob running = 2;
        const uint64_t RUNNING = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "inactive",
            "running",
        };
        static const uint64_t _FIELD_IDS[2] = {
            INACTIVE,
            RUNNING,
        };

    } //ActiveJob

    // optional .com.android.server.job.ConstantsProto settings = 1;
    const uint64_t SETTINGS = 0x0000010b00000001LL;

    // optional bool in_thermal = 19;
    const uint64_t IN_THERMAL = 0x0000010800000013LL;

    // repeated int32 started_users = 2;
    const uint64_t STARTED_USERS = 0x0000020500000002LL;

    // repeated .com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob registered_jobs = 3;
    const uint64_t REGISTERED_JOBS = 0x0000020b00000003LL;

    // repeated .com.android.server.job.StateControllerProto controllers = 4;
    const uint64_t CONTROLLERS = 0x0000020b00000004LL;

    // repeated .com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride priority_overrides = 5;
    const uint64_t PRIORITY_OVERRIDES = 0x0000020b00000005LL;

    // repeated int32 backing_up_uids = 6;
    const uint64_t BACKING_UP_UIDS = 0x0000020500000006LL;

    // optional .com.android.server.job.JobPackageHistoryProto history = 7;
    const uint64_t HISTORY = 0x0000010b00000007LL;

    // optional .com.android.server.job.JobPackageTrackerDumpProto package_tracker = 8;
    const uint64_t PACKAGE_TRACKER = 0x0000010b00000008LL;

    // repeated .com.android.server.job.JobSchedulerServiceDumpProto.PendingJob pending_jobs = 9;
    const uint64_t PENDING_JOBS = 0x0000020b00000009LL;

    // repeated .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob active_jobs = 10;
    const uint64_t ACTIVE_JOBS = 0x0000020b0000000aLL;

    // optional bool is_ready_to_rock = 11;
    const uint64_t IS_READY_TO_ROCK = 0x000001080000000bLL;

    // optional bool reported_active = 12;
    const uint64_t REPORTED_ACTIVE = 0x000001080000000cLL;

    // optional int32 max_active_jobs = 13;
    const uint64_t MAX_ACTIVE_JOBS = 0x000001050000000dLL;

    // optional .com.android.server.job.JobConcurrencyManagerProto concurrency_manager = 20;
    const uint64_t CONCURRENCY_MANAGER = 0x0000010b00000014LL;

    // optional .com.android.server.job.JobStorePersistStatsProto persist_stats = 21;
    const uint64_t PERSIST_STATS = 0x0000010b00000015LL;

    // optional .android.util.quota.CountQuotaTrackerProto quota_tracker = 22;
    const uint64_t QUOTA_TRACKER = 0x0000010b00000016LL;

    static const int _FIELD_COUNT = 17;
    static const char* _FIELD_NAMES[17] = {
        "settings",
        "in_thermal",
        "started_users",
        "registered_jobs",
        "controllers",
        "priority_overrides",
        "backing_up_uids",
        "history",
        "package_tracker",
        "pending_jobs",
        "active_jobs",
        "is_ready_to_rock",
        "reported_active",
        "max_active_jobs",
        "concurrency_manager",
        "persist_stats",
        "quota_tracker",
    };
    static const uint64_t _FIELD_IDS[17] = {
        SETTINGS,
        IN_THERMAL,
        STARTED_USERS,
        REGISTERED_JOBS,
        CONTROLLERS,
        PRIORITY_OVERRIDES,
        BACKING_UP_UIDS,
        HISTORY,
        PACKAGE_TRACKER,
        PENDING_JOBS,
        ACTIVE_JOBS,
        IS_READY_TO_ROCK,
        REPORTED_ACTIVE,
        MAX_ACTIVE_JOBS,
        CONCURRENCY_MANAGER,
        PERSIST_STATS,
        QUOTA_TRACKER,
    };

} //JobSchedulerServiceDumpProto

// message ConstantsProto
namespace ConstantsProto {
    // message QuotaController
    namespace QuotaController {
        // optional int64 allowed_time_per_period_ms = 1;
        const uint64_t ALLOWED_TIME_PER_PERIOD_MS = 0x0000010300000001LL;

        // optional int64 in_quota_buffer_ms = 2;
        const uint64_t IN_QUOTA_BUFFER_MS = 0x0000010300000002LL;

        // optional int64 active_window_size_ms = 3;
        const uint64_t ACTIVE_WINDOW_SIZE_MS = 0x0000010300000003LL;

        // optional int64 working_window_size_ms = 4;
        const uint64_t WORKING_WINDOW_SIZE_MS = 0x0000010300000004LL;

        // optional int64 frequent_window_size_ms = 5;
        const uint64_t FREQUENT_WINDOW_SIZE_MS = 0x0000010300000005LL;

        // optional int64 rare_window_size_ms = 6;
        const uint64_t RARE_WINDOW_SIZE_MS = 0x0000010300000006LL;

        // optional int64 restricted_window_size_ms = 20;
        const uint64_t RESTRICTED_WINDOW_SIZE_MS = 0x0000010300000014LL;

        // optional int64 max_execution_time_ms = 7;
        const uint64_t MAX_EXECUTION_TIME_MS = 0x0000010300000007LL;

        // optional int32 max_job_count_active = 8;
        const uint64_t MAX_JOB_COUNT_ACTIVE = 0x0000010500000008LL;

        // optional int32 max_job_count_working = 9;
        const uint64_t MAX_JOB_COUNT_WORKING = 0x0000010500000009LL;

        // optional int32 max_job_count_frequent = 10;
        const uint64_t MAX_JOB_COUNT_FREQUENT = 0x000001050000000aLL;

        // optional int32 max_job_count_rare = 11;
        const uint64_t MAX_JOB_COUNT_RARE = 0x000001050000000bLL;

        // optional int32 max_job_count_restricted = 21;
        const uint64_t MAX_JOB_COUNT_RESTRICTED = 0x0000010500000015LL;

        // optional int32 rate_limiting_window_ms = 19;
        const uint64_t RATE_LIMITING_WINDOW_MS = 0x0000010500000013LL;

        // optional int32 max_job_count_per_rate_limiting_window = 12;
        const uint64_t MAX_JOB_COUNT_PER_RATE_LIMITING_WINDOW = 0x000001050000000cLL;

        // optional int32 max_session_count_active = 13;
        const uint64_t MAX_SESSION_COUNT_ACTIVE = 0x000001050000000dLL;

        // optional int32 max_session_count_working = 14;
        const uint64_t MAX_SESSION_COUNT_WORKING = 0x000001050000000eLL;

        // optional int32 max_session_count_frequent = 15;
        const uint64_t MAX_SESSION_COUNT_FREQUENT = 0x000001050000000fLL;

        // optional int32 max_session_count_rare = 16;
        const uint64_t MAX_SESSION_COUNT_RARE = 0x0000010500000010LL;

        // optional int32 max_session_count_restricted = 22;
        const uint64_t MAX_SESSION_COUNT_RESTRICTED = 0x0000010500000016LL;

        // optional int32 max_session_count_per_rate_limiting_window = 17;
        const uint64_t MAX_SESSION_COUNT_PER_RATE_LIMITING_WINDOW = 0x0000010500000011LL;

        // optional int64 timing_session_coalescing_duration_ms = 18;
        const uint64_t TIMING_SESSION_COALESCING_DURATION_MS = 0x0000010300000012LL;

        // optional int64 min_quota_check_delay_ms = 23;
        const uint64_t MIN_QUOTA_CHECK_DELAY_MS = 0x0000010300000017LL;

        // optional int64 expedited_job_limit_active_ms = 24;
        const uint64_t EXPEDITED_JOB_LIMIT_ACTIVE_MS = 0x0000010300000018LL;

        // optional int64 expedited_job_limit_working_ms = 25;
        const uint64_t EXPEDITED_JOB_LIMIT_WORKING_MS = 0x0000010300000019LL;

        // optional int64 expedited_job_limit_frequent_ms = 26;
        const uint64_t EXPEDITED_JOB_LIMIT_FREQUENT_MS = 0x000001030000001aLL;

        // optional int64 expedited_job_limit_rare_ms = 27;
        const uint64_t EXPEDITED_JOB_LIMIT_RARE_MS = 0x000001030000001bLL;

        // optional int64 expedited_job_limit_restricted_ms = 28;
        const uint64_t EXPEDITED_JOB_LIMIT_RESTRICTED_MS = 0x000001030000001cLL;

        // optional int64 expedited_job_window_size_ms = 29;
        const uint64_t EXPEDITED_JOB_WINDOW_SIZE_MS = 0x000001030000001dLL;

        // optional int64 expedited_job_top_app_time_chunk_size_ms = 30;
        const uint64_t EXPEDITED_JOB_TOP_APP_TIME_CHUNK_SIZE_MS = 0x000001030000001eLL;

        // optional int64 expedited_job_reward_top_app_ms = 31;
        const uint64_t EXPEDITED_JOB_REWARD_TOP_APP_MS = 0x000001030000001fLL;

        // optional int64 expedited_job_reward_interaction_ms = 32;
        const uint64_t EXPEDITED_JOB_REWARD_INTERACTION_MS = 0x0000010300000020LL;

        // optional int64 expedited_job_reward_notification_seen_ms = 33;
        const uint64_t EXPEDITED_JOB_REWARD_NOTIFICATION_SEEN_MS = 0x0000010300000021LL;

        static const int _FIELD_COUNT = 33;
        static const char* _FIELD_NAMES[33] = {
            "allowed_time_per_period_ms",
            "in_quota_buffer_ms",
            "active_window_size_ms",
            "working_window_size_ms",
            "frequent_window_size_ms",
            "rare_window_size_ms",
            "restricted_window_size_ms",
            "max_execution_time_ms",
            "max_job_count_active",
            "max_job_count_working",
            "max_job_count_frequent",
            "max_job_count_rare",
            "max_job_count_restricted",
            "rate_limiting_window_ms",
            "max_job_count_per_rate_limiting_window",
            "max_session_count_active",
            "max_session_count_working",
            "max_session_count_frequent",
            "max_session_count_rare",
            "max_session_count_restricted",
            "max_session_count_per_rate_limiting_window",
            "timing_session_coalescing_duration_ms",
            "min_quota_check_delay_ms",
            "expedited_job_limit_active_ms",
            "expedited_job_limit_working_ms",
            "expedited_job_limit_frequent_ms",
            "expedited_job_limit_rare_ms",
            "expedited_job_limit_restricted_ms",
            "expedited_job_window_size_ms",
            "expedited_job_top_app_time_chunk_size_ms",
            "expedited_job_reward_top_app_ms",
            "expedited_job_reward_interaction_ms",
            "expedited_job_reward_notification_seen_ms",
        };
        static const uint64_t _FIELD_IDS[33] = {
            ALLOWED_TIME_PER_PERIOD_MS,
            IN_QUOTA_BUFFER_MS,
            ACTIVE_WINDOW_SIZE_MS,
            WORKING_WINDOW_SIZE_MS,
            FREQUENT_WINDOW_SIZE_MS,
            RARE_WINDOW_SIZE_MS,
            RESTRICTED_WINDOW_SIZE_MS,
            MAX_EXECUTION_TIME_MS,
            MAX_JOB_COUNT_ACTIVE,
            MAX_JOB_COUNT_WORKING,
            MAX_JOB_COUNT_FREQUENT,
            MAX_JOB_COUNT_RARE,
            MAX_JOB_COUNT_RESTRICTED,
            RATE_LIMITING_WINDOW_MS,
            MAX_JOB_COUNT_PER_RATE_LIMITING_WINDOW,
            MAX_SESSION_COUNT_ACTIVE,
            MAX_SESSION_COUNT_WORKING,
            MAX_SESSION_COUNT_FREQUENT,
            MAX_SESSION_COUNT_RARE,
            MAX_SESSION_COUNT_RESTRICTED,
            MAX_SESSION_COUNT_PER_RATE_LIMITING_WINDOW,
            TIMING_SESSION_COALESCING_DURATION_MS,
            MIN_QUOTA_CHECK_DELAY_MS,
            EXPEDITED_JOB_LIMIT_ACTIVE_MS,
            EXPEDITED_JOB_LIMIT_WORKING_MS,
            EXPEDITED_JOB_LIMIT_FREQUENT_MS,
            EXPEDITED_JOB_LIMIT_RARE_MS,
            EXPEDITED_JOB_LIMIT_RESTRICTED_MS,
            EXPEDITED_JOB_WINDOW_SIZE_MS,
            EXPEDITED_JOB_TOP_APP_TIME_CHUNK_SIZE_MS,
            EXPEDITED_JOB_REWARD_TOP_APP_MS,
            EXPEDITED_JOB_REWARD_INTERACTION_MS,
            EXPEDITED_JOB_REWARD_NOTIFICATION_SEEN_MS,
        };

    } //QuotaController

    // message TimeController
    namespace TimeController {
        static const int _FIELD_COUNT = 0;
        static const char* _FIELD_NAMES[0] = {
        };
        static const uint64_t _FIELD_IDS[0] = {
        };

    } //TimeController

    // optional int32 min_ready_non_active_jobs_count = 29;
    const uint64_t MIN_READY_NON_ACTIVE_JOBS_COUNT = 0x000001050000001dLL;

    // optional int64 max_non_active_job_batch_delay_ms = 30;
    const uint64_t MAX_NON_ACTIVE_JOB_BATCH_DELAY_MS = 0x000001030000001eLL;

    // optional double heavy_use_factor = 8;
    const uint64_t HEAVY_USE_FACTOR = 0x0000010100000008LL;

    // optional double moderate_use_factor = 9;
    const uint64_t MODERATE_USE_FACTOR = 0x0000010100000009LL;

    // optional int32 fg_job_count = 10;
    const uint64_t FG_JOB_COUNT = 0x000001050000000aLL;

    // optional int32 bg_normal_job_count = 11;
    const uint64_t BG_NORMAL_JOB_COUNT = 0x000001050000000bLL;

    // optional int32 bg_moderate_job_count = 12;
    const uint64_t BG_MODERATE_JOB_COUNT = 0x000001050000000cLL;

    // optional int32 bg_low_job_count = 13;
    const uint64_t BG_LOW_JOB_COUNT = 0x000001050000000dLL;

    // optional int32 bg_critical_job_count = 14;
    const uint64_t BG_CRITICAL_JOB_COUNT = 0x000001050000000eLL;

    // optional int64 min_linear_backoff_time_ms = 17;
    const uint64_t MIN_LINEAR_BACKOFF_TIME_MS = 0x0000010300000011LL;

    // optional int64 min_exp_backoff_time_ms = 18;
    const uint64_t MIN_EXP_BACKOFF_TIME_MS = 0x0000010300000012LL;

    // optional double conn_congestion_delay_frac = 21;
    const uint64_t CONN_CONGESTION_DELAY_FRAC = 0x0000010100000015LL;

    // optional double conn_prefetch_relax_frac = 22;
    const uint64_t CONN_PREFETCH_RELAX_FRAC = 0x0000010100000016LL;

    // optional bool enable_api_quotas = 31;
    const uint64_t ENABLE_API_QUOTAS = 0x000001080000001fLL;

    // optional int32 api_quota_schedule_count = 32;
    const uint64_t API_QUOTA_SCHEDULE_COUNT = 0x0000010500000020LL;

    // optional int64 api_quota_schedule_window_ms = 33;
    const uint64_t API_QUOTA_SCHEDULE_WINDOW_MS = 0x0000010300000021LL;

    // optional bool api_quota_schedule_throw_exception = 34;
    const uint64_t API_QUOTA_SCHEDULE_THROW_EXCEPTION = 0x0000010800000022LL;

    // optional bool api_quota_schedule_return_failure_result = 35;
    const uint64_t API_QUOTA_SCHEDULE_RETURN_FAILURE_RESULT = 0x0000010800000023LL;

    // optional .com.android.server.job.ConstantsProto.QuotaController quota_controller = 24;
    const uint64_t QUOTA_CONTROLLER = 0x0000010b00000018LL;

    // optional .com.android.server.job.ConstantsProto.TimeController time_controller = 25;
    const uint64_t TIME_CONTROLLER = 0x0000010b00000019LL;

    // optional .com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto max_job_counts_screen_on = 26;
    const uint64_t MAX_JOB_COUNTS_SCREEN_ON = 0x0000010b0000001aLL;

    // optional .com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto max_job_counts_screen_off = 27;
    const uint64_t MAX_JOB_COUNTS_SCREEN_OFF = 0x0000010b0000001bLL;

    // optional int32 screen_off_job_concurrency_increase_delay_ms = 28;
    const uint64_t SCREEN_OFF_JOB_CONCURRENCY_INCREASE_DELAY_MS = 0x000001050000001cLL;

    static const int _FIELD_COUNT = 23;
    static const char* _FIELD_NAMES[23] = {
        "min_ready_non_active_jobs_count",
        "max_non_active_job_batch_delay_ms",
        "heavy_use_factor",
        "moderate_use_factor",
        "fg_job_count",
        "bg_normal_job_count",
        "bg_moderate_job_count",
        "bg_low_job_count",
        "bg_critical_job_count",
        "min_linear_backoff_time_ms",
        "min_exp_backoff_time_ms",
        "conn_congestion_delay_frac",
        "conn_prefetch_relax_frac",
        "enable_api_quotas",
        "api_quota_schedule_count",
        "api_quota_schedule_window_ms",
        "api_quota_schedule_throw_exception",
        "api_quota_schedule_return_failure_result",
        "quota_controller",
        "time_controller",
        "max_job_counts_screen_on",
        "max_job_counts_screen_off",
        "screen_off_job_concurrency_increase_delay_ms",
    };
    static const uint64_t _FIELD_IDS[23] = {
        MIN_READY_NON_ACTIVE_JOBS_COUNT,
        MAX_NON_ACTIVE_JOB_BATCH_DELAY_MS,
        HEAVY_USE_FACTOR,
        MODERATE_USE_FACTOR,
        FG_JOB_COUNT,
        BG_NORMAL_JOB_COUNT,
        BG_MODERATE_JOB_COUNT,
        BG_LOW_JOB_COUNT,
        BG_CRITICAL_JOB_COUNT,
        MIN_LINEAR_BACKOFF_TIME_MS,
        MIN_EXP_BACKOFF_TIME_MS,
        CONN_CONGESTION_DELAY_FRAC,
        CONN_PREFETCH_RELAX_FRAC,
        ENABLE_API_QUOTAS,
        API_QUOTA_SCHEDULE_COUNT,
        API_QUOTA_SCHEDULE_WINDOW_MS,
        API_QUOTA_SCHEDULE_THROW_EXCEPTION,
        API_QUOTA_SCHEDULE_RETURN_FAILURE_RESULT,
        QUOTA_CONTROLLER,
        TIME_CONTROLLER,
        MAX_JOB_COUNTS_SCREEN_ON,
        MAX_JOB_COUNTS_SCREEN_OFF,
        SCREEN_OFF_JOB_CONCURRENCY_INCREASE_DELAY_MS,
    };

} //ConstantsProto

// message MaxJobCountsProto
namespace MaxJobCountsProto {
    // optional int32 total_jobs = 1;
    const uint64_t TOTAL_JOBS = 0x0000010500000001LL;

    // optional int32 max_bg = 2;
    const uint64_t MAX_BG = 0x0000010500000002LL;

    // optional int32 min_bg = 3;
    const uint64_t MIN_BG = 0x0000010500000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "total_jobs",
        "max_bg",
        "min_bg",
    };
    static const uint64_t _FIELD_IDS[3] = {
        TOTAL_JOBS,
        MAX_BG,
        MIN_BG,
    };

} //MaxJobCountsProto

// message MaxJobCountsPerMemoryTrimLevelProto
namespace MaxJobCountsPerMemoryTrimLevelProto {
    // optional .com.android.server.job.MaxJobCountsProto normal = 1;
    const uint64_t NORMAL = 0x0000010b00000001LL;

    // optional .com.android.server.job.MaxJobCountsProto moderate = 2;
    const uint64_t MODERATE = 0x0000010b00000002LL;

    // optional .com.android.server.job.MaxJobCountsProto low = 3;
    const uint64_t LOW = 0x0000010b00000003LL;

    // optional .com.android.server.job.MaxJobCountsProto critical = 4;
    const uint64_t CRITICAL = 0x0000010b00000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "normal",
        "moderate",
        "low",
        "critical",
    };
    static const uint64_t _FIELD_IDS[4] = {
        NORMAL,
        MODERATE,
        LOW,
        CRITICAL,
    };

} //MaxJobCountsPerMemoryTrimLevelProto

// message StateControllerProto
namespace StateControllerProto {
    // message BackgroundJobsController
    namespace BackgroundJobsController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            // optional string source_package_name = 3;
            const uint64_t SOURCE_PACKAGE_NAME = 0x0000010900000003LL;

            // optional bool is_in_foreground = 4;
            const uint64_t IS_IN_FOREGROUND = 0x0000010800000004LL;

            // optional bool is_whitelisted = 5;
            const uint64_t IS_WHITELISTED = 0x0000010800000005LL;

            // optional bool can_run_any_in_background = 6;
            const uint64_t CAN_RUN_ANY_IN_BACKGROUND = 0x0000010800000006LL;

            // optional bool are_constraints_satisfied = 7;
            const uint64_t ARE_CONSTRAINTS_SATISFIED = 0x0000010800000007LL;

            static const int _FIELD_COUNT = 7;
            static const char* _FIELD_NAMES[7] = {
                "info",
                "source_uid",
                "source_package_name",
                "is_in_foreground",
                "is_whitelisted",
                "can_run_any_in_background",
                "are_constraints_satisfied",
            };
            static const uint64_t _FIELD_IDS[7] = {
                INFO,
                SOURCE_UID,
                SOURCE_PACKAGE_NAME,
                IS_IN_FOREGROUND,
                IS_WHITELISTED,
                CAN_RUN_ANY_IN_BACKGROUND,
                ARE_CONSTRAINTS_SATISFIED,
            };

        } //TrackedJob

        // optional .com.android.server.AppStateTrackerProto app_state_tracker = 1;
        const uint64_t APP_STATE_TRACKER = 0x0000010b00000001LL;

        // repeated .com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob tracked_jobs = 2;
        const uint64_t TRACKED_JOBS = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "app_state_tracker",
            "tracked_jobs",
        };
        static const uint64_t _FIELD_IDS[2] = {
            APP_STATE_TRACKER,
            TRACKED_JOBS,
        };

    } //BackgroundJobsController

    // message BatteryController
    namespace BatteryController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "info",
                "source_uid",
            };
            static const uint64_t _FIELD_IDS[2] = {
                INFO,
                SOURCE_UID,
            };

        } //TrackedJob

        // optional bool is_on_stable_power = 1;
        const uint64_t IS_ON_STABLE_POWER = 0x0000010800000001LL;

        // optional bool is_battery_not_low = 2;
        const uint64_t IS_BATTERY_NOT_LOW = 0x0000010800000002LL;

        // optional bool is_monitoring = 3;
        const uint64_t IS_MONITORING = 0x0000010800000003LL;

        // optional int32 last_broadcast_sequence_number = 4;
        const uint64_t LAST_BROADCAST_SEQUENCE_NUMBER = 0x0000010500000004LL;

        // repeated .com.android.server.job.StateControllerProto.BatteryController.TrackedJob tracked_jobs = 5;
        const uint64_t TRACKED_JOBS = 0x0000020b00000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "is_on_stable_power",
            "is_battery_not_low",
            "is_monitoring",
            "last_broadcast_sequence_number",
            "tracked_jobs",
        };
        static const uint64_t _FIELD_IDS[5] = {
            IS_ON_STABLE_POWER,
            IS_BATTERY_NOT_LOW,
            IS_MONITORING,
            LAST_BROADCAST_SEQUENCE_NUMBER,
            TRACKED_JOBS,
        };

    } //BatteryController

    // message ConnectivityController
    namespace ConnectivityController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            // optional .android.net.NetworkRequestProto required_network = 3;
            const uint64_t REQUIRED_NETWORK = 0x0000010b00000003LL;

            static const int _FIELD_COUNT = 3;
            static const char* _FIELD_NAMES[3] = {
                "info",
                "source_uid",
                "required_network",
            };
            static const uint64_t _FIELD_IDS[3] = {
                INFO,
                SOURCE_UID,
                REQUIRED_NETWORK,
            };

        } //TrackedJob

        // repeated .com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob tracked_jobs = 2;
        const uint64_t TRACKED_JOBS = 0x0000020b00000002LL;

        // repeated int32 requested_standby_exception_uids = 3;
        const uint64_t REQUESTED_STANDBY_EXCEPTION_UIDS = 0x0000020500000003LL;

        // repeated .android.net.NetworkProto available_networks = 4;
        const uint64_t AVAILABLE_NETWORKS = 0x0000020b00000004LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "tracked_jobs",
            "requested_standby_exception_uids",
            "available_networks",
        };
        static const uint64_t _FIELD_IDS[3] = {
            TRACKED_JOBS,
            REQUESTED_STANDBY_EXCEPTION_UIDS,
            AVAILABLE_NETWORKS,
        };

    } //ConnectivityController

    // message ContentObserverController
    namespace ContentObserverController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "info",
                "source_uid",
            };
            static const uint64_t _FIELD_IDS[2] = {
                INFO,
                SOURCE_UID,
            };

        } //TrackedJob

        // message Observer
        namespace Observer {
            // message TriggerContentData
            namespace TriggerContentData {
                // message JobInstance
                namespace JobInstance {
                    // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
                    const uint64_t INFO = 0x0000010b00000001LL;

                    // optional int32 source_uid = 2;
                    const uint64_t SOURCE_UID = 0x0000010500000002LL;

                    // optional int64 trigger_content_update_delay_ms = 3;
                    const uint64_t TRIGGER_CONTENT_UPDATE_DELAY_MS = 0x0000010300000003LL;

                    // optional int64 trigger_content_max_delay_ms = 4;
                    const uint64_t TRIGGER_CONTENT_MAX_DELAY_MS = 0x0000010300000004LL;

                    // repeated string changed_authorities = 5;
                    const uint64_t CHANGED_AUTHORITIES = 0x0000020900000005LL;

                    // repeated string changed_uris = 6;
                    const uint64_t CHANGED_URIS = 0x0000020900000006LL;

                    static const int _FIELD_COUNT = 6;
                    static const char* _FIELD_NAMES[6] = {
                        "info",
                        "source_uid",
                        "trigger_content_update_delay_ms",
                        "trigger_content_max_delay_ms",
                        "changed_authorities",
                        "changed_uris",
                    };
                    static const uint64_t _FIELD_IDS[6] = {
                        INFO,
                        SOURCE_UID,
                        TRIGGER_CONTENT_UPDATE_DELAY_MS,
                        TRIGGER_CONTENT_MAX_DELAY_MS,
                        CHANGED_AUTHORITIES,
                        CHANGED_URIS,
                    };

                } //JobInstance

                // optional string uri = 1;
                const uint64_t URI = 0x0000010900000001LL;

                // optional int32 flags = 2;
                const uint64_t FLAGS = 0x0000010500000002LL;

                // repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance jobs = 3;
                const uint64_t JOBS = 0x0000020b00000003LL;

                static const int _FIELD_COUNT = 3;
                static const char* _FIELD_NAMES[3] = {
                    "uri",
                    "flags",
                    "jobs",
                };
                static const uint64_t _FIELD_IDS[3] = {
                    URI,
                    FLAGS,
                    JOBS,
                };

            } //TriggerContentData

            // optional int32 user_id = 1;
            const uint64_t USER_ID = 0x0000010500000001LL;

            // repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData triggers = 2;
            const uint64_t TRIGGERS = 0x0000020b00000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "user_id",
                "triggers",
            };
            static const uint64_t _FIELD_IDS[2] = {
                USER_ID,
                TRIGGERS,
            };

        } //Observer

        // repeated .com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob tracked_jobs = 1;
        const uint64_t TRACKED_JOBS = 0x0000020b00000001LL;

        // repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer observers = 2;
        const uint64_t OBSERVERS = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "tracked_jobs",
            "observers",
        };
        static const uint64_t _FIELD_IDS[2] = {
            TRACKED_JOBS,
            OBSERVERS,
        };

    } //ContentObserverController

    // message DeviceIdleJobsController
    namespace DeviceIdleJobsController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            // optional string source_package_name = 3;
            const uint64_t SOURCE_PACKAGE_NAME = 0x0000010900000003LL;

            // optional bool are_constraints_satisfied = 4;
            const uint64_t ARE_CONSTRAINTS_SATISFIED = 0x0000010800000004LL;

            // optional bool is_doze_whitelisted = 5;
            const uint64_t IS_DOZE_WHITELISTED = 0x0000010800000005LL;

            // optional bool is_allowed_in_doze = 6;
            const uint64_t IS_ALLOWED_IN_DOZE = 0x0000010800000006LL;

            static const int _FIELD_COUNT = 6;
            static const char* _FIELD_NAMES[6] = {
                "info",
                "source_uid",
                "source_package_name",
                "are_constraints_satisfied",
                "is_doze_whitelisted",
                "is_allowed_in_doze",
            };
            static const uint64_t _FIELD_IDS[6] = {
                INFO,
                SOURCE_UID,
                SOURCE_PACKAGE_NAME,
                ARE_CONSTRAINTS_SATISFIED,
                IS_DOZE_WHITELISTED,
                IS_ALLOWED_IN_DOZE,
            };

        } //TrackedJob

        // optional bool is_device_idle_mode = 1;
        const uint64_t IS_DEVICE_IDLE_MODE = 0x0000010800000001LL;

        // repeated .com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob tracked_jobs = 2;
        const uint64_t TRACKED_JOBS = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "is_device_idle_mode",
            "tracked_jobs",
        };
        static const uint64_t _FIELD_IDS[2] = {
            IS_DEVICE_IDLE_MODE,
            TRACKED_JOBS,
        };

    } //DeviceIdleJobsController

    // message IdleController
    namespace IdleController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "info",
                "source_uid",
            };
            static const uint64_t _FIELD_IDS[2] = {
                INFO,
                SOURCE_UID,
            };

        } //TrackedJob

        // message IdlenessTracker
        namespace IdlenessTracker {
            // message CarIdlenessTracker
            namespace CarIdlenessTracker {
                // optional bool is_idle = 1;
                const uint64_t IS_IDLE = 0x0000010800000001LL;

                // optional bool is_garage_mode_on = 2;
                const uint64_t IS_GARAGE_MODE_ON = 0x0000010800000002LL;

                static const int _FIELD_COUNT = 2;
                static const char* _FIELD_NAMES[2] = {
                    "is_idle",
                    "is_garage_mode_on",
                };
                static const uint64_t _FIELD_IDS[2] = {
                    IS_IDLE,
                    IS_GARAGE_MODE_ON,
                };

            } //CarIdlenessTracker

            // message DeviceIdlenessTracker
            namespace DeviceIdlenessTracker {
                // optional bool is_idle = 1;
                const uint64_t IS_IDLE = 0x0000010800000001LL;

                // optional bool is_screen_on = 2;
                const uint64_t IS_SCREEN_ON = 0x0000010800000002LL;

                // optional bool is_dock_idle = 3;
                const uint64_t IS_DOCK_IDLE = 0x0000010800000003LL;

                // optional bool projection_active = 5;
                const uint64_t PROJECTION_ACTIVE = 0x0000010800000005LL;

                static const int _FIELD_COUNT = 4;
                static const char* _FIELD_NAMES[4] = {
                    "is_idle",
                    "is_screen_on",
                    "is_dock_idle",
                    "projection_active",
                };
                static const uint64_t _FIELD_IDS[4] = {
                    IS_IDLE,
                    IS_SCREEN_ON,
                    IS_DOCK_IDLE,
                    PROJECTION_ACTIVE,
                };

            } //DeviceIdlenessTracker

            // optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker device_idleness_tracker = 1;
            const uint64_t DEVICE_IDLENESS_TRACKER = 0x0000010b00000001LL;

            // optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker car_idleness_tracker = 2;
            const uint64_t CAR_IDLENESS_TRACKER = 0x0000010b00000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "device_idleness_tracker",
                "car_idleness_tracker",
            };
            static const uint64_t _FIELD_IDS[2] = {
                DEVICE_IDLENESS_TRACKER,
                CAR_IDLENESS_TRACKER,
            };

        } //IdlenessTracker

        // optional bool is_idle = 1;
        const uint64_t IS_IDLE = 0x0000010800000001LL;

        // repeated .com.android.server.job.StateControllerProto.IdleController.TrackedJob tracked_jobs = 2;
        const uint64_t TRACKED_JOBS = 0x0000020b00000002LL;

        // optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker idleness_tracker = 3;
        const uint64_t IDLENESS_TRACKER = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "is_idle",
            "tracked_jobs",
            "idleness_tracker",
        };
        static const uint64_t _FIELD_IDS[3] = {
            IS_IDLE,
            TRACKED_JOBS,
            IDLENESS_TRACKER,
        };

    } //IdleController

    // message QuotaController
    namespace QuotaController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            // optional .com.android.server.job.JobStatusDumpProto.Bucket effective_standby_bucket = 3;
            const uint64_t EFFECTIVE_STANDBY_BUCKET = 0x0000010e00000003LL;

            // optional bool is_top_started_job = 4;
            const uint64_t IS_TOP_STARTED_JOB = 0x0000010800000004LL;

            // optional bool has_quota = 5;
            const uint64_t HAS_QUOTA = 0x0000010800000005LL;

            // optional int64 remaining_quota_ms = 6;
            const uint64_t REMAINING_QUOTA_MS = 0x0000010300000006LL;

            // optional bool is_requested_foreground_job = 7;
            const uint64_t IS_REQUESTED_FOREGROUND_JOB = 0x0000010800000007LL;

            // optional bool is_within_fg_job_quota = 8;
            const uint64_t IS_WITHIN_FG_JOB_QUOTA = 0x0000010800000008LL;

            static const int _FIELD_COUNT = 8;
            static const char* _FIELD_NAMES[8] = {
                "info",
                "source_uid",
                "effective_standby_bucket",
                "is_top_started_job",
                "has_quota",
                "remaining_quota_ms",
                "is_requested_foreground_job",
                "is_within_fg_job_quota",
            };
            static const uint64_t _FIELD_IDS[8] = {
                INFO,
                SOURCE_UID,
                EFFECTIVE_STANDBY_BUCKET,
                IS_TOP_STARTED_JOB,
                HAS_QUOTA,
                REMAINING_QUOTA_MS,
                IS_REQUESTED_FOREGROUND_JOB,
                IS_WITHIN_FG_JOB_QUOTA,
            };

        } //TrackedJob

        // message AlarmListener
        namespace AlarmListener {
            // optional bool is_waiting = 1;
            const uint64_t IS_WAITING = 0x0000010800000001LL;

            // optional int64 trigger_time_elapsed = 2;
            const uint64_t TRIGGER_TIME_ELAPSED = 0x0000010300000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "is_waiting",
                "trigger_time_elapsed",
            };
            static const uint64_t _FIELD_IDS[2] = {
                IS_WAITING,
                TRIGGER_TIME_ELAPSED,
            };

        } //AlarmListener

        // message ExecutionStats
        namespace ExecutionStats {
            // optional .com.android.server.job.JobStatusDumpProto.Bucket standby_bucket = 1;
            const uint64_t STANDBY_BUCKET = 0x0000010e00000001LL;

            // optional int64 expiration_time_elapsed = 2;
            const uint64_t EXPIRATION_TIME_ELAPSED = 0x0000010300000002LL;

            // optional int64 window_size_ms = 3;
            const uint64_t WINDOW_SIZE_MS = 0x0000010300000003LL;

            // optional int32 job_count_limit = 14;
            const uint64_t JOB_COUNT_LIMIT = 0x000001050000000eLL;

            // optional int32 session_count_limit = 15;
            const uint64_t SESSION_COUNT_LIMIT = 0x000001050000000fLL;

            // optional int64 execution_time_in_window_ms = 4;
            const uint64_t EXECUTION_TIME_IN_WINDOW_MS = 0x0000010300000004LL;

            // optional int32 bg_job_count_in_window = 5;
            const uint64_t BG_JOB_COUNT_IN_WINDOW = 0x0000010500000005LL;

            // optional int64 execution_time_in_max_period_ms = 6;
            const uint64_t EXECUTION_TIME_IN_MAX_PERIOD_MS = 0x0000010300000006LL;

            // optional int32 bg_job_count_in_max_period = 7;
            const uint64_t BG_JOB_COUNT_IN_MAX_PERIOD = 0x0000010500000007LL;

            // optional int32 session_count_in_window = 11;
            const uint64_t SESSION_COUNT_IN_WINDOW = 0x000001050000000bLL;

            // optional int64 in_quota_time_elapsed = 8;
            const uint64_t IN_QUOTA_TIME_ELAPSED = 0x0000010300000008LL;

            // optional int64 job_count_expiration_time_elapsed = 9;
            const uint64_t JOB_COUNT_EXPIRATION_TIME_ELAPSED = 0x0000010300000009LL;

            // optional int32 job_count_in_rate_limiting_window = 10;
            const uint64_t JOB_COUNT_IN_RATE_LIMITING_WINDOW = 0x000001050000000aLL;

            // optional int64 session_count_expiration_time_elapsed = 12;
            const uint64_t SESSION_COUNT_EXPIRATION_TIME_ELAPSED = 0x000001030000000cLL;

            // optional int32 session_count_in_rate_limiting_window = 13;
            const uint64_t SESSION_COUNT_IN_RATE_LIMITING_WINDOW = 0x000001050000000dLL;

            static const int _FIELD_COUNT = 15;
            static const char* _FIELD_NAMES[15] = {
                "standby_bucket",
                "expiration_time_elapsed",
                "window_size_ms",
                "job_count_limit",
                "session_count_limit",
                "execution_time_in_window_ms",
                "bg_job_count_in_window",
                "execution_time_in_max_period_ms",
                "bg_job_count_in_max_period",
                "session_count_in_window",
                "in_quota_time_elapsed",
                "job_count_expiration_time_elapsed",
                "job_count_in_rate_limiting_window",
                "session_count_expiration_time_elapsed",
                "session_count_in_rate_limiting_window",
            };
            static const uint64_t _FIELD_IDS[15] = {
                STANDBY_BUCKET,
                EXPIRATION_TIME_ELAPSED,
                WINDOW_SIZE_MS,
                JOB_COUNT_LIMIT,
                SESSION_COUNT_LIMIT,
                EXECUTION_TIME_IN_WINDOW_MS,
                BG_JOB_COUNT_IN_WINDOW,
                EXECUTION_TIME_IN_MAX_PERIOD_MS,
                BG_JOB_COUNT_IN_MAX_PERIOD,
                SESSION_COUNT_IN_WINDOW,
                IN_QUOTA_TIME_ELAPSED,
                JOB_COUNT_EXPIRATION_TIME_ELAPSED,
                JOB_COUNT_IN_RATE_LIMITING_WINDOW,
                SESSION_COUNT_EXPIRATION_TIME_ELAPSED,
                SESSION_COUNT_IN_RATE_LIMITING_WINDOW,
            };

        } //ExecutionStats

        // message Package
        namespace Package {
            // optional int32 user_id = 1;
            const uint64_t USER_ID = 0x0000010500000001LL;

            // optional string name = 2;
            const uint64_t NAME = 0x0000010900000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "user_id",
                "name",
            };
            static const uint64_t _FIELD_IDS[2] = {
                USER_ID,
                NAME,
            };

        } //Package

        // message TimingSession
        namespace TimingSession {
            // optional int64 start_time_elapsed = 1;
            const uint64_t START_TIME_ELAPSED = 0x0000010300000001LL;

            // optional int64 end_time_elapsed = 2;
            const uint64_t END_TIME_ELAPSED = 0x0000010300000002LL;

            // optional int32 bg_job_count = 3;
            const uint64_t BG_JOB_COUNT = 0x0000010500000003LL;

            static const int _FIELD_COUNT = 3;
            static const char* _FIELD_NAMES[3] = {
                "start_time_elapsed",
                "end_time_elapsed",
                "bg_job_count",
            };
            static const uint64_t _FIELD_IDS[3] = {
                START_TIME_ELAPSED,
                END_TIME_ELAPSED,
                BG_JOB_COUNT,
            };

        } //TimingSession

        // message Timer
        namespace Timer {
            // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
            const uint64_t PKG = 0x0000010b00000001LL;

            // optional bool is_active = 2;
            const uint64_t IS_ACTIVE = 0x0000010800000002LL;

            // optional int64 start_time_elapsed = 3;
            const uint64_t START_TIME_ELAPSED = 0x0000010300000003LL;

            // optional int32 bg_job_count = 4;
            const uint64_t BG_JOB_COUNT = 0x0000010500000004LL;

            // repeated .com.android.server.job.JobStatusShortInfoProto running_jobs = 5;
            const uint64_t RUNNING_JOBS = 0x0000020b00000005LL;

            static const int _FIELD_COUNT = 5;
            static const char* _FIELD_NAMES[5] = {
                "pkg",
                "is_active",
                "start_time_elapsed",
                "bg_job_count",
                "running_jobs",
            };
            static const uint64_t _FIELD_IDS[5] = {
                PKG,
                IS_ACTIVE,
                START_TIME_ELAPSED,
                BG_JOB_COUNT,
                RUNNING_JOBS,
            };

        } //Timer

        // message TopAppTimer
        namespace TopAppTimer {
            // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
            const uint64_t PKG = 0x0000010b00000001LL;

            // optional bool is_active = 2;
            const uint64_t IS_ACTIVE = 0x0000010800000002LL;

            // optional int64 start_time_elapsed = 3;
            const uint64_t START_TIME_ELAPSED = 0x0000010300000003LL;

            // optional int32 activity_count = 4;
            const uint64_t ACTIVITY_COUNT = 0x0000010500000004LL;

            static const int _FIELD_COUNT = 4;
            static const char* _FIELD_NAMES[4] = {
                "pkg",
                "is_active",
                "start_time_elapsed",
                "activity_count",
            };
            static const uint64_t _FIELD_IDS[4] = {
                PKG,
                IS_ACTIVE,
                START_TIME_ELAPSED,
                ACTIVITY_COUNT,
            };

        } //TopAppTimer

        // message PackageStats
        namespace PackageStats {
            // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
            const uint64_t PKG = 0x0000010b00000001LL;

            // optional .com.android.server.job.StateControllerProto.QuotaController.Timer timer = 2;
            const uint64_t TIMER = 0x0000010b00000002LL;

            // repeated .com.android.server.job.StateControllerProto.QuotaController.TimingSession saved_sessions = 3;
            const uint64_t SAVED_SESSIONS = 0x0000020b00000003LL;

            // repeated .com.android.server.job.StateControllerProto.QuotaController.ExecutionStats execution_stats = 4;
            const uint64_t EXECUTION_STATS = 0x0000020b00000004LL;

            // optional .com.android.server.job.StateControllerProto.QuotaController.Timer fg_job_timer = 6;
            const uint64_t FG_JOB_TIMER = 0x0000010b00000006LL;

            static const int _FIELD_COUNT = 5;
            static const char* _FIELD_NAMES[5] = {
                "pkg",
                "timer",
                "saved_sessions",
                "execution_stats",
                "fg_job_timer",
            };
            static const uint64_t _FIELD_IDS[5] = {
                PKG,
                TIMER,
                SAVED_SESSIONS,
                EXECUTION_STATS,
                FG_JOB_TIMER,
            };

        } //PackageStats

        // message UidPackageMapping
        namespace UidPackageMapping {
            // optional int32 uid = 1;
            const uint64_t UID = 0x0000010500000001LL;

            // repeated string package_names = 2;
            const uint64_t PACKAGE_NAMES = 0x0000020900000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "uid",
                "package_names",
            };
            static const uint64_t _FIELD_IDS[2] = {
                UID,
                PACKAGE_NAMES,
            };

        } //UidPackageMapping

        // message InQuotaAlarmListener
        namespace InQuotaAlarmListener {
            // message Alarm
            namespace Alarm {
                // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
                const uint64_t PKG = 0x0000010b00000001LL;

                // optional int64 in_quota_time_elapsed = 2;
                const uint64_t IN_QUOTA_TIME_ELAPSED = 0x0000010300000002LL;

                static const int _FIELD_COUNT = 2;
                static const char* _FIELD_NAMES[2] = {
                    "pkg",
                    "in_quota_time_elapsed",
                };
                static const uint64_t _FIELD_IDS[2] = {
                    PKG,
                    IN_QUOTA_TIME_ELAPSED,
                };

            } //Alarm

            // optional int64 trigger_time_elapsed = 1;
            const uint64_t TRIGGER_TIME_ELAPSED = 0x0000010300000001LL;

            // repeated .com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm alarms = 2;
            const uint64_t ALARMS = 0x0000020b00000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "trigger_time_elapsed",
                "alarms",
            };
            static const uint64_t _FIELD_IDS[2] = {
                TRIGGER_TIME_ELAPSED,
                ALARMS,
            };

        } //InQuotaAlarmListener

        // optional bool is_charging = 1;
        const uint64_t IS_CHARGING = 0x0000010800000001LL;

        // optional int64 elapsed_realtime = 6;
        const uint64_t ELAPSED_REALTIME = 0x0000010300000006LL;

        // repeated int32 foreground_uids = 3;
        const uint64_t FOREGROUND_UIDS = 0x0000020500000003LL;

        // repeated .com.android.server.job.StateControllerProto.QuotaController.TrackedJob tracked_jobs = 4;
        const uint64_t TRACKED_JOBS = 0x0000020b00000004LL;

        // repeated .com.android.server.job.StateControllerProto.QuotaController.PackageStats package_stats = 5;
        const uint64_t PACKAGE_STATS = 0x0000020b00000005LL;

        // repeated .com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping uid_to_package_cache = 7;
        const uint64_t UID_TO_PACKAGE_CACHE = 0x0000020b00000007LL;

        // optional .com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener in_quota_alarm_listener = 8;
        const uint64_t IN_QUOTA_ALARM_LISTENER = 0x0000010b00000008LL;

        static const int _FIELD_COUNT = 7;
        static const char* _FIELD_NAMES[7] = {
            "is_charging",
            "elapsed_realtime",
            "foreground_uids",
            "tracked_jobs",
            "package_stats",
            "uid_to_package_cache",
            "in_quota_alarm_listener",
        };
        static const uint64_t _FIELD_IDS[7] = {
            IS_CHARGING,
            ELAPSED_REALTIME,
            FOREGROUND_UIDS,
            TRACKED_JOBS,
            PACKAGE_STATS,
            UID_TO_PACKAGE_CACHE,
            IN_QUOTA_ALARM_LISTENER,
        };

    } //QuotaController

    // message StorageController
    namespace StorageController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "info",
                "source_uid",
            };
            static const uint64_t _FIELD_IDS[2] = {
                INFO,
                SOURCE_UID,
            };

        } //TrackedJob

        // optional bool is_storage_not_low = 1;
        const uint64_t IS_STORAGE_NOT_LOW = 0x0000010800000001LL;

        // optional int32 last_broadcast_sequence_number = 2;
        const uint64_t LAST_BROADCAST_SEQUENCE_NUMBER = 0x0000010500000002LL;

        // repeated .com.android.server.job.StateControllerProto.StorageController.TrackedJob tracked_jobs = 3;
        const uint64_t TRACKED_JOBS = 0x0000020b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "is_storage_not_low",
            "last_broadcast_sequence_number",
            "tracked_jobs",
        };
        static const uint64_t _FIELD_IDS[3] = {
            IS_STORAGE_NOT_LOW,
            LAST_BROADCAST_SEQUENCE_NUMBER,
            TRACKED_JOBS,
        };

    } //StorageController

    // message TimeController
    namespace TimeController {
        // message TrackedJob
        namespace TrackedJob {
            // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
            const uint64_t INFO = 0x0000010b00000001LL;

            // optional int32 source_uid = 2;
            const uint64_t SOURCE_UID = 0x0000010500000002LL;

            // optional bool has_timing_delay_constraint = 3;
            const uint64_t HAS_TIMING_DELAY_CONSTRAINT = 0x0000010800000003LL;

            // optional int64 delay_time_remaining_ms = 4;
            const uint64_t DELAY_TIME_REMAINING_MS = 0x0000010300000004LL;

            // optional bool has_deadline_constraint = 5;
            const uint64_t HAS_DEADLINE_CONSTRAINT = 0x0000010800000005LL;

            // optional int64 time_remaining_until_deadline_ms = 6;
            const uint64_t TIME_REMAINING_UNTIL_DEADLINE_MS = 0x0000010300000006LL;

            static const int _FIELD_COUNT = 6;
            static const char* _FIELD_NAMES[6] = {
                "info",
                "source_uid",
                "has_timing_delay_constraint",
                "delay_time_remaining_ms",
                "has_deadline_constraint",
                "time_remaining_until_deadline_ms",
            };
            static const uint64_t _FIELD_IDS[6] = {
                INFO,
                SOURCE_UID,
                HAS_TIMING_DELAY_CONSTRAINT,
                DELAY_TIME_REMAINING_MS,
                HAS_DEADLINE_CONSTRAINT,
                TIME_REMAINING_UNTIL_DEADLINE_MS,
            };

        } //TrackedJob

        // optional int64 now_elapsed_realtime = 1;
        const uint64_t NOW_ELAPSED_REALTIME = 0x0000010300000001LL;

        // optional int64 time_until_next_delay_alarm_ms = 2;
        const uint64_t TIME_UNTIL_NEXT_DELAY_ALARM_MS = 0x0000010300000002LL;

        // optional int64 time_until_next_deadline_alarm_ms = 3;
        const uint64_t TIME_UNTIL_NEXT_DEADLINE_ALARM_MS = 0x0000010300000003LL;

        // repeated .com.android.server.job.StateControllerProto.TimeController.TrackedJob tracked_jobs = 4;
        const uint64_t TRACKED_JOBS = 0x0000020b00000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "now_elapsed_realtime",
            "time_until_next_delay_alarm_ms",
            "time_until_next_deadline_alarm_ms",
            "tracked_jobs",
        };
        static const uint64_t _FIELD_IDS[4] = {
            NOW_ELAPSED_REALTIME,
            TIME_UNTIL_NEXT_DELAY_ALARM_MS,
            TIME_UNTIL_NEXT_DEADLINE_ALARM_MS,
            TRACKED_JOBS,
        };

    } //TimeController

    // optional .com.android.server.job.StateControllerProto.BackgroundJobsController background = 1;
    const uint64_t BACKGROUND = 0x0000010b00000001LL;

    // optional .com.android.server.job.StateControllerProto.BatteryController battery = 2;
    const uint64_t BATTERY = 0x0000010b00000002LL;

    // optional .com.android.server.job.StateControllerProto.ConnectivityController connectivity = 3;
    const uint64_t CONNECTIVITY = 0x0000010b00000003LL;

    // optional .com.android.server.job.StateControllerProto.ContentObserverController content_observer = 4;
    const uint64_t CONTENT_OBSERVER = 0x0000010b00000004LL;

    // optional .com.android.server.job.StateControllerProto.DeviceIdleJobsController device_idle = 5;
    const uint64_t DEVICE_IDLE = 0x0000010b00000005LL;

    // optional .com.android.server.job.StateControllerProto.IdleController idle = 6;
    const uint64_t IDLE = 0x0000010b00000006LL;

    // optional .com.android.server.job.StateControllerProto.QuotaController quota = 9;
    const uint64_t QUOTA = 0x0000010b00000009LL;

    // optional .com.android.server.job.StateControllerProto.StorageController storage = 7;
    const uint64_t STORAGE = 0x0000010b00000007LL;

    // optional .com.android.server.job.StateControllerProto.TimeController time = 8;
    const uint64_t TIME = 0x0000010b00000008LL;

    static const int _FIELD_COUNT = 9;
    static const char* _FIELD_NAMES[9] = {
        "background",
        "battery",
        "connectivity",
        "content_observer",
        "device_idle",
        "idle",
        "quota",
        "storage",
        "time",
    };
    static const uint64_t _FIELD_IDS[9] = {
        BACKGROUND,
        BATTERY,
        CONNECTIVITY,
        CONTENT_OBSERVER,
        DEVICE_IDLE,
        IDLE,
        QUOTA,
        STORAGE,
        TIME,
    };

} //StateControllerProto

// message DataSetProto
namespace DataSetProto {
    // message PackageEntryProto
    namespace PackageEntryProto {
        // message State
        namespace State {
            // optional int64 duration_ms = 1;
            const uint64_t DURATION_MS = 0x0000010300000001LL;

            // optional int32 count = 2;
            const uint64_t COUNT = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "duration_ms",
                "count",
            };
            static const uint64_t _FIELD_IDS[2] = {
                DURATION_MS,
                COUNT,
            };

        } //State

        // message StopReasonCount
        namespace StopReasonCount {
            // optional .android.app.job.InternalStopReasonEnum reason = 1;
            const uint64_t REASON = 0x0000010e00000001LL;

            // optional int32 count = 2;
            const uint64_t COUNT = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "reason",
                "count",
            };
            static const uint64_t _FIELD_IDS[2] = {
                REASON,
                COUNT,
            };

        } //StopReasonCount

        // optional int32 uid = 1;
        const uint64_t UID = 0x0000010500000001LL;

        // optional string package_name = 2;
        const uint64_t PACKAGE_NAME = 0x0000010900000002LL;

        // optional .com.android.server.job.DataSetProto.PackageEntryProto.State pending_state = 3;
        const uint64_t PENDING_STATE = 0x0000010b00000003LL;

        // optional .com.android.server.job.DataSetProto.PackageEntryProto.State active_state = 4;
        const uint64_t ACTIVE_STATE = 0x0000010b00000004LL;

        // optional .com.android.server.job.DataSetProto.PackageEntryProto.State active_top_state = 5;
        const uint64_t ACTIVE_TOP_STATE = 0x0000010b00000005LL;

        // optional bool pending = 6;
        const uint64_t PENDING = 0x0000010800000006LL;

        // optional bool active = 7;
        const uint64_t ACTIVE = 0x0000010800000007LL;

        // optional bool active_top = 8;
        const uint64_t ACTIVE_TOP = 0x0000010800000008LL;

        // repeated .com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount stop_reasons = 9;
        const uint64_t STOP_REASONS = 0x0000020b00000009LL;

        static const int _FIELD_COUNT = 9;
        static const char* _FIELD_NAMES[9] = {
            "uid",
            "package_name",
            "pending_state",
            "active_state",
            "active_top_state",
            "pending",
            "active",
            "active_top",
            "stop_reasons",
        };
        static const uint64_t _FIELD_IDS[9] = {
            UID,
            PACKAGE_NAME,
            PENDING_STATE,
            ACTIVE_STATE,
            ACTIVE_TOP_STATE,
            PENDING,
            ACTIVE,
            ACTIVE_TOP,
            STOP_REASONS,
        };

    } //PackageEntryProto

    // optional int64 start_clock_time_ms = 1;
    const uint64_t START_CLOCK_TIME_MS = 0x0000010300000001LL;

    // optional int64 elapsed_time_ms = 2;
    const uint64_t ELAPSED_TIME_MS = 0x0000010300000002LL;

    // optional int64 period_ms = 3;
    const uint64_t PERIOD_MS = 0x0000010300000003LL;

    // repeated .com.android.server.job.DataSetProto.PackageEntryProto package_entries = 4;
    const uint64_t PACKAGE_ENTRIES = 0x0000020b00000004LL;

    // optional int32 max_concurrency = 5;
    const uint64_t MAX_CONCURRENCY = 0x0000010500000005LL;

    // optional int32 max_foreground_concurrency = 6;
    const uint64_t MAX_FOREGROUND_CONCURRENCY = 0x0000010500000006LL;

    static const int _FIELD_COUNT = 6;
    static const char* _FIELD_NAMES[6] = {
        "start_clock_time_ms",
        "elapsed_time_ms",
        "period_ms",
        "package_entries",
        "max_concurrency",
        "max_foreground_concurrency",
    };
    static const uint64_t _FIELD_IDS[6] = {
        START_CLOCK_TIME_MS,
        ELAPSED_TIME_MS,
        PERIOD_MS,
        PACKAGE_ENTRIES,
        MAX_CONCURRENCY,
        MAX_FOREGROUND_CONCURRENCY,
    };

} //DataSetProto

// message GrantedUriPermissionsDumpProto
namespace GrantedUriPermissionsDumpProto {
    // optional int32 flags = 1;
    const uint64_t FLAGS = 0x0000010500000001LL;

    // optional int32 source_user_id = 2;
    const uint64_t SOURCE_USER_ID = 0x0000010500000002LL;

    // optional string tag = 3;
    const uint64_t TAG = 0x0000010900000003LL;

    // optional string permission_owner = 4;
    const uint64_t PERMISSION_OWNER = 0x0000010900000004LL;

    // repeated string uris = 5;
    const uint64_t URIS = 0x0000020900000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "flags",
        "source_user_id",
        "tag",
        "permission_owner",
        "uris",
    };
    static const uint64_t _FIELD_IDS[5] = {
        FLAGS,
        SOURCE_USER_ID,
        TAG,
        PERMISSION_OWNER,
        URIS,
    };

} //GrantedUriPermissionsDumpProto

// message JobPackageTrackerDumpProto
namespace JobPackageTrackerDumpProto {
    // repeated .com.android.server.job.DataSetProto historical_stats = 1;
    const uint64_t HISTORICAL_STATS = 0x0000020b00000001LL;

    // optional .com.android.server.job.DataSetProto current_stats = 2;
    const uint64_t CURRENT_STATS = 0x0000010b00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "historical_stats",
        "current_stats",
    };
    static const uint64_t _FIELD_IDS[2] = {
        HISTORICAL_STATS,
        CURRENT_STATS,
    };

} //JobPackageTrackerDumpProto

// message JobPackageHistoryProto
namespace JobPackageHistoryProto {
    // enum Event
    const int UNKNOWN = 0;
    const int START_JOB = 1;
    const int STOP_JOB = 2;
    const int START_PERIODIC_JOB = 3;
    const int STOP_PERIODIC_JOB = 4;
    static const int _ENUM_EVENT_COUNT = 5;
    static const char* _ENUM_EVENT_NAMES[5] = {
        "UNKNOWN",
        "START_JOB",
        "STOP_JOB",
        "START_PERIODIC_JOB",
        "STOP_PERIODIC_JOB",
    };
    static const int _ENUM_EVENT_VALUES[5] = {
        UNKNOWN,
        START_JOB,
        STOP_JOB,
        START_PERIODIC_JOB,
        STOP_PERIODIC_JOB,
    };

    // message HistoryEvent
    namespace HistoryEvent {
        // optional .com.android.server.job.JobPackageHistoryProto.Event event = 1;
        const uint64_t EVENT = 0x0000010e00000001LL;

        // optional int64 time_since_event_ms = 2;
        const uint64_t TIME_SINCE_EVENT_MS = 0x0000010300000002LL;

        // optional int32 uid = 3;
        const uint64_t UID = 0x0000010500000003LL;

        // optional int32 job_id = 4;
        const uint64_t JOB_ID = 0x0000010500000004LL;

        // optional string tag = 5;
        const uint64_t TAG = 0x0000010900000005LL;

        // optional .android.app.job.InternalStopReasonEnum stop_reason = 6;
        const uint64_t STOP_REASON = 0x0000010e00000006LL;

        static const int _FIELD_COUNT = 6;
        static const char* _FIELD_NAMES[6] = {
            "event",
            "time_since_event_ms",
            "uid",
            "job_id",
            "tag",
            "stop_reason",
        };
        static const uint64_t _FIELD_IDS[6] = {
            EVENT,
            TIME_SINCE_EVENT_MS,
            UID,
            JOB_ID,
            TAG,
            STOP_REASON,
        };

    } //HistoryEvent

    // repeated .com.android.server.job.JobPackageHistoryProto.HistoryEvent history_event = 1;
    const uint64_t HISTORY_EVENT = 0x0000020b00000001LL;

    static const int _FIELD_COUNT = 1;
    static const char* _FIELD_NAMES[1] = {
        "history_event",
    };
    static const uint64_t _FIELD_IDS[1] = {
        HISTORY_EVENT,
    };

} //JobPackageHistoryProto

// message JobStatusShortInfoProto
namespace JobStatusShortInfoProto {
    // optional int32 calling_uid = 1;
    const uint64_t CALLING_UID = 0x0000010500000001LL;

    // optional int32 job_id = 2;
    const uint64_t JOB_ID = 0x0000010500000002LL;

    // optional string battery_name = 3;
    const uint64_t BATTERY_NAME = 0x0000010900000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "calling_uid",
        "job_id",
        "battery_name",
    };
    static const uint64_t _FIELD_IDS[3] = {
        CALLING_UID,
        JOB_ID,
        BATTERY_NAME,
    };

} //JobStatusShortInfoProto

// message JobStatusDumpProto
namespace JobStatusDumpProto {
    // enum TrackingController
    const int TRACKING_BATTERY = 0;
    const int TRACKING_CONNECTIVITY = 1;
    const int TRACKING_CONTENT = 2;
    const int TRACKING_IDLE = 3;
    const int TRACKING_STORAGE = 4;
    const int TRACKING_TIME = 5;
    const int TRACKING_QUOTA = 6;
    static const int _ENUM_TRACKING_CONTROLLER_COUNT = 7;
    static const char* _ENUM_TRACKING_CONTROLLER_NAMES[7] = {
        "TRACKING_BATTERY",
        "TRACKING_CONNECTIVITY",
        "TRACKING_CONTENT",
        "TRACKING_IDLE",
        "TRACKING_STORAGE",
        "TRACKING_TIME",
        "TRACKING_QUOTA",
    };
    static const int _ENUM_TRACKING_CONTROLLER_VALUES[7] = {
        TRACKING_BATTERY,
        TRACKING_CONNECTIVITY,
        TRACKING_CONTENT,
        TRACKING_IDLE,
        TRACKING_STORAGE,
        TRACKING_TIME,
        TRACKING_QUOTA,
    };

    // enum Bucket
    const int ACTIVE = 0;
    const int WORKING_SET = 1;
    const int FREQUENT = 2;
    const int RARE = 3;
    const int NEVER = 4;
    const int RESTRICTED = 5;
    static const int _ENUM_BUCKET_COUNT = 6;
    static const char* _ENUM_BUCKET_NAMES[6] = {
        "ACTIVE",
        "WORKING_SET",
        "FREQUENT",
        "RARE",
        "NEVER",
        "RESTRICTED",
    };
    static const int _ENUM_BUCKET_VALUES[6] = {
        ACTIVE,
        WORKING_SET,
        FREQUENT,
        RARE,
        NEVER,
        RESTRICTED,
    };

    // message JobInfo
    namespace JobInfo {
        // message TriggerContentUri
        namespace TriggerContentUri {
            // optional int32 flags = 1;
            const uint64_t FLAGS = 0x0000010500000001LL;

            // optional string uri = 2;
            const uint64_t URI = 0x0000010900000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "flags",
                "uri",
            };
            static const uint64_t _FIELD_IDS[2] = {
                FLAGS,
                URI,
            };

        } //TriggerContentUri

        // message Backoff
        namespace Backoff {
            // enum Policy
            const int BACKOFF_POLICY_LINEAR = 0;
            const int BACKOFF_POLICY_EXPONENTIAL = 1;
            static const int _ENUM_POLICY_COUNT = 2;
            static const char* _ENUM_POLICY_NAMES[2] = {
                "BACKOFF_POLICY_LINEAR",
                "BACKOFF_POLICY_EXPONENTIAL",
            };
            static const int _ENUM_POLICY_VALUES[2] = {
                BACKOFF_POLICY_LINEAR,
                BACKOFF_POLICY_EXPONENTIAL,
            };

            // optional .com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.Policy policy = 1;
            const uint64_t POLICY = 0x0000010e00000001LL;

            // optional int64 initial_backoff_ms = 2;
            const uint64_t INITIAL_BACKOFF_MS = 0x0000010300000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "policy",
                "initial_backoff_ms",
            };
            static const uint64_t _FIELD_IDS[2] = {
                POLICY,
                INITIAL_BACKOFF_MS,
            };

        } //Backoff

        // optional .android.content.ComponentNameProto service = 1;
        const uint64_t SERVICE = 0x0000010b00000001LL;

        // optional bool is_periodic = 2;
        const uint64_t IS_PERIODIC = 0x0000010800000002LL;

        // optional int64 period_interval_ms = 3;
        const uint64_t PERIOD_INTERVAL_MS = 0x0000010300000003LL;

        // optional int64 period_flex_ms = 4;
        const uint64_t PERIOD_FLEX_MS = 0x0000010300000004LL;

        // optional bool is_persisted = 5;
        const uint64_t IS_PERSISTED = 0x0000010800000005LL;

        // optional sint32 priority = 6;
        const uint64_t PRIORITY = 0x0000011100000006LL;

        // optional int32 flags = 7;
        const uint64_t FLAGS = 0x0000010500000007LL;

        // optional bool requires_charging = 8;
        const uint64_t REQUIRES_CHARGING = 0x0000010800000008LL;

        // optional bool requires_battery_not_low = 9;
        const uint64_t REQUIRES_BATTERY_NOT_LOW = 0x0000010800000009LL;

        // optional bool requires_device_idle = 10;
        const uint64_t REQUIRES_DEVICE_IDLE = 0x000001080000000aLL;

        // repeated .com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri trigger_content_uris = 11;
        const uint64_t TRIGGER_CONTENT_URIS = 0x0000020b0000000bLL;

        // optional int64 trigger_content_update_delay_ms = 12;
        const uint64_t TRIGGER_CONTENT_UPDATE_DELAY_MS = 0x000001030000000cLL;

        // optional int64 trigger_content_max_delay_ms = 13;
        const uint64_t TRIGGER_CONTENT_MAX_DELAY_MS = 0x000001030000000dLL;

        // optional .android.os.PersistableBundleProto extras = 14;
        const uint64_t EXTRAS = 0x0000010b0000000eLL;

        // optional .android.os.BundleProto transient_extras = 15;
        const uint64_t TRANSIENT_EXTRAS = 0x0000010b0000000fLL;

        // optional .android.content.ClipDataProto clip_data = 16;
        const uint64_t CLIP_DATA = 0x0000010b00000010LL;

        // optional .com.android.server.job.GrantedUriPermissionsDumpProto granted_uri_permissions = 17;
        const uint64_t GRANTED_URI_PERMISSIONS = 0x0000010b00000011LL;

        // optional .android.net.NetworkRequestProto required_network = 18;
        const uint64_t REQUIRED_NETWORK = 0x0000010b00000012LL;

        // optional int64 total_network_download_bytes = 25;
        const uint64_t TOTAL_NETWORK_DOWNLOAD_BYTES = 0x0000010300000019LL;

        // optional int64 total_network_upload_bytes = 26;
        const uint64_t TOTAL_NETWORK_UPLOAD_BYTES = 0x000001030000001aLL;

        // optional int64 min_latency_ms = 20;
        const uint64_t MIN_LATENCY_MS = 0x0000010300000014LL;

        // optional int64 max_execution_delay_ms = 21;
        const uint64_t MAX_EXECUTION_DELAY_MS = 0x0000010300000015LL;

        // optional .com.android.server.job.JobStatusDumpProto.JobInfo.Backoff backoff_policy = 22;
        const uint64_t BACKOFF_POLICY = 0x0000010b00000016LL;

        // optional bool has_early_constraint = 23;
        const uint64_t HAS_EARLY_CONSTRAINT = 0x0000010800000017LL;

        // optional bool has_late_constraint = 24;
        const uint64_t HAS_LATE_CONSTRAINT = 0x0000010800000018LL;

        static const int _FIELD_COUNT = 25;
        static const char* _FIELD_NAMES[25] = {
            "service",
            "is_periodic",
            "period_interval_ms",
            "period_flex_ms",
            "is_persisted",
            "priority",
            "flags",
            "requires_charging",
            "requires_battery_not_low",
            "requires_device_idle",
            "trigger_content_uris",
            "trigger_content_update_delay_ms",
            "trigger_content_max_delay_ms",
            "extras",
            "transient_extras",
            "clip_data",
            "granted_uri_permissions",
            "required_network",
            "total_network_download_bytes",
            "total_network_upload_bytes",
            "min_latency_ms",
            "max_execution_delay_ms",
            "backoff_policy",
            "has_early_constraint",
            "has_late_constraint",
        };
        static const uint64_t _FIELD_IDS[25] = {
            SERVICE,
            IS_PERIODIC,
            PERIOD_INTERVAL_MS,
            PERIOD_FLEX_MS,
            IS_PERSISTED,
            PRIORITY,
            FLAGS,
            REQUIRES_CHARGING,
            REQUIRES_BATTERY_NOT_LOW,
            REQUIRES_DEVICE_IDLE,
            TRIGGER_CONTENT_URIS,
            TRIGGER_CONTENT_UPDATE_DELAY_MS,
            TRIGGER_CONTENT_MAX_DELAY_MS,
            EXTRAS,
            TRANSIENT_EXTRAS,
            CLIP_DATA,
            GRANTED_URI_PERMISSIONS,
            REQUIRED_NETWORK,
            TOTAL_NETWORK_DOWNLOAD_BYTES,
            TOTAL_NETWORK_UPLOAD_BYTES,
            MIN_LATENCY_MS,
            MAX_EXECUTION_DELAY_MS,
            BACKOFF_POLICY,
            HAS_EARLY_CONSTRAINT,
            HAS_LATE_CONSTRAINT,
        };

    } //JobInfo

    // message ImplicitConstraints
    namespace ImplicitConstraints {
        // optional bool is_not_dozing = 1;
        const uint64_t IS_NOT_DOZING = 0x0000010800000001LL;

        // optional bool is_not_restricted_in_bg = 2;
        const uint64_t IS_NOT_RESTRICTED_IN_BG = 0x0000010800000002LL;

        // optional bool is_dynamic_satisfied = 3;
        const uint64_t IS_DYNAMIC_SATISFIED = 0x0000010800000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "is_not_dozing",
            "is_not_restricted_in_bg",
            "is_dynamic_satisfied",
        };
        static const uint64_t _FIELD_IDS[3] = {
            IS_NOT_DOZING,
            IS_NOT_RESTRICTED_IN_BG,
            IS_DYNAMIC_SATISFIED,
        };

    } //ImplicitConstraints

    // message JobWorkItem
    namespace JobWorkItem {
        // optional int32 work_id = 1;
        const uint64_t WORK_ID = 0x0000010500000001LL;

        // optional int32 delivery_count = 2;
        const uint64_t DELIVERY_COUNT = 0x0000010500000002LL;

        // optional .android.content.IntentProto intent = 3;
        const uint64_t INTENT = 0x0000010b00000003LL;

        // optional .com.android.server.job.GrantedUriPermissionsDumpProto uri_grants = 4;
        const uint64_t URI_GRANTS = 0x0000010b00000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "work_id",
            "delivery_count",
            "intent",
            "uri_grants",
        };
        static const uint64_t _FIELD_IDS[4] = {
            WORK_ID,
            DELIVERY_COUNT,
            INTENT,
            URI_GRANTS,
        };

    } //JobWorkItem

    // optional int32 calling_uid = 1;
    const uint64_t CALLING_UID = 0x0000010500000001LL;

    // optional string tag = 2;
    const uint64_t TAG = 0x0000010900000002LL;

    // optional int32 source_uid = 3;
    const uint64_t SOURCE_UID = 0x0000010500000003LL;

    // optional int32 source_user_id = 4;
    const uint64_t SOURCE_USER_ID = 0x0000010500000004LL;

    // optional string source_package_name = 5;
    const uint64_t SOURCE_PACKAGE_NAME = 0x0000010900000005LL;

    // optional .com.android.server.job.JobStatusDumpProto.JobInfo job_info = 6;
    const uint64_t JOB_INFO = 0x0000010b00000006LL;

    // repeated .com.android.server.job.ConstraintEnum required_constraints = 7;
    const uint64_t REQUIRED_CONSTRAINTS = 0x0000020e00000007LL;

    // repeated .com.android.server.job.ConstraintEnum dynamic_constraints = 31;
    const uint64_t DYNAMIC_CONSTRAINTS = 0x0000020e0000001fLL;

    // repeated .com.android.server.job.ConstraintEnum satisfied_constraints = 8;
    const uint64_t SATISFIED_CONSTRAINTS = 0x0000020e00000008LL;

    // repeated .com.android.server.job.ConstraintEnum unsatisfied_constraints = 9;
    const uint64_t UNSATISFIED_CONSTRAINTS = 0x0000020e00000009LL;

    // optional bool is_doze_whitelisted = 10;
    const uint64_t IS_DOZE_WHITELISTED = 0x000001080000000aLL;

    // optional bool is_uid_active = 26;
    const uint64_t IS_UID_ACTIVE = 0x000001080000001aLL;

    // optional .com.android.server.job.JobStatusDumpProto.ImplicitConstraints implicit_constraints = 25;
    const uint64_t IMPLICIT_CONSTRAINTS = 0x0000010b00000019LL;

    // repeated .com.android.server.job.JobStatusDumpProto.TrackingController tracking_controllers = 11;
    const uint64_t TRACKING_CONTROLLERS = 0x0000020e0000000bLL;

    // repeated string changed_authorities = 12;
    const uint64_t CHANGED_AUTHORITIES = 0x000002090000000cLL;

    // repeated string changed_uris = 13;
    const uint64_t CHANGED_URIS = 0x000002090000000dLL;

    // optional .android.net.NetworkProto network = 14;
    const uint64_t NETWORK = 0x0000010b0000000eLL;

    // repeated .com.android.server.job.JobStatusDumpProto.JobWorkItem pending_work = 15;
    const uint64_t PENDING_WORK = 0x0000020b0000000fLL;

    // repeated .com.android.server.job.JobStatusDumpProto.JobWorkItem executing_work = 16;
    const uint64_t EXECUTING_WORK = 0x0000020b00000010LL;

    // optional .com.android.server.job.JobStatusDumpProto.Bucket standby_bucket = 17;
    const uint64_t STANDBY_BUCKET = 0x0000010e00000011LL;

    // optional bool is_exempted_from_app_standby = 27;
    const uint64_t IS_EXEMPTED_FROM_APP_STANDBY = 0x000001080000001bLL;

    // optional int64 enqueue_duration_ms = 18;
    const uint64_t ENQUEUE_DURATION_MS = 0x0000010300000012LL;

    // optional sint64 time_until_earliest_runtime_ms = 19;
    const uint64_t TIME_UNTIL_EARLIEST_RUNTIME_MS = 0x0000011200000013LL;

    // optional sint64 time_until_latest_runtime_ms = 20;
    const uint64_t TIME_UNTIL_LATEST_RUNTIME_MS = 0x0000011200000014LL;

    // optional uint64 original_latest_runtime_elapsed = 30;
    const uint64_t ORIGINAL_LATEST_RUNTIME_ELAPSED = 0x000001040000001eLL;

    // optional int32 num_failures = 21;
    const uint64_t NUM_FAILURES = 0x0000010500000015LL;

    // optional int64 last_successful_run_time = 22;
    const uint64_t LAST_SUCCESSFUL_RUN_TIME = 0x0000010300000016LL;

    // optional int64 last_failed_run_time = 23;
    const uint64_t LAST_FAILED_RUN_TIME = 0x0000010300000017LL;

    // optional int64 internal_flags = 24;
    const uint64_t INTERNAL_FLAGS = 0x0000010300000018LL;

    // optional int64 time_since_first_deferral_ms = 28;
    const uint64_t TIME_SINCE_FIRST_DEFERRAL_MS = 0x000001030000001cLL;

    // optional int64 time_since_first_force_batch_attempt_ms = 29;
    const uint64_t TIME_SINCE_FIRST_FORCE_BATCH_ATTEMPT_MS = 0x000001030000001dLL;

    static const int _FIELD_COUNT = 31;
    static const char* _FIELD_NAMES[31] = {
        "calling_uid",
        "tag",
        "source_uid",
        "source_user_id",
        "source_package_name",
        "job_info",
        "required_constraints",
        "dynamic_constraints",
        "satisfied_constraints",
        "unsatisfied_constraints",
        "is_doze_whitelisted",
        "is_uid_active",
        "implicit_constraints",
        "tracking_controllers",
        "changed_authorities",
        "changed_uris",
        "network",
        "pending_work",
        "executing_work",
        "standby_bucket",
        "is_exempted_from_app_standby",
        "enqueue_duration_ms",
        "time_until_earliest_runtime_ms",
        "time_until_latest_runtime_ms",
        "original_latest_runtime_elapsed",
        "num_failures",
        "last_successful_run_time",
        "last_failed_run_time",
        "internal_flags",
        "time_since_first_deferral_ms",
        "time_since_first_force_batch_attempt_ms",
    };
    static const uint64_t _FIELD_IDS[31] = {
        CALLING_UID,
        TAG,
        SOURCE_UID,
        SOURCE_USER_ID,
        SOURCE_PACKAGE_NAME,
        JOB_INFO,
        REQUIRED_CONSTRAINTS,
        DYNAMIC_CONSTRAINTS,
        SATISFIED_CONSTRAINTS,
        UNSATISFIED_CONSTRAINTS,
        IS_DOZE_WHITELISTED,
        IS_UID_ACTIVE,
        IMPLICIT_CONSTRAINTS,
        TRACKING_CONTROLLERS,
        CHANGED_AUTHORITIES,
        CHANGED_URIS,
        NETWORK,
        PENDING_WORK,
        EXECUTING_WORK,
        STANDBY_BUCKET,
        IS_EXEMPTED_FROM_APP_STANDBY,
        ENQUEUE_DURATION_MS,
        TIME_UNTIL_EARLIEST_RUNTIME_MS,
        TIME_UNTIL_LATEST_RUNTIME_MS,
        ORIGINAL_LATEST_RUNTIME_ELAPSED,
        NUM_FAILURES,
        LAST_SUCCESSFUL_RUN_TIME,
        LAST_FAILED_RUN_TIME,
        INTERNAL_FLAGS,
        TIME_SINCE_FIRST_DEFERRAL_MS,
        TIME_SINCE_FIRST_FORCE_BATCH_ATTEMPT_MS,
    };

} //JobStatusDumpProto

// message JobConcurrencyManagerProto
namespace JobConcurrencyManagerProto {
    // optional bool current_interactive_state = 1;
    const uint64_t CURRENT_INTERACTIVE_STATE = 0x0000010800000001LL;

    // optional bool effective_interactive_state = 2;
    const uint64_t EFFECTIVE_INTERACTIVE_STATE = 0x0000010800000002LL;

    // optional int64 time_since_last_screen_on_ms = 3;
    const uint64_t TIME_SINCE_LAST_SCREEN_ON_MS = 0x0000010300000003LL;

    // optional int64 time_since_last_screen_off_ms = 4;
    const uint64_t TIME_SINCE_LAST_SCREEN_OFF_MS = 0x0000010300000004LL;

    // optional .com.android.server.job.JobCountTrackerProto job_count_tracker = 5;
    const uint64_t JOB_COUNT_TRACKER = 0x0000010b00000005LL;

    // optional int32 memory_trim_level = 6;
    const uint64_t MEMORY_TRIM_LEVEL = 0x0000010500000006LL;

    // optional .com.android.server.StatLoggerProto stats = 7;
    const uint64_t STATS = 0x0000010b00000007LL;

    static const int _FIELD_COUNT = 7;
    static const char* _FIELD_NAMES[7] = {
        "current_interactive_state",
        "effective_interactive_state",
        "time_since_last_screen_on_ms",
        "time_since_last_screen_off_ms",
        "job_count_tracker",
        "memory_trim_level",
        "stats",
    };
    static const uint64_t _FIELD_IDS[7] = {
        CURRENT_INTERACTIVE_STATE,
        EFFECTIVE_INTERACTIVE_STATE,
        TIME_SINCE_LAST_SCREEN_ON_MS,
        TIME_SINCE_LAST_SCREEN_OFF_MS,
        JOB_COUNT_TRACKER,
        MEMORY_TRIM_LEVEL,
        STATS,
    };

} //JobConcurrencyManagerProto

// message JobCountTrackerProto
namespace JobCountTrackerProto {
    // optional int32 config_num_max_total_jobs = 1;
    const uint64_t CONFIG_NUM_MAX_TOTAL_JOBS = 0x0000010500000001LL;

    // optional int32 config_num_max_bg_jobs = 2;
    const uint64_t CONFIG_NUM_MAX_BG_JOBS = 0x0000010500000002LL;

    // optional int32 config_num_min_bg_jobs = 3;
    const uint64_t CONFIG_NUM_MIN_BG_JOBS = 0x0000010500000003LL;

    // optional int32 num_running_fg_jobs = 4;
    const uint64_t NUM_RUNNING_FG_JOBS = 0x0000010500000004LL;

    // optional int32 num_running_bg_jobs = 5;
    const uint64_t NUM_RUNNING_BG_JOBS = 0x0000010500000005LL;

    // optional int32 num_pending_fg_jobs = 6;
    const uint64_t NUM_PENDING_FG_JOBS = 0x0000010500000006LL;

    // optional int32 num_pending_bg_jobs = 7;
    const uint64_t NUM_PENDING_BG_JOBS = 0x0000010500000007LL;

    // optional int32 num_actual_max_fg_jobs = 8;
    const uint64_t NUM_ACTUAL_MAX_FG_JOBS = 0x0000010500000008LL;

    // optional int32 num_actual_max_bg_jobs = 9;
    const uint64_t NUM_ACTUAL_MAX_BG_JOBS = 0x0000010500000009LL;

    // optional int32 num_reserved_for_bg = 10;
    const uint64_t NUM_RESERVED_FOR_BG = 0x000001050000000aLL;

    // optional int32 num_starting_fg_jobs = 11;
    const uint64_t NUM_STARTING_FG_JOBS = 0x000001050000000bLL;

    // optional int32 num_starting_bg_jobs = 12;
    const uint64_t NUM_STARTING_BG_JOBS = 0x000001050000000cLL;

    static const int _FIELD_COUNT = 12;
    static const char* _FIELD_NAMES[12] = {
        "config_num_max_total_jobs",
        "config_num_max_bg_jobs",
        "config_num_min_bg_jobs",
        "num_running_fg_jobs",
        "num_running_bg_jobs",
        "num_pending_fg_jobs",
        "num_pending_bg_jobs",
        "num_actual_max_fg_jobs",
        "num_actual_max_bg_jobs",
        "num_reserved_for_bg",
        "num_starting_fg_jobs",
        "num_starting_bg_jobs",
    };
    static const uint64_t _FIELD_IDS[12] = {
        CONFIG_NUM_MAX_TOTAL_JOBS,
        CONFIG_NUM_MAX_BG_JOBS,
        CONFIG_NUM_MIN_BG_JOBS,
        NUM_RUNNING_FG_JOBS,
        NUM_RUNNING_BG_JOBS,
        NUM_PENDING_FG_JOBS,
        NUM_PENDING_BG_JOBS,
        NUM_ACTUAL_MAX_FG_JOBS,
        NUM_ACTUAL_MAX_BG_JOBS,
        NUM_RESERVED_FOR_BG,
        NUM_STARTING_FG_JOBS,
        NUM_STARTING_BG_JOBS,
    };

} //JobCountTrackerProto

// message JobStorePersistStatsProto
namespace JobStorePersistStatsProto {
    // message Stats
    namespace Stats {
        // optional int32 num_total_jobs = 1;
        const uint64_t NUM_TOTAL_JOBS = 0x0000010500000001LL;

        // optional int32 num_system_server_jobs = 2;
        const uint64_t NUM_SYSTEM_SERVER_JOBS = 0x0000010500000002LL;

        // optional int32 num_system_sync_manager_jobs = 3;
        const uint64_t NUM_SYSTEM_SYNC_MANAGER_JOBS = 0x0000010500000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "num_total_jobs",
            "num_system_server_jobs",
            "num_system_sync_manager_jobs",
        };
        static const uint64_t _FIELD_IDS[3] = {
            NUM_TOTAL_JOBS,
            NUM_SYSTEM_SERVER_JOBS,
            NUM_SYSTEM_SYNC_MANAGER_JOBS,
        };

    } //Stats

    // optional .com.android.server.job.JobStorePersistStatsProto.Stats first_load = 1;
    const uint64_t FIRST_LOAD = 0x0000010b00000001LL;

    // optional .com.android.server.job.JobStorePersistStatsProto.Stats last_save = 2;
    const uint64_t LAST_SAVE = 0x0000010b00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "first_load",
        "last_save",
    };
    static const uint64_t _FIELD_IDS[2] = {
        FIRST_LOAD,
        LAST_SAVE,
    };

} //JobStorePersistStatsProto

} // job
} // server
} // android
} // com

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_JOBSCHEDULER_PROTO_STREAM_H
