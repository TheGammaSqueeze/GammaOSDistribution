// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/server/powermanagerservice.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_POWERMANAGERSERVICE_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_POWERMANAGERSERVICE_PROTO_STREAM_H

namespace com {
namespace android {
namespace server {
namespace power {

// message PowerManagerServiceDumpProto
namespace PowerManagerServiceDumpProto {
    // message ConstantsProto
    namespace ConstantsProto {
        // optional bool is_no_cached_wake_locks = 1;
        const uint64_t IS_NO_CACHED_WAKE_LOCKS = 0x0000010800000001LL;

        static const int _FIELD_COUNT = 1;
        static const char* _FIELD_NAMES[1] = {
            "is_no_cached_wake_locks",
        };
        static const uint64_t _FIELD_IDS[1] = {
            IS_NO_CACHED_WAKE_LOCKS,
        };

    } //ConstantsProto

    // message ActiveWakeLocksProto
    namespace ActiveWakeLocksProto {
        // optional bool is_cpu = 1;
        const uint64_t IS_CPU = 0x0000010800000001LL;

        // optional bool is_screen_bright = 2;
        const uint64_t IS_SCREEN_BRIGHT = 0x0000010800000002LL;

        // optional bool is_screen_dim = 3;
        const uint64_t IS_SCREEN_DIM = 0x0000010800000003LL;

        // optional bool is_button_bright = 4;
        const uint64_t IS_BUTTON_BRIGHT = 0x0000010800000004LL;

        // optional bool is_proximity_screen_off = 5;
        const uint64_t IS_PROXIMITY_SCREEN_OFF = 0x0000010800000005LL;

        // optional bool is_stay_awake = 6;
        const uint64_t IS_STAY_AWAKE = 0x0000010800000006LL;

        // optional bool is_doze = 7;
        const uint64_t IS_DOZE = 0x0000010800000007LL;

        // optional bool is_draw = 8;
        const uint64_t IS_DRAW = 0x0000010800000008LL;

        static const int _FIELD_COUNT = 8;
        static const char* _FIELD_NAMES[8] = {
            "is_cpu",
            "is_screen_bright",
            "is_screen_dim",
            "is_button_bright",
            "is_proximity_screen_off",
            "is_stay_awake",
            "is_doze",
            "is_draw",
        };
        static const uint64_t _FIELD_IDS[8] = {
            IS_CPU,
            IS_SCREEN_BRIGHT,
            IS_SCREEN_DIM,
            IS_BUTTON_BRIGHT,
            IS_PROXIMITY_SCREEN_OFF,
            IS_STAY_AWAKE,
            IS_DOZE,
            IS_DRAW,
        };

    } //ActiveWakeLocksProto

    // message UserActivityProto
    namespace UserActivityProto {
        // optional bool is_screen_bright = 1;
        const uint64_t IS_SCREEN_BRIGHT = 0x0000010800000001LL;

        // optional bool is_screen_dim = 2;
        const uint64_t IS_SCREEN_DIM = 0x0000010800000002LL;

        // optional bool is_screen_dream = 3;
        const uint64_t IS_SCREEN_DREAM = 0x0000010800000003LL;

        // optional int64 last_user_activity_time_ms = 4;
        const uint64_t LAST_USER_ACTIVITY_TIME_MS = 0x0000010300000004LL;

        // optional int64 last_user_activity_time_no_change_lights_ms = 5;
        const uint64_t LAST_USER_ACTIVITY_TIME_NO_CHANGE_LIGHTS_MS = 0x0000010300000005LL;

        // optional int32 display_group_id = 6;
        const uint64_t DISPLAY_GROUP_ID = 0x0000010500000006LL;

        static const int _FIELD_COUNT = 6;
        static const char* _FIELD_NAMES[6] = {
            "is_screen_bright",
            "is_screen_dim",
            "is_screen_dream",
            "last_user_activity_time_ms",
            "last_user_activity_time_no_change_lights_ms",
            "display_group_id",
        };
        static const uint64_t _FIELD_IDS[6] = {
            IS_SCREEN_BRIGHT,
            IS_SCREEN_DIM,
            IS_SCREEN_DREAM,
            LAST_USER_ACTIVITY_TIME_MS,
            LAST_USER_ACTIVITY_TIME_NO_CHANGE_LIGHTS_MS,
            DISPLAY_GROUP_ID,
        };

    } //UserActivityProto

    // message UidStateProto
    namespace UidStateProto {
        // optional int32 uid = 1;
        const uint64_t UID = 0x0000010500000001LL;

        // optional string uid_string = 2;
        const uint64_t UID_STRING = 0x0000010900000002LL;

        // optional bool is_active = 3;
        const uint64_t IS_ACTIVE = 0x0000010800000003LL;

        // optional int32 num_wake_locks = 4;
        const uint64_t NUM_WAKE_LOCKS = 0x0000010500000004LL;

        // optional .android.app.ProcessStateEnum process_state = 5;
        const uint64_t PROCESS_STATE = 0x0000010e00000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "uid",
            "uid_string",
            "is_active",
            "num_wake_locks",
            "process_state",
        };
        static const uint64_t _FIELD_IDS[5] = {
            UID,
            UID_STRING,
            IS_ACTIVE,
            NUM_WAKE_LOCKS,
            PROCESS_STATE,
        };

    } //UidStateProto

    // optional .com.android.server.power.PowerManagerServiceDumpProto.ConstantsProto constants = 1;
    const uint64_t CONSTANTS = 0x0000010b00000001LL;

    // optional int32 dirty = 2;
    const uint64_t DIRTY = 0x0000010500000002LL;

    // optional .android.os.PowerManagerInternalProto.Wakefulness wakefulness = 3;
    const uint64_t WAKEFULNESS = 0x0000010e00000003LL;

    // optional bool is_wakefulness_changing = 4;
    const uint64_t IS_WAKEFULNESS_CHANGING = 0x0000010800000004LL;

    // optional bool is_powered = 5;
    const uint64_t IS_POWERED = 0x0000010800000005LL;

    // optional .android.os.BatteryPluggedStateEnum plug_type = 6;
    const uint64_t PLUG_TYPE = 0x0000010e00000006LL;

    // optional int32 battery_level = 7;
    const uint64_t BATTERY_LEVEL = 0x0000010500000007LL;

    // optional int32 battery_level_when_dream_started = 8;
    const uint64_t BATTERY_LEVEL_WHEN_DREAM_STARTED = 0x0000010500000008LL;

    // optional .android.content.IntentProto.DockState dock_state = 9;
    const uint64_t DOCK_STATE = 0x0000010e00000009LL;

    // optional bool is_stay_on = 10;
    const uint64_t IS_STAY_ON = 0x000001080000000aLL;

    // optional bool is_proximity_positive = 11;
    const uint64_t IS_PROXIMITY_POSITIVE = 0x000001080000000bLL;

    // optional bool is_boot_completed = 12;
    const uint64_t IS_BOOT_COMPLETED = 0x000001080000000cLL;

    // optional bool is_system_ready = 13;
    const uint64_t IS_SYSTEM_READY = 0x000001080000000dLL;

    // optional bool is_hal_auto_suspend_mode_enabled = 14;
    const uint64_t IS_HAL_AUTO_SUSPEND_MODE_ENABLED = 0x000001080000000eLL;

    // optional bool is_hal_auto_interactive_mode_enabled = 15;
    const uint64_t IS_HAL_AUTO_INTERACTIVE_MODE_ENABLED = 0x000001080000000fLL;

    // optional .com.android.server.power.PowerManagerServiceDumpProto.ActiveWakeLocksProto active_wake_locks = 16;
    const uint64_t ACTIVE_WAKE_LOCKS = 0x0000010b00000010LL;

    // optional int64 notify_long_scheduled_ms = 17;
    const uint64_t NOTIFY_LONG_SCHEDULED_MS = 0x0000010300000011LL;

    // optional int64 notify_long_dispatched_ms = 18;
    const uint64_t NOTIFY_LONG_DISPATCHED_MS = 0x0000010300000012LL;

    // optional int64 notify_long_next_check_ms = 19;
    const uint64_t NOTIFY_LONG_NEXT_CHECK_MS = 0x0000010300000013LL;

    // repeated .com.android.server.power.PowerManagerServiceDumpProto.UserActivityProto user_activity = 20;
    const uint64_t USER_ACTIVITY = 0x0000020b00000014LL;

    // optional bool is_request_wait_for_negative_proximity = 21;
    const uint64_t IS_REQUEST_WAIT_FOR_NEGATIVE_PROXIMITY = 0x0000010800000015LL;

    // optional bool is_sandman_scheduled = 22;
    const uint64_t IS_SANDMAN_SCHEDULED = 0x0000010800000016LL;

    // optional bool is_sandman_summoned = 23;
    const uint64_t IS_SANDMAN_SUMMONED = 0x0000010800000017LL;

    // optional bool is_battery_level_low = 24;
    const uint64_t IS_BATTERY_LEVEL_LOW = 0x0000010800000018LL;

    // optional bool is_light_device_idle_mode = 25;
    const uint64_t IS_LIGHT_DEVICE_IDLE_MODE = 0x0000010800000019LL;

    // optional bool is_device_idle_mode = 26;
    const uint64_t IS_DEVICE_IDLE_MODE = 0x000001080000001aLL;

    // repeated int32 device_idle_whitelist = 27;
    const uint64_t DEVICE_IDLE_WHITELIST = 0x000002050000001bLL;

    // repeated int32 device_idle_temp_whitelist = 28;
    const uint64_t DEVICE_IDLE_TEMP_WHITELIST = 0x000002050000001cLL;

    // optional int64 last_wake_time_ms = 29;
    const uint64_t LAST_WAKE_TIME_MS = 0x000001030000001dLL;

    // optional int64 last_sleep_time_ms = 30;
    const uint64_t LAST_SLEEP_TIME_MS = 0x000001030000001eLL;

    // optional int64 last_user_activity_time_ms = 31;
    const uint64_t LAST_USER_ACTIVITY_TIME_MS = 0x000001030000001fLL;

    // optional int64 last_user_activity_time_no_change_lights_ms = 32;
    const uint64_t LAST_USER_ACTIVITY_TIME_NO_CHANGE_LIGHTS_MS = 0x0000010300000020LL;

    // optional int64 last_interactive_power_hint_time_ms = 33;
    const uint64_t LAST_INTERACTIVE_POWER_HINT_TIME_MS = 0x0000010300000021LL;

    // optional int64 last_screen_brightness_boost_time_ms = 34;
    const uint64_t LAST_SCREEN_BRIGHTNESS_BOOST_TIME_MS = 0x0000010300000022LL;

    // optional bool is_screen_brightness_boost_in_progress = 35;
    const uint64_t IS_SCREEN_BRIGHTNESS_BOOST_IN_PROGRESS = 0x0000010800000023LL;

    // optional bool is_display_ready = 36;
    const uint64_t IS_DISPLAY_READY = 0x0000010800000024LL;

    // optional bool is_holding_wake_lock_suspend_blocker = 37;
    const uint64_t IS_HOLDING_WAKE_LOCK_SUSPEND_BLOCKER = 0x0000010800000025LL;

    // optional bool is_holding_display_suspend_blocker = 38;
    const uint64_t IS_HOLDING_DISPLAY_SUSPEND_BLOCKER = 0x0000010800000026LL;

    // optional .com.android.server.power.PowerServiceSettingsAndConfigurationDumpProto settings_and_configuration = 39;
    const uint64_t SETTINGS_AND_CONFIGURATION = 0x0000010b00000027LL;

    // optional sint32 sleep_timeout_ms = 40;
    const uint64_t SLEEP_TIMEOUT_MS = 0x0000011100000028LL;

    // optional int32 screen_off_timeout_ms = 41;
    const uint64_t SCREEN_OFF_TIMEOUT_MS = 0x0000010500000029LL;

    // optional int32 screen_dim_duration_ms = 42;
    const uint64_t SCREEN_DIM_DURATION_MS = 0x000001050000002aLL;

    // optional bool are_uids_changing = 43;
    const uint64_t ARE_UIDS_CHANGING = 0x000001080000002bLL;

    // optional bool are_uids_changed = 44;
    const uint64_t ARE_UIDS_CHANGED = 0x000001080000002cLL;

    // repeated .com.android.server.power.PowerManagerServiceDumpProto.UidStateProto uid_states = 45;
    const uint64_t UID_STATES = 0x0000020b0000002dLL;

    // optional .android.os.LooperProto looper = 46;
    const uint64_t LOOPER = 0x0000010b0000002eLL;

    // repeated .com.android.server.power.WakeLockProto wake_locks = 47;
    const uint64_t WAKE_LOCKS = 0x0000020b0000002fLL;

    // repeated .com.android.server.power.SuspendBlockerProto suspend_blockers = 48;
    const uint64_t SUSPEND_BLOCKERS = 0x0000020b00000030LL;

    // optional .com.android.server.power.WirelessChargerDetectorProto wireless_charger_detector = 49;
    const uint64_t WIRELESS_CHARGER_DETECTOR = 0x0000010b00000031LL;

    // optional .com.android.server.power.BatterySaverStateMachineProto battery_saver_state_machine = 50;
    const uint64_t BATTERY_SAVER_STATE_MACHINE = 0x0000010b00000032LL;

    // optional sint32 attentive_timeout_ms = 51;
    const uint64_t ATTENTIVE_TIMEOUT_MS = 0x0000011100000033LL;

    // optional int64 enhanced_discharge_time_elapsed = 52;
    const uint64_t ENHANCED_DISCHARGE_TIME_ELAPSED = 0x0000010300000034LL;

    // optional int64 last_enhanced_discharge_time_updated_elapsed = 53;
    const uint64_t LAST_ENHANCED_DISCHARGE_TIME_UPDATED_ELAPSED = 0x0000010300000035LL;

    // optional bool is_enhanced_discharge_prediction_personalized = 54;
    const uint64_t IS_ENHANCED_DISCHARGE_PREDICTION_PERSONALIZED = 0x0000010800000036LL;

    static const int _FIELD_COUNT = 54;
    static const char* _FIELD_NAMES[54] = {
        "constants",
        "dirty",
        "wakefulness",
        "is_wakefulness_changing",
        "is_powered",
        "plug_type",
        "battery_level",
        "battery_level_when_dream_started",
        "dock_state",
        "is_stay_on",
        "is_proximity_positive",
        "is_boot_completed",
        "is_system_ready",
        "is_hal_auto_suspend_mode_enabled",
        "is_hal_auto_interactive_mode_enabled",
        "active_wake_locks",
        "notify_long_scheduled_ms",
        "notify_long_dispatched_ms",
        "notify_long_next_check_ms",
        "user_activity",
        "is_request_wait_for_negative_proximity",
        "is_sandman_scheduled",
        "is_sandman_summoned",
        "is_battery_level_low",
        "is_light_device_idle_mode",
        "is_device_idle_mode",
        "device_idle_whitelist",
        "device_idle_temp_whitelist",
        "last_wake_time_ms",
        "last_sleep_time_ms",
        "last_user_activity_time_ms",
        "last_user_activity_time_no_change_lights_ms",
        "last_interactive_power_hint_time_ms",
        "last_screen_brightness_boost_time_ms",
        "is_screen_brightness_boost_in_progress",
        "is_display_ready",
        "is_holding_wake_lock_suspend_blocker",
        "is_holding_display_suspend_blocker",
        "settings_and_configuration",
        "sleep_timeout_ms",
        "screen_off_timeout_ms",
        "screen_dim_duration_ms",
        "are_uids_changing",
        "are_uids_changed",
        "uid_states",
        "looper",
        "wake_locks",
        "suspend_blockers",
        "wireless_charger_detector",
        "battery_saver_state_machine",
        "attentive_timeout_ms",
        "enhanced_discharge_time_elapsed",
        "last_enhanced_discharge_time_updated_elapsed",
        "is_enhanced_discharge_prediction_personalized",
    };
    static const uint64_t _FIELD_IDS[54] = {
        CONSTANTS,
        DIRTY,
        WAKEFULNESS,
        IS_WAKEFULNESS_CHANGING,
        IS_POWERED,
        PLUG_TYPE,
        BATTERY_LEVEL,
        BATTERY_LEVEL_WHEN_DREAM_STARTED,
        DOCK_STATE,
        IS_STAY_ON,
        IS_PROXIMITY_POSITIVE,
        IS_BOOT_COMPLETED,
        IS_SYSTEM_READY,
        IS_HAL_AUTO_SUSPEND_MODE_ENABLED,
        IS_HAL_AUTO_INTERACTIVE_MODE_ENABLED,
        ACTIVE_WAKE_LOCKS,
        NOTIFY_LONG_SCHEDULED_MS,
        NOTIFY_LONG_DISPATCHED_MS,
        NOTIFY_LONG_NEXT_CHECK_MS,
        USER_ACTIVITY,
        IS_REQUEST_WAIT_FOR_NEGATIVE_PROXIMITY,
        IS_SANDMAN_SCHEDULED,
        IS_SANDMAN_SUMMONED,
        IS_BATTERY_LEVEL_LOW,
        IS_LIGHT_DEVICE_IDLE_MODE,
        IS_DEVICE_IDLE_MODE,
        DEVICE_IDLE_WHITELIST,
        DEVICE_IDLE_TEMP_WHITELIST,
        LAST_WAKE_TIME_MS,
        LAST_SLEEP_TIME_MS,
        LAST_USER_ACTIVITY_TIME_MS,
        LAST_USER_ACTIVITY_TIME_NO_CHANGE_LIGHTS_MS,
        LAST_INTERACTIVE_POWER_HINT_TIME_MS,
        LAST_SCREEN_BRIGHTNESS_BOOST_TIME_MS,
        IS_SCREEN_BRIGHTNESS_BOOST_IN_PROGRESS,
        IS_DISPLAY_READY,
        IS_HOLDING_WAKE_LOCK_SUSPEND_BLOCKER,
        IS_HOLDING_DISPLAY_SUSPEND_BLOCKER,
        SETTINGS_AND_CONFIGURATION,
        SLEEP_TIMEOUT_MS,
        SCREEN_OFF_TIMEOUT_MS,
        SCREEN_DIM_DURATION_MS,
        ARE_UIDS_CHANGING,
        ARE_UIDS_CHANGED,
        UID_STATES,
        LOOPER,
        WAKE_LOCKS,
        SUSPEND_BLOCKERS,
        WIRELESS_CHARGER_DETECTOR,
        BATTERY_SAVER_STATE_MACHINE,
        ATTENTIVE_TIMEOUT_MS,
        ENHANCED_DISCHARGE_TIME_ELAPSED,
        LAST_ENHANCED_DISCHARGE_TIME_UPDATED_ELAPSED,
        IS_ENHANCED_DISCHARGE_PREDICTION_PERSONALIZED,
    };

} //PowerManagerServiceDumpProto

// message SuspendBlockerProto
namespace SuspendBlockerProto {
    // optional string name = 1;
    const uint64_t NAME = 0x0000010900000001LL;

    // optional int32 reference_count = 2;
    const uint64_t REFERENCE_COUNT = 0x0000010500000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "name",
        "reference_count",
    };
    static const uint64_t _FIELD_IDS[2] = {
        NAME,
        REFERENCE_COUNT,
    };

} //SuspendBlockerProto

// message WakeLockProto
namespace WakeLockProto {
    // message WakeLockFlagsProto
    namespace WakeLockFlagsProto {
        // optional bool is_acquire_causes_wakeup = 1;
        const uint64_t IS_ACQUIRE_CAUSES_WAKEUP = 0x0000010800000001LL;

        // optional bool is_on_after_release = 2;
        const uint64_t IS_ON_AFTER_RELEASE = 0x0000010800000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "is_acquire_causes_wakeup",
            "is_on_after_release",
        };
        static const uint64_t _FIELD_IDS[2] = {
            IS_ACQUIRE_CAUSES_WAKEUP,
            IS_ON_AFTER_RELEASE,
        };

    } //WakeLockFlagsProto

    // optional .android.os.WakeLockLevelEnum lock_level = 1;
    const uint64_t LOCK_LEVEL = 0x0000010e00000001LL;

    // optional string tag = 2;
    const uint64_t TAG = 0x0000010900000002LL;

    // optional .com.android.server.power.WakeLockProto.WakeLockFlagsProto flags = 3;
    const uint64_t FLAGS = 0x0000010b00000003LL;

    // optional bool is_disabled = 4;
    const uint64_t IS_DISABLED = 0x0000010800000004LL;

    // optional int64 acq_ms = 5;
    const uint64_t ACQ_MS = 0x0000010300000005LL;

    // optional bool is_notified_long = 6;
    const uint64_t IS_NOTIFIED_LONG = 0x0000010800000006LL;

    // optional int32 uid = 7;
    const uint64_t UID = 0x0000010500000007LL;

    // optional int32 pid = 8;
    const uint64_t PID = 0x0000010500000008LL;

    // optional .android.os.WorkSourceProto work_source = 9;
    const uint64_t WORK_SOURCE = 0x0000010b00000009LL;

    static const int _FIELD_COUNT = 9;
    static const char* _FIELD_NAMES[9] = {
        "lock_level",
        "tag",
        "flags",
        "is_disabled",
        "acq_ms",
        "is_notified_long",
        "uid",
        "pid",
        "work_source",
    };
    static const uint64_t _FIELD_IDS[9] = {
        LOCK_LEVEL,
        TAG,
        FLAGS,
        IS_DISABLED,
        ACQ_MS,
        IS_NOTIFIED_LONG,
        UID,
        PID,
        WORK_SOURCE,
    };

} //WakeLockProto

// message PowerServiceSettingsAndConfigurationDumpProto
namespace PowerServiceSettingsAndConfigurationDumpProto {
    // message StayOnWhilePluggedInProto
    namespace StayOnWhilePluggedInProto {
        // optional bool is_stay_on_while_plugged_in_ac = 1;
        const uint64_t IS_STAY_ON_WHILE_PLUGGED_IN_AC = 0x0000010800000001LL;

        // optional bool is_stay_on_while_plugged_in_usb = 2;
        const uint64_t IS_STAY_ON_WHILE_PLUGGED_IN_USB = 0x0000010800000002LL;

        // optional bool is_stay_on_while_plugged_in_wireless = 3;
        const uint64_t IS_STAY_ON_WHILE_PLUGGED_IN_WIRELESS = 0x0000010800000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "is_stay_on_while_plugged_in_ac",
            "is_stay_on_while_plugged_in_usb",
            "is_stay_on_while_plugged_in_wireless",
        };
        static const uint64_t _FIELD_IDS[3] = {
            IS_STAY_ON_WHILE_PLUGGED_IN_AC,
            IS_STAY_ON_WHILE_PLUGGED_IN_USB,
            IS_STAY_ON_WHILE_PLUGGED_IN_WIRELESS,
        };

    } //StayOnWhilePluggedInProto

    // message ScreenBrightnessSettingLimitsProto
    namespace ScreenBrightnessSettingLimitsProto {
        // optional float setting_minimum_float = 4;
        const uint64_t SETTING_MINIMUM_FLOAT = 0x0000010200000004LL;

        // optional float setting_maximum_float = 5;
        const uint64_t SETTING_MAXIMUM_FLOAT = 0x0000010200000005LL;

        // optional float setting_default_float = 6;
        const uint64_t SETTING_DEFAULT_FLOAT = 0x0000010200000006LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "setting_minimum_float",
            "setting_maximum_float",
            "setting_default_float",
        };
        static const uint64_t _FIELD_IDS[3] = {
            SETTING_MINIMUM_FLOAT,
            SETTING_MAXIMUM_FLOAT,
            SETTING_DEFAULT_FLOAT,
        };

    } //ScreenBrightnessSettingLimitsProto

    // optional bool is_decouple_hal_auto_suspend_mode_from_display_config = 1;
    const uint64_t IS_DECOUPLE_HAL_AUTO_SUSPEND_MODE_FROM_DISPLAY_CONFIG = 0x0000010800000001LL;

    // optional bool is_decouple_hal_interactive_mode_from_display_config = 2;
    const uint64_t IS_DECOUPLE_HAL_INTERACTIVE_MODE_FROM_DISPLAY_CONFIG = 0x0000010800000002LL;

    // optional bool is_wake_up_when_plugged_or_unplugged_config = 3;
    const uint64_t IS_WAKE_UP_WHEN_PLUGGED_OR_UNPLUGGED_CONFIG = 0x0000010800000003LL;

    // optional bool is_wake_up_when_plugged_or_unplugged_in_theater_mode_config = 4;
    const uint64_t IS_WAKE_UP_WHEN_PLUGGED_OR_UNPLUGGED_IN_THEATER_MODE_CONFIG = 0x0000010800000004LL;

    // optional bool is_theater_mode_enabled = 5;
    const uint64_t IS_THEATER_MODE_ENABLED = 0x0000010800000005LL;

    // optional bool is_suspend_when_screen_off_due_to_proximity_config = 6;
    const uint64_t IS_SUSPEND_WHEN_SCREEN_OFF_DUE_TO_PROXIMITY_CONFIG = 0x0000010800000006LL;

    // optional bool are_dreams_supported_config = 7;
    const uint64_t ARE_DREAMS_SUPPORTED_CONFIG = 0x0000010800000007LL;

    // optional bool are_dreams_enabled_by_default_config = 8;
    const uint64_t ARE_DREAMS_ENABLED_BY_DEFAULT_CONFIG = 0x0000010800000008LL;

    // optional bool are_dreams_activated_on_sleep_by_default_config = 9;
    const uint64_t ARE_DREAMS_ACTIVATED_ON_SLEEP_BY_DEFAULT_CONFIG = 0x0000010800000009LL;

    // optional bool are_dreams_activated_on_dock_by_default_config = 10;
    const uint64_t ARE_DREAMS_ACTIVATED_ON_DOCK_BY_DEFAULT_CONFIG = 0x000001080000000aLL;

    // optional bool are_dreams_enabled_on_battery_config = 11;
    const uint64_t ARE_DREAMS_ENABLED_ON_BATTERY_CONFIG = 0x000001080000000bLL;

    // optional sint32 dreams_battery_level_minimum_when_powered_config = 12;
    const uint64_t DREAMS_BATTERY_LEVEL_MINIMUM_WHEN_POWERED_CONFIG = 0x000001110000000cLL;

    // optional sint32 dreams_battery_level_minimum_when_not_powered_config = 13;
    const uint64_t DREAMS_BATTERY_LEVEL_MINIMUM_WHEN_NOT_POWERED_CONFIG = 0x000001110000000dLL;

    // optional sint32 dreams_battery_level_drain_cutoff_config = 14;
    const uint64_t DREAMS_BATTERY_LEVEL_DRAIN_CUTOFF_CONFIG = 0x000001110000000eLL;

    // optional bool are_dreams_enabled_setting = 15;
    const uint64_t ARE_DREAMS_ENABLED_SETTING = 0x000001080000000fLL;

    // optional bool are_dreams_activate_on_sleep_setting = 16;
    const uint64_t ARE_DREAMS_ACTIVATE_ON_SLEEP_SETTING = 0x0000010800000010LL;

    // optional bool are_dreams_activate_on_dock_setting = 17;
    const uint64_t ARE_DREAMS_ACTIVATE_ON_DOCK_SETTING = 0x0000010800000011LL;

    // optional bool is_doze_after_screen_off_config = 18;
    const uint64_t IS_DOZE_AFTER_SCREEN_OFF_CONFIG = 0x0000010800000012LL;

    // optional int32 minimum_screen_off_timeout_config_ms = 19;
    const uint64_t MINIMUM_SCREEN_OFF_TIMEOUT_CONFIG_MS = 0x0000010500000013LL;

    // optional int32 maximum_screen_dim_duration_config_ms = 20;
    const uint64_t MAXIMUM_SCREEN_DIM_DURATION_CONFIG_MS = 0x0000010500000014LL;

    // optional float maximum_screen_dim_ratio_config = 21;
    const uint64_t MAXIMUM_SCREEN_DIM_RATIO_CONFIG = 0x0000010200000015LL;

    // optional int32 screen_off_timeout_setting_ms = 22;
    const uint64_t SCREEN_OFF_TIMEOUT_SETTING_MS = 0x0000010500000016LL;

    // optional sint32 sleep_timeout_setting_ms = 23;
    const uint64_t SLEEP_TIMEOUT_SETTING_MS = 0x0000011100000017LL;

    // optional int32 maximum_screen_off_timeout_from_device_admin_ms = 24;
    const uint64_t MAXIMUM_SCREEN_OFF_TIMEOUT_FROM_DEVICE_ADMIN_MS = 0x0000010500000018LL;

    // optional bool is_maximum_screen_off_timeout_from_device_admin_enforced_locked = 25;
    const uint64_t IS_MAXIMUM_SCREEN_OFF_TIMEOUT_FROM_DEVICE_ADMIN_ENFORCED_LOCKED = 0x0000010800000019LL;

    // optional .com.android.server.power.PowerServiceSettingsAndConfigurationDumpProto.StayOnWhilePluggedInProto stay_on_while_plugged_in = 26;
    const uint64_t STAY_ON_WHILE_PLUGGED_IN = 0x0000010b0000001aLL;

    // optional .android.providers.settings.SettingsProto.ScreenBrightnessMode screen_brightness_mode_setting = 27;
    const uint64_t SCREEN_BRIGHTNESS_MODE_SETTING = 0x0000010e0000001bLL;

    // optional sint32 screen_brightness_override_from_window_manager = 28;
    const uint64_t SCREEN_BRIGHTNESS_OVERRIDE_FROM_WINDOW_MANAGER = 0x000001110000001cLL;

    // optional sint64 user_activity_timeout_override_from_window_manager_ms = 29;
    const uint64_t USER_ACTIVITY_TIMEOUT_OVERRIDE_FROM_WINDOW_MANAGER_MS = 0x000001120000001dLL;

    // optional bool is_user_inactive_override_from_window_manager = 30;
    const uint64_t IS_USER_INACTIVE_OVERRIDE_FROM_WINDOW_MANAGER = 0x000001080000001eLL;

    // optional .android.view.DisplayStateEnum doze_screen_state_override_from_dream_manager = 31;
    const uint64_t DOZE_SCREEN_STATE_OVERRIDE_FROM_DREAM_MANAGER = 0x0000010e0000001fLL;

    // optional float dozed_screen_brightness_override_from_dream_manager = 32;
    const uint64_t DOZED_SCREEN_BRIGHTNESS_OVERRIDE_FROM_DREAM_MANAGER = 0x0000010200000020LL;

    // optional .com.android.server.power.PowerServiceSettingsAndConfigurationDumpProto.ScreenBrightnessSettingLimitsProto screen_brightness_setting_limits = 33;
    const uint64_t SCREEN_BRIGHTNESS_SETTING_LIMITS = 0x0000010b00000021LL;

    // optional bool is_double_tap_wake_enabled = 34;
    const uint64_t IS_DOUBLE_TAP_WAKE_ENABLED = 0x0000010800000022LL;

    // optional bool is_vr_mode_enabled = 35;
    const uint64_t IS_VR_MODE_ENABLED = 0x0000010800000023LL;

    // optional bool draw_wake_lock_override_from_sidekick = 36;
    const uint64_t DRAW_WAKE_LOCK_OVERRIDE_FROM_SIDEKICK = 0x0000010800000024LL;

    // optional sint32 attentive_timeout_setting_ms = 37;
    const uint64_t ATTENTIVE_TIMEOUT_SETTING_MS = 0x0000011100000025LL;

    // optional sint32 attentive_timeout_config_ms = 38;
    const uint64_t ATTENTIVE_TIMEOUT_CONFIG_MS = 0x0000011100000026LL;

    // optional sint32 attentive_warning_duration_config_ms = 39;
    const uint64_t ATTENTIVE_WARNING_DURATION_CONFIG_MS = 0x0000011100000027LL;

    static const int _FIELD_COUNT = 39;
    static const char* _FIELD_NAMES[39] = {
        "is_decouple_hal_auto_suspend_mode_from_display_config",
        "is_decouple_hal_interactive_mode_from_display_config",
        "is_wake_up_when_plugged_or_unplugged_config",
        "is_wake_up_when_plugged_or_unplugged_in_theater_mode_config",
        "is_theater_mode_enabled",
        "is_suspend_when_screen_off_due_to_proximity_config",
        "are_dreams_supported_config",
        "are_dreams_enabled_by_default_config",
        "are_dreams_activated_on_sleep_by_default_config",
        "are_dreams_activated_on_dock_by_default_config",
        "are_dreams_enabled_on_battery_config",
        "dreams_battery_level_minimum_when_powered_config",
        "dreams_battery_level_minimum_when_not_powered_config",
        "dreams_battery_level_drain_cutoff_config",
        "are_dreams_enabled_setting",
        "are_dreams_activate_on_sleep_setting",
        "are_dreams_activate_on_dock_setting",
        "is_doze_after_screen_off_config",
        "minimum_screen_off_timeout_config_ms",
        "maximum_screen_dim_duration_config_ms",
        "maximum_screen_dim_ratio_config",
        "screen_off_timeout_setting_ms",
        "sleep_timeout_setting_ms",
        "maximum_screen_off_timeout_from_device_admin_ms",
        "is_maximum_screen_off_timeout_from_device_admin_enforced_locked",
        "stay_on_while_plugged_in",
        "screen_brightness_mode_setting",
        "screen_brightness_override_from_window_manager",
        "user_activity_timeout_override_from_window_manager_ms",
        "is_user_inactive_override_from_window_manager",
        "doze_screen_state_override_from_dream_manager",
        "dozed_screen_brightness_override_from_dream_manager",
        "screen_brightness_setting_limits",
        "is_double_tap_wake_enabled",
        "is_vr_mode_enabled",
        "draw_wake_lock_override_from_sidekick",
        "attentive_timeout_setting_ms",
        "attentive_timeout_config_ms",
        "attentive_warning_duration_config_ms",
    };
    static const uint64_t _FIELD_IDS[39] = {
        IS_DECOUPLE_HAL_AUTO_SUSPEND_MODE_FROM_DISPLAY_CONFIG,
        IS_DECOUPLE_HAL_INTERACTIVE_MODE_FROM_DISPLAY_CONFIG,
        IS_WAKE_UP_WHEN_PLUGGED_OR_UNPLUGGED_CONFIG,
        IS_WAKE_UP_WHEN_PLUGGED_OR_UNPLUGGED_IN_THEATER_MODE_CONFIG,
        IS_THEATER_MODE_ENABLED,
        IS_SUSPEND_WHEN_SCREEN_OFF_DUE_TO_PROXIMITY_CONFIG,
        ARE_DREAMS_SUPPORTED_CONFIG,
        ARE_DREAMS_ENABLED_BY_DEFAULT_CONFIG,
        ARE_DREAMS_ACTIVATED_ON_SLEEP_BY_DEFAULT_CONFIG,
        ARE_DREAMS_ACTIVATED_ON_DOCK_BY_DEFAULT_CONFIG,
        ARE_DREAMS_ENABLED_ON_BATTERY_CONFIG,
        DREAMS_BATTERY_LEVEL_MINIMUM_WHEN_POWERED_CONFIG,
        DREAMS_BATTERY_LEVEL_MINIMUM_WHEN_NOT_POWERED_CONFIG,
        DREAMS_BATTERY_LEVEL_DRAIN_CUTOFF_CONFIG,
        ARE_DREAMS_ENABLED_SETTING,
        ARE_DREAMS_ACTIVATE_ON_SLEEP_SETTING,
        ARE_DREAMS_ACTIVATE_ON_DOCK_SETTING,
        IS_DOZE_AFTER_SCREEN_OFF_CONFIG,
        MINIMUM_SCREEN_OFF_TIMEOUT_CONFIG_MS,
        MAXIMUM_SCREEN_DIM_DURATION_CONFIG_MS,
        MAXIMUM_SCREEN_DIM_RATIO_CONFIG,
        SCREEN_OFF_TIMEOUT_SETTING_MS,
        SLEEP_TIMEOUT_SETTING_MS,
        MAXIMUM_SCREEN_OFF_TIMEOUT_FROM_DEVICE_ADMIN_MS,
        IS_MAXIMUM_SCREEN_OFF_TIMEOUT_FROM_DEVICE_ADMIN_ENFORCED_LOCKED,
        STAY_ON_WHILE_PLUGGED_IN,
        SCREEN_BRIGHTNESS_MODE_SETTING,
        SCREEN_BRIGHTNESS_OVERRIDE_FROM_WINDOW_MANAGER,
        USER_ACTIVITY_TIMEOUT_OVERRIDE_FROM_WINDOW_MANAGER_MS,
        IS_USER_INACTIVE_OVERRIDE_FROM_WINDOW_MANAGER,
        DOZE_SCREEN_STATE_OVERRIDE_FROM_DREAM_MANAGER,
        DOZED_SCREEN_BRIGHTNESS_OVERRIDE_FROM_DREAM_MANAGER,
        SCREEN_BRIGHTNESS_SETTING_LIMITS,
        IS_DOUBLE_TAP_WAKE_ENABLED,
        IS_VR_MODE_ENABLED,
        DRAW_WAKE_LOCK_OVERRIDE_FROM_SIDEKICK,
        ATTENTIVE_TIMEOUT_SETTING_MS,
        ATTENTIVE_TIMEOUT_CONFIG_MS,
        ATTENTIVE_WARNING_DURATION_CONFIG_MS,
    };

} //PowerServiceSettingsAndConfigurationDumpProto

// message BatterySaverStateMachineProto
namespace BatterySaverStateMachineProto {
    // enum StateEnum
    const int STATE_UNKNOWN = 0;
    const int STATE_OFF = 1;
    const int STATE_MANUAL_ON = 2;
    const int STATE_AUTOMATIC_ON = 3;
    const int STATE_OFF_AUTOMATIC_SNOOZED = 4;
    const int STATE_PENDING_STICKY_ON = 5;
    static const int _ENUM_STATE_ENUM_COUNT = 6;
    static const char* _ENUM_STATE_ENUM_NAMES[6] = {
        "STATE_UNKNOWN",
        "STATE_OFF",
        "STATE_MANUAL_ON",
        "STATE_AUTOMATIC_ON",
        "STATE_OFF_AUTOMATIC_SNOOZED",
        "STATE_PENDING_STICKY_ON",
    };
    static const int _ENUM_STATE_ENUM_VALUES[6] = {
        STATE_UNKNOWN,
        STATE_OFF,
        STATE_MANUAL_ON,
        STATE_AUTOMATIC_ON,
        STATE_OFF_AUTOMATIC_SNOOZED,
        STATE_PENDING_STICKY_ON,
    };

    // enum AutomaticTriggerEnum
    const int TRIGGER_PERCENTAGE = 0;
    const int TRIGGER_DYNAMIC = 1;
    static const int _ENUM_AUTOMATIC_TRIGGER_ENUM_COUNT = 2;
    static const char* _ENUM_AUTOMATIC_TRIGGER_ENUM_NAMES[2] = {
        "TRIGGER_PERCENTAGE",
        "TRIGGER_DYNAMIC",
    };
    static const int _ENUM_AUTOMATIC_TRIGGER_ENUM_VALUES[2] = {
        TRIGGER_PERCENTAGE,
        TRIGGER_DYNAMIC,
    };

    // optional bool enabled = 1;
    const uint64_t ENABLED = 0x0000010800000001LL;

    // optional .com.android.server.power.BatterySaverStateMachineProto.StateEnum state = 18;
    const uint64_t STATE = 0x0000010e00000012LL;

    // optional bool is_full_enabled = 14;
    const uint64_t IS_FULL_ENABLED = 0x000001080000000eLL;

    // optional bool is_adaptive_enabled = 15;
    const uint64_t IS_ADAPTIVE_ENABLED = 0x000001080000000fLL;

    // optional bool should_advertise_is_enabled = 16;
    const uint64_t SHOULD_ADVERTISE_IS_ENABLED = 0x0000010800000010LL;

    // optional bool boot_completed = 2;
    const uint64_t BOOT_COMPLETED = 0x0000010800000002LL;

    // optional bool settings_loaded = 3;
    const uint64_t SETTINGS_LOADED = 0x0000010800000003LL;

    // optional bool battery_status_set = 4;
    const uint64_t BATTERY_STATUS_SET = 0x0000010800000004LL;

    // optional bool is_powered = 6;
    const uint64_t IS_POWERED = 0x0000010800000006LL;

    // optional int32 battery_level = 7;
    const uint64_t BATTERY_LEVEL = 0x0000010500000007LL;

    // optional bool is_battery_level_low = 8;
    const uint64_t IS_BATTERY_LEVEL_LOW = 0x0000010800000008LL;

    // optional .com.android.server.power.BatterySaverStateMachineProto.AutomaticTriggerEnum setting_automatic_trigger = 19;
    const uint64_t SETTING_AUTOMATIC_TRIGGER = 0x0000010e00000013LL;

    // optional bool setting_battery_saver_enabled = 9;
    const uint64_t SETTING_BATTERY_SAVER_ENABLED = 0x0000010800000009LL;

    // optional bool setting_battery_saver_enabled_sticky = 10;
    const uint64_t SETTING_BATTERY_SAVER_ENABLED_STICKY = 0x000001080000000aLL;

    // optional int32 setting_battery_saver_trigger_threshold = 11;
    const uint64_t SETTING_BATTERY_SAVER_TRIGGER_THRESHOLD = 0x000001050000000bLL;

    // optional bool setting_battery_saver_sticky_auto_disable_enabled = 12;
    const uint64_t SETTING_BATTERY_SAVER_STICKY_AUTO_DISABLE_ENABLED = 0x000001080000000cLL;

    // optional int32 setting_battery_saver_sticky_auto_disable_threshold = 13;
    const uint64_t SETTING_BATTERY_SAVER_STICKY_AUTO_DISABLE_THRESHOLD = 0x000001050000000dLL;

    // optional int64 last_adaptive_battery_saver_changed_externally_elapsed = 17;
    const uint64_t LAST_ADAPTIVE_BATTERY_SAVER_CHANGED_EXTERNALLY_ELAPSED = 0x0000010300000011LL;

    // optional int32 default_dynamic_disable_threshold = 20;
    const uint64_t DEFAULT_DYNAMIC_DISABLE_THRESHOLD = 0x0000010500000014LL;

    // optional int32 dynamic_disable_threshold = 21;
    const uint64_t DYNAMIC_DISABLE_THRESHOLD = 0x0000010500000015LL;

    // optional bool dynamic_battery_saver_enabled = 22;
    const uint64_t DYNAMIC_BATTERY_SAVER_ENABLED = 0x0000010800000016LL;

    static const int _FIELD_COUNT = 21;
    static const char* _FIELD_NAMES[21] = {
        "enabled",
        "state",
        "is_full_enabled",
        "is_adaptive_enabled",
        "should_advertise_is_enabled",
        "boot_completed",
        "settings_loaded",
        "battery_status_set",
        "is_powered",
        "battery_level",
        "is_battery_level_low",
        "setting_automatic_trigger",
        "setting_battery_saver_enabled",
        "setting_battery_saver_enabled_sticky",
        "setting_battery_saver_trigger_threshold",
        "setting_battery_saver_sticky_auto_disable_enabled",
        "setting_battery_saver_sticky_auto_disable_threshold",
        "last_adaptive_battery_saver_changed_externally_elapsed",
        "default_dynamic_disable_threshold",
        "dynamic_disable_threshold",
        "dynamic_battery_saver_enabled",
    };
    static const uint64_t _FIELD_IDS[21] = {
        ENABLED,
        STATE,
        IS_FULL_ENABLED,
        IS_ADAPTIVE_ENABLED,
        SHOULD_ADVERTISE_IS_ENABLED,
        BOOT_COMPLETED,
        SETTINGS_LOADED,
        BATTERY_STATUS_SET,
        IS_POWERED,
        BATTERY_LEVEL,
        IS_BATTERY_LEVEL_LOW,
        SETTING_AUTOMATIC_TRIGGER,
        SETTING_BATTERY_SAVER_ENABLED,
        SETTING_BATTERY_SAVER_ENABLED_STICKY,
        SETTING_BATTERY_SAVER_TRIGGER_THRESHOLD,
        SETTING_BATTERY_SAVER_STICKY_AUTO_DISABLE_ENABLED,
        SETTING_BATTERY_SAVER_STICKY_AUTO_DISABLE_THRESHOLD,
        LAST_ADAPTIVE_BATTERY_SAVER_CHANGED_EXTERNALLY_ELAPSED,
        DEFAULT_DYNAMIC_DISABLE_THRESHOLD,
        DYNAMIC_DISABLE_THRESHOLD,
        DYNAMIC_BATTERY_SAVER_ENABLED,
    };

} //BatterySaverStateMachineProto

} // power
} // server
} // android
} // com

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_POWERMANAGERSERVICE_PROTO_STREAM_H
