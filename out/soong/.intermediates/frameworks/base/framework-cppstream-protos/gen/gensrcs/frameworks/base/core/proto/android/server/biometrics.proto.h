// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/server/biometrics.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_BIOMETRICS_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_BIOMETRICS_PROTO_STREAM_H

namespace com {
namespace android {
namespace server {
namespace biometrics {

// enum ClientMonitorEnum
const int CM_NONE = 0;
const int CM_UPDATE_ACTIVE_USER = 1;
const int CM_ENROLL = 2;
const int CM_AUTHENTICATE = 3;
const int CM_REMOVE = 4;
const int CM_GET_AUTHENTICATOR_ID = 5;
const int CM_ENUMERATE = 6;
const int CM_INTERNAL_CLEANUP = 7;
const int CM_SET_FEATURE = 8;
const int CM_GET_FEATURE = 9;
const int CM_GENERATE_CHALLENGE = 10;
const int CM_REVOKE_CHALLENGE = 11;
const int CM_RESET_LOCKOUT = 12;
const int CM_DETECT_INTERACTION = 13;
const int CM_INVALIDATION_REQUESTER = 14;
const int CM_INVALIDATE = 15;
const int CM_STOP_USER = 16;
const int CM_START_USER = 17;
static const int _ENUM_CLIENT_MONITOR_ENUM_COUNT = 18;
static const char* _ENUM_CLIENT_MONITOR_ENUM_NAMES[18] = {
    "CM_NONE",
    "CM_UPDATE_ACTIVE_USER",
    "CM_ENROLL",
    "CM_AUTHENTICATE",
    "CM_REMOVE",
    "CM_GET_AUTHENTICATOR_ID",
    "CM_ENUMERATE",
    "CM_INTERNAL_CLEANUP",
    "CM_SET_FEATURE",
    "CM_GET_FEATURE",
    "CM_GENERATE_CHALLENGE",
    "CM_REVOKE_CHALLENGE",
    "CM_RESET_LOCKOUT",
    "CM_DETECT_INTERACTION",
    "CM_INVALIDATION_REQUESTER",
    "CM_INVALIDATE",
    "CM_STOP_USER",
    "CM_START_USER",
};
static const int _ENUM_CLIENT_MONITOR_ENUM_VALUES[18] = {
    CM_NONE,
    CM_UPDATE_ACTIVE_USER,
    CM_ENROLL,
    CM_AUTHENTICATE,
    CM_REMOVE,
    CM_GET_AUTHENTICATOR_ID,
    CM_ENUMERATE,
    CM_INTERNAL_CLEANUP,
    CM_SET_FEATURE,
    CM_GET_FEATURE,
    CM_GENERATE_CHALLENGE,
    CM_REVOKE_CHALLENGE,
    CM_RESET_LOCKOUT,
    CM_DETECT_INTERACTION,
    CM_INVALIDATION_REQUESTER,
    CM_INVALIDATE,
    CM_STOP_USER,
    CM_START_USER,
};

// message BiometricServiceStateProto
namespace BiometricServiceStateProto {
    // enum AuthSessionState
    const int STATE_AUTH_IDLE = 0;
    const int STATE_AUTH_CALLED = 1;
    const int STATE_AUTH_STARTED = 2;
    const int STATE_AUTH_STARTED_UI_SHOWING = 3;
    const int STATE_AUTH_PAUSED = 4;
    const int STATE_AUTH_PAUSED_RESUMING = 5;
    const int STATE_AUTH_PENDING_CONFIRM = 6;
    const int STATE_AUTHENTICATED_PENDING_SYSUI = 7;
    const int STATE_ERROR_PENDING_SYSUI = 8;
    const int STATE_SHOWING_DEVICE_CREDENTIAL = 9;
    const int STATE_CLIENT_DIED_CANCELLING = 10;
    static const int _ENUM_AUTH_SESSION_STATE_COUNT = 11;
    static const char* _ENUM_AUTH_SESSION_STATE_NAMES[11] = {
        "STATE_AUTH_IDLE",
        "STATE_AUTH_CALLED",
        "STATE_AUTH_STARTED",
        "STATE_AUTH_STARTED_UI_SHOWING",
        "STATE_AUTH_PAUSED",
        "STATE_AUTH_PAUSED_RESUMING",
        "STATE_AUTH_PENDING_CONFIRM",
        "STATE_AUTHENTICATED_PENDING_SYSUI",
        "STATE_ERROR_PENDING_SYSUI",
        "STATE_SHOWING_DEVICE_CREDENTIAL",
        "STATE_CLIENT_DIED_CANCELLING",
    };
    static const int _ENUM_AUTH_SESSION_STATE_VALUES[11] = {
        STATE_AUTH_IDLE,
        STATE_AUTH_CALLED,
        STATE_AUTH_STARTED,
        STATE_AUTH_STARTED_UI_SHOWING,
        STATE_AUTH_PAUSED,
        STATE_AUTH_PAUSED_RESUMING,
        STATE_AUTH_PENDING_CONFIRM,
        STATE_AUTHENTICATED_PENDING_SYSUI,
        STATE_ERROR_PENDING_SYSUI,
        STATE_SHOWING_DEVICE_CREDENTIAL,
        STATE_CLIENT_DIED_CANCELLING,
    };

    // enum MultiSensorState
    const int MULTI_SENSOR_STATE_UNKNOWN = 0;
    const int MULTI_SENSOR_STATE_SWITCHING = 1;
    const int MULTI_SENSOR_STATE_FACE_SCANNING = 2;
    const int MULTI_SENSOR_STATE_FP_SCANNING = 3;
    static const int _ENUM_MULTI_SENSOR_STATE_COUNT = 4;
    static const char* _ENUM_MULTI_SENSOR_STATE_NAMES[4] = {
        "UNKNOWN",
        "SWITCHING",
        "FACE_SCANNING",
        "FP_SCANNING",
    };
    static const int _ENUM_MULTI_SENSOR_STATE_VALUES[4] = {
        MULTI_SENSOR_STATE_UNKNOWN,
        MULTI_SENSOR_STATE_SWITCHING,
        MULTI_SENSOR_STATE_FACE_SCANNING,
        MULTI_SENSOR_STATE_FP_SCANNING,
    };

    // repeated .com.android.server.biometrics.SensorServiceStateProto sensor_service_states = 1;
    const uint64_t SENSOR_SERVICE_STATES = 0x0000020b00000001LL;

    // optional .com.android.server.biometrics.BiometricServiceStateProto.AuthSessionState auth_session_state = 2;
    const uint64_t AUTH_SESSION_STATE = 0x0000010e00000002LL;

    // optional .com.android.server.biometrics.BiometricServiceStateProto.MultiSensorState auth_session_multi_sensor_state = 3;
    const uint64_t AUTH_SESSION_MULTI_SENSOR_STATE = 0x0000010e00000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "sensor_service_states",
        "auth_session_state",
        "auth_session_multi_sensor_state",
    };
    static const uint64_t _FIELD_IDS[3] = {
        SENSOR_SERVICE_STATES,
        AUTH_SESSION_STATE,
        AUTH_SESSION_MULTI_SENSOR_STATE,
    };

} //BiometricServiceStateProto

// message SensorServiceStateProto
namespace SensorServiceStateProto {
    // repeated .com.android.server.biometrics.SensorStateProto sensor_states = 1;
    const uint64_t SENSOR_STATES = 0x0000020b00000001LL;

    static const int _FIELD_COUNT = 1;
    static const char* _FIELD_NAMES[1] = {
        "sensor_states",
    };
    static const uint64_t _FIELD_IDS[1] = {
        SENSOR_STATES,
    };

} //SensorServiceStateProto

// message SensorStateProto
namespace SensorStateProto {
    // enum Modality
    const int UNKNOWN = 0;
    const int FINGERPRINT = 1;
    const int FACE = 2;
    const int IRIS = 3;
    static const int _ENUM_MODALITY_COUNT = 4;
    static const char* _ENUM_MODALITY_NAMES[4] = {
        "UNKNOWN",
        "FINGERPRINT",
        "FACE",
        "IRIS",
    };
    static const int _ENUM_MODALITY_VALUES[4] = {
        UNKNOWN,
        FINGERPRINT,
        FACE,
        IRIS,
    };

    // enum ModalityFlag
    const int FINGERPRINT_UDFPS = 0;
    static const int _ENUM_MODALITY_FLAG_COUNT = 1;
    static const char* _ENUM_MODALITY_FLAG_NAMES[1] = {
        "FINGERPRINT_UDFPS",
    };
    static const int _ENUM_MODALITY_FLAG_VALUES[1] = {
        FINGERPRINT_UDFPS,
    };

    // optional int32 sensor_id = 1;
    const uint64_t SENSOR_ID = 0x0000010500000001LL;

    // optional .com.android.server.biometrics.SensorStateProto.Modality modality = 2;
    const uint64_t MODALITY = 0x0000010e00000002LL;

    // optional int32 current_strength = 3;
    const uint64_t CURRENT_STRENGTH = 0x0000010500000003LL;

    // optional .com.android.server.biometrics.BiometricSchedulerProto scheduler = 4;
    const uint64_t SCHEDULER = 0x0000010b00000004LL;

    // repeated .com.android.server.biometrics.UserStateProto user_states = 5;
    const uint64_t USER_STATES = 0x0000020b00000005LL;

    // optional bool reset_lockout_requires_hardware_auth_token = 6;
    const uint64_t RESET_LOCKOUT_REQUIRES_HARDWARE_AUTH_TOKEN = 0x0000010800000006LL;

    // optional bool reset_lockout_requires_challenge = 7;
    const uint64_t RESET_LOCKOUT_REQUIRES_CHALLENGE = 0x0000010800000007LL;

    // repeated .com.android.server.biometrics.SensorStateProto.ModalityFlag modality_flags = 8;
    const uint64_t MODALITY_FLAGS = 0x0000020e00000008LL;

    static const int _FIELD_COUNT = 8;
    static const char* _FIELD_NAMES[8] = {
        "sensor_id",
        "modality",
        "current_strength",
        "scheduler",
        "user_states",
        "reset_lockout_requires_hardware_auth_token",
        "reset_lockout_requires_challenge",
        "modality_flags",
    };
    static const uint64_t _FIELD_IDS[8] = {
        SENSOR_ID,
        MODALITY,
        CURRENT_STRENGTH,
        SCHEDULER,
        USER_STATES,
        RESET_LOCKOUT_REQUIRES_HARDWARE_AUTH_TOKEN,
        RESET_LOCKOUT_REQUIRES_CHALLENGE,
        MODALITY_FLAGS,
    };

} //SensorStateProto

// message UserStateProto
namespace UserStateProto {
    // optional int32 user_id = 1;
    const uint64_t USER_ID = 0x0000010500000001LL;

    // optional int32 num_enrolled = 2;
    const uint64_t NUM_ENROLLED = 0x0000010500000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "user_id",
        "num_enrolled",
    };
    static const uint64_t _FIELD_IDS[2] = {
        USER_ID,
        NUM_ENROLLED,
    };

} //UserStateProto

// message BiometricSchedulerProto
namespace BiometricSchedulerProto {
    // optional .com.android.server.biometrics.ClientMonitorEnum current_operation = 1;
    const uint64_t CURRENT_OPERATION = 0x0000010e00000001LL;

    // optional int32 total_operations = 2;
    const uint64_t TOTAL_OPERATIONS = 0x0000010500000002LL;

    // repeated .com.android.server.biometrics.ClientMonitorEnum recent_operations = 3;
    const uint64_t RECENT_OPERATIONS = 0x0000020e00000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "current_operation",
        "total_operations",
        "recent_operations",
    };
    static const uint64_t _FIELD_IDS[3] = {
        CURRENT_OPERATION,
        TOTAL_OPERATIONS,
        RECENT_OPERATIONS,
    };

} //BiometricSchedulerProto

} // biometrics
} // server
} // android
} // com

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_BIOMETRICS_PROTO_STREAM_H
