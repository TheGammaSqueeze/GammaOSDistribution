// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/proto_logging/stats/enums/server/location/enums.proto

#ifndef ANDROID_FRAMEWORKS_PROTO_LOGGING_STATS_ENUMS_SERVER_LOCATION_ENUMS_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_PROTO_LOGGING_STATS_ENUMS_SERVER_LOCATION_ENUMS_PROTO_STREAM_H

namespace android {
namespace server {
namespace location {

// enum GpsSignalQualityEnum
const int GPS_SIGNAL_QUALITY_UNKNOWN = -1;
const int GPS_SIGNAL_QUALITY_POOR = 0;
const int GPS_SIGNAL_QUALITY_GOOD = 1;
static const int _ENUM_GPS_SIGNAL_QUALITY_ENUM_COUNT = 3;
static const char* _ENUM_GPS_SIGNAL_QUALITY_ENUM_NAMES[3] = {
    "GPS_SIGNAL_QUALITY_UNKNOWN",
    "GPS_SIGNAL_QUALITY_POOR",
    "GPS_SIGNAL_QUALITY_GOOD",
};
static const int _ENUM_GPS_SIGNAL_QUALITY_ENUM_VALUES[3] = {
    GPS_SIGNAL_QUALITY_UNKNOWN,
    GPS_SIGNAL_QUALITY_POOR,
    GPS_SIGNAL_QUALITY_GOOD,
};

// enum GnssNiType
const int VOICE = 1;
const int UMTS_SUPL = 2;
const int UMTS_CTRL_PLANE = 3;
const int EMERGENCY_SUPL = 4;
static const int _ENUM_GNSS_NI_TYPE_COUNT = 4;
static const char* _ENUM_GNSS_NI_TYPE_NAMES[4] = {
    "VOICE",
    "UMTS_SUPL",
    "UMTS_CTRL_PLANE",
    "EMERGENCY_SUPL",
};
static const int _ENUM_GNSS_NI_TYPE_VALUES[4] = {
    VOICE,
    UMTS_SUPL,
    UMTS_CTRL_PLANE,
    EMERGENCY_SUPL,
};

// enum GnssUserResponseType
const int RESPONSE_ACCEPT = 1;
const int RESPONSE_DENY = 2;
const int RESPONSE_NORESP = 3;
static const int _ENUM_GNSS_USER_RESPONSE_TYPE_COUNT = 3;
static const char* _ENUM_GNSS_USER_RESPONSE_TYPE_NAMES[3] = {
    "RESPONSE_ACCEPT",
    "RESPONSE_DENY",
    "RESPONSE_NORESP",
};
static const int _ENUM_GNSS_USER_RESPONSE_TYPE_VALUES[3] = {
    RESPONSE_ACCEPT,
    RESPONSE_DENY,
    RESPONSE_NORESP,
};

// enum GnssNiEncodingType
const int ENC_NONE = 0;
const int ENC_SUPL_GSM_DEFAULT = 1;
const int ENC_SUPL_UTF8 = 2;
const int ENC_SUPL_UCS2 = 3;
const int ENC_UNKNOWN = -1;
static const int _ENUM_GNSS_NI_ENCODING_TYPE_COUNT = 5;
static const char* _ENUM_GNSS_NI_ENCODING_TYPE_NAMES[5] = {
    "ENC_NONE",
    "ENC_SUPL_GSM_DEFAULT",
    "ENC_SUPL_UTF8",
    "ENC_SUPL_UCS2",
    "ENC_UNKNOWN",
};
static const int _ENUM_GNSS_NI_ENCODING_TYPE_VALUES[5] = {
    ENC_NONE,
    ENC_SUPL_GSM_DEFAULT,
    ENC_SUPL_UTF8,
    ENC_SUPL_UCS2,
    ENC_UNKNOWN,
};

// enum NfwProtocolStack
const int CTRL_PLANE = 0;
const int SUPL = 1;
const int IMS = 10;
const int SIM = 11;
const int OTHER_PROTOCOL_STACK = 100;
static const int _ENUM_NFW_PROTOCOL_STACK_COUNT = 5;
static const char* _ENUM_NFW_PROTOCOL_STACK_NAMES[5] = {
    "CTRL_PLANE",
    "SUPL",
    "IMS",
    "SIM",
    "OTHER_PROTOCOL_STACK",
};
static const int _ENUM_NFW_PROTOCOL_STACK_VALUES[5] = {
    CTRL_PLANE,
    SUPL,
    IMS,
    SIM,
    OTHER_PROTOCOL_STACK,
};

// enum NfwRequestor
const int CARRIER = 0;
const int OEM = 10;
const int MODEM_CHIPSET_VENDOR = 11;
const int GNSS_CHIPSET_VENDOR = 12;
const int OTHER_CHIPSET_VENDOR = 13;
const int AUTOMOBILE_CLIENT = 20;
const int OTHER_REQUESTOR = 100;
static const int _ENUM_NFW_REQUESTOR_COUNT = 7;
static const char* _ENUM_NFW_REQUESTOR_NAMES[7] = {
    "CARRIER",
    "OEM",
    "MODEM_CHIPSET_VENDOR",
    "GNSS_CHIPSET_VENDOR",
    "OTHER_CHIPSET_VENDOR",
    "AUTOMOBILE_CLIENT",
    "OTHER_REQUESTOR",
};
static const int _ENUM_NFW_REQUESTOR_VALUES[7] = {
    CARRIER,
    OEM,
    MODEM_CHIPSET_VENDOR,
    GNSS_CHIPSET_VENDOR,
    OTHER_CHIPSET_VENDOR,
    AUTOMOBILE_CLIENT,
    OTHER_REQUESTOR,
};

// enum NfwResponseType
const int REJECTED = 0;
const int ACCEPTED_NO_LOCATION_PROVIDED = 1;
const int ACCEPTED_LOCATION_PROVIDED = 2;
static const int _ENUM_NFW_RESPONSE_TYPE_COUNT = 3;
static const char* _ENUM_NFW_RESPONSE_TYPE_NAMES[3] = {
    "REJECTED",
    "ACCEPTED_NO_LOCATION_PROVIDED",
    "ACCEPTED_LOCATION_PROVIDED",
};
static const int _ENUM_NFW_RESPONSE_TYPE_VALUES[3] = {
    REJECTED,
    ACCEPTED_NO_LOCATION_PROVIDED,
    ACCEPTED_LOCATION_PROVIDED,
};

// enum SuplMode
const int MSB = 1;
const int MSA = 2;
static const int _ENUM_SUPL_MODE_COUNT = 2;
static const char* _ENUM_SUPL_MODE_NAMES[2] = {
    "MSB",
    "MSA",
};
static const int _ENUM_SUPL_MODE_VALUES[2] = {
    MSB,
    MSA,
};

// enum LppProfile
const int USER_PLANE = 1;
const int CONTROL_PLANE = 2;
static const int _ENUM_LPP_PROFILE_COUNT = 2;
static const char* _ENUM_LPP_PROFILE_NAMES[2] = {
    "USER_PLANE",
    "CONTROL_PLANE",
};
static const int _ENUM_LPP_PROFILE_VALUES[2] = {
    USER_PLANE,
    CONTROL_PLANE,
};

// enum GlonassPosProtocol
const int RRC_CPLANE = 1;
const int RRLP_CPLANE = 2;
const int LPP_UPLANE = 4;
static const int _ENUM_GLONASS_POS_PROTOCOL_COUNT = 3;
static const char* _ENUM_GLONASS_POS_PROTOCOL_NAMES[3] = {
    "RRC_CPLANE",
    "RRLP_CPLANE",
    "LPP_UPLANE",
};
static const int _ENUM_GLONASS_POS_PROTOCOL_VALUES[3] = {
    RRC_CPLANE,
    RRLP_CPLANE,
    LPP_UPLANE,
};

// enum GpsLock
const int MO = 1;
const int NI = 2;
static const int _ENUM_GPS_LOCK_COUNT = 2;
static const char* _ENUM_GPS_LOCK_NAMES[2] = {
    "MO",
    "NI",
};
static const int _ENUM_GPS_LOCK_VALUES[2] = {
    MO,
    NI,
};

} // location
} // server
} // android

#endif // ANDROID_FRAMEWORKS_PROTO_LOGGING_STATS_ENUMS_SERVER_LOCATION_ENUMS_PROTO_STREAM_H
