// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/service/battery.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVICE_BATTERY_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVICE_BATTERY_PROTO_STREAM_H

namespace android {
namespace service {
namespace battery {

// message BatteryServiceDumpProto
namespace BatteryServiceDumpProto {
    // optional bool are_updates_stopped = 1;
    const uint64_t ARE_UPDATES_STOPPED = 0x0000010800000001LL;

    // optional .android.os.BatteryPluggedStateEnum plugged = 2;
    const uint64_t PLUGGED = 0x0000010e00000002LL;

    // optional int32 max_charging_current = 3;
    const uint64_t MAX_CHARGING_CURRENT = 0x0000010500000003LL;

    // optional int32 max_charging_voltage = 4;
    const uint64_t MAX_CHARGING_VOLTAGE = 0x0000010500000004LL;

    // optional int32 charge_counter = 5;
    const uint64_t CHARGE_COUNTER = 0x0000010500000005LL;

    // optional .android.os.BatteryStatusEnum status = 6;
    const uint64_t STATUS = 0x0000010e00000006LL;

    // optional .android.os.BatteryHealthEnum health = 7;
    const uint64_t HEALTH = 0x0000010e00000007LL;

    // optional bool is_present = 8;
    const uint64_t IS_PRESENT = 0x0000010800000008LL;

    // optional int32 level = 9;
    const uint64_t LEVEL = 0x0000010500000009LL;

    // optional int32 scale = 10;
    const uint64_t SCALE = 0x000001050000000aLL;

    // optional int32 voltage = 11;
    const uint64_t VOLTAGE = 0x000001050000000bLL;

    // optional int32 temperature = 12;
    const uint64_t TEMPERATURE = 0x000001050000000cLL;

    // optional string technology = 13;
    const uint64_t TECHNOLOGY = 0x000001090000000dLL;

    static const int _FIELD_COUNT = 13;
    static const char* _FIELD_NAMES[13] = {
        "are_updates_stopped",
        "plugged",
        "max_charging_current",
        "max_charging_voltage",
        "charge_counter",
        "status",
        "health",
        "is_present",
        "level",
        "scale",
        "voltage",
        "temperature",
        "technology",
    };
    static const uint64_t _FIELD_IDS[13] = {
        ARE_UPDATES_STOPPED,
        PLUGGED,
        MAX_CHARGING_CURRENT,
        MAX_CHARGING_VOLTAGE,
        CHARGE_COUNTER,
        STATUS,
        HEALTH,
        IS_PRESENT,
        LEVEL,
        SCALE,
        VOLTAGE,
        TEMPERATURE,
        TECHNOLOGY,
    };

} //BatteryServiceDumpProto

} // battery
} // service
} // android

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVICE_BATTERY_PROTO_STREAM_H
