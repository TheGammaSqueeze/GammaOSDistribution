// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/server/windowmanagerservice.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_WINDOWMANAGERSERVICE_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_WINDOWMANAGERSERVICE_PROTO_STREAM_H

namespace com {
namespace android {
namespace server {
namespace wm {

// message WindowManagerServiceDumpProto
namespace WindowManagerServiceDumpProto {
    // optional .com.android.server.wm.WindowManagerPolicyProto policy = 1;
    const uint64_t POLICY = 0x0000010b00000001LL;

    // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
    const uint64_t ROOT_WINDOW_CONTAINER = 0x0000010b00000002LL;

    // optional .com.android.server.wm.IdentifierProto focused_window = 3;
    const uint64_t FOCUSED_WINDOW = 0x0000010b00000003LL;

    // optional string focused_app = 4;
    const uint64_t FOCUSED_APP = 0x0000010900000004LL;

    // optional .com.android.server.wm.IdentifierProto input_method_window = 5;
    const uint64_t INPUT_METHOD_WINDOW = 0x0000010b00000005LL;

    // optional bool display_frozen = 6;
    const uint64_t DISPLAY_FROZEN = 0x0000010800000006LL;

    // optional int32 rotation = 7;
    const uint64_t ROTATION = 0x0000010500000007LL;

    // optional int32 last_orientation = 8;
    const uint64_t LAST_ORIENTATION = 0x0000010500000008LL;

    // optional int32 focused_display_id = 9;
    const uint64_t FOCUSED_DISPLAY_ID = 0x0000010500000009LL;

    // optional bool hard_keyboard_available = 10;
    const uint64_t HARD_KEYBOARD_AVAILABLE = 0x000001080000000aLL;

    static const int _FIELD_COUNT = 10;
    static const char* _FIELD_NAMES[10] = {
        "policy",
        "root_window_container",
        "focused_window",
        "focused_app",
        "input_method_window",
        "display_frozen",
        "rotation",
        "last_orientation",
        "focused_display_id",
        "hard_keyboard_available",
    };
    static const uint64_t _FIELD_IDS[10] = {
        POLICY,
        ROOT_WINDOW_CONTAINER,
        FOCUSED_WINDOW,
        FOCUSED_APP,
        INPUT_METHOD_WINDOW,
        DISPLAY_FROZEN,
        ROTATION,
        LAST_ORIENTATION,
        FOCUSED_DISPLAY_ID,
        HARD_KEYBOARD_AVAILABLE,
    };

} //WindowManagerServiceDumpProto

// message RootWindowContainerProto
namespace RootWindowContainerProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // repeated .com.android.server.wm.DisplayContentProto displays = 2;
    const uint64_t DISPLAYS = 0x0000020b00000002LL;

    // repeated .com.android.server.wm.WindowStateProto windows = 4;
    const uint64_t WINDOWS = 0x0000020b00000004LL;

    // optional .com.android.server.wm.KeyguardControllerProto keyguard_controller = 5;
    const uint64_t KEYGUARD_CONTROLLER = 0x0000010b00000005LL;

    // optional bool is_home_recents_component = 6;
    const uint64_t IS_HOME_RECENTS_COMPONENT = 0x0000010800000006LL;

    // repeated .com.android.server.wm.IdentifierProto pending_activities = 7;
    const uint64_t PENDING_ACTIVITIES = 0x0000020b00000007LL;

    // optional int32 default_min_size_resizable_task = 8;
    const uint64_t DEFAULT_MIN_SIZE_RESIZABLE_TASK = 0x0000010500000008LL;

    static const int _FIELD_COUNT = 7;
    static const char* _FIELD_NAMES[7] = {
        "window_container",
        "displays",
        "windows",
        "keyguard_controller",
        "is_home_recents_component",
        "pending_activities",
        "default_min_size_resizable_task",
    };
    static const uint64_t _FIELD_IDS[7] = {
        WINDOW_CONTAINER,
        DISPLAYS,
        WINDOWS,
        KEYGUARD_CONTROLLER,
        IS_HOME_RECENTS_COMPONENT,
        PENDING_ACTIVITIES,
        DEFAULT_MIN_SIZE_RESIZABLE_TASK,
    };

} //RootWindowContainerProto

// message BarControllerProto
namespace BarControllerProto {
    // optional .android.app.StatusBarManagerProto.WindowState state = 1;
    const uint64_t STATE = 0x0000010e00000001LL;

    // optional .android.app.StatusBarManagerProto.TransientWindowState transient_state = 2;
    const uint64_t TRANSIENT_STATE = 0x0000010e00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "state",
        "transient_state",
    };
    static const uint64_t _FIELD_IDS[2] = {
        STATE,
        TRANSIENT_STATE,
    };

} //BarControllerProto

// message WindowOrientationListenerProto
namespace WindowOrientationListenerProto {
    // optional bool enabled = 1;
    const uint64_t ENABLED = 0x0000010800000001LL;

    // optional .android.view.SurfaceProto.Rotation rotation = 2;
    const uint64_t ROTATION = 0x0000010e00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "enabled",
        "rotation",
    };
    static const uint64_t _FIELD_IDS[2] = {
        ENABLED,
        ROTATION,
    };

} //WindowOrientationListenerProto

// message KeyguardServiceDelegateProto
namespace KeyguardServiceDelegateProto {
    // enum ScreenState
    const int SCREEN_STATE_OFF = 0;
    const int SCREEN_STATE_TURNING_ON = 1;
    const int SCREEN_STATE_ON = 2;
    const int SCREEN_STATE_TURNING_OFF = 3;
    static const int _ENUM_SCREEN_STATE_COUNT = 4;
    static const char* _ENUM_SCREEN_STATE_NAMES[4] = {
        "OFF",
        "TURNING_ON",
        "ON",
        "TURNING_OFF",
    };
    static const int _ENUM_SCREEN_STATE_VALUES[4] = {
        SCREEN_STATE_OFF,
        SCREEN_STATE_TURNING_ON,
        SCREEN_STATE_ON,
        SCREEN_STATE_TURNING_OFF,
    };

    // enum InteractiveState
    const int INTERACTIVE_STATE_SLEEP = 0;
    const int INTERACTIVE_STATE_WAKING = 1;
    const int INTERACTIVE_STATE_AWAKE = 2;
    const int INTERACTIVE_STATE_GOING_TO_SLEEP = 3;
    static const int _ENUM_INTERACTIVE_STATE_COUNT = 4;
    static const char* _ENUM_INTERACTIVE_STATE_NAMES[4] = {
        "SLEEP",
        "WAKING",
        "AWAKE",
        "GOING_TO_SLEEP",
    };
    static const int _ENUM_INTERACTIVE_STATE_VALUES[4] = {
        INTERACTIVE_STATE_SLEEP,
        INTERACTIVE_STATE_WAKING,
        INTERACTIVE_STATE_AWAKE,
        INTERACTIVE_STATE_GOING_TO_SLEEP,
    };

    // optional bool showing = 1;
    const uint64_t SHOWING = 0x0000010800000001LL;

    // optional bool occluded = 2;
    const uint64_t OCCLUDED = 0x0000010800000002LL;

    // optional bool secure = 3;
    const uint64_t SECURE = 0x0000010800000003LL;

    // optional .com.android.server.wm.KeyguardServiceDelegateProto.ScreenState screen_state = 4;
    const uint64_t SCREEN_STATE = 0x0000010e00000004LL;

    // optional .com.android.server.wm.KeyguardServiceDelegateProto.InteractiveState interactive_state = 5;
    const uint64_t INTERACTIVE_STATE = 0x0000010e00000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "showing",
        "occluded",
        "secure",
        "screen_state",
        "interactive_state",
    };
    static const uint64_t _FIELD_IDS[5] = {
        SHOWING,
        OCCLUDED,
        SECURE,
        SCREEN_STATE,
        INTERACTIVE_STATE,
    };

} //KeyguardServiceDelegateProto

// message KeyguardControllerProto
namespace KeyguardControllerProto {
    // optional bool keyguard_showing = 1;
    const uint64_t KEYGUARD_SHOWING = 0x0000010800000001LL;

    // repeated .com.android.server.wm.KeyguardOccludedProto keyguard_occluded_states = 2;
    const uint64_t KEYGUARD_OCCLUDED_STATES = 0x0000020b00000002LL;

    // optional bool aod_showing = 3;
    const uint64_t AOD_SHOWING = 0x0000010800000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "keyguard_showing",
        "keyguard_occluded_states",
        "aod_showing",
    };
    static const uint64_t _FIELD_IDS[3] = {
        KEYGUARD_SHOWING,
        KEYGUARD_OCCLUDED_STATES,
        AOD_SHOWING,
    };

} //KeyguardControllerProto

// message KeyguardOccludedProto
namespace KeyguardOccludedProto {
    // optional int32 display_id = 1;
    const uint64_t DISPLAY_ID = 0x0000010500000001LL;

    // optional bool keyguard_occluded = 2;
    const uint64_t KEYGUARD_OCCLUDED = 0x0000010800000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "display_id",
        "keyguard_occluded",
    };
    static const uint64_t _FIELD_IDS[2] = {
        DISPLAY_ID,
        KEYGUARD_OCCLUDED,
    };

} //KeyguardOccludedProto

// message WindowManagerPolicyProto
namespace WindowManagerPolicyProto {
    // enum UserRotationMode
    const int USER_ROTATION_FREE = 0;
    const int USER_ROTATION_LOCKED = 1;
    static const int _ENUM_USER_ROTATION_MODE_COUNT = 2;
    static const char* _ENUM_USER_ROTATION_MODE_NAMES[2] = {
        "USER_ROTATION_FREE",
        "USER_ROTATION_LOCKED",
    };
    static const int _ENUM_USER_ROTATION_MODE_VALUES[2] = {
        USER_ROTATION_FREE,
        USER_ROTATION_LOCKED,
    };

    // optional int32 last_system_ui_flags = 1;
    const uint64_t LAST_SYSTEM_UI_FLAGS = 0x0000010500000001LL;

    // optional .com.android.server.wm.WindowManagerPolicyProto.UserRotationMode rotation_mode = 2;
    const uint64_t ROTATION_MODE = 0x0000010e00000002LL;

    // optional .android.view.SurfaceProto.Rotation rotation = 3;
    const uint64_t ROTATION = 0x0000010e00000003LL;

    // optional .android.content.ActivityInfoProto.ScreenOrientation orientation = 4;
    const uint64_t ORIENTATION = 0x0000010e00000004LL;

    // optional bool screen_on_fully = 5;
    const uint64_t SCREEN_ON_FULLY = 0x0000010800000005LL;

    // optional bool keyguard_draw_complete = 6;
    const uint64_t KEYGUARD_DRAW_COMPLETE = 0x0000010800000006LL;

    // optional bool window_manager_draw_complete = 7;
    const uint64_t WINDOW_MANAGER_DRAW_COMPLETE = 0x0000010800000007LL;

    // optional string focused_app_token = 8;
    const uint64_t FOCUSED_APP_TOKEN = 0x0000010900000008LL;

    // optional .com.android.server.wm.IdentifierProto focused_window = 9;
    const uint64_t FOCUSED_WINDOW = 0x0000010b00000009LL;

    // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_window = 10;
    const uint64_t TOP_FULLSCREEN_OPAQUE_WINDOW = 0x0000010b0000000aLL;

    // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_or_dimming_window = 11;
    const uint64_t TOP_FULLSCREEN_OPAQUE_OR_DIMMING_WINDOW = 0x0000010b0000000bLL;

    // optional bool keyguard_occluded = 12;
    const uint64_t KEYGUARD_OCCLUDED = 0x000001080000000cLL;

    // optional bool keyguard_occluded_changed = 13;
    const uint64_t KEYGUARD_OCCLUDED_CHANGED = 0x000001080000000dLL;

    // optional bool keyguard_occluded_pending = 14;
    const uint64_t KEYGUARD_OCCLUDED_PENDING = 0x000001080000000eLL;

    // optional bool force_status_bar = 15;
    const uint64_t FORCE_STATUS_BAR = 0x000001080000000fLL;

    // optional bool force_status_bar_from_keyguard = 16;
    const uint64_t FORCE_STATUS_BAR_FROM_KEYGUARD = 0x0000010800000010LL;

    // optional .com.android.server.wm.BarControllerProto status_bar = 17;
    const uint64_t STATUS_BAR = 0x0000010b00000011LL;

    // optional .com.android.server.wm.BarControllerProto navigation_bar = 18;
    const uint64_t NAVIGATION_BAR = 0x0000010b00000012LL;

    // optional .com.android.server.wm.WindowOrientationListenerProto orientation_listener = 19;
    const uint64_t ORIENTATION_LISTENER = 0x0000010b00000013LL;

    // optional .com.android.server.wm.KeyguardServiceDelegateProto keyguard_delegate = 20;
    const uint64_t KEYGUARD_DELEGATE = 0x0000010b00000014LL;

    static const int _FIELD_COUNT = 20;
    static const char* _FIELD_NAMES[20] = {
        "last_system_ui_flags",
        "rotation_mode",
        "rotation",
        "orientation",
        "screen_on_fully",
        "keyguard_draw_complete",
        "window_manager_draw_complete",
        "focused_app_token",
        "focused_window",
        "top_fullscreen_opaque_window",
        "top_fullscreen_opaque_or_dimming_window",
        "keyguard_occluded",
        "keyguard_occluded_changed",
        "keyguard_occluded_pending",
        "force_status_bar",
        "force_status_bar_from_keyguard",
        "status_bar",
        "navigation_bar",
        "orientation_listener",
        "keyguard_delegate",
    };
    static const uint64_t _FIELD_IDS[20] = {
        LAST_SYSTEM_UI_FLAGS,
        ROTATION_MODE,
        ROTATION,
        ORIENTATION,
        SCREEN_ON_FULLY,
        KEYGUARD_DRAW_COMPLETE,
        WINDOW_MANAGER_DRAW_COMPLETE,
        FOCUSED_APP_TOKEN,
        FOCUSED_WINDOW,
        TOP_FULLSCREEN_OPAQUE_WINDOW,
        TOP_FULLSCREEN_OPAQUE_OR_DIMMING_WINDOW,
        KEYGUARD_OCCLUDED,
        KEYGUARD_OCCLUDED_CHANGED,
        KEYGUARD_OCCLUDED_PENDING,
        FORCE_STATUS_BAR,
        FORCE_STATUS_BAR_FROM_KEYGUARD,
        STATUS_BAR,
        NAVIGATION_BAR,
        ORIENTATION_LISTENER,
        KEYGUARD_DELEGATE,
    };

} //WindowManagerPolicyProto

// message AppTransitionProto
namespace AppTransitionProto {
    // enum AppState
    const int APP_STATE_IDLE = 0;
    const int APP_STATE_READY = 1;
    const int APP_STATE_RUNNING = 2;
    const int APP_STATE_TIMEOUT = 3;
    static const int _ENUM_APP_STATE_COUNT = 4;
    static const char* _ENUM_APP_STATE_NAMES[4] = {
        "IDLE",
        "READY",
        "RUNNING",
        "TIMEOUT",
    };
    static const int _ENUM_APP_STATE_VALUES[4] = {
        APP_STATE_IDLE,
        APP_STATE_READY,
        APP_STATE_RUNNING,
        APP_STATE_TIMEOUT,
    };

    // optional .com.android.server.wm.AppTransitionProto.AppState app_transition_state = 1;
    const uint64_t APP_TRANSITION_STATE = 0x0000010e00000001LL;

    // optional .android.view.TransitionTypeEnum last_used_app_transition = 2;
    const uint64_t LAST_USED_APP_TRANSITION = 0x0000010e00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "app_transition_state",
        "last_used_app_transition",
    };
    static const uint64_t _FIELD_IDS[2] = {
        APP_TRANSITION_STATE,
        LAST_USED_APP_TRANSITION,
    };

} //AppTransitionProto

// message DisplayContentProto
namespace DisplayContentProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // optional int32 id = 2;
    const uint64_t ID = 0x0000010500000002LL;

    // optional .com.android.server.wm.DockedTaskDividerControllerProto docked_task_divider_controller = 4;
    const uint64_t DOCKED_TASK_DIVIDER_CONTROLLER = 0x0000010b00000004LL;

    // optional .com.android.server.wm.PinnedTaskControllerProto pinned_task_controller = 5;
    const uint64_t PINNED_TASK_CONTROLLER = 0x0000010b00000005LL;

    // repeated .com.android.server.wm.WindowTokenProto above_app_windows = 6;
    const uint64_t ABOVE_APP_WINDOWS = 0x0000020b00000006LL;

    // repeated .com.android.server.wm.WindowTokenProto below_app_windows = 7;
    const uint64_t BELOW_APP_WINDOWS = 0x0000020b00000007LL;

    // repeated .com.android.server.wm.WindowTokenProto ime_windows = 8;
    const uint64_t IME_WINDOWS = 0x0000020b00000008LL;

    // optional int32 dpi = 9;
    const uint64_t DPI = 0x0000010500000009LL;

    // optional .android.view.DisplayInfoProto display_info = 10;
    const uint64_t DISPLAY_INFO = 0x0000010b0000000aLL;

    // optional int32 rotation = 11;
    const uint64_t ROTATION = 0x000001050000000bLL;

    // optional .com.android.server.wm.ScreenRotationAnimationProto screen_rotation_animation = 12;
    const uint64_t SCREEN_ROTATION_ANIMATION = 0x0000010b0000000cLL;

    // optional .com.android.server.wm.DisplayFramesProto display_frames = 13;
    const uint64_t DISPLAY_FRAMES = 0x0000010b0000000dLL;

    // optional int32 surface_size = 14;
    const uint64_t SURFACE_SIZE = 0x000001050000000eLL;

    // optional string focused_app = 15;
    const uint64_t FOCUSED_APP = 0x000001090000000fLL;

    // optional .com.android.server.wm.AppTransitionProto app_transition = 16;
    const uint64_t APP_TRANSITION = 0x0000010b00000010LL;

    // repeated .com.android.server.wm.IdentifierProto opening_apps = 17;
    const uint64_t OPENING_APPS = 0x0000020b00000011LL;

    // repeated .com.android.server.wm.IdentifierProto closing_apps = 18;
    const uint64_t CLOSING_APPS = 0x0000020b00000012LL;

    // repeated .com.android.server.wm.IdentifierProto changing_apps = 19;
    const uint64_t CHANGING_APPS = 0x0000020b00000013LL;

    // repeated .com.android.server.wm.WindowTokenProto overlay_windows = 20;
    const uint64_t OVERLAY_WINDOWS = 0x0000020b00000014LL;

    // optional .com.android.server.wm.DisplayAreaProto root_display_area = 21;
    const uint64_t ROOT_DISPLAY_AREA = 0x0000010b00000015LL;

    // optional bool single_task_instance = 22;
    const uint64_t SINGLE_TASK_INSTANCE = 0x0000010800000016LL;

    // optional int32 focused_root_task_id = 23;
    const uint64_t FOCUSED_ROOT_TASK_ID = 0x0000010500000017LL;

    // optional .com.android.server.wm.IdentifierProto resumed_activity = 24;
    const uint64_t RESUMED_ACTIVITY = 0x0000010b00000018LL;

    // repeated .com.android.server.wm.TaskProto tasks = 25;
    const uint64_t TASKS = 0x0000020b00000019LL;

    // optional bool display_ready = 26;
    const uint64_t DISPLAY_READY = 0x000001080000001aLL;

    // optional .com.android.server.wm.WindowStateProto input_method_target = 27;
    const uint64_t INPUT_METHOD_TARGET = 0x0000010b0000001bLL;

    // optional .com.android.server.wm.WindowStateProto input_method_input_target = 28;
    const uint64_t INPUT_METHOD_INPUT_TARGET = 0x0000010b0000001cLL;

    // optional .com.android.server.wm.WindowStateProto input_method_control_target = 29;
    const uint64_t INPUT_METHOD_CONTROL_TARGET = 0x0000010b0000001dLL;

    // optional .com.android.server.wm.WindowStateProto current_focus = 30;
    const uint64_t CURRENT_FOCUS = 0x0000010b0000001eLL;

    // optional .com.android.server.wm.ImeInsetsSourceProviderProto ime_insets_source_provider = 31;
    const uint64_t IME_INSETS_SOURCE_PROVIDER = 0x0000010b0000001fLL;

    // optional bool can_show_ime = 32;
    const uint64_t CAN_SHOW_IME = 0x0000010800000020LL;

    // optional .com.android.server.wm.DisplayRotationProto display_rotation = 33;
    const uint64_t DISPLAY_ROTATION = 0x0000010b00000021LL;

    // optional int32 ime_policy = 34;
    const uint64_t IME_POLICY = 0x0000010500000022LL;

    // optional bool is_sleeping = 36;
    const uint64_t IS_SLEEPING = 0x0000010800000024LL;

    // repeated string sleep_tokens = 37;
    const uint64_t SLEEP_TOKENS = 0x0000020900000025LL;

    static const int _FIELD_COUNT = 35;
    static const char* _FIELD_NAMES[35] = {
        "window_container",
        "id",
        "docked_task_divider_controller",
        "pinned_task_controller",
        "above_app_windows",
        "below_app_windows",
        "ime_windows",
        "dpi",
        "display_info",
        "rotation",
        "screen_rotation_animation",
        "display_frames",
        "surface_size",
        "focused_app",
        "app_transition",
        "opening_apps",
        "closing_apps",
        "changing_apps",
        "overlay_windows",
        "root_display_area",
        "single_task_instance",
        "focused_root_task_id",
        "resumed_activity",
        "tasks",
        "display_ready",
        "input_method_target",
        "input_method_input_target",
        "input_method_control_target",
        "current_focus",
        "ime_insets_source_provider",
        "can_show_ime",
        "display_rotation",
        "ime_policy",
        "is_sleeping",
        "sleep_tokens",
    };
    static const uint64_t _FIELD_IDS[35] = {
        WINDOW_CONTAINER,
        ID,
        DOCKED_TASK_DIVIDER_CONTROLLER,
        PINNED_TASK_CONTROLLER,
        ABOVE_APP_WINDOWS,
        BELOW_APP_WINDOWS,
        IME_WINDOWS,
        DPI,
        DISPLAY_INFO,
        ROTATION,
        SCREEN_ROTATION_ANIMATION,
        DISPLAY_FRAMES,
        SURFACE_SIZE,
        FOCUSED_APP,
        APP_TRANSITION,
        OPENING_APPS,
        CLOSING_APPS,
        CHANGING_APPS,
        OVERLAY_WINDOWS,
        ROOT_DISPLAY_AREA,
        SINGLE_TASK_INSTANCE,
        FOCUSED_ROOT_TASK_ID,
        RESUMED_ACTIVITY,
        TASKS,
        DISPLAY_READY,
        INPUT_METHOD_TARGET,
        INPUT_METHOD_INPUT_TARGET,
        INPUT_METHOD_CONTROL_TARGET,
        CURRENT_FOCUS,
        IME_INSETS_SOURCE_PROVIDER,
        CAN_SHOW_IME,
        DISPLAY_ROTATION,
        IME_POLICY,
        IS_SLEEPING,
        SLEEP_TOKENS,
    };

} //DisplayContentProto

// message DisplayAreaProto
namespace DisplayAreaProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // optional string name = 2;
    const uint64_t NAME = 0x0000010900000002LL;

    // repeated .com.android.server.wm.DisplayAreaChildProto children = 3;
    const uint64_t CHILDREN = 0x0000020b00000003LL;

    // optional bool is_task_display_area = 4;
    const uint64_t IS_TASK_DISPLAY_AREA = 0x0000010800000004LL;

    // optional bool is_root_display_area = 5;
    const uint64_t IS_ROOT_DISPLAY_AREA = 0x0000010800000005LL;

    // optional int32 feature_id = 6;
    const uint64_t FEATURE_ID = 0x0000010500000006LL;

    // optional bool is_organized = 7;
    const uint64_t IS_ORGANIZED = 0x0000010800000007LL;

    static const int _FIELD_COUNT = 7;
    static const char* _FIELD_NAMES[7] = {
        "window_container",
        "name",
        "children",
        "is_task_display_area",
        "is_root_display_area",
        "feature_id",
        "is_organized",
    };
    static const uint64_t _FIELD_IDS[7] = {
        WINDOW_CONTAINER,
        NAME,
        CHILDREN,
        IS_TASK_DISPLAY_AREA,
        IS_ROOT_DISPLAY_AREA,
        FEATURE_ID,
        IS_ORGANIZED,
    };

} //DisplayAreaProto

// message DisplayAreaChildProto
namespace DisplayAreaChildProto {
    // optional .com.android.server.wm.DisplayAreaProto display_area = 1;
    const uint64_t DISPLAY_AREA = 0x0000010b00000001LL;

    // optional .com.android.server.wm.WindowTokenProto window = 2;
    const uint64_t WINDOW = 0x0000010b00000002LL;

    // repeated string unknown = 3;
    const uint64_t UNKNOWN = 0x0000020900000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "display_area",
        "window",
        "unknown",
    };
    static const uint64_t _FIELD_IDS[3] = {
        DISPLAY_AREA,
        WINDOW,
        UNKNOWN,
    };

} //DisplayAreaChildProto

// message DisplayFramesProto
namespace DisplayFramesProto {
    // optional .android.graphics.RectProto stable_bounds = 1;
    const uint64_t STABLE_BOUNDS = 0x0000010b00000001LL;

    // optional .android.graphics.RectProto dock = 2;
    const uint64_t DOCK = 0x0000010b00000002LL;

    // optional .android.graphics.RectProto current = 3;
    const uint64_t CURRENT = 0x0000010b00000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "stable_bounds",
        "dock",
        "current",
    };
    static const uint64_t _FIELD_IDS[3] = {
        STABLE_BOUNDS,
        DOCK,
        CURRENT,
    };

} //DisplayFramesProto

// message DisplayRotationProto
namespace DisplayRotationProto {
    // optional int32 rotation = 1;
    const uint64_t ROTATION = 0x0000010500000001LL;

    // optional bool frozen_to_user_rotation = 2;
    const uint64_t FROZEN_TO_USER_ROTATION = 0x0000010800000002LL;

    // optional int32 user_rotation = 3;
    const uint64_t USER_ROTATION = 0x0000010500000003LL;

    // optional int32 fixed_to_user_rotation_mode = 4;
    const uint64_t FIXED_TO_USER_ROTATION_MODE = 0x0000010500000004LL;

    // optional int32 last_orientation = 5;
    const uint64_t LAST_ORIENTATION = 0x0000010500000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "rotation",
        "frozen_to_user_rotation",
        "user_rotation",
        "fixed_to_user_rotation_mode",
        "last_orientation",
    };
    static const uint64_t _FIELD_IDS[5] = {
        ROTATION,
        FROZEN_TO_USER_ROTATION,
        USER_ROTATION,
        FIXED_TO_USER_ROTATION_MODE,
        LAST_ORIENTATION,
    };

} //DisplayRotationProto

// message DockedTaskDividerControllerProto
namespace DockedTaskDividerControllerProto {
    // optional bool minimized_dock = 1;
    const uint64_t MINIMIZED_DOCK = 0x0000010800000001LL;

    static const int _FIELD_COUNT = 1;
    static const char* _FIELD_NAMES[1] = {
        "minimized_dock",
    };
    static const uint64_t _FIELD_IDS[1] = {
        MINIMIZED_DOCK,
    };

} //DockedTaskDividerControllerProto

// message PinnedTaskControllerProto
namespace PinnedTaskControllerProto {
    // optional .android.graphics.RectProto default_bounds = 1;
    const uint64_t DEFAULT_BOUNDS = 0x0000010b00000001LL;

    // optional .android.graphics.RectProto movement_bounds = 2;
    const uint64_t MOVEMENT_BOUNDS = 0x0000010b00000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "default_bounds",
        "movement_bounds",
    };
    static const uint64_t _FIELD_IDS[2] = {
        DEFAULT_BOUNDS,
        MOVEMENT_BOUNDS,
    };

} //PinnedTaskControllerProto

// message TaskProto
namespace TaskProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // optional int32 id = 2;
    const uint64_t ID = 0x0000010500000002LL;

    // optional bool fills_parent = 4;
    const uint64_t FILLS_PARENT = 0x0000010800000004LL;

    // optional .android.graphics.RectProto bounds = 5;
    const uint64_t BOUNDS = 0x0000010b00000005LL;

    // optional .android.graphics.RectProto displayed_bounds = 6;
    const uint64_t DISPLAYED_BOUNDS = 0x0000010b00000006LL;

    // optional bool defer_removal = 7;
    const uint64_t DEFER_REMOVAL = 0x0000010800000007LL;

    // optional int32 surface_width = 8;
    const uint64_t SURFACE_WIDTH = 0x0000010500000008LL;

    // optional int32 surface_height = 9;
    const uint64_t SURFACE_HEIGHT = 0x0000010500000009LL;

    // repeated .com.android.server.wm.TaskProto tasks = 10;
    const uint64_t TASKS = 0x0000020b0000000aLL;

    // repeated .com.android.server.wm.ActivityRecordProto activities = 11;
    const uint64_t ACTIVITIES = 0x0000020b0000000bLL;

    // optional .com.android.server.wm.IdentifierProto resumed_activity = 12;
    const uint64_t RESUMED_ACTIVITY = 0x0000010b0000000cLL;

    // optional string real_activity = 13;
    const uint64_t REAL_ACTIVITY = 0x000001090000000dLL;

    // optional string orig_activity = 14;
    const uint64_t ORIG_ACTIVITY = 0x000001090000000eLL;

    // optional int32 display_id = 15;
    const uint64_t DISPLAY_ID = 0x000001050000000fLL;

    // optional int32 root_task_id = 16;
    const uint64_t ROOT_TASK_ID = 0x0000010500000010LL;

    // optional int32 activity_type = 17;
    const uint64_t ACTIVITY_TYPE = 0x0000010500000011LL;

    // optional int32 resize_mode = 18;
    const uint64_t RESIZE_MODE = 0x0000010500000012LL;

    // optional int32 min_width = 19;
    const uint64_t MIN_WIDTH = 0x0000010500000013LL;

    // optional int32 min_height = 20;
    const uint64_t MIN_HEIGHT = 0x0000010500000014LL;

    // optional .android.graphics.RectProto adjusted_bounds = 21;
    const uint64_t ADJUSTED_BOUNDS = 0x0000010b00000015LL;

    // optional .android.graphics.RectProto last_non_fullscreen_bounds = 22;
    const uint64_t LAST_NON_FULLSCREEN_BOUNDS = 0x0000010b00000016LL;

    // optional bool adjusted_for_ime = 23;
    const uint64_t ADJUSTED_FOR_IME = 0x0000010800000017LL;

    // optional float adjust_ime_amount = 24;
    const uint64_t ADJUST_IME_AMOUNT = 0x0000010200000018LL;

    // optional float adjust_divider_amount = 25;
    const uint64_t ADJUST_DIVIDER_AMOUNT = 0x0000010200000019LL;

    // optional bool animating_bounds = 26;
    const uint64_t ANIMATING_BOUNDS = 0x000001080000001aLL;

    // optional float minimize_amount = 27;
    const uint64_t MINIMIZE_AMOUNT = 0x000001020000001bLL;

    // optional bool created_by_organizer = 28;
    const uint64_t CREATED_BY_ORGANIZER = 0x000001080000001cLL;

    // optional string affinity = 29;
    const uint64_t AFFINITY = 0x000001090000001dLL;

    // optional bool has_child_pip_activity = 30;
    const uint64_t HAS_CHILD_PIP_ACTIVITY = 0x000001080000001eLL;

    // optional .com.android.server.wm.TaskFragmentProto task_fragment = 31;
    const uint64_t TASK_FRAGMENT = 0x0000010b0000001fLL;

    static const int _FIELD_COUNT = 30;
    static const char* _FIELD_NAMES[30] = {
        "window_container",
        "id",
        "fills_parent",
        "bounds",
        "displayed_bounds",
        "defer_removal",
        "surface_width",
        "surface_height",
        "tasks",
        "activities",
        "resumed_activity",
        "real_activity",
        "orig_activity",
        "display_id",
        "root_task_id",
        "activity_type",
        "resize_mode",
        "min_width",
        "min_height",
        "adjusted_bounds",
        "last_non_fullscreen_bounds",
        "adjusted_for_ime",
        "adjust_ime_amount",
        "adjust_divider_amount",
        "animating_bounds",
        "minimize_amount",
        "created_by_organizer",
        "affinity",
        "has_child_pip_activity",
        "task_fragment",
    };
    static const uint64_t _FIELD_IDS[30] = {
        WINDOW_CONTAINER,
        ID,
        FILLS_PARENT,
        BOUNDS,
        DISPLAYED_BOUNDS,
        DEFER_REMOVAL,
        SURFACE_WIDTH,
        SURFACE_HEIGHT,
        TASKS,
        ACTIVITIES,
        RESUMED_ACTIVITY,
        REAL_ACTIVITY,
        ORIG_ACTIVITY,
        DISPLAY_ID,
        ROOT_TASK_ID,
        ACTIVITY_TYPE,
        RESIZE_MODE,
        MIN_WIDTH,
        MIN_HEIGHT,
        ADJUSTED_BOUNDS,
        LAST_NON_FULLSCREEN_BOUNDS,
        ADJUSTED_FOR_IME,
        ADJUST_IME_AMOUNT,
        ADJUST_DIVIDER_AMOUNT,
        ANIMATING_BOUNDS,
        MINIMIZE_AMOUNT,
        CREATED_BY_ORGANIZER,
        AFFINITY,
        HAS_CHILD_PIP_ACTIVITY,
        TASK_FRAGMENT,
    };

} //TaskProto

// message TaskFragmentProto
namespace TaskFragmentProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // optional int32 display_id = 2;
    const uint64_t DISPLAY_ID = 0x0000010500000002LL;

    // optional int32 activity_type = 3;
    const uint64_t ACTIVITY_TYPE = 0x0000010500000003LL;

    // optional int32 min_width = 4;
    const uint64_t MIN_WIDTH = 0x0000010500000004LL;

    // optional int32 min_height = 5;
    const uint64_t MIN_HEIGHT = 0x0000010500000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "window_container",
        "display_id",
        "activity_type",
        "min_width",
        "min_height",
    };
    static const uint64_t _FIELD_IDS[5] = {
        WINDOW_CONTAINER,
        DISPLAY_ID,
        ACTIVITY_TYPE,
        MIN_WIDTH,
        MIN_HEIGHT,
    };

} //TaskFragmentProto

// message ActivityRecordProto
namespace ActivityRecordProto {
    // optional string name = 1;
    const uint64_t NAME = 0x0000010900000001LL;

    // optional .com.android.server.wm.WindowTokenProto window_token = 2;
    const uint64_t WINDOW_TOKEN = 0x0000010b00000002LL;

    // optional bool last_surface_showing = 3;
    const uint64_t LAST_SURFACE_SHOWING = 0x0000010800000003LL;

    // optional bool is_waiting_for_transition_start = 4;
    const uint64_t IS_WAITING_FOR_TRANSITION_START = 0x0000010800000004LL;

    // optional bool is_animating = 5;
    const uint64_t IS_ANIMATING = 0x0000010800000005LL;

    // optional .com.android.server.wm.WindowContainerThumbnailProto thumbnail = 6;
    const uint64_t THUMBNAIL = 0x0000010b00000006LL;

    // optional bool fills_parent = 7;
    const uint64_t FILLS_PARENT = 0x0000010800000007LL;

    // optional bool app_stopped = 8;
    const uint64_t APP_STOPPED = 0x0000010800000008LL;

    // optional bool visible_requested = 9;
    const uint64_t VISIBLE_REQUESTED = 0x0000010800000009LL;

    // optional bool client_visible = 10;
    const uint64_t CLIENT_VISIBLE = 0x000001080000000aLL;

    // optional bool defer_hiding_client = 11;
    const uint64_t DEFER_HIDING_CLIENT = 0x000001080000000bLL;

    // optional bool reported_drawn = 12;
    const uint64_t REPORTED_DRAWN = 0x000001080000000cLL;

    // optional bool reported_visible = 13;
    const uint64_t REPORTED_VISIBLE = 0x000001080000000dLL;

    // optional int32 num_interesting_windows = 14;
    const uint64_t NUM_INTERESTING_WINDOWS = 0x000001050000000eLL;

    // optional int32 num_drawn_windows = 15;
    const uint64_t NUM_DRAWN_WINDOWS = 0x000001050000000fLL;

    // optional bool all_drawn = 16;
    const uint64_t ALL_DRAWN = 0x0000010800000010LL;

    // optional bool last_all_drawn = 17;
    const uint64_t LAST_ALL_DRAWN = 0x0000010800000011LL;

    // optional .com.android.server.wm.IdentifierProto starting_window = 19;
    const uint64_t STARTING_WINDOW = 0x0000010b00000013LL;

    // optional bool starting_displayed = 20;
    const uint64_t STARTING_DISPLAYED = 0x0000010800000014LL;

    // optional bool starting_moved = 201;
    const uint64_t STARTING_MOVED = 0x00000108000000c9LL;

    // optional bool visible_set_from_transferred_starting_window = 22;
    const uint64_t VISIBLE_SET_FROM_TRANSFERRED_STARTING_WINDOW = 0x0000010800000016LL;

    // repeated .android.graphics.RectProto frozen_bounds = 23;
    const uint64_t FROZEN_BOUNDS = 0x0000020b00000017LL;

    // optional bool visible = 24;
    const uint64_t VISIBLE = 0x0000010800000018LL;

    // optional .com.android.server.wm.IdentifierProto identifier = 26;
    const uint64_t IDENTIFIER = 0x0000010b0000001aLL;

    // optional string state = 27;
    const uint64_t STATE = 0x000001090000001bLL;

    // optional bool front_of_task = 28;
    const uint64_t FRONT_OF_TASK = 0x000001080000001cLL;

    // optional int32 proc_id = 29;
    const uint64_t PROC_ID = 0x000001050000001dLL;

    // optional bool translucent = 30;
    const uint64_t TRANSLUCENT = 0x000001080000001eLL;

    // optional bool pip_auto_enter_enabled = 31;
    const uint64_t PIP_AUTO_ENTER_ENABLED = 0x000001080000001fLL;

    // optional bool in_size_compat_mode = 32;
    const uint64_t IN_SIZE_COMPAT_MODE = 0x0000010800000020LL;

    // optional float min_aspect_ratio = 33;
    const uint64_t MIN_ASPECT_RATIO = 0x0000010200000021LL;

    // optional bool provides_max_bounds = 34;
    const uint64_t PROVIDES_MAX_BOUNDS = 0x0000010800000022LL;

    static const int _FIELD_COUNT = 32;
    static const char* _FIELD_NAMES[32] = {
        "name",
        "window_token",
        "last_surface_showing",
        "is_waiting_for_transition_start",
        "is_animating",
        "thumbnail",
        "fills_parent",
        "app_stopped",
        "visible_requested",
        "client_visible",
        "defer_hiding_client",
        "reported_drawn",
        "reported_visible",
        "num_interesting_windows",
        "num_drawn_windows",
        "all_drawn",
        "last_all_drawn",
        "starting_window",
        "starting_displayed",
        "starting_moved",
        "visible_set_from_transferred_starting_window",
        "frozen_bounds",
        "visible",
        "identifier",
        "state",
        "front_of_task",
        "proc_id",
        "translucent",
        "pip_auto_enter_enabled",
        "in_size_compat_mode",
        "min_aspect_ratio",
        "provides_max_bounds",
    };
    static const uint64_t _FIELD_IDS[32] = {
        NAME,
        WINDOW_TOKEN,
        LAST_SURFACE_SHOWING,
        IS_WAITING_FOR_TRANSITION_START,
        IS_ANIMATING,
        THUMBNAIL,
        FILLS_PARENT,
        APP_STOPPED,
        VISIBLE_REQUESTED,
        CLIENT_VISIBLE,
        DEFER_HIDING_CLIENT,
        REPORTED_DRAWN,
        REPORTED_VISIBLE,
        NUM_INTERESTING_WINDOWS,
        NUM_DRAWN_WINDOWS,
        ALL_DRAWN,
        LAST_ALL_DRAWN,
        STARTING_WINDOW,
        STARTING_DISPLAYED,
        STARTING_MOVED,
        VISIBLE_SET_FROM_TRANSFERRED_STARTING_WINDOW,
        FROZEN_BOUNDS,
        VISIBLE,
        IDENTIFIER,
        STATE,
        FRONT_OF_TASK,
        PROC_ID,
        TRANSLUCENT,
        PIP_AUTO_ENTER_ENABLED,
        IN_SIZE_COMPAT_MODE,
        MIN_ASPECT_RATIO,
        PROVIDES_MAX_BOUNDS,
    };

} //ActivityRecordProto

// message WindowTokenProto
namespace WindowTokenProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // optional int32 hash_code = 2;
    const uint64_t HASH_CODE = 0x0000010500000002LL;

    // repeated .com.android.server.wm.WindowStateProto windows = 3;
    const uint64_t WINDOWS = 0x0000020b00000003LL;

    // optional bool waiting_to_show = 5;
    const uint64_t WAITING_TO_SHOW = 0x0000010800000005LL;

    // optional bool paused = 6;
    const uint64_t PAUSED = 0x0000010800000006LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "window_container",
        "hash_code",
        "windows",
        "waiting_to_show",
        "paused",
    };
    static const uint64_t _FIELD_IDS[5] = {
        WINDOW_CONTAINER,
        HASH_CODE,
        WINDOWS,
        WAITING_TO_SHOW,
        PAUSED,
    };

} //WindowTokenProto

// message WindowStateProto
namespace WindowStateProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000001LL;

    // optional .com.android.server.wm.IdentifierProto identifier = 2;
    const uint64_t IDENTIFIER = 0x0000010b00000002LL;

    // optional int32 display_id = 3;
    const uint64_t DISPLAY_ID = 0x0000010500000003LL;

    // optional int32 stack_id = 4;
    const uint64_t STACK_ID = 0x0000010500000004LL;

    // optional .android.view.WindowLayoutParamsProto attributes = 5;
    const uint64_t ATTRIBUTES = 0x0000010b00000005LL;

    // optional .android.graphics.RectProto given_content_insets = 6;
    const uint64_t GIVEN_CONTENT_INSETS = 0x0000010b00000006LL;

    // optional .android.graphics.RectProto frame = 7;
    const uint64_t FRAME = 0x0000010b00000007LL;

    // optional .android.graphics.RectProto containing_frame = 8;
    const uint64_t CONTAINING_FRAME = 0x0000010b00000008LL;

    // optional .android.graphics.RectProto parent_frame = 9;
    const uint64_t PARENT_FRAME = 0x0000010b00000009LL;

    // optional .android.graphics.RectProto content_frame = 10;
    const uint64_t CONTENT_FRAME = 0x0000010b0000000aLL;

    // optional .android.graphics.RectProto content_insets = 11;
    const uint64_t CONTENT_INSETS = 0x0000010b0000000bLL;

    // optional .android.graphics.RectProto surface_insets = 12;
    const uint64_t SURFACE_INSETS = 0x0000010b0000000cLL;

    // optional .com.android.server.wm.WindowStateAnimatorProto animator = 13;
    const uint64_t ANIMATOR = 0x0000010b0000000dLL;

    // optional bool animating_exit = 14;
    const uint64_t ANIMATING_EXIT = 0x000001080000000eLL;

    // repeated .com.android.server.wm.WindowStateProto child_windows = 15;
    const uint64_t CHILD_WINDOWS = 0x0000020b0000000fLL;

    // optional .android.graphics.RectProto surface_position = 16;
    const uint64_t SURFACE_POSITION = 0x0000010b00000010LL;

    // optional int32 requested_width = 18;
    const uint64_t REQUESTED_WIDTH = 0x0000010500000012LL;

    // optional int32 requested_height = 19;
    const uint64_t REQUESTED_HEIGHT = 0x0000010500000013LL;

    // optional int32 view_visibility = 20;
    const uint64_t VIEW_VISIBILITY = 0x0000010500000014LL;

    // optional int32 system_ui_visibility = 21;
    const uint64_t SYSTEM_UI_VISIBILITY = 0x0000010500000015LL;

    // optional bool has_surface = 22;
    const uint64_t HAS_SURFACE = 0x0000010800000016LL;

    // optional bool is_ready_for_display = 23;
    const uint64_t IS_READY_FOR_DISPLAY = 0x0000010800000017LL;

    // optional .android.graphics.RectProto display_frame = 24;
    const uint64_t DISPLAY_FRAME = 0x0000010b00000018LL;

    // optional .android.graphics.RectProto overscan_frame = 25;
    const uint64_t OVERSCAN_FRAME = 0x0000010b00000019LL;

    // optional .android.graphics.RectProto visible_frame = 26;
    const uint64_t VISIBLE_FRAME = 0x0000010b0000001aLL;

    // optional .android.graphics.RectProto decor_frame = 27;
    const uint64_t DECOR_FRAME = 0x0000010b0000001bLL;

    // optional .android.graphics.RectProto outset_frame = 28;
    const uint64_t OUTSET_FRAME = 0x0000010b0000001cLL;

    // optional .android.graphics.RectProto overscan_insets = 29;
    const uint64_t OVERSCAN_INSETS = 0x0000010b0000001dLL;

    // optional .android.graphics.RectProto visible_insets = 30;
    const uint64_t VISIBLE_INSETS = 0x0000010b0000001eLL;

    // optional .android.graphics.RectProto stable_insets = 31;
    const uint64_t STABLE_INSETS = 0x0000010b0000001fLL;

    // optional .android.graphics.RectProto outsets = 32;
    const uint64_t OUTSETS = 0x0000010b00000020LL;

    // optional .android.view.DisplayCutoutProto cutout = 33;
    const uint64_t CUTOUT = 0x0000010b00000021LL;

    // optional bool remove_on_exit = 34;
    const uint64_t REMOVE_ON_EXIT = 0x0000010800000022LL;

    // optional bool destroying = 35;
    const uint64_t DESTROYING = 0x0000010800000023LL;

    // optional bool removed = 36;
    const uint64_t REMOVED = 0x0000010800000024LL;

    // optional bool is_on_screen = 37;
    const uint64_t IS_ON_SCREEN = 0x0000010800000025LL;

    // optional bool is_visible = 38;
    const uint64_t IS_VISIBLE = 0x0000010800000026LL;

    // optional bool pending_seamless_rotation = 39;
    const uint64_t PENDING_SEAMLESS_ROTATION = 0x0000010800000027LL;

    // optional int64 finished_seamless_rotation_frame = 40;
    const uint64_t FINISHED_SEAMLESS_ROTATION_FRAME = 0x0000010300000028LL;

    // optional .com.android.server.wm.WindowFramesProto window_frames = 41;
    const uint64_t WINDOW_FRAMES = 0x0000010b00000029LL;

    // optional bool force_seamless_rotation = 42;
    const uint64_t FORCE_SEAMLESS_ROTATION = 0x000001080000002aLL;

    // optional bool has_compat_scale = 43;
    const uint64_t HAS_COMPAT_SCALE = 0x000001080000002bLL;

    // optional float global_scale = 44;
    const uint64_t GLOBAL_SCALE = 0x000001020000002cLL;

    static const int _FIELD_COUNT = 43;
    static const char* _FIELD_NAMES[43] = {
        "window_container",
        "identifier",
        "display_id",
        "stack_id",
        "attributes",
        "given_content_insets",
        "frame",
        "containing_frame",
        "parent_frame",
        "content_frame",
        "content_insets",
        "surface_insets",
        "animator",
        "animating_exit",
        "child_windows",
        "surface_position",
        "requested_width",
        "requested_height",
        "view_visibility",
        "system_ui_visibility",
        "has_surface",
        "is_ready_for_display",
        "display_frame",
        "overscan_frame",
        "visible_frame",
        "decor_frame",
        "outset_frame",
        "overscan_insets",
        "visible_insets",
        "stable_insets",
        "outsets",
        "cutout",
        "remove_on_exit",
        "destroying",
        "removed",
        "is_on_screen",
        "is_visible",
        "pending_seamless_rotation",
        "finished_seamless_rotation_frame",
        "window_frames",
        "force_seamless_rotation",
        "has_compat_scale",
        "global_scale",
    };
    static const uint64_t _FIELD_IDS[43] = {
        WINDOW_CONTAINER,
        IDENTIFIER,
        DISPLAY_ID,
        STACK_ID,
        ATTRIBUTES,
        GIVEN_CONTENT_INSETS,
        FRAME,
        CONTAINING_FRAME,
        PARENT_FRAME,
        CONTENT_FRAME,
        CONTENT_INSETS,
        SURFACE_INSETS,
        ANIMATOR,
        ANIMATING_EXIT,
        CHILD_WINDOWS,
        SURFACE_POSITION,
        REQUESTED_WIDTH,
        REQUESTED_HEIGHT,
        VIEW_VISIBILITY,
        SYSTEM_UI_VISIBILITY,
        HAS_SURFACE,
        IS_READY_FOR_DISPLAY,
        DISPLAY_FRAME,
        OVERSCAN_FRAME,
        VISIBLE_FRAME,
        DECOR_FRAME,
        OUTSET_FRAME,
        OVERSCAN_INSETS,
        VISIBLE_INSETS,
        STABLE_INSETS,
        OUTSETS,
        CUTOUT,
        REMOVE_ON_EXIT,
        DESTROYING,
        REMOVED,
        IS_ON_SCREEN,
        IS_VISIBLE,
        PENDING_SEAMLESS_ROTATION,
        FINISHED_SEAMLESS_ROTATION_FRAME,
        WINDOW_FRAMES,
        FORCE_SEAMLESS_ROTATION,
        HAS_COMPAT_SCALE,
        GLOBAL_SCALE,
    };

} //WindowStateProto

// message IdentifierProto
namespace IdentifierProto {
    // optional int32 hash_code = 1;
    const uint64_t HASH_CODE = 0x0000010500000001LL;

    // optional int32 user_id = 2;
    const uint64_t USER_ID = 0x0000010500000002LL;

    // optional string title = 3;
    const uint64_t TITLE = 0x0000010900000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "hash_code",
        "user_id",
        "title",
    };
    static const uint64_t _FIELD_IDS[3] = {
        HASH_CODE,
        USER_ID,
        TITLE,
    };

} //IdentifierProto

// message WindowStateAnimatorProto
namespace WindowStateAnimatorProto {
    // enum DrawState
    const int NO_SURFACE = 0;
    const int DRAW_PENDING = 1;
    const int COMMIT_DRAW_PENDING = 2;
    const int READY_TO_SHOW = 3;
    const int HAS_DRAWN = 4;
    static const int _ENUM_DRAW_STATE_COUNT = 5;
    static const char* _ENUM_DRAW_STATE_NAMES[5] = {
        "NO_SURFACE",
        "DRAW_PENDING",
        "COMMIT_DRAW_PENDING",
        "READY_TO_SHOW",
        "HAS_DRAWN",
    };
    static const int _ENUM_DRAW_STATE_VALUES[5] = {
        NO_SURFACE,
        DRAW_PENDING,
        COMMIT_DRAW_PENDING,
        READY_TO_SHOW,
        HAS_DRAWN,
    };

    // optional .android.graphics.RectProto last_clip_rect = 1;
    const uint64_t LAST_CLIP_RECT = 0x0000010b00000001LL;

    // optional .com.android.server.wm.WindowSurfaceControllerProto surface = 2;
    const uint64_t SURFACE = 0x0000010b00000002LL;

    // optional .com.android.server.wm.WindowStateAnimatorProto.DrawState draw_state = 3;
    const uint64_t DRAW_STATE = 0x0000010e00000003LL;

    // optional .android.graphics.RectProto system_decor_rect = 4;
    const uint64_t SYSTEM_DECOR_RECT = 0x0000010b00000004LL;

    static const int _FIELD_COUNT = 4;
    static const char* _FIELD_NAMES[4] = {
        "last_clip_rect",
        "surface",
        "draw_state",
        "system_decor_rect",
    };
    static const uint64_t _FIELD_IDS[4] = {
        LAST_CLIP_RECT,
        SURFACE,
        DRAW_STATE,
        SYSTEM_DECOR_RECT,
    };

} //WindowStateAnimatorProto

// message WindowSurfaceControllerProto
namespace WindowSurfaceControllerProto {
    // optional bool shown = 1;
    const uint64_t SHOWN = 0x0000010800000001LL;

    // optional int32 layer = 2;
    const uint64_t LAYER = 0x0000010500000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "shown",
        "layer",
    };
    static const uint64_t _FIELD_IDS[2] = {
        SHOWN,
        LAYER,
    };

} //WindowSurfaceControllerProto

// message ScreenRotationAnimationProto
namespace ScreenRotationAnimationProto {
    // optional bool started = 1;
    const uint64_t STARTED = 0x0000010800000001LL;

    // optional bool animation_running = 2;
    const uint64_t ANIMATION_RUNNING = 0x0000010800000002LL;

    static const int _FIELD_COUNT = 2;
    static const char* _FIELD_NAMES[2] = {
        "started",
        "animation_running",
    };
    static const uint64_t _FIELD_IDS[2] = {
        STARTED,
        ANIMATION_RUNNING,
    };

} //ScreenRotationAnimationProto

// message WindowContainerProto
namespace WindowContainerProto {
    // optional .com.android.server.wm.ConfigurationContainerProto configuration_container = 1;
    const uint64_t CONFIGURATION_CONTAINER = 0x0000010b00000001LL;

    // optional int32 orientation = 2;
    const uint64_t ORIENTATION = 0x0000010500000002LL;

    // optional bool visible = 3;
    const uint64_t VISIBLE = 0x0000010800000003LL;

    // optional .com.android.server.wm.SurfaceAnimatorProto surface_animator = 4;
    const uint64_t SURFACE_ANIMATOR = 0x0000010b00000004LL;

    // repeated .com.android.server.wm.WindowContainerChildProto children = 5;
    const uint64_t CHILDREN = 0x0000020b00000005LL;

    // optional .com.android.server.wm.IdentifierProto identifier = 6;
    const uint64_t IDENTIFIER = 0x0000010b00000006LL;

    // optional .android.view.SurfaceControlProto surface_control = 7;
    const uint64_t SURFACE_CONTROL = 0x0000010b00000007LL;

    static const int _FIELD_COUNT = 7;
    static const char* _FIELD_NAMES[7] = {
        "configuration_container",
        "orientation",
        "visible",
        "surface_animator",
        "children",
        "identifier",
        "surface_control",
    };
    static const uint64_t _FIELD_IDS[7] = {
        CONFIGURATION_CONTAINER,
        ORIENTATION,
        VISIBLE,
        SURFACE_ANIMATOR,
        CHILDREN,
        IDENTIFIER,
        SURFACE_CONTROL,
    };

} //WindowContainerProto

// message WindowContainerChildProto
namespace WindowContainerChildProto {
    // optional .com.android.server.wm.WindowContainerProto window_container = 2;
    const uint64_t WINDOW_CONTAINER = 0x0000010b00000002LL;

    // optional .com.android.server.wm.DisplayContentProto display_content = 3;
    const uint64_t DISPLAY_CONTENT = 0x0000010b00000003LL;

    // optional .com.android.server.wm.DisplayAreaProto display_area = 4;
    const uint64_t DISPLAY_AREA = 0x0000010b00000004LL;

    // optional .com.android.server.wm.TaskProto task = 5;
    const uint64_t TASK = 0x0000010b00000005LL;

    // optional .com.android.server.wm.ActivityRecordProto activity = 6;
    const uint64_t ACTIVITY = 0x0000010b00000006LL;

    // optional .com.android.server.wm.WindowTokenProto window_token = 7;
    const uint64_t WINDOW_TOKEN = 0x0000010b00000007LL;

    // optional .com.android.server.wm.WindowStateProto window = 8;
    const uint64_t WINDOW = 0x0000010b00000008LL;

    // optional .com.android.server.wm.TaskFragmentProto task_fragment = 9;
    const uint64_t TASK_FRAGMENT = 0x0000010b00000009LL;

    static const int _FIELD_COUNT = 8;
    static const char* _FIELD_NAMES[8] = {
        "window_container",
        "display_content",
        "display_area",
        "task",
        "activity",
        "window_token",
        "window",
        "task_fragment",
    };
    static const uint64_t _FIELD_IDS[8] = {
        WINDOW_CONTAINER,
        DISPLAY_CONTENT,
        DISPLAY_AREA,
        TASK,
        ACTIVITY,
        WINDOW_TOKEN,
        WINDOW,
        TASK_FRAGMENT,
    };

} //WindowContainerChildProto

// message ConfigurationContainerProto
namespace ConfigurationContainerProto {
    // optional .android.content.ConfigurationProto override_configuration = 1;
    const uint64_t OVERRIDE_CONFIGURATION = 0x0000010b00000001LL;

    // optional .android.content.ConfigurationProto full_configuration = 2;
    const uint64_t FULL_CONFIGURATION = 0x0000010b00000002LL;

    // optional .android.content.ConfigurationProto merged_override_configuration = 3;
    const uint64_t MERGED_OVERRIDE_CONFIGURATION = 0x0000010b00000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "override_configuration",
        "full_configuration",
        "merged_override_configuration",
    };
    static const uint64_t _FIELD_IDS[3] = {
        OVERRIDE_CONFIGURATION,
        FULL_CONFIGURATION,
        MERGED_OVERRIDE_CONFIGURATION,
    };

} //ConfigurationContainerProto

// message WindowFramesProto
namespace WindowFramesProto {
    // optional .android.graphics.RectProto containing_frame = 1;
    const uint64_t CONTAINING_FRAME = 0x0000010b00000001LL;

    // optional .android.graphics.RectProto content_frame = 2;
    const uint64_t CONTENT_FRAME = 0x0000010b00000002LL;

    // optional .android.graphics.RectProto decor_frame = 3;
    const uint64_t DECOR_FRAME = 0x0000010b00000003LL;

    // optional .android.graphics.RectProto display_frame = 4;
    const uint64_t DISPLAY_FRAME = 0x0000010b00000004LL;

    // optional .android.graphics.RectProto frame = 5;
    const uint64_t FRAME = 0x0000010b00000005LL;

    // optional .android.graphics.RectProto outset_frame = 6;
    const uint64_t OUTSET_FRAME = 0x0000010b00000006LL;

    // optional .android.graphics.RectProto overscan_frame = 7;
    const uint64_t OVERSCAN_FRAME = 0x0000010b00000007LL;

    // optional .android.graphics.RectProto parent_frame = 8;
    const uint64_t PARENT_FRAME = 0x0000010b00000008LL;

    // optional .android.graphics.RectProto visible_frame = 9;
    const uint64_t VISIBLE_FRAME = 0x0000010b00000009LL;

    // optional .android.view.DisplayCutoutProto cutout = 10;
    const uint64_t CUTOUT = 0x0000010b0000000aLL;

    // optional .android.graphics.RectProto content_insets = 11;
    const uint64_t CONTENT_INSETS = 0x0000010b0000000bLL;

    // optional .android.graphics.RectProto overscan_insets = 12;
    const uint64_t OVERSCAN_INSETS = 0x0000010b0000000cLL;

    // optional .android.graphics.RectProto visible_insets = 13;
    const uint64_t VISIBLE_INSETS = 0x0000010b0000000dLL;

    // optional .android.graphics.RectProto stable_insets = 14;
    const uint64_t STABLE_INSETS = 0x0000010b0000000eLL;

    // optional .android.graphics.RectProto outsets = 15;
    const uint64_t OUTSETS = 0x0000010b0000000fLL;

    // optional .android.graphics.RectProto compat_frame = 16;
    const uint64_t COMPAT_FRAME = 0x0000010b00000010LL;

    static const int _FIELD_COUNT = 16;
    static const char* _FIELD_NAMES[16] = {
        "containing_frame",
        "content_frame",
        "decor_frame",
        "display_frame",
        "frame",
        "outset_frame",
        "overscan_frame",
        "parent_frame",
        "visible_frame",
        "cutout",
        "content_insets",
        "overscan_insets",
        "visible_insets",
        "stable_insets",
        "outsets",
        "compat_frame",
    };
    static const uint64_t _FIELD_IDS[16] = {
        CONTAINING_FRAME,
        CONTENT_FRAME,
        DECOR_FRAME,
        DISPLAY_FRAME,
        FRAME,
        OUTSET_FRAME,
        OVERSCAN_FRAME,
        PARENT_FRAME,
        VISIBLE_FRAME,
        CUTOUT,
        CONTENT_INSETS,
        OVERSCAN_INSETS,
        VISIBLE_INSETS,
        STABLE_INSETS,
        OUTSETS,
        COMPAT_FRAME,
    };

} //WindowFramesProto

// message InsetsSourceProviderProto
namespace InsetsSourceProviderProto {
    // optional .android.view.InsetsSourceProto source = 1;
    const uint64_t SOURCE = 0x0000010b00000001LL;

    // optional .android.graphics.RectProto frame = 2;
    const uint64_t FRAME = 0x0000010b00000002LL;

    // optional .android.view.InsetsSourceControlProto fake_control = 3;
    const uint64_t FAKE_CONTROL = 0x0000010b00000003LL;

    // optional .android.view.InsetsSourceControlProto control = 4;
    const uint64_t CONTROL = 0x0000010b00000004LL;

    // optional .com.android.server.wm.WindowStateProto control_target = 5;
    const uint64_t CONTROL_TARGET = 0x0000010b00000005LL;

    // optional .com.android.server.wm.WindowStateProto pending_control_target = 6;
    const uint64_t PENDING_CONTROL_TARGET = 0x0000010b00000006LL;

    // optional .com.android.server.wm.WindowStateProto fake_control_target = 7;
    const uint64_t FAKE_CONTROL_TARGET = 0x0000010b00000007LL;

    // optional .android.view.SurfaceControlProto captured_leash = 8;
    const uint64_t CAPTURED_LEASH = 0x0000010b00000008LL;

    // optional .android.graphics.RectProto ime_overridden_frame = 9;
    const uint64_t IME_OVERRIDDEN_FRAME = 0x0000010b00000009LL;

    // optional bool is_leash_ready_for_dispatching = 10;
    const uint64_t IS_LEASH_READY_FOR_DISPATCHING = 0x000001080000000aLL;

    // optional bool client_visible = 11;
    const uint64_t CLIENT_VISIBLE = 0x000001080000000bLL;

    // optional bool server_visible = 12;
    const uint64_t SERVER_VISIBLE = 0x000001080000000cLL;

    // optional bool seamless_rotating = 13;
    const uint64_t SEAMLESS_ROTATING = 0x000001080000000dLL;

    // optional int64 finish_seamless_rotate_frame_number = 14;
    const uint64_t FINISH_SEAMLESS_ROTATE_FRAME_NUMBER = 0x000001030000000eLL;

    // optional bool controllable = 15;
    const uint64_t CONTROLLABLE = 0x000001080000000fLL;

    static const int _FIELD_COUNT = 15;
    static const char* _FIELD_NAMES[15] = {
        "source",
        "frame",
        "fake_control",
        "control",
        "control_target",
        "pending_control_target",
        "fake_control_target",
        "captured_leash",
        "ime_overridden_frame",
        "is_leash_ready_for_dispatching",
        "client_visible",
        "server_visible",
        "seamless_rotating",
        "finish_seamless_rotate_frame_number",
        "controllable",
    };
    static const uint64_t _FIELD_IDS[15] = {
        SOURCE,
        FRAME,
        FAKE_CONTROL,
        CONTROL,
        CONTROL_TARGET,
        PENDING_CONTROL_TARGET,
        FAKE_CONTROL_TARGET,
        CAPTURED_LEASH,
        IME_OVERRIDDEN_FRAME,
        IS_LEASH_READY_FOR_DISPATCHING,
        CLIENT_VISIBLE,
        SERVER_VISIBLE,
        SEAMLESS_ROTATING,
        FINISH_SEAMLESS_ROTATE_FRAME_NUMBER,
        CONTROLLABLE,
    };

} //InsetsSourceProviderProto

// message ImeInsetsSourceProviderProto
namespace ImeInsetsSourceProviderProto {
    // optional .com.android.server.wm.InsetsSourceProviderProto insets_source_provider = 1;
    const uint64_t INSETS_SOURCE_PROVIDER = 0x0000010b00000001LL;

    // optional .com.android.server.wm.WindowStateProto ime_target_from_ime = 2;
    const uint64_t IME_TARGET_FROM_IME = 0x0000010b00000002LL;

    // optional bool is_ime_layout_drawn = 3;
    const uint64_t IS_IME_LAYOUT_DRAWN = 0x0000010800000003LL;

    static const int _FIELD_COUNT = 3;
    static const char* _FIELD_NAMES[3] = {
        "insets_source_provider",
        "ime_target_from_ime",
        "is_ime_layout_drawn",
    };
    static const uint64_t _FIELD_IDS[3] = {
        INSETS_SOURCE_PROVIDER,
        IME_TARGET_FROM_IME,
        IS_IME_LAYOUT_DRAWN,
    };

} //ImeInsetsSourceProviderProto

} // wm
} // server
} // android
} // com

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_SERVER_WINDOWMANAGERSERVICE_PROTO_STREAM_H
