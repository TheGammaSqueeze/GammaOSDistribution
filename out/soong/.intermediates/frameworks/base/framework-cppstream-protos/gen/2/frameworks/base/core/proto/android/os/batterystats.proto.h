// Generated by protoc-gen-cppstream. DO NOT MODIFY.
// source: frameworks/base/core/proto/android/os/batterystats.proto

#ifndef ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_OS_BATTERYSTATS_PROTO_STREAM_H
#define ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_OS_BATTERYSTATS_PROTO_STREAM_H

namespace android {
namespace os {

// message BatteryStatsProto
namespace BatteryStatsProto {
    // optional int32 report_version = 1;
    const uint64_t REPORT_VERSION = 0x0000010500000001LL;

    // optional int64 parcel_version = 2;
    const uint64_t PARCEL_VERSION = 0x0000010300000002LL;

    // optional string start_platform_version = 3;
    const uint64_t START_PLATFORM_VERSION = 0x0000010900000003LL;

    // optional string end_platform_version = 4;
    const uint64_t END_PLATFORM_VERSION = 0x0000010900000004LL;

    // repeated .android.os.UidProto uids = 5;
    const uint64_t UIDS = 0x0000020b00000005LL;

    // optional .android.os.SystemProto system = 6;
    const uint64_t SYSTEM = 0x0000010b00000006LL;

    static const int _FIELD_COUNT = 6;
    static const char* _FIELD_NAMES[6] = {
        "report_version",
        "parcel_version",
        "start_platform_version",
        "end_platform_version",
        "uids",
        "system",
    };
    static const uint64_t _FIELD_IDS[6] = {
        REPORT_VERSION,
        PARCEL_VERSION,
        START_PLATFORM_VERSION,
        END_PLATFORM_VERSION,
        UIDS,
        SYSTEM,
    };

} //BatteryStatsProto

// message ControllerActivityProto
namespace ControllerActivityProto {
    // message TxLevel
    namespace TxLevel {
        // optional int32 level = 1;
        const uint64_t LEVEL = 0x0000010500000001LL;

        // optional int64 duration_ms = 2;
        const uint64_t DURATION_MS = 0x0000010300000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "level",
            "duration_ms",
        };
        static const uint64_t _FIELD_IDS[2] = {
            LEVEL,
            DURATION_MS,
        };

    } //TxLevel

    // optional int64 idle_duration_ms = 1;
    const uint64_t IDLE_DURATION_MS = 0x0000010300000001LL;

    // optional int64 rx_duration_ms = 2;
    const uint64_t RX_DURATION_MS = 0x0000010300000002LL;

    // optional int64 power_mah = 3;
    const uint64_t POWER_MAH = 0x0000010300000003LL;

    // repeated .android.os.ControllerActivityProto.TxLevel tx = 4;
    const uint64_t TX = 0x0000020b00000004LL;

    // optional double monitored_rail_charge_mah = 5;
    const uint64_t MONITORED_RAIL_CHARGE_MAH = 0x0000010100000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "idle_duration_ms",
        "rx_duration_ms",
        "power_mah",
        "tx",
        "monitored_rail_charge_mah",
    };
    static const uint64_t _FIELD_IDS[5] = {
        IDLE_DURATION_MS,
        RX_DURATION_MS,
        POWER_MAH,
        TX,
        MONITORED_RAIL_CHARGE_MAH,
    };

} //ControllerActivityProto

// message SystemProto
namespace SystemProto {
    // message Battery
    namespace Battery {
        // optional int64 start_clock_time_ms = 1;
        const uint64_t START_CLOCK_TIME_MS = 0x0000010300000001LL;

        // optional int64 start_count = 2;
        const uint64_t START_COUNT = 0x0000010300000002LL;

        // optional int64 total_realtime_ms = 3;
        const uint64_t TOTAL_REALTIME_MS = 0x0000010300000003LL;

        // optional int64 total_uptime_ms = 4;
        const uint64_t TOTAL_UPTIME_MS = 0x0000010300000004LL;

        // optional int64 battery_realtime_ms = 5;
        const uint64_t BATTERY_REALTIME_MS = 0x0000010300000005LL;

        // optional int64 battery_uptime_ms = 6;
        const uint64_t BATTERY_UPTIME_MS = 0x0000010300000006LL;

        // optional int64 screen_off_realtime_ms = 7;
        const uint64_t SCREEN_OFF_REALTIME_MS = 0x0000010300000007LL;

        // optional int64 screen_off_uptime_ms = 8;
        const uint64_t SCREEN_OFF_UPTIME_MS = 0x0000010300000008LL;

        // optional int64 screen_doze_duration_ms = 9;
        const uint64_t SCREEN_DOZE_DURATION_MS = 0x0000010300000009LL;

        // optional int64 estimated_battery_capacity_mah = 10;
        const uint64_t ESTIMATED_BATTERY_CAPACITY_MAH = 0x000001030000000aLL;

        // optional int64 min_learned_battery_capacity_uah = 11;
        const uint64_t MIN_LEARNED_BATTERY_CAPACITY_UAH = 0x000001030000000bLL;

        // optional int64 max_learned_battery_capacity_uah = 12;
        const uint64_t MAX_LEARNED_BATTERY_CAPACITY_UAH = 0x000001030000000cLL;

        static const int _FIELD_COUNT = 12;
        static const char* _FIELD_NAMES[12] = {
            "start_clock_time_ms",
            "start_count",
            "total_realtime_ms",
            "total_uptime_ms",
            "battery_realtime_ms",
            "battery_uptime_ms",
            "screen_off_realtime_ms",
            "screen_off_uptime_ms",
            "screen_doze_duration_ms",
            "estimated_battery_capacity_mah",
            "min_learned_battery_capacity_uah",
            "max_learned_battery_capacity_uah",
        };
        static const uint64_t _FIELD_IDS[12] = {
            START_CLOCK_TIME_MS,
            START_COUNT,
            TOTAL_REALTIME_MS,
            TOTAL_UPTIME_MS,
            BATTERY_REALTIME_MS,
            BATTERY_UPTIME_MS,
            SCREEN_OFF_REALTIME_MS,
            SCREEN_OFF_UPTIME_MS,
            SCREEN_DOZE_DURATION_MS,
            ESTIMATED_BATTERY_CAPACITY_MAH,
            MIN_LEARNED_BATTERY_CAPACITY_UAH,
            MAX_LEARNED_BATTERY_CAPACITY_UAH,
        };

    } //Battery

    // message BatteryDischarge
    namespace BatteryDischarge {
        // optional int32 lower_bound_since_charge = 1;
        const uint64_t LOWER_BOUND_SINCE_CHARGE = 0x0000010500000001LL;

        // optional int32 upper_bound_since_charge = 2;
        const uint64_t UPPER_BOUND_SINCE_CHARGE = 0x0000010500000002LL;

        // optional int32 screen_on_since_charge = 3;
        const uint64_t SCREEN_ON_SINCE_CHARGE = 0x0000010500000003LL;

        // optional int32 screen_off_since_charge = 4;
        const uint64_t SCREEN_OFF_SINCE_CHARGE = 0x0000010500000004LL;

        // optional int32 screen_doze_since_charge = 5;
        const uint64_t SCREEN_DOZE_SINCE_CHARGE = 0x0000010500000005LL;

        // optional int64 total_mah = 6;
        const uint64_t TOTAL_MAH = 0x0000010300000006LL;

        // optional int64 total_mah_screen_off = 7;
        const uint64_t TOTAL_MAH_SCREEN_OFF = 0x0000010300000007LL;

        // optional int64 total_mah_screen_doze = 8;
        const uint64_t TOTAL_MAH_SCREEN_DOZE = 0x0000010300000008LL;

        // optional int64 total_mah_light_doze = 9;
        const uint64_t TOTAL_MAH_LIGHT_DOZE = 0x0000010300000009LL;

        // optional int64 total_mah_deep_doze = 10;
        const uint64_t TOTAL_MAH_DEEP_DOZE = 0x000001030000000aLL;

        static const int _FIELD_COUNT = 10;
        static const char* _FIELD_NAMES[10] = {
            "lower_bound_since_charge",
            "upper_bound_since_charge",
            "screen_on_since_charge",
            "screen_off_since_charge",
            "screen_doze_since_charge",
            "total_mah",
            "total_mah_screen_off",
            "total_mah_screen_doze",
            "total_mah_light_doze",
            "total_mah_deep_doze",
        };
        static const uint64_t _FIELD_IDS[10] = {
            LOWER_BOUND_SINCE_CHARGE,
            UPPER_BOUND_SINCE_CHARGE,
            SCREEN_ON_SINCE_CHARGE,
            SCREEN_OFF_SINCE_CHARGE,
            SCREEN_DOZE_SINCE_CHARGE,
            TOTAL_MAH,
            TOTAL_MAH_SCREEN_OFF,
            TOTAL_MAH_SCREEN_DOZE,
            TOTAL_MAH_LIGHT_DOZE,
            TOTAL_MAH_DEEP_DOZE,
        };

    } //BatteryDischarge

    // message BatteryLevelStep
    namespace BatteryLevelStep {
        // enum DisplayState
        const int DS_MIXED = 0;
        const int DS_ON = 1;
        const int DS_OFF = 2;
        const int DS_DOZE = 3;
        const int DS_DOZE_SUSPEND = 4;
        const int DS_ERROR = 5;
        static const int _ENUM_DISPLAY_STATE_COUNT = 6;
        static const char* _ENUM_DISPLAY_STATE_NAMES[6] = {
            "DS_MIXED",
            "DS_ON",
            "DS_OFF",
            "DS_DOZE",
            "DS_DOZE_SUSPEND",
            "DS_ERROR",
        };
        static const int _ENUM_DISPLAY_STATE_VALUES[6] = {
            DS_MIXED,
            DS_ON,
            DS_OFF,
            DS_DOZE,
            DS_DOZE_SUSPEND,
            DS_ERROR,
        };

        // enum PowerSaveMode
        const int PSM_MIXED = 0;
        const int PSM_ON = 1;
        const int PSM_OFF = 2;
        static const int _ENUM_POWER_SAVE_MODE_COUNT = 3;
        static const char* _ENUM_POWER_SAVE_MODE_NAMES[3] = {
            "PSM_MIXED",
            "PSM_ON",
            "PSM_OFF",
        };
        static const int _ENUM_POWER_SAVE_MODE_VALUES[3] = {
            PSM_MIXED,
            PSM_ON,
            PSM_OFF,
        };

        // enum IdleMode
        const int IM_MIXED = 0;
        const int IM_ON = 2;
        const int IM_OFF = 3;
        static const int _ENUM_IDLE_MODE_COUNT = 3;
        static const char* _ENUM_IDLE_MODE_NAMES[3] = {
            "IM_MIXED",
            "IM_ON",
            "IM_OFF",
        };
        static const int _ENUM_IDLE_MODE_VALUES[3] = {
            IM_MIXED,
            IM_ON,
            IM_OFF,
        };

        // optional int64 duration_ms = 1;
        const uint64_t DURATION_MS = 0x0000010300000001LL;

        // optional int32 level = 2;
        const uint64_t LEVEL = 0x0000010500000002LL;

        // optional .android.os.SystemProto.BatteryLevelStep.DisplayState display_state = 3;
        const uint64_t DISPLAY_STATE = 0x0000010e00000003LL;

        // optional .android.os.SystemProto.BatteryLevelStep.PowerSaveMode power_save_mode = 4;
        const uint64_t POWER_SAVE_MODE = 0x0000010e00000004LL;

        // optional .android.os.SystemProto.BatteryLevelStep.IdleMode idle_mode = 5;
        const uint64_t IDLE_MODE = 0x0000010e00000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "duration_ms",
            "level",
            "display_state",
            "power_save_mode",
            "idle_mode",
        };
        static const uint64_t _FIELD_IDS[5] = {
            DURATION_MS,
            LEVEL,
            DISPLAY_STATE,
            POWER_SAVE_MODE,
            IDLE_MODE,
        };

    } //BatteryLevelStep

    // message DataConnection
    namespace DataConnection {
        // optional .android.telephony.NetworkTypeEnum name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional bool is_none = 2;
        const uint64_t IS_NONE = 0x0000010800000002LL;

        // optional .android.os.TimerProto total = 3;
        const uint64_t TOTAL = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "name",
            "is_none",
            "total",
        };
        static const uint64_t _FIELD_IDS[3] = {
            NAME,
            IS_NONE,
            TOTAL,
        };

    } //DataConnection

    // message GlobalNetwork
    namespace GlobalNetwork {
        // optional int64 mobile_bytes_rx = 1;
        const uint64_t MOBILE_BYTES_RX = 0x0000010300000001LL;

        // optional int64 mobile_bytes_tx = 2;
        const uint64_t MOBILE_BYTES_TX = 0x0000010300000002LL;

        // optional int64 wifi_bytes_rx = 3;
        const uint64_t WIFI_BYTES_RX = 0x0000010300000003LL;

        // optional int64 wifi_bytes_tx = 4;
        const uint64_t WIFI_BYTES_TX = 0x0000010300000004LL;

        // optional int64 mobile_packets_rx = 5;
        const uint64_t MOBILE_PACKETS_RX = 0x0000010300000005LL;

        // optional int64 mobile_packets_tx = 6;
        const uint64_t MOBILE_PACKETS_TX = 0x0000010300000006LL;

        // optional int64 wifi_packets_rx = 7;
        const uint64_t WIFI_PACKETS_RX = 0x0000010300000007LL;

        // optional int64 wifi_packets_tx = 8;
        const uint64_t WIFI_PACKETS_TX = 0x0000010300000008LL;

        // optional int64 bt_bytes_rx = 9;
        const uint64_t BT_BYTES_RX = 0x0000010300000009LL;

        // optional int64 bt_bytes_tx = 10;
        const uint64_t BT_BYTES_TX = 0x000001030000000aLL;

        static const int _FIELD_COUNT = 10;
        static const char* _FIELD_NAMES[10] = {
            "mobile_bytes_rx",
            "mobile_bytes_tx",
            "wifi_bytes_rx",
            "wifi_bytes_tx",
            "mobile_packets_rx",
            "mobile_packets_tx",
            "wifi_packets_rx",
            "wifi_packets_tx",
            "bt_bytes_rx",
            "bt_bytes_tx",
        };
        static const uint64_t _FIELD_IDS[10] = {
            MOBILE_BYTES_RX,
            MOBILE_BYTES_TX,
            WIFI_BYTES_RX,
            WIFI_BYTES_TX,
            MOBILE_PACKETS_RX,
            MOBILE_PACKETS_TX,
            WIFI_PACKETS_RX,
            WIFI_PACKETS_TX,
            BT_BYTES_RX,
            BT_BYTES_TX,
        };

    } //GlobalNetwork

    // message GlobalWifi
    namespace GlobalWifi {
        // optional int64 on_duration_ms = 1;
        const uint64_t ON_DURATION_MS = 0x0000010300000001LL;

        // optional int64 running_duration_ms = 2;
        const uint64_t RUNNING_DURATION_MS = 0x0000010300000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "on_duration_ms",
            "running_duration_ms",
        };
        static const uint64_t _FIELD_IDS[2] = {
            ON_DURATION_MS,
            RUNNING_DURATION_MS,
        };

    } //GlobalWifi

    // message KernelWakelock
    namespace KernelWakelock {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //KernelWakelock

    // message Misc
    namespace Misc {
        // optional int64 screen_on_duration_ms = 1;
        const uint64_t SCREEN_ON_DURATION_MS = 0x0000010300000001LL;

        // optional int64 phone_on_duration_ms = 2;
        const uint64_t PHONE_ON_DURATION_MS = 0x0000010300000002LL;

        // optional int64 full_wakelock_total_duration_ms = 3;
        const uint64_t FULL_WAKELOCK_TOTAL_DURATION_MS = 0x0000010300000003LL;

        // optional int64 partial_wakelock_total_duration_ms = 4;
        const uint64_t PARTIAL_WAKELOCK_TOTAL_DURATION_MS = 0x0000010300000004LL;

        // optional int64 mobile_radio_active_duration_ms = 5;
        const uint64_t MOBILE_RADIO_ACTIVE_DURATION_MS = 0x0000010300000005LL;

        // optional int64 mobile_radio_active_adjusted_time_ms = 6;
        const uint64_t MOBILE_RADIO_ACTIVE_ADJUSTED_TIME_MS = 0x0000010300000006LL;

        // optional int32 mobile_radio_active_count = 7;
        const uint64_t MOBILE_RADIO_ACTIVE_COUNT = 0x0000010500000007LL;

        // optional int32 mobile_radio_active_unknown_duration_ms = 8;
        const uint64_t MOBILE_RADIO_ACTIVE_UNKNOWN_DURATION_MS = 0x0000010500000008LL;

        // optional int64 interactive_duration_ms = 9;
        const uint64_t INTERACTIVE_DURATION_MS = 0x0000010300000009LL;

        // optional int64 battery_saver_mode_enabled_duration_ms = 10;
        const uint64_t BATTERY_SAVER_MODE_ENABLED_DURATION_MS = 0x000001030000000aLL;

        // optional int32 num_connectivity_changes = 11;
        const uint64_t NUM_CONNECTIVITY_CHANGES = 0x000001050000000bLL;

        // optional int64 deep_doze_enabled_duration_ms = 12;
        const uint64_t DEEP_DOZE_ENABLED_DURATION_MS = 0x000001030000000cLL;

        // optional int32 deep_doze_count = 13;
        const uint64_t DEEP_DOZE_COUNT = 0x000001050000000dLL;

        // optional int64 deep_doze_idling_duration_ms = 14;
        const uint64_t DEEP_DOZE_IDLING_DURATION_MS = 0x000001030000000eLL;

        // optional int32 deep_doze_idling_count = 15;
        const uint64_t DEEP_DOZE_IDLING_COUNT = 0x000001050000000fLL;

        // optional int64 longest_deep_doze_duration_ms = 16;
        const uint64_t LONGEST_DEEP_DOZE_DURATION_MS = 0x0000010300000010LL;

        // optional int64 light_doze_enabled_duration_ms = 17;
        const uint64_t LIGHT_DOZE_ENABLED_DURATION_MS = 0x0000010300000011LL;

        // optional int32 light_doze_count = 18;
        const uint64_t LIGHT_DOZE_COUNT = 0x0000010500000012LL;

        // optional int64 light_doze_idling_duration_ms = 19;
        const uint64_t LIGHT_DOZE_IDLING_DURATION_MS = 0x0000010300000013LL;

        // optional int32 light_doze_idling_count = 20;
        const uint64_t LIGHT_DOZE_IDLING_COUNT = 0x0000010500000014LL;

        // optional int64 longest_light_doze_duration_ms = 21;
        const uint64_t LONGEST_LIGHT_DOZE_DURATION_MS = 0x0000010300000015LL;

        static const int _FIELD_COUNT = 21;
        static const char* _FIELD_NAMES[21] = {
            "screen_on_duration_ms",
            "phone_on_duration_ms",
            "full_wakelock_total_duration_ms",
            "partial_wakelock_total_duration_ms",
            "mobile_radio_active_duration_ms",
            "mobile_radio_active_adjusted_time_ms",
            "mobile_radio_active_count",
            "mobile_radio_active_unknown_duration_ms",
            "interactive_duration_ms",
            "battery_saver_mode_enabled_duration_ms",
            "num_connectivity_changes",
            "deep_doze_enabled_duration_ms",
            "deep_doze_count",
            "deep_doze_idling_duration_ms",
            "deep_doze_idling_count",
            "longest_deep_doze_duration_ms",
            "light_doze_enabled_duration_ms",
            "light_doze_count",
            "light_doze_idling_duration_ms",
            "light_doze_idling_count",
            "longest_light_doze_duration_ms",
        };
        static const uint64_t _FIELD_IDS[21] = {
            SCREEN_ON_DURATION_MS,
            PHONE_ON_DURATION_MS,
            FULL_WAKELOCK_TOTAL_DURATION_MS,
            PARTIAL_WAKELOCK_TOTAL_DURATION_MS,
            MOBILE_RADIO_ACTIVE_DURATION_MS,
            MOBILE_RADIO_ACTIVE_ADJUSTED_TIME_MS,
            MOBILE_RADIO_ACTIVE_COUNT,
            MOBILE_RADIO_ACTIVE_UNKNOWN_DURATION_MS,
            INTERACTIVE_DURATION_MS,
            BATTERY_SAVER_MODE_ENABLED_DURATION_MS,
            NUM_CONNECTIVITY_CHANGES,
            DEEP_DOZE_ENABLED_DURATION_MS,
            DEEP_DOZE_COUNT,
            DEEP_DOZE_IDLING_DURATION_MS,
            DEEP_DOZE_IDLING_COUNT,
            LONGEST_DEEP_DOZE_DURATION_MS,
            LIGHT_DOZE_ENABLED_DURATION_MS,
            LIGHT_DOZE_COUNT,
            LIGHT_DOZE_IDLING_DURATION_MS,
            LIGHT_DOZE_IDLING_COUNT,
            LONGEST_LIGHT_DOZE_DURATION_MS,
        };

    } //Misc

    // message PhoneSignalStrength
    namespace PhoneSignalStrength {
        // optional .android.telephony.SignalStrengthEnum name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //PhoneSignalStrength

    // message PowerUseItem
    namespace PowerUseItem {
        // enum Sipper
        const int UNKNOWN_SIPPER = 0;
        const int IDLE = 1;
        const int CELL = 2;
        const int PHONE = 3;
        const int WIFI = 4;
        const int BLUETOOTH = 5;
        const int FLASHLIGHT = 6;
        const int SCREEN = 7;
        const int USER = 8;
        const int UNACCOUNTED = 9;
        const int OVERCOUNTED = 10;
        const int CAMERA = 11;
        const int MEMORY = 12;
        const int AMBIENT_DISPLAY = 13;
        static const int _ENUM_SIPPER_COUNT = 14;
        static const char* _ENUM_SIPPER_NAMES[14] = {
            "UNKNOWN_SIPPER",
            "IDLE",
            "CELL",
            "PHONE",
            "WIFI",
            "BLUETOOTH",
            "FLASHLIGHT",
            "SCREEN",
            "USER",
            "UNACCOUNTED",
            "OVERCOUNTED",
            "CAMERA",
            "MEMORY",
            "AMBIENT_DISPLAY",
        };
        static const int _ENUM_SIPPER_VALUES[14] = {
            UNKNOWN_SIPPER,
            IDLE,
            CELL,
            PHONE,
            WIFI,
            BLUETOOTH,
            FLASHLIGHT,
            SCREEN,
            USER,
            UNACCOUNTED,
            OVERCOUNTED,
            CAMERA,
            MEMORY,
            AMBIENT_DISPLAY,
        };

        // optional .android.os.SystemProto.PowerUseItem.Sipper name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional int32 uid = 2;
        const uint64_t UID = 0x0000010500000002LL;

        // optional double computed_power_mah = 3;
        const uint64_t COMPUTED_POWER_MAH = 0x0000010100000003LL;

        // optional bool should_hide = 4;
        const uint64_t SHOULD_HIDE = 0x0000010800000004LL;

        // optional double screen_power_mah = 5;
        const uint64_t SCREEN_POWER_MAH = 0x0000010100000005LL;

        // optional double proportional_smear_mah = 6;
        const uint64_t PROPORTIONAL_SMEAR_MAH = 0x0000010100000006LL;

        static const int _FIELD_COUNT = 6;
        static const char* _FIELD_NAMES[6] = {
            "name",
            "uid",
            "computed_power_mah",
            "should_hide",
            "screen_power_mah",
            "proportional_smear_mah",
        };
        static const uint64_t _FIELD_IDS[6] = {
            NAME,
            UID,
            COMPUTED_POWER_MAH,
            SHOULD_HIDE,
            SCREEN_POWER_MAH,
            PROPORTIONAL_SMEAR_MAH,
        };

    } //PowerUseItem

    // message PowerUseSummary
    namespace PowerUseSummary {
        // optional double battery_capacity_mah = 1;
        const uint64_t BATTERY_CAPACITY_MAH = 0x0000010100000001LL;

        // optional double computed_power_mah = 2;
        const uint64_t COMPUTED_POWER_MAH = 0x0000010100000002LL;

        // optional double min_drained_power_mah = 3;
        const uint64_t MIN_DRAINED_POWER_MAH = 0x0000010100000003LL;

        // optional double max_drained_power_mah = 4;
        const uint64_t MAX_DRAINED_POWER_MAH = 0x0000010100000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "battery_capacity_mah",
            "computed_power_mah",
            "min_drained_power_mah",
            "max_drained_power_mah",
        };
        static const uint64_t _FIELD_IDS[4] = {
            BATTERY_CAPACITY_MAH,
            COMPUTED_POWER_MAH,
            MIN_DRAINED_POWER_MAH,
            MAX_DRAINED_POWER_MAH,
        };

    } //PowerUseSummary

    // message ResourcePowerManager
    namespace ResourcePowerManager {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        // optional .android.os.TimerProto screen_off = 3;
        const uint64_t SCREEN_OFF = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "name",
            "total",
            "screen_off",
        };
        static const uint64_t _FIELD_IDS[3] = {
            NAME,
            TOTAL,
            SCREEN_OFF,
        };

    } //ResourcePowerManager

    // message ScreenBrightness
    namespace ScreenBrightness {
        // enum Name
        const int DARK = 0;
        const int DIM = 1;
        const int MEDIUM = 2;
        const int LIGHT = 3;
        const int BRIGHT = 4;
        static const int _ENUM_NAME_COUNT = 5;
        static const char* _ENUM_NAME_NAMES[5] = {
            "DARK",
            "DIM",
            "MEDIUM",
            "LIGHT",
            "BRIGHT",
        };
        static const int _ENUM_NAME_VALUES[5] = {
            DARK,
            DIM,
            MEDIUM,
            LIGHT,
            BRIGHT,
        };

        // optional .android.os.SystemProto.ScreenBrightness.Name name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //ScreenBrightness

    // message WakeupReason
    namespace WakeupReason {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //WakeupReason

    // message WifiMulticastWakelockTotal
    namespace WifiMulticastWakelockTotal {
        // optional int64 duration_ms = 1;
        const uint64_t DURATION_MS = 0x0000010300000001LL;

        // optional int32 count = 2;
        const uint64_t COUNT = 0x0000010500000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "duration_ms",
            "count",
        };
        static const uint64_t _FIELD_IDS[2] = {
            DURATION_MS,
            COUNT,
        };

    } //WifiMulticastWakelockTotal

    // message WifiSignalStrength
    namespace WifiSignalStrength {
        // enum Name
        const int NONE = 0;
        const int POOR = 1;
        const int MODERATE = 2;
        const int GOOD = 3;
        const int GREAT = 4;
        static const int _ENUM_NAME_COUNT = 5;
        static const char* _ENUM_NAME_NAMES[5] = {
            "NONE",
            "POOR",
            "MODERATE",
            "GOOD",
            "GREAT",
        };
        static const int _ENUM_NAME_VALUES[5] = {
            NONE,
            POOR,
            MODERATE,
            GOOD,
            GREAT,
        };

        // optional .android.os.SystemProto.WifiSignalStrength.Name name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //WifiSignalStrength

    // message WifiState
    namespace WifiState {
        // enum Name
        const int OFF = 0;
        const int OFF_SCANNING = 1;
        const int ON_NO_NETWORKS = 2;
        const int ON_DISCONNECTED = 3;
        const int ON_CONNECTED_STA = 4;
        const int ON_CONNECTED_P2P = 5;
        const int ON_CONNECTED_STA_P2P = 6;
        const int SOFT_AP = 7;
        static const int _ENUM_NAME_COUNT = 8;
        static const char* _ENUM_NAME_NAMES[8] = {
            "OFF",
            "OFF_SCANNING",
            "ON_NO_NETWORKS",
            "ON_DISCONNECTED",
            "ON_CONNECTED_STA",
            "ON_CONNECTED_P2P",
            "ON_CONNECTED_STA_P2P",
            "SOFT_AP",
        };
        static const int _ENUM_NAME_VALUES[8] = {
            OFF,
            OFF_SCANNING,
            ON_NO_NETWORKS,
            ON_DISCONNECTED,
            ON_CONNECTED_STA,
            ON_CONNECTED_P2P,
            ON_CONNECTED_STA_P2P,
            SOFT_AP,
        };

        // optional .android.os.SystemProto.WifiState.Name name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //WifiState

    // message WifiSupplicantState
    namespace WifiSupplicantState {
        // enum Name
        const int INVALID = 0;
        const int DISCONNECTED = 1;
        const int INTERFACE_DISABLED = 2;
        const int INACTIVE = 3;
        const int SCANNING = 4;
        const int AUTHENTICATING = 5;
        const int ASSOCIATING = 6;
        const int ASSOCIATED = 7;
        const int FOUR_WAY_HANDSHAKE = 8;
        const int GROUP_HANDSHAKE = 9;
        const int COMPLETED = 10;
        const int DORMANT = 11;
        const int UNINITIALIZED = 12;
        static const int _ENUM_NAME_COUNT = 13;
        static const char* _ENUM_NAME_NAMES[13] = {
            "INVALID",
            "DISCONNECTED",
            "INTERFACE_DISABLED",
            "INACTIVE",
            "SCANNING",
            "AUTHENTICATING",
            "ASSOCIATING",
            "ASSOCIATED",
            "FOUR_WAY_HANDSHAKE",
            "GROUP_HANDSHAKE",
            "COMPLETED",
            "DORMANT",
            "UNINITIALIZED",
        };
        static const int _ENUM_NAME_VALUES[13] = {
            INVALID,
            DISCONNECTED,
            INTERFACE_DISABLED,
            INACTIVE,
            SCANNING,
            AUTHENTICATING,
            ASSOCIATING,
            ASSOCIATED,
            FOUR_WAY_HANDSHAKE,
            GROUP_HANDSHAKE,
            COMPLETED,
            DORMANT,
            UNINITIALIZED,
        };

        // optional .android.os.SystemProto.WifiSupplicantState.Name name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "total",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            TOTAL,
        };

    } //WifiSupplicantState

    // optional .android.os.SystemProto.Battery battery = 1;
    const uint64_t BATTERY = 0x0000010b00000001LL;

    // optional .android.os.SystemProto.BatteryDischarge battery_discharge = 2;
    const uint64_t BATTERY_DISCHARGE = 0x0000010b00000002LL;

    // optional int64 charge_time_remaining_ms = 3;
    const uint64_t CHARGE_TIME_REMAINING_MS = 0x0000010300000003LL;

    // optional int64 discharge_time_remaining_ms = 4;
    const uint64_t DISCHARGE_TIME_REMAINING_MS = 0x0000010300000004LL;

    // repeated .android.os.SystemProto.BatteryLevelStep charge_step = 5;
    const uint64_t CHARGE_STEP = 0x0000020b00000005LL;

    // repeated .android.os.SystemProto.BatteryLevelStep discharge_step = 6;
    const uint64_t DISCHARGE_STEP = 0x0000020b00000006LL;

    // repeated int64 cpu_frequency = 7;
    const uint64_t CPU_FREQUENCY = 0x0000020300000007LL;

    // repeated .android.os.SystemProto.DataConnection data_connection = 8;
    const uint64_t DATA_CONNECTION = 0x0000020b00000008LL;

    // optional .android.os.ControllerActivityProto global_bluetooth_controller = 9;
    const uint64_t GLOBAL_BLUETOOTH_CONTROLLER = 0x0000010b00000009LL;

    // optional .android.os.ControllerActivityProto global_modem_controller = 10;
    const uint64_t GLOBAL_MODEM_CONTROLLER = 0x0000010b0000000aLL;

    // optional .android.os.ControllerActivityProto global_wifi_controller = 11;
    const uint64_t GLOBAL_WIFI_CONTROLLER = 0x0000010b0000000bLL;

    // optional .android.os.SystemProto.GlobalNetwork global_network = 12;
    const uint64_t GLOBAL_NETWORK = 0x0000010b0000000cLL;

    // optional .android.os.SystemProto.GlobalWifi global_wifi = 13;
    const uint64_t GLOBAL_WIFI = 0x0000010b0000000dLL;

    // repeated .android.os.SystemProto.KernelWakelock kernel_wakelock = 14;
    const uint64_t KERNEL_WAKELOCK = 0x0000020b0000000eLL;

    // optional .android.os.SystemProto.Misc misc = 15;
    const uint64_t MISC = 0x0000010b0000000fLL;

    // repeated .android.os.SystemProto.PhoneSignalStrength phone_signal_strength = 16;
    const uint64_t PHONE_SIGNAL_STRENGTH = 0x0000020b00000010LL;

    // repeated .android.os.SystemProto.PowerUseItem power_use_item = 17;
    const uint64_t POWER_USE_ITEM = 0x0000020b00000011LL;

    // optional .android.os.SystemProto.PowerUseSummary power_use_summary = 18;
    const uint64_t POWER_USE_SUMMARY = 0x0000010b00000012LL;

    // repeated .android.os.SystemProto.ResourcePowerManager resource_power_manager = 19;
    const uint64_t RESOURCE_POWER_MANAGER = 0x0000020b00000013LL;

    // repeated .android.os.SystemProto.ScreenBrightness screen_brightness = 20;
    const uint64_t SCREEN_BRIGHTNESS = 0x0000020b00000014LL;

    // optional .android.os.TimerProto signal_scanning = 21;
    const uint64_t SIGNAL_SCANNING = 0x0000010b00000015LL;

    // repeated .android.os.SystemProto.WakeupReason wakeup_reason = 22;
    const uint64_t WAKEUP_REASON = 0x0000020b00000016LL;

    // optional .android.os.SystemProto.WifiMulticastWakelockTotal wifi_multicast_wakelock_total = 23;
    const uint64_t WIFI_MULTICAST_WAKELOCK_TOTAL = 0x0000010b00000017LL;

    // repeated .android.os.SystemProto.WifiSignalStrength wifi_signal_strength = 24;
    const uint64_t WIFI_SIGNAL_STRENGTH = 0x0000020b00000018LL;

    // repeated .android.os.SystemProto.WifiState wifi_state = 25;
    const uint64_t WIFI_STATE = 0x0000020b00000019LL;

    // repeated .android.os.SystemProto.WifiSupplicantState wifi_supplicant_state = 26;
    const uint64_t WIFI_SUPPLICANT_STATE = 0x0000020b0000001aLL;

    static const int _FIELD_COUNT = 26;
    static const char* _FIELD_NAMES[26] = {
        "battery",
        "battery_discharge",
        "charge_time_remaining_ms",
        "discharge_time_remaining_ms",
        "charge_step",
        "discharge_step",
        "cpu_frequency",
        "data_connection",
        "global_bluetooth_controller",
        "global_modem_controller",
        "global_wifi_controller",
        "global_network",
        "global_wifi",
        "kernel_wakelock",
        "misc",
        "phone_signal_strength",
        "power_use_item",
        "power_use_summary",
        "resource_power_manager",
        "screen_brightness",
        "signal_scanning",
        "wakeup_reason",
        "wifi_multicast_wakelock_total",
        "wifi_signal_strength",
        "wifi_state",
        "wifi_supplicant_state",
    };
    static const uint64_t _FIELD_IDS[26] = {
        BATTERY,
        BATTERY_DISCHARGE,
        CHARGE_TIME_REMAINING_MS,
        DISCHARGE_TIME_REMAINING_MS,
        CHARGE_STEP,
        DISCHARGE_STEP,
        CPU_FREQUENCY,
        DATA_CONNECTION,
        GLOBAL_BLUETOOTH_CONTROLLER,
        GLOBAL_MODEM_CONTROLLER,
        GLOBAL_WIFI_CONTROLLER,
        GLOBAL_NETWORK,
        GLOBAL_WIFI,
        KERNEL_WAKELOCK,
        MISC,
        PHONE_SIGNAL_STRENGTH,
        POWER_USE_ITEM,
        POWER_USE_SUMMARY,
        RESOURCE_POWER_MANAGER,
        SCREEN_BRIGHTNESS,
        SIGNAL_SCANNING,
        WAKEUP_REASON,
        WIFI_MULTICAST_WAKELOCK_TOTAL,
        WIFI_SIGNAL_STRENGTH,
        WIFI_STATE,
        WIFI_SUPPLICANT_STATE,
    };

} //SystemProto

// message TimerProto
namespace TimerProto {
    // optional int64 duration_ms = 1;
    const uint64_t DURATION_MS = 0x0000010300000001LL;

    // optional int64 count = 2;
    const uint64_t COUNT = 0x0000010300000002LL;

    // optional int64 max_duration_ms = 3;
    const uint64_t MAX_DURATION_MS = 0x0000010300000003LL;

    // optional int64 current_duration_ms = 4;
    const uint64_t CURRENT_DURATION_MS = 0x0000010300000004LL;

    // optional int64 total_duration_ms = 5;
    const uint64_t TOTAL_DURATION_MS = 0x0000010300000005LL;

    static const int _FIELD_COUNT = 5;
    static const char* _FIELD_NAMES[5] = {
        "duration_ms",
        "count",
        "max_duration_ms",
        "current_duration_ms",
        "total_duration_ms",
    };
    static const uint64_t _FIELD_IDS[5] = {
        DURATION_MS,
        COUNT,
        MAX_DURATION_MS,
        CURRENT_DURATION_MS,
        TOTAL_DURATION_MS,
    };

} //TimerProto

// message UidProto
namespace UidProto {
    // message Package
    namespace Package {
        // message Service
        namespace Service {
            // optional string name = 1;
            const uint64_t NAME = 0x0000010900000001LL;

            // optional int64 start_duration_ms = 2;
            const uint64_t START_DURATION_MS = 0x0000010300000002LL;

            // optional int32 start_count = 3;
            const uint64_t START_COUNT = 0x0000010500000003LL;

            // optional int32 launch_count = 4;
            const uint64_t LAUNCH_COUNT = 0x0000010500000004LL;

            static const int _FIELD_COUNT = 4;
            static const char* _FIELD_NAMES[4] = {
                "name",
                "start_duration_ms",
                "start_count",
                "launch_count",
            };
            static const uint64_t _FIELD_IDS[4] = {
                NAME,
                START_DURATION_MS,
                START_COUNT,
                LAUNCH_COUNT,
            };

        } //Service

        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // repeated .android.os.UidProto.Package.Service services = 2;
        const uint64_t SERVICES = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "services",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            SERVICES,
        };

    } //Package

    // message BluetoothMisc
    namespace BluetoothMisc {
        // optional .android.os.TimerProto apportioned_ble_scan = 1;
        const uint64_t APPORTIONED_BLE_SCAN = 0x0000010b00000001LL;

        // optional .android.os.TimerProto background_ble_scan = 2;
        const uint64_t BACKGROUND_BLE_SCAN = 0x0000010b00000002LL;

        // optional .android.os.TimerProto unoptimized_ble_scan = 3;
        const uint64_t UNOPTIMIZED_BLE_SCAN = 0x0000010b00000003LL;

        // optional .android.os.TimerProto background_unoptimized_ble_scan = 4;
        const uint64_t BACKGROUND_UNOPTIMIZED_BLE_SCAN = 0x0000010b00000004LL;

        // optional int32 ble_scan_result_count = 5;
        const uint64_t BLE_SCAN_RESULT_COUNT = 0x0000010500000005LL;

        // optional int32 background_ble_scan_result_count = 6;
        const uint64_t BACKGROUND_BLE_SCAN_RESULT_COUNT = 0x0000010500000006LL;

        static const int _FIELD_COUNT = 6;
        static const char* _FIELD_NAMES[6] = {
            "apportioned_ble_scan",
            "background_ble_scan",
            "unoptimized_ble_scan",
            "background_unoptimized_ble_scan",
            "ble_scan_result_count",
            "background_ble_scan_result_count",
        };
        static const uint64_t _FIELD_IDS[6] = {
            APPORTIONED_BLE_SCAN,
            BACKGROUND_BLE_SCAN,
            UNOPTIMIZED_BLE_SCAN,
            BACKGROUND_UNOPTIMIZED_BLE_SCAN,
            BLE_SCAN_RESULT_COUNT,
            BACKGROUND_BLE_SCAN_RESULT_COUNT,
        };

    } //BluetoothMisc

    // message Cpu
    namespace Cpu {
        // enum ProcessState
        const int TOP = 0;
        const int FOREGROUND_SERVICE = 1;
        const int FOREGROUND = 2;
        const int BACKGROUND = 3;
        const int TOP_SLEEPING = 4;
        const int HEAVY_WEIGHT = 5;
        const int CACHED = 6;
        static const int _ENUM_PROCESS_STATE_COUNT = 7;
        static const char* _ENUM_PROCESS_STATE_NAMES[7] = {
            "TOP",
            "FOREGROUND_SERVICE",
            "FOREGROUND",
            "BACKGROUND",
            "TOP_SLEEPING",
            "HEAVY_WEIGHT",
            "CACHED",
        };
        static const int _ENUM_PROCESS_STATE_VALUES[7] = {
            TOP,
            FOREGROUND_SERVICE,
            FOREGROUND,
            BACKGROUND,
            TOP_SLEEPING,
            HEAVY_WEIGHT,
            CACHED,
        };

        // message ByFrequency
        namespace ByFrequency {
            // optional int32 frequency_index = 1;
            const uint64_t FREQUENCY_INDEX = 0x0000010500000001LL;

            // optional int64 total_duration_ms = 2;
            const uint64_t TOTAL_DURATION_MS = 0x0000010300000002LL;

            // optional int64 screen_off_duration_ms = 3;
            const uint64_t SCREEN_OFF_DURATION_MS = 0x0000010300000003LL;

            static const int _FIELD_COUNT = 3;
            static const char* _FIELD_NAMES[3] = {
                "frequency_index",
                "total_duration_ms",
                "screen_off_duration_ms",
            };
            static const uint64_t _FIELD_IDS[3] = {
                FREQUENCY_INDEX,
                TOTAL_DURATION_MS,
                SCREEN_OFF_DURATION_MS,
            };

        } //ByFrequency

        // message ByProcessState
        namespace ByProcessState {
            // optional .android.os.UidProto.Cpu.ProcessState process_state = 1;
            const uint64_t PROCESS_STATE = 0x0000010e00000001LL;

            // repeated .android.os.UidProto.Cpu.ByFrequency by_frequency = 2;
            const uint64_t BY_FREQUENCY = 0x0000020b00000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "process_state",
                "by_frequency",
            };
            static const uint64_t _FIELD_IDS[2] = {
                PROCESS_STATE,
                BY_FREQUENCY,
            };

        } //ByProcessState

        // optional int64 user_duration_ms = 1;
        const uint64_t USER_DURATION_MS = 0x0000010300000001LL;

        // optional int64 system_duration_ms = 2;
        const uint64_t SYSTEM_DURATION_MS = 0x0000010300000002LL;

        // repeated .android.os.UidProto.Cpu.ByFrequency by_frequency = 3;
        const uint64_t BY_FREQUENCY = 0x0000020b00000003LL;

        // repeated .android.os.UidProto.Cpu.ByProcessState by_process_state = 4;
        const uint64_t BY_PROCESS_STATE = 0x0000020b00000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "user_duration_ms",
            "system_duration_ms",
            "by_frequency",
            "by_process_state",
        };
        static const uint64_t _FIELD_IDS[4] = {
            USER_DURATION_MS,
            SYSTEM_DURATION_MS,
            BY_FREQUENCY,
            BY_PROCESS_STATE,
        };

    } //Cpu

    // message Job
    namespace Job {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        // optional .android.os.TimerProto background = 3;
        const uint64_t BACKGROUND = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "name",
            "total",
            "background",
        };
        static const uint64_t _FIELD_IDS[3] = {
            NAME,
            TOTAL,
            BACKGROUND,
        };

    } //Job

    // message JobCompletion
    namespace JobCompletion {
        // message ReasonCount
        namespace ReasonCount {
            // optional .android.app.job.InternalStopReasonEnum name = 1;
            const uint64_t NAME = 0x0000010e00000001LL;

            // optional int32 count = 2;
            const uint64_t COUNT = 0x0000010500000002LL;

            static const int _FIELD_COUNT = 2;
            static const char* _FIELD_NAMES[2] = {
                "name",
                "count",
            };
            static const uint64_t _FIELD_IDS[2] = {
                NAME,
                COUNT,
            };

        } //ReasonCount

        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // repeated .android.os.UidProto.JobCompletion.ReasonCount reason_count = 2;
        const uint64_t REASON_COUNT = 0x0000020b00000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "reason_count",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            REASON_COUNT,
        };

    } //JobCompletion

    // message Network
    namespace Network {
        // optional int64 mobile_bytes_rx = 1;
        const uint64_t MOBILE_BYTES_RX = 0x0000010300000001LL;

        // optional int64 mobile_bytes_tx = 2;
        const uint64_t MOBILE_BYTES_TX = 0x0000010300000002LL;

        // optional int64 wifi_bytes_rx = 3;
        const uint64_t WIFI_BYTES_RX = 0x0000010300000003LL;

        // optional int64 wifi_bytes_tx = 4;
        const uint64_t WIFI_BYTES_TX = 0x0000010300000004LL;

        // optional int64 bt_bytes_rx = 5;
        const uint64_t BT_BYTES_RX = 0x0000010300000005LL;

        // optional int64 bt_bytes_tx = 6;
        const uint64_t BT_BYTES_TX = 0x0000010300000006LL;

        // optional int64 mobile_packets_rx = 7;
        const uint64_t MOBILE_PACKETS_RX = 0x0000010300000007LL;

        // optional int64 mobile_packets_tx = 8;
        const uint64_t MOBILE_PACKETS_TX = 0x0000010300000008LL;

        // optional int64 wifi_packets_rx = 9;
        const uint64_t WIFI_PACKETS_RX = 0x0000010300000009LL;

        // optional int64 wifi_packets_tx = 10;
        const uint64_t WIFI_PACKETS_TX = 0x000001030000000aLL;

        // optional int64 mobile_active_duration_ms = 11;
        const uint64_t MOBILE_ACTIVE_DURATION_MS = 0x000001030000000bLL;

        // optional int32 mobile_active_count = 12;
        const uint64_t MOBILE_ACTIVE_COUNT = 0x000001050000000cLL;

        // optional int32 mobile_wakeup_count = 13;
        const uint64_t MOBILE_WAKEUP_COUNT = 0x000001050000000dLL;

        // optional int32 wifi_wakeup_count = 14;
        const uint64_t WIFI_WAKEUP_COUNT = 0x000001050000000eLL;

        // optional int64 mobile_bytes_bg_rx = 15;
        const uint64_t MOBILE_BYTES_BG_RX = 0x000001030000000fLL;

        // optional int64 mobile_bytes_bg_tx = 16;
        const uint64_t MOBILE_BYTES_BG_TX = 0x0000010300000010LL;

        // optional int64 wifi_bytes_bg_rx = 17;
        const uint64_t WIFI_BYTES_BG_RX = 0x0000010300000011LL;

        // optional int64 wifi_bytes_bg_tx = 18;
        const uint64_t WIFI_BYTES_BG_TX = 0x0000010300000012LL;

        // optional int64 mobile_packets_bg_rx = 19;
        const uint64_t MOBILE_PACKETS_BG_RX = 0x0000010300000013LL;

        // optional int64 mobile_packets_bg_tx = 20;
        const uint64_t MOBILE_PACKETS_BG_TX = 0x0000010300000014LL;

        // optional int64 wifi_packets_bg_rx = 21;
        const uint64_t WIFI_PACKETS_BG_RX = 0x0000010300000015LL;

        // optional int64 wifi_packets_bg_tx = 22;
        const uint64_t WIFI_PACKETS_BG_TX = 0x0000010300000016LL;

        static const int _FIELD_COUNT = 22;
        static const char* _FIELD_NAMES[22] = {
            "mobile_bytes_rx",
            "mobile_bytes_tx",
            "wifi_bytes_rx",
            "wifi_bytes_tx",
            "bt_bytes_rx",
            "bt_bytes_tx",
            "mobile_packets_rx",
            "mobile_packets_tx",
            "wifi_packets_rx",
            "wifi_packets_tx",
            "mobile_active_duration_ms",
            "mobile_active_count",
            "mobile_wakeup_count",
            "wifi_wakeup_count",
            "mobile_bytes_bg_rx",
            "mobile_bytes_bg_tx",
            "wifi_bytes_bg_rx",
            "wifi_bytes_bg_tx",
            "mobile_packets_bg_rx",
            "mobile_packets_bg_tx",
            "wifi_packets_bg_rx",
            "wifi_packets_bg_tx",
        };
        static const uint64_t _FIELD_IDS[22] = {
            MOBILE_BYTES_RX,
            MOBILE_BYTES_TX,
            WIFI_BYTES_RX,
            WIFI_BYTES_TX,
            BT_BYTES_RX,
            BT_BYTES_TX,
            MOBILE_PACKETS_RX,
            MOBILE_PACKETS_TX,
            WIFI_PACKETS_RX,
            WIFI_PACKETS_TX,
            MOBILE_ACTIVE_DURATION_MS,
            MOBILE_ACTIVE_COUNT,
            MOBILE_WAKEUP_COUNT,
            WIFI_WAKEUP_COUNT,
            MOBILE_BYTES_BG_RX,
            MOBILE_BYTES_BG_TX,
            WIFI_BYTES_BG_RX,
            WIFI_BYTES_BG_TX,
            MOBILE_PACKETS_BG_RX,
            MOBILE_PACKETS_BG_TX,
            WIFI_PACKETS_BG_RX,
            WIFI_PACKETS_BG_TX,
        };

    } //Network

    // message PowerUseItem
    namespace PowerUseItem {
        // optional double computed_power_mah = 1;
        const uint64_t COMPUTED_POWER_MAH = 0x0000010100000001LL;

        // optional bool should_hide = 2;
        const uint64_t SHOULD_HIDE = 0x0000010800000002LL;

        // optional double screen_power_mah = 3;
        const uint64_t SCREEN_POWER_MAH = 0x0000010100000003LL;

        // optional double proportional_smear_mah = 4;
        const uint64_t PROPORTIONAL_SMEAR_MAH = 0x0000010100000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "computed_power_mah",
            "should_hide",
            "screen_power_mah",
            "proportional_smear_mah",
        };
        static const uint64_t _FIELD_IDS[4] = {
            COMPUTED_POWER_MAH,
            SHOULD_HIDE,
            SCREEN_POWER_MAH,
            PROPORTIONAL_SMEAR_MAH,
        };

    } //PowerUseItem

    // message Process
    namespace Process {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional int64 user_duration_ms = 2;
        const uint64_t USER_DURATION_MS = 0x0000010300000002LL;

        // optional int64 system_duration_ms = 3;
        const uint64_t SYSTEM_DURATION_MS = 0x0000010300000003LL;

        // optional int64 foreground_duration_ms = 4;
        const uint64_t FOREGROUND_DURATION_MS = 0x0000010300000004LL;

        // optional int32 start_count = 5;
        const uint64_t START_COUNT = 0x0000010500000005LL;

        // optional int32 anr_count = 6;
        const uint64_t ANR_COUNT = 0x0000010500000006LL;

        // optional int32 crash_count = 7;
        const uint64_t CRASH_COUNT = 0x0000010500000007LL;

        static const int _FIELD_COUNT = 7;
        static const char* _FIELD_NAMES[7] = {
            "name",
            "user_duration_ms",
            "system_duration_ms",
            "foreground_duration_ms",
            "start_count",
            "anr_count",
            "crash_count",
        };
        static const uint64_t _FIELD_IDS[7] = {
            NAME,
            USER_DURATION_MS,
            SYSTEM_DURATION_MS,
            FOREGROUND_DURATION_MS,
            START_COUNT,
            ANR_COUNT,
            CRASH_COUNT,
        };

    } //Process

    // message StateTime
    namespace StateTime {
        // enum State
        const int PROCESS_STATE_TOP = 0;
        const int PROCESS_STATE_FOREGROUND_SERVICE = 1;
        const int PROCESS_STATE_FOREGROUND = 2;
        const int PROCESS_STATE_BACKGROUND = 3;
        const int PROCESS_STATE_TOP_SLEEPING = 4;
        const int PROCESS_STATE_HEAVY_WEIGHT = 5;
        const int PROCESS_STATE_CACHED = 6;
        static const int _ENUM_STATE_COUNT = 7;
        static const char* _ENUM_STATE_NAMES[7] = {
            "PROCESS_STATE_TOP",
            "PROCESS_STATE_FOREGROUND_SERVICE",
            "PROCESS_STATE_FOREGROUND",
            "PROCESS_STATE_BACKGROUND",
            "PROCESS_STATE_TOP_SLEEPING",
            "PROCESS_STATE_HEAVY_WEIGHT",
            "PROCESS_STATE_CACHED",
        };
        static const int _ENUM_STATE_VALUES[7] = {
            PROCESS_STATE_TOP,
            PROCESS_STATE_FOREGROUND_SERVICE,
            PROCESS_STATE_FOREGROUND,
            PROCESS_STATE_BACKGROUND,
            PROCESS_STATE_TOP_SLEEPING,
            PROCESS_STATE_HEAVY_WEIGHT,
            PROCESS_STATE_CACHED,
        };

        // optional .android.os.UidProto.StateTime.State state = 1;
        const uint64_t STATE = 0x0000010e00000001LL;

        // optional int64 duration_ms = 2;
        const uint64_t DURATION_MS = 0x0000010300000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "state",
            "duration_ms",
        };
        static const uint64_t _FIELD_IDS[2] = {
            STATE,
            DURATION_MS,
        };

    } //StateTime

    // message Sensor
    namespace Sensor {
        // optional int32 id = 1;
        const uint64_t ID = 0x0000010500000001LL;

        // optional .android.os.TimerProto apportioned = 2;
        const uint64_t APPORTIONED = 0x0000010b00000002LL;

        // optional .android.os.TimerProto background = 3;
        const uint64_t BACKGROUND = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "id",
            "apportioned",
            "background",
        };
        static const uint64_t _FIELD_IDS[3] = {
            ID,
            APPORTIONED,
            BACKGROUND,
        };

    } //Sensor

    // message Sync
    namespace Sync {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional .android.os.TimerProto total = 2;
        const uint64_t TOTAL = 0x0000010b00000002LL;

        // optional .android.os.TimerProto background = 3;
        const uint64_t BACKGROUND = 0x0000010b00000003LL;

        static const int _FIELD_COUNT = 3;
        static const char* _FIELD_NAMES[3] = {
            "name",
            "total",
            "background",
        };
        static const uint64_t _FIELD_IDS[3] = {
            NAME,
            TOTAL,
            BACKGROUND,
        };

    } //Sync

    // message UserActivity
    namespace UserActivity {
        // optional .android.os.PowerManagerProto.UserActivityEvent name = 1;
        const uint64_t NAME = 0x0000010e00000001LL;

        // optional int32 count = 2;
        const uint64_t COUNT = 0x0000010500000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "count",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            COUNT,
        };

    } //UserActivity

    // message AggregatedWakelock
    namespace AggregatedWakelock {
        // optional int64 partial_duration_ms = 1;
        const uint64_t PARTIAL_DURATION_MS = 0x0000010300000001LL;

        // optional int64 background_partial_duration_ms = 2;
        const uint64_t BACKGROUND_PARTIAL_DURATION_MS = 0x0000010300000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "partial_duration_ms",
            "background_partial_duration_ms",
        };
        static const uint64_t _FIELD_IDS[2] = {
            PARTIAL_DURATION_MS,
            BACKGROUND_PARTIAL_DURATION_MS,
        };

    } //AggregatedWakelock

    // message Wakelock
    namespace Wakelock {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional .android.os.TimerProto full = 2;
        const uint64_t FULL = 0x0000010b00000002LL;

        // optional .android.os.TimerProto partial = 3;
        const uint64_t PARTIAL = 0x0000010b00000003LL;

        // optional .android.os.TimerProto background_partial = 4;
        const uint64_t BACKGROUND_PARTIAL = 0x0000010b00000004LL;

        // optional .android.os.TimerProto window = 5;
        const uint64_t WINDOW = 0x0000010b00000005LL;

        static const int _FIELD_COUNT = 5;
        static const char* _FIELD_NAMES[5] = {
            "name",
            "full",
            "partial",
            "background_partial",
            "window",
        };
        static const uint64_t _FIELD_IDS[5] = {
            NAME,
            FULL,
            PARTIAL,
            BACKGROUND_PARTIAL,
            WINDOW,
        };

    } //Wakelock

    // message WakeupAlarm
    namespace WakeupAlarm {
        // optional string name = 1;
        const uint64_t NAME = 0x0000010900000001LL;

        // optional int32 count = 2;
        const uint64_t COUNT = 0x0000010500000002LL;

        static const int _FIELD_COUNT = 2;
        static const char* _FIELD_NAMES[2] = {
            "name",
            "count",
        };
        static const uint64_t _FIELD_IDS[2] = {
            NAME,
            COUNT,
        };

    } //WakeupAlarm

    // message Wifi
    namespace Wifi {
        // optional int64 full_wifi_lock_duration_ms = 1;
        const uint64_t FULL_WIFI_LOCK_DURATION_MS = 0x0000010300000001LL;

        // optional int64 running_duration_ms = 2;
        const uint64_t RUNNING_DURATION_MS = 0x0000010300000002LL;

        // optional .android.os.TimerProto apportioned_scan = 3;
        const uint64_t APPORTIONED_SCAN = 0x0000010b00000003LL;

        // optional .android.os.TimerProto background_scan = 4;
        const uint64_t BACKGROUND_SCAN = 0x0000010b00000004LL;

        static const int _FIELD_COUNT = 4;
        static const char* _FIELD_NAMES[4] = {
            "full_wifi_lock_duration_ms",
            "running_duration_ms",
            "apportioned_scan",
            "background_scan",
        };
        static const uint64_t _FIELD_IDS[4] = {
            FULL_WIFI_LOCK_DURATION_MS,
            RUNNING_DURATION_MS,
            APPORTIONED_SCAN,
            BACKGROUND_SCAN,
        };

    } //Wifi

    // optional int32 uid = 1;
    const uint64_t UID = 0x0000010500000001LL;

    // repeated .android.os.UidProto.Package packages = 2;
    const uint64_t PACKAGES = 0x0000020b00000002LL;

    // optional .android.os.ControllerActivityProto bluetooth_controller = 3;
    const uint64_t BLUETOOTH_CONTROLLER = 0x0000010b00000003LL;

    // optional .android.os.ControllerActivityProto modem_controller = 4;
    const uint64_t MODEM_CONTROLLER = 0x0000010b00000004LL;

    // optional .android.os.ControllerActivityProto wifi_controller = 5;
    const uint64_t WIFI_CONTROLLER = 0x0000010b00000005LL;

    // optional .android.os.UidProto.BluetoothMisc bluetooth_misc = 6;
    const uint64_t BLUETOOTH_MISC = 0x0000010b00000006LL;

    // optional .android.os.UidProto.Cpu cpu = 7;
    const uint64_t CPU = 0x0000010b00000007LL;

    // optional .android.os.TimerProto audio = 8;
    const uint64_t AUDIO = 0x0000010b00000008LL;

    // optional .android.os.TimerProto camera = 9;
    const uint64_t CAMERA = 0x0000010b00000009LL;

    // optional .android.os.TimerProto flashlight = 10;
    const uint64_t FLASHLIGHT = 0x0000010b0000000aLL;

    // optional .android.os.TimerProto foreground_activity = 11;
    const uint64_t FOREGROUND_ACTIVITY = 0x0000010b0000000bLL;

    // optional .android.os.TimerProto foreground_service = 12;
    const uint64_t FOREGROUND_SERVICE = 0x0000010b0000000cLL;

    // optional .android.os.TimerProto vibrator = 13;
    const uint64_t VIBRATOR = 0x0000010b0000000dLL;

    // optional .android.os.TimerProto video = 14;
    const uint64_t VIDEO = 0x0000010b0000000eLL;

    // repeated .android.os.UidProto.Job jobs = 15;
    const uint64_t JOBS = 0x0000020b0000000fLL;

    // repeated .android.os.UidProto.JobCompletion job_completion = 16;
    const uint64_t JOB_COMPLETION = 0x0000020b00000010LL;

    // optional .android.os.UidProto.Network network = 17;
    const uint64_t NETWORK = 0x0000010b00000011LL;

    // optional .android.os.UidProto.PowerUseItem power_use_item = 18;
    const uint64_t POWER_USE_ITEM = 0x0000010b00000012LL;

    // repeated .android.os.UidProto.Process process = 19;
    const uint64_t PROCESS = 0x0000020b00000013LL;

    // repeated .android.os.UidProto.StateTime states = 20;
    const uint64_t STATES = 0x0000020b00000014LL;

    // repeated .android.os.UidProto.Sensor sensors = 21;
    const uint64_t SENSORS = 0x0000020b00000015LL;

    // repeated .android.os.UidProto.Sync syncs = 22;
    const uint64_t SYNCS = 0x0000020b00000016LL;

    // repeated .android.os.UidProto.UserActivity user_activity = 23;
    const uint64_t USER_ACTIVITY = 0x0000020b00000017LL;

    // optional .android.os.UidProto.AggregatedWakelock aggregated_wakelock = 24;
    const uint64_t AGGREGATED_WAKELOCK = 0x0000010b00000018LL;

    // repeated .android.os.UidProto.Wakelock wakelocks = 25;
    const uint64_t WAKELOCKS = 0x0000020b00000019LL;

    // repeated .android.os.UidProto.WakeupAlarm wakeup_alarm = 26;
    const uint64_t WAKEUP_ALARM = 0x0000020b0000001aLL;

    // optional .android.os.UidProto.Wifi wifi = 27;
    const uint64_t WIFI = 0x0000010b0000001bLL;

    // optional .android.os.TimerProto wifi_multicast_wakelock = 28;
    const uint64_t WIFI_MULTICAST_WAKELOCK = 0x0000010b0000001cLL;

    static const int _FIELD_COUNT = 28;
    static const char* _FIELD_NAMES[28] = {
        "uid",
        "packages",
        "bluetooth_controller",
        "modem_controller",
        "wifi_controller",
        "bluetooth_misc",
        "cpu",
        "audio",
        "camera",
        "flashlight",
        "foreground_activity",
        "foreground_service",
        "vibrator",
        "video",
        "jobs",
        "job_completion",
        "network",
        "power_use_item",
        "process",
        "states",
        "sensors",
        "syncs",
        "user_activity",
        "aggregated_wakelock",
        "wakelocks",
        "wakeup_alarm",
        "wifi",
        "wifi_multicast_wakelock",
    };
    static const uint64_t _FIELD_IDS[28] = {
        UID,
        PACKAGES,
        BLUETOOTH_CONTROLLER,
        MODEM_CONTROLLER,
        WIFI_CONTROLLER,
        BLUETOOTH_MISC,
        CPU,
        AUDIO,
        CAMERA,
        FLASHLIGHT,
        FOREGROUND_ACTIVITY,
        FOREGROUND_SERVICE,
        VIBRATOR,
        VIDEO,
        JOBS,
        JOB_COMPLETION,
        NETWORK,
        POWER_USE_ITEM,
        PROCESS,
        STATES,
        SENSORS,
        SYNCS,
        USER_ACTIVITY,
        AGGREGATED_WAKELOCK,
        WAKELOCKS,
        WAKEUP_ALARM,
        WIFI,
        WIFI_MULTICAST_WAKELOCK,
    };

} //UidProto

} // os
} // android

#endif // ANDROID_FRAMEWORKS_BASE_CORE_PROTO_ANDROID_OS_BATTERYSTATS_PROTO_STREAM_H
