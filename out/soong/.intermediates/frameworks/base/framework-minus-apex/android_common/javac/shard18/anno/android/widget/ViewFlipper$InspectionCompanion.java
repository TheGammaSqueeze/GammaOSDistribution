package android.widget;

import android.R;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;

/**
 * Inspection companion for {@link ViewFlipper}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class ViewFlipper$InspectionCompanion implements InspectionCompanion<ViewFlipper> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code autoStart}.
     */
    private int mAutoStartId;

    /**
     * Property ID of {@code flipInterval}.
     */
    private int mFlipIntervalId;

    /**
     * Property ID of {@code flipping}.
     */
    private int mFlippingId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        mAutoStartId = propertyMapper.mapBoolean("autoStart", R.attr.autoStart);
        mFlipIntervalId = propertyMapper.mapInt("flipInterval", R.attr.flipInterval);
        mFlippingId = propertyMapper.mapBoolean("flipping", 0);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(ViewFlipper node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readBoolean(mAutoStartId, node.isAutoStart());
        propertyReader.readInt(mFlipIntervalId, node.getFlipInterval());
        propertyReader.readBoolean(mFlippingId, node.isFlipping());
    }
}
