package android.view;

import android.R;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;

/**
 * Inspection companion for {@link ViewGroup.MarginLayoutParams}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class ViewGroup$MarginLayoutParams$InspectionCompanion implements InspectionCompanion<ViewGroup.MarginLayoutParams> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code layout_marginBottom}.
     */
    private int mLayout_marginBottomId;

    /**
     * Property ID of {@code layout_marginLeft}.
     */
    private int mLayout_marginLeftId;

    /**
     * Property ID of {@code layout_marginRight}.
     */
    private int mLayout_marginRightId;

    /**
     * Property ID of {@code layout_marginTop}.
     */
    private int mLayout_marginTopId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        mLayout_marginBottomId = propertyMapper.mapInt("layout_marginBottom", R.attr.layout_marginBottom);
        mLayout_marginLeftId = propertyMapper.mapInt("layout_marginLeft", R.attr.layout_marginLeft);
        mLayout_marginRightId = propertyMapper.mapInt("layout_marginRight", R.attr.layout_marginRight);
        mLayout_marginTopId = propertyMapper.mapInt("layout_marginTop", R.attr.layout_marginTop);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(ViewGroup.MarginLayoutParams node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readInt(mLayout_marginBottomId, node.bottomMargin);
        propertyReader.readInt(mLayout_marginLeftId, node.leftMargin);
        propertyReader.readInt(mLayout_marginRightId, node.rightMargin);
        propertyReader.readInt(mLayout_marginTopId, node.topMargin);
    }
}
