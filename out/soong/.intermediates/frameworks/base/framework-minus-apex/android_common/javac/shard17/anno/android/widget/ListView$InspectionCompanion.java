package android.widget;

import android.R;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;

/**
 * Inspection companion for {@link ListView}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class ListView$InspectionCompanion implements InspectionCompanion<ListView> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code divider}.
     */
    private int mDividerId;

    /**
     * Property ID of {@code dividerHeight}.
     */
    private int mDividerHeightId;

    /**
     * Property ID of {@code footerDividersEnabled}.
     */
    private int mFooterDividersEnabledId;

    /**
     * Property ID of {@code headerDividersEnabled}.
     */
    private int mHeaderDividersEnabledId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        mDividerId = propertyMapper.mapObject("divider", R.attr.divider);
        mDividerHeightId = propertyMapper.mapInt("dividerHeight", R.attr.dividerHeight);
        mFooterDividersEnabledId = propertyMapper.mapBoolean("footerDividersEnabled", R.attr.footerDividersEnabled);
        mHeaderDividersEnabledId = propertyMapper.mapBoolean("headerDividersEnabled", R.attr.headerDividersEnabled);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(ListView node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readObject(mDividerId, node.getDivider());
        propertyReader.readInt(mDividerHeightId, node.getDividerHeight());
        propertyReader.readBoolean(mFooterDividersEnabledId, node.areFooterDividersEnabled());
        propertyReader.readBoolean(mHeaderDividersEnabledId, node.areHeaderDividersEnabled());
    }
}
