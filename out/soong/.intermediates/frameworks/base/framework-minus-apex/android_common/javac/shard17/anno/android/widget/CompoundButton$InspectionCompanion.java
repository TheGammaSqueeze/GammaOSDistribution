package android.widget;

import android.R;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;

/**
 * Inspection companion for {@link CompoundButton}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class CompoundButton$InspectionCompanion implements InspectionCompanion<CompoundButton> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code button}.
     */
    private int mButtonId;

    /**
     * Property ID of {@code buttonBlendMode}.
     */
    private int mButtonBlendModeId;

    /**
     * Property ID of {@code buttonTint}.
     */
    private int mButtonTintId;

    /**
     * Property ID of {@code buttonTintMode}.
     */
    private int mButtonTintModeId;

    /**
     * Property ID of {@code checked}.
     */
    private int mCheckedId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        mButtonId = propertyMapper.mapObject("button", R.attr.button);
        mButtonBlendModeId = propertyMapper.mapObject("buttonBlendMode", 0x00000003);
        mButtonTintId = propertyMapper.mapObject("buttonTint", R.attr.buttonTint);
        mButtonTintModeId = propertyMapper.mapObject("buttonTintMode", R.attr.buttonTintMode);
        mCheckedId = propertyMapper.mapBoolean("checked", R.attr.checked);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(CompoundButton node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readObject(mButtonId, node.getButtonDrawable());
        propertyReader.readObject(mButtonBlendModeId, node.getButtonTintBlendMode());
        propertyReader.readObject(mButtonTintId, node.getButtonTintList());
        propertyReader.readObject(mButtonTintModeId, node.getButtonTintMode());
        propertyReader.readBoolean(mCheckedId, node.isChecked());
    }
}
