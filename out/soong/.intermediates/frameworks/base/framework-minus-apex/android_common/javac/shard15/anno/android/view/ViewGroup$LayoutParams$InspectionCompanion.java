package android.view;

import android.R;
import android.util.SparseArray;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;
import java.lang.String;

/**
 * Inspection companion for {@link ViewGroup.LayoutParams}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class ViewGroup$LayoutParams$InspectionCompanion implements InspectionCompanion<ViewGroup.LayoutParams> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code layout_height}.
     */
    private int mLayout_heightId;

    /**
     * Property ID of {@code layout_width}.
     */
    private int mLayout_widthId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        final SparseArray<String> layout_heightEnumMapping = new SparseArray<>();
        layout_heightEnumMapping.put(-2, "wrap_content");
        layout_heightEnumMapping.put(-1, "match_parent");
        mLayout_heightId = propertyMapper.mapIntEnum("layout_height", R.attr.layout_height, layout_heightEnumMapping::get);
        final SparseArray<String> layout_widthEnumMapping = new SparseArray<>();
        layout_widthEnumMapping.put(-2, "wrap_content");
        layout_widthEnumMapping.put(-1, "match_parent");
        mLayout_widthId = propertyMapper.mapIntEnum("layout_width", R.attr.layout_width, layout_widthEnumMapping::get);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(ViewGroup.LayoutParams node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readIntEnum(mLayout_heightId, node.height);
        propertyReader.readIntEnum(mLayout_widthId, node.width);
    }
}
