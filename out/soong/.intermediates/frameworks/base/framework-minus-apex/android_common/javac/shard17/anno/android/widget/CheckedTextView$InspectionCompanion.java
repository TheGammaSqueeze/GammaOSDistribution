package android.widget;

import android.R;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;

/**
 * Inspection companion for {@link CheckedTextView}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class CheckedTextView$InspectionCompanion implements InspectionCompanion<CheckedTextView> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code checkMark}.
     */
    private int mCheckMarkId;

    /**
     * Property ID of {@code checkMarkTint}.
     */
    private int mCheckMarkTintId;

    /**
     * Property ID of {@code checkMarkTintBlendMode}.
     */
    private int mCheckMarkTintBlendModeId;

    /**
     * Property ID of {@code checkMarkTintMode}.
     */
    private int mCheckMarkTintModeId;

    /**
     * Property ID of {@code checked}.
     */
    private int mCheckedId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        mCheckMarkId = propertyMapper.mapObject("checkMark", R.attr.checkMark);
        mCheckMarkTintId = propertyMapper.mapObject("checkMarkTint", R.attr.checkMarkTint);
        mCheckMarkTintBlendModeId = propertyMapper.mapObject("checkMarkTintBlendMode", 0x00000003);
        mCheckMarkTintModeId = propertyMapper.mapObject("checkMarkTintMode", R.attr.checkMarkTintMode);
        mCheckedId = propertyMapper.mapBoolean("checked", R.attr.checked);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(CheckedTextView node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readObject(mCheckMarkId, node.getCheckMarkDrawable());
        propertyReader.readObject(mCheckMarkTintId, node.getCheckMarkTintList());
        propertyReader.readObject(mCheckMarkTintBlendModeId, node.getCheckMarkTintBlendMode());
        propertyReader.readObject(mCheckMarkTintModeId, node.getCheckMarkTintMode());
        propertyReader.readBoolean(mCheckedId, node.isChecked());
    }
}
