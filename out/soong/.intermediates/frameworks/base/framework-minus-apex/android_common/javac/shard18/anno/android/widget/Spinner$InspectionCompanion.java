package android.widget;

import android.R;
import android.view.inspector.InspectionCompanion;
import android.view.inspector.PropertyMapper;
import android.view.inspector.PropertyReader;
import java.lang.Override;

/**
 * Inspection companion for {@link Spinner}.
 *
 * Generated by {@link android.processor.view.inspector.InspectionCompanionGenerator}
 * on behalf of {@link android.processor.view.inspector.PlatformInspectableProcessor}.
 */
public final class Spinner$InspectionCompanion implements InspectionCompanion<Spinner> {
    /**
     * Guards against reading properties before mapping them.
     */
    private boolean mPropertiesMapped = false;

    /**
     * Property ID of {@code dropDownHorizontalOffset}.
     */
    private int mDropDownHorizontalOffsetId;

    /**
     * Property ID of {@code dropDownVerticalOffset}.
     */
    private int mDropDownVerticalOffsetId;

    /**
     * Property ID of {@code dropDownWidth}.
     */
    private int mDropDownWidthId;

    /**
     * Property ID of {@code gravity}.
     */
    private int mGravityId;

    /**
     * Property ID of {@code popupBackground}.
     */
    private int mPopupBackgroundId;

    /**
     * Property ID of {@code prompt}.
     */
    private int mPromptId;

    @Override
    public void mapProperties(PropertyMapper propertyMapper) {
        mDropDownHorizontalOffsetId = propertyMapper.mapInt("dropDownHorizontalOffset", R.attr.dropDownHorizontalOffset);
        mDropDownVerticalOffsetId = propertyMapper.mapInt("dropDownVerticalOffset", R.attr.dropDownVerticalOffset);
        mDropDownWidthId = propertyMapper.mapInt("dropDownWidth", R.attr.dropDownWidth);
        mGravityId = propertyMapper.mapGravity("gravity", R.attr.gravity);
        mPopupBackgroundId = propertyMapper.mapObject("popupBackground", R.attr.popupBackground);
        mPromptId = propertyMapper.mapObject("prompt", R.attr.prompt);
        mPropertiesMapped = true;
    }

    @Override
    public void readProperties(Spinner node, PropertyReader propertyReader) {
        if (!mPropertiesMapped) {
            throw new InspectionCompanion.UninitializedPropertyMapException();
        }
        propertyReader.readInt(mDropDownHorizontalOffsetId, node.getDropDownHorizontalOffset());
        propertyReader.readInt(mDropDownVerticalOffsetId, node.getDropDownVerticalOffset());
        propertyReader.readInt(mDropDownWidthId, node.getDropDownWidth());
        propertyReader.readGravity(mGravityId, node.getGravity());
        propertyReader.readObject(mPopupBackgroundId, node.getPopupBackground());
        propertyReader.readObject(mPromptId, node.getPrompt());
    }
}
