// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/app/notificationmanager.proto

#include "frameworks/base/core/proto/android/app/notificationmanager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace app {
class PolicyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PolicyProto> _instance;
} _PolicyProto_default_instance_;
}  // namespace app
}  // namespace android
static void InitDefaultsscc_info_PolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::app::_PolicyProto_default_instance_;
    new (ptr) ::android::app::PolicyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::app::PolicyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto}, {}};

namespace android {
namespace app {
bool PolicyProto_Category_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> PolicyProto_Category_strings[9] = {};

static const char PolicyProto_Category_names[] =
  "ALARMS"
  "CALLS"
  "CATEGORY_UNKNOWN"
  "EVENTS"
  "MEDIA"
  "MESSAGES"
  "REMINDERS"
  "REPEAT_CALLERS"
  "SYSTEM";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry PolicyProto_Category_entries[] = {
  { {PolicyProto_Category_names + 0, 6}, 6 },
  { {PolicyProto_Category_names + 6, 5}, 4 },
  { {PolicyProto_Category_names + 11, 16}, 0 },
  { {PolicyProto_Category_names + 27, 6}, 2 },
  { {PolicyProto_Category_names + 33, 5}, 7 },
  { {PolicyProto_Category_names + 38, 8}, 3 },
  { {PolicyProto_Category_names + 46, 9}, 1 },
  { {PolicyProto_Category_names + 55, 14}, 5 },
  { {PolicyProto_Category_names + 69, 6}, 8 },
};

static const int PolicyProto_Category_entries_by_number[] = {
  2, // 0 -> CATEGORY_UNKNOWN
  6, // 1 -> REMINDERS
  3, // 2 -> EVENTS
  5, // 3 -> MESSAGES
  1, // 4 -> CALLS
  7, // 5 -> REPEAT_CALLERS
  0, // 6 -> ALARMS
  4, // 7 -> MEDIA
  8, // 8 -> SYSTEM
};

const std::string& PolicyProto_Category_Name(
    PolicyProto_Category value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          PolicyProto_Category_entries,
          PolicyProto_Category_entries_by_number,
          9, PolicyProto_Category_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      PolicyProto_Category_entries,
      PolicyProto_Category_entries_by_number,
      9, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     PolicyProto_Category_strings[idx].get();
}
bool PolicyProto_Category_Parse(
    const std::string& name, PolicyProto_Category* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      PolicyProto_Category_entries, 9, name, &int_value);
  if (success) {
    *value = static_cast<PolicyProto_Category>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PolicyProto_Category PolicyProto::CATEGORY_UNKNOWN;
constexpr PolicyProto_Category PolicyProto::REMINDERS;
constexpr PolicyProto_Category PolicyProto::EVENTS;
constexpr PolicyProto_Category PolicyProto::MESSAGES;
constexpr PolicyProto_Category PolicyProto::CALLS;
constexpr PolicyProto_Category PolicyProto::REPEAT_CALLERS;
constexpr PolicyProto_Category PolicyProto::ALARMS;
constexpr PolicyProto_Category PolicyProto::MEDIA;
constexpr PolicyProto_Category PolicyProto::SYSTEM;
constexpr PolicyProto_Category PolicyProto::Category_MIN;
constexpr PolicyProto_Category PolicyProto::Category_MAX;
constexpr int PolicyProto::Category_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool PolicyProto_Sender_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> PolicyProto_Sender_strings[3] = {};

static const char PolicyProto_Sender_names[] =
  "ANY"
  "CONTACTS"
  "STARRED";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry PolicyProto_Sender_entries[] = {
  { {PolicyProto_Sender_names + 0, 3}, 0 },
  { {PolicyProto_Sender_names + 3, 8}, 1 },
  { {PolicyProto_Sender_names + 11, 7}, 2 },
};

static const int PolicyProto_Sender_entries_by_number[] = {
  0, // 0 -> ANY
  1, // 1 -> CONTACTS
  2, // 2 -> STARRED
};

const std::string& PolicyProto_Sender_Name(
    PolicyProto_Sender value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          PolicyProto_Sender_entries,
          PolicyProto_Sender_entries_by_number,
          3, PolicyProto_Sender_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      PolicyProto_Sender_entries,
      PolicyProto_Sender_entries_by_number,
      3, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     PolicyProto_Sender_strings[idx].get();
}
bool PolicyProto_Sender_Parse(
    const std::string& name, PolicyProto_Sender* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      PolicyProto_Sender_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<PolicyProto_Sender>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PolicyProto_Sender PolicyProto::ANY;
constexpr PolicyProto_Sender PolicyProto::CONTACTS;
constexpr PolicyProto_Sender PolicyProto::STARRED;
constexpr PolicyProto_Sender PolicyProto::Sender_MIN;
constexpr PolicyProto_Sender PolicyProto::Sender_MAX;
constexpr int PolicyProto::Sender_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool PolicyProto_SuppressedVisualEffect_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> PolicyProto_SuppressedVisualEffect_strings[10] = {};

static const char PolicyProto_SuppressedVisualEffect_names[] =
  "AMBIENT"
  "BADGE"
  "FULL_SCREEN_INTENT"
  "LIGHTS"
  "NOTIFICATION_LIST"
  "PEEK"
  "SCREEN_OFF"
  "SCREEN_ON"
  "STATUS_BAR"
  "SVE_UNKNOWN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry PolicyProto_SuppressedVisualEffect_entries[] = {
  { {PolicyProto_SuppressedVisualEffect_names + 0, 7}, 8 },
  { {PolicyProto_SuppressedVisualEffect_names + 7, 5}, 7 },
  { {PolicyProto_SuppressedVisualEffect_names + 12, 18}, 3 },
  { {PolicyProto_SuppressedVisualEffect_names + 30, 6}, 4 },
  { {PolicyProto_SuppressedVisualEffect_names + 36, 17}, 9 },
  { {PolicyProto_SuppressedVisualEffect_names + 53, 4}, 5 },
  { {PolicyProto_SuppressedVisualEffect_names + 57, 10}, 1 },
  { {PolicyProto_SuppressedVisualEffect_names + 67, 9}, 2 },
  { {PolicyProto_SuppressedVisualEffect_names + 76, 10}, 6 },
  { {PolicyProto_SuppressedVisualEffect_names + 86, 11}, 0 },
};

static const int PolicyProto_SuppressedVisualEffect_entries_by_number[] = {
  9, // 0 -> SVE_UNKNOWN
  6, // 1 -> SCREEN_OFF
  7, // 2 -> SCREEN_ON
  2, // 3 -> FULL_SCREEN_INTENT
  3, // 4 -> LIGHTS
  5, // 5 -> PEEK
  8, // 6 -> STATUS_BAR
  1, // 7 -> BADGE
  0, // 8 -> AMBIENT
  4, // 9 -> NOTIFICATION_LIST
};

const std::string& PolicyProto_SuppressedVisualEffect_Name(
    PolicyProto_SuppressedVisualEffect value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          PolicyProto_SuppressedVisualEffect_entries,
          PolicyProto_SuppressedVisualEffect_entries_by_number,
          10, PolicyProto_SuppressedVisualEffect_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      PolicyProto_SuppressedVisualEffect_entries,
      PolicyProto_SuppressedVisualEffect_entries_by_number,
      10, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     PolicyProto_SuppressedVisualEffect_strings[idx].get();
}
bool PolicyProto_SuppressedVisualEffect_Parse(
    const std::string& name, PolicyProto_SuppressedVisualEffect* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      PolicyProto_SuppressedVisualEffect_entries, 10, name, &int_value);
  if (success) {
    *value = static_cast<PolicyProto_SuppressedVisualEffect>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::SVE_UNKNOWN;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::SCREEN_OFF;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::SCREEN_ON;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::FULL_SCREEN_INTENT;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::LIGHTS;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::PEEK;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::STATUS_BAR;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::BADGE;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::AMBIENT;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::NOTIFICATION_LIST;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::SuppressedVisualEffect_MIN;
constexpr PolicyProto_SuppressedVisualEffect PolicyProto::SuppressedVisualEffect_MAX;
constexpr int PolicyProto::SuppressedVisualEffect_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void PolicyProto::InitAsDefaultInstance() {
}
class PolicyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyProto>()._has_bits_);
  static void set_has_priority_call_sender(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_priority_message_sender(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PolicyProto::PolicyProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.app.PolicyProto)
}
PolicyProto::PolicyProto(const PolicyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      priority_categories_(from.priority_categories_),
      suppressed_visual_effects_(from.suppressed_visual_effects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&priority_call_sender_, &from.priority_call_sender_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_message_sender_) -
    reinterpret_cast<char*>(&priority_call_sender_)) + sizeof(priority_message_sender_));
  // @@protoc_insertion_point(copy_constructor:android.app.PolicyProto)
}

void PolicyProto::SharedCtor() {
  ::memset(&priority_call_sender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_message_sender_) -
      reinterpret_cast<char*>(&priority_call_sender_)) + sizeof(priority_message_sender_));
}

PolicyProto::~PolicyProto() {
  // @@protoc_insertion_point(destructor:android.app.PolicyProto)
  SharedDtor();
}

void PolicyProto::SharedDtor() {
}

void PolicyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PolicyProto& PolicyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto.base);
  return *internal_default_instance();
}


void PolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.app.PolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  priority_categories_.Clear();
  suppressed_visual_effects_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&priority_call_sender_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&priority_message_sender_) -
        reinterpret_cast<char*>(&priority_call_sender_)) + sizeof(priority_message_sender_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PolicyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.app.PolicyProto.Category priority_categories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::android::app::PolicyProto_Category_IsValid(val))) {
              add_priority_categories(static_cast<::android::app::PolicyProto_Category>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 8);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(mutable_priority_categories(), ptr, ctx, ::android::app::PolicyProto_Category_IsValid, &_internal_metadata_, 1);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.app.PolicyProto.Sender priority_call_sender = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::app::PolicyProto_Sender_IsValid(val))) {
            set_priority_call_sender(static_cast<::android::app::PolicyProto_Sender>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.app.PolicyProto.Sender priority_message_sender = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::app::PolicyProto_Sender_IsValid(val))) {
            set_priority_message_sender(static_cast<::android::app::PolicyProto_Sender>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .android.app.PolicyProto.SuppressedVisualEffect suppressed_visual_effects = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ptr -= 1;
          do {
            ptr += 1;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::android::app::PolicyProto_SuppressedVisualEffect_IsValid(val))) {
              add_suppressed_visual_effects(static_cast<::android::app::PolicyProto_SuppressedVisualEffect>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 32);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(mutable_suppressed_visual_effects(), ptr, ctx, ::android::app::PolicyProto_SuppressedVisualEffect_IsValid, &_internal_metadata_, 4);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PolicyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.app.PolicyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.app.PolicyProto.Category priority_categories = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::app::PolicyProto_Category_IsValid(value)) {
            add_priority_categories(static_cast< ::android::app::PolicyProto_Category >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::android::app::PolicyProto_Category_IsValid,
                 &unknown_fields_stream,
                 this->mutable_priority_categories())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.app.PolicyProto.Sender priority_call_sender = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::app::PolicyProto_Sender_IsValid(value)) {
            set_priority_call_sender(static_cast< ::android::app::PolicyProto_Sender >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.app.PolicyProto.Sender priority_message_sender = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::app::PolicyProto_Sender_IsValid(value)) {
            set_priority_message_sender(static_cast< ::android::app::PolicyProto_Sender >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.app.PolicyProto.SuppressedVisualEffect suppressed_visual_effects = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::app::PolicyProto_SuppressedVisualEffect_IsValid(value)) {
            add_suppressed_visual_effects(static_cast< ::android::app::PolicyProto_SuppressedVisualEffect >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::android::app::PolicyProto_SuppressedVisualEffect_IsValid,
                 &unknown_fields_stream,
                 this->mutable_suppressed_visual_effects())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.app.PolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.app.PolicyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PolicyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.app.PolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.app.PolicyProto.Category priority_categories = 1;
  for (int i = 0, n = this->priority_categories_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->priority_categories(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.app.PolicyProto.Sender priority_call_sender = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->priority_call_sender(), output);
  }

  // optional .android.app.PolicyProto.Sender priority_message_sender = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->priority_message_sender(), output);
  }

  // repeated .android.app.PolicyProto.SuppressedVisualEffect suppressed_visual_effects = 4;
  for (int i = 0, n = this->suppressed_visual_effects_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->suppressed_visual_effects(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.app.PolicyProto)
}

size_t PolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.app.PolicyProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.app.PolicyProto.Category priority_categories = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->priority_categories_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->priority_categories(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .android.app.PolicyProto.SuppressedVisualEffect suppressed_visual_effects = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->suppressed_visual_effects_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->suppressed_visual_effects(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.app.PolicyProto.Sender priority_call_sender = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->priority_call_sender());
    }

    // optional .android.app.PolicyProto.Sender priority_message_sender = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->priority_message_sender());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolicyProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PolicyProto*>(
      &from));
}

void PolicyProto::MergeFrom(const PolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.app.PolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  priority_categories_.MergeFrom(from.priority_categories_);
  suppressed_visual_effects_.MergeFrom(from.suppressed_visual_effects_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      priority_call_sender_ = from.priority_call_sender_;
    }
    if (cached_has_bits & 0x00000002u) {
      priority_message_sender_ = from.priority_message_sender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PolicyProto::CopyFrom(const PolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.app.PolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolicyProto::IsInitialized() const {
  return true;
}

void PolicyProto::InternalSwap(PolicyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  priority_categories_.InternalSwap(&other->priority_categories_);
  suppressed_visual_effects_.InternalSwap(&other->suppressed_visual_effects_);
  swap(priority_call_sender_, other->priority_call_sender_);
  swap(priority_message_sender_, other->priority_message_sender_);
}

std::string PolicyProto::GetTypeName() const {
  return "android.app.PolicyProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace app
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::app::PolicyProto* Arena::CreateMaybeMessage< ::android::app::PolicyProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::app::PolicyProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
