// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/powerstatsservice.proto

#include "frameworks/base/core/proto/android/server/powerstatsservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnergyConsumerAttributionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnergyMeasurementProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto;
namespace com {
namespace android {
namespace server {
namespace powerstats {
class IncidentReportMeterProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IncidentReportMeterProto> _instance;
} _IncidentReportMeterProto_default_instance_;
class IncidentReportModelProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IncidentReportModelProto> _instance;
} _IncidentReportModelProto_default_instance_;
class IncidentReportResidencyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IncidentReportResidencyProto> _instance;
} _IncidentReportResidencyProto_default_instance_;
class PowerStatsServiceModelProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PowerStatsServiceModelProto> _instance;
} _PowerStatsServiceModelProto_default_instance_;
class PowerStatsServiceMeterProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PowerStatsServiceMeterProto> _instance;
} _PowerStatsServiceMeterProto_default_instance_;
class PowerStatsServiceResidencyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PowerStatsServiceResidencyProto> _instance;
} _PowerStatsServiceResidencyProto_default_instance_;
class StateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateProto> _instance;
} _StateProto_default_instance_;
class PowerEntityProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PowerEntityProto> _instance;
} _PowerEntityProto_default_instance_;
class StateResidencyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateResidencyProto> _instance;
} _StateResidencyProto_default_instance_;
class StateResidencyResultProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateResidencyResultProto> _instance;
} _StateResidencyResultProto_default_instance_;
class EnergyConsumerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnergyConsumerProto> _instance;
} _EnergyConsumerProto_default_instance_;
class EnergyConsumerAttributionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnergyConsumerAttributionProto> _instance;
} _EnergyConsumerAttributionProto_default_instance_;
class EnergyConsumerResultProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnergyConsumerResultProto> _instance;
} _EnergyConsumerResultProto_default_instance_;
class ChannelProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChannelProto> _instance;
} _ChannelProto_default_instance_;
class EnergyMeasurementProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnergyMeasurementProto> _instance;
} _EnergyMeasurementProto_default_instance_;
}  // namespace powerstats
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_ChannelProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::ChannelProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::ChannelProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {}};

static void InitDefaultsscc_info_EnergyConsumerAttributionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_EnergyConsumerAttributionProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::EnergyConsumerAttributionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::EnergyConsumerAttributionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnergyConsumerAttributionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EnergyConsumerAttributionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {}};

static void InitDefaultsscc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_EnergyConsumerProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::EnergyConsumerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::EnergyConsumerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {}};

static void InitDefaultsscc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_EnergyConsumerResultProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::EnergyConsumerResultProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::EnergyConsumerResultProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_EnergyConsumerAttributionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_EnergyMeasurementProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_EnergyMeasurementProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::EnergyMeasurementProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::EnergyMeasurementProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnergyMeasurementProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EnergyMeasurementProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {}};

static void InitDefaultsscc_info_IncidentReportMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_IncidentReportMeterProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::IncidentReportMeterProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::IncidentReportMeterProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IncidentReportMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IncidentReportMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_IncidentReportModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_IncidentReportModelProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::IncidentReportModelProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::IncidentReportModelProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IncidentReportModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IncidentReportModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_IncidentReportResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_IncidentReportResidencyProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::IncidentReportResidencyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::IncidentReportResidencyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IncidentReportResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IncidentReportResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_PowerEntityProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::PowerEntityProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::PowerEntityProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_PowerStatsServiceMeterProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::PowerStatsServiceMeterProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::PowerStatsServiceMeterProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,
      &scc_info_EnergyMeasurementProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_PowerStatsServiceModelProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::PowerStatsServiceModelProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::PowerStatsServiceModelProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,
      &scc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_PowerStatsServiceResidencyProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::PowerStatsServiceResidencyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::PowerStatsServiceResidencyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,
      &scc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

static void InitDefaultsscc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_StateProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::StateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::StateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {}};

static void InitDefaultsscc_info_StateResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_StateResidencyProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::StateResidencyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::StateResidencyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StateResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {}};

static void InitDefaultsscc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::powerstats::_StateResidencyResultProto_default_instance_;
    new (ptr) ::com::android::server::powerstats::StateResidencyResultProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::powerstats::StateResidencyResultProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto}, {
      &scc_info_StateResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base,}};

namespace com {
namespace android {
namespace server {
namespace powerstats {

// ===================================================================

void IncidentReportMeterProto::InitAsDefaultInstance() {
  ::com::android::server::powerstats::_IncidentReportMeterProto_default_instance_._instance.get_mutable()->incident_report_ = const_cast< ::com::android::server::powerstats::PowerStatsServiceMeterProto*>(
      ::com::android::server::powerstats::PowerStatsServiceMeterProto::internal_default_instance());
}
class IncidentReportMeterProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IncidentReportMeterProto>()._has_bits_);
  static const ::com::android::server::powerstats::PowerStatsServiceMeterProto& incident_report(const IncidentReportMeterProto* msg);
  static void set_has_incident_report(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::android::server::powerstats::PowerStatsServiceMeterProto&
IncidentReportMeterProto::_Internal::incident_report(const IncidentReportMeterProto* msg) {
  return *msg->incident_report_;
}
IncidentReportMeterProto::IncidentReportMeterProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.IncidentReportMeterProto)
}
IncidentReportMeterProto::IncidentReportMeterProto(const IncidentReportMeterProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_incident_report()) {
    incident_report_ = new ::com::android::server::powerstats::PowerStatsServiceMeterProto(*from.incident_report_);
  } else {
    incident_report_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.IncidentReportMeterProto)
}

void IncidentReportMeterProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IncidentReportMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  incident_report_ = nullptr;
}

IncidentReportMeterProto::~IncidentReportMeterProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.IncidentReportMeterProto)
  SharedDtor();
}

void IncidentReportMeterProto::SharedDtor() {
  if (this != internal_default_instance()) delete incident_report_;
}

void IncidentReportMeterProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IncidentReportMeterProto& IncidentReportMeterProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IncidentReportMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void IncidentReportMeterProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.IncidentReportMeterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(incident_report_ != nullptr);
    incident_report_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IncidentReportMeterProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.powerstats.PowerStatsServiceMeterProto incident_report = 3054;
      case 3054:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_incident_report(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IncidentReportMeterProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.IncidentReportMeterProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(24437u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.powerstats.PowerStatsServiceMeterProto incident_report = 3054;
      case 3054: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24434 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_incident_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.IncidentReportMeterProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.IncidentReportMeterProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IncidentReportMeterProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.IncidentReportMeterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.powerstats.PowerStatsServiceMeterProto incident_report = 3054;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3054, _Internal::incident_report(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.IncidentReportMeterProto)
}

size_t IncidentReportMeterProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.IncidentReportMeterProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.android.server.powerstats.PowerStatsServiceMeterProto incident_report = 3054;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 3 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *incident_report_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncidentReportMeterProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const IncidentReportMeterProto*>(
      &from));
}

void IncidentReportMeterProto::MergeFrom(const IncidentReportMeterProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.IncidentReportMeterProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_incident_report()) {
    mutable_incident_report()->::com::android::server::powerstats::PowerStatsServiceMeterProto::MergeFrom(from.incident_report());
  }
}

void IncidentReportMeterProto::CopyFrom(const IncidentReportMeterProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.IncidentReportMeterProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncidentReportMeterProto::IsInitialized() const {
  return true;
}

void IncidentReportMeterProto::InternalSwap(IncidentReportMeterProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(incident_report_, other->incident_report_);
}

std::string IncidentReportMeterProto::GetTypeName() const {
  return "com.android.server.powerstats.IncidentReportMeterProto";
}


// ===================================================================

void IncidentReportModelProto::InitAsDefaultInstance() {
  ::com::android::server::powerstats::_IncidentReportModelProto_default_instance_._instance.get_mutable()->incident_report_ = const_cast< ::com::android::server::powerstats::PowerStatsServiceModelProto*>(
      ::com::android::server::powerstats::PowerStatsServiceModelProto::internal_default_instance());
}
class IncidentReportModelProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IncidentReportModelProto>()._has_bits_);
  static const ::com::android::server::powerstats::PowerStatsServiceModelProto& incident_report(const IncidentReportModelProto* msg);
  static void set_has_incident_report(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::android::server::powerstats::PowerStatsServiceModelProto&
IncidentReportModelProto::_Internal::incident_report(const IncidentReportModelProto* msg) {
  return *msg->incident_report_;
}
IncidentReportModelProto::IncidentReportModelProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.IncidentReportModelProto)
}
IncidentReportModelProto::IncidentReportModelProto(const IncidentReportModelProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_incident_report()) {
    incident_report_ = new ::com::android::server::powerstats::PowerStatsServiceModelProto(*from.incident_report_);
  } else {
    incident_report_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.IncidentReportModelProto)
}

void IncidentReportModelProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IncidentReportModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  incident_report_ = nullptr;
}

IncidentReportModelProto::~IncidentReportModelProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.IncidentReportModelProto)
  SharedDtor();
}

void IncidentReportModelProto::SharedDtor() {
  if (this != internal_default_instance()) delete incident_report_;
}

void IncidentReportModelProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IncidentReportModelProto& IncidentReportModelProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IncidentReportModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void IncidentReportModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.IncidentReportModelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(incident_report_ != nullptr);
    incident_report_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IncidentReportModelProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.powerstats.PowerStatsServiceModelProto incident_report = 3055;
      case 3055:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_incident_report(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IncidentReportModelProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.IncidentReportModelProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(24445u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.powerstats.PowerStatsServiceModelProto incident_report = 3055;
      case 3055: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24442 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_incident_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.IncidentReportModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.IncidentReportModelProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IncidentReportModelProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.IncidentReportModelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.powerstats.PowerStatsServiceModelProto incident_report = 3055;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3055, _Internal::incident_report(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.IncidentReportModelProto)
}

size_t IncidentReportModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.IncidentReportModelProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.android.server.powerstats.PowerStatsServiceModelProto incident_report = 3055;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 3 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *incident_report_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncidentReportModelProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const IncidentReportModelProto*>(
      &from));
}

void IncidentReportModelProto::MergeFrom(const IncidentReportModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.IncidentReportModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_incident_report()) {
    mutable_incident_report()->::com::android::server::powerstats::PowerStatsServiceModelProto::MergeFrom(from.incident_report());
  }
}

void IncidentReportModelProto::CopyFrom(const IncidentReportModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.IncidentReportModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncidentReportModelProto::IsInitialized() const {
  return true;
}

void IncidentReportModelProto::InternalSwap(IncidentReportModelProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(incident_report_, other->incident_report_);
}

std::string IncidentReportModelProto::GetTypeName() const {
  return "com.android.server.powerstats.IncidentReportModelProto";
}


// ===================================================================

void IncidentReportResidencyProto::InitAsDefaultInstance() {
  ::com::android::server::powerstats::_IncidentReportResidencyProto_default_instance_._instance.get_mutable()->incident_report_ = const_cast< ::com::android::server::powerstats::PowerStatsServiceResidencyProto*>(
      ::com::android::server::powerstats::PowerStatsServiceResidencyProto::internal_default_instance());
}
class IncidentReportResidencyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IncidentReportResidencyProto>()._has_bits_);
  static const ::com::android::server::powerstats::PowerStatsServiceResidencyProto& incident_report(const IncidentReportResidencyProto* msg);
  static void set_has_incident_report(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::android::server::powerstats::PowerStatsServiceResidencyProto&
IncidentReportResidencyProto::_Internal::incident_report(const IncidentReportResidencyProto* msg) {
  return *msg->incident_report_;
}
IncidentReportResidencyProto::IncidentReportResidencyProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.IncidentReportResidencyProto)
}
IncidentReportResidencyProto::IncidentReportResidencyProto(const IncidentReportResidencyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_incident_report()) {
    incident_report_ = new ::com::android::server::powerstats::PowerStatsServiceResidencyProto(*from.incident_report_);
  } else {
    incident_report_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.IncidentReportResidencyProto)
}

void IncidentReportResidencyProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IncidentReportResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  incident_report_ = nullptr;
}

IncidentReportResidencyProto::~IncidentReportResidencyProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.IncidentReportResidencyProto)
  SharedDtor();
}

void IncidentReportResidencyProto::SharedDtor() {
  if (this != internal_default_instance()) delete incident_report_;
}

void IncidentReportResidencyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IncidentReportResidencyProto& IncidentReportResidencyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IncidentReportResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void IncidentReportResidencyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.IncidentReportResidencyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(incident_report_ != nullptr);
    incident_report_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IncidentReportResidencyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.powerstats.PowerStatsServiceResidencyProto incident_report = 3056;
      case 3056:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_incident_report(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IncidentReportResidencyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.IncidentReportResidencyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(24453u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.powerstats.PowerStatsServiceResidencyProto incident_report = 3056;
      case 3056: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24450 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_incident_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.IncidentReportResidencyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.IncidentReportResidencyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IncidentReportResidencyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.IncidentReportResidencyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.powerstats.PowerStatsServiceResidencyProto incident_report = 3056;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3056, _Internal::incident_report(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.IncidentReportResidencyProto)
}

size_t IncidentReportResidencyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.IncidentReportResidencyProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.android.server.powerstats.PowerStatsServiceResidencyProto incident_report = 3056;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 3 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *incident_report_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncidentReportResidencyProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const IncidentReportResidencyProto*>(
      &from));
}

void IncidentReportResidencyProto::MergeFrom(const IncidentReportResidencyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.IncidentReportResidencyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_incident_report()) {
    mutable_incident_report()->::com::android::server::powerstats::PowerStatsServiceResidencyProto::MergeFrom(from.incident_report());
  }
}

void IncidentReportResidencyProto::CopyFrom(const IncidentReportResidencyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.IncidentReportResidencyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncidentReportResidencyProto::IsInitialized() const {
  return true;
}

void IncidentReportResidencyProto::InternalSwap(IncidentReportResidencyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(incident_report_, other->incident_report_);
}

std::string IncidentReportResidencyProto::GetTypeName() const {
  return "com.android.server.powerstats.IncidentReportResidencyProto";
}


// ===================================================================

void PowerStatsServiceModelProto::InitAsDefaultInstance() {
}
class PowerStatsServiceModelProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PowerStatsServiceModelProto>()._has_bits_);
};

PowerStatsServiceModelProto::PowerStatsServiceModelProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.PowerStatsServiceModelProto)
}
PowerStatsServiceModelProto::PowerStatsServiceModelProto(const PowerStatsServiceModelProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      energy_consumer_(from.energy_consumer_),
      energy_consumer_result_(from.energy_consumer_result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.PowerStatsServiceModelProto)
}

void PowerStatsServiceModelProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
}

PowerStatsServiceModelProto::~PowerStatsServiceModelProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.PowerStatsServiceModelProto)
  SharedDtor();
}

void PowerStatsServiceModelProto::SharedDtor() {
}

void PowerStatsServiceModelProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PowerStatsServiceModelProto& PowerStatsServiceModelProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PowerStatsServiceModelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void PowerStatsServiceModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.PowerStatsServiceModelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  energy_consumer_.Clear();
  energy_consumer_result_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PowerStatsServiceModelProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.powerstats.EnergyConsumerProto energy_consumer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_energy_consumer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.powerstats.EnergyConsumerResultProto energy_consumer_result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_energy_consumer_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PowerStatsServiceModelProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.PowerStatsServiceModelProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.powerstats.EnergyConsumerProto energy_consumer = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_energy_consumer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.powerstats.EnergyConsumerResultProto energy_consumer_result = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_energy_consumer_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.PowerStatsServiceModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.PowerStatsServiceModelProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PowerStatsServiceModelProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.PowerStatsServiceModelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.EnergyConsumerProto energy_consumer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->energy_consumer_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->energy_consumer(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.powerstats.EnergyConsumerResultProto energy_consumer_result = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->energy_consumer_result_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->energy_consumer_result(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.PowerStatsServiceModelProto)
}

size_t PowerStatsServiceModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.PowerStatsServiceModelProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.EnergyConsumerProto energy_consumer = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->energy_consumer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->energy_consumer(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.powerstats.EnergyConsumerResultProto energy_consumer_result = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->energy_consumer_result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->energy_consumer_result(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PowerStatsServiceModelProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PowerStatsServiceModelProto*>(
      &from));
}

void PowerStatsServiceModelProto::MergeFrom(const PowerStatsServiceModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.PowerStatsServiceModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  energy_consumer_.MergeFrom(from.energy_consumer_);
  energy_consumer_result_.MergeFrom(from.energy_consumer_result_);
}

void PowerStatsServiceModelProto::CopyFrom(const PowerStatsServiceModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.PowerStatsServiceModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PowerStatsServiceModelProto::IsInitialized() const {
  return true;
}

void PowerStatsServiceModelProto::InternalSwap(PowerStatsServiceModelProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&energy_consumer_)->InternalSwap(CastToBase(&other->energy_consumer_));
  CastToBase(&energy_consumer_result_)->InternalSwap(CastToBase(&other->energy_consumer_result_));
}

std::string PowerStatsServiceModelProto::GetTypeName() const {
  return "com.android.server.powerstats.PowerStatsServiceModelProto";
}


// ===================================================================

void PowerStatsServiceMeterProto::InitAsDefaultInstance() {
}
class PowerStatsServiceMeterProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PowerStatsServiceMeterProto>()._has_bits_);
};

PowerStatsServiceMeterProto::PowerStatsServiceMeterProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.PowerStatsServiceMeterProto)
}
PowerStatsServiceMeterProto::PowerStatsServiceMeterProto(const PowerStatsServiceMeterProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      channel_(from.channel_),
      energy_measurement_(from.energy_measurement_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.PowerStatsServiceMeterProto)
}

void PowerStatsServiceMeterProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
}

PowerStatsServiceMeterProto::~PowerStatsServiceMeterProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.PowerStatsServiceMeterProto)
  SharedDtor();
}

void PowerStatsServiceMeterProto::SharedDtor() {
}

void PowerStatsServiceMeterProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PowerStatsServiceMeterProto& PowerStatsServiceMeterProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PowerStatsServiceMeterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void PowerStatsServiceMeterProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.PowerStatsServiceMeterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  energy_measurement_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PowerStatsServiceMeterProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.powerstats.ChannelProto channel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_channel(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.powerstats.EnergyMeasurementProto energy_measurement = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_energy_measurement(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PowerStatsServiceMeterProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.PowerStatsServiceMeterProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.powerstats.ChannelProto channel = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.powerstats.EnergyMeasurementProto energy_measurement = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_energy_measurement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.PowerStatsServiceMeterProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.PowerStatsServiceMeterProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PowerStatsServiceMeterProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.PowerStatsServiceMeterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.ChannelProto channel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->channel(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.powerstats.EnergyMeasurementProto energy_measurement = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->energy_measurement_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->energy_measurement(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.PowerStatsServiceMeterProto)
}

size_t PowerStatsServiceMeterProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.PowerStatsServiceMeterProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.ChannelProto channel = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.powerstats.EnergyMeasurementProto energy_measurement = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->energy_measurement_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->energy_measurement(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PowerStatsServiceMeterProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PowerStatsServiceMeterProto*>(
      &from));
}

void PowerStatsServiceMeterProto::MergeFrom(const PowerStatsServiceMeterProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.PowerStatsServiceMeterProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
  energy_measurement_.MergeFrom(from.energy_measurement_);
}

void PowerStatsServiceMeterProto::CopyFrom(const PowerStatsServiceMeterProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.PowerStatsServiceMeterProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PowerStatsServiceMeterProto::IsInitialized() const {
  return true;
}

void PowerStatsServiceMeterProto::InternalSwap(PowerStatsServiceMeterProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&channel_)->InternalSwap(CastToBase(&other->channel_));
  CastToBase(&energy_measurement_)->InternalSwap(CastToBase(&other->energy_measurement_));
}

std::string PowerStatsServiceMeterProto::GetTypeName() const {
  return "com.android.server.powerstats.PowerStatsServiceMeterProto";
}


// ===================================================================

void PowerStatsServiceResidencyProto::InitAsDefaultInstance() {
}
class PowerStatsServiceResidencyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PowerStatsServiceResidencyProto>()._has_bits_);
};

PowerStatsServiceResidencyProto::PowerStatsServiceResidencyProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.PowerStatsServiceResidencyProto)
}
PowerStatsServiceResidencyProto::PowerStatsServiceResidencyProto(const PowerStatsServiceResidencyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      power_entity_(from.power_entity_),
      state_residency_result_(from.state_residency_result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.PowerStatsServiceResidencyProto)
}

void PowerStatsServiceResidencyProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
}

PowerStatsServiceResidencyProto::~PowerStatsServiceResidencyProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  SharedDtor();
}

void PowerStatsServiceResidencyProto::SharedDtor() {
}

void PowerStatsServiceResidencyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PowerStatsServiceResidencyProto& PowerStatsServiceResidencyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PowerStatsServiceResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void PowerStatsServiceResidencyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  power_entity_.Clear();
  state_residency_result_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PowerStatsServiceResidencyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.powerstats.PowerEntityProto power_entity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_power_entity(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.powerstats.StateResidencyResultProto state_residency_result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_state_residency_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PowerStatsServiceResidencyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.powerstats.PowerEntityProto power_entity = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_power_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.powerstats.StateResidencyResultProto state_residency_result = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_state_residency_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PowerStatsServiceResidencyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.PowerEntityProto power_entity = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->power_entity_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->power_entity(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.powerstats.StateResidencyResultProto state_residency_result = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->state_residency_result_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->state_residency_result(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.PowerStatsServiceResidencyProto)
}

size_t PowerStatsServiceResidencyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.PowerEntityProto power_entity = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->power_entity_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->power_entity(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.powerstats.StateResidencyResultProto state_residency_result = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->state_residency_result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->state_residency_result(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PowerStatsServiceResidencyProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PowerStatsServiceResidencyProto*>(
      &from));
}

void PowerStatsServiceResidencyProto::MergeFrom(const PowerStatsServiceResidencyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  power_entity_.MergeFrom(from.power_entity_);
  state_residency_result_.MergeFrom(from.state_residency_result_);
}

void PowerStatsServiceResidencyProto::CopyFrom(const PowerStatsServiceResidencyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.PowerStatsServiceResidencyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PowerStatsServiceResidencyProto::IsInitialized() const {
  return true;
}

void PowerStatsServiceResidencyProto::InternalSwap(PowerStatsServiceResidencyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&power_entity_)->InternalSwap(CastToBase(&other->power_entity_));
  CastToBase(&state_residency_result_)->InternalSwap(CastToBase(&other->state_residency_result_));
}

std::string PowerStatsServiceResidencyProto::GetTypeName() const {
  return "com.android.server.powerstats.PowerStatsServiceResidencyProto";
}


// ===================================================================

void StateProto::InitAsDefaultInstance() {
}
class StateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<StateProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StateProto::StateProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.StateProto)
}
StateProto::StateProto(const StateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.StateProto)
}

void StateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

StateProto::~StateProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.StateProto)
  SharedDtor();
}

void StateProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateProto& StateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void StateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.StateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.StateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.StateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.StateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.StateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.StateProto)
}

size_t StateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.StateProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const StateProto*>(
      &from));
}

void StateProto::MergeFrom(const StateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.StateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StateProto::CopyFrom(const StateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.StateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateProto::IsInitialized() const {
  return true;
}

void StateProto::InternalSwap(StateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

std::string StateProto::GetTypeName() const {
  return "com.android.server.powerstats.StateProto";
}


// ===================================================================

void PowerEntityProto::InitAsDefaultInstance() {
}
class PowerEntityProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PowerEntityProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PowerEntityProto::PowerEntityProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.PowerEntityProto)
}
PowerEntityProto::PowerEntityProto(const PowerEntityProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      states_(from.states_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.PowerEntityProto)
}

void PowerEntityProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

PowerEntityProto::~PowerEntityProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.PowerEntityProto)
  SharedDtor();
}

void PowerEntityProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PowerEntityProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PowerEntityProto& PowerEntityProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PowerEntityProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void PowerEntityProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.PowerEntityProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PowerEntityProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.powerstats.StateProto states = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PowerEntityProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.PowerEntityProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.powerstats.StateProto states = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.PowerEntityProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.PowerEntityProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PowerEntityProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.PowerEntityProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .com.android.server.powerstats.StateProto states = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->states_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->states(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.PowerEntityProto)
}

size_t PowerEntityProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.PowerEntityProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.StateProto states = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->states_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->states(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PowerEntityProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PowerEntityProto*>(
      &from));
}

void PowerEntityProto::MergeFrom(const PowerEntityProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.PowerEntityProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PowerEntityProto::CopyFrom(const PowerEntityProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.PowerEntityProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PowerEntityProto::IsInitialized() const {
  return true;
}

void PowerEntityProto::InternalSwap(PowerEntityProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&states_)->InternalSwap(CastToBase(&other->states_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

std::string PowerEntityProto::GetTypeName() const {
  return "com.android.server.powerstats.PowerEntityProto";
}


// ===================================================================

void StateResidencyProto::InitAsDefaultInstance() {
}
class StateResidencyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<StateResidencyProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_total_time_in_state_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_total_state_entry_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_last_entry_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

StateResidencyProto::StateResidencyProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.StateResidencyProto)
}
StateResidencyProto::StateResidencyProto(const StateResidencyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_time_in_state_ms_, &from.total_time_in_state_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&total_time_in_state_ms_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.StateResidencyProto)
}

void StateResidencyProto::SharedCtor() {
  ::memset(&total_time_in_state_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&total_time_in_state_ms_)) + sizeof(id_));
}

StateResidencyProto::~StateResidencyProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.StateResidencyProto)
  SharedDtor();
}

void StateResidencyProto::SharedDtor() {
}

void StateResidencyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateResidencyProto& StateResidencyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateResidencyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void StateResidencyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.StateResidencyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&total_time_in_state_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&total_time_in_state_ms_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateResidencyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 total_time_in_state_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_total_time_in_state_ms(&has_bits);
          total_time_in_state_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 total_state_entry_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_total_state_entry_count(&has_bits);
          total_state_entry_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_entry_timestamp_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_last_entry_timestamp_ms(&has_bits);
          last_entry_timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateResidencyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.StateResidencyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total_time_in_state_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_total_time_in_state_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_time_in_state_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total_state_entry_count = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_total_state_entry_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_state_entry_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_entry_timestamp_ms = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_last_entry_timestamp_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_entry_timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.StateResidencyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.StateResidencyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateResidencyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.StateResidencyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 total_time_in_state_ms = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->total_time_in_state_ms(), output);
  }

  // optional int64 total_state_entry_count = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->total_state_entry_count(), output);
  }

  // optional int64 last_entry_timestamp_ms = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->last_entry_timestamp_ms(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.StateResidencyProto)
}

size_t StateResidencyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.StateResidencyProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 total_time_in_state_ms = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_time_in_state_ms());
    }

    // optional int64 total_state_entry_count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_state_entry_count());
    }

    // optional int64 last_entry_timestamp_ms = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_entry_timestamp_ms());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateResidencyProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const StateResidencyProto*>(
      &from));
}

void StateResidencyProto::MergeFrom(const StateResidencyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.StateResidencyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      total_time_in_state_ms_ = from.total_time_in_state_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      total_state_entry_count_ = from.total_state_entry_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_entry_timestamp_ms_ = from.last_entry_timestamp_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StateResidencyProto::CopyFrom(const StateResidencyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.StateResidencyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateResidencyProto::IsInitialized() const {
  return true;
}

void StateResidencyProto::InternalSwap(StateResidencyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(total_time_in_state_ms_, other->total_time_in_state_ms_);
  swap(total_state_entry_count_, other->total_state_entry_count_);
  swap(last_entry_timestamp_ms_, other->last_entry_timestamp_ms_);
  swap(id_, other->id_);
}

std::string StateResidencyProto::GetTypeName() const {
  return "com.android.server.powerstats.StateResidencyProto";
}


// ===================================================================

void StateResidencyResultProto::InitAsDefaultInstance() {
}
class StateResidencyResultProto::_Internal {
 public:
  using HasBits = decltype(std::declval<StateResidencyResultProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StateResidencyResultProto::StateResidencyResultProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.StateResidencyResultProto)
}
StateResidencyResultProto::StateResidencyResultProto(const StateResidencyResultProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      state_residency_data_(from.state_residency_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.StateResidencyResultProto)
}

void StateResidencyResultProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  id_ = 0;
}

StateResidencyResultProto::~StateResidencyResultProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.StateResidencyResultProto)
  SharedDtor();
}

void StateResidencyResultProto::SharedDtor() {
}

void StateResidencyResultProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateResidencyResultProto& StateResidencyResultProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateResidencyResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void StateResidencyResultProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.StateResidencyResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_residency_data_.Clear();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateResidencyResultProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.powerstats.StateResidencyProto state_residency_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_state_residency_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateResidencyResultProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.StateResidencyResultProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.powerstats.StateResidencyProto state_residency_data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_state_residency_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.StateResidencyResultProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.StateResidencyResultProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateResidencyResultProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.StateResidencyResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .com.android.server.powerstats.StateResidencyProto state_residency_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->state_residency_data_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->state_residency_data(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.StateResidencyResultProto)
}

size_t StateResidencyResultProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.StateResidencyResultProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.StateResidencyProto state_residency_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->state_residency_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->state_residency_data(static_cast<int>(i)));
    }
  }

  // optional int32 id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateResidencyResultProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const StateResidencyResultProto*>(
      &from));
}

void StateResidencyResultProto::MergeFrom(const StateResidencyResultProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.StateResidencyResultProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  state_residency_data_.MergeFrom(from.state_residency_data_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void StateResidencyResultProto::CopyFrom(const StateResidencyResultProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.StateResidencyResultProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateResidencyResultProto::IsInitialized() const {
  return true;
}

void StateResidencyResultProto::InternalSwap(StateResidencyResultProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&state_residency_data_)->InternalSwap(CastToBase(&other->state_residency_data_));
  swap(id_, other->id_);
}

std::string StateResidencyResultProto::GetTypeName() const {
  return "com.android.server.powerstats.StateResidencyResultProto";
}


// ===================================================================

void EnergyConsumerProto::InitAsDefaultInstance() {
}
class EnergyConsumerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<EnergyConsumerProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ordinal(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

EnergyConsumerProto::EnergyConsumerProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.EnergyConsumerProto)
}
EnergyConsumerProto::EnergyConsumerProto(const EnergyConsumerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.EnergyConsumerProto)
}

void EnergyConsumerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

EnergyConsumerProto::~EnergyConsumerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.EnergyConsumerProto)
  SharedDtor();
}

void EnergyConsumerProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EnergyConsumerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnergyConsumerProto& EnergyConsumerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnergyConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void EnergyConsumerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.EnergyConsumerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EnergyConsumerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 ordinal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ordinal(&has_bits);
          ordinal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EnergyConsumerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.EnergyConsumerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ordinal = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_ordinal(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.EnergyConsumerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.EnergyConsumerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EnergyConsumerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.EnergyConsumerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 ordinal = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->ordinal(), output);
  }

  // optional int32 type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional string name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.EnergyConsumerProto)
}

size_t EnergyConsumerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.EnergyConsumerProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 ordinal = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->ordinal());
    }

    // optional int32 type = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnergyConsumerProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const EnergyConsumerProto*>(
      &from));
}

void EnergyConsumerProto::MergeFrom(const EnergyConsumerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.EnergyConsumerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      ordinal_ = from.ordinal_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnergyConsumerProto::CopyFrom(const EnergyConsumerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.EnergyConsumerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnergyConsumerProto::IsInitialized() const {
  return true;
}

void EnergyConsumerProto::InternalSwap(EnergyConsumerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(ordinal_, other->ordinal_);
  swap(type_, other->type_);
}

std::string EnergyConsumerProto::GetTypeName() const {
  return "com.android.server.powerstats.EnergyConsumerProto";
}


// ===================================================================

void EnergyConsumerAttributionProto::InitAsDefaultInstance() {
}
class EnergyConsumerAttributionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<EnergyConsumerAttributionProto>()._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_energy_uws(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

EnergyConsumerAttributionProto::EnergyConsumerAttributionProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.EnergyConsumerAttributionProto)
}
EnergyConsumerAttributionProto::EnergyConsumerAttributionProto(const EnergyConsumerAttributionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&energy_uws_, &from.energy_uws_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&energy_uws_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.EnergyConsumerAttributionProto)
}

void EnergyConsumerAttributionProto::SharedCtor() {
  ::memset(&energy_uws_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&energy_uws_)) + sizeof(uid_));
}

EnergyConsumerAttributionProto::~EnergyConsumerAttributionProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.EnergyConsumerAttributionProto)
  SharedDtor();
}

void EnergyConsumerAttributionProto::SharedDtor() {
}

void EnergyConsumerAttributionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnergyConsumerAttributionProto& EnergyConsumerAttributionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnergyConsumerAttributionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void EnergyConsumerAttributionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.EnergyConsumerAttributionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&energy_uws_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&energy_uws_)) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EnergyConsumerAttributionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 energy_uws = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_energy_uws(&has_bits);
          energy_uws_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EnergyConsumerAttributionProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.EnergyConsumerAttributionProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 energy_uws = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_energy_uws(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &energy_uws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.EnergyConsumerAttributionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.EnergyConsumerAttributionProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EnergyConsumerAttributionProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.EnergyConsumerAttributionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional int64 energy_uws = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->energy_uws(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.EnergyConsumerAttributionProto)
}

size_t EnergyConsumerAttributionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.EnergyConsumerAttributionProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 energy_uws = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->energy_uws());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnergyConsumerAttributionProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const EnergyConsumerAttributionProto*>(
      &from));
}

void EnergyConsumerAttributionProto::MergeFrom(const EnergyConsumerAttributionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.EnergyConsumerAttributionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      energy_uws_ = from.energy_uws_;
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnergyConsumerAttributionProto::CopyFrom(const EnergyConsumerAttributionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.EnergyConsumerAttributionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnergyConsumerAttributionProto::IsInitialized() const {
  return true;
}

void EnergyConsumerAttributionProto::InternalSwap(EnergyConsumerAttributionProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(energy_uws_, other->energy_uws_);
  swap(uid_, other->uid_);
}

std::string EnergyConsumerAttributionProto::GetTypeName() const {
  return "com.android.server.powerstats.EnergyConsumerAttributionProto";
}


// ===================================================================

void EnergyConsumerResultProto::InitAsDefaultInstance() {
}
class EnergyConsumerResultProto::_Internal {
 public:
  using HasBits = decltype(std::declval<EnergyConsumerResultProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_energy_uws(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

EnergyConsumerResultProto::EnergyConsumerResultProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.EnergyConsumerResultProto)
}
EnergyConsumerResultProto::EnergyConsumerResultProto(const EnergyConsumerResultProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attribution_(from.attribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_ms_, &from.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.EnergyConsumerResultProto)
}

void EnergyConsumerResultProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  ::memset(&timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(id_));
}

EnergyConsumerResultProto::~EnergyConsumerResultProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.EnergyConsumerResultProto)
  SharedDtor();
}

void EnergyConsumerResultProto::SharedDtor() {
}

void EnergyConsumerResultProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnergyConsumerResultProto& EnergyConsumerResultProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnergyConsumerResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void EnergyConsumerResultProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.EnergyConsumerResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribution_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&timestamp_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EnergyConsumerResultProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 timestamp_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_timestamp_ms(&has_bits);
          timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 energy_uws = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_energy_uws(&has_bits);
          energy_uws_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.powerstats.EnergyConsumerAttributionProto attribution = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_attribution(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EnergyConsumerResultProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.EnergyConsumerResultProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_timestamp_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 energy_uws = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_energy_uws(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &energy_uws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.powerstats.EnergyConsumerAttributionProto attribution = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_attribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.EnergyConsumerResultProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.EnergyConsumerResultProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EnergyConsumerResultProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.EnergyConsumerResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 timestamp_ms = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->timestamp_ms(), output);
  }

  // optional int64 energy_uws = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->energy_uws(), output);
  }

  // repeated .com.android.server.powerstats.EnergyConsumerAttributionProto attribution = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribution_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      4,
      this->attribution(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.EnergyConsumerResultProto)
}

size_t EnergyConsumerResultProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.EnergyConsumerResultProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.powerstats.EnergyConsumerAttributionProto attribution = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->attribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->attribution(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 timestamp_ms = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->timestamp_ms());
    }

    // optional int64 energy_uws = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->energy_uws());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnergyConsumerResultProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const EnergyConsumerResultProto*>(
      &from));
}

void EnergyConsumerResultProto::MergeFrom(const EnergyConsumerResultProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.EnergyConsumerResultProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribution_.MergeFrom(from.attribution_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ms_ = from.timestamp_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      energy_uws_ = from.energy_uws_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnergyConsumerResultProto::CopyFrom(const EnergyConsumerResultProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.EnergyConsumerResultProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnergyConsumerResultProto::IsInitialized() const {
  return true;
}

void EnergyConsumerResultProto::InternalSwap(EnergyConsumerResultProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&attribution_)->InternalSwap(CastToBase(&other->attribution_));
  swap(timestamp_ms_, other->timestamp_ms_);
  swap(energy_uws_, other->energy_uws_);
  swap(id_, other->id_);
}

std::string EnergyConsumerResultProto::GetTypeName() const {
  return "com.android.server.powerstats.EnergyConsumerResultProto";
}


// ===================================================================

void ChannelProto::InitAsDefaultInstance() {
}
class ChannelProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subsystem(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ChannelProto::ChannelProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.ChannelProto)
}
ChannelProto::ChannelProto(const ChannelProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  subsystem_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_subsystem()) {
    subsystem_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subsystem_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.ChannelProto)
}

void ChannelProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subsystem_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

ChannelProto::~ChannelProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.ChannelProto)
  SharedDtor();
}

void ChannelProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subsystem_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChannelProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChannelProto& ChannelProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void ChannelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.ChannelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      subsystem_.ClearNonDefaultToEmptyNoArena();
    }
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChannelProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string subsystem = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_subsystem(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChannelProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.ChannelProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string subsystem = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_subsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.ChannelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.ChannelProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChannelProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.ChannelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string subsystem = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subsystem(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.ChannelProto)
}

size_t ChannelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.ChannelProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string subsystem = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->subsystem());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ChannelProto*>(
      &from));
}

void ChannelProto::MergeFrom(const ChannelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.ChannelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      subsystem_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subsystem_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChannelProto::CopyFrom(const ChannelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.ChannelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelProto::IsInitialized() const {
  return true;
}

void ChannelProto::InternalSwap(ChannelProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subsystem_.Swap(&other->subsystem_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

std::string ChannelProto::GetTypeName() const {
  return "com.android.server.powerstats.ChannelProto";
}


// ===================================================================

void EnergyMeasurementProto::InitAsDefaultInstance() {
}
class EnergyMeasurementProto::_Internal {
 public:
  using HasBits = decltype(std::declval<EnergyMeasurementProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_energy_uws(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_duration_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

EnergyMeasurementProto::EnergyMeasurementProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.powerstats.EnergyMeasurementProto)
}
EnergyMeasurementProto::EnergyMeasurementProto(const EnergyMeasurementProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_ms_, &from.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.powerstats.EnergyMeasurementProto)
}

void EnergyMeasurementProto::SharedCtor() {
  ::memset(&timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(id_));
}

EnergyMeasurementProto::~EnergyMeasurementProto() {
  // @@protoc_insertion_point(destructor:com.android.server.powerstats.EnergyMeasurementProto)
  SharedDtor();
}

void EnergyMeasurementProto::SharedDtor() {
}

void EnergyMeasurementProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnergyMeasurementProto& EnergyMeasurementProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnergyMeasurementProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpowerstatsservice_2eproto.base);
  return *internal_default_instance();
}


void EnergyMeasurementProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.powerstats.EnergyMeasurementProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&timestamp_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EnergyMeasurementProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 timestamp_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_timestamp_ms(&has_bits);
          timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 energy_uws = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_energy_uws(&has_bits);
          energy_uws_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 duration_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_duration_ms(&has_bits);
          duration_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EnergyMeasurementProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.powerstats.EnergyMeasurementProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timestamp_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_timestamp_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 energy_uws = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_energy_uws(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &energy_uws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 duration_ms = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_duration_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &duration_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.powerstats.EnergyMeasurementProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.powerstats.EnergyMeasurementProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EnergyMeasurementProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.powerstats.EnergyMeasurementProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 timestamp_ms = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->timestamp_ms(), output);
  }

  // optional int64 energy_uws = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->energy_uws(), output);
  }

  // optional int64 duration_ms = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->duration_ms(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.powerstats.EnergyMeasurementProto)
}

size_t EnergyMeasurementProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.powerstats.EnergyMeasurementProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 timestamp_ms = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->timestamp_ms());
    }

    // optional int64 energy_uws = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->energy_uws());
    }

    // optional int64 duration_ms = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->duration_ms());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnergyMeasurementProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const EnergyMeasurementProto*>(
      &from));
}

void EnergyMeasurementProto::MergeFrom(const EnergyMeasurementProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.powerstats.EnergyMeasurementProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ms_ = from.timestamp_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      energy_uws_ = from.energy_uws_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ms_ = from.duration_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnergyMeasurementProto::CopyFrom(const EnergyMeasurementProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.powerstats.EnergyMeasurementProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnergyMeasurementProto::IsInitialized() const {
  return true;
}

void EnergyMeasurementProto::InternalSwap(EnergyMeasurementProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(timestamp_ms_, other->timestamp_ms_);
  swap(energy_uws_, other->energy_uws_);
  swap(duration_ms_, other->duration_ms_);
  swap(id_, other->id_);
}

std::string EnergyMeasurementProto::GetTypeName() const {
  return "com.android.server.powerstats.EnergyMeasurementProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace powerstats
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::IncidentReportMeterProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::IncidentReportMeterProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::IncidentReportMeterProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::IncidentReportModelProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::IncidentReportModelProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::IncidentReportModelProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::IncidentReportResidencyProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::IncidentReportResidencyProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::IncidentReportResidencyProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::PowerStatsServiceModelProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::PowerStatsServiceModelProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::PowerStatsServiceModelProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::PowerStatsServiceMeterProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::PowerStatsServiceMeterProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::PowerStatsServiceMeterProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::PowerStatsServiceResidencyProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::PowerStatsServiceResidencyProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::PowerStatsServiceResidencyProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::StateProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::StateProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::StateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::PowerEntityProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::PowerEntityProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::PowerEntityProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::StateResidencyProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::StateResidencyProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::StateResidencyProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::StateResidencyResultProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::StateResidencyResultProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::StateResidencyResultProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::EnergyConsumerProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::EnergyConsumerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::EnergyConsumerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::EnergyConsumerAttributionProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::EnergyConsumerAttributionProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::EnergyConsumerAttributionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::EnergyConsumerResultProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::EnergyConsumerResultProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::EnergyConsumerResultProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::ChannelProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::ChannelProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::ChannelProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::powerstats::EnergyMeasurementProto* Arena::CreateMaybeMessage< ::com::android::server::powerstats::EnergyMeasurementProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::powerstats::EnergyMeasurementProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
