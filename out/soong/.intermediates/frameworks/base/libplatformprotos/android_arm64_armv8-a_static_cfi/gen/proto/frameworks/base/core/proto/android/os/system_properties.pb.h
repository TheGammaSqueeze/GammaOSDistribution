// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/system_properties.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[23]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace os {
class SystemPropertiesProto;
class SystemPropertiesProtoDefaultTypeInternal;
extern SystemPropertiesProtoDefaultTypeInternal _SystemPropertiesProto_default_instance_;
class SystemPropertiesProto_AacDrc;
class SystemPropertiesProto_AacDrcDefaultTypeInternal;
extern SystemPropertiesProto_AacDrcDefaultTypeInternal _SystemPropertiesProto_AacDrc_default_instance_;
class SystemPropertiesProto_Aaudio;
class SystemPropertiesProto_AaudioDefaultTypeInternal;
extern SystemPropertiesProto_AaudioDefaultTypeInternal _SystemPropertiesProto_Aaudio_default_instance_;
class SystemPropertiesProto_Camera;
class SystemPropertiesProto_CameraDefaultTypeInternal;
extern SystemPropertiesProto_CameraDefaultTypeInternal _SystemPropertiesProto_Camera_default_instance_;
class SystemPropertiesProto_DalvikVm;
class SystemPropertiesProto_DalvikVmDefaultTypeInternal;
extern SystemPropertiesProto_DalvikVmDefaultTypeInternal _SystemPropertiesProto_DalvikVm_default_instance_;
class SystemPropertiesProto_InitSvc;
class SystemPropertiesProto_InitSvcDefaultTypeInternal;
extern SystemPropertiesProto_InitSvcDefaultTypeInternal _SystemPropertiesProto_InitSvc_default_instance_;
class SystemPropertiesProto_Log;
class SystemPropertiesProto_LogDefaultTypeInternal;
extern SystemPropertiesProto_LogDefaultTypeInternal _SystemPropertiesProto_Log_default_instance_;
class SystemPropertiesProto_Persist;
class SystemPropertiesProto_PersistDefaultTypeInternal;
extern SystemPropertiesProto_PersistDefaultTypeInternal _SystemPropertiesProto_Persist_default_instance_;
class SystemPropertiesProto_PmDexopt;
class SystemPropertiesProto_PmDexoptDefaultTypeInternal;
extern SystemPropertiesProto_PmDexoptDefaultTypeInternal _SystemPropertiesProto_PmDexopt_default_instance_;
class SystemPropertiesProto_Property;
class SystemPropertiesProto_PropertyDefaultTypeInternal;
extern SystemPropertiesProto_PropertyDefaultTypeInternal _SystemPropertiesProto_Property_default_instance_;
class SystemPropertiesProto_Ro;
class SystemPropertiesProto_RoDefaultTypeInternal;
extern SystemPropertiesProto_RoDefaultTypeInternal _SystemPropertiesProto_Ro_default_instance_;
class SystemPropertiesProto_Ro_Boot;
class SystemPropertiesProto_Ro_BootDefaultTypeInternal;
extern SystemPropertiesProto_Ro_BootDefaultTypeInternal _SystemPropertiesProto_Ro_Boot_default_instance_;
class SystemPropertiesProto_Ro_BootImage;
class SystemPropertiesProto_Ro_BootImageDefaultTypeInternal;
extern SystemPropertiesProto_Ro_BootImageDefaultTypeInternal _SystemPropertiesProto_Ro_BootImage_default_instance_;
class SystemPropertiesProto_Ro_Build;
class SystemPropertiesProto_Ro_BuildDefaultTypeInternal;
extern SystemPropertiesProto_Ro_BuildDefaultTypeInternal _SystemPropertiesProto_Ro_Build_default_instance_;
class SystemPropertiesProto_Ro_Build_Version;
class SystemPropertiesProto_Ro_Build_VersionDefaultTypeInternal;
extern SystemPropertiesProto_Ro_Build_VersionDefaultTypeInternal _SystemPropertiesProto_Ro_Build_Version_default_instance_;
class SystemPropertiesProto_Ro_Config;
class SystemPropertiesProto_Ro_ConfigDefaultTypeInternal;
extern SystemPropertiesProto_Ro_ConfigDefaultTypeInternal _SystemPropertiesProto_Ro_Config_default_instance_;
class SystemPropertiesProto_Ro_Hardware;
class SystemPropertiesProto_Ro_HardwareDefaultTypeInternal;
extern SystemPropertiesProto_Ro_HardwareDefaultTypeInternal _SystemPropertiesProto_Ro_Hardware_default_instance_;
class SystemPropertiesProto_Ro_Product;
class SystemPropertiesProto_Ro_ProductDefaultTypeInternal;
extern SystemPropertiesProto_Ro_ProductDefaultTypeInternal _SystemPropertiesProto_Ro_Product_default_instance_;
class SystemPropertiesProto_Ro_Product_Vendor;
class SystemPropertiesProto_Ro_Product_VendorDefaultTypeInternal;
extern SystemPropertiesProto_Ro_Product_VendorDefaultTypeInternal _SystemPropertiesProto_Ro_Product_Vendor_default_instance_;
class SystemPropertiesProto_Ro_Telephony;
class SystemPropertiesProto_Ro_TelephonyDefaultTypeInternal;
extern SystemPropertiesProto_Ro_TelephonyDefaultTypeInternal _SystemPropertiesProto_Ro_Telephony_default_instance_;
class SystemPropertiesProto_Ro_Vendor;
class SystemPropertiesProto_Ro_VendorDefaultTypeInternal;
extern SystemPropertiesProto_Ro_VendorDefaultTypeInternal _SystemPropertiesProto_Ro_Vendor_default_instance_;
class SystemPropertiesProto_Sys;
class SystemPropertiesProto_SysDefaultTypeInternal;
extern SystemPropertiesProto_SysDefaultTypeInternal _SystemPropertiesProto_Sys_default_instance_;
class SystemPropertiesProto_Sys_Usb;
class SystemPropertiesProto_Sys_UsbDefaultTypeInternal;
extern SystemPropertiesProto_Sys_UsbDefaultTypeInternal _SystemPropertiesProto_Sys_Usb_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::SystemPropertiesProto* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto>(Arena*);
template<> ::android::os::SystemPropertiesProto_AacDrc* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_AacDrc>(Arena*);
template<> ::android::os::SystemPropertiesProto_Aaudio* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Aaudio>(Arena*);
template<> ::android::os::SystemPropertiesProto_Camera* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Camera>(Arena*);
template<> ::android::os::SystemPropertiesProto_DalvikVm* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_DalvikVm>(Arena*);
template<> ::android::os::SystemPropertiesProto_InitSvc* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_InitSvc>(Arena*);
template<> ::android::os::SystemPropertiesProto_Log* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Log>(Arena*);
template<> ::android::os::SystemPropertiesProto_Persist* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Persist>(Arena*);
template<> ::android::os::SystemPropertiesProto_PmDexopt* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_PmDexopt>(Arena*);
template<> ::android::os::SystemPropertiesProto_Property* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Property>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Boot* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Boot>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_BootImage* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_BootImage>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Build* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Build>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Build_Version* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Build_Version>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Config* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Config>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Hardware* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Hardware>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Product* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Product>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Product_Vendor* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Product_Vendor>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Telephony* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Telephony>(Arena*);
template<> ::android::os::SystemPropertiesProto_Ro_Vendor* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Vendor>(Arena*);
template<> ::android::os::SystemPropertiesProto_Sys* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Sys>(Arena*);
template<> ::android::os::SystemPropertiesProto_Sys_Usb* Arena::CreateMaybeMessage<::android::os::SystemPropertiesProto_Sys_Usb>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

enum SystemPropertiesProto_InitSvc_Status : int {
  SystemPropertiesProto_InitSvc_Status_STATUS_UNKNOWN = 0,
  SystemPropertiesProto_InitSvc_Status_STATUS_RUNNING = 1,
  SystemPropertiesProto_InitSvc_Status_STATUS_STOPPED = 2
};
bool SystemPropertiesProto_InitSvc_Status_IsValid(int value);
constexpr SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc_Status_Status_MIN = SystemPropertiesProto_InitSvc_Status_STATUS_UNKNOWN;
constexpr SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc_Status_Status_MAX = SystemPropertiesProto_InitSvc_Status_STATUS_STOPPED;
constexpr int SystemPropertiesProto_InitSvc_Status_Status_ARRAYSIZE = SystemPropertiesProto_InitSvc_Status_Status_MAX + 1;

const std::string& SystemPropertiesProto_InitSvc_Status_Name(SystemPropertiesProto_InitSvc_Status value);
template<typename T>
inline const std::string& SystemPropertiesProto_InitSvc_Status_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SystemPropertiesProto_InitSvc_Status>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SystemPropertiesProto_InitSvc_Status_Name.");
  return SystemPropertiesProto_InitSvc_Status_Name(static_cast<SystemPropertiesProto_InitSvc_Status>(enum_t_value));
}
bool SystemPropertiesProto_InitSvc_Status_Parse(
    const std::string& name, SystemPropertiesProto_InitSvc_Status* value);
// ===================================================================

class SystemPropertiesProto_Property :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Property) */ {
 public:
  SystemPropertiesProto_Property();
  virtual ~SystemPropertiesProto_Property();

  SystemPropertiesProto_Property(const SystemPropertiesProto_Property& from);
  SystemPropertiesProto_Property(SystemPropertiesProto_Property&& from) noexcept
    : SystemPropertiesProto_Property() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Property& operator=(const SystemPropertiesProto_Property& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Property& operator=(SystemPropertiesProto_Property&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Property& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Property* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Property*>(
               &_SystemPropertiesProto_Property_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SystemPropertiesProto_Property& a, SystemPropertiesProto_Property& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Property* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Property* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Property>(nullptr);
  }

  SystemPropertiesProto_Property* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Property>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Property& from);
  void MergeFrom(const SystemPropertiesProto_Property& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Property* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Property";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Property)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_AacDrc :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.AacDrc) */ {
 public:
  SystemPropertiesProto_AacDrc();
  virtual ~SystemPropertiesProto_AacDrc();

  SystemPropertiesProto_AacDrc(const SystemPropertiesProto_AacDrc& from);
  SystemPropertiesProto_AacDrc(SystemPropertiesProto_AacDrc&& from) noexcept
    : SystemPropertiesProto_AacDrc() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_AacDrc& operator=(const SystemPropertiesProto_AacDrc& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_AacDrc& operator=(SystemPropertiesProto_AacDrc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_AacDrc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_AacDrc* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_AacDrc*>(
               &_SystemPropertiesProto_AacDrc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SystemPropertiesProto_AacDrc& a, SystemPropertiesProto_AacDrc& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_AacDrc* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_AacDrc* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_AacDrc>(nullptr);
  }

  SystemPropertiesProto_AacDrc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_AacDrc>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_AacDrc& from);
  void MergeFrom(const SystemPropertiesProto_AacDrc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_AacDrc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.AacDrc";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoostFieldNumber = 1,
    kCutFieldNumber = 2,
    kEncTargetLevelFieldNumber = 3,
    kHeavyFieldNumber = 4,
    kReferenceLevelFieldNumber = 5,
  };
  // optional int32 boost = 1;
  bool has_boost() const;
  void clear_boost();
  ::PROTOBUF_NAMESPACE_ID::int32 boost() const;
  void set_boost(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 cut = 2;
  bool has_cut() const;
  void clear_cut();
  ::PROTOBUF_NAMESPACE_ID::int32 cut() const;
  void set_cut(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 enc_target_level = 3;
  bool has_enc_target_level() const;
  void clear_enc_target_level();
  ::PROTOBUF_NAMESPACE_ID::int32 enc_target_level() const;
  void set_enc_target_level(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 heavy = 4;
  bool has_heavy() const;
  void clear_heavy();
  ::PROTOBUF_NAMESPACE_ID::int32 heavy() const;
  void set_heavy(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 reference_level = 5;
  bool has_reference_level() const;
  void clear_reference_level();
  ::PROTOBUF_NAMESPACE_ID::int32 reference_level() const;
  void set_reference_level(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.AacDrc)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 boost_;
  ::PROTOBUF_NAMESPACE_ID::int32 cut_;
  ::PROTOBUF_NAMESPACE_ID::int32 enc_target_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 heavy_;
  ::PROTOBUF_NAMESPACE_ID::int32 reference_level_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Aaudio :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Aaudio) */ {
 public:
  SystemPropertiesProto_Aaudio();
  virtual ~SystemPropertiesProto_Aaudio();

  SystemPropertiesProto_Aaudio(const SystemPropertiesProto_Aaudio& from);
  SystemPropertiesProto_Aaudio(SystemPropertiesProto_Aaudio&& from) noexcept
    : SystemPropertiesProto_Aaudio() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Aaudio& operator=(const SystemPropertiesProto_Aaudio& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Aaudio& operator=(SystemPropertiesProto_Aaudio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Aaudio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Aaudio* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Aaudio*>(
               &_SystemPropertiesProto_Aaudio_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SystemPropertiesProto_Aaudio& a, SystemPropertiesProto_Aaudio& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Aaudio* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Aaudio* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Aaudio>(nullptr);
  }

  SystemPropertiesProto_Aaudio* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Aaudio>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Aaudio& from);
  void MergeFrom(const SystemPropertiesProto_Aaudio& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Aaudio* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Aaudio";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHwBurstMinUsecFieldNumber = 1,
    kMinimumSleepUsecFieldNumber = 2,
    kMixerBurstsFieldNumber = 3,
    kMmapExclusivePolicyFieldNumber = 4,
    kMmapPolicyFieldNumber = 5,
    kWakeupDelayUsecFieldNumber = 6,
  };
  // optional int32 hw_burst_min_usec = 1;
  bool has_hw_burst_min_usec() const;
  void clear_hw_burst_min_usec();
  ::PROTOBUF_NAMESPACE_ID::int32 hw_burst_min_usec() const;
  void set_hw_burst_min_usec(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 minimum_sleep_usec = 2;
  bool has_minimum_sleep_usec() const;
  void clear_minimum_sleep_usec();
  ::PROTOBUF_NAMESPACE_ID::int32 minimum_sleep_usec() const;
  void set_minimum_sleep_usec(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 mixer_bursts = 3;
  bool has_mixer_bursts() const;
  void clear_mixer_bursts();
  ::PROTOBUF_NAMESPACE_ID::int32 mixer_bursts() const;
  void set_mixer_bursts(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 mmap_exclusive_policy = 4;
  bool has_mmap_exclusive_policy() const;
  void clear_mmap_exclusive_policy();
  ::PROTOBUF_NAMESPACE_ID::int32 mmap_exclusive_policy() const;
  void set_mmap_exclusive_policy(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 mmap_policy = 5;
  bool has_mmap_policy() const;
  void clear_mmap_policy();
  ::PROTOBUF_NAMESPACE_ID::int32 mmap_policy() const;
  void set_mmap_policy(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 wakeup_delay_usec = 6;
  bool has_wakeup_delay_usec() const;
  void clear_wakeup_delay_usec();
  ::PROTOBUF_NAMESPACE_ID::int32 wakeup_delay_usec() const;
  void set_wakeup_delay_usec(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Aaudio)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 hw_burst_min_usec_;
  ::PROTOBUF_NAMESPACE_ID::int32 minimum_sleep_usec_;
  ::PROTOBUF_NAMESPACE_ID::int32 mixer_bursts_;
  ::PROTOBUF_NAMESPACE_ID::int32 mmap_exclusive_policy_;
  ::PROTOBUF_NAMESPACE_ID::int32 mmap_policy_;
  ::PROTOBUF_NAMESPACE_ID::int32 wakeup_delay_usec_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Camera :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Camera) */ {
 public:
  SystemPropertiesProto_Camera();
  virtual ~SystemPropertiesProto_Camera();

  SystemPropertiesProto_Camera(const SystemPropertiesProto_Camera& from);
  SystemPropertiesProto_Camera(SystemPropertiesProto_Camera&& from) noexcept
    : SystemPropertiesProto_Camera() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Camera& operator=(const SystemPropertiesProto_Camera& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Camera& operator=(SystemPropertiesProto_Camera&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Camera& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Camera* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Camera*>(
               &_SystemPropertiesProto_Camera_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SystemPropertiesProto_Camera& a, SystemPropertiesProto_Camera& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Camera* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Camera* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Camera>(nullptr);
  }

  SystemPropertiesProto_Camera* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Camera>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Camera& from);
  void MergeFrom(const SystemPropertiesProto_Camera& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Camera* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Camera";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisableZslModeFieldNumber = 1,
    kFifoDisableFieldNumber = 2,
  };
  // optional bool disable_zsl_mode = 1;
  bool has_disable_zsl_mode() const;
  void clear_disable_zsl_mode();
  bool disable_zsl_mode() const;
  void set_disable_zsl_mode(bool value);

  // optional int32 fifo_disable = 2;
  bool has_fifo_disable() const;
  void clear_fifo_disable();
  ::PROTOBUF_NAMESPACE_ID::int32 fifo_disable() const;
  void set_fifo_disable(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Camera)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool disable_zsl_mode_;
  ::PROTOBUF_NAMESPACE_ID::int32 fifo_disable_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_DalvikVm :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.DalvikVm) */ {
 public:
  SystemPropertiesProto_DalvikVm();
  virtual ~SystemPropertiesProto_DalvikVm();

  SystemPropertiesProto_DalvikVm(const SystemPropertiesProto_DalvikVm& from);
  SystemPropertiesProto_DalvikVm(SystemPropertiesProto_DalvikVm&& from) noexcept
    : SystemPropertiesProto_DalvikVm() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_DalvikVm& operator=(const SystemPropertiesProto_DalvikVm& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_DalvikVm& operator=(SystemPropertiesProto_DalvikVm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_DalvikVm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_DalvikVm* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_DalvikVm*>(
               &_SystemPropertiesProto_DalvikVm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SystemPropertiesProto_DalvikVm& a, SystemPropertiesProto_DalvikVm& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_DalvikVm* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_DalvikVm* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_DalvikVm>(nullptr);
  }

  SystemPropertiesProto_DalvikVm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_DalvikVm>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_DalvikVm& from);
  void MergeFrom(const SystemPropertiesProto_DalvikVm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_DalvikVm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.DalvikVm";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppimageformatFieldNumber = 1,
    kBackgroundgctypeFieldNumber = 2,
    kDex2OatFilterFieldNumber = 4,
    kDex2OatFlagsFieldNumber = 5,
    kDex2OatXmsFieldNumber = 7,
    kDex2OatXmxFieldNumber = 8,
    kExecutionModeFieldNumber = 10,
    kExtraOptsFieldNumber = 11,
    kGctypeFieldNumber = 12,
    kHeapgrowthlimitFieldNumber = 13,
    kHeapmaxfreeFieldNumber = 14,
    kHeapminfreeFieldNumber = 15,
    kHeapsizeFieldNumber = 16,
    kHeapstartsizeFieldNumber = 17,
    kImageDex2OatFilterFieldNumber = 20,
    kImageDex2OatFlagsFieldNumber = 21,
    kImageDex2OatXmsFieldNumber = 23,
    kImageDex2OatXmxFieldNumber = 24,
    kIsaArmFeaturesFieldNumber = 25,
    kIsaArmVariantFieldNumber = 26,
    kIsaArm64FeaturesFieldNumber = 27,
    kIsaArm64VariantFieldNumber = 28,
    kIsaMipsFeaturesFieldNumber = 29,
    kIsaMipsVariantFieldNumber = 30,
    kIsaMips64FeaturesFieldNumber = 31,
    kIsaMips64VariantFieldNumber = 32,
    kIsaUnknownFeaturesFieldNumber = 33,
    kIsaUnknownVariantFieldNumber = 34,
    kIsaX8664FeaturesFieldNumber = 35,
    kIsaX8664VariantFieldNumber = 36,
    kIsaX86FeaturesFieldNumber = 37,
    kIsaX86VariantFieldNumber = 38,
    kJitinitialsizeFieldNumber = 39,
    kJitmaxsizeFieldNumber = 40,
    kJnioptsFieldNumber = 44,
    kMethodTraceFileFieldNumber = 47,
    kStackTraceDirFieldNumber = 51,
    kDex2OatThreadsFieldNumber = 6,
    kHotStartupMethodSamplesFieldNumber = 19,
    kHeaptargetutilizationFieldNumber = 18,
    kImageDex2OatThreadsFieldNumber = 22,
    kCheckjniFieldNumber = 3,
    kDexoptSecondaryFieldNumber = 9,
    kMethodTraceFieldNumber = 46,
    kMethodTraceStreamFieldNumber = 49,
    kJitprithreadweightFieldNumber = 41,
    kJitthresholdFieldNumber = 42,
    kJittransitionweightFieldNumber = 43,
    kLockprofThresholdFieldNumber = 45,
    kMethodTraceFileSizFieldNumber = 48,
    kProfilesystemserverFieldNumber = 50,
    kUsejitFieldNumber = 52,
    kUsejitprofilesFieldNumber = 53,
    kZygoteMaxBootRetryFieldNumber = 54,
  };
  // optional string appimageformat = 1;
  bool has_appimageformat() const;
  void clear_appimageformat();
  const std::string& appimageformat() const;
  void set_appimageformat(const std::string& value);
  void set_appimageformat(std::string&& value);
  void set_appimageformat(const char* value);
  void set_appimageformat(const char* value, size_t size);
  std::string* mutable_appimageformat();
  std::string* release_appimageformat();
  void set_allocated_appimageformat(std::string* appimageformat);

  // optional string backgroundgctype = 2;
  bool has_backgroundgctype() const;
  void clear_backgroundgctype();
  const std::string& backgroundgctype() const;
  void set_backgroundgctype(const std::string& value);
  void set_backgroundgctype(std::string&& value);
  void set_backgroundgctype(const char* value);
  void set_backgroundgctype(const char* value, size_t size);
  std::string* mutable_backgroundgctype();
  std::string* release_backgroundgctype();
  void set_allocated_backgroundgctype(std::string* backgroundgctype);

  // optional string dex2oat_filter = 4;
  bool has_dex2oat_filter() const;
  void clear_dex2oat_filter();
  const std::string& dex2oat_filter() const;
  void set_dex2oat_filter(const std::string& value);
  void set_dex2oat_filter(std::string&& value);
  void set_dex2oat_filter(const char* value);
  void set_dex2oat_filter(const char* value, size_t size);
  std::string* mutable_dex2oat_filter();
  std::string* release_dex2oat_filter();
  void set_allocated_dex2oat_filter(std::string* dex2oat_filter);

  // optional string dex2oat_flags = 5;
  bool has_dex2oat_flags() const;
  void clear_dex2oat_flags();
  const std::string& dex2oat_flags() const;
  void set_dex2oat_flags(const std::string& value);
  void set_dex2oat_flags(std::string&& value);
  void set_dex2oat_flags(const char* value);
  void set_dex2oat_flags(const char* value, size_t size);
  std::string* mutable_dex2oat_flags();
  std::string* release_dex2oat_flags();
  void set_allocated_dex2oat_flags(std::string* dex2oat_flags);

  // optional string dex2oat_Xms = 7;
  bool has_dex2oat_xms() const;
  void clear_dex2oat_xms();
  const std::string& dex2oat_xms() const;
  void set_dex2oat_xms(const std::string& value);
  void set_dex2oat_xms(std::string&& value);
  void set_dex2oat_xms(const char* value);
  void set_dex2oat_xms(const char* value, size_t size);
  std::string* mutable_dex2oat_xms();
  std::string* release_dex2oat_xms();
  void set_allocated_dex2oat_xms(std::string* dex2oat_xms);

  // optional string dex2oat_Xmx = 8;
  bool has_dex2oat_xmx() const;
  void clear_dex2oat_xmx();
  const std::string& dex2oat_xmx() const;
  void set_dex2oat_xmx(const std::string& value);
  void set_dex2oat_xmx(std::string&& value);
  void set_dex2oat_xmx(const char* value);
  void set_dex2oat_xmx(const char* value, size_t size);
  std::string* mutable_dex2oat_xmx();
  std::string* release_dex2oat_xmx();
  void set_allocated_dex2oat_xmx(std::string* dex2oat_xmx);

  // optional string execution_mode = 10;
  bool has_execution_mode() const;
  void clear_execution_mode();
  const std::string& execution_mode() const;
  void set_execution_mode(const std::string& value);
  void set_execution_mode(std::string&& value);
  void set_execution_mode(const char* value);
  void set_execution_mode(const char* value, size_t size);
  std::string* mutable_execution_mode();
  std::string* release_execution_mode();
  void set_allocated_execution_mode(std::string* execution_mode);

  // optional string extra_opts = 11;
  bool has_extra_opts() const;
  void clear_extra_opts();
  const std::string& extra_opts() const;
  void set_extra_opts(const std::string& value);
  void set_extra_opts(std::string&& value);
  void set_extra_opts(const char* value);
  void set_extra_opts(const char* value, size_t size);
  std::string* mutable_extra_opts();
  std::string* release_extra_opts();
  void set_allocated_extra_opts(std::string* extra_opts);

  // optional string gctype = 12;
  bool has_gctype() const;
  void clear_gctype();
  const std::string& gctype() const;
  void set_gctype(const std::string& value);
  void set_gctype(std::string&& value);
  void set_gctype(const char* value);
  void set_gctype(const char* value, size_t size);
  std::string* mutable_gctype();
  std::string* release_gctype();
  void set_allocated_gctype(std::string* gctype);

  // optional string heapgrowthlimit = 13;
  bool has_heapgrowthlimit() const;
  void clear_heapgrowthlimit();
  const std::string& heapgrowthlimit() const;
  void set_heapgrowthlimit(const std::string& value);
  void set_heapgrowthlimit(std::string&& value);
  void set_heapgrowthlimit(const char* value);
  void set_heapgrowthlimit(const char* value, size_t size);
  std::string* mutable_heapgrowthlimit();
  std::string* release_heapgrowthlimit();
  void set_allocated_heapgrowthlimit(std::string* heapgrowthlimit);

  // optional string heapmaxfree = 14;
  bool has_heapmaxfree() const;
  void clear_heapmaxfree();
  const std::string& heapmaxfree() const;
  void set_heapmaxfree(const std::string& value);
  void set_heapmaxfree(std::string&& value);
  void set_heapmaxfree(const char* value);
  void set_heapmaxfree(const char* value, size_t size);
  std::string* mutable_heapmaxfree();
  std::string* release_heapmaxfree();
  void set_allocated_heapmaxfree(std::string* heapmaxfree);

  // optional string heapminfree = 15;
  bool has_heapminfree() const;
  void clear_heapminfree();
  const std::string& heapminfree() const;
  void set_heapminfree(const std::string& value);
  void set_heapminfree(std::string&& value);
  void set_heapminfree(const char* value);
  void set_heapminfree(const char* value, size_t size);
  std::string* mutable_heapminfree();
  std::string* release_heapminfree();
  void set_allocated_heapminfree(std::string* heapminfree);

  // optional string heapsize = 16;
  bool has_heapsize() const;
  void clear_heapsize();
  const std::string& heapsize() const;
  void set_heapsize(const std::string& value);
  void set_heapsize(std::string&& value);
  void set_heapsize(const char* value);
  void set_heapsize(const char* value, size_t size);
  std::string* mutable_heapsize();
  std::string* release_heapsize();
  void set_allocated_heapsize(std::string* heapsize);

  // optional string heapstartsize = 17;
  bool has_heapstartsize() const;
  void clear_heapstartsize();
  const std::string& heapstartsize() const;
  void set_heapstartsize(const std::string& value);
  void set_heapstartsize(std::string&& value);
  void set_heapstartsize(const char* value);
  void set_heapstartsize(const char* value, size_t size);
  std::string* mutable_heapstartsize();
  std::string* release_heapstartsize();
  void set_allocated_heapstartsize(std::string* heapstartsize);

  // optional string image_dex2oat_filter = 20;
  bool has_image_dex2oat_filter() const;
  void clear_image_dex2oat_filter();
  const std::string& image_dex2oat_filter() const;
  void set_image_dex2oat_filter(const std::string& value);
  void set_image_dex2oat_filter(std::string&& value);
  void set_image_dex2oat_filter(const char* value);
  void set_image_dex2oat_filter(const char* value, size_t size);
  std::string* mutable_image_dex2oat_filter();
  std::string* release_image_dex2oat_filter();
  void set_allocated_image_dex2oat_filter(std::string* image_dex2oat_filter);

  // optional string image_dex2oat_flags = 21;
  bool has_image_dex2oat_flags() const;
  void clear_image_dex2oat_flags();
  const std::string& image_dex2oat_flags() const;
  void set_image_dex2oat_flags(const std::string& value);
  void set_image_dex2oat_flags(std::string&& value);
  void set_image_dex2oat_flags(const char* value);
  void set_image_dex2oat_flags(const char* value, size_t size);
  std::string* mutable_image_dex2oat_flags();
  std::string* release_image_dex2oat_flags();
  void set_allocated_image_dex2oat_flags(std::string* image_dex2oat_flags);

  // optional string image_dex2oat_Xms = 23;
  bool has_image_dex2oat_xms() const;
  void clear_image_dex2oat_xms();
  const std::string& image_dex2oat_xms() const;
  void set_image_dex2oat_xms(const std::string& value);
  void set_image_dex2oat_xms(std::string&& value);
  void set_image_dex2oat_xms(const char* value);
  void set_image_dex2oat_xms(const char* value, size_t size);
  std::string* mutable_image_dex2oat_xms();
  std::string* release_image_dex2oat_xms();
  void set_allocated_image_dex2oat_xms(std::string* image_dex2oat_xms);

  // optional string image_dex2oat_Xmx = 24;
  bool has_image_dex2oat_xmx() const;
  void clear_image_dex2oat_xmx();
  const std::string& image_dex2oat_xmx() const;
  void set_image_dex2oat_xmx(const std::string& value);
  void set_image_dex2oat_xmx(std::string&& value);
  void set_image_dex2oat_xmx(const char* value);
  void set_image_dex2oat_xmx(const char* value, size_t size);
  std::string* mutable_image_dex2oat_xmx();
  std::string* release_image_dex2oat_xmx();
  void set_allocated_image_dex2oat_xmx(std::string* image_dex2oat_xmx);

  // optional string isa_arm_features = 25;
  bool has_isa_arm_features() const;
  void clear_isa_arm_features();
  const std::string& isa_arm_features() const;
  void set_isa_arm_features(const std::string& value);
  void set_isa_arm_features(std::string&& value);
  void set_isa_arm_features(const char* value);
  void set_isa_arm_features(const char* value, size_t size);
  std::string* mutable_isa_arm_features();
  std::string* release_isa_arm_features();
  void set_allocated_isa_arm_features(std::string* isa_arm_features);

  // optional string isa_arm_variant = 26;
  bool has_isa_arm_variant() const;
  void clear_isa_arm_variant();
  const std::string& isa_arm_variant() const;
  void set_isa_arm_variant(const std::string& value);
  void set_isa_arm_variant(std::string&& value);
  void set_isa_arm_variant(const char* value);
  void set_isa_arm_variant(const char* value, size_t size);
  std::string* mutable_isa_arm_variant();
  std::string* release_isa_arm_variant();
  void set_allocated_isa_arm_variant(std::string* isa_arm_variant);

  // optional string isa_arm64_features = 27;
  bool has_isa_arm64_features() const;
  void clear_isa_arm64_features();
  const std::string& isa_arm64_features() const;
  void set_isa_arm64_features(const std::string& value);
  void set_isa_arm64_features(std::string&& value);
  void set_isa_arm64_features(const char* value);
  void set_isa_arm64_features(const char* value, size_t size);
  std::string* mutable_isa_arm64_features();
  std::string* release_isa_arm64_features();
  void set_allocated_isa_arm64_features(std::string* isa_arm64_features);

  // optional string isa_arm64_variant = 28;
  bool has_isa_arm64_variant() const;
  void clear_isa_arm64_variant();
  const std::string& isa_arm64_variant() const;
  void set_isa_arm64_variant(const std::string& value);
  void set_isa_arm64_variant(std::string&& value);
  void set_isa_arm64_variant(const char* value);
  void set_isa_arm64_variant(const char* value, size_t size);
  std::string* mutable_isa_arm64_variant();
  std::string* release_isa_arm64_variant();
  void set_allocated_isa_arm64_variant(std::string* isa_arm64_variant);

  // optional string isa_mips_features = 29;
  bool has_isa_mips_features() const;
  void clear_isa_mips_features();
  const std::string& isa_mips_features() const;
  void set_isa_mips_features(const std::string& value);
  void set_isa_mips_features(std::string&& value);
  void set_isa_mips_features(const char* value);
  void set_isa_mips_features(const char* value, size_t size);
  std::string* mutable_isa_mips_features();
  std::string* release_isa_mips_features();
  void set_allocated_isa_mips_features(std::string* isa_mips_features);

  // optional string isa_mips_variant = 30;
  bool has_isa_mips_variant() const;
  void clear_isa_mips_variant();
  const std::string& isa_mips_variant() const;
  void set_isa_mips_variant(const std::string& value);
  void set_isa_mips_variant(std::string&& value);
  void set_isa_mips_variant(const char* value);
  void set_isa_mips_variant(const char* value, size_t size);
  std::string* mutable_isa_mips_variant();
  std::string* release_isa_mips_variant();
  void set_allocated_isa_mips_variant(std::string* isa_mips_variant);

  // optional string isa_mips64_features = 31;
  bool has_isa_mips64_features() const;
  void clear_isa_mips64_features();
  const std::string& isa_mips64_features() const;
  void set_isa_mips64_features(const std::string& value);
  void set_isa_mips64_features(std::string&& value);
  void set_isa_mips64_features(const char* value);
  void set_isa_mips64_features(const char* value, size_t size);
  std::string* mutable_isa_mips64_features();
  std::string* release_isa_mips64_features();
  void set_allocated_isa_mips64_features(std::string* isa_mips64_features);

  // optional string isa_mips64_variant = 32;
  bool has_isa_mips64_variant() const;
  void clear_isa_mips64_variant();
  const std::string& isa_mips64_variant() const;
  void set_isa_mips64_variant(const std::string& value);
  void set_isa_mips64_variant(std::string&& value);
  void set_isa_mips64_variant(const char* value);
  void set_isa_mips64_variant(const char* value, size_t size);
  std::string* mutable_isa_mips64_variant();
  std::string* release_isa_mips64_variant();
  void set_allocated_isa_mips64_variant(std::string* isa_mips64_variant);

  // optional string isa_unknown_features = 33;
  bool has_isa_unknown_features() const;
  void clear_isa_unknown_features();
  const std::string& isa_unknown_features() const;
  void set_isa_unknown_features(const std::string& value);
  void set_isa_unknown_features(std::string&& value);
  void set_isa_unknown_features(const char* value);
  void set_isa_unknown_features(const char* value, size_t size);
  std::string* mutable_isa_unknown_features();
  std::string* release_isa_unknown_features();
  void set_allocated_isa_unknown_features(std::string* isa_unknown_features);

  // optional string isa_unknown_variant = 34;
  bool has_isa_unknown_variant() const;
  void clear_isa_unknown_variant();
  const std::string& isa_unknown_variant() const;
  void set_isa_unknown_variant(const std::string& value);
  void set_isa_unknown_variant(std::string&& value);
  void set_isa_unknown_variant(const char* value);
  void set_isa_unknown_variant(const char* value, size_t size);
  std::string* mutable_isa_unknown_variant();
  std::string* release_isa_unknown_variant();
  void set_allocated_isa_unknown_variant(std::string* isa_unknown_variant);

  // optional string isa_x86_64_features = 35;
  bool has_isa_x86_64_features() const;
  void clear_isa_x86_64_features();
  const std::string& isa_x86_64_features() const;
  void set_isa_x86_64_features(const std::string& value);
  void set_isa_x86_64_features(std::string&& value);
  void set_isa_x86_64_features(const char* value);
  void set_isa_x86_64_features(const char* value, size_t size);
  std::string* mutable_isa_x86_64_features();
  std::string* release_isa_x86_64_features();
  void set_allocated_isa_x86_64_features(std::string* isa_x86_64_features);

  // optional string isa_x86_64_variant = 36;
  bool has_isa_x86_64_variant() const;
  void clear_isa_x86_64_variant();
  const std::string& isa_x86_64_variant() const;
  void set_isa_x86_64_variant(const std::string& value);
  void set_isa_x86_64_variant(std::string&& value);
  void set_isa_x86_64_variant(const char* value);
  void set_isa_x86_64_variant(const char* value, size_t size);
  std::string* mutable_isa_x86_64_variant();
  std::string* release_isa_x86_64_variant();
  void set_allocated_isa_x86_64_variant(std::string* isa_x86_64_variant);

  // optional string isa_x86_features = 37;
  bool has_isa_x86_features() const;
  void clear_isa_x86_features();
  const std::string& isa_x86_features() const;
  void set_isa_x86_features(const std::string& value);
  void set_isa_x86_features(std::string&& value);
  void set_isa_x86_features(const char* value);
  void set_isa_x86_features(const char* value, size_t size);
  std::string* mutable_isa_x86_features();
  std::string* release_isa_x86_features();
  void set_allocated_isa_x86_features(std::string* isa_x86_features);

  // optional string isa_x86_variant = 38;
  bool has_isa_x86_variant() const;
  void clear_isa_x86_variant();
  const std::string& isa_x86_variant() const;
  void set_isa_x86_variant(const std::string& value);
  void set_isa_x86_variant(std::string&& value);
  void set_isa_x86_variant(const char* value);
  void set_isa_x86_variant(const char* value, size_t size);
  std::string* mutable_isa_x86_variant();
  std::string* release_isa_x86_variant();
  void set_allocated_isa_x86_variant(std::string* isa_x86_variant);

  // optional string jitinitialsize = 39;
  bool has_jitinitialsize() const;
  void clear_jitinitialsize();
  const std::string& jitinitialsize() const;
  void set_jitinitialsize(const std::string& value);
  void set_jitinitialsize(std::string&& value);
  void set_jitinitialsize(const char* value);
  void set_jitinitialsize(const char* value, size_t size);
  std::string* mutable_jitinitialsize();
  std::string* release_jitinitialsize();
  void set_allocated_jitinitialsize(std::string* jitinitialsize);

  // optional string jitmaxsize = 40;
  bool has_jitmaxsize() const;
  void clear_jitmaxsize();
  const std::string& jitmaxsize() const;
  void set_jitmaxsize(const std::string& value);
  void set_jitmaxsize(std::string&& value);
  void set_jitmaxsize(const char* value);
  void set_jitmaxsize(const char* value, size_t size);
  std::string* mutable_jitmaxsize();
  std::string* release_jitmaxsize();
  void set_allocated_jitmaxsize(std::string* jitmaxsize);

  // optional string jniopts = 44;
  bool has_jniopts() const;
  void clear_jniopts();
  const std::string& jniopts() const;
  void set_jniopts(const std::string& value);
  void set_jniopts(std::string&& value);
  void set_jniopts(const char* value);
  void set_jniopts(const char* value, size_t size);
  std::string* mutable_jniopts();
  std::string* release_jniopts();
  void set_allocated_jniopts(std::string* jniopts);

  // optional string method_trace_file = 47;
  bool has_method_trace_file() const;
  void clear_method_trace_file();
  const std::string& method_trace_file() const;
  void set_method_trace_file(const std::string& value);
  void set_method_trace_file(std::string&& value);
  void set_method_trace_file(const char* value);
  void set_method_trace_file(const char* value, size_t size);
  std::string* mutable_method_trace_file();
  std::string* release_method_trace_file();
  void set_allocated_method_trace_file(std::string* method_trace_file);

  // optional string stack_trace_dir = 51;
  bool has_stack_trace_dir() const;
  void clear_stack_trace_dir();
  const std::string& stack_trace_dir() const;
  void set_stack_trace_dir(const std::string& value);
  void set_stack_trace_dir(std::string&& value);
  void set_stack_trace_dir(const char* value);
  void set_stack_trace_dir(const char* value, size_t size);
  std::string* mutable_stack_trace_dir();
  std::string* release_stack_trace_dir();
  void set_allocated_stack_trace_dir(std::string* stack_trace_dir);

  // optional int32 dex2oat_threads = 6;
  bool has_dex2oat_threads() const;
  void clear_dex2oat_threads();
  ::PROTOBUF_NAMESPACE_ID::int32 dex2oat_threads() const;
  void set_dex2oat_threads(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 hot_startup_method_samples = 19;
  bool has_hot_startup_method_samples() const;
  void clear_hot_startup_method_samples();
  ::PROTOBUF_NAMESPACE_ID::int32 hot_startup_method_samples() const;
  void set_hot_startup_method_samples(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional double heaptargetutilization = 18;
  bool has_heaptargetutilization() const;
  void clear_heaptargetutilization();
  double heaptargetutilization() const;
  void set_heaptargetutilization(double value);

  // optional int32 image_dex2oat_threads = 22;
  bool has_image_dex2oat_threads() const;
  void clear_image_dex2oat_threads();
  ::PROTOBUF_NAMESPACE_ID::int32 image_dex2oat_threads() const;
  void set_image_dex2oat_threads(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool checkjni = 3;
  bool has_checkjni() const;
  void clear_checkjni();
  bool checkjni() const;
  void set_checkjni(bool value);

  // optional bool dexopt_secondary = 9;
  bool has_dexopt_secondary() const;
  void clear_dexopt_secondary();
  bool dexopt_secondary() const;
  void set_dexopt_secondary(bool value);

  // optional bool method_trace = 46;
  bool has_method_trace() const;
  void clear_method_trace();
  bool method_trace() const;
  void set_method_trace(bool value);

  // optional bool method_trace_stream = 49;
  bool has_method_trace_stream() const;
  void clear_method_trace_stream();
  bool method_trace_stream() const;
  void set_method_trace_stream(bool value);

  // optional int32 jitprithreadweight = 41;
  bool has_jitprithreadweight() const;
  void clear_jitprithreadweight();
  ::PROTOBUF_NAMESPACE_ID::int32 jitprithreadweight() const;
  void set_jitprithreadweight(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 jitthreshold = 42;
  bool has_jitthreshold() const;
  void clear_jitthreshold();
  ::PROTOBUF_NAMESPACE_ID::int32 jitthreshold() const;
  void set_jitthreshold(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 jittransitionweight = 43;
  bool has_jittransitionweight() const;
  void clear_jittransitionweight();
  ::PROTOBUF_NAMESPACE_ID::int32 jittransitionweight() const;
  void set_jittransitionweight(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 lockprof_threshold = 45;
  bool has_lockprof_threshold() const;
  void clear_lockprof_threshold();
  ::PROTOBUF_NAMESPACE_ID::int32 lockprof_threshold() const;
  void set_lockprof_threshold(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 method_trace_file_siz = 48;
  bool has_method_trace_file_siz() const;
  void clear_method_trace_file_siz();
  ::PROTOBUF_NAMESPACE_ID::int32 method_trace_file_siz() const;
  void set_method_trace_file_siz(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool profilesystemserver = 50;
  bool has_profilesystemserver() const;
  void clear_profilesystemserver();
  bool profilesystemserver() const;
  void set_profilesystemserver(bool value);

  // optional bool usejit = 52;
  bool has_usejit() const;
  void clear_usejit();
  bool usejit() const;
  void set_usejit(bool value);

  // optional bool usejitprofiles = 53;
  bool has_usejitprofiles() const;
  void clear_usejitprofiles();
  bool usejitprofiles() const;
  void set_usejitprofiles(bool value);

  // optional int32 zygote_max_boot_retry = 54;
  bool has_zygote_max_boot_retry() const;
  void clear_zygote_max_boot_retry();
  ::PROTOBUF_NAMESPACE_ID::int32 zygote_max_boot_retry() const;
  void set_zygote_max_boot_retry(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.DalvikVm)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr appimageformat_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr backgroundgctype_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dex2oat_filter_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dex2oat_flags_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dex2oat_xms_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dex2oat_xmx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr execution_mode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr extra_opts_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gctype_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heapgrowthlimit_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heapmaxfree_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heapminfree_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heapsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heapstartsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_dex2oat_filter_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_dex2oat_flags_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_dex2oat_xms_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_dex2oat_xmx_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_arm_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_arm_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_arm64_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_arm64_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_mips_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_mips_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_mips64_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_mips64_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_unknown_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_unknown_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_x86_64_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_x86_64_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_x86_features_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr isa_x86_variant_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr jitinitialsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr jitmaxsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr jniopts_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr method_trace_file_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stack_trace_dir_;
  ::PROTOBUF_NAMESPACE_ID::int32 dex2oat_threads_;
  ::PROTOBUF_NAMESPACE_ID::int32 hot_startup_method_samples_;
  double heaptargetutilization_;
  ::PROTOBUF_NAMESPACE_ID::int32 image_dex2oat_threads_;
  bool checkjni_;
  bool dexopt_secondary_;
  bool method_trace_;
  bool method_trace_stream_;
  ::PROTOBUF_NAMESPACE_ID::int32 jitprithreadweight_;
  ::PROTOBUF_NAMESPACE_ID::int32 jitthreshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 jittransitionweight_;
  ::PROTOBUF_NAMESPACE_ID::int32 lockprof_threshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 method_trace_file_siz_;
  bool profilesystemserver_;
  bool usejit_;
  bool usejitprofiles_;
  ::PROTOBUF_NAMESPACE_ID::int32 zygote_max_boot_retry_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_InitSvc :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.InitSvc) */ {
 public:
  SystemPropertiesProto_InitSvc();
  virtual ~SystemPropertiesProto_InitSvc();

  SystemPropertiesProto_InitSvc(const SystemPropertiesProto_InitSvc& from);
  SystemPropertiesProto_InitSvc(SystemPropertiesProto_InitSvc&& from) noexcept
    : SystemPropertiesProto_InitSvc() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_InitSvc& operator=(const SystemPropertiesProto_InitSvc& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_InitSvc& operator=(SystemPropertiesProto_InitSvc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_InitSvc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_InitSvc* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_InitSvc*>(
               &_SystemPropertiesProto_InitSvc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SystemPropertiesProto_InitSvc& a, SystemPropertiesProto_InitSvc& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_InitSvc* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_InitSvc* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_InitSvc>(nullptr);
  }

  SystemPropertiesProto_InitSvc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_InitSvc>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_InitSvc& from);
  void MergeFrom(const SystemPropertiesProto_InitSvc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_InitSvc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.InitSvc";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SystemPropertiesProto_InitSvc_Status Status;
  static constexpr Status STATUS_UNKNOWN =
    SystemPropertiesProto_InitSvc_Status_STATUS_UNKNOWN;
  static constexpr Status STATUS_RUNNING =
    SystemPropertiesProto_InitSvc_Status_STATUS_RUNNING;
  static constexpr Status STATUS_STOPPED =
    SystemPropertiesProto_InitSvc_Status_STATUS_STOPPED;
  static inline bool Status_IsValid(int value) {
    return SystemPropertiesProto_InitSvc_Status_IsValid(value);
  }
  static constexpr Status Status_MIN =
    SystemPropertiesProto_InitSvc_Status_Status_MIN;
  static constexpr Status Status_MAX =
    SystemPropertiesProto_InitSvc_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE =
    SystemPropertiesProto_InitSvc_Status_Status_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Status_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Status>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Status_Name.");
    return SystemPropertiesProto_InitSvc_Status_Name(enum_t_value);
  }
  static inline bool Status_Parse(const std::string& name,
      Status* value) {
    return SystemPropertiesProto_InitSvc_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kAdbdFieldNumber = 1,
    kAudioserverFieldNumber = 2,
    kBootanimFieldNumber = 3,
    kBufferhubdFieldNumber = 4,
    kCameraserverFieldNumber = 5,
    kClearBcbFieldNumber = 6,
    kDrmFieldNumber = 7,
    kGatekeeperdFieldNumber = 8,
    kHealthdFieldNumber = 9,
    kHidlMemoryFieldNumber = 10,
    kHostapdFieldNumber = 11,
    kHwservicemanagerFieldNumber = 12,
    kInstalldFieldNumber = 13,
    kKeystoreFieldNumber = 14,
    kLmkdFieldNumber = 15,
    kLogdFieldNumber = 16,
    kLogdReinitFieldNumber = 17,
    kMediaFieldNumber = 18,
    kMediadrmFieldNumber = 19,
    kMediaextractorFieldNumber = 20,
    kMediametricsFieldNumber = 21,
    kNetdFieldNumber = 22,
    kPerformancedFieldNumber = 23,
    kRilDaemonFieldNumber = 24,
    kServicemanagerFieldNumber = 25,
    kStoragedFieldNumber = 26,
    kSurfaceflingerFieldNumber = 27,
    kThermalserviceFieldNumber = 28,
    kTombstonedFieldNumber = 29,
    kUeventdFieldNumber = 30,
    kUpdateEngineFieldNumber = 31,
    kUpdateVerifierNonencryptedFieldNumber = 32,
    kVirtualTouchpadFieldNumber = 33,
    kVndservicemanagerFieldNumber = 34,
    kVoldFieldNumber = 35,
    kVrHwcFieldNumber = 36,
    kWebviewZygote32FieldNumber = 37,
    kWificondFieldNumber = 38,
    kWpaSupplicantFieldNumber = 39,
    kZygoteFieldNumber = 40,
    kZygoteSecondaryFieldNumber = 41,
  };
  // optional .android.os.SystemPropertiesProto.InitSvc.Status adbd = 1;
  bool has_adbd() const;
  void clear_adbd();
  ::android::os::SystemPropertiesProto_InitSvc_Status adbd() const;
  void set_adbd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status audioserver = 2;
  bool has_audioserver() const;
  void clear_audioserver();
  ::android::os::SystemPropertiesProto_InitSvc_Status audioserver() const;
  void set_audioserver(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status bootanim = 3;
  bool has_bootanim() const;
  void clear_bootanim();
  ::android::os::SystemPropertiesProto_InitSvc_Status bootanim() const;
  void set_bootanim(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status bufferhubd = 4;
  bool has_bufferhubd() const;
  void clear_bufferhubd();
  ::android::os::SystemPropertiesProto_InitSvc_Status bufferhubd() const;
  void set_bufferhubd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status cameraserver = 5;
  bool has_cameraserver() const;
  void clear_cameraserver();
  ::android::os::SystemPropertiesProto_InitSvc_Status cameraserver() const;
  void set_cameraserver(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status clear_bcb = 6;
  bool has_clear_bcb() const;
  void clear_clear_bcb();
  ::android::os::SystemPropertiesProto_InitSvc_Status clear_bcb() const;
  void set_clear_bcb(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status drm = 7;
  bool has_drm() const;
  void clear_drm();
  ::android::os::SystemPropertiesProto_InitSvc_Status drm() const;
  void set_drm(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status gatekeeperd = 8;
  bool has_gatekeeperd() const;
  void clear_gatekeeperd();
  ::android::os::SystemPropertiesProto_InitSvc_Status gatekeeperd() const;
  void set_gatekeeperd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status healthd = 9;
  bool has_healthd() const;
  void clear_healthd();
  ::android::os::SystemPropertiesProto_InitSvc_Status healthd() const;
  void set_healthd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status hidl_memory = 10;
  bool has_hidl_memory() const;
  void clear_hidl_memory();
  ::android::os::SystemPropertiesProto_InitSvc_Status hidl_memory() const;
  void set_hidl_memory(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status hostapd = 11;
  bool has_hostapd() const;
  void clear_hostapd();
  ::android::os::SystemPropertiesProto_InitSvc_Status hostapd() const;
  void set_hostapd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status hwservicemanager = 12;
  bool has_hwservicemanager() const;
  void clear_hwservicemanager();
  ::android::os::SystemPropertiesProto_InitSvc_Status hwservicemanager() const;
  void set_hwservicemanager(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status installd = 13;
  bool has_installd() const;
  void clear_installd();
  ::android::os::SystemPropertiesProto_InitSvc_Status installd() const;
  void set_installd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status keystore = 14;
  bool has_keystore() const;
  void clear_keystore();
  ::android::os::SystemPropertiesProto_InitSvc_Status keystore() const;
  void set_keystore(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status lmkd = 15;
  bool has_lmkd() const;
  void clear_lmkd();
  ::android::os::SystemPropertiesProto_InitSvc_Status lmkd() const;
  void set_lmkd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status logd = 16;
  bool has_logd() const;
  void clear_logd();
  ::android::os::SystemPropertiesProto_InitSvc_Status logd() const;
  void set_logd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status logd_reinit = 17;
  bool has_logd_reinit() const;
  void clear_logd_reinit();
  ::android::os::SystemPropertiesProto_InitSvc_Status logd_reinit() const;
  void set_logd_reinit(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status media = 18;
  bool has_media() const;
  void clear_media();
  ::android::os::SystemPropertiesProto_InitSvc_Status media() const;
  void set_media(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status mediadrm = 19;
  bool has_mediadrm() const;
  void clear_mediadrm();
  ::android::os::SystemPropertiesProto_InitSvc_Status mediadrm() const;
  void set_mediadrm(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status mediaextractor = 20;
  bool has_mediaextractor() const;
  void clear_mediaextractor();
  ::android::os::SystemPropertiesProto_InitSvc_Status mediaextractor() const;
  void set_mediaextractor(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status mediametrics = 21;
  bool has_mediametrics() const;
  void clear_mediametrics();
  ::android::os::SystemPropertiesProto_InitSvc_Status mediametrics() const;
  void set_mediametrics(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status netd = 22;
  bool has_netd() const;
  void clear_netd();
  ::android::os::SystemPropertiesProto_InitSvc_Status netd() const;
  void set_netd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status performanced = 23;
  bool has_performanced() const;
  void clear_performanced();
  ::android::os::SystemPropertiesProto_InitSvc_Status performanced() const;
  void set_performanced(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status ril_daemon = 24;
  bool has_ril_daemon() const;
  void clear_ril_daemon();
  ::android::os::SystemPropertiesProto_InitSvc_Status ril_daemon() const;
  void set_ril_daemon(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status servicemanager = 25;
  bool has_servicemanager() const;
  void clear_servicemanager();
  ::android::os::SystemPropertiesProto_InitSvc_Status servicemanager() const;
  void set_servicemanager(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status storaged = 26;
  bool has_storaged() const;
  void clear_storaged();
  ::android::os::SystemPropertiesProto_InitSvc_Status storaged() const;
  void set_storaged(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status surfaceflinger = 27;
  bool has_surfaceflinger() const;
  void clear_surfaceflinger();
  ::android::os::SystemPropertiesProto_InitSvc_Status surfaceflinger() const;
  void set_surfaceflinger(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status thermalservice = 28;
  bool has_thermalservice() const;
  void clear_thermalservice();
  ::android::os::SystemPropertiesProto_InitSvc_Status thermalservice() const;
  void set_thermalservice(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status tombstoned = 29;
  bool has_tombstoned() const;
  void clear_tombstoned();
  ::android::os::SystemPropertiesProto_InitSvc_Status tombstoned() const;
  void set_tombstoned(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status ueventd = 30;
  bool has_ueventd() const;
  void clear_ueventd();
  ::android::os::SystemPropertiesProto_InitSvc_Status ueventd() const;
  void set_ueventd(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status update_engine = 31;
  bool has_update_engine() const;
  void clear_update_engine();
  ::android::os::SystemPropertiesProto_InitSvc_Status update_engine() const;
  void set_update_engine(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status update_verifier_nonencrypted = 32;
  bool has_update_verifier_nonencrypted() const;
  void clear_update_verifier_nonencrypted();
  ::android::os::SystemPropertiesProto_InitSvc_Status update_verifier_nonencrypted() const;
  void set_update_verifier_nonencrypted(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status virtual_touchpad = 33;
  bool has_virtual_touchpad() const;
  void clear_virtual_touchpad();
  ::android::os::SystemPropertiesProto_InitSvc_Status virtual_touchpad() const;
  void set_virtual_touchpad(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status vndservicemanager = 34;
  bool has_vndservicemanager() const;
  void clear_vndservicemanager();
  ::android::os::SystemPropertiesProto_InitSvc_Status vndservicemanager() const;
  void set_vndservicemanager(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status vold = 35;
  bool has_vold() const;
  void clear_vold();
  ::android::os::SystemPropertiesProto_InitSvc_Status vold() const;
  void set_vold(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status vr_hwc = 36;
  bool has_vr_hwc() const;
  void clear_vr_hwc();
  ::android::os::SystemPropertiesProto_InitSvc_Status vr_hwc() const;
  void set_vr_hwc(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status webview_zygote32 = 37;
  bool has_webview_zygote32() const;
  void clear_webview_zygote32();
  ::android::os::SystemPropertiesProto_InitSvc_Status webview_zygote32() const;
  void set_webview_zygote32(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status wificond = 38;
  bool has_wificond() const;
  void clear_wificond();
  ::android::os::SystemPropertiesProto_InitSvc_Status wificond() const;
  void set_wificond(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status wpa_supplicant = 39;
  bool has_wpa_supplicant() const;
  void clear_wpa_supplicant();
  ::android::os::SystemPropertiesProto_InitSvc_Status wpa_supplicant() const;
  void set_wpa_supplicant(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status zygote = 40;
  bool has_zygote() const;
  void clear_zygote();
  ::android::os::SystemPropertiesProto_InitSvc_Status zygote() const;
  void set_zygote(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // optional .android.os.SystemPropertiesProto.InitSvc.Status zygote_secondary = 41;
  bool has_zygote_secondary() const;
  void clear_zygote_secondary();
  ::android::os::SystemPropertiesProto_InitSvc_Status zygote_secondary() const;
  void set_zygote_secondary(::android::os::SystemPropertiesProto_InitSvc_Status value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.InitSvc)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int adbd_;
  int audioserver_;
  int bootanim_;
  int bufferhubd_;
  int cameraserver_;
  int clear_bcb_;
  int drm_;
  int gatekeeperd_;
  int healthd_;
  int hidl_memory_;
  int hostapd_;
  int hwservicemanager_;
  int installd_;
  int keystore_;
  int lmkd_;
  int logd_;
  int logd_reinit_;
  int media_;
  int mediadrm_;
  int mediaextractor_;
  int mediametrics_;
  int netd_;
  int performanced_;
  int ril_daemon_;
  int servicemanager_;
  int storaged_;
  int surfaceflinger_;
  int thermalservice_;
  int tombstoned_;
  int ueventd_;
  int update_engine_;
  int update_verifier_nonencrypted_;
  int virtual_touchpad_;
  int vndservicemanager_;
  int vold_;
  int vr_hwc_;
  int webview_zygote32_;
  int wificond_;
  int wpa_supplicant_;
  int zygote_;
  int zygote_secondary_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Log :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Log) */ {
 public:
  SystemPropertiesProto_Log();
  virtual ~SystemPropertiesProto_Log();

  SystemPropertiesProto_Log(const SystemPropertiesProto_Log& from);
  SystemPropertiesProto_Log(SystemPropertiesProto_Log&& from) noexcept
    : SystemPropertiesProto_Log() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Log& operator=(const SystemPropertiesProto_Log& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Log& operator=(SystemPropertiesProto_Log&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Log& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Log* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Log*>(
               &_SystemPropertiesProto_Log_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SystemPropertiesProto_Log& a, SystemPropertiesProto_Log& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Log* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Log* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Log>(nullptr);
  }

  SystemPropertiesProto_Log* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Log>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Log& from);
  void MergeFrom(const SystemPropertiesProto_Log& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Log* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Log";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagWifiHalFieldNumber = 1,
    kTagStatsLogFieldNumber = 2,
  };
  // optional string tag_wifi_hal = 1;
  bool has_tag_wifi_hal() const;
  void clear_tag_wifi_hal();
  const std::string& tag_wifi_hal() const;
  void set_tag_wifi_hal(const std::string& value);
  void set_tag_wifi_hal(std::string&& value);
  void set_tag_wifi_hal(const char* value);
  void set_tag_wifi_hal(const char* value, size_t size);
  std::string* mutable_tag_wifi_hal();
  std::string* release_tag_wifi_hal();
  void set_allocated_tag_wifi_hal(std::string* tag_wifi_hal);

  // optional string tag_stats_log = 2;
  bool has_tag_stats_log() const;
  void clear_tag_stats_log();
  const std::string& tag_stats_log() const;
  void set_tag_stats_log(const std::string& value);
  void set_tag_stats_log(std::string&& value);
  void set_tag_stats_log(const char* value);
  void set_tag_stats_log(const char* value, size_t size);
  std::string* mutable_tag_stats_log();
  std::string* release_tag_stats_log();
  void set_allocated_tag_stats_log(std::string* tag_stats_log);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Log)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_wifi_hal_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_stats_log_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Persist :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Persist) */ {
 public:
  SystemPropertiesProto_Persist();
  virtual ~SystemPropertiesProto_Persist();

  SystemPropertiesProto_Persist(const SystemPropertiesProto_Persist& from);
  SystemPropertiesProto_Persist(SystemPropertiesProto_Persist&& from) noexcept
    : SystemPropertiesProto_Persist() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Persist& operator=(const SystemPropertiesProto_Persist& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Persist& operator=(SystemPropertiesProto_Persist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Persist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Persist* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Persist*>(
               &_SystemPropertiesProto_Persist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SystemPropertiesProto_Persist& a, SystemPropertiesProto_Persist& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Persist* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Persist* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Persist>(nullptr);
  }

  SystemPropertiesProto_Persist* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Persist>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Persist& from);
  void MergeFrom(const SystemPropertiesProto_Persist& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Persist* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Persist";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigCalibrationFacFieldNumber = 1,
    kRadioMultisimConfigFieldNumber = 6,
    kSysDalvikVmLib2FieldNumber = 9,
    kSysTimezoneFieldNumber = 11,
    kDbgVolteAvailOvrFieldNumber = 2,
    kDbgVtAvailOvrFieldNumber = 3,
    kDbgWfcAvailOvrFieldNumber = 4,
    kRadioAirplaneModeOnFieldNumber = 5,
    kRcsSupportedFieldNumber = 7,
    kSysCrashRcuFieldNumber = 8,
    kSysSfColorSaturationFieldNumber = 10,
  };
  // optional string config_calibration_fac = 1;
  bool has_config_calibration_fac() const;
  void clear_config_calibration_fac();
  const std::string& config_calibration_fac() const;
  void set_config_calibration_fac(const std::string& value);
  void set_config_calibration_fac(std::string&& value);
  void set_config_calibration_fac(const char* value);
  void set_config_calibration_fac(const char* value, size_t size);
  std::string* mutable_config_calibration_fac();
  std::string* release_config_calibration_fac();
  void set_allocated_config_calibration_fac(std::string* config_calibration_fac);

  // optional string radio_multisim_config = 6;
  bool has_radio_multisim_config() const;
  void clear_radio_multisim_config();
  const std::string& radio_multisim_config() const;
  void set_radio_multisim_config(const std::string& value);
  void set_radio_multisim_config(std::string&& value);
  void set_radio_multisim_config(const char* value);
  void set_radio_multisim_config(const char* value, size_t size);
  std::string* mutable_radio_multisim_config();
  std::string* release_radio_multisim_config();
  void set_allocated_radio_multisim_config(std::string* radio_multisim_config);

  // optional string sys_dalvik_vm_lib_2 = 9;
  bool has_sys_dalvik_vm_lib_2() const;
  void clear_sys_dalvik_vm_lib_2();
  const std::string& sys_dalvik_vm_lib_2() const;
  void set_sys_dalvik_vm_lib_2(const std::string& value);
  void set_sys_dalvik_vm_lib_2(std::string&& value);
  void set_sys_dalvik_vm_lib_2(const char* value);
  void set_sys_dalvik_vm_lib_2(const char* value, size_t size);
  std::string* mutable_sys_dalvik_vm_lib_2();
  std::string* release_sys_dalvik_vm_lib_2();
  void set_allocated_sys_dalvik_vm_lib_2(std::string* sys_dalvik_vm_lib_2);

  // optional string sys_timezone = 11;
  bool has_sys_timezone() const;
  void clear_sys_timezone();
  const std::string& sys_timezone() const;
  void set_sys_timezone(const std::string& value);
  void set_sys_timezone(std::string&& value);
  void set_sys_timezone(const char* value);
  void set_sys_timezone(const char* value, size_t size);
  std::string* mutable_sys_timezone();
  std::string* release_sys_timezone();
  void set_allocated_sys_timezone(std::string* sys_timezone);

  // optional int32 dbg_volte_avail_ovr = 2;
  bool has_dbg_volte_avail_ovr() const;
  void clear_dbg_volte_avail_ovr();
  ::PROTOBUF_NAMESPACE_ID::int32 dbg_volte_avail_ovr() const;
  void set_dbg_volte_avail_ovr(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 dbg_vt_avail_ovr = 3;
  bool has_dbg_vt_avail_ovr() const;
  void clear_dbg_vt_avail_ovr();
  ::PROTOBUF_NAMESPACE_ID::int32 dbg_vt_avail_ovr() const;
  void set_dbg_vt_avail_ovr(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 dbg_wfc_avail_ovr = 4;
  bool has_dbg_wfc_avail_ovr() const;
  void clear_dbg_wfc_avail_ovr();
  ::PROTOBUF_NAMESPACE_ID::int32 dbg_wfc_avail_ovr() const;
  void set_dbg_wfc_avail_ovr(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 radio_airplane_mode_on = 5;
  bool has_radio_airplane_mode_on() const;
  void clear_radio_airplane_mode_on();
  ::PROTOBUF_NAMESPACE_ID::int32 radio_airplane_mode_on() const;
  void set_radio_airplane_mode_on(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 rcs_supported = 7;
  bool has_rcs_supported() const;
  void clear_rcs_supported();
  ::PROTOBUF_NAMESPACE_ID::int32 rcs_supported() const;
  void set_rcs_supported(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool sys_crash_rcu = 8;
  bool has_sys_crash_rcu() const;
  void clear_sys_crash_rcu();
  bool sys_crash_rcu() const;
  void set_sys_crash_rcu(bool value);

  // optional float sys_sf_color_saturation = 10;
  bool has_sys_sf_color_saturation() const;
  void clear_sys_sf_color_saturation();
  float sys_sf_color_saturation() const;
  void set_sys_sf_color_saturation(float value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Persist)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr config_calibration_fac_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr radio_multisim_config_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sys_dalvik_vm_lib_2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sys_timezone_;
  ::PROTOBUF_NAMESPACE_ID::int32 dbg_volte_avail_ovr_;
  ::PROTOBUF_NAMESPACE_ID::int32 dbg_vt_avail_ovr_;
  ::PROTOBUF_NAMESPACE_ID::int32 dbg_wfc_avail_ovr_;
  ::PROTOBUF_NAMESPACE_ID::int32 radio_airplane_mode_on_;
  ::PROTOBUF_NAMESPACE_ID::int32 rcs_supported_;
  bool sys_crash_rcu_;
  float sys_sf_color_saturation_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_PmDexopt :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.PmDexopt) */ {
 public:
  SystemPropertiesProto_PmDexopt();
  virtual ~SystemPropertiesProto_PmDexopt();

  SystemPropertiesProto_PmDexopt(const SystemPropertiesProto_PmDexopt& from);
  SystemPropertiesProto_PmDexopt(SystemPropertiesProto_PmDexopt&& from) noexcept
    : SystemPropertiesProto_PmDexopt() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_PmDexopt& operator=(const SystemPropertiesProto_PmDexopt& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_PmDexopt& operator=(SystemPropertiesProto_PmDexopt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_PmDexopt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_PmDexopt* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_PmDexopt*>(
               &_SystemPropertiesProto_PmDexopt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SystemPropertiesProto_PmDexopt& a, SystemPropertiesProto_PmDexopt& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_PmDexopt* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_PmDexopt* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_PmDexopt>(nullptr);
  }

  SystemPropertiesProto_PmDexopt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_PmDexopt>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_PmDexopt& from);
  void MergeFrom(const SystemPropertiesProto_PmDexopt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_PmDexopt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.PmDexopt";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbOtaFieldNumber = 1,
    kBgDexoptFieldNumber = 2,
    kBootFieldNumber = 3,
    kFirstBootFieldNumber = 4,
    kInstallFieldNumber = 5,
  };
  // optional string ab_ota = 1;
  bool has_ab_ota() const;
  void clear_ab_ota();
  const std::string& ab_ota() const;
  void set_ab_ota(const std::string& value);
  void set_ab_ota(std::string&& value);
  void set_ab_ota(const char* value);
  void set_ab_ota(const char* value, size_t size);
  std::string* mutable_ab_ota();
  std::string* release_ab_ota();
  void set_allocated_ab_ota(std::string* ab_ota);

  // optional string bg_dexopt = 2;
  bool has_bg_dexopt() const;
  void clear_bg_dexopt();
  const std::string& bg_dexopt() const;
  void set_bg_dexopt(const std::string& value);
  void set_bg_dexopt(std::string&& value);
  void set_bg_dexopt(const char* value);
  void set_bg_dexopt(const char* value, size_t size);
  std::string* mutable_bg_dexopt();
  std::string* release_bg_dexopt();
  void set_allocated_bg_dexopt(std::string* bg_dexopt);

  // optional string boot = 3;
  bool has_boot() const;
  void clear_boot();
  const std::string& boot() const;
  void set_boot(const std::string& value);
  void set_boot(std::string&& value);
  void set_boot(const char* value);
  void set_boot(const char* value, size_t size);
  std::string* mutable_boot();
  std::string* release_boot();
  void set_allocated_boot(std::string* boot);

  // optional string first_boot = 4;
  bool has_first_boot() const;
  void clear_first_boot();
  const std::string& first_boot() const;
  void set_first_boot(const std::string& value);
  void set_first_boot(std::string&& value);
  void set_first_boot(const char* value);
  void set_first_boot(const char* value, size_t size);
  std::string* mutable_first_boot();
  std::string* release_first_boot();
  void set_allocated_first_boot(std::string* first_boot);

  // optional string install = 5;
  bool has_install() const;
  void clear_install();
  const std::string& install() const;
  void set_install(const std::string& value);
  void set_install(std::string&& value);
  void set_install(const char* value);
  void set_install(const char* value, size_t size);
  std::string* mutable_install();
  std::string* release_install();
  void set_allocated_install(std::string* install);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.PmDexopt)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ab_ota_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bg_dexopt_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boot_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr first_boot_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr install_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Boot :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Boot) */ {
 public:
  SystemPropertiesProto_Ro_Boot();
  virtual ~SystemPropertiesProto_Ro_Boot();

  SystemPropertiesProto_Ro_Boot(const SystemPropertiesProto_Ro_Boot& from);
  SystemPropertiesProto_Ro_Boot(SystemPropertiesProto_Ro_Boot&& from) noexcept
    : SystemPropertiesProto_Ro_Boot() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Boot& operator=(const SystemPropertiesProto_Ro_Boot& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Boot& operator=(SystemPropertiesProto_Ro_Boot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Boot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Boot* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Boot*>(
               &_SystemPropertiesProto_Ro_Boot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SystemPropertiesProto_Ro_Boot& a, SystemPropertiesProto_Ro_Boot& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Boot* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Boot* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Boot>(nullptr);
  }

  SystemPropertiesProto_Ro_Boot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Boot>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Boot& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Boot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Boot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Boot";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoottimeFieldNumber = 5,
    kAvbVersionFieldNumber = 1,
    kBasebandFieldNumber = 2,
    kBootdeviceFieldNumber = 3,
    kBootloaderFieldNumber = 4,
    kConsoleFieldNumber = 6,
    kHardwareFieldNumber = 8,
    kHardwareColorFieldNumber = 9,
    kHardwareRevisionFieldNumber = 10,
    kHardwareSkuFieldNumber = 11,
    kKeymasterFieldNumber = 12,
    kModeFieldNumber = 13,
    kRevisionFieldNumber = 14,
    kSlotSuffixFieldNumber = 15,
    kVbmetaAvbVersionFieldNumber = 16,
    kVendorOverlayThemeFieldNumber = 17,
    kVerifiedbootstateFieldNumber = 18,
    kVeritymodeFieldNumber = 19,
    kWificountrycodeFieldNumber = 20,
    kFakeBatteryFieldNumber = 7,
  };
  // repeated string boottime = 5;
  int boottime_size() const;
  void clear_boottime();
  const std::string& boottime(int index) const;
  std::string* mutable_boottime(int index);
  void set_boottime(int index, const std::string& value);
  void set_boottime(int index, std::string&& value);
  void set_boottime(int index, const char* value);
  void set_boottime(int index, const char* value, size_t size);
  std::string* add_boottime();
  void add_boottime(const std::string& value);
  void add_boottime(std::string&& value);
  void add_boottime(const char* value);
  void add_boottime(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& boottime() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_boottime();

  // optional string avb_version = 1;
  bool has_avb_version() const;
  void clear_avb_version();
  const std::string& avb_version() const;
  void set_avb_version(const std::string& value);
  void set_avb_version(std::string&& value);
  void set_avb_version(const char* value);
  void set_avb_version(const char* value, size_t size);
  std::string* mutable_avb_version();
  std::string* release_avb_version();
  void set_allocated_avb_version(std::string* avb_version);

  // optional string baseband = 2;
  bool has_baseband() const;
  void clear_baseband();
  const std::string& baseband() const;
  void set_baseband(const std::string& value);
  void set_baseband(std::string&& value);
  void set_baseband(const char* value);
  void set_baseband(const char* value, size_t size);
  std::string* mutable_baseband();
  std::string* release_baseband();
  void set_allocated_baseband(std::string* baseband);

  // optional string bootdevice = 3;
  bool has_bootdevice() const;
  void clear_bootdevice();
  const std::string& bootdevice() const;
  void set_bootdevice(const std::string& value);
  void set_bootdevice(std::string&& value);
  void set_bootdevice(const char* value);
  void set_bootdevice(const char* value, size_t size);
  std::string* mutable_bootdevice();
  std::string* release_bootdevice();
  void set_allocated_bootdevice(std::string* bootdevice);

  // optional string bootloader = 4;
  bool has_bootloader() const;
  void clear_bootloader();
  const std::string& bootloader() const;
  void set_bootloader(const std::string& value);
  void set_bootloader(std::string&& value);
  void set_bootloader(const char* value);
  void set_bootloader(const char* value, size_t size);
  std::string* mutable_bootloader();
  std::string* release_bootloader();
  void set_allocated_bootloader(std::string* bootloader);

  // optional string console = 6;
  bool has_console() const;
  void clear_console();
  const std::string& console() const;
  void set_console(const std::string& value);
  void set_console(std::string&& value);
  void set_console(const char* value);
  void set_console(const char* value, size_t size);
  std::string* mutable_console();
  std::string* release_console();
  void set_allocated_console(std::string* console);

  // optional string hardware = 8;
  bool has_hardware() const;
  void clear_hardware();
  const std::string& hardware() const;
  void set_hardware(const std::string& value);
  void set_hardware(std::string&& value);
  void set_hardware(const char* value);
  void set_hardware(const char* value, size_t size);
  std::string* mutable_hardware();
  std::string* release_hardware();
  void set_allocated_hardware(std::string* hardware);

  // optional string hardware_color = 9;
  bool has_hardware_color() const;
  void clear_hardware_color();
  const std::string& hardware_color() const;
  void set_hardware_color(const std::string& value);
  void set_hardware_color(std::string&& value);
  void set_hardware_color(const char* value);
  void set_hardware_color(const char* value, size_t size);
  std::string* mutable_hardware_color();
  std::string* release_hardware_color();
  void set_allocated_hardware_color(std::string* hardware_color);

  // optional string hardware_revision = 10;
  bool has_hardware_revision() const;
  void clear_hardware_revision();
  const std::string& hardware_revision() const;
  void set_hardware_revision(const std::string& value);
  void set_hardware_revision(std::string&& value);
  void set_hardware_revision(const char* value);
  void set_hardware_revision(const char* value, size_t size);
  std::string* mutable_hardware_revision();
  std::string* release_hardware_revision();
  void set_allocated_hardware_revision(std::string* hardware_revision);

  // optional string hardware_sku = 11;
  bool has_hardware_sku() const;
  void clear_hardware_sku();
  const std::string& hardware_sku() const;
  void set_hardware_sku(const std::string& value);
  void set_hardware_sku(std::string&& value);
  void set_hardware_sku(const char* value);
  void set_hardware_sku(const char* value, size_t size);
  std::string* mutable_hardware_sku();
  std::string* release_hardware_sku();
  void set_allocated_hardware_sku(std::string* hardware_sku);

  // optional string keymaster = 12;
  bool has_keymaster() const;
  void clear_keymaster();
  const std::string& keymaster() const;
  void set_keymaster(const std::string& value);
  void set_keymaster(std::string&& value);
  void set_keymaster(const char* value);
  void set_keymaster(const char* value, size_t size);
  std::string* mutable_keymaster();
  std::string* release_keymaster();
  void set_allocated_keymaster(std::string* keymaster);

  // optional string mode = 13;
  bool has_mode() const;
  void clear_mode();
  const std::string& mode() const;
  void set_mode(const std::string& value);
  void set_mode(std::string&& value);
  void set_mode(const char* value);
  void set_mode(const char* value, size_t size);
  std::string* mutable_mode();
  std::string* release_mode();
  void set_allocated_mode(std::string* mode);

  // optional string revision = 14;
  bool has_revision() const;
  void clear_revision();
  const std::string& revision() const;
  void set_revision(const std::string& value);
  void set_revision(std::string&& value);
  void set_revision(const char* value);
  void set_revision(const char* value, size_t size);
  std::string* mutable_revision();
  std::string* release_revision();
  void set_allocated_revision(std::string* revision);

  // optional string slot_suffix = 15;
  bool has_slot_suffix() const;
  void clear_slot_suffix();
  const std::string& slot_suffix() const;
  void set_slot_suffix(const std::string& value);
  void set_slot_suffix(std::string&& value);
  void set_slot_suffix(const char* value);
  void set_slot_suffix(const char* value, size_t size);
  std::string* mutable_slot_suffix();
  std::string* release_slot_suffix();
  void set_allocated_slot_suffix(std::string* slot_suffix);

  // optional string vbmeta_avb_version = 16;
  bool has_vbmeta_avb_version() const;
  void clear_vbmeta_avb_version();
  const std::string& vbmeta_avb_version() const;
  void set_vbmeta_avb_version(const std::string& value);
  void set_vbmeta_avb_version(std::string&& value);
  void set_vbmeta_avb_version(const char* value);
  void set_vbmeta_avb_version(const char* value, size_t size);
  std::string* mutable_vbmeta_avb_version();
  std::string* release_vbmeta_avb_version();
  void set_allocated_vbmeta_avb_version(std::string* vbmeta_avb_version);

  // optional string vendor_overlay_theme = 17;
  bool has_vendor_overlay_theme() const;
  void clear_vendor_overlay_theme();
  const std::string& vendor_overlay_theme() const;
  void set_vendor_overlay_theme(const std::string& value);
  void set_vendor_overlay_theme(std::string&& value);
  void set_vendor_overlay_theme(const char* value);
  void set_vendor_overlay_theme(const char* value, size_t size);
  std::string* mutable_vendor_overlay_theme();
  std::string* release_vendor_overlay_theme();
  void set_allocated_vendor_overlay_theme(std::string* vendor_overlay_theme);

  // optional string verifiedbootstate = 18;
  bool has_verifiedbootstate() const;
  void clear_verifiedbootstate();
  const std::string& verifiedbootstate() const;
  void set_verifiedbootstate(const std::string& value);
  void set_verifiedbootstate(std::string&& value);
  void set_verifiedbootstate(const char* value);
  void set_verifiedbootstate(const char* value, size_t size);
  std::string* mutable_verifiedbootstate();
  std::string* release_verifiedbootstate();
  void set_allocated_verifiedbootstate(std::string* verifiedbootstate);

  // optional string veritymode = 19;
  bool has_veritymode() const;
  void clear_veritymode();
  const std::string& veritymode() const;
  void set_veritymode(const std::string& value);
  void set_veritymode(std::string&& value);
  void set_veritymode(const char* value);
  void set_veritymode(const char* value, size_t size);
  std::string* mutable_veritymode();
  std::string* release_veritymode();
  void set_allocated_veritymode(std::string* veritymode);

  // optional string wificountrycode = 20;
  bool has_wificountrycode() const;
  void clear_wificountrycode();
  const std::string& wificountrycode() const;
  void set_wificountrycode(const std::string& value);
  void set_wificountrycode(std::string&& value);
  void set_wificountrycode(const char* value);
  void set_wificountrycode(const char* value, size_t size);
  std::string* mutable_wificountrycode();
  std::string* release_wificountrycode();
  void set_allocated_wificountrycode(std::string* wificountrycode);

  // optional int32 fake_battery = 7;
  bool has_fake_battery() const;
  void clear_fake_battery();
  ::PROTOBUF_NAMESPACE_ID::int32 fake_battery() const;
  void set_fake_battery(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Boot)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> boottime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avb_version_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr baseband_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bootdevice_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bootloader_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr console_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hardware_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hardware_color_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hardware_revision_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hardware_sku_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keymaster_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr revision_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr slot_suffix_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vbmeta_avb_version_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vendor_overlay_theme_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr verifiedbootstate_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr veritymode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wificountrycode_;
  ::PROTOBUF_NAMESPACE_ID::int32 fake_battery_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_BootImage :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.BootImage) */ {
 public:
  SystemPropertiesProto_Ro_BootImage();
  virtual ~SystemPropertiesProto_Ro_BootImage();

  SystemPropertiesProto_Ro_BootImage(const SystemPropertiesProto_Ro_BootImage& from);
  SystemPropertiesProto_Ro_BootImage(SystemPropertiesProto_Ro_BootImage&& from) noexcept
    : SystemPropertiesProto_Ro_BootImage() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_BootImage& operator=(const SystemPropertiesProto_Ro_BootImage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_BootImage& operator=(SystemPropertiesProto_Ro_BootImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_BootImage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_BootImage* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_BootImage*>(
               &_SystemPropertiesProto_Ro_BootImage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SystemPropertiesProto_Ro_BootImage& a, SystemPropertiesProto_Ro_BootImage& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_BootImage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_BootImage* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_BootImage>(nullptr);
  }

  SystemPropertiesProto_Ro_BootImage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_BootImage>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_BootImage& from);
  void MergeFrom(const SystemPropertiesProto_Ro_BootImage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_BootImage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.BootImage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuildDateFieldNumber = 1,
    kBuildFingerprintFieldNumber = 3,
    kBuildDateUtcFieldNumber = 2,
  };
  // optional string build_date = 1;
  bool has_build_date() const;
  void clear_build_date();
  const std::string& build_date() const;
  void set_build_date(const std::string& value);
  void set_build_date(std::string&& value);
  void set_build_date(const char* value);
  void set_build_date(const char* value, size_t size);
  std::string* mutable_build_date();
  std::string* release_build_date();
  void set_allocated_build_date(std::string* build_date);

  // optional string build_fingerprint = 3;
  bool has_build_fingerprint() const;
  void clear_build_fingerprint();
  const std::string& build_fingerprint() const;
  void set_build_fingerprint(const std::string& value);
  void set_build_fingerprint(std::string&& value);
  void set_build_fingerprint(const char* value);
  void set_build_fingerprint(const char* value, size_t size);
  std::string* mutable_build_fingerprint();
  std::string* release_build_fingerprint();
  void set_allocated_build_fingerprint(std::string* build_fingerprint);

  // optional int64 build_date_utc = 2;
  bool has_build_date_utc() const;
  void clear_build_date_utc();
  ::PROTOBUF_NAMESPACE_ID::int64 build_date_utc() const;
  void set_build_date_utc(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.BootImage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr build_date_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr build_fingerprint_;
  ::PROTOBUF_NAMESPACE_ID::int64 build_date_utc_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Build_Version :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Build.Version) */ {
 public:
  SystemPropertiesProto_Ro_Build_Version();
  virtual ~SystemPropertiesProto_Ro_Build_Version();

  SystemPropertiesProto_Ro_Build_Version(const SystemPropertiesProto_Ro_Build_Version& from);
  SystemPropertiesProto_Ro_Build_Version(SystemPropertiesProto_Ro_Build_Version&& from) noexcept
    : SystemPropertiesProto_Ro_Build_Version() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Build_Version& operator=(const SystemPropertiesProto_Ro_Build_Version& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Build_Version& operator=(SystemPropertiesProto_Ro_Build_Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Build_Version& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Build_Version* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Build_Version*>(
               &_SystemPropertiesProto_Ro_Build_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SystemPropertiesProto_Ro_Build_Version& a, SystemPropertiesProto_Ro_Build_Version& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Build_Version* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Build_Version* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Build_Version>(nullptr);
  }

  SystemPropertiesProto_Ro_Build_Version* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Build_Version>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Build_Version& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Build_Version& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Build_Version* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Build.Version";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseOsFieldNumber = 1,
    kCodenameFieldNumber = 2,
    kIncrementalFieldNumber = 3,
    kReleaseFieldNumber = 5,
    kSecurityPatchFieldNumber = 7,
    kPreviewSdkFieldNumber = 4,
    kSdkFieldNumber = 6,
  };
  // optional string base_os = 1;
  bool has_base_os() const;
  void clear_base_os();
  const std::string& base_os() const;
  void set_base_os(const std::string& value);
  void set_base_os(std::string&& value);
  void set_base_os(const char* value);
  void set_base_os(const char* value, size_t size);
  std::string* mutable_base_os();
  std::string* release_base_os();
  void set_allocated_base_os(std::string* base_os);

  // optional string codename = 2;
  bool has_codename() const;
  void clear_codename();
  const std::string& codename() const;
  void set_codename(const std::string& value);
  void set_codename(std::string&& value);
  void set_codename(const char* value);
  void set_codename(const char* value, size_t size);
  std::string* mutable_codename();
  std::string* release_codename();
  void set_allocated_codename(std::string* codename);

  // optional string incremental = 3;
  bool has_incremental() const;
  void clear_incremental();
  const std::string& incremental() const;
  void set_incremental(const std::string& value);
  void set_incremental(std::string&& value);
  void set_incremental(const char* value);
  void set_incremental(const char* value, size_t size);
  std::string* mutable_incremental();
  std::string* release_incremental();
  void set_allocated_incremental(std::string* incremental);

  // optional string release = 5;
  bool has_release() const;
  void clear_release();
  const std::string& release() const;
  void set_release(const std::string& value);
  void set_release(std::string&& value);
  void set_release(const char* value);
  void set_release(const char* value, size_t size);
  std::string* mutable_release();
  std::string* release_release();
  void set_allocated_release(std::string* release);

  // optional string security_patch = 7;
  bool has_security_patch() const;
  void clear_security_patch();
  const std::string& security_patch() const;
  void set_security_patch(const std::string& value);
  void set_security_patch(std::string&& value);
  void set_security_patch(const char* value);
  void set_security_patch(const char* value, size_t size);
  std::string* mutable_security_patch();
  std::string* release_security_patch();
  void set_allocated_security_patch(std::string* security_patch);

  // optional int32 preview_sdk = 4;
  bool has_preview_sdk() const;
  void clear_preview_sdk();
  ::PROTOBUF_NAMESPACE_ID::int32 preview_sdk() const;
  void set_preview_sdk(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 sdk = 6;
  bool has_sdk() const;
  void clear_sdk();
  ::PROTOBUF_NAMESPACE_ID::int32 sdk() const;
  void set_sdk(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Build.Version)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr base_os_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr codename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr incremental_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr release_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr security_patch_;
  ::PROTOBUF_NAMESPACE_ID::int32 preview_sdk_;
  ::PROTOBUF_NAMESPACE_ID::int32 sdk_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Build :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Build) */ {
 public:
  SystemPropertiesProto_Ro_Build();
  virtual ~SystemPropertiesProto_Ro_Build();

  SystemPropertiesProto_Ro_Build(const SystemPropertiesProto_Ro_Build& from);
  SystemPropertiesProto_Ro_Build(SystemPropertiesProto_Ro_Build&& from) noexcept
    : SystemPropertiesProto_Ro_Build() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Build& operator=(const SystemPropertiesProto_Ro_Build& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Build& operator=(SystemPropertiesProto_Ro_Build&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Build& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Build* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Build*>(
               &_SystemPropertiesProto_Ro_Build_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SystemPropertiesProto_Ro_Build& a, SystemPropertiesProto_Ro_Build& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Build* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Build* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Build>(nullptr);
  }

  SystemPropertiesProto_Ro_Build* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Build>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Build& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Build& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Build* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Build";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SystemPropertiesProto_Ro_Build_Version Version;

  // accessors -------------------------------------------------------

  enum : int {
    kDateFieldNumber = 1,
    kDescriptionFieldNumber = 3,
    kDisplayIdFieldNumber = 4,
    kHostFieldNumber = 5,
    kIdFieldNumber = 6,
    kProductFieldNumber = 7,
    kTagsFieldNumber = 9,
    kTypeFieldNumber = 10,
    kUserFieldNumber = 11,
    kVersionFieldNumber = 12,
    kDateUtcFieldNumber = 2,
    kSystemRootImageFieldNumber = 8,
  };
  // optional string date = 1;
  bool has_date() const;
  void clear_date();
  const std::string& date() const;
  void set_date(const std::string& value);
  void set_date(std::string&& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  std::string* mutable_date();
  std::string* release_date();
  void set_allocated_date(std::string* date);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // optional string display_id = 4;
  bool has_display_id() const;
  void clear_display_id();
  const std::string& display_id() const;
  void set_display_id(const std::string& value);
  void set_display_id(std::string&& value);
  void set_display_id(const char* value);
  void set_display_id(const char* value, size_t size);
  std::string* mutable_display_id();
  std::string* release_display_id();
  void set_allocated_display_id(std::string* display_id);

  // optional string host = 5;
  bool has_host() const;
  void clear_host();
  const std::string& host() const;
  void set_host(const std::string& value);
  void set_host(std::string&& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  std::string* mutable_host();
  std::string* release_host();
  void set_allocated_host(std::string* host);

  // optional string id = 6;
  bool has_id() const;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);

  // optional string product = 7;
  bool has_product() const;
  void clear_product();
  const std::string& product() const;
  void set_product(const std::string& value);
  void set_product(std::string&& value);
  void set_product(const char* value);
  void set_product(const char* value, size_t size);
  std::string* mutable_product();
  std::string* release_product();
  void set_allocated_product(std::string* product);

  // optional string tags = 9;
  bool has_tags() const;
  void clear_tags();
  const std::string& tags() const;
  void set_tags(const std::string& value);
  void set_tags(std::string&& value);
  void set_tags(const char* value);
  void set_tags(const char* value, size_t size);
  std::string* mutable_tags();
  std::string* release_tags();
  void set_allocated_tags(std::string* tags);

  // optional string type = 10;
  bool has_type() const;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);

  // optional string user = 11;
  bool has_user() const;
  void clear_user();
  const std::string& user() const;
  void set_user(const std::string& value);
  void set_user(std::string&& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  std::string* mutable_user();
  std::string* release_user();
  void set_allocated_user(std::string* user);

  // optional .android.os.SystemPropertiesProto.Ro.Build.Version version = 12;
  bool has_version() const;
  void clear_version();
  const ::android::os::SystemPropertiesProto_Ro_Build_Version& version() const;
  ::android::os::SystemPropertiesProto_Ro_Build_Version* release_version();
  ::android::os::SystemPropertiesProto_Ro_Build_Version* mutable_version();
  void set_allocated_version(::android::os::SystemPropertiesProto_Ro_Build_Version* version);

  // optional int64 date_utc = 2;
  bool has_date_utc() const;
  void clear_date_utc();
  ::PROTOBUF_NAMESPACE_ID::int64 date_utc() const;
  void set_date_utc(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool system_root_image = 8;
  bool has_system_root_image() const;
  void clear_system_root_image();
  bool system_root_image() const;
  void set_system_root_image(bool value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Build)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr date_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr display_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr host_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tags_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_;
  ::android::os::SystemPropertiesProto_Ro_Build_Version* version_;
  ::PROTOBUF_NAMESPACE_ID::int64 date_utc_;
  bool system_root_image_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Config :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Config) */ {
 public:
  SystemPropertiesProto_Ro_Config();
  virtual ~SystemPropertiesProto_Ro_Config();

  SystemPropertiesProto_Ro_Config(const SystemPropertiesProto_Ro_Config& from);
  SystemPropertiesProto_Ro_Config(SystemPropertiesProto_Ro_Config&& from) noexcept
    : SystemPropertiesProto_Ro_Config() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Config& operator=(const SystemPropertiesProto_Ro_Config& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Config& operator=(SystemPropertiesProto_Ro_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Config* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Config*>(
               &_SystemPropertiesProto_Ro_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SystemPropertiesProto_Ro_Config& a, SystemPropertiesProto_Ro_Config& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Config* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Config>(nullptr);
  }

  SystemPropertiesProto_Ro_Config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Config>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Config& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlarmAlertFieldNumber = 1,
    kNotificationSoundFieldNumber = 3,
    kRingtoneFieldNumber = 4,
    kMediaVolStepsFieldNumber = 2,
    kVcCallVolStepsFieldNumber = 5,
  };
  // optional string alarm_alert = 1;
  bool has_alarm_alert() const;
  void clear_alarm_alert();
  const std::string& alarm_alert() const;
  void set_alarm_alert(const std::string& value);
  void set_alarm_alert(std::string&& value);
  void set_alarm_alert(const char* value);
  void set_alarm_alert(const char* value, size_t size);
  std::string* mutable_alarm_alert();
  std::string* release_alarm_alert();
  void set_allocated_alarm_alert(std::string* alarm_alert);

  // optional string notification_sound = 3;
  bool has_notification_sound() const;
  void clear_notification_sound();
  const std::string& notification_sound() const;
  void set_notification_sound(const std::string& value);
  void set_notification_sound(std::string&& value);
  void set_notification_sound(const char* value);
  void set_notification_sound(const char* value, size_t size);
  std::string* mutable_notification_sound();
  std::string* release_notification_sound();
  void set_allocated_notification_sound(std::string* notification_sound);

  // optional string ringtone = 4;
  bool has_ringtone() const;
  void clear_ringtone();
  const std::string& ringtone() const;
  void set_ringtone(const std::string& value);
  void set_ringtone(std::string&& value);
  void set_ringtone(const char* value);
  void set_ringtone(const char* value, size_t size);
  std::string* mutable_ringtone();
  std::string* release_ringtone();
  void set_allocated_ringtone(std::string* ringtone);

  // optional int32 media_vol_steps = 2;
  bool has_media_vol_steps() const;
  void clear_media_vol_steps();
  ::PROTOBUF_NAMESPACE_ID::int32 media_vol_steps() const;
  void set_media_vol_steps(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 vc_call_vol_steps = 5;
  bool has_vc_call_vol_steps() const;
  void clear_vc_call_vol_steps();
  ::PROTOBUF_NAMESPACE_ID::int32 vc_call_vol_steps() const;
  void set_vc_call_vol_steps(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Config)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr alarm_alert_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notification_sound_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ringtone_;
  ::PROTOBUF_NAMESPACE_ID::int32 media_vol_steps_;
  ::PROTOBUF_NAMESPACE_ID::int32 vc_call_vol_steps_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Hardware :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Hardware) */ {
 public:
  SystemPropertiesProto_Ro_Hardware();
  virtual ~SystemPropertiesProto_Ro_Hardware();

  SystemPropertiesProto_Ro_Hardware(const SystemPropertiesProto_Ro_Hardware& from);
  SystemPropertiesProto_Ro_Hardware(SystemPropertiesProto_Ro_Hardware&& from) noexcept
    : SystemPropertiesProto_Ro_Hardware() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Hardware& operator=(const SystemPropertiesProto_Ro_Hardware& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Hardware& operator=(SystemPropertiesProto_Ro_Hardware&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Hardware& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Hardware* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Hardware*>(
               &_SystemPropertiesProto_Ro_Hardware_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SystemPropertiesProto_Ro_Hardware& a, SystemPropertiesProto_Ro_Hardware& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Hardware* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Hardware* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Hardware>(nullptr);
  }

  SystemPropertiesProto_Ro_Hardware* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Hardware>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Hardware& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Hardware& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Hardware* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Hardware";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kActivityRecognitionFieldNumber = 2,
    kAudioFieldNumber = 3,
    kAudioPolicyFieldNumber = 4,
    kAudioA2DpFieldNumber = 5,
    kAudioPrimaryFieldNumber = 6,
    kAudioUsbFieldNumber = 7,
    kBootctrlFieldNumber = 8,
    kCameraFieldNumber = 9,
    kConsumerirFieldNumber = 10,
    kContextHubFieldNumber = 11,
    kEglFieldNumber = 12,
    kFingerprintFieldNumber = 13,
    kFlpFieldNumber = 14,
    kGatekeeperFieldNumber = 15,
    kGpsFieldNumber = 16,
    kGrallocFieldNumber = 17,
    kHdmiCecFieldNumber = 18,
    kHwcomposerFieldNumber = 19,
    kInputFieldNumber = 20,
    kKeystoreFieldNumber = 21,
    kLightsFieldNumber = 22,
    kLocalTimeFieldNumber = 23,
    kMemtrackFieldNumber = 24,
    kNfcFieldNumber = 25,
    kNfcNciFieldNumber = 26,
    kNfcTagFieldNumber = 27,
    kNvramFieldNumber = 28,
    kPowerFieldNumber = 29,
    kRadioFieldNumber = 30,
    kSensorsFieldNumber = 31,
    kSoundTriggerFieldNumber = 32,
    kThermalFieldNumber = 33,
    kTvInputFieldNumber = 34,
    kTypeFieldNumber = 35,
    kVehicleFieldNumber = 36,
    kVibratorFieldNumber = 37,
    kVirtualDeviceFieldNumber = 38,
    kVulkanFieldNumber = 39,
  };
  // optional string value = 1;
  bool has_value() const;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // optional string activity_recognition = 2;
  bool has_activity_recognition() const;
  void clear_activity_recognition();
  const std::string& activity_recognition() const;
  void set_activity_recognition(const std::string& value);
  void set_activity_recognition(std::string&& value);
  void set_activity_recognition(const char* value);
  void set_activity_recognition(const char* value, size_t size);
  std::string* mutable_activity_recognition();
  std::string* release_activity_recognition();
  void set_allocated_activity_recognition(std::string* activity_recognition);

  // optional string audio = 3;
  bool has_audio() const;
  void clear_audio();
  const std::string& audio() const;
  void set_audio(const std::string& value);
  void set_audio(std::string&& value);
  void set_audio(const char* value);
  void set_audio(const char* value, size_t size);
  std::string* mutable_audio();
  std::string* release_audio();
  void set_allocated_audio(std::string* audio);

  // optional string audio_policy = 4;
  bool has_audio_policy() const;
  void clear_audio_policy();
  const std::string& audio_policy() const;
  void set_audio_policy(const std::string& value);
  void set_audio_policy(std::string&& value);
  void set_audio_policy(const char* value);
  void set_audio_policy(const char* value, size_t size);
  std::string* mutable_audio_policy();
  std::string* release_audio_policy();
  void set_allocated_audio_policy(std::string* audio_policy);

  // optional string audio_a2dp = 5;
  bool has_audio_a2dp() const;
  void clear_audio_a2dp();
  const std::string& audio_a2dp() const;
  void set_audio_a2dp(const std::string& value);
  void set_audio_a2dp(std::string&& value);
  void set_audio_a2dp(const char* value);
  void set_audio_a2dp(const char* value, size_t size);
  std::string* mutable_audio_a2dp();
  std::string* release_audio_a2dp();
  void set_allocated_audio_a2dp(std::string* audio_a2dp);

  // optional string audio_primary = 6;
  bool has_audio_primary() const;
  void clear_audio_primary();
  const std::string& audio_primary() const;
  void set_audio_primary(const std::string& value);
  void set_audio_primary(std::string&& value);
  void set_audio_primary(const char* value);
  void set_audio_primary(const char* value, size_t size);
  std::string* mutable_audio_primary();
  std::string* release_audio_primary();
  void set_allocated_audio_primary(std::string* audio_primary);

  // optional string audio_usb = 7;
  bool has_audio_usb() const;
  void clear_audio_usb();
  const std::string& audio_usb() const;
  void set_audio_usb(const std::string& value);
  void set_audio_usb(std::string&& value);
  void set_audio_usb(const char* value);
  void set_audio_usb(const char* value, size_t size);
  std::string* mutable_audio_usb();
  std::string* release_audio_usb();
  void set_allocated_audio_usb(std::string* audio_usb);

  // optional string bootctrl = 8;
  bool has_bootctrl() const;
  void clear_bootctrl();
  const std::string& bootctrl() const;
  void set_bootctrl(const std::string& value);
  void set_bootctrl(std::string&& value);
  void set_bootctrl(const char* value);
  void set_bootctrl(const char* value, size_t size);
  std::string* mutable_bootctrl();
  std::string* release_bootctrl();
  void set_allocated_bootctrl(std::string* bootctrl);

  // optional string camera = 9;
  bool has_camera() const;
  void clear_camera();
  const std::string& camera() const;
  void set_camera(const std::string& value);
  void set_camera(std::string&& value);
  void set_camera(const char* value);
  void set_camera(const char* value, size_t size);
  std::string* mutable_camera();
  std::string* release_camera();
  void set_allocated_camera(std::string* camera);

  // optional string consumerir = 10;
  bool has_consumerir() const;
  void clear_consumerir();
  const std::string& consumerir() const;
  void set_consumerir(const std::string& value);
  void set_consumerir(std::string&& value);
  void set_consumerir(const char* value);
  void set_consumerir(const char* value, size_t size);
  std::string* mutable_consumerir();
  std::string* release_consumerir();
  void set_allocated_consumerir(std::string* consumerir);

  // optional string context_hub = 11;
  bool has_context_hub() const;
  void clear_context_hub();
  const std::string& context_hub() const;
  void set_context_hub(const std::string& value);
  void set_context_hub(std::string&& value);
  void set_context_hub(const char* value);
  void set_context_hub(const char* value, size_t size);
  std::string* mutable_context_hub();
  std::string* release_context_hub();
  void set_allocated_context_hub(std::string* context_hub);

  // optional string egl = 12;
  bool has_egl() const;
  void clear_egl();
  const std::string& egl() const;
  void set_egl(const std::string& value);
  void set_egl(std::string&& value);
  void set_egl(const char* value);
  void set_egl(const char* value, size_t size);
  std::string* mutable_egl();
  std::string* release_egl();
  void set_allocated_egl(std::string* egl);

  // optional string fingerprint = 13;
  bool has_fingerprint() const;
  void clear_fingerprint();
  const std::string& fingerprint() const;
  void set_fingerprint(const std::string& value);
  void set_fingerprint(std::string&& value);
  void set_fingerprint(const char* value);
  void set_fingerprint(const char* value, size_t size);
  std::string* mutable_fingerprint();
  std::string* release_fingerprint();
  void set_allocated_fingerprint(std::string* fingerprint);

  // optional string flp = 14;
  bool has_flp() const;
  void clear_flp();
  const std::string& flp() const;
  void set_flp(const std::string& value);
  void set_flp(std::string&& value);
  void set_flp(const char* value);
  void set_flp(const char* value, size_t size);
  std::string* mutable_flp();
  std::string* release_flp();
  void set_allocated_flp(std::string* flp);

  // optional string gatekeeper = 15;
  bool has_gatekeeper() const;
  void clear_gatekeeper();
  const std::string& gatekeeper() const;
  void set_gatekeeper(const std::string& value);
  void set_gatekeeper(std::string&& value);
  void set_gatekeeper(const char* value);
  void set_gatekeeper(const char* value, size_t size);
  std::string* mutable_gatekeeper();
  std::string* release_gatekeeper();
  void set_allocated_gatekeeper(std::string* gatekeeper);

  // optional string gps = 16;
  bool has_gps() const;
  void clear_gps();
  const std::string& gps() const;
  void set_gps(const std::string& value);
  void set_gps(std::string&& value);
  void set_gps(const char* value);
  void set_gps(const char* value, size_t size);
  std::string* mutable_gps();
  std::string* release_gps();
  void set_allocated_gps(std::string* gps);

  // optional string gralloc = 17;
  bool has_gralloc() const;
  void clear_gralloc();
  const std::string& gralloc() const;
  void set_gralloc(const std::string& value);
  void set_gralloc(std::string&& value);
  void set_gralloc(const char* value);
  void set_gralloc(const char* value, size_t size);
  std::string* mutable_gralloc();
  std::string* release_gralloc();
  void set_allocated_gralloc(std::string* gralloc);

  // optional string hdmi_cec = 18;
  bool has_hdmi_cec() const;
  void clear_hdmi_cec();
  const std::string& hdmi_cec() const;
  void set_hdmi_cec(const std::string& value);
  void set_hdmi_cec(std::string&& value);
  void set_hdmi_cec(const char* value);
  void set_hdmi_cec(const char* value, size_t size);
  std::string* mutable_hdmi_cec();
  std::string* release_hdmi_cec();
  void set_allocated_hdmi_cec(std::string* hdmi_cec);

  // optional string hwcomposer = 19;
  bool has_hwcomposer() const;
  void clear_hwcomposer();
  const std::string& hwcomposer() const;
  void set_hwcomposer(const std::string& value);
  void set_hwcomposer(std::string&& value);
  void set_hwcomposer(const char* value);
  void set_hwcomposer(const char* value, size_t size);
  std::string* mutable_hwcomposer();
  std::string* release_hwcomposer();
  void set_allocated_hwcomposer(std::string* hwcomposer);

  // optional string input = 20;
  bool has_input() const;
  void clear_input();
  const std::string& input() const;
  void set_input(const std::string& value);
  void set_input(std::string&& value);
  void set_input(const char* value);
  void set_input(const char* value, size_t size);
  std::string* mutable_input();
  std::string* release_input();
  void set_allocated_input(std::string* input);

  // optional string keystore = 21;
  bool has_keystore() const;
  void clear_keystore();
  const std::string& keystore() const;
  void set_keystore(const std::string& value);
  void set_keystore(std::string&& value);
  void set_keystore(const char* value);
  void set_keystore(const char* value, size_t size);
  std::string* mutable_keystore();
  std::string* release_keystore();
  void set_allocated_keystore(std::string* keystore);

  // optional string lights = 22;
  bool has_lights() const;
  void clear_lights();
  const std::string& lights() const;
  void set_lights(const std::string& value);
  void set_lights(std::string&& value);
  void set_lights(const char* value);
  void set_lights(const char* value, size_t size);
  std::string* mutable_lights();
  std::string* release_lights();
  void set_allocated_lights(std::string* lights);

  // optional string local_time = 23;
  bool has_local_time() const;
  void clear_local_time();
  const std::string& local_time() const;
  void set_local_time(const std::string& value);
  void set_local_time(std::string&& value);
  void set_local_time(const char* value);
  void set_local_time(const char* value, size_t size);
  std::string* mutable_local_time();
  std::string* release_local_time();
  void set_allocated_local_time(std::string* local_time);

  // optional string memtrack = 24;
  bool has_memtrack() const;
  void clear_memtrack();
  const std::string& memtrack() const;
  void set_memtrack(const std::string& value);
  void set_memtrack(std::string&& value);
  void set_memtrack(const char* value);
  void set_memtrack(const char* value, size_t size);
  std::string* mutable_memtrack();
  std::string* release_memtrack();
  void set_allocated_memtrack(std::string* memtrack);

  // optional string nfc = 25;
  bool has_nfc() const;
  void clear_nfc();
  const std::string& nfc() const;
  void set_nfc(const std::string& value);
  void set_nfc(std::string&& value);
  void set_nfc(const char* value);
  void set_nfc(const char* value, size_t size);
  std::string* mutable_nfc();
  std::string* release_nfc();
  void set_allocated_nfc(std::string* nfc);

  // optional string nfc_nci = 26;
  bool has_nfc_nci() const;
  void clear_nfc_nci();
  const std::string& nfc_nci() const;
  void set_nfc_nci(const std::string& value);
  void set_nfc_nci(std::string&& value);
  void set_nfc_nci(const char* value);
  void set_nfc_nci(const char* value, size_t size);
  std::string* mutable_nfc_nci();
  std::string* release_nfc_nci();
  void set_allocated_nfc_nci(std::string* nfc_nci);

  // optional string nfc_tag = 27;
  bool has_nfc_tag() const;
  void clear_nfc_tag();
  const std::string& nfc_tag() const;
  void set_nfc_tag(const std::string& value);
  void set_nfc_tag(std::string&& value);
  void set_nfc_tag(const char* value);
  void set_nfc_tag(const char* value, size_t size);
  std::string* mutable_nfc_tag();
  std::string* release_nfc_tag();
  void set_allocated_nfc_tag(std::string* nfc_tag);

  // optional string nvram = 28;
  bool has_nvram() const;
  void clear_nvram();
  const std::string& nvram() const;
  void set_nvram(const std::string& value);
  void set_nvram(std::string&& value);
  void set_nvram(const char* value);
  void set_nvram(const char* value, size_t size);
  std::string* mutable_nvram();
  std::string* release_nvram();
  void set_allocated_nvram(std::string* nvram);

  // optional string power = 29;
  bool has_power() const;
  void clear_power();
  const std::string& power() const;
  void set_power(const std::string& value);
  void set_power(std::string&& value);
  void set_power(const char* value);
  void set_power(const char* value, size_t size);
  std::string* mutable_power();
  std::string* release_power();
  void set_allocated_power(std::string* power);

  // optional string radio = 30;
  bool has_radio() const;
  void clear_radio();
  const std::string& radio() const;
  void set_radio(const std::string& value);
  void set_radio(std::string&& value);
  void set_radio(const char* value);
  void set_radio(const char* value, size_t size);
  std::string* mutable_radio();
  std::string* release_radio();
  void set_allocated_radio(std::string* radio);

  // optional string sensors = 31;
  bool has_sensors() const;
  void clear_sensors();
  const std::string& sensors() const;
  void set_sensors(const std::string& value);
  void set_sensors(std::string&& value);
  void set_sensors(const char* value);
  void set_sensors(const char* value, size_t size);
  std::string* mutable_sensors();
  std::string* release_sensors();
  void set_allocated_sensors(std::string* sensors);

  // optional string sound_trigger = 32;
  bool has_sound_trigger() const;
  void clear_sound_trigger();
  const std::string& sound_trigger() const;
  void set_sound_trigger(const std::string& value);
  void set_sound_trigger(std::string&& value);
  void set_sound_trigger(const char* value);
  void set_sound_trigger(const char* value, size_t size);
  std::string* mutable_sound_trigger();
  std::string* release_sound_trigger();
  void set_allocated_sound_trigger(std::string* sound_trigger);

  // optional string thermal = 33;
  bool has_thermal() const;
  void clear_thermal();
  const std::string& thermal() const;
  void set_thermal(const std::string& value);
  void set_thermal(std::string&& value);
  void set_thermal(const char* value);
  void set_thermal(const char* value, size_t size);
  std::string* mutable_thermal();
  std::string* release_thermal();
  void set_allocated_thermal(std::string* thermal);

  // optional string tv_input = 34;
  bool has_tv_input() const;
  void clear_tv_input();
  const std::string& tv_input() const;
  void set_tv_input(const std::string& value);
  void set_tv_input(std::string&& value);
  void set_tv_input(const char* value);
  void set_tv_input(const char* value, size_t size);
  std::string* mutable_tv_input();
  std::string* release_tv_input();
  void set_allocated_tv_input(std::string* tv_input);

  // optional string type = 35;
  bool has_type() const;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);

  // optional string vehicle = 36;
  bool has_vehicle() const;
  void clear_vehicle();
  const std::string& vehicle() const;
  void set_vehicle(const std::string& value);
  void set_vehicle(std::string&& value);
  void set_vehicle(const char* value);
  void set_vehicle(const char* value, size_t size);
  std::string* mutable_vehicle();
  std::string* release_vehicle();
  void set_allocated_vehicle(std::string* vehicle);

  // optional string vibrator = 37;
  bool has_vibrator() const;
  void clear_vibrator();
  const std::string& vibrator() const;
  void set_vibrator(const std::string& value);
  void set_vibrator(std::string&& value);
  void set_vibrator(const char* value);
  void set_vibrator(const char* value, size_t size);
  std::string* mutable_vibrator();
  std::string* release_vibrator();
  void set_allocated_vibrator(std::string* vibrator);

  // optional string virtual_device = 38;
  bool has_virtual_device() const;
  void clear_virtual_device();
  const std::string& virtual_device() const;
  void set_virtual_device(const std::string& value);
  void set_virtual_device(std::string&& value);
  void set_virtual_device(const char* value);
  void set_virtual_device(const char* value, size_t size);
  std::string* mutable_virtual_device();
  std::string* release_virtual_device();
  void set_allocated_virtual_device(std::string* virtual_device);

  // optional string vulkan = 39;
  bool has_vulkan() const;
  void clear_vulkan();
  const std::string& vulkan() const;
  void set_vulkan(const std::string& value);
  void set_vulkan(std::string&& value);
  void set_vulkan(const char* value);
  void set_vulkan(const char* value, size_t size);
  std::string* mutable_vulkan();
  std::string* release_vulkan();
  void set_allocated_vulkan(std::string* vulkan);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Hardware)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr activity_recognition_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_policy_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_a2dp_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_primary_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr audio_usb_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bootctrl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr camera_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr consumerir_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr context_hub_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr egl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fingerprint_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr flp_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gatekeeper_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gps_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gralloc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hdmi_cec_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hwcomposer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr input_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keystore_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lights_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr local_time_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr memtrack_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nfc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nfc_nci_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nfc_tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nvram_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr power_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr radio_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sensors_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sound_trigger_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thermal_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tv_input_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vehicle_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vibrator_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr virtual_device_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vulkan_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Product_Vendor :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Product.Vendor) */ {
 public:
  SystemPropertiesProto_Ro_Product_Vendor();
  virtual ~SystemPropertiesProto_Ro_Product_Vendor();

  SystemPropertiesProto_Ro_Product_Vendor(const SystemPropertiesProto_Ro_Product_Vendor& from);
  SystemPropertiesProto_Ro_Product_Vendor(SystemPropertiesProto_Ro_Product_Vendor&& from) noexcept
    : SystemPropertiesProto_Ro_Product_Vendor() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Product_Vendor& operator=(const SystemPropertiesProto_Ro_Product_Vendor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Product_Vendor& operator=(SystemPropertiesProto_Ro_Product_Vendor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Product_Vendor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Product_Vendor* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Product_Vendor*>(
               &_SystemPropertiesProto_Ro_Product_Vendor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SystemPropertiesProto_Ro_Product_Vendor& a, SystemPropertiesProto_Ro_Product_Vendor& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Product_Vendor* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Product_Vendor* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Product_Vendor>(nullptr);
  }

  SystemPropertiesProto_Ro_Product_Vendor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Product_Vendor>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Product_Vendor& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Product_Vendor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Product_Vendor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Product.Vendor";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBrandFieldNumber = 1,
    kDeviceFieldNumber = 2,
    kManufacturerFieldNumber = 3,
    kModelFieldNumber = 4,
    kNameFieldNumber = 5,
  };
  // optional string brand = 1;
  bool has_brand() const;
  void clear_brand();
  const std::string& brand() const;
  void set_brand(const std::string& value);
  void set_brand(std::string&& value);
  void set_brand(const char* value);
  void set_brand(const char* value, size_t size);
  std::string* mutable_brand();
  std::string* release_brand();
  void set_allocated_brand(std::string* brand);

  // optional string device = 2;
  bool has_device() const;
  void clear_device();
  const std::string& device() const;
  void set_device(const std::string& value);
  void set_device(std::string&& value);
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  std::string* mutable_device();
  std::string* release_device();
  void set_allocated_device(std::string* device);

  // optional string manufacturer = 3;
  bool has_manufacturer() const;
  void clear_manufacturer();
  const std::string& manufacturer() const;
  void set_manufacturer(const std::string& value);
  void set_manufacturer(std::string&& value);
  void set_manufacturer(const char* value);
  void set_manufacturer(const char* value, size_t size);
  std::string* mutable_manufacturer();
  std::string* release_manufacturer();
  void set_allocated_manufacturer(std::string* manufacturer);

  // optional string model = 4;
  bool has_model() const;
  void clear_model();
  const std::string& model() const;
  void set_model(const std::string& value);
  void set_model(std::string&& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  std::string* mutable_model();
  std::string* release_model();
  void set_allocated_model(std::string* model);

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Product.Vendor)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr brand_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr manufacturer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Product :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Product) */ {
 public:
  SystemPropertiesProto_Ro_Product();
  virtual ~SystemPropertiesProto_Ro_Product();

  SystemPropertiesProto_Ro_Product(const SystemPropertiesProto_Ro_Product& from);
  SystemPropertiesProto_Ro_Product(SystemPropertiesProto_Ro_Product&& from) noexcept
    : SystemPropertiesProto_Ro_Product() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Product& operator=(const SystemPropertiesProto_Ro_Product& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Product& operator=(SystemPropertiesProto_Ro_Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Product& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Product* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Product*>(
               &_SystemPropertiesProto_Ro_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(SystemPropertiesProto_Ro_Product& a, SystemPropertiesProto_Ro_Product& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Product* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Product* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Product>(nullptr);
  }

  SystemPropertiesProto_Ro_Product* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Product>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Product& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Product& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Product* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Product";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SystemPropertiesProto_Ro_Product_Vendor Vendor;

  // accessors -------------------------------------------------------

  enum : int {
    kCpuAbilistFieldNumber = 4,
    kCpuAbilist32FieldNumber = 5,
    kCpuAbilist64FieldNumber = 6,
    kBoardFieldNumber = 1,
    kBrandFieldNumber = 2,
    kCpuAbiFieldNumber = 3,
    kDeviceFieldNumber = 7,
    kManufacturerFieldNumber = 9,
    kModelFieldNumber = 10,
    kNameFieldNumber = 11,
    kVendorFieldNumber = 12,
    kFirstApiLevelFieldNumber = 8,
  };
  // repeated string cpu_abilist = 4;
  int cpu_abilist_size() const;
  void clear_cpu_abilist();
  const std::string& cpu_abilist(int index) const;
  std::string* mutable_cpu_abilist(int index);
  void set_cpu_abilist(int index, const std::string& value);
  void set_cpu_abilist(int index, std::string&& value);
  void set_cpu_abilist(int index, const char* value);
  void set_cpu_abilist(int index, const char* value, size_t size);
  std::string* add_cpu_abilist();
  void add_cpu_abilist(const std::string& value);
  void add_cpu_abilist(std::string&& value);
  void add_cpu_abilist(const char* value);
  void add_cpu_abilist(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cpu_abilist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cpu_abilist();

  // repeated string cpu_abilist32 = 5;
  int cpu_abilist32_size() const;
  void clear_cpu_abilist32();
  const std::string& cpu_abilist32(int index) const;
  std::string* mutable_cpu_abilist32(int index);
  void set_cpu_abilist32(int index, const std::string& value);
  void set_cpu_abilist32(int index, std::string&& value);
  void set_cpu_abilist32(int index, const char* value);
  void set_cpu_abilist32(int index, const char* value, size_t size);
  std::string* add_cpu_abilist32();
  void add_cpu_abilist32(const std::string& value);
  void add_cpu_abilist32(std::string&& value);
  void add_cpu_abilist32(const char* value);
  void add_cpu_abilist32(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cpu_abilist32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cpu_abilist32();

  // repeated string cpu_abilist64 = 6;
  int cpu_abilist64_size() const;
  void clear_cpu_abilist64();
  const std::string& cpu_abilist64(int index) const;
  std::string* mutable_cpu_abilist64(int index);
  void set_cpu_abilist64(int index, const std::string& value);
  void set_cpu_abilist64(int index, std::string&& value);
  void set_cpu_abilist64(int index, const char* value);
  void set_cpu_abilist64(int index, const char* value, size_t size);
  std::string* add_cpu_abilist64();
  void add_cpu_abilist64(const std::string& value);
  void add_cpu_abilist64(std::string&& value);
  void add_cpu_abilist64(const char* value);
  void add_cpu_abilist64(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cpu_abilist64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cpu_abilist64();

  // optional string board = 1;
  bool has_board() const;
  void clear_board();
  const std::string& board() const;
  void set_board(const std::string& value);
  void set_board(std::string&& value);
  void set_board(const char* value);
  void set_board(const char* value, size_t size);
  std::string* mutable_board();
  std::string* release_board();
  void set_allocated_board(std::string* board);

  // optional string brand = 2;
  bool has_brand() const;
  void clear_brand();
  const std::string& brand() const;
  void set_brand(const std::string& value);
  void set_brand(std::string&& value);
  void set_brand(const char* value);
  void set_brand(const char* value, size_t size);
  std::string* mutable_brand();
  std::string* release_brand();
  void set_allocated_brand(std::string* brand);

  // optional string cpu_abi = 3;
  bool has_cpu_abi() const;
  void clear_cpu_abi();
  const std::string& cpu_abi() const;
  void set_cpu_abi(const std::string& value);
  void set_cpu_abi(std::string&& value);
  void set_cpu_abi(const char* value);
  void set_cpu_abi(const char* value, size_t size);
  std::string* mutable_cpu_abi();
  std::string* release_cpu_abi();
  void set_allocated_cpu_abi(std::string* cpu_abi);

  // optional string device = 7;
  bool has_device() const;
  void clear_device();
  const std::string& device() const;
  void set_device(const std::string& value);
  void set_device(std::string&& value);
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  std::string* mutable_device();
  std::string* release_device();
  void set_allocated_device(std::string* device);

  // optional string manufacturer = 9;
  bool has_manufacturer() const;
  void clear_manufacturer();
  const std::string& manufacturer() const;
  void set_manufacturer(const std::string& value);
  void set_manufacturer(std::string&& value);
  void set_manufacturer(const char* value);
  void set_manufacturer(const char* value, size_t size);
  std::string* mutable_manufacturer();
  std::string* release_manufacturer();
  void set_allocated_manufacturer(std::string* manufacturer);

  // optional string model = 10;
  bool has_model() const;
  void clear_model();
  const std::string& model() const;
  void set_model(const std::string& value);
  void set_model(std::string&& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  std::string* mutable_model();
  std::string* release_model();
  void set_allocated_model(std::string* model);

  // optional string name = 11;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional .android.os.SystemPropertiesProto.Ro.Product.Vendor vendor = 12;
  bool has_vendor() const;
  void clear_vendor();
  const ::android::os::SystemPropertiesProto_Ro_Product_Vendor& vendor() const;
  ::android::os::SystemPropertiesProto_Ro_Product_Vendor* release_vendor();
  ::android::os::SystemPropertiesProto_Ro_Product_Vendor* mutable_vendor();
  void set_allocated_vendor(::android::os::SystemPropertiesProto_Ro_Product_Vendor* vendor);

  // optional int32 first_api_level = 8;
  bool has_first_api_level() const;
  void clear_first_api_level();
  ::PROTOBUF_NAMESPACE_ID::int32 first_api_level() const;
  void set_first_api_level(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Product)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cpu_abilist_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cpu_abilist32_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cpu_abilist64_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr board_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr brand_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cpu_abi_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr manufacturer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::android::os::SystemPropertiesProto_Ro_Product_Vendor* vendor_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_api_level_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Telephony :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Telephony) */ {
 public:
  SystemPropertiesProto_Ro_Telephony();
  virtual ~SystemPropertiesProto_Ro_Telephony();

  SystemPropertiesProto_Ro_Telephony(const SystemPropertiesProto_Ro_Telephony& from);
  SystemPropertiesProto_Ro_Telephony(SystemPropertiesProto_Ro_Telephony&& from) noexcept
    : SystemPropertiesProto_Ro_Telephony() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Telephony& operator=(const SystemPropertiesProto_Ro_Telephony& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Telephony& operator=(SystemPropertiesProto_Ro_Telephony&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Telephony& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Telephony* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Telephony*>(
               &_SystemPropertiesProto_Ro_Telephony_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(SystemPropertiesProto_Ro_Telephony& a, SystemPropertiesProto_Ro_Telephony& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Telephony* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Telephony* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Telephony>(nullptr);
  }

  SystemPropertiesProto_Ro_Telephony* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Telephony>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Telephony& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Telephony& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Telephony* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Telephony";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallRingMultipleFieldNumber = 1,
    kDefaultCdmaSubFieldNumber = 2,
    kDefaultNetworkFieldNumber = 3,
  };
  // optional bool call_ring_multiple = 1;
  bool has_call_ring_multiple() const;
  void clear_call_ring_multiple();
  bool call_ring_multiple() const;
  void set_call_ring_multiple(bool value);

  // optional int32 default_cdma_sub = 2;
  bool has_default_cdma_sub() const;
  void clear_default_cdma_sub();
  ::PROTOBUF_NAMESPACE_ID::int32 default_cdma_sub() const;
  void set_default_cdma_sub(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 default_network = 3;
  bool has_default_network() const;
  void clear_default_network();
  ::PROTOBUF_NAMESPACE_ID::int32 default_network() const;
  void set_default_network(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Telephony)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool call_ring_multiple_;
  ::PROTOBUF_NAMESPACE_ID::int32 default_cdma_sub_;
  ::PROTOBUF_NAMESPACE_ID::int32 default_network_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro_Vendor :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro.Vendor) */ {
 public:
  SystemPropertiesProto_Ro_Vendor();
  virtual ~SystemPropertiesProto_Ro_Vendor();

  SystemPropertiesProto_Ro_Vendor(const SystemPropertiesProto_Ro_Vendor& from);
  SystemPropertiesProto_Ro_Vendor(SystemPropertiesProto_Ro_Vendor&& from) noexcept
    : SystemPropertiesProto_Ro_Vendor() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro_Vendor& operator=(const SystemPropertiesProto_Ro_Vendor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro_Vendor& operator=(SystemPropertiesProto_Ro_Vendor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro_Vendor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro_Vendor* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro_Vendor*>(
               &_SystemPropertiesProto_Ro_Vendor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(SystemPropertiesProto_Ro_Vendor& a, SystemPropertiesProto_Ro_Vendor& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro_Vendor* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro_Vendor* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Vendor>(nullptr);
  }

  SystemPropertiesProto_Ro_Vendor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro_Vendor>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro_Vendor& from);
  void MergeFrom(const SystemPropertiesProto_Ro_Vendor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro_Vendor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro.Vendor";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuildDateFieldNumber = 1,
    kBuildFingerprintFieldNumber = 3,
    kBuildDateUtcFieldNumber = 2,
  };
  // optional string build_date = 1;
  bool has_build_date() const;
  void clear_build_date();
  const std::string& build_date() const;
  void set_build_date(const std::string& value);
  void set_build_date(std::string&& value);
  void set_build_date(const char* value);
  void set_build_date(const char* value, size_t size);
  std::string* mutable_build_date();
  std::string* release_build_date();
  void set_allocated_build_date(std::string* build_date);

  // optional string build_fingerprint = 3;
  bool has_build_fingerprint() const;
  void clear_build_fingerprint();
  const std::string& build_fingerprint() const;
  void set_build_fingerprint(const std::string& value);
  void set_build_fingerprint(std::string&& value);
  void set_build_fingerprint(const char* value);
  void set_build_fingerprint(const char* value, size_t size);
  std::string* mutable_build_fingerprint();
  std::string* release_build_fingerprint();
  void set_allocated_build_fingerprint(std::string* build_fingerprint);

  // optional int64 build_date_utc = 2;
  bool has_build_date_utc() const;
  void clear_build_date_utc();
  ::PROTOBUF_NAMESPACE_ID::int64 build_date_utc() const;
  void set_build_date_utc(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro.Vendor)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr build_date_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr build_fingerprint_;
  ::PROTOBUF_NAMESPACE_ID::int64 build_date_utc_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Ro :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Ro) */ {
 public:
  SystemPropertiesProto_Ro();
  virtual ~SystemPropertiesProto_Ro();

  SystemPropertiesProto_Ro(const SystemPropertiesProto_Ro& from);
  SystemPropertiesProto_Ro(SystemPropertiesProto_Ro&& from) noexcept
    : SystemPropertiesProto_Ro() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Ro& operator=(const SystemPropertiesProto_Ro& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Ro& operator=(SystemPropertiesProto_Ro&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Ro& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Ro* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Ro*>(
               &_SystemPropertiesProto_Ro_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(SystemPropertiesProto_Ro& a, SystemPropertiesProto_Ro& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Ro* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Ro* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro>(nullptr);
  }

  SystemPropertiesProto_Ro* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Ro>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Ro& from);
  void MergeFrom(const SystemPropertiesProto_Ro& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Ro* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Ro";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SystemPropertiesProto_Ro_Boot Boot;
  typedef SystemPropertiesProto_Ro_BootImage BootImage;
  typedef SystemPropertiesProto_Ro_Build Build;
  typedef SystemPropertiesProto_Ro_Config Config;
  typedef SystemPropertiesProto_Ro_Hardware Hardware;
  typedef SystemPropertiesProto_Ro_Product Product;
  typedef SystemPropertiesProto_Ro_Telephony Telephony;
  typedef SystemPropertiesProto_Ro_Vendor Vendor;

  // accessors -------------------------------------------------------

  enum : int {
    kArchFieldNumber = 2,
    kBasebandFieldNumber = 5,
    kBoardPlatformFieldNumber = 6,
    kBootloaderFieldNumber = 9,
    kBootmodeFieldNumber = 10,
    kCarrierFieldNumber = 13,
    kComGoogleClientidbaseFieldNumber = 16,
    kControlPrivappPermissionsFieldNumber = 18,
    kCryptoScryptParamsFieldNumber = 20,
    kCryptoStateFieldNumber = 21,
    kCryptoTypeFieldNumber = 22,
    kDalvikVmNativeBridgeFieldNumber = 23,
    kFrpPstFieldNumber = 25,
    kGfxDriver0FieldNumber = 26,
    kRevisionFieldNumber = 35,
    kVndkVersionFieldNumber = 42,
    kZygoteFieldNumber = 44,
    kGfxDriverWhitelist0FieldNumber = 45,
    kBootFieldNumber = 7,
    kBootimageFieldNumber = 8,
    kBuildFieldNumber = 11,
    kConfigFieldNumber = 17,
    kHardwareFieldNumber = 27,
    kProductFieldNumber = 32,
    kTelephonyFieldNumber = 38,
    kVendorFieldNumber = 41,
    kAdbSecureFieldNumber = 1,
    kAudioIgnoreEffectsFieldNumber = 3,
    kAudioMonitorRotationFieldNumber = 4,
    kCameraNotifyNfcFieldNumber = 12,
    kCpSystemOtherOdexFieldNumber = 19,
    kComAndroidDataroamingFieldNumber = 14,
    kComAndroidProvMobiledataFieldNumber = 15,
    kDebuggableFieldNumber = 24,
    kStorageManagerEnabledFieldNumber = 37,
    kKernelQemuFieldNumber = 28,
    kKernelQemuGlesFieldNumber = 29,
    kOemUnlockSupportedFieldNumber = 30,
    kOpenglesVersionFieldNumber = 31,
    kPropertyServiceVersionFieldNumber = 33,
    kSfLcdDensityFieldNumber = 36,
    kVtsCoverageFieldNumber = 43,
  };
  // optional string arch = 2;
  bool has_arch() const;
  void clear_arch();
  const std::string& arch() const;
  void set_arch(const std::string& value);
  void set_arch(std::string&& value);
  void set_arch(const char* value);
  void set_arch(const char* value, size_t size);
  std::string* mutable_arch();
  std::string* release_arch();
  void set_allocated_arch(std::string* arch);

  // optional string baseband = 5;
  bool has_baseband() const;
  void clear_baseband();
  const std::string& baseband() const;
  void set_baseband(const std::string& value);
  void set_baseband(std::string&& value);
  void set_baseband(const char* value);
  void set_baseband(const char* value, size_t size);
  std::string* mutable_baseband();
  std::string* release_baseband();
  void set_allocated_baseband(std::string* baseband);

  // optional string board_platform = 6;
  bool has_board_platform() const;
  void clear_board_platform();
  const std::string& board_platform() const;
  void set_board_platform(const std::string& value);
  void set_board_platform(std::string&& value);
  void set_board_platform(const char* value);
  void set_board_platform(const char* value, size_t size);
  std::string* mutable_board_platform();
  std::string* release_board_platform();
  void set_allocated_board_platform(std::string* board_platform);

  // optional string bootloader = 9 [(.android.privacy) = {
  bool has_bootloader() const;
  void clear_bootloader();
  const std::string& bootloader() const;
  void set_bootloader(const std::string& value);
  void set_bootloader(std::string&& value);
  void set_bootloader(const char* value);
  void set_bootloader(const char* value, size_t size);
  std::string* mutable_bootloader();
  std::string* release_bootloader();
  void set_allocated_bootloader(std::string* bootloader);

  // optional string bootmode = 10 [(.android.privacy) = {
  bool has_bootmode() const;
  void clear_bootmode();
  const std::string& bootmode() const;
  void set_bootmode(const std::string& value);
  void set_bootmode(std::string&& value);
  void set_bootmode(const char* value);
  void set_bootmode(const char* value, size_t size);
  std::string* mutable_bootmode();
  std::string* release_bootmode();
  void set_allocated_bootmode(std::string* bootmode);

  // optional string carrier = 13;
  bool has_carrier() const;
  void clear_carrier();
  const std::string& carrier() const;
  void set_carrier(const std::string& value);
  void set_carrier(std::string&& value);
  void set_carrier(const char* value);
  void set_carrier(const char* value, size_t size);
  std::string* mutable_carrier();
  std::string* release_carrier();
  void set_allocated_carrier(std::string* carrier);

  // optional string com_google_clientidbase = 16;
  bool has_com_google_clientidbase() const;
  void clear_com_google_clientidbase();
  const std::string& com_google_clientidbase() const;
  void set_com_google_clientidbase(const std::string& value);
  void set_com_google_clientidbase(std::string&& value);
  void set_com_google_clientidbase(const char* value);
  void set_com_google_clientidbase(const char* value, size_t size);
  std::string* mutable_com_google_clientidbase();
  std::string* release_com_google_clientidbase();
  void set_allocated_com_google_clientidbase(std::string* com_google_clientidbase);

  // optional string control_privapp_permissions = 18;
  bool has_control_privapp_permissions() const;
  void clear_control_privapp_permissions();
  const std::string& control_privapp_permissions() const;
  void set_control_privapp_permissions(const std::string& value);
  void set_control_privapp_permissions(std::string&& value);
  void set_control_privapp_permissions(const char* value);
  void set_control_privapp_permissions(const char* value, size_t size);
  std::string* mutable_control_privapp_permissions();
  std::string* release_control_privapp_permissions();
  void set_allocated_control_privapp_permissions(std::string* control_privapp_permissions);

  // optional string crypto_scrypt_params = 20;
  bool has_crypto_scrypt_params() const;
  void clear_crypto_scrypt_params();
  const std::string& crypto_scrypt_params() const;
  void set_crypto_scrypt_params(const std::string& value);
  void set_crypto_scrypt_params(std::string&& value);
  void set_crypto_scrypt_params(const char* value);
  void set_crypto_scrypt_params(const char* value, size_t size);
  std::string* mutable_crypto_scrypt_params();
  std::string* release_crypto_scrypt_params();
  void set_allocated_crypto_scrypt_params(std::string* crypto_scrypt_params);

  // optional string crypto_state = 21;
  bool has_crypto_state() const;
  void clear_crypto_state();
  const std::string& crypto_state() const;
  void set_crypto_state(const std::string& value);
  void set_crypto_state(std::string&& value);
  void set_crypto_state(const char* value);
  void set_crypto_state(const char* value, size_t size);
  std::string* mutable_crypto_state();
  std::string* release_crypto_state();
  void set_allocated_crypto_state(std::string* crypto_state);

  // optional string crypto_type = 22;
  bool has_crypto_type() const;
  void clear_crypto_type();
  const std::string& crypto_type() const;
  void set_crypto_type(const std::string& value);
  void set_crypto_type(std::string&& value);
  void set_crypto_type(const char* value);
  void set_crypto_type(const char* value, size_t size);
  std::string* mutable_crypto_type();
  std::string* release_crypto_type();
  void set_allocated_crypto_type(std::string* crypto_type);

  // optional string dalvik_vm_native_bridge = 23;
  bool has_dalvik_vm_native_bridge() const;
  void clear_dalvik_vm_native_bridge();
  const std::string& dalvik_vm_native_bridge() const;
  void set_dalvik_vm_native_bridge(const std::string& value);
  void set_dalvik_vm_native_bridge(std::string&& value);
  void set_dalvik_vm_native_bridge(const char* value);
  void set_dalvik_vm_native_bridge(const char* value, size_t size);
  std::string* mutable_dalvik_vm_native_bridge();
  std::string* release_dalvik_vm_native_bridge();
  void set_allocated_dalvik_vm_native_bridge(std::string* dalvik_vm_native_bridge);

  // optional string frp_pst = 25;
  bool has_frp_pst() const;
  void clear_frp_pst();
  const std::string& frp_pst() const;
  void set_frp_pst(const std::string& value);
  void set_frp_pst(std::string&& value);
  void set_frp_pst(const char* value);
  void set_frp_pst(const char* value, size_t size);
  std::string* mutable_frp_pst();
  std::string* release_frp_pst();
  void set_allocated_frp_pst(std::string* frp_pst);

  // optional string gfx_driver_0 = 26;
  bool has_gfx_driver_0() const;
  void clear_gfx_driver_0();
  const std::string& gfx_driver_0() const;
  void set_gfx_driver_0(const std::string& value);
  void set_gfx_driver_0(std::string&& value);
  void set_gfx_driver_0(const char* value);
  void set_gfx_driver_0(const char* value, size_t size);
  std::string* mutable_gfx_driver_0();
  std::string* release_gfx_driver_0();
  void set_allocated_gfx_driver_0(std::string* gfx_driver_0);

  // optional string revision = 35;
  bool has_revision() const;
  void clear_revision();
  const std::string& revision() const;
  void set_revision(const std::string& value);
  void set_revision(std::string&& value);
  void set_revision(const char* value);
  void set_revision(const char* value, size_t size);
  std::string* mutable_revision();
  std::string* release_revision();
  void set_allocated_revision(std::string* revision);

  // optional string vndk_version = 42;
  bool has_vndk_version() const;
  void clear_vndk_version();
  const std::string& vndk_version() const;
  void set_vndk_version(const std::string& value);
  void set_vndk_version(std::string&& value);
  void set_vndk_version(const char* value);
  void set_vndk_version(const char* value, size_t size);
  std::string* mutable_vndk_version();
  std::string* release_vndk_version();
  void set_allocated_vndk_version(std::string* vndk_version);

  // optional string zygote = 44;
  bool has_zygote() const;
  void clear_zygote();
  const std::string& zygote() const;
  void set_zygote(const std::string& value);
  void set_zygote(std::string&& value);
  void set_zygote(const char* value);
  void set_zygote(const char* value, size_t size);
  std::string* mutable_zygote();
  std::string* release_zygote();
  void set_allocated_zygote(std::string* zygote);

  // optional string gfx_driver_whitelist_0 = 45;
  bool has_gfx_driver_whitelist_0() const;
  void clear_gfx_driver_whitelist_0();
  const std::string& gfx_driver_whitelist_0() const;
  void set_gfx_driver_whitelist_0(const std::string& value);
  void set_gfx_driver_whitelist_0(std::string&& value);
  void set_gfx_driver_whitelist_0(const char* value);
  void set_gfx_driver_whitelist_0(const char* value, size_t size);
  std::string* mutable_gfx_driver_whitelist_0();
  std::string* release_gfx_driver_whitelist_0();
  void set_allocated_gfx_driver_whitelist_0(std::string* gfx_driver_whitelist_0);

  // optional .android.os.SystemPropertiesProto.Ro.Boot boot = 7;
  bool has_boot() const;
  void clear_boot();
  const ::android::os::SystemPropertiesProto_Ro_Boot& boot() const;
  ::android::os::SystemPropertiesProto_Ro_Boot* release_boot();
  ::android::os::SystemPropertiesProto_Ro_Boot* mutable_boot();
  void set_allocated_boot(::android::os::SystemPropertiesProto_Ro_Boot* boot);

  // optional .android.os.SystemPropertiesProto.Ro.BootImage bootimage = 8;
  bool has_bootimage() const;
  void clear_bootimage();
  const ::android::os::SystemPropertiesProto_Ro_BootImage& bootimage() const;
  ::android::os::SystemPropertiesProto_Ro_BootImage* release_bootimage();
  ::android::os::SystemPropertiesProto_Ro_BootImage* mutable_bootimage();
  void set_allocated_bootimage(::android::os::SystemPropertiesProto_Ro_BootImage* bootimage);

  // optional .android.os.SystemPropertiesProto.Ro.Build build = 11;
  bool has_build() const;
  void clear_build();
  const ::android::os::SystemPropertiesProto_Ro_Build& build() const;
  ::android::os::SystemPropertiesProto_Ro_Build* release_build();
  ::android::os::SystemPropertiesProto_Ro_Build* mutable_build();
  void set_allocated_build(::android::os::SystemPropertiesProto_Ro_Build* build);

  // optional .android.os.SystemPropertiesProto.Ro.Config config = 17;
  bool has_config() const;
  void clear_config();
  const ::android::os::SystemPropertiesProto_Ro_Config& config() const;
  ::android::os::SystemPropertiesProto_Ro_Config* release_config();
  ::android::os::SystemPropertiesProto_Ro_Config* mutable_config();
  void set_allocated_config(::android::os::SystemPropertiesProto_Ro_Config* config);

  // optional .android.os.SystemPropertiesProto.Ro.Hardware hardware = 27;
  bool has_hardware() const;
  void clear_hardware();
  const ::android::os::SystemPropertiesProto_Ro_Hardware& hardware() const;
  ::android::os::SystemPropertiesProto_Ro_Hardware* release_hardware();
  ::android::os::SystemPropertiesProto_Ro_Hardware* mutable_hardware();
  void set_allocated_hardware(::android::os::SystemPropertiesProto_Ro_Hardware* hardware);

  // optional .android.os.SystemPropertiesProto.Ro.Product product = 32;
  bool has_product() const;
  void clear_product();
  const ::android::os::SystemPropertiesProto_Ro_Product& product() const;
  ::android::os::SystemPropertiesProto_Ro_Product* release_product();
  ::android::os::SystemPropertiesProto_Ro_Product* mutable_product();
  void set_allocated_product(::android::os::SystemPropertiesProto_Ro_Product* product);

  // optional .android.os.SystemPropertiesProto.Ro.Telephony telephony = 38;
  bool has_telephony() const;
  void clear_telephony();
  const ::android::os::SystemPropertiesProto_Ro_Telephony& telephony() const;
  ::android::os::SystemPropertiesProto_Ro_Telephony* release_telephony();
  ::android::os::SystemPropertiesProto_Ro_Telephony* mutable_telephony();
  void set_allocated_telephony(::android::os::SystemPropertiesProto_Ro_Telephony* telephony);

  // optional .android.os.SystemPropertiesProto.Ro.Vendor vendor = 41;
  bool has_vendor() const;
  void clear_vendor();
  const ::android::os::SystemPropertiesProto_Ro_Vendor& vendor() const;
  ::android::os::SystemPropertiesProto_Ro_Vendor* release_vendor();
  ::android::os::SystemPropertiesProto_Ro_Vendor* mutable_vendor();
  void set_allocated_vendor(::android::os::SystemPropertiesProto_Ro_Vendor* vendor);

  // optional bool adb_secure = 1 [(.android.privacy) = {
  bool has_adb_secure() const;
  void clear_adb_secure();
  bool adb_secure() const;
  void set_adb_secure(bool value);

  // optional bool audio_ignore_effects = 3;
  bool has_audio_ignore_effects() const;
  void clear_audio_ignore_effects();
  bool audio_ignore_effects() const;
  void set_audio_ignore_effects(bool value);

  // optional bool audio_monitor_rotation = 4;
  bool has_audio_monitor_rotation() const;
  void clear_audio_monitor_rotation();
  bool audio_monitor_rotation() const;
  void set_audio_monitor_rotation(bool value);

  // optional bool camera_notify_nfc = 12 [(.android.privacy) = {
  bool has_camera_notify_nfc() const;
  void clear_camera_notify_nfc();
  bool camera_notify_nfc() const;
  void set_camera_notify_nfc(bool value);

  // optional int32 cp_system_other_odex = 19;
  bool has_cp_system_other_odex() const;
  void clear_cp_system_other_odex();
  ::PROTOBUF_NAMESPACE_ID::int32 cp_system_other_odex() const;
  void set_cp_system_other_odex(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool com_android_dataroaming = 14 [(.android.privacy) = {
  bool has_com_android_dataroaming() const;
  void clear_com_android_dataroaming();
  bool com_android_dataroaming() const;
  void set_com_android_dataroaming(bool value);

  // optional bool com_android_prov_mobiledata = 15 [(.android.privacy) = {
  bool has_com_android_prov_mobiledata() const;
  void clear_com_android_prov_mobiledata();
  bool com_android_prov_mobiledata() const;
  void set_com_android_prov_mobiledata(bool value);

  // optional bool debuggable = 24;
  bool has_debuggable() const;
  void clear_debuggable();
  bool debuggable() const;
  void set_debuggable(bool value);

  // optional bool storage_manager_enabled = 37;
  bool has_storage_manager_enabled() const;
  void clear_storage_manager_enabled();
  bool storage_manager_enabled() const;
  void set_storage_manager_enabled(bool value);

  // optional int32 kernel_qemu = 28;
  bool has_kernel_qemu() const;
  void clear_kernel_qemu();
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_qemu() const;
  void set_kernel_qemu(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 kernel_qemu_gles = 29;
  bool has_kernel_qemu_gles() const;
  void clear_kernel_qemu_gles();
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_qemu_gles() const;
  void set_kernel_qemu_gles(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 oem_unlock_supported = 30;
  bool has_oem_unlock_supported() const;
  void clear_oem_unlock_supported();
  ::PROTOBUF_NAMESPACE_ID::int32 oem_unlock_supported() const;
  void set_oem_unlock_supported(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 opengles_version = 31;
  bool has_opengles_version() const;
  void clear_opengles_version();
  ::PROTOBUF_NAMESPACE_ID::int32 opengles_version() const;
  void set_opengles_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 property_service_version = 33;
  bool has_property_service_version() const;
  void clear_property_service_version();
  ::PROTOBUF_NAMESPACE_ID::int32 property_service_version() const;
  void set_property_service_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 sf_lcd_density = 36;
  bool has_sf_lcd_density() const;
  void clear_sf_lcd_density();
  ::PROTOBUF_NAMESPACE_ID::int32 sf_lcd_density() const;
  void set_sf_lcd_density(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 vts_coverage = 43;
  bool has_vts_coverage() const;
  void clear_vts_coverage();
  ::PROTOBUF_NAMESPACE_ID::int32 vts_coverage() const;
  void set_vts_coverage(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Ro)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr arch_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr baseband_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr board_platform_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bootloader_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bootmode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr carrier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr com_google_clientidbase_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr control_privapp_permissions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr crypto_scrypt_params_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr crypto_state_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr crypto_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dalvik_vm_native_bridge_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frp_pst_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gfx_driver_0_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr revision_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vndk_version_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zygote_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gfx_driver_whitelist_0_;
  ::android::os::SystemPropertiesProto_Ro_Boot* boot_;
  ::android::os::SystemPropertiesProto_Ro_BootImage* bootimage_;
  ::android::os::SystemPropertiesProto_Ro_Build* build_;
  ::android::os::SystemPropertiesProto_Ro_Config* config_;
  ::android::os::SystemPropertiesProto_Ro_Hardware* hardware_;
  ::android::os::SystemPropertiesProto_Ro_Product* product_;
  ::android::os::SystemPropertiesProto_Ro_Telephony* telephony_;
  ::android::os::SystemPropertiesProto_Ro_Vendor* vendor_;
  bool adb_secure_;
  bool audio_ignore_effects_;
  bool audio_monitor_rotation_;
  bool camera_notify_nfc_;
  ::PROTOBUF_NAMESPACE_ID::int32 cp_system_other_odex_;
  bool com_android_dataroaming_;
  bool com_android_prov_mobiledata_;
  bool debuggable_;
  bool storage_manager_enabled_;
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_qemu_;
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_qemu_gles_;
  ::PROTOBUF_NAMESPACE_ID::int32 oem_unlock_supported_;
  ::PROTOBUF_NAMESPACE_ID::int32 opengles_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 property_service_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 sf_lcd_density_;
  ::PROTOBUF_NAMESPACE_ID::int32 vts_coverage_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Sys_Usb :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Sys.Usb) */ {
 public:
  SystemPropertiesProto_Sys_Usb();
  virtual ~SystemPropertiesProto_Sys_Usb();

  SystemPropertiesProto_Sys_Usb(const SystemPropertiesProto_Sys_Usb& from);
  SystemPropertiesProto_Sys_Usb(SystemPropertiesProto_Sys_Usb&& from) noexcept
    : SystemPropertiesProto_Sys_Usb() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Sys_Usb& operator=(const SystemPropertiesProto_Sys_Usb& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Sys_Usb& operator=(SystemPropertiesProto_Sys_Usb&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Sys_Usb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Sys_Usb* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Sys_Usb*>(
               &_SystemPropertiesProto_Sys_Usb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(SystemPropertiesProto_Sys_Usb& a, SystemPropertiesProto_Sys_Usb& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Sys_Usb* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Sys_Usb* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Sys_Usb>(nullptr);
  }

  SystemPropertiesProto_Sys_Usb* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Sys_Usb>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Sys_Usb& from);
  void MergeFrom(const SystemPropertiesProto_Sys_Usb& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Sys_Usb* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Sys.Usb";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
    kControllerFieldNumber = 3,
    kStateFieldNumber = 9,
    kConfigfsFieldNumber = 2,
    kFfsMaxReadFieldNumber = 4,
    kFfsMaxWriteFieldNumber = 5,
    kFfsMtpReadyFieldNumber = 6,
    kFfsReadyFieldNumber = 7,
    kMtpDeviceTypeFieldNumber = 8,
  };
  // optional string config = 1;
  bool has_config() const;
  void clear_config();
  const std::string& config() const;
  void set_config(const std::string& value);
  void set_config(std::string&& value);
  void set_config(const char* value);
  void set_config(const char* value, size_t size);
  std::string* mutable_config();
  std::string* release_config();
  void set_allocated_config(std::string* config);

  // optional string controller = 3;
  bool has_controller() const;
  void clear_controller();
  const std::string& controller() const;
  void set_controller(const std::string& value);
  void set_controller(std::string&& value);
  void set_controller(const char* value);
  void set_controller(const char* value, size_t size);
  std::string* mutable_controller();
  std::string* release_controller();
  void set_allocated_controller(std::string* controller);

  // optional string state = 9;
  bool has_state() const;
  void clear_state();
  const std::string& state() const;
  void set_state(const std::string& value);
  void set_state(std::string&& value);
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  std::string* mutable_state();
  std::string* release_state();
  void set_allocated_state(std::string* state);

  // optional int32 configfs = 2;
  bool has_configfs() const;
  void clear_configfs();
  ::PROTOBUF_NAMESPACE_ID::int32 configfs() const;
  void set_configfs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 ffs_max_read = 4;
  bool has_ffs_max_read() const;
  void clear_ffs_max_read();
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_max_read() const;
  void set_ffs_max_read(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 ffs_max_write = 5;
  bool has_ffs_max_write() const;
  void clear_ffs_max_write();
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_max_write() const;
  void set_ffs_max_write(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 ffs_mtp_ready = 6;
  bool has_ffs_mtp_ready() const;
  void clear_ffs_mtp_ready();
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_mtp_ready() const;
  void set_ffs_mtp_ready(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 ffs_ready = 7;
  bool has_ffs_ready() const;
  void clear_ffs_ready();
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_ready() const;
  void set_ffs_ready(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 mtp_device_type = 8;
  bool has_mtp_device_type() const;
  void clear_mtp_device_type();
  ::PROTOBUF_NAMESPACE_ID::int32 mtp_device_type() const;
  void set_mtp_device_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Sys.Usb)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr config_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr controller_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr state_;
  ::PROTOBUF_NAMESPACE_ID::int32 configfs_;
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_max_read_;
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_max_write_;
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_mtp_ready_;
  ::PROTOBUF_NAMESPACE_ID::int32 ffs_ready_;
  ::PROTOBUF_NAMESPACE_ID::int32 mtp_device_type_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto_Sys :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto.Sys) */ {
 public:
  SystemPropertiesProto_Sys();
  virtual ~SystemPropertiesProto_Sys();

  SystemPropertiesProto_Sys(const SystemPropertiesProto_Sys& from);
  SystemPropertiesProto_Sys(SystemPropertiesProto_Sys&& from) noexcept
    : SystemPropertiesProto_Sys() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto_Sys& operator=(const SystemPropertiesProto_Sys& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto_Sys& operator=(SystemPropertiesProto_Sys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto_Sys& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto_Sys* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto_Sys*>(
               &_SystemPropertiesProto_Sys_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(SystemPropertiesProto_Sys& a, SystemPropertiesProto_Sys& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto_Sys* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto_Sys* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto_Sys>(nullptr);
  }

  SystemPropertiesProto_Sys* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto_Sys>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto_Sys& from);
  void MergeFrom(const SystemPropertiesProto_Sys& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto_Sys* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto.Sys";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SystemPropertiesProto_Sys_Usb Usb;

  // accessors -------------------------------------------------------

  enum : int {
    kShutdownRequestedFieldNumber = 4,
    kUsbFieldNumber = 5,
    kBootCompletedFieldNumber = 1,
    kBootFromChargerModeFieldNumber = 2,
    kRetaildemoEnabledFieldNumber = 3,
  };
  // optional string shutdown_requested = 4;
  bool has_shutdown_requested() const;
  void clear_shutdown_requested();
  const std::string& shutdown_requested() const;
  void set_shutdown_requested(const std::string& value);
  void set_shutdown_requested(std::string&& value);
  void set_shutdown_requested(const char* value);
  void set_shutdown_requested(const char* value, size_t size);
  std::string* mutable_shutdown_requested();
  std::string* release_shutdown_requested();
  void set_allocated_shutdown_requested(std::string* shutdown_requested);

  // optional .android.os.SystemPropertiesProto.Sys.Usb usb = 5;
  bool has_usb() const;
  void clear_usb();
  const ::android::os::SystemPropertiesProto_Sys_Usb& usb() const;
  ::android::os::SystemPropertiesProto_Sys_Usb* release_usb();
  ::android::os::SystemPropertiesProto_Sys_Usb* mutable_usb();
  void set_allocated_usb(::android::os::SystemPropertiesProto_Sys_Usb* usb);

  // optional int32 boot_completed = 1;
  bool has_boot_completed() const;
  void clear_boot_completed();
  ::PROTOBUF_NAMESPACE_ID::int32 boot_completed() const;
  void set_boot_completed(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 boot_from_charger_mode = 2;
  bool has_boot_from_charger_mode() const;
  void clear_boot_from_charger_mode();
  ::PROTOBUF_NAMESPACE_ID::int32 boot_from_charger_mode() const;
  void set_boot_from_charger_mode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 retaildemo_enabled = 3;
  bool has_retaildemo_enabled() const;
  void clear_retaildemo_enabled();
  ::PROTOBUF_NAMESPACE_ID::int32 retaildemo_enabled() const;
  void set_retaildemo_enabled(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto.Sys)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shutdown_requested_;
  ::android::os::SystemPropertiesProto_Sys_Usb* usb_;
  ::PROTOBUF_NAMESPACE_ID::int32 boot_completed_;
  ::PROTOBUF_NAMESPACE_ID::int32 boot_from_charger_mode_;
  ::PROTOBUF_NAMESPACE_ID::int32 retaildemo_enabled_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// -------------------------------------------------------------------

class SystemPropertiesProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.SystemPropertiesProto) */ {
 public:
  SystemPropertiesProto();
  virtual ~SystemPropertiesProto();

  SystemPropertiesProto(const SystemPropertiesProto& from);
  SystemPropertiesProto(SystemPropertiesProto&& from) noexcept
    : SystemPropertiesProto() {
    *this = ::std::move(from);
  }

  inline SystemPropertiesProto& operator=(const SystemPropertiesProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemPropertiesProto& operator=(SystemPropertiesProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SystemPropertiesProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemPropertiesProto* internal_default_instance() {
    return reinterpret_cast<const SystemPropertiesProto*>(
               &_SystemPropertiesProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(SystemPropertiesProto& a, SystemPropertiesProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemPropertiesProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemPropertiesProto* New() const final {
    return CreateMaybeMessage<SystemPropertiesProto>(nullptr);
  }

  SystemPropertiesProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemPropertiesProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SystemPropertiesProto& from);
  void MergeFrom(const SystemPropertiesProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPropertiesProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.SystemPropertiesProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SystemPropertiesProto_Property Property;
  typedef SystemPropertiesProto_AacDrc AacDrc;
  typedef SystemPropertiesProto_Aaudio Aaudio;
  typedef SystemPropertiesProto_Camera Camera;
  typedef SystemPropertiesProto_DalvikVm DalvikVm;
  typedef SystemPropertiesProto_InitSvc InitSvc;
  typedef SystemPropertiesProto_Log Log;
  typedef SystemPropertiesProto_Persist Persist;
  typedef SystemPropertiesProto_PmDexopt PmDexopt;
  typedef SystemPropertiesProto_Ro Ro;
  typedef SystemPropertiesProto_Sys Sys;

  // accessors -------------------------------------------------------

  enum : int {
    kExtraPropertiesFieldNumber = 1,
    kGsmSimOperatorNumericFieldNumber = 10,
    kLibcDebugMallocOptionsFieldNumber = 14,
    kLibcDebugMallocProgramFieldNumber = 15,
    kSendbugPreferredDomainFieldNumber = 22,
    kVoldDecryptFieldNumber = 27,
    kWifiDirectInterfaceFieldNumber = 30,
    kWifiInterfaceFieldNumber = 31,
    kAacDrcFieldNumber = 2,
    kAaudioFieldNumber = 3,
    kCameraFieldNumber = 5,
    kDalvikVmFieldNumber = 6,
    kInitSvcFieldNumber = 12,
    kLogFieldNumber = 16,
    kPersistFieldNumber = 19,
    kPmDexoptFieldNumber = 20,
    kRoFieldNumber = 21,
    kSysFieldNumber = 24,
    kAfFastTrackMultiplierFieldNumber = 4,
    kDrm64BitEnabledFieldNumber = 7,
    kDrmServiceEnabledFieldNumber = 8,
    kDumpstateDryRunFieldNumber = 9,
    kHalInstrumentationEnableFieldNumber = 11,
    kKeyguardNoRequireSimFieldNumber = 13,
    kMediaMediadrmserviceEnableFieldNumber = 17,
    kMediaRecorderShowManufacturerAndModelFieldNumber = 18,
    kServiceBootanimExitFieldNumber = 23,
    kTelephonyLteOnCdmaDeviceFieldNumber = 25,
    kTombstonedMaxTombstoneCountFieldNumber = 26,
    kVoldPostFsDataDoneFieldNumber = 28,
    kVtsNativeServerOnFieldNumber = 29,
  };
  // repeated .android.os.SystemPropertiesProto.Property extra_properties = 1;
  int extra_properties_size() const;
  void clear_extra_properties();
  ::android::os::SystemPropertiesProto_Property* mutable_extra_properties(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::SystemPropertiesProto_Property >*
      mutable_extra_properties();
  const ::android::os::SystemPropertiesProto_Property& extra_properties(int index) const;
  ::android::os::SystemPropertiesProto_Property* add_extra_properties();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::SystemPropertiesProto_Property >&
      extra_properties() const;

  // optional string gsm_sim_operator_numeric = 10;
  bool has_gsm_sim_operator_numeric() const;
  void clear_gsm_sim_operator_numeric();
  const std::string& gsm_sim_operator_numeric() const;
  void set_gsm_sim_operator_numeric(const std::string& value);
  void set_gsm_sim_operator_numeric(std::string&& value);
  void set_gsm_sim_operator_numeric(const char* value);
  void set_gsm_sim_operator_numeric(const char* value, size_t size);
  std::string* mutable_gsm_sim_operator_numeric();
  std::string* release_gsm_sim_operator_numeric();
  void set_allocated_gsm_sim_operator_numeric(std::string* gsm_sim_operator_numeric);

  // optional string libc_debug_malloc_options = 14;
  bool has_libc_debug_malloc_options() const;
  void clear_libc_debug_malloc_options();
  const std::string& libc_debug_malloc_options() const;
  void set_libc_debug_malloc_options(const std::string& value);
  void set_libc_debug_malloc_options(std::string&& value);
  void set_libc_debug_malloc_options(const char* value);
  void set_libc_debug_malloc_options(const char* value, size_t size);
  std::string* mutable_libc_debug_malloc_options();
  std::string* release_libc_debug_malloc_options();
  void set_allocated_libc_debug_malloc_options(std::string* libc_debug_malloc_options);

  // optional string libc_debug_malloc_program = 15;
  bool has_libc_debug_malloc_program() const;
  void clear_libc_debug_malloc_program();
  const std::string& libc_debug_malloc_program() const;
  void set_libc_debug_malloc_program(const std::string& value);
  void set_libc_debug_malloc_program(std::string&& value);
  void set_libc_debug_malloc_program(const char* value);
  void set_libc_debug_malloc_program(const char* value, size_t size);
  std::string* mutable_libc_debug_malloc_program();
  std::string* release_libc_debug_malloc_program();
  void set_allocated_libc_debug_malloc_program(std::string* libc_debug_malloc_program);

  // optional string sendbug_preferred_domain = 22;
  bool has_sendbug_preferred_domain() const;
  void clear_sendbug_preferred_domain();
  const std::string& sendbug_preferred_domain() const;
  void set_sendbug_preferred_domain(const std::string& value);
  void set_sendbug_preferred_domain(std::string&& value);
  void set_sendbug_preferred_domain(const char* value);
  void set_sendbug_preferred_domain(const char* value, size_t size);
  std::string* mutable_sendbug_preferred_domain();
  std::string* release_sendbug_preferred_domain();
  void set_allocated_sendbug_preferred_domain(std::string* sendbug_preferred_domain);

  // optional string vold_decrypt = 27;
  bool has_vold_decrypt() const;
  void clear_vold_decrypt();
  const std::string& vold_decrypt() const;
  void set_vold_decrypt(const std::string& value);
  void set_vold_decrypt(std::string&& value);
  void set_vold_decrypt(const char* value);
  void set_vold_decrypt(const char* value, size_t size);
  std::string* mutable_vold_decrypt();
  std::string* release_vold_decrypt();
  void set_allocated_vold_decrypt(std::string* vold_decrypt);

  // optional string wifi_direct_interface = 30;
  bool has_wifi_direct_interface() const;
  void clear_wifi_direct_interface();
  const std::string& wifi_direct_interface() const;
  void set_wifi_direct_interface(const std::string& value);
  void set_wifi_direct_interface(std::string&& value);
  void set_wifi_direct_interface(const char* value);
  void set_wifi_direct_interface(const char* value, size_t size);
  std::string* mutable_wifi_direct_interface();
  std::string* release_wifi_direct_interface();
  void set_allocated_wifi_direct_interface(std::string* wifi_direct_interface);

  // optional string wifi_interface = 31;
  bool has_wifi_interface() const;
  void clear_wifi_interface();
  const std::string& wifi_interface() const;
  void set_wifi_interface(const std::string& value);
  void set_wifi_interface(std::string&& value);
  void set_wifi_interface(const char* value);
  void set_wifi_interface(const char* value, size_t size);
  std::string* mutable_wifi_interface();
  std::string* release_wifi_interface();
  void set_allocated_wifi_interface(std::string* wifi_interface);

  // optional .android.os.SystemPropertiesProto.AacDrc aac_drc = 2;
  bool has_aac_drc() const;
  void clear_aac_drc();
  const ::android::os::SystemPropertiesProto_AacDrc& aac_drc() const;
  ::android::os::SystemPropertiesProto_AacDrc* release_aac_drc();
  ::android::os::SystemPropertiesProto_AacDrc* mutable_aac_drc();
  void set_allocated_aac_drc(::android::os::SystemPropertiesProto_AacDrc* aac_drc);

  // optional .android.os.SystemPropertiesProto.Aaudio aaudio = 3;
  bool has_aaudio() const;
  void clear_aaudio();
  const ::android::os::SystemPropertiesProto_Aaudio& aaudio() const;
  ::android::os::SystemPropertiesProto_Aaudio* release_aaudio();
  ::android::os::SystemPropertiesProto_Aaudio* mutable_aaudio();
  void set_allocated_aaudio(::android::os::SystemPropertiesProto_Aaudio* aaudio);

  // optional .android.os.SystemPropertiesProto.Camera camera = 5;
  bool has_camera() const;
  void clear_camera();
  const ::android::os::SystemPropertiesProto_Camera& camera() const;
  ::android::os::SystemPropertiesProto_Camera* release_camera();
  ::android::os::SystemPropertiesProto_Camera* mutable_camera();
  void set_allocated_camera(::android::os::SystemPropertiesProto_Camera* camera);

  // optional .android.os.SystemPropertiesProto.DalvikVm dalvik_vm = 6;
  bool has_dalvik_vm() const;
  void clear_dalvik_vm();
  const ::android::os::SystemPropertiesProto_DalvikVm& dalvik_vm() const;
  ::android::os::SystemPropertiesProto_DalvikVm* release_dalvik_vm();
  ::android::os::SystemPropertiesProto_DalvikVm* mutable_dalvik_vm();
  void set_allocated_dalvik_vm(::android::os::SystemPropertiesProto_DalvikVm* dalvik_vm);

  // optional .android.os.SystemPropertiesProto.InitSvc init_svc = 12;
  bool has_init_svc() const;
  void clear_init_svc();
  const ::android::os::SystemPropertiesProto_InitSvc& init_svc() const;
  ::android::os::SystemPropertiesProto_InitSvc* release_init_svc();
  ::android::os::SystemPropertiesProto_InitSvc* mutable_init_svc();
  void set_allocated_init_svc(::android::os::SystemPropertiesProto_InitSvc* init_svc);

  // optional .android.os.SystemPropertiesProto.Log log = 16;
  bool has_log() const;
  void clear_log();
  const ::android::os::SystemPropertiesProto_Log& log() const;
  ::android::os::SystemPropertiesProto_Log* release_log();
  ::android::os::SystemPropertiesProto_Log* mutable_log();
  void set_allocated_log(::android::os::SystemPropertiesProto_Log* log);

  // optional .android.os.SystemPropertiesProto.Persist persist = 19;
  bool has_persist() const;
  void clear_persist();
  const ::android::os::SystemPropertiesProto_Persist& persist() const;
  ::android::os::SystemPropertiesProto_Persist* release_persist();
  ::android::os::SystemPropertiesProto_Persist* mutable_persist();
  void set_allocated_persist(::android::os::SystemPropertiesProto_Persist* persist);

  // optional .android.os.SystemPropertiesProto.PmDexopt pm_dexopt = 20;
  bool has_pm_dexopt() const;
  void clear_pm_dexopt();
  const ::android::os::SystemPropertiesProto_PmDexopt& pm_dexopt() const;
  ::android::os::SystemPropertiesProto_PmDexopt* release_pm_dexopt();
  ::android::os::SystemPropertiesProto_PmDexopt* mutable_pm_dexopt();
  void set_allocated_pm_dexopt(::android::os::SystemPropertiesProto_PmDexopt* pm_dexopt);

  // optional .android.os.SystemPropertiesProto.Ro ro = 21;
  bool has_ro() const;
  void clear_ro();
  const ::android::os::SystemPropertiesProto_Ro& ro() const;
  ::android::os::SystemPropertiesProto_Ro* release_ro();
  ::android::os::SystemPropertiesProto_Ro* mutable_ro();
  void set_allocated_ro(::android::os::SystemPropertiesProto_Ro* ro);

  // optional .android.os.SystemPropertiesProto.Sys sys = 24;
  bool has_sys() const;
  void clear_sys();
  const ::android::os::SystemPropertiesProto_Sys& sys() const;
  ::android::os::SystemPropertiesProto_Sys* release_sys();
  ::android::os::SystemPropertiesProto_Sys* mutable_sys();
  void set_allocated_sys(::android::os::SystemPropertiesProto_Sys* sys);

  // optional int32 af_fast_track_multiplier = 4;
  bool has_af_fast_track_multiplier() const;
  void clear_af_fast_track_multiplier();
  ::PROTOBUF_NAMESPACE_ID::int32 af_fast_track_multiplier() const;
  void set_af_fast_track_multiplier(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool drm_64bit_enabled = 7;
  bool has_drm_64bit_enabled() const;
  void clear_drm_64bit_enabled();
  bool drm_64bit_enabled() const;
  void set_drm_64bit_enabled(bool value);

  // optional bool drm_service_enabled = 8;
  bool has_drm_service_enabled() const;
  void clear_drm_service_enabled();
  bool drm_service_enabled() const;
  void set_drm_service_enabled(bool value);

  // optional bool dumpstate_dry_run = 9;
  bool has_dumpstate_dry_run() const;
  void clear_dumpstate_dry_run();
  bool dumpstate_dry_run() const;
  void set_dumpstate_dry_run(bool value);

  // optional bool hal_instrumentation_enable = 11;
  bool has_hal_instrumentation_enable() const;
  void clear_hal_instrumentation_enable();
  bool hal_instrumentation_enable() const;
  void set_hal_instrumentation_enable(bool value);

  // optional bool keyguard_no_require_sim = 13;
  bool has_keyguard_no_require_sim() const;
  void clear_keyguard_no_require_sim();
  bool keyguard_no_require_sim() const;
  void set_keyguard_no_require_sim(bool value);

  // optional bool media_mediadrmservice_enable = 17;
  bool has_media_mediadrmservice_enable() const;
  void clear_media_mediadrmservice_enable();
  bool media_mediadrmservice_enable() const;
  void set_media_mediadrmservice_enable(bool value);

  // optional bool media_recorder_show_manufacturer_and_model = 18;
  bool has_media_recorder_show_manufacturer_and_model() const;
  void clear_media_recorder_show_manufacturer_and_model();
  bool media_recorder_show_manufacturer_and_model() const;
  void set_media_recorder_show_manufacturer_and_model(bool value);

  // optional int32 service_bootanim_exit = 23;
  bool has_service_bootanim_exit() const;
  void clear_service_bootanim_exit();
  ::PROTOBUF_NAMESPACE_ID::int32 service_bootanim_exit() const;
  void set_service_bootanim_exit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 telephony_lte_on_cdma_device = 25;
  bool has_telephony_lte_on_cdma_device() const;
  void clear_telephony_lte_on_cdma_device();
  ::PROTOBUF_NAMESPACE_ID::int32 telephony_lte_on_cdma_device() const;
  void set_telephony_lte_on_cdma_device(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 tombstoned_max_tombstone_count = 26;
  bool has_tombstoned_max_tombstone_count() const;
  void clear_tombstoned_max_tombstone_count();
  ::PROTOBUF_NAMESPACE_ID::int32 tombstoned_max_tombstone_count() const;
  void set_tombstoned_max_tombstone_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 vold_post_fs_data_done = 28;
  bool has_vold_post_fs_data_done() const;
  void clear_vold_post_fs_data_done();
  ::PROTOBUF_NAMESPACE_ID::int32 vold_post_fs_data_done() const;
  void set_vold_post_fs_data_done(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 vts_native_server_on = 29;
  bool has_vts_native_server_on() const;
  void clear_vts_native_server_on();
  ::PROTOBUF_NAMESPACE_ID::int32 vts_native_server_on() const;
  void set_vts_native_server_on(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.SystemPropertiesProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::SystemPropertiesProto_Property > extra_properties_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gsm_sim_operator_numeric_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr libc_debug_malloc_options_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr libc_debug_malloc_program_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sendbug_preferred_domain_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vold_decrypt_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wifi_direct_interface_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wifi_interface_;
  ::android::os::SystemPropertiesProto_AacDrc* aac_drc_;
  ::android::os::SystemPropertiesProto_Aaudio* aaudio_;
  ::android::os::SystemPropertiesProto_Camera* camera_;
  ::android::os::SystemPropertiesProto_DalvikVm* dalvik_vm_;
  ::android::os::SystemPropertiesProto_InitSvc* init_svc_;
  ::android::os::SystemPropertiesProto_Log* log_;
  ::android::os::SystemPropertiesProto_Persist* persist_;
  ::android::os::SystemPropertiesProto_PmDexopt* pm_dexopt_;
  ::android::os::SystemPropertiesProto_Ro* ro_;
  ::android::os::SystemPropertiesProto_Sys* sys_;
  ::PROTOBUF_NAMESPACE_ID::int32 af_fast_track_multiplier_;
  bool drm_64bit_enabled_;
  bool drm_service_enabled_;
  bool dumpstate_dry_run_;
  bool hal_instrumentation_enable_;
  bool keyguard_no_require_sim_;
  bool media_mediadrmservice_enable_;
  bool media_recorder_show_manufacturer_and_model_;
  ::PROTOBUF_NAMESPACE_ID::int32 service_bootanim_exit_;
  ::PROTOBUF_NAMESPACE_ID::int32 telephony_lte_on_cdma_device_;
  ::PROTOBUF_NAMESPACE_ID::int32 tombstoned_max_tombstone_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 vold_post_fs_data_done_;
  ::PROTOBUF_NAMESPACE_ID::int32 vts_native_server_on_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SystemPropertiesProto_Property

// optional string name = 1;
inline bool SystemPropertiesProto_Property::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Property::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Property::name() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Property.name)
  return name_.GetNoArena();
}
inline void SystemPropertiesProto_Property::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Property.name)
}
inline void SystemPropertiesProto_Property::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Property.name)
}
inline void SystemPropertiesProto_Property::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Property.name)
}
inline void SystemPropertiesProto_Property::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Property.name)
}
inline std::string* SystemPropertiesProto_Property::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Property.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Property::release_name() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Property.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Property::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Property.name)
}

// optional string value = 2;
inline bool SystemPropertiesProto_Property::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Property::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Property::value() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Property.value)
  return value_.GetNoArena();
}
inline void SystemPropertiesProto_Property::set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Property.value)
}
inline void SystemPropertiesProto_Property::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Property.value)
}
inline void SystemPropertiesProto_Property::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Property.value)
}
inline void SystemPropertiesProto_Property::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Property.value)
}
inline std::string* SystemPropertiesProto_Property::mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Property.value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Property::release_value() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Property.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Property::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Property.value)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_AacDrc

// optional int32 boost = 1;
inline bool SystemPropertiesProto_AacDrc::has_boost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_AacDrc::clear_boost() {
  boost_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_AacDrc::boost() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.AacDrc.boost)
  return boost_;
}
inline void SystemPropertiesProto_AacDrc::set_boost(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  boost_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.AacDrc.boost)
}

// optional int32 cut = 2;
inline bool SystemPropertiesProto_AacDrc::has_cut() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_AacDrc::clear_cut() {
  cut_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_AacDrc::cut() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.AacDrc.cut)
  return cut_;
}
inline void SystemPropertiesProto_AacDrc::set_cut(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cut_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.AacDrc.cut)
}

// optional int32 enc_target_level = 3;
inline bool SystemPropertiesProto_AacDrc::has_enc_target_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_AacDrc::clear_enc_target_level() {
  enc_target_level_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_AacDrc::enc_target_level() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.AacDrc.enc_target_level)
  return enc_target_level_;
}
inline void SystemPropertiesProto_AacDrc::set_enc_target_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  enc_target_level_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.AacDrc.enc_target_level)
}

// optional int32 heavy = 4;
inline bool SystemPropertiesProto_AacDrc::has_heavy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_AacDrc::clear_heavy() {
  heavy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_AacDrc::heavy() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.AacDrc.heavy)
  return heavy_;
}
inline void SystemPropertiesProto_AacDrc::set_heavy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  heavy_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.AacDrc.heavy)
}

// optional int32 reference_level = 5;
inline bool SystemPropertiesProto_AacDrc::has_reference_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_AacDrc::clear_reference_level() {
  reference_level_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_AacDrc::reference_level() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.AacDrc.reference_level)
  return reference_level_;
}
inline void SystemPropertiesProto_AacDrc::set_reference_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  reference_level_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.AacDrc.reference_level)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Aaudio

// optional int32 hw_burst_min_usec = 1;
inline bool SystemPropertiesProto_Aaudio::has_hw_burst_min_usec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Aaudio::clear_hw_burst_min_usec() {
  hw_burst_min_usec_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Aaudio::hw_burst_min_usec() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Aaudio.hw_burst_min_usec)
  return hw_burst_min_usec_;
}
inline void SystemPropertiesProto_Aaudio::set_hw_burst_min_usec(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  hw_burst_min_usec_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Aaudio.hw_burst_min_usec)
}

// optional int32 minimum_sleep_usec = 2;
inline bool SystemPropertiesProto_Aaudio::has_minimum_sleep_usec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Aaudio::clear_minimum_sleep_usec() {
  minimum_sleep_usec_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Aaudio::minimum_sleep_usec() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Aaudio.minimum_sleep_usec)
  return minimum_sleep_usec_;
}
inline void SystemPropertiesProto_Aaudio::set_minimum_sleep_usec(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  minimum_sleep_usec_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Aaudio.minimum_sleep_usec)
}

// optional int32 mixer_bursts = 3;
inline bool SystemPropertiesProto_Aaudio::has_mixer_bursts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Aaudio::clear_mixer_bursts() {
  mixer_bursts_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Aaudio::mixer_bursts() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Aaudio.mixer_bursts)
  return mixer_bursts_;
}
inline void SystemPropertiesProto_Aaudio::set_mixer_bursts(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  mixer_bursts_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Aaudio.mixer_bursts)
}

// optional int32 mmap_exclusive_policy = 4;
inline bool SystemPropertiesProto_Aaudio::has_mmap_exclusive_policy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Aaudio::clear_mmap_exclusive_policy() {
  mmap_exclusive_policy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Aaudio::mmap_exclusive_policy() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Aaudio.mmap_exclusive_policy)
  return mmap_exclusive_policy_;
}
inline void SystemPropertiesProto_Aaudio::set_mmap_exclusive_policy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  mmap_exclusive_policy_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Aaudio.mmap_exclusive_policy)
}

// optional int32 mmap_policy = 5;
inline bool SystemPropertiesProto_Aaudio::has_mmap_policy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Aaudio::clear_mmap_policy() {
  mmap_policy_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Aaudio::mmap_policy() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Aaudio.mmap_policy)
  return mmap_policy_;
}
inline void SystemPropertiesProto_Aaudio::set_mmap_policy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  mmap_policy_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Aaudio.mmap_policy)
}

// optional int32 wakeup_delay_usec = 6;
inline bool SystemPropertiesProto_Aaudio::has_wakeup_delay_usec() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Aaudio::clear_wakeup_delay_usec() {
  wakeup_delay_usec_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Aaudio::wakeup_delay_usec() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Aaudio.wakeup_delay_usec)
  return wakeup_delay_usec_;
}
inline void SystemPropertiesProto_Aaudio::set_wakeup_delay_usec(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  wakeup_delay_usec_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Aaudio.wakeup_delay_usec)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Camera

// optional bool disable_zsl_mode = 1;
inline bool SystemPropertiesProto_Camera::has_disable_zsl_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Camera::clear_disable_zsl_mode() {
  disable_zsl_mode_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool SystemPropertiesProto_Camera::disable_zsl_mode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Camera.disable_zsl_mode)
  return disable_zsl_mode_;
}
inline void SystemPropertiesProto_Camera::set_disable_zsl_mode(bool value) {
  _has_bits_[0] |= 0x00000001u;
  disable_zsl_mode_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Camera.disable_zsl_mode)
}

// optional int32 fifo_disable = 2;
inline bool SystemPropertiesProto_Camera::has_fifo_disable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Camera::clear_fifo_disable() {
  fifo_disable_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Camera::fifo_disable() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Camera.fifo_disable)
  return fifo_disable_;
}
inline void SystemPropertiesProto_Camera::set_fifo_disable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  fifo_disable_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Camera.fifo_disable)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_DalvikVm

// optional string appimageformat = 1;
inline bool SystemPropertiesProto_DalvikVm::has_appimageformat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_appimageformat() {
  appimageformat_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::appimageformat() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
  return appimageformat_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_appimageformat(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  appimageformat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
}
inline void SystemPropertiesProto_DalvikVm::set_appimageformat(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  appimageformat_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
}
inline void SystemPropertiesProto_DalvikVm::set_appimageformat(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  appimageformat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
}
inline void SystemPropertiesProto_DalvikVm::set_appimageformat(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  appimageformat_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_appimageformat() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
  return appimageformat_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_appimageformat() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
  if (!has_appimageformat()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return appimageformat_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_appimageformat(std::string* appimageformat) {
  if (appimageformat != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  appimageformat_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), appimageformat);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.appimageformat)
}

// optional string backgroundgctype = 2;
inline bool SystemPropertiesProto_DalvikVm::has_backgroundgctype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_backgroundgctype() {
  backgroundgctype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::backgroundgctype() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
  return backgroundgctype_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_backgroundgctype(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  backgroundgctype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
}
inline void SystemPropertiesProto_DalvikVm::set_backgroundgctype(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  backgroundgctype_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
}
inline void SystemPropertiesProto_DalvikVm::set_backgroundgctype(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  backgroundgctype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
}
inline void SystemPropertiesProto_DalvikVm::set_backgroundgctype(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  backgroundgctype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_backgroundgctype() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
  return backgroundgctype_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_backgroundgctype() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
  if (!has_backgroundgctype()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return backgroundgctype_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_backgroundgctype(std::string* backgroundgctype) {
  if (backgroundgctype != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  backgroundgctype_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), backgroundgctype);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.backgroundgctype)
}

// optional bool checkjni = 3;
inline bool SystemPropertiesProto_DalvikVm::has_checkjni() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_checkjni() {
  checkjni_ = false;
  _has_bits_[1] &= ~0x00000200u;
}
inline bool SystemPropertiesProto_DalvikVm::checkjni() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.checkjni)
  return checkjni_;
}
inline void SystemPropertiesProto_DalvikVm::set_checkjni(bool value) {
  _has_bits_[1] |= 0x00000200u;
  checkjni_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.checkjni)
}

// optional string dex2oat_filter = 4;
inline bool SystemPropertiesProto_DalvikVm::has_dex2oat_filter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_dex2oat_filter() {
  dex2oat_filter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::dex2oat_filter() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
  return dex2oat_filter_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_filter(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  dex2oat_filter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_filter(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  dex2oat_filter_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  dex2oat_filter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_filter(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  dex2oat_filter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_dex2oat_filter() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
  return dex2oat_filter_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_dex2oat_filter() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
  if (!has_dex2oat_filter()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return dex2oat_filter_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_dex2oat_filter(std::string* dex2oat_filter) {
  if (dex2oat_filter != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  dex2oat_filter_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dex2oat_filter);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.dex2oat_filter)
}

// optional string dex2oat_flags = 5;
inline bool SystemPropertiesProto_DalvikVm::has_dex2oat_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_dex2oat_flags() {
  dex2oat_flags_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::dex2oat_flags() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
  return dex2oat_flags_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_flags(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  dex2oat_flags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_flags(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  dex2oat_flags_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_flags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  dex2oat_flags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_flags(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  dex2oat_flags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_dex2oat_flags() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
  return dex2oat_flags_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_dex2oat_flags() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
  if (!has_dex2oat_flags()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return dex2oat_flags_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_dex2oat_flags(std::string* dex2oat_flags) {
  if (dex2oat_flags != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  dex2oat_flags_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dex2oat_flags);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.dex2oat_flags)
}

// optional int32 dex2oat_threads = 6;
inline bool SystemPropertiesProto_DalvikVm::has_dex2oat_threads() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_dex2oat_threads() {
  dex2oat_threads_ = 0;
  _has_bits_[1] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::dex2oat_threads() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.dex2oat_threads)
  return dex2oat_threads_;
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_threads(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000020u;
  dex2oat_threads_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.dex2oat_threads)
}

// optional string dex2oat_Xms = 7;
inline bool SystemPropertiesProto_DalvikVm::has_dex2oat_xms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_dex2oat_xms() {
  dex2oat_xms_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::dex2oat_xms() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
  return dex2oat_xms_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xms(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  dex2oat_xms_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xms(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  dex2oat_xms_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xms(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  dex2oat_xms_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xms(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  dex2oat_xms_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_dex2oat_xms() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
  return dex2oat_xms_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_dex2oat_xms() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
  if (!has_dex2oat_xms()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return dex2oat_xms_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_dex2oat_xms(std::string* dex2oat_xms) {
  if (dex2oat_xms != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  dex2oat_xms_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dex2oat_xms);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xms)
}

// optional string dex2oat_Xmx = 8;
inline bool SystemPropertiesProto_DalvikVm::has_dex2oat_xmx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_dex2oat_xmx() {
  dex2oat_xmx_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::dex2oat_xmx() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
  return dex2oat_xmx_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xmx(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  dex2oat_xmx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xmx(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  dex2oat_xmx_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xmx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  dex2oat_xmx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
}
inline void SystemPropertiesProto_DalvikVm::set_dex2oat_xmx(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  dex2oat_xmx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_dex2oat_xmx() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
  return dex2oat_xmx_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_dex2oat_xmx() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
  if (!has_dex2oat_xmx()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return dex2oat_xmx_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_dex2oat_xmx(std::string* dex2oat_xmx) {
  if (dex2oat_xmx != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  dex2oat_xmx_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dex2oat_xmx);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.dex2oat_Xmx)
}

// optional bool dexopt_secondary = 9;
inline bool SystemPropertiesProto_DalvikVm::has_dexopt_secondary() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_dexopt_secondary() {
  dexopt_secondary_ = false;
  _has_bits_[1] &= ~0x00000400u;
}
inline bool SystemPropertiesProto_DalvikVm::dexopt_secondary() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.dexopt_secondary)
  return dexopt_secondary_;
}
inline void SystemPropertiesProto_DalvikVm::set_dexopt_secondary(bool value) {
  _has_bits_[1] |= 0x00000400u;
  dexopt_secondary_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.dexopt_secondary)
}

// optional string execution_mode = 10;
inline bool SystemPropertiesProto_DalvikVm::has_execution_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_execution_mode() {
  execution_mode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::execution_mode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
  return execution_mode_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_execution_mode(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  execution_mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
}
inline void SystemPropertiesProto_DalvikVm::set_execution_mode(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  execution_mode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
}
inline void SystemPropertiesProto_DalvikVm::set_execution_mode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  execution_mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
}
inline void SystemPropertiesProto_DalvikVm::set_execution_mode(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  execution_mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_execution_mode() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
  return execution_mode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_execution_mode() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
  if (!has_execution_mode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return execution_mode_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_execution_mode(std::string* execution_mode) {
  if (execution_mode != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  execution_mode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), execution_mode);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.execution_mode)
}

// optional string extra_opts = 11;
inline bool SystemPropertiesProto_DalvikVm::has_extra_opts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_extra_opts() {
  extra_opts_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::extra_opts() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
  return extra_opts_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_extra_opts(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  extra_opts_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
}
inline void SystemPropertiesProto_DalvikVm::set_extra_opts(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  extra_opts_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
}
inline void SystemPropertiesProto_DalvikVm::set_extra_opts(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  extra_opts_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
}
inline void SystemPropertiesProto_DalvikVm::set_extra_opts(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  extra_opts_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_extra_opts() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
  return extra_opts_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_extra_opts() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
  if (!has_extra_opts()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return extra_opts_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_extra_opts(std::string* extra_opts) {
  if (extra_opts != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  extra_opts_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), extra_opts);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.extra_opts)
}

// optional string gctype = 12;
inline bool SystemPropertiesProto_DalvikVm::has_gctype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_gctype() {
  gctype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::gctype() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.gctype)
  return gctype_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_gctype(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  gctype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.gctype)
}
inline void SystemPropertiesProto_DalvikVm::set_gctype(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  gctype_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.gctype)
}
inline void SystemPropertiesProto_DalvikVm::set_gctype(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  gctype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.gctype)
}
inline void SystemPropertiesProto_DalvikVm::set_gctype(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  gctype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.gctype)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_gctype() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.gctype)
  return gctype_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_gctype() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.gctype)
  if (!has_gctype()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return gctype_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_gctype(std::string* gctype) {
  if (gctype != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  gctype_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gctype);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.gctype)
}

// optional string heapgrowthlimit = 13;
inline bool SystemPropertiesProto_DalvikVm::has_heapgrowthlimit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_heapgrowthlimit() {
  heapgrowthlimit_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::heapgrowthlimit() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
  return heapgrowthlimit_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_heapgrowthlimit(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  heapgrowthlimit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
}
inline void SystemPropertiesProto_DalvikVm::set_heapgrowthlimit(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  heapgrowthlimit_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
}
inline void SystemPropertiesProto_DalvikVm::set_heapgrowthlimit(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  heapgrowthlimit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
}
inline void SystemPropertiesProto_DalvikVm::set_heapgrowthlimit(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  heapgrowthlimit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_heapgrowthlimit() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
  return heapgrowthlimit_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_heapgrowthlimit() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
  if (!has_heapgrowthlimit()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return heapgrowthlimit_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_heapgrowthlimit(std::string* heapgrowthlimit) {
  if (heapgrowthlimit != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  heapgrowthlimit_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heapgrowthlimit);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.heapgrowthlimit)
}

// optional string heapmaxfree = 14;
inline bool SystemPropertiesProto_DalvikVm::has_heapmaxfree() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_heapmaxfree() {
  heapmaxfree_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::heapmaxfree() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
  return heapmaxfree_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_heapmaxfree(const std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  heapmaxfree_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
}
inline void SystemPropertiesProto_DalvikVm::set_heapmaxfree(std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  heapmaxfree_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
}
inline void SystemPropertiesProto_DalvikVm::set_heapmaxfree(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  heapmaxfree_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
}
inline void SystemPropertiesProto_DalvikVm::set_heapmaxfree(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  heapmaxfree_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_heapmaxfree() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
  return heapmaxfree_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_heapmaxfree() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
  if (!has_heapmaxfree()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return heapmaxfree_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_heapmaxfree(std::string* heapmaxfree) {
  if (heapmaxfree != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  heapmaxfree_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heapmaxfree);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.heapmaxfree)
}

// optional string heapminfree = 15;
inline bool SystemPropertiesProto_DalvikVm::has_heapminfree() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_heapminfree() {
  heapminfree_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::heapminfree() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
  return heapminfree_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_heapminfree(const std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  heapminfree_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
}
inline void SystemPropertiesProto_DalvikVm::set_heapminfree(std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  heapminfree_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
}
inline void SystemPropertiesProto_DalvikVm::set_heapminfree(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  heapminfree_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
}
inline void SystemPropertiesProto_DalvikVm::set_heapminfree(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  heapminfree_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_heapminfree() {
  _has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
  return heapminfree_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_heapminfree() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
  if (!has_heapminfree()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return heapminfree_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_heapminfree(std::string* heapminfree) {
  if (heapminfree != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  heapminfree_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heapminfree);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.heapminfree)
}

// optional string heapsize = 16;
inline bool SystemPropertiesProto_DalvikVm::has_heapsize() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_heapsize() {
  heapsize_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00001000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::heapsize() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.heapsize)
  return heapsize_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_heapsize(const std::string& value) {
  _has_bits_[0] |= 0x00001000u;
  heapsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.heapsize)
}
inline void SystemPropertiesProto_DalvikVm::set_heapsize(std::string&& value) {
  _has_bits_[0] |= 0x00001000u;
  heapsize_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.heapsize)
}
inline void SystemPropertiesProto_DalvikVm::set_heapsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00001000u;
  heapsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.heapsize)
}
inline void SystemPropertiesProto_DalvikVm::set_heapsize(const char* value, size_t size) {
  _has_bits_[0] |= 0x00001000u;
  heapsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.heapsize)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_heapsize() {
  _has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.heapsize)
  return heapsize_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_heapsize() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.heapsize)
  if (!has_heapsize()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00001000u;
  return heapsize_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_heapsize(std::string* heapsize) {
  if (heapsize != nullptr) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  heapsize_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heapsize);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.heapsize)
}

// optional string heapstartsize = 17;
inline bool SystemPropertiesProto_DalvikVm::has_heapstartsize() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_heapstartsize() {
  heapstartsize_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00002000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::heapstartsize() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
  return heapstartsize_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_heapstartsize(const std::string& value) {
  _has_bits_[0] |= 0x00002000u;
  heapstartsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
}
inline void SystemPropertiesProto_DalvikVm::set_heapstartsize(std::string&& value) {
  _has_bits_[0] |= 0x00002000u;
  heapstartsize_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
}
inline void SystemPropertiesProto_DalvikVm::set_heapstartsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00002000u;
  heapstartsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
}
inline void SystemPropertiesProto_DalvikVm::set_heapstartsize(const char* value, size_t size) {
  _has_bits_[0] |= 0x00002000u;
  heapstartsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_heapstartsize() {
  _has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
  return heapstartsize_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_heapstartsize() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
  if (!has_heapstartsize()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00002000u;
  return heapstartsize_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_heapstartsize(std::string* heapstartsize) {
  if (heapstartsize != nullptr) {
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  heapstartsize_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heapstartsize);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.heapstartsize)
}

// optional double heaptargetutilization = 18;
inline bool SystemPropertiesProto_DalvikVm::has_heaptargetutilization() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_heaptargetutilization() {
  heaptargetutilization_ = 0;
  _has_bits_[1] &= ~0x00000080u;
}
inline double SystemPropertiesProto_DalvikVm::heaptargetutilization() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.heaptargetutilization)
  return heaptargetutilization_;
}
inline void SystemPropertiesProto_DalvikVm::set_heaptargetutilization(double value) {
  _has_bits_[1] |= 0x00000080u;
  heaptargetutilization_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.heaptargetutilization)
}

// optional int32 hot_startup_method_samples = 19;
inline bool SystemPropertiesProto_DalvikVm::has_hot_startup_method_samples() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_hot_startup_method_samples() {
  hot_startup_method_samples_ = 0;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::hot_startup_method_samples() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.hot_startup_method_samples)
  return hot_startup_method_samples_;
}
inline void SystemPropertiesProto_DalvikVm::set_hot_startup_method_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000040u;
  hot_startup_method_samples_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.hot_startup_method_samples)
}

// optional string image_dex2oat_filter = 20;
inline bool SystemPropertiesProto_DalvikVm::has_image_dex2oat_filter() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_image_dex2oat_filter() {
  image_dex2oat_filter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00004000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::image_dex2oat_filter() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
  return image_dex2oat_filter_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_filter(const std::string& value) {
  _has_bits_[0] |= 0x00004000u;
  image_dex2oat_filter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_filter(std::string&& value) {
  _has_bits_[0] |= 0x00004000u;
  image_dex2oat_filter_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00004000u;
  image_dex2oat_filter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_filter(const char* value, size_t size) {
  _has_bits_[0] |= 0x00004000u;
  image_dex2oat_filter_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_image_dex2oat_filter() {
  _has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
  return image_dex2oat_filter_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_image_dex2oat_filter() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
  if (!has_image_dex2oat_filter()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00004000u;
  return image_dex2oat_filter_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_image_dex2oat_filter(std::string* image_dex2oat_filter) {
  if (image_dex2oat_filter != nullptr) {
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  image_dex2oat_filter_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image_dex2oat_filter);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_filter)
}

// optional string image_dex2oat_flags = 21;
inline bool SystemPropertiesProto_DalvikVm::has_image_dex2oat_flags() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_image_dex2oat_flags() {
  image_dex2oat_flags_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00008000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::image_dex2oat_flags() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
  return image_dex2oat_flags_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_flags(const std::string& value) {
  _has_bits_[0] |= 0x00008000u;
  image_dex2oat_flags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_flags(std::string&& value) {
  _has_bits_[0] |= 0x00008000u;
  image_dex2oat_flags_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_flags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00008000u;
  image_dex2oat_flags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_flags(const char* value, size_t size) {
  _has_bits_[0] |= 0x00008000u;
  image_dex2oat_flags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_image_dex2oat_flags() {
  _has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
  return image_dex2oat_flags_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_image_dex2oat_flags() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
  if (!has_image_dex2oat_flags()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00008000u;
  return image_dex2oat_flags_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_image_dex2oat_flags(std::string* image_dex2oat_flags) {
  if (image_dex2oat_flags != nullptr) {
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  image_dex2oat_flags_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image_dex2oat_flags);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_flags)
}

// optional int32 image_dex2oat_threads = 22;
inline bool SystemPropertiesProto_DalvikVm::has_image_dex2oat_threads() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_image_dex2oat_threads() {
  image_dex2oat_threads_ = 0;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::image_dex2oat_threads() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_threads)
  return image_dex2oat_threads_;
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_threads(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000100u;
  image_dex2oat_threads_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_threads)
}

// optional string image_dex2oat_Xms = 23;
inline bool SystemPropertiesProto_DalvikVm::has_image_dex2oat_xms() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_image_dex2oat_xms() {
  image_dex2oat_xms_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00010000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::image_dex2oat_xms() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
  return image_dex2oat_xms_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xms(const std::string& value) {
  _has_bits_[0] |= 0x00010000u;
  image_dex2oat_xms_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xms(std::string&& value) {
  _has_bits_[0] |= 0x00010000u;
  image_dex2oat_xms_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xms(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00010000u;
  image_dex2oat_xms_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xms(const char* value, size_t size) {
  _has_bits_[0] |= 0x00010000u;
  image_dex2oat_xms_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_image_dex2oat_xms() {
  _has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
  return image_dex2oat_xms_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_image_dex2oat_xms() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
  if (!has_image_dex2oat_xms()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00010000u;
  return image_dex2oat_xms_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_image_dex2oat_xms(std::string* image_dex2oat_xms) {
  if (image_dex2oat_xms != nullptr) {
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  image_dex2oat_xms_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image_dex2oat_xms);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xms)
}

// optional string image_dex2oat_Xmx = 24;
inline bool SystemPropertiesProto_DalvikVm::has_image_dex2oat_xmx() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_image_dex2oat_xmx() {
  image_dex2oat_xmx_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00020000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::image_dex2oat_xmx() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
  return image_dex2oat_xmx_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xmx(const std::string& value) {
  _has_bits_[0] |= 0x00020000u;
  image_dex2oat_xmx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xmx(std::string&& value) {
  _has_bits_[0] |= 0x00020000u;
  image_dex2oat_xmx_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xmx(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00020000u;
  image_dex2oat_xmx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
}
inline void SystemPropertiesProto_DalvikVm::set_image_dex2oat_xmx(const char* value, size_t size) {
  _has_bits_[0] |= 0x00020000u;
  image_dex2oat_xmx_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_image_dex2oat_xmx() {
  _has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
  return image_dex2oat_xmx_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_image_dex2oat_xmx() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
  if (!has_image_dex2oat_xmx()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00020000u;
  return image_dex2oat_xmx_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_image_dex2oat_xmx(std::string* image_dex2oat_xmx) {
  if (image_dex2oat_xmx != nullptr) {
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  image_dex2oat_xmx_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image_dex2oat_xmx);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.image_dex2oat_Xmx)
}

// optional string isa_arm_features = 25;
inline bool SystemPropertiesProto_DalvikVm::has_isa_arm_features() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_arm_features() {
  isa_arm_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00040000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_arm_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
  return isa_arm_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_features(const std::string& value) {
  _has_bits_[0] |= 0x00040000u;
  isa_arm_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_features(std::string&& value) {
  _has_bits_[0] |= 0x00040000u;
  isa_arm_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00040000u;
  isa_arm_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x00040000u;
  isa_arm_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_arm_features() {
  _has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
  return isa_arm_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_arm_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
  if (!has_isa_arm_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00040000u;
  return isa_arm_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_arm_features(std::string* isa_arm_features) {
  if (isa_arm_features != nullptr) {
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  isa_arm_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_arm_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_arm_features)
}

// optional string isa_arm_variant = 26;
inline bool SystemPropertiesProto_DalvikVm::has_isa_arm_variant() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_arm_variant() {
  isa_arm_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00080000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_arm_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
  return isa_arm_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_variant(const std::string& value) {
  _has_bits_[0] |= 0x00080000u;
  isa_arm_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_variant(std::string&& value) {
  _has_bits_[0] |= 0x00080000u;
  isa_arm_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00080000u;
  isa_arm_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x00080000u;
  isa_arm_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_arm_variant() {
  _has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
  return isa_arm_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_arm_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
  if (!has_isa_arm_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00080000u;
  return isa_arm_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_arm_variant(std::string* isa_arm_variant) {
  if (isa_arm_variant != nullptr) {
    _has_bits_[0] |= 0x00080000u;
  } else {
    _has_bits_[0] &= ~0x00080000u;
  }
  isa_arm_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_arm_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_arm_variant)
}

// optional string isa_arm64_features = 27;
inline bool SystemPropertiesProto_DalvikVm::has_isa_arm64_features() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_arm64_features() {
  isa_arm64_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00100000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_arm64_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
  return isa_arm64_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_features(const std::string& value) {
  _has_bits_[0] |= 0x00100000u;
  isa_arm64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_features(std::string&& value) {
  _has_bits_[0] |= 0x00100000u;
  isa_arm64_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00100000u;
  isa_arm64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x00100000u;
  isa_arm64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_arm64_features() {
  _has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
  return isa_arm64_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_arm64_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
  if (!has_isa_arm64_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00100000u;
  return isa_arm64_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_arm64_features(std::string* isa_arm64_features) {
  if (isa_arm64_features != nullptr) {
    _has_bits_[0] |= 0x00100000u;
  } else {
    _has_bits_[0] &= ~0x00100000u;
  }
  isa_arm64_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_arm64_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_features)
}

// optional string isa_arm64_variant = 28;
inline bool SystemPropertiesProto_DalvikVm::has_isa_arm64_variant() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_arm64_variant() {
  isa_arm64_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00200000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_arm64_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
  return isa_arm64_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_variant(const std::string& value) {
  _has_bits_[0] |= 0x00200000u;
  isa_arm64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_variant(std::string&& value) {
  _has_bits_[0] |= 0x00200000u;
  isa_arm64_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00200000u;
  isa_arm64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_arm64_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x00200000u;
  isa_arm64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_arm64_variant() {
  _has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
  return isa_arm64_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_arm64_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
  if (!has_isa_arm64_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00200000u;
  return isa_arm64_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_arm64_variant(std::string* isa_arm64_variant) {
  if (isa_arm64_variant != nullptr) {
    _has_bits_[0] |= 0x00200000u;
  } else {
    _has_bits_[0] &= ~0x00200000u;
  }
  isa_arm64_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_arm64_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_arm64_variant)
}

// optional string isa_mips_features = 29;
inline bool SystemPropertiesProto_DalvikVm::has_isa_mips_features() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_mips_features() {
  isa_mips_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00400000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_mips_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
  return isa_mips_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_features(const std::string& value) {
  _has_bits_[0] |= 0x00400000u;
  isa_mips_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_features(std::string&& value) {
  _has_bits_[0] |= 0x00400000u;
  isa_mips_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00400000u;
  isa_mips_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x00400000u;
  isa_mips_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_mips_features() {
  _has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
  return isa_mips_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_mips_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
  if (!has_isa_mips_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00400000u;
  return isa_mips_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_mips_features(std::string* isa_mips_features) {
  if (isa_mips_features != nullptr) {
    _has_bits_[0] |= 0x00400000u;
  } else {
    _has_bits_[0] &= ~0x00400000u;
  }
  isa_mips_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_mips_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_mips_features)
}

// optional string isa_mips_variant = 30;
inline bool SystemPropertiesProto_DalvikVm::has_isa_mips_variant() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_mips_variant() {
  isa_mips_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00800000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_mips_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
  return isa_mips_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_variant(const std::string& value) {
  _has_bits_[0] |= 0x00800000u;
  isa_mips_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_variant(std::string&& value) {
  _has_bits_[0] |= 0x00800000u;
  isa_mips_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00800000u;
  isa_mips_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x00800000u;
  isa_mips_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_mips_variant() {
  _has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
  return isa_mips_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_mips_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
  if (!has_isa_mips_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00800000u;
  return isa_mips_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_mips_variant(std::string* isa_mips_variant) {
  if (isa_mips_variant != nullptr) {
    _has_bits_[0] |= 0x00800000u;
  } else {
    _has_bits_[0] &= ~0x00800000u;
  }
  isa_mips_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_mips_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_mips_variant)
}

// optional string isa_mips64_features = 31;
inline bool SystemPropertiesProto_DalvikVm::has_isa_mips64_features() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_mips64_features() {
  isa_mips64_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x01000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_mips64_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
  return isa_mips64_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_features(const std::string& value) {
  _has_bits_[0] |= 0x01000000u;
  isa_mips64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_features(std::string&& value) {
  _has_bits_[0] |= 0x01000000u;
  isa_mips64_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x01000000u;
  isa_mips64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x01000000u;
  isa_mips64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_mips64_features() {
  _has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
  return isa_mips64_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_mips64_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
  if (!has_isa_mips64_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x01000000u;
  return isa_mips64_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_mips64_features(std::string* isa_mips64_features) {
  if (isa_mips64_features != nullptr) {
    _has_bits_[0] |= 0x01000000u;
  } else {
    _has_bits_[0] &= ~0x01000000u;
  }
  isa_mips64_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_mips64_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_features)
}

// optional string isa_mips64_variant = 32;
inline bool SystemPropertiesProto_DalvikVm::has_isa_mips64_variant() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_mips64_variant() {
  isa_mips64_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x02000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_mips64_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
  return isa_mips64_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_variant(const std::string& value) {
  _has_bits_[0] |= 0x02000000u;
  isa_mips64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_variant(std::string&& value) {
  _has_bits_[0] |= 0x02000000u;
  isa_mips64_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x02000000u;
  isa_mips64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_mips64_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x02000000u;
  isa_mips64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_mips64_variant() {
  _has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
  return isa_mips64_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_mips64_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
  if (!has_isa_mips64_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x02000000u;
  return isa_mips64_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_mips64_variant(std::string* isa_mips64_variant) {
  if (isa_mips64_variant != nullptr) {
    _has_bits_[0] |= 0x02000000u;
  } else {
    _has_bits_[0] &= ~0x02000000u;
  }
  isa_mips64_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_mips64_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_mips64_variant)
}

// optional string isa_unknown_features = 33;
inline bool SystemPropertiesProto_DalvikVm::has_isa_unknown_features() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_unknown_features() {
  isa_unknown_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x04000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_unknown_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
  return isa_unknown_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_features(const std::string& value) {
  _has_bits_[0] |= 0x04000000u;
  isa_unknown_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_features(std::string&& value) {
  _has_bits_[0] |= 0x04000000u;
  isa_unknown_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x04000000u;
  isa_unknown_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x04000000u;
  isa_unknown_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_unknown_features() {
  _has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
  return isa_unknown_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_unknown_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
  if (!has_isa_unknown_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x04000000u;
  return isa_unknown_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_unknown_features(std::string* isa_unknown_features) {
  if (isa_unknown_features != nullptr) {
    _has_bits_[0] |= 0x04000000u;
  } else {
    _has_bits_[0] &= ~0x04000000u;
  }
  isa_unknown_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_unknown_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_features)
}

// optional string isa_unknown_variant = 34;
inline bool SystemPropertiesProto_DalvikVm::has_isa_unknown_variant() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_unknown_variant() {
  isa_unknown_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x08000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_unknown_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
  return isa_unknown_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_variant(const std::string& value) {
  _has_bits_[0] |= 0x08000000u;
  isa_unknown_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_variant(std::string&& value) {
  _has_bits_[0] |= 0x08000000u;
  isa_unknown_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x08000000u;
  isa_unknown_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_unknown_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x08000000u;
  isa_unknown_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_unknown_variant() {
  _has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
  return isa_unknown_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_unknown_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
  if (!has_isa_unknown_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x08000000u;
  return isa_unknown_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_unknown_variant(std::string* isa_unknown_variant) {
  if (isa_unknown_variant != nullptr) {
    _has_bits_[0] |= 0x08000000u;
  } else {
    _has_bits_[0] &= ~0x08000000u;
  }
  isa_unknown_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_unknown_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_unknown_variant)
}

// optional string isa_x86_64_features = 35;
inline bool SystemPropertiesProto_DalvikVm::has_isa_x86_64_features() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_x86_64_features() {
  isa_x86_64_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x10000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_x86_64_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
  return isa_x86_64_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_features(const std::string& value) {
  _has_bits_[0] |= 0x10000000u;
  isa_x86_64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_features(std::string&& value) {
  _has_bits_[0] |= 0x10000000u;
  isa_x86_64_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x10000000u;
  isa_x86_64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x10000000u;
  isa_x86_64_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_x86_64_features() {
  _has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
  return isa_x86_64_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_x86_64_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
  if (!has_isa_x86_64_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x10000000u;
  return isa_x86_64_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_x86_64_features(std::string* isa_x86_64_features) {
  if (isa_x86_64_features != nullptr) {
    _has_bits_[0] |= 0x10000000u;
  } else {
    _has_bits_[0] &= ~0x10000000u;
  }
  isa_x86_64_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_x86_64_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_features)
}

// optional string isa_x86_64_variant = 36;
inline bool SystemPropertiesProto_DalvikVm::has_isa_x86_64_variant() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_x86_64_variant() {
  isa_x86_64_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x20000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_x86_64_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
  return isa_x86_64_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_variant(const std::string& value) {
  _has_bits_[0] |= 0x20000000u;
  isa_x86_64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_variant(std::string&& value) {
  _has_bits_[0] |= 0x20000000u;
  isa_x86_64_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x20000000u;
  isa_x86_64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_64_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x20000000u;
  isa_x86_64_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_x86_64_variant() {
  _has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
  return isa_x86_64_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_x86_64_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
  if (!has_isa_x86_64_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x20000000u;
  return isa_x86_64_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_x86_64_variant(std::string* isa_x86_64_variant) {
  if (isa_x86_64_variant != nullptr) {
    _has_bits_[0] |= 0x20000000u;
  } else {
    _has_bits_[0] &= ~0x20000000u;
  }
  isa_x86_64_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_x86_64_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_x86_64_variant)
}

// optional string isa_x86_features = 37;
inline bool SystemPropertiesProto_DalvikVm::has_isa_x86_features() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_x86_features() {
  isa_x86_features_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x40000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_x86_features() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
  return isa_x86_features_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_features(const std::string& value) {
  _has_bits_[0] |= 0x40000000u;
  isa_x86_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_features(std::string&& value) {
  _has_bits_[0] |= 0x40000000u;
  isa_x86_features_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x40000000u;
  isa_x86_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_features(const char* value, size_t size) {
  _has_bits_[0] |= 0x40000000u;
  isa_x86_features_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_x86_features() {
  _has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
  return isa_x86_features_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_x86_features() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
  if (!has_isa_x86_features()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x40000000u;
  return isa_x86_features_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_x86_features(std::string* isa_x86_features) {
  if (isa_x86_features != nullptr) {
    _has_bits_[0] |= 0x40000000u;
  } else {
    _has_bits_[0] &= ~0x40000000u;
  }
  isa_x86_features_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_x86_features);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_x86_features)
}

// optional string isa_x86_variant = 38;
inline bool SystemPropertiesProto_DalvikVm::has_isa_x86_variant() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_isa_x86_variant() {
  isa_x86_variant_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x80000000u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::isa_x86_variant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
  return isa_x86_variant_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_variant(const std::string& value) {
  _has_bits_[0] |= 0x80000000u;
  isa_x86_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_variant(std::string&& value) {
  _has_bits_[0] |= 0x80000000u;
  isa_x86_variant_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_variant(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x80000000u;
  isa_x86_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
}
inline void SystemPropertiesProto_DalvikVm::set_isa_x86_variant(const char* value, size_t size) {
  _has_bits_[0] |= 0x80000000u;
  isa_x86_variant_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_isa_x86_variant() {
  _has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
  return isa_x86_variant_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_isa_x86_variant() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
  if (!has_isa_x86_variant()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x80000000u;
  return isa_x86_variant_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_isa_x86_variant(std::string* isa_x86_variant) {
  if (isa_x86_variant != nullptr) {
    _has_bits_[0] |= 0x80000000u;
  } else {
    _has_bits_[0] &= ~0x80000000u;
  }
  isa_x86_variant_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), isa_x86_variant);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.isa_x86_variant)
}

// optional string jitinitialsize = 39;
inline bool SystemPropertiesProto_DalvikVm::has_jitinitialsize() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_jitinitialsize() {
  jitinitialsize_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::jitinitialsize() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
  return jitinitialsize_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_jitinitialsize(const std::string& value) {
  _has_bits_[1] |= 0x00000001u;
  jitinitialsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
}
inline void SystemPropertiesProto_DalvikVm::set_jitinitialsize(std::string&& value) {
  _has_bits_[1] |= 0x00000001u;
  jitinitialsize_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
}
inline void SystemPropertiesProto_DalvikVm::set_jitinitialsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000001u;
  jitinitialsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
}
inline void SystemPropertiesProto_DalvikVm::set_jitinitialsize(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000001u;
  jitinitialsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_jitinitialsize() {
  _has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
  return jitinitialsize_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_jitinitialsize() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
  if (!has_jitinitialsize()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000001u;
  return jitinitialsize_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_jitinitialsize(std::string* jitinitialsize) {
  if (jitinitialsize != nullptr) {
    _has_bits_[1] |= 0x00000001u;
  } else {
    _has_bits_[1] &= ~0x00000001u;
  }
  jitinitialsize_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), jitinitialsize);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.jitinitialsize)
}

// optional string jitmaxsize = 40;
inline bool SystemPropertiesProto_DalvikVm::has_jitmaxsize() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_jitmaxsize() {
  jitmaxsize_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::jitmaxsize() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
  return jitmaxsize_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_jitmaxsize(const std::string& value) {
  _has_bits_[1] |= 0x00000002u;
  jitmaxsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
}
inline void SystemPropertiesProto_DalvikVm::set_jitmaxsize(std::string&& value) {
  _has_bits_[1] |= 0x00000002u;
  jitmaxsize_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
}
inline void SystemPropertiesProto_DalvikVm::set_jitmaxsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000002u;
  jitmaxsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
}
inline void SystemPropertiesProto_DalvikVm::set_jitmaxsize(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000002u;
  jitmaxsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_jitmaxsize() {
  _has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
  return jitmaxsize_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_jitmaxsize() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
  if (!has_jitmaxsize()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000002u;
  return jitmaxsize_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_jitmaxsize(std::string* jitmaxsize) {
  if (jitmaxsize != nullptr) {
    _has_bits_[1] |= 0x00000002u;
  } else {
    _has_bits_[1] &= ~0x00000002u;
  }
  jitmaxsize_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), jitmaxsize);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.jitmaxsize)
}

// optional int32 jitprithreadweight = 41;
inline bool SystemPropertiesProto_DalvikVm::has_jitprithreadweight() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_jitprithreadweight() {
  jitprithreadweight_ = 0;
  _has_bits_[1] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::jitprithreadweight() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.jitprithreadweight)
  return jitprithreadweight_;
}
inline void SystemPropertiesProto_DalvikVm::set_jitprithreadweight(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00002000u;
  jitprithreadweight_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.jitprithreadweight)
}

// optional int32 jitthreshold = 42;
inline bool SystemPropertiesProto_DalvikVm::has_jitthreshold() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_jitthreshold() {
  jitthreshold_ = 0;
  _has_bits_[1] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::jitthreshold() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.jitthreshold)
  return jitthreshold_;
}
inline void SystemPropertiesProto_DalvikVm::set_jitthreshold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00004000u;
  jitthreshold_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.jitthreshold)
}

// optional int32 jittransitionweight = 43;
inline bool SystemPropertiesProto_DalvikVm::has_jittransitionweight() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_jittransitionweight() {
  jittransitionweight_ = 0;
  _has_bits_[1] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::jittransitionweight() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.jittransitionweight)
  return jittransitionweight_;
}
inline void SystemPropertiesProto_DalvikVm::set_jittransitionweight(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00008000u;
  jittransitionweight_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.jittransitionweight)
}

// optional string jniopts = 44;
inline bool SystemPropertiesProto_DalvikVm::has_jniopts() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_jniopts() {
  jniopts_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::jniopts() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.jniopts)
  return jniopts_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_jniopts(const std::string& value) {
  _has_bits_[1] |= 0x00000004u;
  jniopts_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.jniopts)
}
inline void SystemPropertiesProto_DalvikVm::set_jniopts(std::string&& value) {
  _has_bits_[1] |= 0x00000004u;
  jniopts_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.jniopts)
}
inline void SystemPropertiesProto_DalvikVm::set_jniopts(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000004u;
  jniopts_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.jniopts)
}
inline void SystemPropertiesProto_DalvikVm::set_jniopts(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000004u;
  jniopts_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.jniopts)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_jniopts() {
  _has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.jniopts)
  return jniopts_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_jniopts() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.jniopts)
  if (!has_jniopts()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000004u;
  return jniopts_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_jniopts(std::string* jniopts) {
  if (jniopts != nullptr) {
    _has_bits_[1] |= 0x00000004u;
  } else {
    _has_bits_[1] &= ~0x00000004u;
  }
  jniopts_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), jniopts);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.jniopts)
}

// optional int32 lockprof_threshold = 45;
inline bool SystemPropertiesProto_DalvikVm::has_lockprof_threshold() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_lockprof_threshold() {
  lockprof_threshold_ = 0;
  _has_bits_[1] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::lockprof_threshold() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.lockprof_threshold)
  return lockprof_threshold_;
}
inline void SystemPropertiesProto_DalvikVm::set_lockprof_threshold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00010000u;
  lockprof_threshold_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.lockprof_threshold)
}

// optional bool method_trace = 46;
inline bool SystemPropertiesProto_DalvikVm::has_method_trace() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_method_trace() {
  method_trace_ = false;
  _has_bits_[1] &= ~0x00000800u;
}
inline bool SystemPropertiesProto_DalvikVm::method_trace() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.method_trace)
  return method_trace_;
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace(bool value) {
  _has_bits_[1] |= 0x00000800u;
  method_trace_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.method_trace)
}

// optional string method_trace_file = 47;
inline bool SystemPropertiesProto_DalvikVm::has_method_trace_file() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_method_trace_file() {
  method_trace_file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::method_trace_file() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
  return method_trace_file_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace_file(const std::string& value) {
  _has_bits_[1] |= 0x00000008u;
  method_trace_file_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace_file(std::string&& value) {
  _has_bits_[1] |= 0x00000008u;
  method_trace_file_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000008u;
  method_trace_file_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace_file(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000008u;
  method_trace_file_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_method_trace_file() {
  _has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
  return method_trace_file_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_method_trace_file() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
  if (!has_method_trace_file()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000008u;
  return method_trace_file_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_method_trace_file(std::string* method_trace_file) {
  if (method_trace_file != nullptr) {
    _has_bits_[1] |= 0x00000008u;
  } else {
    _has_bits_[1] &= ~0x00000008u;
  }
  method_trace_file_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), method_trace_file);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.method_trace_file)
}

// optional int32 method_trace_file_siz = 48;
inline bool SystemPropertiesProto_DalvikVm::has_method_trace_file_siz() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_method_trace_file_siz() {
  method_trace_file_siz_ = 0;
  _has_bits_[1] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::method_trace_file_siz() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.method_trace_file_siz)
  return method_trace_file_siz_;
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace_file_siz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00020000u;
  method_trace_file_siz_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.method_trace_file_siz)
}

// optional bool method_trace_stream = 49;
inline bool SystemPropertiesProto_DalvikVm::has_method_trace_stream() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_method_trace_stream() {
  method_trace_stream_ = false;
  _has_bits_[1] &= ~0x00001000u;
}
inline bool SystemPropertiesProto_DalvikVm::method_trace_stream() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.method_trace_stream)
  return method_trace_stream_;
}
inline void SystemPropertiesProto_DalvikVm::set_method_trace_stream(bool value) {
  _has_bits_[1] |= 0x00001000u;
  method_trace_stream_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.method_trace_stream)
}

// optional bool profilesystemserver = 50;
inline bool SystemPropertiesProto_DalvikVm::has_profilesystemserver() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_profilesystemserver() {
  profilesystemserver_ = false;
  _has_bits_[1] &= ~0x00040000u;
}
inline bool SystemPropertiesProto_DalvikVm::profilesystemserver() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.profilesystemserver)
  return profilesystemserver_;
}
inline void SystemPropertiesProto_DalvikVm::set_profilesystemserver(bool value) {
  _has_bits_[1] |= 0x00040000u;
  profilesystemserver_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.profilesystemserver)
}

// optional string stack_trace_dir = 51;
inline bool SystemPropertiesProto_DalvikVm::has_stack_trace_dir() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_stack_trace_dir() {
  stack_trace_dir_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_DalvikVm::stack_trace_dir() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
  return stack_trace_dir_.GetNoArena();
}
inline void SystemPropertiesProto_DalvikVm::set_stack_trace_dir(const std::string& value) {
  _has_bits_[1] |= 0x00000010u;
  stack_trace_dir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
}
inline void SystemPropertiesProto_DalvikVm::set_stack_trace_dir(std::string&& value) {
  _has_bits_[1] |= 0x00000010u;
  stack_trace_dir_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
}
inline void SystemPropertiesProto_DalvikVm::set_stack_trace_dir(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000010u;
  stack_trace_dir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
}
inline void SystemPropertiesProto_DalvikVm::set_stack_trace_dir(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000010u;
  stack_trace_dir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
}
inline std::string* SystemPropertiesProto_DalvikVm::mutable_stack_trace_dir() {
  _has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
  return stack_trace_dir_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_DalvikVm::release_stack_trace_dir() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
  if (!has_stack_trace_dir()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000010u;
  return stack_trace_dir_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_DalvikVm::set_allocated_stack_trace_dir(std::string* stack_trace_dir) {
  if (stack_trace_dir != nullptr) {
    _has_bits_[1] |= 0x00000010u;
  } else {
    _has_bits_[1] &= ~0x00000010u;
  }
  stack_trace_dir_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stack_trace_dir);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.DalvikVm.stack_trace_dir)
}

// optional bool usejit = 52;
inline bool SystemPropertiesProto_DalvikVm::has_usejit() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_usejit() {
  usejit_ = false;
  _has_bits_[1] &= ~0x00080000u;
}
inline bool SystemPropertiesProto_DalvikVm::usejit() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.usejit)
  return usejit_;
}
inline void SystemPropertiesProto_DalvikVm::set_usejit(bool value) {
  _has_bits_[1] |= 0x00080000u;
  usejit_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.usejit)
}

// optional bool usejitprofiles = 53;
inline bool SystemPropertiesProto_DalvikVm::has_usejitprofiles() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_usejitprofiles() {
  usejitprofiles_ = false;
  _has_bits_[1] &= ~0x00100000u;
}
inline bool SystemPropertiesProto_DalvikVm::usejitprofiles() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.usejitprofiles)
  return usejitprofiles_;
}
inline void SystemPropertiesProto_DalvikVm::set_usejitprofiles(bool value) {
  _has_bits_[1] |= 0x00100000u;
  usejitprofiles_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.usejitprofiles)
}

// optional int32 zygote_max_boot_retry = 54;
inline bool SystemPropertiesProto_DalvikVm::has_zygote_max_boot_retry() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void SystemPropertiesProto_DalvikVm::clear_zygote_max_boot_retry() {
  zygote_max_boot_retry_ = 0;
  _has_bits_[1] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_DalvikVm::zygote_max_boot_retry() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.DalvikVm.zygote_max_boot_retry)
  return zygote_max_boot_retry_;
}
inline void SystemPropertiesProto_DalvikVm::set_zygote_max_boot_retry(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00200000u;
  zygote_max_boot_retry_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.DalvikVm.zygote_max_boot_retry)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_InitSvc

// optional .android.os.SystemPropertiesProto.InitSvc.Status adbd = 1;
inline bool SystemPropertiesProto_InitSvc::has_adbd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_adbd() {
  adbd_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::adbd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.adbd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(adbd_);
}
inline void SystemPropertiesProto_InitSvc::set_adbd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  adbd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.adbd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status audioserver = 2;
inline bool SystemPropertiesProto_InitSvc::has_audioserver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_audioserver() {
  audioserver_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::audioserver() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.audioserver)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(audioserver_);
}
inline void SystemPropertiesProto_InitSvc::set_audioserver(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  audioserver_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.audioserver)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status bootanim = 3;
inline bool SystemPropertiesProto_InitSvc::has_bootanim() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_bootanim() {
  bootanim_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::bootanim() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.bootanim)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(bootanim_);
}
inline void SystemPropertiesProto_InitSvc::set_bootanim(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  bootanim_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.bootanim)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status bufferhubd = 4;
inline bool SystemPropertiesProto_InitSvc::has_bufferhubd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_bufferhubd() {
  bufferhubd_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::bufferhubd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.bufferhubd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(bufferhubd_);
}
inline void SystemPropertiesProto_InitSvc::set_bufferhubd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  bufferhubd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.bufferhubd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status cameraserver = 5;
inline bool SystemPropertiesProto_InitSvc::has_cameraserver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_cameraserver() {
  cameraserver_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::cameraserver() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.cameraserver)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(cameraserver_);
}
inline void SystemPropertiesProto_InitSvc::set_cameraserver(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  cameraserver_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.cameraserver)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status clear_bcb = 6;
inline bool SystemPropertiesProto_InitSvc::has_clear_bcb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_clear_bcb() {
  clear_bcb_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::clear_bcb() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.clear_bcb)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(clear_bcb_);
}
inline void SystemPropertiesProto_InitSvc::set_clear_bcb(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  clear_bcb_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.clear_bcb)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status drm = 7;
inline bool SystemPropertiesProto_InitSvc::has_drm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_drm() {
  drm_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::drm() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.drm)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(drm_);
}
inline void SystemPropertiesProto_InitSvc::set_drm(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  drm_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.drm)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status gatekeeperd = 8;
inline bool SystemPropertiesProto_InitSvc::has_gatekeeperd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_gatekeeperd() {
  gatekeeperd_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::gatekeeperd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.gatekeeperd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(gatekeeperd_);
}
inline void SystemPropertiesProto_InitSvc::set_gatekeeperd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  gatekeeperd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.gatekeeperd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status healthd = 9;
inline bool SystemPropertiesProto_InitSvc::has_healthd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_healthd() {
  healthd_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::healthd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.healthd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(healthd_);
}
inline void SystemPropertiesProto_InitSvc::set_healthd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  healthd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.healthd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status hidl_memory = 10;
inline bool SystemPropertiesProto_InitSvc::has_hidl_memory() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_hidl_memory() {
  hidl_memory_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::hidl_memory() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.hidl_memory)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(hidl_memory_);
}
inline void SystemPropertiesProto_InitSvc::set_hidl_memory(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000200u;
  hidl_memory_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.hidl_memory)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status hostapd = 11;
inline bool SystemPropertiesProto_InitSvc::has_hostapd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_hostapd() {
  hostapd_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::hostapd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.hostapd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(hostapd_);
}
inline void SystemPropertiesProto_InitSvc::set_hostapd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000400u;
  hostapd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.hostapd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status hwservicemanager = 12;
inline bool SystemPropertiesProto_InitSvc::has_hwservicemanager() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_hwservicemanager() {
  hwservicemanager_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::hwservicemanager() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.hwservicemanager)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(hwservicemanager_);
}
inline void SystemPropertiesProto_InitSvc::set_hwservicemanager(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00000800u;
  hwservicemanager_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.hwservicemanager)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status installd = 13;
inline bool SystemPropertiesProto_InitSvc::has_installd() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_installd() {
  installd_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::installd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.installd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(installd_);
}
inline void SystemPropertiesProto_InitSvc::set_installd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00001000u;
  installd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.installd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status keystore = 14;
inline bool SystemPropertiesProto_InitSvc::has_keystore() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_keystore() {
  keystore_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::keystore() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.keystore)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(keystore_);
}
inline void SystemPropertiesProto_InitSvc::set_keystore(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00002000u;
  keystore_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.keystore)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status lmkd = 15;
inline bool SystemPropertiesProto_InitSvc::has_lmkd() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_lmkd() {
  lmkd_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::lmkd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.lmkd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(lmkd_);
}
inline void SystemPropertiesProto_InitSvc::set_lmkd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00004000u;
  lmkd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.lmkd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status logd = 16;
inline bool SystemPropertiesProto_InitSvc::has_logd() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_logd() {
  logd_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::logd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.logd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(logd_);
}
inline void SystemPropertiesProto_InitSvc::set_logd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00008000u;
  logd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.logd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status logd_reinit = 17;
inline bool SystemPropertiesProto_InitSvc::has_logd_reinit() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_logd_reinit() {
  logd_reinit_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::logd_reinit() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.logd_reinit)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(logd_reinit_);
}
inline void SystemPropertiesProto_InitSvc::set_logd_reinit(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00010000u;
  logd_reinit_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.logd_reinit)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status media = 18;
inline bool SystemPropertiesProto_InitSvc::has_media() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_media() {
  media_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::media() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.media)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(media_);
}
inline void SystemPropertiesProto_InitSvc::set_media(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00020000u;
  media_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.media)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status mediadrm = 19;
inline bool SystemPropertiesProto_InitSvc::has_mediadrm() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_mediadrm() {
  mediadrm_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::mediadrm() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.mediadrm)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(mediadrm_);
}
inline void SystemPropertiesProto_InitSvc::set_mediadrm(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00040000u;
  mediadrm_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.mediadrm)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status mediaextractor = 20;
inline bool SystemPropertiesProto_InitSvc::has_mediaextractor() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_mediaextractor() {
  mediaextractor_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::mediaextractor() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.mediaextractor)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(mediaextractor_);
}
inline void SystemPropertiesProto_InitSvc::set_mediaextractor(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00080000u;
  mediaextractor_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.mediaextractor)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status mediametrics = 21;
inline bool SystemPropertiesProto_InitSvc::has_mediametrics() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_mediametrics() {
  mediametrics_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::mediametrics() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.mediametrics)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(mediametrics_);
}
inline void SystemPropertiesProto_InitSvc::set_mediametrics(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00100000u;
  mediametrics_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.mediametrics)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status netd = 22;
inline bool SystemPropertiesProto_InitSvc::has_netd() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_netd() {
  netd_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::netd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.netd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(netd_);
}
inline void SystemPropertiesProto_InitSvc::set_netd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00200000u;
  netd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.netd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status performanced = 23;
inline bool SystemPropertiesProto_InitSvc::has_performanced() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_performanced() {
  performanced_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::performanced() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.performanced)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(performanced_);
}
inline void SystemPropertiesProto_InitSvc::set_performanced(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00400000u;
  performanced_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.performanced)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status ril_daemon = 24;
inline bool SystemPropertiesProto_InitSvc::has_ril_daemon() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_ril_daemon() {
  ril_daemon_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::ril_daemon() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.ril_daemon)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(ril_daemon_);
}
inline void SystemPropertiesProto_InitSvc::set_ril_daemon(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x00800000u;
  ril_daemon_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.ril_daemon)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status servicemanager = 25;
inline bool SystemPropertiesProto_InitSvc::has_servicemanager() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_servicemanager() {
  servicemanager_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::servicemanager() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.servicemanager)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(servicemanager_);
}
inline void SystemPropertiesProto_InitSvc::set_servicemanager(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x01000000u;
  servicemanager_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.servicemanager)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status storaged = 26;
inline bool SystemPropertiesProto_InitSvc::has_storaged() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_storaged() {
  storaged_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::storaged() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.storaged)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(storaged_);
}
inline void SystemPropertiesProto_InitSvc::set_storaged(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x02000000u;
  storaged_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.storaged)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status surfaceflinger = 27;
inline bool SystemPropertiesProto_InitSvc::has_surfaceflinger() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_surfaceflinger() {
  surfaceflinger_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::surfaceflinger() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.surfaceflinger)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(surfaceflinger_);
}
inline void SystemPropertiesProto_InitSvc::set_surfaceflinger(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x04000000u;
  surfaceflinger_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.surfaceflinger)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status thermalservice = 28;
inline bool SystemPropertiesProto_InitSvc::has_thermalservice() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_thermalservice() {
  thermalservice_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::thermalservice() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.thermalservice)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(thermalservice_);
}
inline void SystemPropertiesProto_InitSvc::set_thermalservice(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x08000000u;
  thermalservice_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.thermalservice)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status tombstoned = 29;
inline bool SystemPropertiesProto_InitSvc::has_tombstoned() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_tombstoned() {
  tombstoned_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::tombstoned() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.tombstoned)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(tombstoned_);
}
inline void SystemPropertiesProto_InitSvc::set_tombstoned(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x10000000u;
  tombstoned_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.tombstoned)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status ueventd = 30;
inline bool SystemPropertiesProto_InitSvc::has_ueventd() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_ueventd() {
  ueventd_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::ueventd() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.ueventd)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(ueventd_);
}
inline void SystemPropertiesProto_InitSvc::set_ueventd(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x20000000u;
  ueventd_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.ueventd)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status update_engine = 31;
inline bool SystemPropertiesProto_InitSvc::has_update_engine() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_update_engine() {
  update_engine_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::update_engine() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.update_engine)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(update_engine_);
}
inline void SystemPropertiesProto_InitSvc::set_update_engine(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x40000000u;
  update_engine_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.update_engine)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status update_verifier_nonencrypted = 32;
inline bool SystemPropertiesProto_InitSvc::has_update_verifier_nonencrypted() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_update_verifier_nonencrypted() {
  update_verifier_nonencrypted_ = 0;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::update_verifier_nonencrypted() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.update_verifier_nonencrypted)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(update_verifier_nonencrypted_);
}
inline void SystemPropertiesProto_InitSvc::set_update_verifier_nonencrypted(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[0] |= 0x80000000u;
  update_verifier_nonencrypted_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.update_verifier_nonencrypted)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status virtual_touchpad = 33;
inline bool SystemPropertiesProto_InitSvc::has_virtual_touchpad() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_virtual_touchpad() {
  virtual_touchpad_ = 0;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::virtual_touchpad() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.virtual_touchpad)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(virtual_touchpad_);
}
inline void SystemPropertiesProto_InitSvc::set_virtual_touchpad(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000001u;
  virtual_touchpad_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.virtual_touchpad)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status vndservicemanager = 34;
inline bool SystemPropertiesProto_InitSvc::has_vndservicemanager() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_vndservicemanager() {
  vndservicemanager_ = 0;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::vndservicemanager() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.vndservicemanager)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(vndservicemanager_);
}
inline void SystemPropertiesProto_InitSvc::set_vndservicemanager(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000002u;
  vndservicemanager_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.vndservicemanager)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status vold = 35;
inline bool SystemPropertiesProto_InitSvc::has_vold() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_vold() {
  vold_ = 0;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::vold() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.vold)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(vold_);
}
inline void SystemPropertiesProto_InitSvc::set_vold(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000004u;
  vold_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.vold)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status vr_hwc = 36;
inline bool SystemPropertiesProto_InitSvc::has_vr_hwc() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_vr_hwc() {
  vr_hwc_ = 0;
  _has_bits_[1] &= ~0x00000008u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::vr_hwc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.vr_hwc)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(vr_hwc_);
}
inline void SystemPropertiesProto_InitSvc::set_vr_hwc(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000008u;
  vr_hwc_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.vr_hwc)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status webview_zygote32 = 37;
inline bool SystemPropertiesProto_InitSvc::has_webview_zygote32() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_webview_zygote32() {
  webview_zygote32_ = 0;
  _has_bits_[1] &= ~0x00000010u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::webview_zygote32() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.webview_zygote32)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(webview_zygote32_);
}
inline void SystemPropertiesProto_InitSvc::set_webview_zygote32(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000010u;
  webview_zygote32_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.webview_zygote32)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status wificond = 38;
inline bool SystemPropertiesProto_InitSvc::has_wificond() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_wificond() {
  wificond_ = 0;
  _has_bits_[1] &= ~0x00000020u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::wificond() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.wificond)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(wificond_);
}
inline void SystemPropertiesProto_InitSvc::set_wificond(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000020u;
  wificond_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.wificond)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status wpa_supplicant = 39;
inline bool SystemPropertiesProto_InitSvc::has_wpa_supplicant() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_wpa_supplicant() {
  wpa_supplicant_ = 0;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::wpa_supplicant() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.wpa_supplicant)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(wpa_supplicant_);
}
inline void SystemPropertiesProto_InitSvc::set_wpa_supplicant(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000040u;
  wpa_supplicant_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.wpa_supplicant)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status zygote = 40;
inline bool SystemPropertiesProto_InitSvc::has_zygote() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_zygote() {
  zygote_ = 0;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::zygote() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.zygote)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(zygote_);
}
inline void SystemPropertiesProto_InitSvc::set_zygote(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000080u;
  zygote_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.zygote)
}

// optional .android.os.SystemPropertiesProto.InitSvc.Status zygote_secondary = 41;
inline bool SystemPropertiesProto_InitSvc::has_zygote_secondary() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_InitSvc::clear_zygote_secondary() {
  zygote_secondary_ = 0;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::android::os::SystemPropertiesProto_InitSvc_Status SystemPropertiesProto_InitSvc::zygote_secondary() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.InitSvc.zygote_secondary)
  return static_cast< ::android::os::SystemPropertiesProto_InitSvc_Status >(zygote_secondary_);
}
inline void SystemPropertiesProto_InitSvc::set_zygote_secondary(::android::os::SystemPropertiesProto_InitSvc_Status value) {
  assert(::android::os::SystemPropertiesProto_InitSvc_Status_IsValid(value));
  _has_bits_[1] |= 0x00000100u;
  zygote_secondary_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.InitSvc.zygote_secondary)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Log

// optional string tag_wifi_hal = 1;
inline bool SystemPropertiesProto_Log::has_tag_wifi_hal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Log::clear_tag_wifi_hal() {
  tag_wifi_hal_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Log::tag_wifi_hal() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
  return tag_wifi_hal_.GetNoArena();
}
inline void SystemPropertiesProto_Log::set_tag_wifi_hal(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_wifi_hal_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
}
inline void SystemPropertiesProto_Log::set_tag_wifi_hal(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_wifi_hal_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
}
inline void SystemPropertiesProto_Log::set_tag_wifi_hal(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_wifi_hal_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
}
inline void SystemPropertiesProto_Log::set_tag_wifi_hal(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_wifi_hal_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
}
inline std::string* SystemPropertiesProto_Log::mutable_tag_wifi_hal() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
  return tag_wifi_hal_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Log::release_tag_wifi_hal() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
  if (!has_tag_wifi_hal()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_wifi_hal_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Log::set_allocated_tag_wifi_hal(std::string* tag_wifi_hal) {
  if (tag_wifi_hal != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_wifi_hal_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag_wifi_hal);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Log.tag_wifi_hal)
}

// optional string tag_stats_log = 2;
inline bool SystemPropertiesProto_Log::has_tag_stats_log() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Log::clear_tag_stats_log() {
  tag_stats_log_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Log::tag_stats_log() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Log.tag_stats_log)
  return tag_stats_log_.GetNoArena();
}
inline void SystemPropertiesProto_Log::set_tag_stats_log(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_stats_log_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Log.tag_stats_log)
}
inline void SystemPropertiesProto_Log::set_tag_stats_log(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_stats_log_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Log.tag_stats_log)
}
inline void SystemPropertiesProto_Log::set_tag_stats_log(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tag_stats_log_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Log.tag_stats_log)
}
inline void SystemPropertiesProto_Log::set_tag_stats_log(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tag_stats_log_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Log.tag_stats_log)
}
inline std::string* SystemPropertiesProto_Log::mutable_tag_stats_log() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Log.tag_stats_log)
  return tag_stats_log_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Log::release_tag_stats_log() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Log.tag_stats_log)
  if (!has_tag_stats_log()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tag_stats_log_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Log::set_allocated_tag_stats_log(std::string* tag_stats_log) {
  if (tag_stats_log != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tag_stats_log_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag_stats_log);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Log.tag_stats_log)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Persist

// optional string config_calibration_fac = 1;
inline bool SystemPropertiesProto_Persist::has_config_calibration_fac() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_config_calibration_fac() {
  config_calibration_fac_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Persist::config_calibration_fac() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
  return config_calibration_fac_.GetNoArena();
}
inline void SystemPropertiesProto_Persist::set_config_calibration_fac(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  config_calibration_fac_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
}
inline void SystemPropertiesProto_Persist::set_config_calibration_fac(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  config_calibration_fac_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
}
inline void SystemPropertiesProto_Persist::set_config_calibration_fac(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  config_calibration_fac_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
}
inline void SystemPropertiesProto_Persist::set_config_calibration_fac(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  config_calibration_fac_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
}
inline std::string* SystemPropertiesProto_Persist::mutable_config_calibration_fac() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
  return config_calibration_fac_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Persist::release_config_calibration_fac() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
  if (!has_config_calibration_fac()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return config_calibration_fac_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Persist::set_allocated_config_calibration_fac(std::string* config_calibration_fac) {
  if (config_calibration_fac != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_calibration_fac_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), config_calibration_fac);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Persist.config_calibration_fac)
}

// optional int32 dbg_volte_avail_ovr = 2;
inline bool SystemPropertiesProto_Persist::has_dbg_volte_avail_ovr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_dbg_volte_avail_ovr() {
  dbg_volte_avail_ovr_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Persist::dbg_volte_avail_ovr() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.dbg_volte_avail_ovr)
  return dbg_volte_avail_ovr_;
}
inline void SystemPropertiesProto_Persist::set_dbg_volte_avail_ovr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  dbg_volte_avail_ovr_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.dbg_volte_avail_ovr)
}

// optional int32 dbg_vt_avail_ovr = 3;
inline bool SystemPropertiesProto_Persist::has_dbg_vt_avail_ovr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_dbg_vt_avail_ovr() {
  dbg_vt_avail_ovr_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Persist::dbg_vt_avail_ovr() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.dbg_vt_avail_ovr)
  return dbg_vt_avail_ovr_;
}
inline void SystemPropertiesProto_Persist::set_dbg_vt_avail_ovr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  dbg_vt_avail_ovr_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.dbg_vt_avail_ovr)
}

// optional int32 dbg_wfc_avail_ovr = 4;
inline bool SystemPropertiesProto_Persist::has_dbg_wfc_avail_ovr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_dbg_wfc_avail_ovr() {
  dbg_wfc_avail_ovr_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Persist::dbg_wfc_avail_ovr() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.dbg_wfc_avail_ovr)
  return dbg_wfc_avail_ovr_;
}
inline void SystemPropertiesProto_Persist::set_dbg_wfc_avail_ovr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  dbg_wfc_avail_ovr_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.dbg_wfc_avail_ovr)
}

// optional int32 radio_airplane_mode_on = 5;
inline bool SystemPropertiesProto_Persist::has_radio_airplane_mode_on() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_radio_airplane_mode_on() {
  radio_airplane_mode_on_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Persist::radio_airplane_mode_on() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.radio_airplane_mode_on)
  return radio_airplane_mode_on_;
}
inline void SystemPropertiesProto_Persist::set_radio_airplane_mode_on(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  radio_airplane_mode_on_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.radio_airplane_mode_on)
}

// optional string radio_multisim_config = 6;
inline bool SystemPropertiesProto_Persist::has_radio_multisim_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_radio_multisim_config() {
  radio_multisim_config_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Persist::radio_multisim_config() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
  return radio_multisim_config_.GetNoArena();
}
inline void SystemPropertiesProto_Persist::set_radio_multisim_config(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  radio_multisim_config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
}
inline void SystemPropertiesProto_Persist::set_radio_multisim_config(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  radio_multisim_config_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
}
inline void SystemPropertiesProto_Persist::set_radio_multisim_config(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  radio_multisim_config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
}
inline void SystemPropertiesProto_Persist::set_radio_multisim_config(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  radio_multisim_config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
}
inline std::string* SystemPropertiesProto_Persist::mutable_radio_multisim_config() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
  return radio_multisim_config_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Persist::release_radio_multisim_config() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
  if (!has_radio_multisim_config()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return radio_multisim_config_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Persist::set_allocated_radio_multisim_config(std::string* radio_multisim_config) {
  if (radio_multisim_config != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  radio_multisim_config_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), radio_multisim_config);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Persist.radio_multisim_config)
}

// optional int32 rcs_supported = 7;
inline bool SystemPropertiesProto_Persist::has_rcs_supported() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_rcs_supported() {
  rcs_supported_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Persist::rcs_supported() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.rcs_supported)
  return rcs_supported_;
}
inline void SystemPropertiesProto_Persist::set_rcs_supported(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  rcs_supported_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.rcs_supported)
}

// optional bool sys_crash_rcu = 8;
inline bool SystemPropertiesProto_Persist::has_sys_crash_rcu() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_sys_crash_rcu() {
  sys_crash_rcu_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool SystemPropertiesProto_Persist::sys_crash_rcu() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.sys_crash_rcu)
  return sys_crash_rcu_;
}
inline void SystemPropertiesProto_Persist::set_sys_crash_rcu(bool value) {
  _has_bits_[0] |= 0x00000200u;
  sys_crash_rcu_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.sys_crash_rcu)
}

// optional string sys_dalvik_vm_lib_2 = 9;
inline bool SystemPropertiesProto_Persist::has_sys_dalvik_vm_lib_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_sys_dalvik_vm_lib_2() {
  sys_dalvik_vm_lib_2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Persist::sys_dalvik_vm_lib_2() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
  return sys_dalvik_vm_lib_2_.GetNoArena();
}
inline void SystemPropertiesProto_Persist::set_sys_dalvik_vm_lib_2(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  sys_dalvik_vm_lib_2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
}
inline void SystemPropertiesProto_Persist::set_sys_dalvik_vm_lib_2(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  sys_dalvik_vm_lib_2_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
}
inline void SystemPropertiesProto_Persist::set_sys_dalvik_vm_lib_2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  sys_dalvik_vm_lib_2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
}
inline void SystemPropertiesProto_Persist::set_sys_dalvik_vm_lib_2(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  sys_dalvik_vm_lib_2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
}
inline std::string* SystemPropertiesProto_Persist::mutable_sys_dalvik_vm_lib_2() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
  return sys_dalvik_vm_lib_2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Persist::release_sys_dalvik_vm_lib_2() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
  if (!has_sys_dalvik_vm_lib_2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return sys_dalvik_vm_lib_2_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Persist::set_allocated_sys_dalvik_vm_lib_2(std::string* sys_dalvik_vm_lib_2) {
  if (sys_dalvik_vm_lib_2 != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sys_dalvik_vm_lib_2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sys_dalvik_vm_lib_2);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Persist.sys_dalvik_vm_lib_2)
}

// optional float sys_sf_color_saturation = 10;
inline bool SystemPropertiesProto_Persist::has_sys_sf_color_saturation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_sys_sf_color_saturation() {
  sys_sf_color_saturation_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float SystemPropertiesProto_Persist::sys_sf_color_saturation() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.sys_sf_color_saturation)
  return sys_sf_color_saturation_;
}
inline void SystemPropertiesProto_Persist::set_sys_sf_color_saturation(float value) {
  _has_bits_[0] |= 0x00000400u;
  sys_sf_color_saturation_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.sys_sf_color_saturation)
}

// optional string sys_timezone = 11;
inline bool SystemPropertiesProto_Persist::has_sys_timezone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Persist::clear_sys_timezone() {
  sys_timezone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Persist::sys_timezone() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Persist.sys_timezone)
  return sys_timezone_.GetNoArena();
}
inline void SystemPropertiesProto_Persist::set_sys_timezone(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  sys_timezone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Persist.sys_timezone)
}
inline void SystemPropertiesProto_Persist::set_sys_timezone(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  sys_timezone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Persist.sys_timezone)
}
inline void SystemPropertiesProto_Persist::set_sys_timezone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  sys_timezone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Persist.sys_timezone)
}
inline void SystemPropertiesProto_Persist::set_sys_timezone(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  sys_timezone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Persist.sys_timezone)
}
inline std::string* SystemPropertiesProto_Persist::mutable_sys_timezone() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Persist.sys_timezone)
  return sys_timezone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Persist::release_sys_timezone() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Persist.sys_timezone)
  if (!has_sys_timezone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return sys_timezone_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Persist::set_allocated_sys_timezone(std::string* sys_timezone) {
  if (sys_timezone != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  sys_timezone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sys_timezone);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Persist.sys_timezone)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_PmDexopt

// optional string ab_ota = 1;
inline bool SystemPropertiesProto_PmDexopt::has_ab_ota() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_PmDexopt::clear_ab_ota() {
  ab_ota_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_PmDexopt::ab_ota() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
  return ab_ota_.GetNoArena();
}
inline void SystemPropertiesProto_PmDexopt::set_ab_ota(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ab_ota_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
}
inline void SystemPropertiesProto_PmDexopt::set_ab_ota(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  ab_ota_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
}
inline void SystemPropertiesProto_PmDexopt::set_ab_ota(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  ab_ota_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
}
inline void SystemPropertiesProto_PmDexopt::set_ab_ota(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  ab_ota_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
}
inline std::string* SystemPropertiesProto_PmDexopt::mutable_ab_ota() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
  return ab_ota_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_PmDexopt::release_ab_ota() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
  if (!has_ab_ota()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return ab_ota_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_PmDexopt::set_allocated_ab_ota(std::string* ab_ota) {
  if (ab_ota != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ab_ota_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ab_ota);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.PmDexopt.ab_ota)
}

// optional string bg_dexopt = 2;
inline bool SystemPropertiesProto_PmDexopt::has_bg_dexopt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_PmDexopt::clear_bg_dexopt() {
  bg_dexopt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_PmDexopt::bg_dexopt() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
  return bg_dexopt_.GetNoArena();
}
inline void SystemPropertiesProto_PmDexopt::set_bg_dexopt(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  bg_dexopt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
}
inline void SystemPropertiesProto_PmDexopt::set_bg_dexopt(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  bg_dexopt_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
}
inline void SystemPropertiesProto_PmDexopt::set_bg_dexopt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  bg_dexopt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
}
inline void SystemPropertiesProto_PmDexopt::set_bg_dexopt(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  bg_dexopt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
}
inline std::string* SystemPropertiesProto_PmDexopt::mutable_bg_dexopt() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
  return bg_dexopt_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_PmDexopt::release_bg_dexopt() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
  if (!has_bg_dexopt()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return bg_dexopt_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_PmDexopt::set_allocated_bg_dexopt(std::string* bg_dexopt) {
  if (bg_dexopt != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  bg_dexopt_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bg_dexopt);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.PmDexopt.bg_dexopt)
}

// optional string boot = 3;
inline bool SystemPropertiesProto_PmDexopt::has_boot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_PmDexopt::clear_boot() {
  boot_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_PmDexopt::boot() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.PmDexopt.boot)
  return boot_.GetNoArena();
}
inline void SystemPropertiesProto_PmDexopt::set_boot(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  boot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.PmDexopt.boot)
}
inline void SystemPropertiesProto_PmDexopt::set_boot(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  boot_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.PmDexopt.boot)
}
inline void SystemPropertiesProto_PmDexopt::set_boot(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  boot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.PmDexopt.boot)
}
inline void SystemPropertiesProto_PmDexopt::set_boot(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  boot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.PmDexopt.boot)
}
inline std::string* SystemPropertiesProto_PmDexopt::mutable_boot() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.PmDexopt.boot)
  return boot_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_PmDexopt::release_boot() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.PmDexopt.boot)
  if (!has_boot()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return boot_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_PmDexopt::set_allocated_boot(std::string* boot) {
  if (boot != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  boot_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boot);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.PmDexopt.boot)
}

// optional string first_boot = 4;
inline bool SystemPropertiesProto_PmDexopt::has_first_boot() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_PmDexopt::clear_first_boot() {
  first_boot_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_PmDexopt::first_boot() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.PmDexopt.first_boot)
  return first_boot_.GetNoArena();
}
inline void SystemPropertiesProto_PmDexopt::set_first_boot(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  first_boot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.PmDexopt.first_boot)
}
inline void SystemPropertiesProto_PmDexopt::set_first_boot(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  first_boot_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.PmDexopt.first_boot)
}
inline void SystemPropertiesProto_PmDexopt::set_first_boot(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  first_boot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.PmDexopt.first_boot)
}
inline void SystemPropertiesProto_PmDexopt::set_first_boot(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  first_boot_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.PmDexopt.first_boot)
}
inline std::string* SystemPropertiesProto_PmDexopt::mutable_first_boot() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.PmDexopt.first_boot)
  return first_boot_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_PmDexopt::release_first_boot() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.PmDexopt.first_boot)
  if (!has_first_boot()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return first_boot_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_PmDexopt::set_allocated_first_boot(std::string* first_boot) {
  if (first_boot != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  first_boot_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), first_boot);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.PmDexopt.first_boot)
}

// optional string install = 5;
inline bool SystemPropertiesProto_PmDexopt::has_install() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_PmDexopt::clear_install() {
  install_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_PmDexopt::install() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.PmDexopt.install)
  return install_.GetNoArena();
}
inline void SystemPropertiesProto_PmDexopt::set_install(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  install_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.PmDexopt.install)
}
inline void SystemPropertiesProto_PmDexopt::set_install(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  install_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.PmDexopt.install)
}
inline void SystemPropertiesProto_PmDexopt::set_install(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  install_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.PmDexopt.install)
}
inline void SystemPropertiesProto_PmDexopt::set_install(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  install_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.PmDexopt.install)
}
inline std::string* SystemPropertiesProto_PmDexopt::mutable_install() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.PmDexopt.install)
  return install_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_PmDexopt::release_install() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.PmDexopt.install)
  if (!has_install()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return install_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_PmDexopt::set_allocated_install(std::string* install) {
  if (install != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  install_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), install);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.PmDexopt.install)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Boot

// optional string avb_version = 1;
inline bool SystemPropertiesProto_Ro_Boot::has_avb_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_avb_version() {
  avb_version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::avb_version() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
  return avb_version_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_avb_version(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  avb_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
}
inline void SystemPropertiesProto_Ro_Boot::set_avb_version(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  avb_version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
}
inline void SystemPropertiesProto_Ro_Boot::set_avb_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  avb_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
}
inline void SystemPropertiesProto_Ro_Boot::set_avb_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  avb_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_avb_version() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
  return avb_version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_avb_version() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
  if (!has_avb_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return avb_version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_avb_version(std::string* avb_version) {
  if (avb_version != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  avb_version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avb_version);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.avb_version)
}

// optional string baseband = 2;
inline bool SystemPropertiesProto_Ro_Boot::has_baseband() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_baseband() {
  baseband_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::baseband() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.baseband)
  return baseband_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_baseband(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.baseband)
}
inline void SystemPropertiesProto_Ro_Boot::set_baseband(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.baseband)
}
inline void SystemPropertiesProto_Ro_Boot::set_baseband(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.baseband)
}
inline void SystemPropertiesProto_Ro_Boot::set_baseband(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.baseband)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_baseband() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.baseband)
  return baseband_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_baseband() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.baseband)
  if (!has_baseband()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return baseband_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_baseband(std::string* baseband) {
  if (baseband != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  baseband_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), baseband);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.baseband)
}

// optional string bootdevice = 3;
inline bool SystemPropertiesProto_Ro_Boot::has_bootdevice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_bootdevice() {
  bootdevice_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::bootdevice() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
  return bootdevice_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_bootdevice(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  bootdevice_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
}
inline void SystemPropertiesProto_Ro_Boot::set_bootdevice(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  bootdevice_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
}
inline void SystemPropertiesProto_Ro_Boot::set_bootdevice(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  bootdevice_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
}
inline void SystemPropertiesProto_Ro_Boot::set_bootdevice(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  bootdevice_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_bootdevice() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
  return bootdevice_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_bootdevice() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
  if (!has_bootdevice()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return bootdevice_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_bootdevice(std::string* bootdevice) {
  if (bootdevice != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  bootdevice_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bootdevice);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.bootdevice)
}

// optional string bootloader = 4;
inline bool SystemPropertiesProto_Ro_Boot::has_bootloader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_bootloader() {
  bootloader_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::bootloader() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
  return bootloader_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_bootloader(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
}
inline void SystemPropertiesProto_Ro_Boot::set_bootloader(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
}
inline void SystemPropertiesProto_Ro_Boot::set_bootloader(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
}
inline void SystemPropertiesProto_Ro_Boot::set_bootloader(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_bootloader() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
  return bootloader_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_bootloader() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
  if (!has_bootloader()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return bootloader_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_bootloader(std::string* bootloader) {
  if (bootloader != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  bootloader_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bootloader);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.bootloader)
}

// repeated string boottime = 5;
inline int SystemPropertiesProto_Ro_Boot::boottime_size() const {
  return boottime_.size();
}
inline void SystemPropertiesProto_Ro_Boot::clear_boottime() {
  boottime_.Clear();
}
inline const std::string& SystemPropertiesProto_Ro_Boot::boottime(int index) const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  return boottime_.Get(index);
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_boottime(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  return boottime_.Mutable(index);
}
inline void SystemPropertiesProto_Ro_Boot::set_boottime(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  boottime_.Mutable(index)->assign(value);
}
inline void SystemPropertiesProto_Ro_Boot::set_boottime(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  boottime_.Mutable(index)->assign(std::move(value));
}
inline void SystemPropertiesProto_Ro_Boot::set_boottime(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  boottime_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.boottime)
}
inline void SystemPropertiesProto_Ro_Boot::set_boottime(int index, const char* value, size_t size) {
  boottime_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.boottime)
}
inline std::string* SystemPropertiesProto_Ro_Boot::add_boottime() {
  // @@protoc_insertion_point(field_add_mutable:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  return boottime_.Add();
}
inline void SystemPropertiesProto_Ro_Boot::add_boottime(const std::string& value) {
  boottime_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Boot.boottime)
}
inline void SystemPropertiesProto_Ro_Boot::add_boottime(std::string&& value) {
  boottime_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Boot.boottime)
}
inline void SystemPropertiesProto_Ro_Boot::add_boottime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  boottime_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.os.SystemPropertiesProto.Ro.Boot.boottime)
}
inline void SystemPropertiesProto_Ro_Boot::add_boottime(const char* value, size_t size) {
  boottime_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.os.SystemPropertiesProto.Ro.Boot.boottime)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SystemPropertiesProto_Ro_Boot::boottime() const {
  // @@protoc_insertion_point(field_list:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  return boottime_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SystemPropertiesProto_Ro_Boot::mutable_boottime() {
  // @@protoc_insertion_point(field_mutable_list:android.os.SystemPropertiesProto.Ro.Boot.boottime)
  return &boottime_;
}

// optional string console = 6;
inline bool SystemPropertiesProto_Ro_Boot::has_console() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_console() {
  console_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::console() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.console)
  return console_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_console(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  console_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.console)
}
inline void SystemPropertiesProto_Ro_Boot::set_console(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  console_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.console)
}
inline void SystemPropertiesProto_Ro_Boot::set_console(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  console_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.console)
}
inline void SystemPropertiesProto_Ro_Boot::set_console(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  console_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.console)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_console() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.console)
  return console_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_console() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.console)
  if (!has_console()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return console_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_console(std::string* console) {
  if (console != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  console_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), console);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.console)
}

// optional int32 fake_battery = 7;
inline bool SystemPropertiesProto_Ro_Boot::has_fake_battery() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_fake_battery() {
  fake_battery_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Boot::fake_battery() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.fake_battery)
  return fake_battery_;
}
inline void SystemPropertiesProto_Ro_Boot::set_fake_battery(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  fake_battery_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.fake_battery)
}

// optional string hardware = 8;
inline bool SystemPropertiesProto_Ro_Boot::has_hardware() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_hardware() {
  hardware_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::hardware() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.hardware)
  return hardware_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  hardware_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.hardware)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  hardware_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.hardware)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  hardware_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.hardware)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  hardware_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.hardware)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_hardware() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.hardware)
  return hardware_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_hardware() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.hardware)
  if (!has_hardware()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return hardware_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_hardware(std::string* hardware) {
  if (hardware != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  hardware_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hardware);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.hardware)
}

// optional string hardware_color = 9;
inline bool SystemPropertiesProto_Ro_Boot::has_hardware_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_hardware_color() {
  hardware_color_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::hardware_color() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
  return hardware_color_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_color(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  hardware_color_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_color(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  hardware_color_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_color(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  hardware_color_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_color(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  hardware_color_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_hardware_color() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
  return hardware_color_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_hardware_color() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
  if (!has_hardware_color()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return hardware_color_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_hardware_color(std::string* hardware_color) {
  if (hardware_color != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  hardware_color_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hardware_color);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.hardware_color)
}

// optional string hardware_revision = 10;
inline bool SystemPropertiesProto_Ro_Boot::has_hardware_revision() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_hardware_revision() {
  hardware_revision_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::hardware_revision() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
  return hardware_revision_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_revision(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  hardware_revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_revision(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  hardware_revision_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_revision(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  hardware_revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_revision(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  hardware_revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_hardware_revision() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
  return hardware_revision_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_hardware_revision() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
  if (!has_hardware_revision()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return hardware_revision_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_hardware_revision(std::string* hardware_revision) {
  if (hardware_revision != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  hardware_revision_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hardware_revision);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.hardware_revision)
}

// optional string hardware_sku = 11;
inline bool SystemPropertiesProto_Ro_Boot::has_hardware_sku() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_hardware_sku() {
  hardware_sku_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::hardware_sku() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
  return hardware_sku_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_sku(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  hardware_sku_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_sku(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  hardware_sku_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_sku(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  hardware_sku_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
}
inline void SystemPropertiesProto_Ro_Boot::set_hardware_sku(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  hardware_sku_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_hardware_sku() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
  return hardware_sku_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_hardware_sku() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
  if (!has_hardware_sku()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return hardware_sku_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_hardware_sku(std::string* hardware_sku) {
  if (hardware_sku != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  hardware_sku_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hardware_sku);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.hardware_sku)
}

// optional string keymaster = 12;
inline bool SystemPropertiesProto_Ro_Boot::has_keymaster() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_keymaster() {
  keymaster_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::keymaster() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
  return keymaster_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_keymaster(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  keymaster_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
}
inline void SystemPropertiesProto_Ro_Boot::set_keymaster(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  keymaster_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
}
inline void SystemPropertiesProto_Ro_Boot::set_keymaster(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  keymaster_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
}
inline void SystemPropertiesProto_Ro_Boot::set_keymaster(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  keymaster_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_keymaster() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
  return keymaster_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_keymaster() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
  if (!has_keymaster()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return keymaster_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_keymaster(std::string* keymaster) {
  if (keymaster != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  keymaster_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keymaster);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.keymaster)
}

// optional string mode = 13;
inline bool SystemPropertiesProto_Ro_Boot::has_mode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_mode() {
  mode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::mode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.mode)
  return mode_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_mode(const std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.mode)
}
inline void SystemPropertiesProto_Ro_Boot::set_mode(std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  mode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.mode)
}
inline void SystemPropertiesProto_Ro_Boot::set_mode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.mode)
}
inline void SystemPropertiesProto_Ro_Boot::set_mode(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  mode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.mode)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_mode() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.mode)
  return mode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_mode() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.mode)
  if (!has_mode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return mode_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_mode(std::string* mode) {
  if (mode != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  mode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mode);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.mode)
}

// optional string revision = 14;
inline bool SystemPropertiesProto_Ro_Boot::has_revision() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_revision() {
  revision_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::revision() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.revision)
  return revision_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_revision(const std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.revision)
}
inline void SystemPropertiesProto_Ro_Boot::set_revision(std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  revision_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.revision)
}
inline void SystemPropertiesProto_Ro_Boot::set_revision(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.revision)
}
inline void SystemPropertiesProto_Ro_Boot::set_revision(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.revision)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_revision() {
  _has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.revision)
  return revision_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_revision() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.revision)
  if (!has_revision()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return revision_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_revision(std::string* revision) {
  if (revision != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  revision_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), revision);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.revision)
}

// optional string slot_suffix = 15;
inline bool SystemPropertiesProto_Ro_Boot::has_slot_suffix() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_slot_suffix() {
  slot_suffix_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00001000u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::slot_suffix() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
  return slot_suffix_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_slot_suffix(const std::string& value) {
  _has_bits_[0] |= 0x00001000u;
  slot_suffix_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
}
inline void SystemPropertiesProto_Ro_Boot::set_slot_suffix(std::string&& value) {
  _has_bits_[0] |= 0x00001000u;
  slot_suffix_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
}
inline void SystemPropertiesProto_Ro_Boot::set_slot_suffix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00001000u;
  slot_suffix_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
}
inline void SystemPropertiesProto_Ro_Boot::set_slot_suffix(const char* value, size_t size) {
  _has_bits_[0] |= 0x00001000u;
  slot_suffix_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_slot_suffix() {
  _has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
  return slot_suffix_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_slot_suffix() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
  if (!has_slot_suffix()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00001000u;
  return slot_suffix_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_slot_suffix(std::string* slot_suffix) {
  if (slot_suffix != nullptr) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  slot_suffix_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), slot_suffix);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.slot_suffix)
}

// optional string vbmeta_avb_version = 16;
inline bool SystemPropertiesProto_Ro_Boot::has_vbmeta_avb_version() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_vbmeta_avb_version() {
  vbmeta_avb_version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00002000u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::vbmeta_avb_version() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
  return vbmeta_avb_version_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_vbmeta_avb_version(const std::string& value) {
  _has_bits_[0] |= 0x00002000u;
  vbmeta_avb_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
}
inline void SystemPropertiesProto_Ro_Boot::set_vbmeta_avb_version(std::string&& value) {
  _has_bits_[0] |= 0x00002000u;
  vbmeta_avb_version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
}
inline void SystemPropertiesProto_Ro_Boot::set_vbmeta_avb_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00002000u;
  vbmeta_avb_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
}
inline void SystemPropertiesProto_Ro_Boot::set_vbmeta_avb_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00002000u;
  vbmeta_avb_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_vbmeta_avb_version() {
  _has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
  return vbmeta_avb_version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_vbmeta_avb_version() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
  if (!has_vbmeta_avb_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00002000u;
  return vbmeta_avb_version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_vbmeta_avb_version(std::string* vbmeta_avb_version) {
  if (vbmeta_avb_version != nullptr) {
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  vbmeta_avb_version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vbmeta_avb_version);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.vbmeta_avb_version)
}

// optional string vendor_overlay_theme = 17;
inline bool SystemPropertiesProto_Ro_Boot::has_vendor_overlay_theme() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_vendor_overlay_theme() {
  vendor_overlay_theme_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00004000u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::vendor_overlay_theme() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
  return vendor_overlay_theme_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_vendor_overlay_theme(const std::string& value) {
  _has_bits_[0] |= 0x00004000u;
  vendor_overlay_theme_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
}
inline void SystemPropertiesProto_Ro_Boot::set_vendor_overlay_theme(std::string&& value) {
  _has_bits_[0] |= 0x00004000u;
  vendor_overlay_theme_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
}
inline void SystemPropertiesProto_Ro_Boot::set_vendor_overlay_theme(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00004000u;
  vendor_overlay_theme_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
}
inline void SystemPropertiesProto_Ro_Boot::set_vendor_overlay_theme(const char* value, size_t size) {
  _has_bits_[0] |= 0x00004000u;
  vendor_overlay_theme_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_vendor_overlay_theme() {
  _has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
  return vendor_overlay_theme_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_vendor_overlay_theme() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
  if (!has_vendor_overlay_theme()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00004000u;
  return vendor_overlay_theme_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_vendor_overlay_theme(std::string* vendor_overlay_theme) {
  if (vendor_overlay_theme != nullptr) {
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  vendor_overlay_theme_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vendor_overlay_theme);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.vendor_overlay_theme)
}

// optional string verifiedbootstate = 18;
inline bool SystemPropertiesProto_Ro_Boot::has_verifiedbootstate() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_verifiedbootstate() {
  verifiedbootstate_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00008000u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::verifiedbootstate() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
  return verifiedbootstate_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_verifiedbootstate(const std::string& value) {
  _has_bits_[0] |= 0x00008000u;
  verifiedbootstate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
}
inline void SystemPropertiesProto_Ro_Boot::set_verifiedbootstate(std::string&& value) {
  _has_bits_[0] |= 0x00008000u;
  verifiedbootstate_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
}
inline void SystemPropertiesProto_Ro_Boot::set_verifiedbootstate(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00008000u;
  verifiedbootstate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
}
inline void SystemPropertiesProto_Ro_Boot::set_verifiedbootstate(const char* value, size_t size) {
  _has_bits_[0] |= 0x00008000u;
  verifiedbootstate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_verifiedbootstate() {
  _has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
  return verifiedbootstate_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_verifiedbootstate() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
  if (!has_verifiedbootstate()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00008000u;
  return verifiedbootstate_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_verifiedbootstate(std::string* verifiedbootstate) {
  if (verifiedbootstate != nullptr) {
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  verifiedbootstate_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), verifiedbootstate);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.verifiedbootstate)
}

// optional string veritymode = 19;
inline bool SystemPropertiesProto_Ro_Boot::has_veritymode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_veritymode() {
  veritymode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00010000u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::veritymode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
  return veritymode_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_veritymode(const std::string& value) {
  _has_bits_[0] |= 0x00010000u;
  veritymode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
}
inline void SystemPropertiesProto_Ro_Boot::set_veritymode(std::string&& value) {
  _has_bits_[0] |= 0x00010000u;
  veritymode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
}
inline void SystemPropertiesProto_Ro_Boot::set_veritymode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00010000u;
  veritymode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
}
inline void SystemPropertiesProto_Ro_Boot::set_veritymode(const char* value, size_t size) {
  _has_bits_[0] |= 0x00010000u;
  veritymode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_veritymode() {
  _has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
  return veritymode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_veritymode() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
  if (!has_veritymode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00010000u;
  return veritymode_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_veritymode(std::string* veritymode) {
  if (veritymode != nullptr) {
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  veritymode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), veritymode);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.veritymode)
}

// optional string wificountrycode = 20;
inline bool SystemPropertiesProto_Ro_Boot::has_wificountrycode() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto_Ro_Boot::clear_wificountrycode() {
  wificountrycode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00020000u;
}
inline const std::string& SystemPropertiesProto_Ro_Boot::wificountrycode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
  return wificountrycode_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Boot::set_wificountrycode(const std::string& value) {
  _has_bits_[0] |= 0x00020000u;
  wificountrycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
}
inline void SystemPropertiesProto_Ro_Boot::set_wificountrycode(std::string&& value) {
  _has_bits_[0] |= 0x00020000u;
  wificountrycode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
}
inline void SystemPropertiesProto_Ro_Boot::set_wificountrycode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00020000u;
  wificountrycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
}
inline void SystemPropertiesProto_Ro_Boot::set_wificountrycode(const char* value, size_t size) {
  _has_bits_[0] |= 0x00020000u;
  wificountrycode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
}
inline std::string* SystemPropertiesProto_Ro_Boot::mutable_wificountrycode() {
  _has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
  return wificountrycode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Boot::release_wificountrycode() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
  if (!has_wificountrycode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00020000u;
  return wificountrycode_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Boot::set_allocated_wificountrycode(std::string* wificountrycode) {
  if (wificountrycode != nullptr) {
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  wificountrycode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wificountrycode);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Boot.wificountrycode)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_BootImage

// optional string build_date = 1;
inline bool SystemPropertiesProto_Ro_BootImage::has_build_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_BootImage::clear_build_date() {
  build_date_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_BootImage::build_date() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
  return build_date_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_date(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_date(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_date(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
}
inline std::string* SystemPropertiesProto_Ro_BootImage::mutable_build_date() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
  return build_date_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_BootImage::release_build_date() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
  if (!has_build_date()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return build_date_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_BootImage::set_allocated_build_date(std::string* build_date) {
  if (build_date != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  build_date_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), build_date);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.BootImage.build_date)
}

// optional int64 build_date_utc = 2;
inline bool SystemPropertiesProto_Ro_BootImage::has_build_date_utc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_BootImage::clear_build_date_utc() {
  build_date_utc_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SystemPropertiesProto_Ro_BootImage::build_date_utc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.BootImage.build_date_utc)
  return build_date_utc_;
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_date_utc(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  build_date_utc_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.BootImage.build_date_utc)
}

// optional string build_fingerprint = 3;
inline bool SystemPropertiesProto_Ro_BootImage::has_build_fingerprint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_BootImage::clear_build_fingerprint() {
  build_fingerprint_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_BootImage::build_fingerprint() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
  return build_fingerprint_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_fingerprint(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_fingerprint(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_fingerprint(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
}
inline void SystemPropertiesProto_Ro_BootImage::set_build_fingerprint(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
}
inline std::string* SystemPropertiesProto_Ro_BootImage::mutable_build_fingerprint() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
  return build_fingerprint_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_BootImage::release_build_fingerprint() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
  if (!has_build_fingerprint()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return build_fingerprint_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_BootImage::set_allocated_build_fingerprint(std::string* build_fingerprint) {
  if (build_fingerprint != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  build_fingerprint_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), build_fingerprint);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.BootImage.build_fingerprint)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Build_Version

// optional string base_os = 1;
inline bool SystemPropertiesProto_Ro_Build_Version::has_base_os() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_base_os() {
  base_os_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Build_Version::base_os() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
  return base_os_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build_Version::set_base_os(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  base_os_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_base_os(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  base_os_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_base_os(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  base_os_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_base_os(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  base_os_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::mutable_base_os() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
  return base_os_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::release_base_os() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
  if (!has_base_os()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return base_os_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build_Version::set_allocated_base_os(std::string* base_os) {
  if (base_os != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  base_os_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), base_os);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.Version.base_os)
}

// optional string codename = 2;
inline bool SystemPropertiesProto_Ro_Build_Version::has_codename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_codename() {
  codename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Build_Version::codename() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
  return codename_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build_Version::set_codename(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  codename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_codename(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  codename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_codename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  codename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_codename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  codename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::mutable_codename() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
  return codename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::release_codename() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
  if (!has_codename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return codename_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build_Version::set_allocated_codename(std::string* codename) {
  if (codename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  codename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), codename);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.Version.codename)
}

// optional string incremental = 3;
inline bool SystemPropertiesProto_Ro_Build_Version::has_incremental() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_incremental() {
  incremental_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Build_Version::incremental() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
  return incremental_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build_Version::set_incremental(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  incremental_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_incremental(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  incremental_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_incremental(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  incremental_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_incremental(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  incremental_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::mutable_incremental() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
  return incremental_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::release_incremental() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
  if (!has_incremental()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return incremental_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build_Version::set_allocated_incremental(std::string* incremental) {
  if (incremental != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  incremental_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), incremental);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.Version.incremental)
}

// optional int32 preview_sdk = 4;
inline bool SystemPropertiesProto_Ro_Build_Version::has_preview_sdk() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_preview_sdk() {
  preview_sdk_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Build_Version::preview_sdk() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.preview_sdk)
  return preview_sdk_;
}
inline void SystemPropertiesProto_Ro_Build_Version::set_preview_sdk(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  preview_sdk_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.preview_sdk)
}

// optional string release = 5;
inline bool SystemPropertiesProto_Ro_Build_Version::has_release() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_release() {
  release_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Build_Version::release() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.release)
  return release_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build_Version::set_release(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  release_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.release)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_release(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  release_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.Version.release)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_release(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  release_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.Version.release)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_release(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  release_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.Version.release)
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::mutable_release() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.Version.release)
  return release_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::release_release() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.Version.release)
  if (!has_release()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return release_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build_Version::set_allocated_release(std::string* release) {
  if (release != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  release_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), release);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.Version.release)
}

// optional int32 sdk = 6;
inline bool SystemPropertiesProto_Ro_Build_Version::has_sdk() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_sdk() {
  sdk_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Build_Version::sdk() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.sdk)
  return sdk_;
}
inline void SystemPropertiesProto_Ro_Build_Version::set_sdk(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  sdk_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.sdk)
}

// optional string security_patch = 7;
inline bool SystemPropertiesProto_Ro_Build_Version::has_security_patch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Build_Version::clear_security_patch() {
  security_patch_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Build_Version::security_patch() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
  return security_patch_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build_Version::set_security_patch(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  security_patch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_security_patch(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  security_patch_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_security_patch(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  security_patch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
}
inline void SystemPropertiesProto_Ro_Build_Version::set_security_patch(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  security_patch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::mutable_security_patch() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
  return security_patch_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build_Version::release_security_patch() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
  if (!has_security_patch()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return security_patch_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build_Version::set_allocated_security_patch(std::string* security_patch) {
  if (security_patch != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  security_patch_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), security_patch);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.Version.security_patch)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Build

// optional string date = 1;
inline bool SystemPropertiesProto_Ro_Build::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_date() {
  date_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::date() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.date)
  return date_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_date(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.date)
}
inline void SystemPropertiesProto_Ro_Build::set_date(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  date_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.date)
}
inline void SystemPropertiesProto_Ro_Build::set_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.date)
}
inline void SystemPropertiesProto_Ro_Build::set_date(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.date)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_date() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.date)
  return date_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_date() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.date)
  if (!has_date()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return date_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_date(std::string* date) {
  if (date != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  date_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.date)
}

// optional int64 date_utc = 2;
inline bool SystemPropertiesProto_Ro_Build::has_date_utc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_date_utc() {
  date_utc_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SystemPropertiesProto_Ro_Build::date_utc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.date_utc)
  return date_utc_;
}
inline void SystemPropertiesProto_Ro_Build::set_date_utc(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  date_utc_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.date_utc)
}

// optional string description = 3;
inline bool SystemPropertiesProto_Ro_Build::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::description() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.description)
  return description_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.description)
}
inline void SystemPropertiesProto_Ro_Build::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.description)
}
inline void SystemPropertiesProto_Ro_Build::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.description)
}
inline void SystemPropertiesProto_Ro_Build::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.description)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_description() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.description)
}

// optional string display_id = 4;
inline bool SystemPropertiesProto_Ro_Build::has_display_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_display_id() {
  display_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::display_id() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.display_id)
  return display_id_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_display_id(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  display_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.display_id)
}
inline void SystemPropertiesProto_Ro_Build::set_display_id(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  display_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.display_id)
}
inline void SystemPropertiesProto_Ro_Build::set_display_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  display_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.display_id)
}
inline void SystemPropertiesProto_Ro_Build::set_display_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  display_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.display_id)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_display_id() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.display_id)
  return display_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_display_id() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.display_id)
  if (!has_display_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return display_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_display_id(std::string* display_id) {
  if (display_id != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  display_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), display_id);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.display_id)
}

// optional string host = 5;
inline bool SystemPropertiesProto_Ro_Build::has_host() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_host() {
  host_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::host() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.host)
  return host_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_host(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  host_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.host)
}
inline void SystemPropertiesProto_Ro_Build::set_host(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  host_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.host)
}
inline void SystemPropertiesProto_Ro_Build::set_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  host_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.host)
}
inline void SystemPropertiesProto_Ro_Build::set_host(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  host_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.host)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_host() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.host)
  return host_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_host() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.host)
  if (!has_host()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return host_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_host(std::string* host) {
  if (host != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  host_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.host)
}

// optional string id = 6;
inline bool SystemPropertiesProto_Ro_Build::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::id() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.id)
  return id_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.id)
}
inline void SystemPropertiesProto_Ro_Build::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.id)
}
inline void SystemPropertiesProto_Ro_Build::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.id)
}
inline void SystemPropertiesProto_Ro_Build::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.id)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_id() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.id)
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_id() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.id)
  if (!has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.id)
}

// optional string product = 7;
inline bool SystemPropertiesProto_Ro_Build::has_product() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_product() {
  product_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::product() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.product)
  return product_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_product(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  product_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.product)
}
inline void SystemPropertiesProto_Ro_Build::set_product(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  product_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.product)
}
inline void SystemPropertiesProto_Ro_Build::set_product(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  product_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.product)
}
inline void SystemPropertiesProto_Ro_Build::set_product(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  product_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.product)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_product() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.product)
  return product_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_product() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.product)
  if (!has_product()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return product_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_product(std::string* product) {
  if (product != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  product_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.product)
}

// optional bool system_root_image = 8;
inline bool SystemPropertiesProto_Ro_Build::has_system_root_image() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_system_root_image() {
  system_root_image_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool SystemPropertiesProto_Ro_Build::system_root_image() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.system_root_image)
  return system_root_image_;
}
inline void SystemPropertiesProto_Ro_Build::set_system_root_image(bool value) {
  _has_bits_[0] |= 0x00000800u;
  system_root_image_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.system_root_image)
}

// optional string tags = 9;
inline bool SystemPropertiesProto_Ro_Build::has_tags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_tags() {
  tags_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::tags() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.tags)
  return tags_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_tags(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  tags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.tags)
}
inline void SystemPropertiesProto_Ro_Build::set_tags(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  tags_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.tags)
}
inline void SystemPropertiesProto_Ro_Build::set_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  tags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.tags)
}
inline void SystemPropertiesProto_Ro_Build::set_tags(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  tags_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.tags)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_tags() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.tags)
  return tags_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_tags() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.tags)
  if (!has_tags()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return tags_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_tags(std::string* tags) {
  if (tags != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  tags_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tags);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.tags)
}

// optional string type = 10;
inline bool SystemPropertiesProto_Ro_Build::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::type() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.type)
  return type_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_type(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.type)
}
inline void SystemPropertiesProto_Ro_Build::set_type(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.type)
}
inline void SystemPropertiesProto_Ro_Build::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.type)
}
inline void SystemPropertiesProto_Ro_Build::set_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.type)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_type() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.type)
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_type() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.type)
  if (!has_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return type_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.type)
}

// optional string user = 11;
inline bool SystemPropertiesProto_Ro_Build::has_user() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_user() {
  user_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& SystemPropertiesProto_Ro_Build::user() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.user)
  return user_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Build::set_user(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  user_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Build.user)
}
inline void SystemPropertiesProto_Ro_Build::set_user(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  user_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Build.user)
}
inline void SystemPropertiesProto_Ro_Build::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  user_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Build.user)
}
inline void SystemPropertiesProto_Ro_Build::set_user(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  user_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Build.user)
}
inline std::string* SystemPropertiesProto_Ro_Build::mutable_user() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.user)
  return user_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Build::release_user() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.user)
  if (!has_user()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return user_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_user(std::string* user) {
  if (user != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  user_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.user)
}

// optional .android.os.SystemPropertiesProto.Ro.Build.Version version = 12;
inline bool SystemPropertiesProto_Ro_Build::has_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_Ro_Build::clear_version() {
  if (version_ != nullptr) version_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Build_Version& SystemPropertiesProto_Ro_Build::version() const {
  const ::android::os::SystemPropertiesProto_Ro_Build_Version* p = version_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Build.version)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Build_Version*>(
      &::android::os::_SystemPropertiesProto_Ro_Build_Version_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Build_Version* SystemPropertiesProto_Ro_Build::release_version() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Build.version)
  _has_bits_[0] &= ~0x00000200u;
  ::android::os::SystemPropertiesProto_Ro_Build_Version* temp = version_;
  version_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Build_Version* SystemPropertiesProto_Ro_Build::mutable_version() {
  _has_bits_[0] |= 0x00000200u;
  if (version_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Build_Version>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Build.version)
  return version_;
}
inline void SystemPropertiesProto_Ro_Build::set_allocated_version(::android::os::SystemPropertiesProto_Ro_Build_Version* version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete version_;
  }
  if (version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Build.version)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Config

// optional string alarm_alert = 1;
inline bool SystemPropertiesProto_Ro_Config::has_alarm_alert() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Config::clear_alarm_alert() {
  alarm_alert_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Config::alarm_alert() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
  return alarm_alert_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Config::set_alarm_alert(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  alarm_alert_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
}
inline void SystemPropertiesProto_Ro_Config::set_alarm_alert(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  alarm_alert_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
}
inline void SystemPropertiesProto_Ro_Config::set_alarm_alert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  alarm_alert_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
}
inline void SystemPropertiesProto_Ro_Config::set_alarm_alert(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  alarm_alert_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
}
inline std::string* SystemPropertiesProto_Ro_Config::mutable_alarm_alert() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
  return alarm_alert_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Config::release_alarm_alert() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
  if (!has_alarm_alert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return alarm_alert_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Config::set_allocated_alarm_alert(std::string* alarm_alert) {
  if (alarm_alert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  alarm_alert_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), alarm_alert);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Config.alarm_alert)
}

// optional int32 media_vol_steps = 2;
inline bool SystemPropertiesProto_Ro_Config::has_media_vol_steps() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Config::clear_media_vol_steps() {
  media_vol_steps_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Config::media_vol_steps() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Config.media_vol_steps)
  return media_vol_steps_;
}
inline void SystemPropertiesProto_Ro_Config::set_media_vol_steps(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  media_vol_steps_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Config.media_vol_steps)
}

// optional string notification_sound = 3;
inline bool SystemPropertiesProto_Ro_Config::has_notification_sound() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Config::clear_notification_sound() {
  notification_sound_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Config::notification_sound() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
  return notification_sound_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Config::set_notification_sound(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  notification_sound_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
}
inline void SystemPropertiesProto_Ro_Config::set_notification_sound(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  notification_sound_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
}
inline void SystemPropertiesProto_Ro_Config::set_notification_sound(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  notification_sound_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
}
inline void SystemPropertiesProto_Ro_Config::set_notification_sound(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  notification_sound_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
}
inline std::string* SystemPropertiesProto_Ro_Config::mutable_notification_sound() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
  return notification_sound_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Config::release_notification_sound() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
  if (!has_notification_sound()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return notification_sound_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Config::set_allocated_notification_sound(std::string* notification_sound) {
  if (notification_sound != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  notification_sound_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notification_sound);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Config.notification_sound)
}

// optional string ringtone = 4;
inline bool SystemPropertiesProto_Ro_Config::has_ringtone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Config::clear_ringtone() {
  ringtone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Config::ringtone() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Config.ringtone)
  return ringtone_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Config::set_ringtone(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  ringtone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Config.ringtone)
}
inline void SystemPropertiesProto_Ro_Config::set_ringtone(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  ringtone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Config.ringtone)
}
inline void SystemPropertiesProto_Ro_Config::set_ringtone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  ringtone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Config.ringtone)
}
inline void SystemPropertiesProto_Ro_Config::set_ringtone(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  ringtone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Config.ringtone)
}
inline std::string* SystemPropertiesProto_Ro_Config::mutable_ringtone() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Config.ringtone)
  return ringtone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Config::release_ringtone() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Config.ringtone)
  if (!has_ringtone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return ringtone_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Config::set_allocated_ringtone(std::string* ringtone) {
  if (ringtone != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ringtone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ringtone);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Config.ringtone)
}

// optional int32 vc_call_vol_steps = 5;
inline bool SystemPropertiesProto_Ro_Config::has_vc_call_vol_steps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Config::clear_vc_call_vol_steps() {
  vc_call_vol_steps_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Config::vc_call_vol_steps() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Config.vc_call_vol_steps)
  return vc_call_vol_steps_;
}
inline void SystemPropertiesProto_Ro_Config::set_vc_call_vol_steps(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  vc_call_vol_steps_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Config.vc_call_vol_steps)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Hardware

// optional string value = 1;
inline bool SystemPropertiesProto_Ro_Hardware::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::value() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.value)
  return value_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.value)
}
inline void SystemPropertiesProto_Ro_Hardware::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.value)
}
inline void SystemPropertiesProto_Ro_Hardware::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.value)
}
inline void SystemPropertiesProto_Ro_Hardware::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.value)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_value() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.value)
}

// optional string activity_recognition = 2;
inline bool SystemPropertiesProto_Ro_Hardware::has_activity_recognition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_activity_recognition() {
  activity_recognition_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::activity_recognition() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
  return activity_recognition_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_activity_recognition(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  activity_recognition_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
}
inline void SystemPropertiesProto_Ro_Hardware::set_activity_recognition(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  activity_recognition_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
}
inline void SystemPropertiesProto_Ro_Hardware::set_activity_recognition(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  activity_recognition_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
}
inline void SystemPropertiesProto_Ro_Hardware::set_activity_recognition(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  activity_recognition_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_activity_recognition() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
  return activity_recognition_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_activity_recognition() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
  if (!has_activity_recognition()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return activity_recognition_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_activity_recognition(std::string* activity_recognition) {
  if (activity_recognition != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  activity_recognition_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), activity_recognition);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.activity_recognition)
}

// optional string audio = 3;
inline bool SystemPropertiesProto_Ro_Hardware::has_audio() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_audio() {
  audio_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::audio() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.audio)
  return audio_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  audio_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.audio)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  audio_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.audio)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  audio_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.audio)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  audio_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.audio)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_audio() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.audio)
  return audio_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_audio() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.audio)
  if (!has_audio()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return audio_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_audio(std::string* audio) {
  if (audio != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  audio_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), audio);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.audio)
}

// optional string audio_policy = 4;
inline bool SystemPropertiesProto_Ro_Hardware::has_audio_policy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_audio_policy() {
  audio_policy_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::audio_policy() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
  return audio_policy_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_policy(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  audio_policy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_policy(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  audio_policy_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_policy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  audio_policy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_policy(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  audio_policy_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_audio_policy() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
  return audio_policy_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_audio_policy() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
  if (!has_audio_policy()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return audio_policy_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_audio_policy(std::string* audio_policy) {
  if (audio_policy != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  audio_policy_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), audio_policy);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.audio_policy)
}

// optional string audio_a2dp = 5;
inline bool SystemPropertiesProto_Ro_Hardware::has_audio_a2dp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_audio_a2dp() {
  audio_a2dp_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::audio_a2dp() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
  return audio_a2dp_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_a2dp(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  audio_a2dp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_a2dp(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  audio_a2dp_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_a2dp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  audio_a2dp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_a2dp(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  audio_a2dp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_audio_a2dp() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
  return audio_a2dp_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_audio_a2dp() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
  if (!has_audio_a2dp()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return audio_a2dp_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_audio_a2dp(std::string* audio_a2dp) {
  if (audio_a2dp != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  audio_a2dp_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), audio_a2dp);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.audio_a2dp)
}

// optional string audio_primary = 6;
inline bool SystemPropertiesProto_Ro_Hardware::has_audio_primary() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_audio_primary() {
  audio_primary_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::audio_primary() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
  return audio_primary_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_primary(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  audio_primary_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_primary(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  audio_primary_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_primary(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  audio_primary_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_primary(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  audio_primary_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_audio_primary() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
  return audio_primary_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_audio_primary() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
  if (!has_audio_primary()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return audio_primary_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_audio_primary(std::string* audio_primary) {
  if (audio_primary != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  audio_primary_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), audio_primary);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.audio_primary)
}

// optional string audio_usb = 7;
inline bool SystemPropertiesProto_Ro_Hardware::has_audio_usb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_audio_usb() {
  audio_usb_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::audio_usb() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
  return audio_usb_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_usb(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  audio_usb_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_usb(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  audio_usb_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_usb(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  audio_usb_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
}
inline void SystemPropertiesProto_Ro_Hardware::set_audio_usb(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  audio_usb_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_audio_usb() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
  return audio_usb_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_audio_usb() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
  if (!has_audio_usb()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return audio_usb_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_audio_usb(std::string* audio_usb) {
  if (audio_usb != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  audio_usb_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), audio_usb);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.audio_usb)
}

// optional string bootctrl = 8;
inline bool SystemPropertiesProto_Ro_Hardware::has_bootctrl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_bootctrl() {
  bootctrl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::bootctrl() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
  return bootctrl_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_bootctrl(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  bootctrl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
}
inline void SystemPropertiesProto_Ro_Hardware::set_bootctrl(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  bootctrl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
}
inline void SystemPropertiesProto_Ro_Hardware::set_bootctrl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  bootctrl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
}
inline void SystemPropertiesProto_Ro_Hardware::set_bootctrl(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  bootctrl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_bootctrl() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
  return bootctrl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_bootctrl() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
  if (!has_bootctrl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return bootctrl_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_bootctrl(std::string* bootctrl) {
  if (bootctrl != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  bootctrl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bootctrl);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.bootctrl)
}

// optional string camera = 9;
inline bool SystemPropertiesProto_Ro_Hardware::has_camera() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_camera() {
  camera_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::camera() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.camera)
  return camera_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_camera(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  camera_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.camera)
}
inline void SystemPropertiesProto_Ro_Hardware::set_camera(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  camera_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.camera)
}
inline void SystemPropertiesProto_Ro_Hardware::set_camera(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  camera_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.camera)
}
inline void SystemPropertiesProto_Ro_Hardware::set_camera(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  camera_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.camera)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_camera() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.camera)
  return camera_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_camera() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.camera)
  if (!has_camera()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return camera_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_camera(std::string* camera) {
  if (camera != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  camera_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), camera);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.camera)
}

// optional string consumerir = 10;
inline bool SystemPropertiesProto_Ro_Hardware::has_consumerir() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_consumerir() {
  consumerir_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::consumerir() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
  return consumerir_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_consumerir(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  consumerir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
}
inline void SystemPropertiesProto_Ro_Hardware::set_consumerir(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  consumerir_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
}
inline void SystemPropertiesProto_Ro_Hardware::set_consumerir(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  consumerir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
}
inline void SystemPropertiesProto_Ro_Hardware::set_consumerir(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  consumerir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_consumerir() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
  return consumerir_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_consumerir() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
  if (!has_consumerir()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return consumerir_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_consumerir(std::string* consumerir) {
  if (consumerir != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  consumerir_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), consumerir);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.consumerir)
}

// optional string context_hub = 11;
inline bool SystemPropertiesProto_Ro_Hardware::has_context_hub() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_context_hub() {
  context_hub_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::context_hub() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
  return context_hub_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_context_hub(const std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  context_hub_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
}
inline void SystemPropertiesProto_Ro_Hardware::set_context_hub(std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  context_hub_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
}
inline void SystemPropertiesProto_Ro_Hardware::set_context_hub(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  context_hub_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
}
inline void SystemPropertiesProto_Ro_Hardware::set_context_hub(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  context_hub_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_context_hub() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
  return context_hub_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_context_hub() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
  if (!has_context_hub()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return context_hub_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_context_hub(std::string* context_hub) {
  if (context_hub != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  context_hub_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), context_hub);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.context_hub)
}

// optional string egl = 12;
inline bool SystemPropertiesProto_Ro_Hardware::has_egl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_egl() {
  egl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::egl() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.egl)
  return egl_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_egl(const std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  egl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.egl)
}
inline void SystemPropertiesProto_Ro_Hardware::set_egl(std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  egl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.egl)
}
inline void SystemPropertiesProto_Ro_Hardware::set_egl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  egl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.egl)
}
inline void SystemPropertiesProto_Ro_Hardware::set_egl(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  egl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.egl)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_egl() {
  _has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.egl)
  return egl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_egl() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.egl)
  if (!has_egl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return egl_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_egl(std::string* egl) {
  if (egl != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  egl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), egl);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.egl)
}

// optional string fingerprint = 13;
inline bool SystemPropertiesProto_Ro_Hardware::has_fingerprint() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_fingerprint() {
  fingerprint_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00001000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::fingerprint() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
  return fingerprint_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_fingerprint(const std::string& value) {
  _has_bits_[0] |= 0x00001000u;
  fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
}
inline void SystemPropertiesProto_Ro_Hardware::set_fingerprint(std::string&& value) {
  _has_bits_[0] |= 0x00001000u;
  fingerprint_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
}
inline void SystemPropertiesProto_Ro_Hardware::set_fingerprint(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00001000u;
  fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
}
inline void SystemPropertiesProto_Ro_Hardware::set_fingerprint(const char* value, size_t size) {
  _has_bits_[0] |= 0x00001000u;
  fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_fingerprint() {
  _has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
  return fingerprint_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_fingerprint() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
  if (!has_fingerprint()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00001000u;
  return fingerprint_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_fingerprint(std::string* fingerprint) {
  if (fingerprint != nullptr) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  fingerprint_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fingerprint);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.fingerprint)
}

// optional string flp = 14;
inline bool SystemPropertiesProto_Ro_Hardware::has_flp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_flp() {
  flp_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00002000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::flp() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.flp)
  return flp_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_flp(const std::string& value) {
  _has_bits_[0] |= 0x00002000u;
  flp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.flp)
}
inline void SystemPropertiesProto_Ro_Hardware::set_flp(std::string&& value) {
  _has_bits_[0] |= 0x00002000u;
  flp_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.flp)
}
inline void SystemPropertiesProto_Ro_Hardware::set_flp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00002000u;
  flp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.flp)
}
inline void SystemPropertiesProto_Ro_Hardware::set_flp(const char* value, size_t size) {
  _has_bits_[0] |= 0x00002000u;
  flp_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.flp)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_flp() {
  _has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.flp)
  return flp_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_flp() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.flp)
  if (!has_flp()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00002000u;
  return flp_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_flp(std::string* flp) {
  if (flp != nullptr) {
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  flp_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), flp);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.flp)
}

// optional string gatekeeper = 15;
inline bool SystemPropertiesProto_Ro_Hardware::has_gatekeeper() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_gatekeeper() {
  gatekeeper_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00004000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::gatekeeper() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
  return gatekeeper_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_gatekeeper(const std::string& value) {
  _has_bits_[0] |= 0x00004000u;
  gatekeeper_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gatekeeper(std::string&& value) {
  _has_bits_[0] |= 0x00004000u;
  gatekeeper_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gatekeeper(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00004000u;
  gatekeeper_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gatekeeper(const char* value, size_t size) {
  _has_bits_[0] |= 0x00004000u;
  gatekeeper_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_gatekeeper() {
  _has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
  return gatekeeper_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_gatekeeper() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
  if (!has_gatekeeper()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00004000u;
  return gatekeeper_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_gatekeeper(std::string* gatekeeper) {
  if (gatekeeper != nullptr) {
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  gatekeeper_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gatekeeper);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.gatekeeper)
}

// optional string gps = 16;
inline bool SystemPropertiesProto_Ro_Hardware::has_gps() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_gps() {
  gps_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00008000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::gps() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.gps)
  return gps_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_gps(const std::string& value) {
  _has_bits_[0] |= 0x00008000u;
  gps_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.gps)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gps(std::string&& value) {
  _has_bits_[0] |= 0x00008000u;
  gps_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.gps)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gps(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00008000u;
  gps_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.gps)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gps(const char* value, size_t size) {
  _has_bits_[0] |= 0x00008000u;
  gps_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.gps)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_gps() {
  _has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.gps)
  return gps_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_gps() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.gps)
  if (!has_gps()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00008000u;
  return gps_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_gps(std::string* gps) {
  if (gps != nullptr) {
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  gps_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gps);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.gps)
}

// optional string gralloc = 17;
inline bool SystemPropertiesProto_Ro_Hardware::has_gralloc() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_gralloc() {
  gralloc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00010000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::gralloc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
  return gralloc_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_gralloc(const std::string& value) {
  _has_bits_[0] |= 0x00010000u;
  gralloc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gralloc(std::string&& value) {
  _has_bits_[0] |= 0x00010000u;
  gralloc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gralloc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00010000u;
  gralloc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
}
inline void SystemPropertiesProto_Ro_Hardware::set_gralloc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00010000u;
  gralloc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_gralloc() {
  _has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
  return gralloc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_gralloc() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
  if (!has_gralloc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00010000u;
  return gralloc_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_gralloc(std::string* gralloc) {
  if (gralloc != nullptr) {
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  gralloc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gralloc);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.gralloc)
}

// optional string hdmi_cec = 18;
inline bool SystemPropertiesProto_Ro_Hardware::has_hdmi_cec() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_hdmi_cec() {
  hdmi_cec_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00020000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::hdmi_cec() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
  return hdmi_cec_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_hdmi_cec(const std::string& value) {
  _has_bits_[0] |= 0x00020000u;
  hdmi_cec_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
}
inline void SystemPropertiesProto_Ro_Hardware::set_hdmi_cec(std::string&& value) {
  _has_bits_[0] |= 0x00020000u;
  hdmi_cec_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
}
inline void SystemPropertiesProto_Ro_Hardware::set_hdmi_cec(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00020000u;
  hdmi_cec_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
}
inline void SystemPropertiesProto_Ro_Hardware::set_hdmi_cec(const char* value, size_t size) {
  _has_bits_[0] |= 0x00020000u;
  hdmi_cec_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_hdmi_cec() {
  _has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
  return hdmi_cec_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_hdmi_cec() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
  if (!has_hdmi_cec()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00020000u;
  return hdmi_cec_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_hdmi_cec(std::string* hdmi_cec) {
  if (hdmi_cec != nullptr) {
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  hdmi_cec_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hdmi_cec);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.hdmi_cec)
}

// optional string hwcomposer = 19;
inline bool SystemPropertiesProto_Ro_Hardware::has_hwcomposer() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_hwcomposer() {
  hwcomposer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00040000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::hwcomposer() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
  return hwcomposer_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_hwcomposer(const std::string& value) {
  _has_bits_[0] |= 0x00040000u;
  hwcomposer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
}
inline void SystemPropertiesProto_Ro_Hardware::set_hwcomposer(std::string&& value) {
  _has_bits_[0] |= 0x00040000u;
  hwcomposer_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
}
inline void SystemPropertiesProto_Ro_Hardware::set_hwcomposer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00040000u;
  hwcomposer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
}
inline void SystemPropertiesProto_Ro_Hardware::set_hwcomposer(const char* value, size_t size) {
  _has_bits_[0] |= 0x00040000u;
  hwcomposer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_hwcomposer() {
  _has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
  return hwcomposer_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_hwcomposer() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
  if (!has_hwcomposer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00040000u;
  return hwcomposer_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_hwcomposer(std::string* hwcomposer) {
  if (hwcomposer != nullptr) {
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  hwcomposer_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hwcomposer);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.hwcomposer)
}

// optional string input = 20;
inline bool SystemPropertiesProto_Ro_Hardware::has_input() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_input() {
  input_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00080000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::input() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.input)
  return input_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_input(const std::string& value) {
  _has_bits_[0] |= 0x00080000u;
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.input)
}
inline void SystemPropertiesProto_Ro_Hardware::set_input(std::string&& value) {
  _has_bits_[0] |= 0x00080000u;
  input_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.input)
}
inline void SystemPropertiesProto_Ro_Hardware::set_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00080000u;
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.input)
}
inline void SystemPropertiesProto_Ro_Hardware::set_input(const char* value, size_t size) {
  _has_bits_[0] |= 0x00080000u;
  input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.input)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_input() {
  _has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.input)
  return input_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_input() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.input)
  if (!has_input()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00080000u;
  return input_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_input(std::string* input) {
  if (input != nullptr) {
    _has_bits_[0] |= 0x00080000u;
  } else {
    _has_bits_[0] &= ~0x00080000u;
  }
  input_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.input)
}

// optional string keystore = 21;
inline bool SystemPropertiesProto_Ro_Hardware::has_keystore() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_keystore() {
  keystore_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00100000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::keystore() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
  return keystore_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_keystore(const std::string& value) {
  _has_bits_[0] |= 0x00100000u;
  keystore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
}
inline void SystemPropertiesProto_Ro_Hardware::set_keystore(std::string&& value) {
  _has_bits_[0] |= 0x00100000u;
  keystore_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
}
inline void SystemPropertiesProto_Ro_Hardware::set_keystore(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00100000u;
  keystore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
}
inline void SystemPropertiesProto_Ro_Hardware::set_keystore(const char* value, size_t size) {
  _has_bits_[0] |= 0x00100000u;
  keystore_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_keystore() {
  _has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
  return keystore_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_keystore() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
  if (!has_keystore()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00100000u;
  return keystore_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_keystore(std::string* keystore) {
  if (keystore != nullptr) {
    _has_bits_[0] |= 0x00100000u;
  } else {
    _has_bits_[0] &= ~0x00100000u;
  }
  keystore_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keystore);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.keystore)
}

// optional string lights = 22;
inline bool SystemPropertiesProto_Ro_Hardware::has_lights() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_lights() {
  lights_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00200000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::lights() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.lights)
  return lights_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_lights(const std::string& value) {
  _has_bits_[0] |= 0x00200000u;
  lights_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.lights)
}
inline void SystemPropertiesProto_Ro_Hardware::set_lights(std::string&& value) {
  _has_bits_[0] |= 0x00200000u;
  lights_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.lights)
}
inline void SystemPropertiesProto_Ro_Hardware::set_lights(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00200000u;
  lights_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.lights)
}
inline void SystemPropertiesProto_Ro_Hardware::set_lights(const char* value, size_t size) {
  _has_bits_[0] |= 0x00200000u;
  lights_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.lights)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_lights() {
  _has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.lights)
  return lights_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_lights() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.lights)
  if (!has_lights()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00200000u;
  return lights_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_lights(std::string* lights) {
  if (lights != nullptr) {
    _has_bits_[0] |= 0x00200000u;
  } else {
    _has_bits_[0] &= ~0x00200000u;
  }
  lights_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lights);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.lights)
}

// optional string local_time = 23;
inline bool SystemPropertiesProto_Ro_Hardware::has_local_time() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_local_time() {
  local_time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00400000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::local_time() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
  return local_time_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_local_time(const std::string& value) {
  _has_bits_[0] |= 0x00400000u;
  local_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
}
inline void SystemPropertiesProto_Ro_Hardware::set_local_time(std::string&& value) {
  _has_bits_[0] |= 0x00400000u;
  local_time_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
}
inline void SystemPropertiesProto_Ro_Hardware::set_local_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00400000u;
  local_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
}
inline void SystemPropertiesProto_Ro_Hardware::set_local_time(const char* value, size_t size) {
  _has_bits_[0] |= 0x00400000u;
  local_time_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_local_time() {
  _has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
  return local_time_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_local_time() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
  if (!has_local_time()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00400000u;
  return local_time_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_local_time(std::string* local_time) {
  if (local_time != nullptr) {
    _has_bits_[0] |= 0x00400000u;
  } else {
    _has_bits_[0] &= ~0x00400000u;
  }
  local_time_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), local_time);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.local_time)
}

// optional string memtrack = 24;
inline bool SystemPropertiesProto_Ro_Hardware::has_memtrack() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_memtrack() {
  memtrack_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00800000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::memtrack() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
  return memtrack_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_memtrack(const std::string& value) {
  _has_bits_[0] |= 0x00800000u;
  memtrack_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
}
inline void SystemPropertiesProto_Ro_Hardware::set_memtrack(std::string&& value) {
  _has_bits_[0] |= 0x00800000u;
  memtrack_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
}
inline void SystemPropertiesProto_Ro_Hardware::set_memtrack(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00800000u;
  memtrack_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
}
inline void SystemPropertiesProto_Ro_Hardware::set_memtrack(const char* value, size_t size) {
  _has_bits_[0] |= 0x00800000u;
  memtrack_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_memtrack() {
  _has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
  return memtrack_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_memtrack() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
  if (!has_memtrack()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00800000u;
  return memtrack_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_memtrack(std::string* memtrack) {
  if (memtrack != nullptr) {
    _has_bits_[0] |= 0x00800000u;
  } else {
    _has_bits_[0] &= ~0x00800000u;
  }
  memtrack_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), memtrack);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.memtrack)
}

// optional string nfc = 25;
inline bool SystemPropertiesProto_Ro_Hardware::has_nfc() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_nfc() {
  nfc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x01000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::nfc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
  return nfc_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc(const std::string& value) {
  _has_bits_[0] |= 0x01000000u;
  nfc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc(std::string&& value) {
  _has_bits_[0] |= 0x01000000u;
  nfc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x01000000u;
  nfc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc(const char* value, size_t size) {
  _has_bits_[0] |= 0x01000000u;
  nfc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_nfc() {
  _has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
  return nfc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_nfc() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
  if (!has_nfc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x01000000u;
  return nfc_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_nfc(std::string* nfc) {
  if (nfc != nullptr) {
    _has_bits_[0] |= 0x01000000u;
  } else {
    _has_bits_[0] &= ~0x01000000u;
  }
  nfc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nfc);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.nfc)
}

// optional string nfc_nci = 26;
inline bool SystemPropertiesProto_Ro_Hardware::has_nfc_nci() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_nfc_nci() {
  nfc_nci_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x02000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::nfc_nci() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
  return nfc_nci_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_nci(const std::string& value) {
  _has_bits_[0] |= 0x02000000u;
  nfc_nci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_nci(std::string&& value) {
  _has_bits_[0] |= 0x02000000u;
  nfc_nci_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_nci(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x02000000u;
  nfc_nci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_nci(const char* value, size_t size) {
  _has_bits_[0] |= 0x02000000u;
  nfc_nci_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_nfc_nci() {
  _has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
  return nfc_nci_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_nfc_nci() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
  if (!has_nfc_nci()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x02000000u;
  return nfc_nci_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_nfc_nci(std::string* nfc_nci) {
  if (nfc_nci != nullptr) {
    _has_bits_[0] |= 0x02000000u;
  } else {
    _has_bits_[0] &= ~0x02000000u;
  }
  nfc_nci_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nfc_nci);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.nfc_nci)
}

// optional string nfc_tag = 27;
inline bool SystemPropertiesProto_Ro_Hardware::has_nfc_tag() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_nfc_tag() {
  nfc_tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x04000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::nfc_tag() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
  return nfc_tag_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_tag(const std::string& value) {
  _has_bits_[0] |= 0x04000000u;
  nfc_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_tag(std::string&& value) {
  _has_bits_[0] |= 0x04000000u;
  nfc_tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x04000000u;
  nfc_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nfc_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x04000000u;
  nfc_tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_nfc_tag() {
  _has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
  return nfc_tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_nfc_tag() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
  if (!has_nfc_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x04000000u;
  return nfc_tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_nfc_tag(std::string* nfc_tag) {
  if (nfc_tag != nullptr) {
    _has_bits_[0] |= 0x04000000u;
  } else {
    _has_bits_[0] &= ~0x04000000u;
  }
  nfc_tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nfc_tag);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.nfc_tag)
}

// optional string nvram = 28;
inline bool SystemPropertiesProto_Ro_Hardware::has_nvram() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_nvram() {
  nvram_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x08000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::nvram() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
  return nvram_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_nvram(const std::string& value) {
  _has_bits_[0] |= 0x08000000u;
  nvram_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nvram(std::string&& value) {
  _has_bits_[0] |= 0x08000000u;
  nvram_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nvram(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x08000000u;
  nvram_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
}
inline void SystemPropertiesProto_Ro_Hardware::set_nvram(const char* value, size_t size) {
  _has_bits_[0] |= 0x08000000u;
  nvram_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_nvram() {
  _has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
  return nvram_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_nvram() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
  if (!has_nvram()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x08000000u;
  return nvram_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_nvram(std::string* nvram) {
  if (nvram != nullptr) {
    _has_bits_[0] |= 0x08000000u;
  } else {
    _has_bits_[0] &= ~0x08000000u;
  }
  nvram_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nvram);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.nvram)
}

// optional string power = 29;
inline bool SystemPropertiesProto_Ro_Hardware::has_power() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_power() {
  power_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x10000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::power() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.power)
  return power_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_power(const std::string& value) {
  _has_bits_[0] |= 0x10000000u;
  power_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.power)
}
inline void SystemPropertiesProto_Ro_Hardware::set_power(std::string&& value) {
  _has_bits_[0] |= 0x10000000u;
  power_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.power)
}
inline void SystemPropertiesProto_Ro_Hardware::set_power(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x10000000u;
  power_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.power)
}
inline void SystemPropertiesProto_Ro_Hardware::set_power(const char* value, size_t size) {
  _has_bits_[0] |= 0x10000000u;
  power_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.power)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_power() {
  _has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.power)
  return power_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_power() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.power)
  if (!has_power()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x10000000u;
  return power_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_power(std::string* power) {
  if (power != nullptr) {
    _has_bits_[0] |= 0x10000000u;
  } else {
    _has_bits_[0] &= ~0x10000000u;
  }
  power_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), power);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.power)
}

// optional string radio = 30;
inline bool SystemPropertiesProto_Ro_Hardware::has_radio() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_radio() {
  radio_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x20000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::radio() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.radio)
  return radio_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_radio(const std::string& value) {
  _has_bits_[0] |= 0x20000000u;
  radio_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.radio)
}
inline void SystemPropertiesProto_Ro_Hardware::set_radio(std::string&& value) {
  _has_bits_[0] |= 0x20000000u;
  radio_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.radio)
}
inline void SystemPropertiesProto_Ro_Hardware::set_radio(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x20000000u;
  radio_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.radio)
}
inline void SystemPropertiesProto_Ro_Hardware::set_radio(const char* value, size_t size) {
  _has_bits_[0] |= 0x20000000u;
  radio_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.radio)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_radio() {
  _has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.radio)
  return radio_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_radio() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.radio)
  if (!has_radio()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x20000000u;
  return radio_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_radio(std::string* radio) {
  if (radio != nullptr) {
    _has_bits_[0] |= 0x20000000u;
  } else {
    _has_bits_[0] &= ~0x20000000u;
  }
  radio_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), radio);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.radio)
}

// optional string sensors = 31;
inline bool SystemPropertiesProto_Ro_Hardware::has_sensors() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_sensors() {
  sensors_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x40000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::sensors() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
  return sensors_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_sensors(const std::string& value) {
  _has_bits_[0] |= 0x40000000u;
  sensors_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
}
inline void SystemPropertiesProto_Ro_Hardware::set_sensors(std::string&& value) {
  _has_bits_[0] |= 0x40000000u;
  sensors_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
}
inline void SystemPropertiesProto_Ro_Hardware::set_sensors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x40000000u;
  sensors_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
}
inline void SystemPropertiesProto_Ro_Hardware::set_sensors(const char* value, size_t size) {
  _has_bits_[0] |= 0x40000000u;
  sensors_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_sensors() {
  _has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
  return sensors_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_sensors() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
  if (!has_sensors()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x40000000u;
  return sensors_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_sensors(std::string* sensors) {
  if (sensors != nullptr) {
    _has_bits_[0] |= 0x40000000u;
  } else {
    _has_bits_[0] &= ~0x40000000u;
  }
  sensors_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sensors);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.sensors)
}

// optional string sound_trigger = 32;
inline bool SystemPropertiesProto_Ro_Hardware::has_sound_trigger() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_sound_trigger() {
  sound_trigger_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x80000000u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::sound_trigger() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
  return sound_trigger_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_sound_trigger(const std::string& value) {
  _has_bits_[0] |= 0x80000000u;
  sound_trigger_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
}
inline void SystemPropertiesProto_Ro_Hardware::set_sound_trigger(std::string&& value) {
  _has_bits_[0] |= 0x80000000u;
  sound_trigger_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
}
inline void SystemPropertiesProto_Ro_Hardware::set_sound_trigger(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x80000000u;
  sound_trigger_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
}
inline void SystemPropertiesProto_Ro_Hardware::set_sound_trigger(const char* value, size_t size) {
  _has_bits_[0] |= 0x80000000u;
  sound_trigger_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_sound_trigger() {
  _has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
  return sound_trigger_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_sound_trigger() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
  if (!has_sound_trigger()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x80000000u;
  return sound_trigger_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_sound_trigger(std::string* sound_trigger) {
  if (sound_trigger != nullptr) {
    _has_bits_[0] |= 0x80000000u;
  } else {
    _has_bits_[0] &= ~0x80000000u;
  }
  sound_trigger_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sound_trigger);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.sound_trigger)
}

// optional string thermal = 33;
inline bool SystemPropertiesProto_Ro_Hardware::has_thermal() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_thermal() {
  thermal_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::thermal() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
  return thermal_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_thermal(const std::string& value) {
  _has_bits_[1] |= 0x00000001u;
  thermal_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
}
inline void SystemPropertiesProto_Ro_Hardware::set_thermal(std::string&& value) {
  _has_bits_[1] |= 0x00000001u;
  thermal_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
}
inline void SystemPropertiesProto_Ro_Hardware::set_thermal(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000001u;
  thermal_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
}
inline void SystemPropertiesProto_Ro_Hardware::set_thermal(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000001u;
  thermal_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_thermal() {
  _has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
  return thermal_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_thermal() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
  if (!has_thermal()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000001u;
  return thermal_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_thermal(std::string* thermal) {
  if (thermal != nullptr) {
    _has_bits_[1] |= 0x00000001u;
  } else {
    _has_bits_[1] &= ~0x00000001u;
  }
  thermal_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thermal);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.thermal)
}

// optional string tv_input = 34;
inline bool SystemPropertiesProto_Ro_Hardware::has_tv_input() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_tv_input() {
  tv_input_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::tv_input() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
  return tv_input_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_tv_input(const std::string& value) {
  _has_bits_[1] |= 0x00000002u;
  tv_input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
}
inline void SystemPropertiesProto_Ro_Hardware::set_tv_input(std::string&& value) {
  _has_bits_[1] |= 0x00000002u;
  tv_input_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
}
inline void SystemPropertiesProto_Ro_Hardware::set_tv_input(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000002u;
  tv_input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
}
inline void SystemPropertiesProto_Ro_Hardware::set_tv_input(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000002u;
  tv_input_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_tv_input() {
  _has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
  return tv_input_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_tv_input() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
  if (!has_tv_input()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000002u;
  return tv_input_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_tv_input(std::string* tv_input) {
  if (tv_input != nullptr) {
    _has_bits_[1] |= 0x00000002u;
  } else {
    _has_bits_[1] &= ~0x00000002u;
  }
  tv_input_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tv_input);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.tv_input)
}

// optional string type = 35;
inline bool SystemPropertiesProto_Ro_Hardware::has_type() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::type() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.type)
  return type_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_type(const std::string& value) {
  _has_bits_[1] |= 0x00000004u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.type)
}
inline void SystemPropertiesProto_Ro_Hardware::set_type(std::string&& value) {
  _has_bits_[1] |= 0x00000004u;
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.type)
}
inline void SystemPropertiesProto_Ro_Hardware::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000004u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.type)
}
inline void SystemPropertiesProto_Ro_Hardware::set_type(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000004u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.type)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_type() {
  _has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.type)
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_type() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.type)
  if (!has_type()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000004u;
  return type_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    _has_bits_[1] |= 0x00000004u;
  } else {
    _has_bits_[1] &= ~0x00000004u;
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.type)
}

// optional string vehicle = 36;
inline bool SystemPropertiesProto_Ro_Hardware::has_vehicle() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_vehicle() {
  vehicle_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::vehicle() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
  return vehicle_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_vehicle(const std::string& value) {
  _has_bits_[1] |= 0x00000008u;
  vehicle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vehicle(std::string&& value) {
  _has_bits_[1] |= 0x00000008u;
  vehicle_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vehicle(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000008u;
  vehicle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vehicle(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000008u;
  vehicle_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_vehicle() {
  _has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
  return vehicle_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_vehicle() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
  if (!has_vehicle()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000008u;
  return vehicle_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_vehicle(std::string* vehicle) {
  if (vehicle != nullptr) {
    _has_bits_[1] |= 0x00000008u;
  } else {
    _has_bits_[1] &= ~0x00000008u;
  }
  vehicle_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vehicle);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.vehicle)
}

// optional string vibrator = 37;
inline bool SystemPropertiesProto_Ro_Hardware::has_vibrator() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_vibrator() {
  vibrator_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::vibrator() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
  return vibrator_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_vibrator(const std::string& value) {
  _has_bits_[1] |= 0x00000010u;
  vibrator_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vibrator(std::string&& value) {
  _has_bits_[1] |= 0x00000010u;
  vibrator_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vibrator(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000010u;
  vibrator_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vibrator(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000010u;
  vibrator_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_vibrator() {
  _has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
  return vibrator_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_vibrator() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
  if (!has_vibrator()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000010u;
  return vibrator_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_vibrator(std::string* vibrator) {
  if (vibrator != nullptr) {
    _has_bits_[1] |= 0x00000010u;
  } else {
    _has_bits_[1] &= ~0x00000010u;
  }
  vibrator_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vibrator);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.vibrator)
}

// optional string virtual_device = 38;
inline bool SystemPropertiesProto_Ro_Hardware::has_virtual_device() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_virtual_device() {
  virtual_device_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::virtual_device() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
  return virtual_device_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_virtual_device(const std::string& value) {
  _has_bits_[1] |= 0x00000020u;
  virtual_device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
}
inline void SystemPropertiesProto_Ro_Hardware::set_virtual_device(std::string&& value) {
  _has_bits_[1] |= 0x00000020u;
  virtual_device_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
}
inline void SystemPropertiesProto_Ro_Hardware::set_virtual_device(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000020u;
  virtual_device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
}
inline void SystemPropertiesProto_Ro_Hardware::set_virtual_device(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000020u;
  virtual_device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_virtual_device() {
  _has_bits_[1] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
  return virtual_device_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_virtual_device() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
  if (!has_virtual_device()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000020u;
  return virtual_device_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_virtual_device(std::string* virtual_device) {
  if (virtual_device != nullptr) {
    _has_bits_[1] |= 0x00000020u;
  } else {
    _has_bits_[1] &= ~0x00000020u;
  }
  virtual_device_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), virtual_device);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.virtual_device)
}

// optional string vulkan = 39;
inline bool SystemPropertiesProto_Ro_Hardware::has_vulkan() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro_Hardware::clear_vulkan() {
  vulkan_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[1] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_Ro_Hardware::vulkan() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
  return vulkan_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Hardware::set_vulkan(const std::string& value) {
  _has_bits_[1] |= 0x00000040u;
  vulkan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vulkan(std::string&& value) {
  _has_bits_[1] |= 0x00000040u;
  vulkan_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vulkan(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[1] |= 0x00000040u;
  vulkan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
}
inline void SystemPropertiesProto_Ro_Hardware::set_vulkan(const char* value, size_t size) {
  _has_bits_[1] |= 0x00000040u;
  vulkan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
}
inline std::string* SystemPropertiesProto_Ro_Hardware::mutable_vulkan() {
  _has_bits_[1] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
  return vulkan_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Hardware::release_vulkan() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
  if (!has_vulkan()) {
    return nullptr;
  }
  _has_bits_[1] &= ~0x00000040u;
  return vulkan_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Hardware::set_allocated_vulkan(std::string* vulkan) {
  if (vulkan != nullptr) {
    _has_bits_[1] |= 0x00000040u;
  } else {
    _has_bits_[1] &= ~0x00000040u;
  }
  vulkan_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vulkan);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Hardware.vulkan)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Product_Vendor

// optional string brand = 1;
inline bool SystemPropertiesProto_Ro_Product_Vendor::has_brand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Product_Vendor::clear_brand() {
  brand_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Product_Vendor::brand() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
  return brand_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_brand(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  brand_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_brand(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  brand_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_brand(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  brand_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_brand(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  brand_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::mutable_brand() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
  return brand_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::release_brand() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
  if (!has_brand()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return brand_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_allocated_brand(std::string* brand) {
  if (brand != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  brand_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), brand);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.Vendor.brand)
}

// optional string device = 2;
inline bool SystemPropertiesProto_Ro_Product_Vendor::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Product_Vendor::clear_device() {
  device_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Product_Vendor::device() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
  return device_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_device(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_device(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  device_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_device(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_device(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::mutable_device() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
  return device_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::release_device() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
  if (!has_device()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return device_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_allocated_device(std::string* device) {
  if (device != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  device_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.Vendor.device)
}

// optional string manufacturer = 3;
inline bool SystemPropertiesProto_Ro_Product_Vendor::has_manufacturer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Product_Vendor::clear_manufacturer() {
  manufacturer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Product_Vendor::manufacturer() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
  return manufacturer_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_manufacturer(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  manufacturer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_manufacturer(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  manufacturer_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  manufacturer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_manufacturer(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  manufacturer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::mutable_manufacturer() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
  return manufacturer_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::release_manufacturer() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
  if (!has_manufacturer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return manufacturer_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_allocated_manufacturer(std::string* manufacturer) {
  if (manufacturer != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  manufacturer_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), manufacturer);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.Vendor.manufacturer)
}

// optional string model = 4;
inline bool SystemPropertiesProto_Ro_Product_Vendor::has_model() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Product_Vendor::clear_model() {
  model_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Product_Vendor::model() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
  return model_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_model(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_model(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  model_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_model(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_model(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::mutable_model() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
  return model_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::release_model() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
  if (!has_model()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return model_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_allocated_model(std::string* model) {
  if (model != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  model_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.Vendor.model)
}

// optional string name = 5;
inline bool SystemPropertiesProto_Ro_Product_Vendor::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Product_Vendor::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Product_Vendor::name() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
  return name_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::mutable_name() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product_Vendor::release_name() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product_Vendor::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.Vendor.name)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Product

// optional string board = 1;
inline bool SystemPropertiesProto_Ro_Product::has_board() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_board() {
  board_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::board() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.board)
  return board_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_board(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  board_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.board)
}
inline void SystemPropertiesProto_Ro_Product::set_board(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  board_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.board)
}
inline void SystemPropertiesProto_Ro_Product::set_board(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  board_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.board)
}
inline void SystemPropertiesProto_Ro_Product::set_board(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  board_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.board)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_board() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.board)
  return board_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_board() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.board)
  if (!has_board()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return board_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_board(std::string* board) {
  if (board != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  board_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), board);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.board)
}

// optional string brand = 2;
inline bool SystemPropertiesProto_Ro_Product::has_brand() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_brand() {
  brand_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::brand() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.brand)
  return brand_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_brand(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  brand_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.brand)
}
inline void SystemPropertiesProto_Ro_Product::set_brand(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  brand_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.brand)
}
inline void SystemPropertiesProto_Ro_Product::set_brand(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  brand_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.brand)
}
inline void SystemPropertiesProto_Ro_Product::set_brand(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  brand_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.brand)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_brand() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.brand)
  return brand_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_brand() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.brand)
  if (!has_brand()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return brand_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_brand(std::string* brand) {
  if (brand != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  brand_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), brand);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.brand)
}

// optional string cpu_abi = 3;
inline bool SystemPropertiesProto_Ro_Product::has_cpu_abi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_cpu_abi() {
  cpu_abi_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::cpu_abi() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
  return cpu_abi_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abi(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  cpu_abi_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abi(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  cpu_abi_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abi(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  cpu_abi_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abi(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  cpu_abi_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_cpu_abi() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
  return cpu_abi_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_cpu_abi() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
  if (!has_cpu_abi()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return cpu_abi_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_cpu_abi(std::string* cpu_abi) {
  if (cpu_abi != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  cpu_abi_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cpu_abi);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.cpu_abi)
}

// repeated string cpu_abilist = 4;
inline int SystemPropertiesProto_Ro_Product::cpu_abilist_size() const {
  return cpu_abilist_.size();
}
inline void SystemPropertiesProto_Ro_Product::clear_cpu_abilist() {
  cpu_abilist_.Clear();
}
inline const std::string& SystemPropertiesProto_Ro_Product::cpu_abilist(int index) const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  return cpu_abilist_.Get(index);
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_cpu_abilist(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  return cpu_abilist_.Mutable(index);
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  cpu_abilist_.Mutable(index)->assign(value);
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  cpu_abilist_.Mutable(index)->assign(std::move(value));
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_abilist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist(int index, const char* value, size_t size) {
  cpu_abilist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
}
inline std::string* SystemPropertiesProto_Ro_Product::add_cpu_abilist() {
  // @@protoc_insertion_point(field_add_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  return cpu_abilist_.Add();
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist(const std::string& value) {
  cpu_abilist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist(std::string&& value) {
  cpu_abilist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_abilist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist(const char* value, size_t size) {
  cpu_abilist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SystemPropertiesProto_Ro_Product::cpu_abilist() const {
  // @@protoc_insertion_point(field_list:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  return cpu_abilist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SystemPropertiesProto_Ro_Product::mutable_cpu_abilist() {
  // @@protoc_insertion_point(field_mutable_list:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist)
  return &cpu_abilist_;
}

// repeated string cpu_abilist32 = 5;
inline int SystemPropertiesProto_Ro_Product::cpu_abilist32_size() const {
  return cpu_abilist32_.size();
}
inline void SystemPropertiesProto_Ro_Product::clear_cpu_abilist32() {
  cpu_abilist32_.Clear();
}
inline const std::string& SystemPropertiesProto_Ro_Product::cpu_abilist32(int index) const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  return cpu_abilist32_.Get(index);
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_cpu_abilist32(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  return cpu_abilist32_.Mutable(index);
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist32(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  cpu_abilist32_.Mutable(index)->assign(value);
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist32(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  cpu_abilist32_.Mutable(index)->assign(std::move(value));
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist32(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_abilist32_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist32(int index, const char* value, size_t size) {
  cpu_abilist32_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
}
inline std::string* SystemPropertiesProto_Ro_Product::add_cpu_abilist32() {
  // @@protoc_insertion_point(field_add_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  return cpu_abilist32_.Add();
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist32(const std::string& value) {
  cpu_abilist32_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist32(std::string&& value) {
  cpu_abilist32_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist32(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_abilist32_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist32(const char* value, size_t size) {
  cpu_abilist32_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SystemPropertiesProto_Ro_Product::cpu_abilist32() const {
  // @@protoc_insertion_point(field_list:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  return cpu_abilist32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SystemPropertiesProto_Ro_Product::mutable_cpu_abilist32() {
  // @@protoc_insertion_point(field_mutable_list:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist32)
  return &cpu_abilist32_;
}

// repeated string cpu_abilist64 = 6;
inline int SystemPropertiesProto_Ro_Product::cpu_abilist64_size() const {
  return cpu_abilist64_.size();
}
inline void SystemPropertiesProto_Ro_Product::clear_cpu_abilist64() {
  cpu_abilist64_.Clear();
}
inline const std::string& SystemPropertiesProto_Ro_Product::cpu_abilist64(int index) const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  return cpu_abilist64_.Get(index);
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_cpu_abilist64(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  return cpu_abilist64_.Mutable(index);
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist64(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  cpu_abilist64_.Mutable(index)->assign(value);
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist64(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  cpu_abilist64_.Mutable(index)->assign(std::move(value));
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist64(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_abilist64_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
}
inline void SystemPropertiesProto_Ro_Product::set_cpu_abilist64(int index, const char* value, size_t size) {
  cpu_abilist64_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
}
inline std::string* SystemPropertiesProto_Ro_Product::add_cpu_abilist64() {
  // @@protoc_insertion_point(field_add_mutable:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  return cpu_abilist64_.Add();
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist64(const std::string& value) {
  cpu_abilist64_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist64(std::string&& value) {
  cpu_abilist64_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist64(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_abilist64_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
}
inline void SystemPropertiesProto_Ro_Product::add_cpu_abilist64(const char* value, size_t size) {
  cpu_abilist64_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SystemPropertiesProto_Ro_Product::cpu_abilist64() const {
  // @@protoc_insertion_point(field_list:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  return cpu_abilist64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SystemPropertiesProto_Ro_Product::mutable_cpu_abilist64() {
  // @@protoc_insertion_point(field_mutable_list:android.os.SystemPropertiesProto.Ro.Product.cpu_abilist64)
  return &cpu_abilist64_;
}

// optional string device = 7;
inline bool SystemPropertiesProto_Ro_Product::has_device() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_device() {
  device_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::device() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.device)
  return device_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_device(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.device)
}
inline void SystemPropertiesProto_Ro_Product::set_device(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  device_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.device)
}
inline void SystemPropertiesProto_Ro_Product::set_device(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.device)
}
inline void SystemPropertiesProto_Ro_Product::set_device(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  device_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.device)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_device() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.device)
  return device_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_device() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.device)
  if (!has_device()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return device_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_device(std::string* device) {
  if (device != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  device_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.device)
}

// optional int32 first_api_level = 8;
inline bool SystemPropertiesProto_Ro_Product::has_first_api_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_first_api_level() {
  first_api_level_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Product::first_api_level() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.first_api_level)
  return first_api_level_;
}
inline void SystemPropertiesProto_Ro_Product::set_first_api_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  first_api_level_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.first_api_level)
}

// optional string manufacturer = 9;
inline bool SystemPropertiesProto_Ro_Product::has_manufacturer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_manufacturer() {
  manufacturer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::manufacturer() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
  return manufacturer_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_manufacturer(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  manufacturer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
}
inline void SystemPropertiesProto_Ro_Product::set_manufacturer(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  manufacturer_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
}
inline void SystemPropertiesProto_Ro_Product::set_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  manufacturer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
}
inline void SystemPropertiesProto_Ro_Product::set_manufacturer(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  manufacturer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_manufacturer() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
  return manufacturer_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_manufacturer() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
  if (!has_manufacturer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return manufacturer_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_manufacturer(std::string* manufacturer) {
  if (manufacturer != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  manufacturer_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), manufacturer);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.manufacturer)
}

// optional string model = 10;
inline bool SystemPropertiesProto_Ro_Product::has_model() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_model() {
  model_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::model() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.model)
  return model_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_model(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.model)
}
inline void SystemPropertiesProto_Ro_Product::set_model(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  model_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.model)
}
inline void SystemPropertiesProto_Ro_Product::set_model(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.model)
}
inline void SystemPropertiesProto_Ro_Product::set_model(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.model)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_model() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.model)
  return model_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_model() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.model)
  if (!has_model()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return model_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_model(std::string* model) {
  if (model != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  model_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.model)
}

// optional string name = 11;
inline bool SystemPropertiesProto_Ro_Product::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_Ro_Product::name() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.name)
  return name_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Product::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Product.name)
}
inline void SystemPropertiesProto_Ro_Product::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Product.name)
}
inline void SystemPropertiesProto_Ro_Product::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Product.name)
}
inline void SystemPropertiesProto_Ro_Product::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Product.name)
}
inline std::string* SystemPropertiesProto_Ro_Product::mutable_name() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Product::release_name() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.name)
}

// optional .android.os.SystemPropertiesProto.Ro.Product.Vendor vendor = 12;
inline bool SystemPropertiesProto_Ro_Product::has_vendor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Ro_Product::clear_vendor() {
  if (vendor_ != nullptr) vendor_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Product_Vendor& SystemPropertiesProto_Ro_Product::vendor() const {
  const ::android::os::SystemPropertiesProto_Ro_Product_Vendor* p = vendor_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Product.vendor)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Product_Vendor*>(
      &::android::os::_SystemPropertiesProto_Ro_Product_Vendor_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Product_Vendor* SystemPropertiesProto_Ro_Product::release_vendor() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Product.vendor)
  _has_bits_[0] &= ~0x00000080u;
  ::android::os::SystemPropertiesProto_Ro_Product_Vendor* temp = vendor_;
  vendor_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Product_Vendor* SystemPropertiesProto_Ro_Product::mutable_vendor() {
  _has_bits_[0] |= 0x00000080u;
  if (vendor_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Product_Vendor>(GetArenaNoVirtual());
    vendor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Product.vendor)
  return vendor_;
}
inline void SystemPropertiesProto_Ro_Product::set_allocated_vendor(::android::os::SystemPropertiesProto_Ro_Product_Vendor* vendor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vendor_;
  }
  if (vendor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vendor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vendor, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  vendor_ = vendor;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Product.vendor)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Telephony

// optional bool call_ring_multiple = 1;
inline bool SystemPropertiesProto_Ro_Telephony::has_call_ring_multiple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Telephony::clear_call_ring_multiple() {
  call_ring_multiple_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool SystemPropertiesProto_Ro_Telephony::call_ring_multiple() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Telephony.call_ring_multiple)
  return call_ring_multiple_;
}
inline void SystemPropertiesProto_Ro_Telephony::set_call_ring_multiple(bool value) {
  _has_bits_[0] |= 0x00000001u;
  call_ring_multiple_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Telephony.call_ring_multiple)
}

// optional int32 default_cdma_sub = 2;
inline bool SystemPropertiesProto_Ro_Telephony::has_default_cdma_sub() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Telephony::clear_default_cdma_sub() {
  default_cdma_sub_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Telephony::default_cdma_sub() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Telephony.default_cdma_sub)
  return default_cdma_sub_;
}
inline void SystemPropertiesProto_Ro_Telephony::set_default_cdma_sub(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  default_cdma_sub_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Telephony.default_cdma_sub)
}

// optional int32 default_network = 3;
inline bool SystemPropertiesProto_Ro_Telephony::has_default_network() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Telephony::clear_default_network() {
  default_network_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro_Telephony::default_network() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Telephony.default_network)
  return default_network_;
}
inline void SystemPropertiesProto_Ro_Telephony::set_default_network(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  default_network_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Telephony.default_network)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro_Vendor

// optional string build_date = 1;
inline bool SystemPropertiesProto_Ro_Vendor::has_build_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro_Vendor::clear_build_date() {
  build_date_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro_Vendor::build_date() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
  return build_date_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_date(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_date(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_date(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_date(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  build_date_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
}
inline std::string* SystemPropertiesProto_Ro_Vendor::mutable_build_date() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
  return build_date_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Vendor::release_build_date() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
  if (!has_build_date()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return build_date_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Vendor::set_allocated_build_date(std::string* build_date) {
  if (build_date != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  build_date_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), build_date);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Vendor.build_date)
}

// optional int64 build_date_utc = 2;
inline bool SystemPropertiesProto_Ro_Vendor::has_build_date_utc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro_Vendor::clear_build_date_utc() {
  build_date_utc_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SystemPropertiesProto_Ro_Vendor::build_date_utc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Vendor.build_date_utc)
  return build_date_utc_;
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_date_utc(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  build_date_utc_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Vendor.build_date_utc)
}

// optional string build_fingerprint = 3;
inline bool SystemPropertiesProto_Ro_Vendor::has_build_fingerprint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro_Vendor::clear_build_fingerprint() {
  build_fingerprint_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro_Vendor::build_fingerprint() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
  return build_fingerprint_.GetNoArena();
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_fingerprint(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_fingerprint(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_fingerprint(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
}
inline void SystemPropertiesProto_Ro_Vendor::set_build_fingerprint(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  build_fingerprint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
}
inline std::string* SystemPropertiesProto_Ro_Vendor::mutable_build_fingerprint() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
  return build_fingerprint_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro_Vendor::release_build_fingerprint() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
  if (!has_build_fingerprint()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return build_fingerprint_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro_Vendor::set_allocated_build_fingerprint(std::string* build_fingerprint) {
  if (build_fingerprint != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  build_fingerprint_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), build_fingerprint);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.Vendor.build_fingerprint)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Ro

// optional bool adb_secure = 1 [(.android.privacy) = {
inline bool SystemPropertiesProto_Ro::has_adb_secure() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_adb_secure() {
  adb_secure_ = false;
  _has_bits_[0] &= ~0x04000000u;
}
inline bool SystemPropertiesProto_Ro::adb_secure() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.adb_secure)
  return adb_secure_;
}
inline void SystemPropertiesProto_Ro::set_adb_secure(bool value) {
  _has_bits_[0] |= 0x04000000u;
  adb_secure_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.adb_secure)
}

// optional string arch = 2;
inline bool SystemPropertiesProto_Ro::has_arch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_arch() {
  arch_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Ro::arch() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.arch)
  return arch_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_arch(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  arch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.arch)
}
inline void SystemPropertiesProto_Ro::set_arch(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  arch_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.arch)
}
inline void SystemPropertiesProto_Ro::set_arch(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  arch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.arch)
}
inline void SystemPropertiesProto_Ro::set_arch(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  arch_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.arch)
}
inline std::string* SystemPropertiesProto_Ro::mutable_arch() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.arch)
  return arch_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_arch() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.arch)
  if (!has_arch()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return arch_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_arch(std::string* arch) {
  if (arch != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  arch_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), arch);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.arch)
}

// optional bool audio_ignore_effects = 3;
inline bool SystemPropertiesProto_Ro::has_audio_ignore_effects() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_audio_ignore_effects() {
  audio_ignore_effects_ = false;
  _has_bits_[0] &= ~0x08000000u;
}
inline bool SystemPropertiesProto_Ro::audio_ignore_effects() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.audio_ignore_effects)
  return audio_ignore_effects_;
}
inline void SystemPropertiesProto_Ro::set_audio_ignore_effects(bool value) {
  _has_bits_[0] |= 0x08000000u;
  audio_ignore_effects_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.audio_ignore_effects)
}

// optional bool audio_monitor_rotation = 4;
inline bool SystemPropertiesProto_Ro::has_audio_monitor_rotation() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_audio_monitor_rotation() {
  audio_monitor_rotation_ = false;
  _has_bits_[0] &= ~0x10000000u;
}
inline bool SystemPropertiesProto_Ro::audio_monitor_rotation() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.audio_monitor_rotation)
  return audio_monitor_rotation_;
}
inline void SystemPropertiesProto_Ro::set_audio_monitor_rotation(bool value) {
  _has_bits_[0] |= 0x10000000u;
  audio_monitor_rotation_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.audio_monitor_rotation)
}

// optional string baseband = 5;
inline bool SystemPropertiesProto_Ro::has_baseband() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_baseband() {
  baseband_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Ro::baseband() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.baseband)
  return baseband_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_baseband(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.baseband)
}
inline void SystemPropertiesProto_Ro::set_baseband(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.baseband)
}
inline void SystemPropertiesProto_Ro::set_baseband(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.baseband)
}
inline void SystemPropertiesProto_Ro::set_baseband(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  baseband_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.baseband)
}
inline std::string* SystemPropertiesProto_Ro::mutable_baseband() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.baseband)
  return baseband_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_baseband() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.baseband)
  if (!has_baseband()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return baseband_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_baseband(std::string* baseband) {
  if (baseband != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  baseband_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), baseband);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.baseband)
}

// optional string board_platform = 6;
inline bool SystemPropertiesProto_Ro::has_board_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_board_platform() {
  board_platform_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Ro::board_platform() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.board_platform)
  return board_platform_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_board_platform(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  board_platform_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.board_platform)
}
inline void SystemPropertiesProto_Ro::set_board_platform(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  board_platform_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.board_platform)
}
inline void SystemPropertiesProto_Ro::set_board_platform(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  board_platform_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.board_platform)
}
inline void SystemPropertiesProto_Ro::set_board_platform(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  board_platform_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.board_platform)
}
inline std::string* SystemPropertiesProto_Ro::mutable_board_platform() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.board_platform)
  return board_platform_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_board_platform() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.board_platform)
  if (!has_board_platform()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return board_platform_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_board_platform(std::string* board_platform) {
  if (board_platform != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  board_platform_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), board_platform);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.board_platform)
}

// optional .android.os.SystemPropertiesProto.Ro.Boot boot = 7;
inline bool SystemPropertiesProto_Ro::has_boot() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_boot() {
  if (boot_ != nullptr) boot_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Boot& SystemPropertiesProto_Ro::boot() const {
  const ::android::os::SystemPropertiesProto_Ro_Boot* p = boot_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.boot)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Boot*>(
      &::android::os::_SystemPropertiesProto_Ro_Boot_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Boot* SystemPropertiesProto_Ro::release_boot() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.boot)
  _has_bits_[0] &= ~0x00040000u;
  ::android::os::SystemPropertiesProto_Ro_Boot* temp = boot_;
  boot_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Boot* SystemPropertiesProto_Ro::mutable_boot() {
  _has_bits_[0] |= 0x00040000u;
  if (boot_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Boot>(GetArenaNoVirtual());
    boot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.boot)
  return boot_;
}
inline void SystemPropertiesProto_Ro::set_allocated_boot(::android::os::SystemPropertiesProto_Ro_Boot* boot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete boot_;
  }
  if (boot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      boot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boot, submessage_arena);
    }
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  boot_ = boot;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.boot)
}

// optional .android.os.SystemPropertiesProto.Ro.BootImage bootimage = 8;
inline bool SystemPropertiesProto_Ro::has_bootimage() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_bootimage() {
  if (bootimage_ != nullptr) bootimage_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_BootImage& SystemPropertiesProto_Ro::bootimage() const {
  const ::android::os::SystemPropertiesProto_Ro_BootImage* p = bootimage_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.bootimage)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_BootImage*>(
      &::android::os::_SystemPropertiesProto_Ro_BootImage_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_BootImage* SystemPropertiesProto_Ro::release_bootimage() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.bootimage)
  _has_bits_[0] &= ~0x00080000u;
  ::android::os::SystemPropertiesProto_Ro_BootImage* temp = bootimage_;
  bootimage_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_BootImage* SystemPropertiesProto_Ro::mutable_bootimage() {
  _has_bits_[0] |= 0x00080000u;
  if (bootimage_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_BootImage>(GetArenaNoVirtual());
    bootimage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.bootimage)
  return bootimage_;
}
inline void SystemPropertiesProto_Ro::set_allocated_bootimage(::android::os::SystemPropertiesProto_Ro_BootImage* bootimage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bootimage_;
  }
  if (bootimage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bootimage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bootimage, submessage_arena);
    }
    _has_bits_[0] |= 0x00080000u;
  } else {
    _has_bits_[0] &= ~0x00080000u;
  }
  bootimage_ = bootimage;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.bootimage)
}

// optional string bootloader = 9 [(.android.privacy) = {
inline bool SystemPropertiesProto_Ro::has_bootloader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_bootloader() {
  bootloader_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto_Ro::bootloader() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.bootloader)
  return bootloader_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_bootloader(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.bootloader)
}
inline void SystemPropertiesProto_Ro::set_bootloader(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.bootloader)
}
inline void SystemPropertiesProto_Ro::set_bootloader(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.bootloader)
}
inline void SystemPropertiesProto_Ro::set_bootloader(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  bootloader_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.bootloader)
}
inline std::string* SystemPropertiesProto_Ro::mutable_bootloader() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.bootloader)
  return bootloader_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_bootloader() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.bootloader)
  if (!has_bootloader()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return bootloader_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_bootloader(std::string* bootloader) {
  if (bootloader != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  bootloader_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bootloader);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.bootloader)
}

// optional string bootmode = 10 [(.android.privacy) = {
inline bool SystemPropertiesProto_Ro::has_bootmode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_bootmode() {
  bootmode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto_Ro::bootmode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.bootmode)
  return bootmode_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_bootmode(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  bootmode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.bootmode)
}
inline void SystemPropertiesProto_Ro::set_bootmode(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  bootmode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.bootmode)
}
inline void SystemPropertiesProto_Ro::set_bootmode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  bootmode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.bootmode)
}
inline void SystemPropertiesProto_Ro::set_bootmode(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  bootmode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.bootmode)
}
inline std::string* SystemPropertiesProto_Ro::mutable_bootmode() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.bootmode)
  return bootmode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_bootmode() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.bootmode)
  if (!has_bootmode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return bootmode_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_bootmode(std::string* bootmode) {
  if (bootmode != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bootmode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bootmode);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.bootmode)
}

// optional .android.os.SystemPropertiesProto.Ro.Build build = 11;
inline bool SystemPropertiesProto_Ro::has_build() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_build() {
  if (build_ != nullptr) build_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Build& SystemPropertiesProto_Ro::build() const {
  const ::android::os::SystemPropertiesProto_Ro_Build* p = build_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.build)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Build*>(
      &::android::os::_SystemPropertiesProto_Ro_Build_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Build* SystemPropertiesProto_Ro::release_build() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.build)
  _has_bits_[0] &= ~0x00100000u;
  ::android::os::SystemPropertiesProto_Ro_Build* temp = build_;
  build_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Build* SystemPropertiesProto_Ro::mutable_build() {
  _has_bits_[0] |= 0x00100000u;
  if (build_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Build>(GetArenaNoVirtual());
    build_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.build)
  return build_;
}
inline void SystemPropertiesProto_Ro::set_allocated_build(::android::os::SystemPropertiesProto_Ro_Build* build) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete build_;
  }
  if (build) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      build = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, build, submessage_arena);
    }
    _has_bits_[0] |= 0x00100000u;
  } else {
    _has_bits_[0] &= ~0x00100000u;
  }
  build_ = build;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.build)
}

// optional bool camera_notify_nfc = 12 [(.android.privacy) = {
inline bool SystemPropertiesProto_Ro::has_camera_notify_nfc() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_camera_notify_nfc() {
  camera_notify_nfc_ = false;
  _has_bits_[0] &= ~0x20000000u;
}
inline bool SystemPropertiesProto_Ro::camera_notify_nfc() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.camera_notify_nfc)
  return camera_notify_nfc_;
}
inline void SystemPropertiesProto_Ro::set_camera_notify_nfc(bool value) {
  _has_bits_[0] |= 0x20000000u;
  camera_notify_nfc_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.camera_notify_nfc)
}

// optional string carrier = 13;
inline bool SystemPropertiesProto_Ro::has_carrier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_carrier() {
  carrier_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto_Ro::carrier() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.carrier)
  return carrier_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_carrier(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  carrier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.carrier)
}
inline void SystemPropertiesProto_Ro::set_carrier(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  carrier_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.carrier)
}
inline void SystemPropertiesProto_Ro::set_carrier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  carrier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.carrier)
}
inline void SystemPropertiesProto_Ro::set_carrier(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  carrier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.carrier)
}
inline std::string* SystemPropertiesProto_Ro::mutable_carrier() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.carrier)
  return carrier_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_carrier() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.carrier)
  if (!has_carrier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return carrier_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_carrier(std::string* carrier) {
  if (carrier != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  carrier_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), carrier);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.carrier)
}

// optional bool com_android_dataroaming = 14 [(.android.privacy) = {
inline bool SystemPropertiesProto_Ro::has_com_android_dataroaming() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_com_android_dataroaming() {
  com_android_dataroaming_ = false;
  _has_bits_[0] &= ~0x80000000u;
}
inline bool SystemPropertiesProto_Ro::com_android_dataroaming() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.com_android_dataroaming)
  return com_android_dataroaming_;
}
inline void SystemPropertiesProto_Ro::set_com_android_dataroaming(bool value) {
  _has_bits_[0] |= 0x80000000u;
  com_android_dataroaming_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.com_android_dataroaming)
}

// optional bool com_android_prov_mobiledata = 15 [(.android.privacy) = {
inline bool SystemPropertiesProto_Ro::has_com_android_prov_mobiledata() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_com_android_prov_mobiledata() {
  com_android_prov_mobiledata_ = false;
  _has_bits_[1] &= ~0x00000001u;
}
inline bool SystemPropertiesProto_Ro::com_android_prov_mobiledata() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.com_android_prov_mobiledata)
  return com_android_prov_mobiledata_;
}
inline void SystemPropertiesProto_Ro::set_com_android_prov_mobiledata(bool value) {
  _has_bits_[1] |= 0x00000001u;
  com_android_prov_mobiledata_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.com_android_prov_mobiledata)
}

// optional string com_google_clientidbase = 16;
inline bool SystemPropertiesProto_Ro::has_com_google_clientidbase() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_com_google_clientidbase() {
  com_google_clientidbase_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto_Ro::com_google_clientidbase() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
  return com_google_clientidbase_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_com_google_clientidbase(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  com_google_clientidbase_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
}
inline void SystemPropertiesProto_Ro::set_com_google_clientidbase(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  com_google_clientidbase_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
}
inline void SystemPropertiesProto_Ro::set_com_google_clientidbase(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  com_google_clientidbase_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
}
inline void SystemPropertiesProto_Ro::set_com_google_clientidbase(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  com_google_clientidbase_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
}
inline std::string* SystemPropertiesProto_Ro::mutable_com_google_clientidbase() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
  return com_google_clientidbase_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_com_google_clientidbase() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
  if (!has_com_google_clientidbase()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return com_google_clientidbase_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_com_google_clientidbase(std::string* com_google_clientidbase) {
  if (com_google_clientidbase != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  com_google_clientidbase_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), com_google_clientidbase);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.com_google_clientidbase)
}

// optional .android.os.SystemPropertiesProto.Ro.Config config = 17;
inline bool SystemPropertiesProto_Ro::has_config() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_config() {
  if (config_ != nullptr) config_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Config& SystemPropertiesProto_Ro::config() const {
  const ::android::os::SystemPropertiesProto_Ro_Config* p = config_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.config)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Config*>(
      &::android::os::_SystemPropertiesProto_Ro_Config_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Config* SystemPropertiesProto_Ro::release_config() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.config)
  _has_bits_[0] &= ~0x00200000u;
  ::android::os::SystemPropertiesProto_Ro_Config* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Config* SystemPropertiesProto_Ro::mutable_config() {
  _has_bits_[0] |= 0x00200000u;
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Config>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.config)
  return config_;
}
inline void SystemPropertiesProto_Ro::set_allocated_config(::android::os::SystemPropertiesProto_Ro_Config* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete config_;
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _has_bits_[0] |= 0x00200000u;
  } else {
    _has_bits_[0] &= ~0x00200000u;
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.config)
}

// optional string control_privapp_permissions = 18;
inline bool SystemPropertiesProto_Ro::has_control_privapp_permissions() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_control_privapp_permissions() {
  control_privapp_permissions_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& SystemPropertiesProto_Ro::control_privapp_permissions() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
  return control_privapp_permissions_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_control_privapp_permissions(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  control_privapp_permissions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
}
inline void SystemPropertiesProto_Ro::set_control_privapp_permissions(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  control_privapp_permissions_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
}
inline void SystemPropertiesProto_Ro::set_control_privapp_permissions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  control_privapp_permissions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
}
inline void SystemPropertiesProto_Ro::set_control_privapp_permissions(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  control_privapp_permissions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
}
inline std::string* SystemPropertiesProto_Ro::mutable_control_privapp_permissions() {
  _has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
  return control_privapp_permissions_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_control_privapp_permissions() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
  if (!has_control_privapp_permissions()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return control_privapp_permissions_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_control_privapp_permissions(std::string* control_privapp_permissions) {
  if (control_privapp_permissions != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  control_privapp_permissions_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), control_privapp_permissions);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.control_privapp_permissions)
}

// optional int32 cp_system_other_odex = 19;
inline bool SystemPropertiesProto_Ro::has_cp_system_other_odex() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_cp_system_other_odex() {
  cp_system_other_odex_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::cp_system_other_odex() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.cp_system_other_odex)
  return cp_system_other_odex_;
}
inline void SystemPropertiesProto_Ro::set_cp_system_other_odex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x40000000u;
  cp_system_other_odex_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.cp_system_other_odex)
}

// optional string crypto_scrypt_params = 20;
inline bool SystemPropertiesProto_Ro::has_crypto_scrypt_params() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_crypto_scrypt_params() {
  crypto_scrypt_params_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& SystemPropertiesProto_Ro::crypto_scrypt_params() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
  return crypto_scrypt_params_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_crypto_scrypt_params(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  crypto_scrypt_params_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
}
inline void SystemPropertiesProto_Ro::set_crypto_scrypt_params(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  crypto_scrypt_params_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
}
inline void SystemPropertiesProto_Ro::set_crypto_scrypt_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  crypto_scrypt_params_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
}
inline void SystemPropertiesProto_Ro::set_crypto_scrypt_params(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  crypto_scrypt_params_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
}
inline std::string* SystemPropertiesProto_Ro::mutable_crypto_scrypt_params() {
  _has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
  return crypto_scrypt_params_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_crypto_scrypt_params() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
  if (!has_crypto_scrypt_params()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return crypto_scrypt_params_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_crypto_scrypt_params(std::string* crypto_scrypt_params) {
  if (crypto_scrypt_params != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  crypto_scrypt_params_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), crypto_scrypt_params);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.crypto_scrypt_params)
}

// optional string crypto_state = 21;
inline bool SystemPropertiesProto_Ro::has_crypto_state() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_crypto_state() {
  crypto_state_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& SystemPropertiesProto_Ro::crypto_state() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.crypto_state)
  return crypto_state_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_crypto_state(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  crypto_state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.crypto_state)
}
inline void SystemPropertiesProto_Ro::set_crypto_state(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  crypto_state_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.crypto_state)
}
inline void SystemPropertiesProto_Ro::set_crypto_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  crypto_state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.crypto_state)
}
inline void SystemPropertiesProto_Ro::set_crypto_state(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  crypto_state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.crypto_state)
}
inline std::string* SystemPropertiesProto_Ro::mutable_crypto_state() {
  _has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.crypto_state)
  return crypto_state_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_crypto_state() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.crypto_state)
  if (!has_crypto_state()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return crypto_state_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_crypto_state(std::string* crypto_state) {
  if (crypto_state != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  crypto_state_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), crypto_state);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.crypto_state)
}

// optional string crypto_type = 22;
inline bool SystemPropertiesProto_Ro::has_crypto_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_crypto_type() {
  crypto_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const std::string& SystemPropertiesProto_Ro::crypto_type() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.crypto_type)
  return crypto_type_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_crypto_type(const std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  crypto_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.crypto_type)
}
inline void SystemPropertiesProto_Ro::set_crypto_type(std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  crypto_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.crypto_type)
}
inline void SystemPropertiesProto_Ro::set_crypto_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  crypto_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.crypto_type)
}
inline void SystemPropertiesProto_Ro::set_crypto_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  crypto_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.crypto_type)
}
inline std::string* SystemPropertiesProto_Ro::mutable_crypto_type() {
  _has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.crypto_type)
  return crypto_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_crypto_type() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.crypto_type)
  if (!has_crypto_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return crypto_type_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_crypto_type(std::string* crypto_type) {
  if (crypto_type != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  crypto_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), crypto_type);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.crypto_type)
}

// optional string dalvik_vm_native_bridge = 23;
inline bool SystemPropertiesProto_Ro::has_dalvik_vm_native_bridge() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_dalvik_vm_native_bridge() {
  dalvik_vm_native_bridge_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const std::string& SystemPropertiesProto_Ro::dalvik_vm_native_bridge() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
  return dalvik_vm_native_bridge_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_dalvik_vm_native_bridge(const std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  dalvik_vm_native_bridge_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
}
inline void SystemPropertiesProto_Ro::set_dalvik_vm_native_bridge(std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  dalvik_vm_native_bridge_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
}
inline void SystemPropertiesProto_Ro::set_dalvik_vm_native_bridge(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  dalvik_vm_native_bridge_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
}
inline void SystemPropertiesProto_Ro::set_dalvik_vm_native_bridge(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  dalvik_vm_native_bridge_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
}
inline std::string* SystemPropertiesProto_Ro::mutable_dalvik_vm_native_bridge() {
  _has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
  return dalvik_vm_native_bridge_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_dalvik_vm_native_bridge() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
  if (!has_dalvik_vm_native_bridge()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return dalvik_vm_native_bridge_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_dalvik_vm_native_bridge(std::string* dalvik_vm_native_bridge) {
  if (dalvik_vm_native_bridge != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  dalvik_vm_native_bridge_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dalvik_vm_native_bridge);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.dalvik_vm_native_bridge)
}

// optional bool debuggable = 24;
inline bool SystemPropertiesProto_Ro::has_debuggable() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_debuggable() {
  debuggable_ = false;
  _has_bits_[1] &= ~0x00000002u;
}
inline bool SystemPropertiesProto_Ro::debuggable() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.debuggable)
  return debuggable_;
}
inline void SystemPropertiesProto_Ro::set_debuggable(bool value) {
  _has_bits_[1] |= 0x00000002u;
  debuggable_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.debuggable)
}

// optional string frp_pst = 25;
inline bool SystemPropertiesProto_Ro::has_frp_pst() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_frp_pst() {
  frp_pst_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00001000u;
}
inline const std::string& SystemPropertiesProto_Ro::frp_pst() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.frp_pst)
  return frp_pst_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_frp_pst(const std::string& value) {
  _has_bits_[0] |= 0x00001000u;
  frp_pst_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.frp_pst)
}
inline void SystemPropertiesProto_Ro::set_frp_pst(std::string&& value) {
  _has_bits_[0] |= 0x00001000u;
  frp_pst_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.frp_pst)
}
inline void SystemPropertiesProto_Ro::set_frp_pst(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00001000u;
  frp_pst_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.frp_pst)
}
inline void SystemPropertiesProto_Ro::set_frp_pst(const char* value, size_t size) {
  _has_bits_[0] |= 0x00001000u;
  frp_pst_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.frp_pst)
}
inline std::string* SystemPropertiesProto_Ro::mutable_frp_pst() {
  _has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.frp_pst)
  return frp_pst_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_frp_pst() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.frp_pst)
  if (!has_frp_pst()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00001000u;
  return frp_pst_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_frp_pst(std::string* frp_pst) {
  if (frp_pst != nullptr) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  frp_pst_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frp_pst);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.frp_pst)
}

// optional string gfx_driver_0 = 26;
inline bool SystemPropertiesProto_Ro::has_gfx_driver_0() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_gfx_driver_0() {
  gfx_driver_0_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00002000u;
}
inline const std::string& SystemPropertiesProto_Ro::gfx_driver_0() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
  return gfx_driver_0_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_0(const std::string& value) {
  _has_bits_[0] |= 0x00002000u;
  gfx_driver_0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_0(std::string&& value) {
  _has_bits_[0] |= 0x00002000u;
  gfx_driver_0_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_0(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00002000u;
  gfx_driver_0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_0(const char* value, size_t size) {
  _has_bits_[0] |= 0x00002000u;
  gfx_driver_0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
}
inline std::string* SystemPropertiesProto_Ro::mutable_gfx_driver_0() {
  _has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
  return gfx_driver_0_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_gfx_driver_0() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
  if (!has_gfx_driver_0()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00002000u;
  return gfx_driver_0_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_gfx_driver_0(std::string* gfx_driver_0) {
  if (gfx_driver_0 != nullptr) {
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  gfx_driver_0_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gfx_driver_0);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.gfx_driver_0)
}

// optional .android.os.SystemPropertiesProto.Ro.Hardware hardware = 27;
inline bool SystemPropertiesProto_Ro::has_hardware() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_hardware() {
  if (hardware_ != nullptr) hardware_->Clear();
  _has_bits_[0] &= ~0x00400000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Hardware& SystemPropertiesProto_Ro::hardware() const {
  const ::android::os::SystemPropertiesProto_Ro_Hardware* p = hardware_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.hardware)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Hardware*>(
      &::android::os::_SystemPropertiesProto_Ro_Hardware_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Hardware* SystemPropertiesProto_Ro::release_hardware() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.hardware)
  _has_bits_[0] &= ~0x00400000u;
  ::android::os::SystemPropertiesProto_Ro_Hardware* temp = hardware_;
  hardware_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Hardware* SystemPropertiesProto_Ro::mutable_hardware() {
  _has_bits_[0] |= 0x00400000u;
  if (hardware_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Hardware>(GetArenaNoVirtual());
    hardware_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.hardware)
  return hardware_;
}
inline void SystemPropertiesProto_Ro::set_allocated_hardware(::android::os::SystemPropertiesProto_Ro_Hardware* hardware) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hardware_;
  }
  if (hardware) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hardware = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hardware, submessage_arena);
    }
    _has_bits_[0] |= 0x00400000u;
  } else {
    _has_bits_[0] &= ~0x00400000u;
  }
  hardware_ = hardware;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.hardware)
}

// optional int32 kernel_qemu = 28;
inline bool SystemPropertiesProto_Ro::has_kernel_qemu() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_kernel_qemu() {
  kernel_qemu_ = 0;
  _has_bits_[1] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::kernel_qemu() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.kernel_qemu)
  return kernel_qemu_;
}
inline void SystemPropertiesProto_Ro::set_kernel_qemu(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000008u;
  kernel_qemu_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.kernel_qemu)
}

// optional int32 kernel_qemu_gles = 29;
inline bool SystemPropertiesProto_Ro::has_kernel_qemu_gles() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_kernel_qemu_gles() {
  kernel_qemu_gles_ = 0;
  _has_bits_[1] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::kernel_qemu_gles() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.kernel_qemu_gles)
  return kernel_qemu_gles_;
}
inline void SystemPropertiesProto_Ro::set_kernel_qemu_gles(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000010u;
  kernel_qemu_gles_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.kernel_qemu_gles)
}

// optional int32 oem_unlock_supported = 30;
inline bool SystemPropertiesProto_Ro::has_oem_unlock_supported() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_oem_unlock_supported() {
  oem_unlock_supported_ = 0;
  _has_bits_[1] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::oem_unlock_supported() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.oem_unlock_supported)
  return oem_unlock_supported_;
}
inline void SystemPropertiesProto_Ro::set_oem_unlock_supported(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000020u;
  oem_unlock_supported_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.oem_unlock_supported)
}

// optional int32 opengles_version = 31;
inline bool SystemPropertiesProto_Ro::has_opengles_version() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_opengles_version() {
  opengles_version_ = 0;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::opengles_version() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.opengles_version)
  return opengles_version_;
}
inline void SystemPropertiesProto_Ro::set_opengles_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000040u;
  opengles_version_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.opengles_version)
}

// optional .android.os.SystemPropertiesProto.Ro.Product product = 32;
inline bool SystemPropertiesProto_Ro::has_product() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_product() {
  if (product_ != nullptr) product_->Clear();
  _has_bits_[0] &= ~0x00800000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Product& SystemPropertiesProto_Ro::product() const {
  const ::android::os::SystemPropertiesProto_Ro_Product* p = product_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.product)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Product*>(
      &::android::os::_SystemPropertiesProto_Ro_Product_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Product* SystemPropertiesProto_Ro::release_product() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.product)
  _has_bits_[0] &= ~0x00800000u;
  ::android::os::SystemPropertiesProto_Ro_Product* temp = product_;
  product_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Product* SystemPropertiesProto_Ro::mutable_product() {
  _has_bits_[0] |= 0x00800000u;
  if (product_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Product>(GetArenaNoVirtual());
    product_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.product)
  return product_;
}
inline void SystemPropertiesProto_Ro::set_allocated_product(::android::os::SystemPropertiesProto_Ro_Product* product) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete product_;
  }
  if (product) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      product = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, product, submessage_arena);
    }
    _has_bits_[0] |= 0x00800000u;
  } else {
    _has_bits_[0] &= ~0x00800000u;
  }
  product_ = product;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.product)
}

// optional int32 property_service_version = 33;
inline bool SystemPropertiesProto_Ro::has_property_service_version() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_property_service_version() {
  property_service_version_ = 0;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::property_service_version() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.property_service_version)
  return property_service_version_;
}
inline void SystemPropertiesProto_Ro::set_property_service_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000080u;
  property_service_version_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.property_service_version)
}

// optional string revision = 35;
inline bool SystemPropertiesProto_Ro::has_revision() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_revision() {
  revision_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00004000u;
}
inline const std::string& SystemPropertiesProto_Ro::revision() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.revision)
  return revision_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_revision(const std::string& value) {
  _has_bits_[0] |= 0x00004000u;
  revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.revision)
}
inline void SystemPropertiesProto_Ro::set_revision(std::string&& value) {
  _has_bits_[0] |= 0x00004000u;
  revision_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.revision)
}
inline void SystemPropertiesProto_Ro::set_revision(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00004000u;
  revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.revision)
}
inline void SystemPropertiesProto_Ro::set_revision(const char* value, size_t size) {
  _has_bits_[0] |= 0x00004000u;
  revision_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.revision)
}
inline std::string* SystemPropertiesProto_Ro::mutable_revision() {
  _has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.revision)
  return revision_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_revision() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.revision)
  if (!has_revision()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00004000u;
  return revision_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_revision(std::string* revision) {
  if (revision != nullptr) {
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  revision_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), revision);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.revision)
}

// optional int32 sf_lcd_density = 36;
inline bool SystemPropertiesProto_Ro::has_sf_lcd_density() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_sf_lcd_density() {
  sf_lcd_density_ = 0;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::sf_lcd_density() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.sf_lcd_density)
  return sf_lcd_density_;
}
inline void SystemPropertiesProto_Ro::set_sf_lcd_density(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000100u;
  sf_lcd_density_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.sf_lcd_density)
}

// optional bool storage_manager_enabled = 37;
inline bool SystemPropertiesProto_Ro::has_storage_manager_enabled() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_storage_manager_enabled() {
  storage_manager_enabled_ = false;
  _has_bits_[1] &= ~0x00000004u;
}
inline bool SystemPropertiesProto_Ro::storage_manager_enabled() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.storage_manager_enabled)
  return storage_manager_enabled_;
}
inline void SystemPropertiesProto_Ro::set_storage_manager_enabled(bool value) {
  _has_bits_[1] |= 0x00000004u;
  storage_manager_enabled_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.storage_manager_enabled)
}

// optional .android.os.SystemPropertiesProto.Ro.Telephony telephony = 38;
inline bool SystemPropertiesProto_Ro::has_telephony() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_telephony() {
  if (telephony_ != nullptr) telephony_->Clear();
  _has_bits_[0] &= ~0x01000000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Telephony& SystemPropertiesProto_Ro::telephony() const {
  const ::android::os::SystemPropertiesProto_Ro_Telephony* p = telephony_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.telephony)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Telephony*>(
      &::android::os::_SystemPropertiesProto_Ro_Telephony_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Telephony* SystemPropertiesProto_Ro::release_telephony() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.telephony)
  _has_bits_[0] &= ~0x01000000u;
  ::android::os::SystemPropertiesProto_Ro_Telephony* temp = telephony_;
  telephony_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Telephony* SystemPropertiesProto_Ro::mutable_telephony() {
  _has_bits_[0] |= 0x01000000u;
  if (telephony_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Telephony>(GetArenaNoVirtual());
    telephony_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.telephony)
  return telephony_;
}
inline void SystemPropertiesProto_Ro::set_allocated_telephony(::android::os::SystemPropertiesProto_Ro_Telephony* telephony) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete telephony_;
  }
  if (telephony) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      telephony = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, telephony, submessage_arena);
    }
    _has_bits_[0] |= 0x01000000u;
  } else {
    _has_bits_[0] &= ~0x01000000u;
  }
  telephony_ = telephony;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.telephony)
}

// optional .android.os.SystemPropertiesProto.Ro.Vendor vendor = 41;
inline bool SystemPropertiesProto_Ro::has_vendor() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_vendor() {
  if (vendor_ != nullptr) vendor_->Clear();
  _has_bits_[0] &= ~0x02000000u;
}
inline const ::android::os::SystemPropertiesProto_Ro_Vendor& SystemPropertiesProto_Ro::vendor() const {
  const ::android::os::SystemPropertiesProto_Ro_Vendor* p = vendor_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.vendor)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro_Vendor*>(
      &::android::os::_SystemPropertiesProto_Ro_Vendor_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro_Vendor* SystemPropertiesProto_Ro::release_vendor() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.vendor)
  _has_bits_[0] &= ~0x02000000u;
  ::android::os::SystemPropertiesProto_Ro_Vendor* temp = vendor_;
  vendor_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro_Vendor* SystemPropertiesProto_Ro::mutable_vendor() {
  _has_bits_[0] |= 0x02000000u;
  if (vendor_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro_Vendor>(GetArenaNoVirtual());
    vendor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.vendor)
  return vendor_;
}
inline void SystemPropertiesProto_Ro::set_allocated_vendor(::android::os::SystemPropertiesProto_Ro_Vendor* vendor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vendor_;
  }
  if (vendor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vendor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vendor, submessage_arena);
    }
    _has_bits_[0] |= 0x02000000u;
  } else {
    _has_bits_[0] &= ~0x02000000u;
  }
  vendor_ = vendor;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.vendor)
}

// optional string vndk_version = 42;
inline bool SystemPropertiesProto_Ro::has_vndk_version() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_vndk_version() {
  vndk_version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00008000u;
}
inline const std::string& SystemPropertiesProto_Ro::vndk_version() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.vndk_version)
  return vndk_version_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_vndk_version(const std::string& value) {
  _has_bits_[0] |= 0x00008000u;
  vndk_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.vndk_version)
}
inline void SystemPropertiesProto_Ro::set_vndk_version(std::string&& value) {
  _has_bits_[0] |= 0x00008000u;
  vndk_version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.vndk_version)
}
inline void SystemPropertiesProto_Ro::set_vndk_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00008000u;
  vndk_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.vndk_version)
}
inline void SystemPropertiesProto_Ro::set_vndk_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00008000u;
  vndk_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.vndk_version)
}
inline std::string* SystemPropertiesProto_Ro::mutable_vndk_version() {
  _has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.vndk_version)
  return vndk_version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_vndk_version() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.vndk_version)
  if (!has_vndk_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00008000u;
  return vndk_version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_vndk_version(std::string* vndk_version) {
  if (vndk_version != nullptr) {
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  vndk_version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vndk_version);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.vndk_version)
}

// optional int32 vts_coverage = 43;
inline bool SystemPropertiesProto_Ro::has_vts_coverage() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_vts_coverage() {
  vts_coverage_ = 0;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Ro::vts_coverage() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.vts_coverage)
  return vts_coverage_;
}
inline void SystemPropertiesProto_Ro::set_vts_coverage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000200u;
  vts_coverage_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.vts_coverage)
}

// optional string zygote = 44;
inline bool SystemPropertiesProto_Ro::has_zygote() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_zygote() {
  zygote_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00010000u;
}
inline const std::string& SystemPropertiesProto_Ro::zygote() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.zygote)
  return zygote_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_zygote(const std::string& value) {
  _has_bits_[0] |= 0x00010000u;
  zygote_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.zygote)
}
inline void SystemPropertiesProto_Ro::set_zygote(std::string&& value) {
  _has_bits_[0] |= 0x00010000u;
  zygote_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.zygote)
}
inline void SystemPropertiesProto_Ro::set_zygote(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00010000u;
  zygote_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.zygote)
}
inline void SystemPropertiesProto_Ro::set_zygote(const char* value, size_t size) {
  _has_bits_[0] |= 0x00010000u;
  zygote_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.zygote)
}
inline std::string* SystemPropertiesProto_Ro::mutable_zygote() {
  _has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.zygote)
  return zygote_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_zygote() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.zygote)
  if (!has_zygote()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00010000u;
  return zygote_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_zygote(std::string* zygote) {
  if (zygote != nullptr) {
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  zygote_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zygote);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.zygote)
}

// optional string gfx_driver_whitelist_0 = 45;
inline bool SystemPropertiesProto_Ro::has_gfx_driver_whitelist_0() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto_Ro::clear_gfx_driver_whitelist_0() {
  gfx_driver_whitelist_0_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00020000u;
}
inline const std::string& SystemPropertiesProto_Ro::gfx_driver_whitelist_0() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
  return gfx_driver_whitelist_0_.GetNoArena();
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_whitelist_0(const std::string& value) {
  _has_bits_[0] |= 0x00020000u;
  gfx_driver_whitelist_0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_whitelist_0(std::string&& value) {
  _has_bits_[0] |= 0x00020000u;
  gfx_driver_whitelist_0_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_whitelist_0(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00020000u;
  gfx_driver_whitelist_0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
}
inline void SystemPropertiesProto_Ro::set_gfx_driver_whitelist_0(const char* value, size_t size) {
  _has_bits_[0] |= 0x00020000u;
  gfx_driver_whitelist_0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
}
inline std::string* SystemPropertiesProto_Ro::mutable_gfx_driver_whitelist_0() {
  _has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
  return gfx_driver_whitelist_0_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Ro::release_gfx_driver_whitelist_0() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
  if (!has_gfx_driver_whitelist_0()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00020000u;
  return gfx_driver_whitelist_0_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Ro::set_allocated_gfx_driver_whitelist_0(std::string* gfx_driver_whitelist_0) {
  if (gfx_driver_whitelist_0 != nullptr) {
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  gfx_driver_whitelist_0_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gfx_driver_whitelist_0);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Ro.gfx_driver_whitelist_0)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Sys_Usb

// optional string config = 1;
inline bool SystemPropertiesProto_Sys_Usb::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_config() {
  config_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Sys_Usb::config() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.config)
  return config_.GetNoArena();
}
inline void SystemPropertiesProto_Sys_Usb::set_config(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.config)
}
inline void SystemPropertiesProto_Sys_Usb::set_config(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  config_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Sys.Usb.config)
}
inline void SystemPropertiesProto_Sys_Usb::set_config(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Sys.Usb.config)
}
inline void SystemPropertiesProto_Sys_Usb::set_config(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  config_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Sys.Usb.config)
}
inline std::string* SystemPropertiesProto_Sys_Usb::mutable_config() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Sys.Usb.config)
  return config_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Sys_Usb::release_config() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Sys.Usb.config)
  if (!has_config()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return config_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Sys_Usb::set_allocated_config(std::string* config) {
  if (config != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Sys.Usb.config)
}

// optional int32 configfs = 2;
inline bool SystemPropertiesProto_Sys_Usb::has_configfs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_configfs() {
  configfs_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys_Usb::configfs() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.configfs)
  return configfs_;
}
inline void SystemPropertiesProto_Sys_Usb::set_configfs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  configfs_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.configfs)
}

// optional string controller = 3;
inline bool SystemPropertiesProto_Sys_Usb::has_controller() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_controller() {
  controller_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto_Sys_Usb::controller() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.controller)
  return controller_.GetNoArena();
}
inline void SystemPropertiesProto_Sys_Usb::set_controller(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  controller_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.controller)
}
inline void SystemPropertiesProto_Sys_Usb::set_controller(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  controller_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Sys.Usb.controller)
}
inline void SystemPropertiesProto_Sys_Usb::set_controller(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  controller_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Sys.Usb.controller)
}
inline void SystemPropertiesProto_Sys_Usb::set_controller(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  controller_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Sys.Usb.controller)
}
inline std::string* SystemPropertiesProto_Sys_Usb::mutable_controller() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Sys.Usb.controller)
  return controller_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Sys_Usb::release_controller() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Sys.Usb.controller)
  if (!has_controller()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return controller_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Sys_Usb::set_allocated_controller(std::string* controller) {
  if (controller != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  controller_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), controller);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Sys.Usb.controller)
}

// optional int32 ffs_max_read = 4;
inline bool SystemPropertiesProto_Sys_Usb::has_ffs_max_read() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_ffs_max_read() {
  ffs_max_read_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys_Usb::ffs_max_read() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.ffs_max_read)
  return ffs_max_read_;
}
inline void SystemPropertiesProto_Sys_Usb::set_ffs_max_read(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ffs_max_read_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.ffs_max_read)
}

// optional int32 ffs_max_write = 5;
inline bool SystemPropertiesProto_Sys_Usb::has_ffs_max_write() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_ffs_max_write() {
  ffs_max_write_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys_Usb::ffs_max_write() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.ffs_max_write)
  return ffs_max_write_;
}
inline void SystemPropertiesProto_Sys_Usb::set_ffs_max_write(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ffs_max_write_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.ffs_max_write)
}

// optional int32 ffs_mtp_ready = 6;
inline bool SystemPropertiesProto_Sys_Usb::has_ffs_mtp_ready() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_ffs_mtp_ready() {
  ffs_mtp_ready_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys_Usb::ffs_mtp_ready() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.ffs_mtp_ready)
  return ffs_mtp_ready_;
}
inline void SystemPropertiesProto_Sys_Usb::set_ffs_mtp_ready(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ffs_mtp_ready_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.ffs_mtp_ready)
}

// optional int32 ffs_ready = 7;
inline bool SystemPropertiesProto_Sys_Usb::has_ffs_ready() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_ffs_ready() {
  ffs_ready_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys_Usb::ffs_ready() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.ffs_ready)
  return ffs_ready_;
}
inline void SystemPropertiesProto_Sys_Usb::set_ffs_ready(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  ffs_ready_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.ffs_ready)
}

// optional int32 mtp_device_type = 8;
inline bool SystemPropertiesProto_Sys_Usb::has_mtp_device_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_mtp_device_type() {
  mtp_device_type_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys_Usb::mtp_device_type() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.mtp_device_type)
  return mtp_device_type_;
}
inline void SystemPropertiesProto_Sys_Usb::set_mtp_device_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  mtp_device_type_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.mtp_device_type)
}

// optional string state = 9;
inline bool SystemPropertiesProto_Sys_Usb::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Sys_Usb::clear_state() {
  state_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto_Sys_Usb::state() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.Usb.state)
  return state_.GetNoArena();
}
inline void SystemPropertiesProto_Sys_Usb::set_state(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.Usb.state)
}
inline void SystemPropertiesProto_Sys_Usb::set_state(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Sys.Usb.state)
}
inline void SystemPropertiesProto_Sys_Usb::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Sys.Usb.state)
}
inline void SystemPropertiesProto_Sys_Usb::set_state(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Sys.Usb.state)
}
inline std::string* SystemPropertiesProto_Sys_Usb::mutable_state() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Sys.Usb.state)
  return state_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Sys_Usb::release_state() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Sys.Usb.state)
  if (!has_state()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return state_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Sys_Usb::set_allocated_state(std::string* state) {
  if (state != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  state_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Sys.Usb.state)
}

// -------------------------------------------------------------------

// SystemPropertiesProto_Sys

// optional int32 boot_completed = 1;
inline bool SystemPropertiesProto_Sys::has_boot_completed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto_Sys::clear_boot_completed() {
  boot_completed_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys::boot_completed() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.boot_completed)
  return boot_completed_;
}
inline void SystemPropertiesProto_Sys::set_boot_completed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  boot_completed_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.boot_completed)
}

// optional int32 boot_from_charger_mode = 2;
inline bool SystemPropertiesProto_Sys::has_boot_from_charger_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto_Sys::clear_boot_from_charger_mode() {
  boot_from_charger_mode_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys::boot_from_charger_mode() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.boot_from_charger_mode)
  return boot_from_charger_mode_;
}
inline void SystemPropertiesProto_Sys::set_boot_from_charger_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  boot_from_charger_mode_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.boot_from_charger_mode)
}

// optional int32 retaildemo_enabled = 3;
inline bool SystemPropertiesProto_Sys::has_retaildemo_enabled() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto_Sys::clear_retaildemo_enabled() {
  retaildemo_enabled_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto_Sys::retaildemo_enabled() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.retaildemo_enabled)
  return retaildemo_enabled_;
}
inline void SystemPropertiesProto_Sys::set_retaildemo_enabled(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  retaildemo_enabled_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.retaildemo_enabled)
}

// optional string shutdown_requested = 4;
inline bool SystemPropertiesProto_Sys::has_shutdown_requested() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto_Sys::clear_shutdown_requested() {
  shutdown_requested_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto_Sys::shutdown_requested() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.shutdown_requested)
  return shutdown_requested_.GetNoArena();
}
inline void SystemPropertiesProto_Sys::set_shutdown_requested(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  shutdown_requested_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.Sys.shutdown_requested)
}
inline void SystemPropertiesProto_Sys::set_shutdown_requested(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  shutdown_requested_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.Sys.shutdown_requested)
}
inline void SystemPropertiesProto_Sys::set_shutdown_requested(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  shutdown_requested_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.Sys.shutdown_requested)
}
inline void SystemPropertiesProto_Sys::set_shutdown_requested(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  shutdown_requested_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.Sys.shutdown_requested)
}
inline std::string* SystemPropertiesProto_Sys::mutable_shutdown_requested() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Sys.shutdown_requested)
  return shutdown_requested_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto_Sys::release_shutdown_requested() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Sys.shutdown_requested)
  if (!has_shutdown_requested()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return shutdown_requested_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto_Sys::set_allocated_shutdown_requested(std::string* shutdown_requested) {
  if (shutdown_requested != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  shutdown_requested_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shutdown_requested);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Sys.shutdown_requested)
}

// optional .android.os.SystemPropertiesProto.Sys.Usb usb = 5;
inline bool SystemPropertiesProto_Sys::has_usb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto_Sys::clear_usb() {
  if (usb_ != nullptr) usb_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::os::SystemPropertiesProto_Sys_Usb& SystemPropertiesProto_Sys::usb() const {
  const ::android::os::SystemPropertiesProto_Sys_Usb* p = usb_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.Sys.usb)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Sys_Usb*>(
      &::android::os::_SystemPropertiesProto_Sys_Usb_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Sys_Usb* SystemPropertiesProto_Sys::release_usb() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.Sys.usb)
  _has_bits_[0] &= ~0x00000002u;
  ::android::os::SystemPropertiesProto_Sys_Usb* temp = usb_;
  usb_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Sys_Usb* SystemPropertiesProto_Sys::mutable_usb() {
  _has_bits_[0] |= 0x00000002u;
  if (usb_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Sys_Usb>(GetArenaNoVirtual());
    usb_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.Sys.usb)
  return usb_;
}
inline void SystemPropertiesProto_Sys::set_allocated_usb(::android::os::SystemPropertiesProto_Sys_Usb* usb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete usb_;
  }
  if (usb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      usb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usb, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  usb_ = usb;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.Sys.usb)
}

// -------------------------------------------------------------------

// SystemPropertiesProto

// repeated .android.os.SystemPropertiesProto.Property extra_properties = 1;
inline int SystemPropertiesProto::extra_properties_size() const {
  return extra_properties_.size();
}
inline void SystemPropertiesProto::clear_extra_properties() {
  extra_properties_.Clear();
}
inline ::android::os::SystemPropertiesProto_Property* SystemPropertiesProto::mutable_extra_properties(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.extra_properties)
  return extra_properties_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::SystemPropertiesProto_Property >*
SystemPropertiesProto::mutable_extra_properties() {
  // @@protoc_insertion_point(field_mutable_list:android.os.SystemPropertiesProto.extra_properties)
  return &extra_properties_;
}
inline const ::android::os::SystemPropertiesProto_Property& SystemPropertiesProto::extra_properties(int index) const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.extra_properties)
  return extra_properties_.Get(index);
}
inline ::android::os::SystemPropertiesProto_Property* SystemPropertiesProto::add_extra_properties() {
  // @@protoc_insertion_point(field_add:android.os.SystemPropertiesProto.extra_properties)
  return extra_properties_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::SystemPropertiesProto_Property >&
SystemPropertiesProto::extra_properties() const {
  // @@protoc_insertion_point(field_list:android.os.SystemPropertiesProto.extra_properties)
  return extra_properties_;
}

// optional .android.os.SystemPropertiesProto.AacDrc aac_drc = 2;
inline bool SystemPropertiesProto::has_aac_drc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemPropertiesProto::clear_aac_drc() {
  if (aac_drc_ != nullptr) aac_drc_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::android::os::SystemPropertiesProto_AacDrc& SystemPropertiesProto::aac_drc() const {
  const ::android::os::SystemPropertiesProto_AacDrc* p = aac_drc_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.aac_drc)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_AacDrc*>(
      &::android::os::_SystemPropertiesProto_AacDrc_default_instance_);
}
inline ::android::os::SystemPropertiesProto_AacDrc* SystemPropertiesProto::release_aac_drc() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.aac_drc)
  _has_bits_[0] &= ~0x00000080u;
  ::android::os::SystemPropertiesProto_AacDrc* temp = aac_drc_;
  aac_drc_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_AacDrc* SystemPropertiesProto::mutable_aac_drc() {
  _has_bits_[0] |= 0x00000080u;
  if (aac_drc_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_AacDrc>(GetArenaNoVirtual());
    aac_drc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.aac_drc)
  return aac_drc_;
}
inline void SystemPropertiesProto::set_allocated_aac_drc(::android::os::SystemPropertiesProto_AacDrc* aac_drc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete aac_drc_;
  }
  if (aac_drc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      aac_drc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aac_drc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  aac_drc_ = aac_drc;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.aac_drc)
}

// optional .android.os.SystemPropertiesProto.Aaudio aaudio = 3;
inline bool SystemPropertiesProto::has_aaudio() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemPropertiesProto::clear_aaudio() {
  if (aaudio_ != nullptr) aaudio_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::android::os::SystemPropertiesProto_Aaudio& SystemPropertiesProto::aaudio() const {
  const ::android::os::SystemPropertiesProto_Aaudio* p = aaudio_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.aaudio)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Aaudio*>(
      &::android::os::_SystemPropertiesProto_Aaudio_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Aaudio* SystemPropertiesProto::release_aaudio() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.aaudio)
  _has_bits_[0] &= ~0x00000100u;
  ::android::os::SystemPropertiesProto_Aaudio* temp = aaudio_;
  aaudio_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Aaudio* SystemPropertiesProto::mutable_aaudio() {
  _has_bits_[0] |= 0x00000100u;
  if (aaudio_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Aaudio>(GetArenaNoVirtual());
    aaudio_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.aaudio)
  return aaudio_;
}
inline void SystemPropertiesProto::set_allocated_aaudio(::android::os::SystemPropertiesProto_Aaudio* aaudio) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete aaudio_;
  }
  if (aaudio) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      aaudio = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aaudio, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  aaudio_ = aaudio;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.aaudio)
}

// optional int32 af_fast_track_multiplier = 4;
inline bool SystemPropertiesProto::has_af_fast_track_multiplier() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SystemPropertiesProto::clear_af_fast_track_multiplier() {
  af_fast_track_multiplier_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto::af_fast_track_multiplier() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.af_fast_track_multiplier)
  return af_fast_track_multiplier_;
}
inline void SystemPropertiesProto::set_af_fast_track_multiplier(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  af_fast_track_multiplier_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.af_fast_track_multiplier)
}

// optional .android.os.SystemPropertiesProto.Camera camera = 5;
inline bool SystemPropertiesProto::has_camera() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SystemPropertiesProto::clear_camera() {
  if (camera_ != nullptr) camera_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::android::os::SystemPropertiesProto_Camera& SystemPropertiesProto::camera() const {
  const ::android::os::SystemPropertiesProto_Camera* p = camera_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.camera)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Camera*>(
      &::android::os::_SystemPropertiesProto_Camera_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Camera* SystemPropertiesProto::release_camera() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.camera)
  _has_bits_[0] &= ~0x00000200u;
  ::android::os::SystemPropertiesProto_Camera* temp = camera_;
  camera_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Camera* SystemPropertiesProto::mutable_camera() {
  _has_bits_[0] |= 0x00000200u;
  if (camera_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Camera>(GetArenaNoVirtual());
    camera_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.camera)
  return camera_;
}
inline void SystemPropertiesProto::set_allocated_camera(::android::os::SystemPropertiesProto_Camera* camera) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete camera_;
  }
  if (camera) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      camera = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, camera, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  camera_ = camera;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.camera)
}

// optional .android.os.SystemPropertiesProto.DalvikVm dalvik_vm = 6;
inline bool SystemPropertiesProto::has_dalvik_vm() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SystemPropertiesProto::clear_dalvik_vm() {
  if (dalvik_vm_ != nullptr) dalvik_vm_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::android::os::SystemPropertiesProto_DalvikVm& SystemPropertiesProto::dalvik_vm() const {
  const ::android::os::SystemPropertiesProto_DalvikVm* p = dalvik_vm_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.dalvik_vm)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_DalvikVm*>(
      &::android::os::_SystemPropertiesProto_DalvikVm_default_instance_);
}
inline ::android::os::SystemPropertiesProto_DalvikVm* SystemPropertiesProto::release_dalvik_vm() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.dalvik_vm)
  _has_bits_[0] &= ~0x00000400u;
  ::android::os::SystemPropertiesProto_DalvikVm* temp = dalvik_vm_;
  dalvik_vm_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_DalvikVm* SystemPropertiesProto::mutable_dalvik_vm() {
  _has_bits_[0] |= 0x00000400u;
  if (dalvik_vm_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_DalvikVm>(GetArenaNoVirtual());
    dalvik_vm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.dalvik_vm)
  return dalvik_vm_;
}
inline void SystemPropertiesProto::set_allocated_dalvik_vm(::android::os::SystemPropertiesProto_DalvikVm* dalvik_vm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dalvik_vm_;
  }
  if (dalvik_vm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dalvik_vm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dalvik_vm, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  dalvik_vm_ = dalvik_vm;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.dalvik_vm)
}

// optional bool drm_64bit_enabled = 7;
inline bool SystemPropertiesProto::has_drm_64bit_enabled() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SystemPropertiesProto::clear_drm_64bit_enabled() {
  drm_64bit_enabled_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool SystemPropertiesProto::drm_64bit_enabled() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.drm_64bit_enabled)
  return drm_64bit_enabled_;
}
inline void SystemPropertiesProto::set_drm_64bit_enabled(bool value) {
  _has_bits_[0] |= 0x00040000u;
  drm_64bit_enabled_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.drm_64bit_enabled)
}

// optional bool drm_service_enabled = 8;
inline bool SystemPropertiesProto::has_drm_service_enabled() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SystemPropertiesProto::clear_drm_service_enabled() {
  drm_service_enabled_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool SystemPropertiesProto::drm_service_enabled() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.drm_service_enabled)
  return drm_service_enabled_;
}
inline void SystemPropertiesProto::set_drm_service_enabled(bool value) {
  _has_bits_[0] |= 0x00080000u;
  drm_service_enabled_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.drm_service_enabled)
}

// optional bool dumpstate_dry_run = 9;
inline bool SystemPropertiesProto::has_dumpstate_dry_run() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SystemPropertiesProto::clear_dumpstate_dry_run() {
  dumpstate_dry_run_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool SystemPropertiesProto::dumpstate_dry_run() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.dumpstate_dry_run)
  return dumpstate_dry_run_;
}
inline void SystemPropertiesProto::set_dumpstate_dry_run(bool value) {
  _has_bits_[0] |= 0x00100000u;
  dumpstate_dry_run_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.dumpstate_dry_run)
}

// optional string gsm_sim_operator_numeric = 10;
inline bool SystemPropertiesProto::has_gsm_sim_operator_numeric() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemPropertiesProto::clear_gsm_sim_operator_numeric() {
  gsm_sim_operator_numeric_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SystemPropertiesProto::gsm_sim_operator_numeric() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
  return gsm_sim_operator_numeric_.GetNoArena();
}
inline void SystemPropertiesProto::set_gsm_sim_operator_numeric(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gsm_sim_operator_numeric_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
}
inline void SystemPropertiesProto::set_gsm_sim_operator_numeric(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gsm_sim_operator_numeric_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
}
inline void SystemPropertiesProto::set_gsm_sim_operator_numeric(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  gsm_sim_operator_numeric_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
}
inline void SystemPropertiesProto::set_gsm_sim_operator_numeric(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gsm_sim_operator_numeric_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
}
inline std::string* SystemPropertiesProto::mutable_gsm_sim_operator_numeric() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
  return gsm_sim_operator_numeric_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_gsm_sim_operator_numeric() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
  if (!has_gsm_sim_operator_numeric()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gsm_sim_operator_numeric_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_gsm_sim_operator_numeric(std::string* gsm_sim_operator_numeric) {
  if (gsm_sim_operator_numeric != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gsm_sim_operator_numeric_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gsm_sim_operator_numeric);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.gsm_sim_operator_numeric)
}

// optional bool hal_instrumentation_enable = 11;
inline bool SystemPropertiesProto::has_hal_instrumentation_enable() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SystemPropertiesProto::clear_hal_instrumentation_enable() {
  hal_instrumentation_enable_ = false;
  _has_bits_[0] &= ~0x00200000u;
}
inline bool SystemPropertiesProto::hal_instrumentation_enable() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.hal_instrumentation_enable)
  return hal_instrumentation_enable_;
}
inline void SystemPropertiesProto::set_hal_instrumentation_enable(bool value) {
  _has_bits_[0] |= 0x00200000u;
  hal_instrumentation_enable_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.hal_instrumentation_enable)
}

// optional .android.os.SystemPropertiesProto.InitSvc init_svc = 12;
inline bool SystemPropertiesProto::has_init_svc() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SystemPropertiesProto::clear_init_svc() {
  if (init_svc_ != nullptr) init_svc_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::android::os::SystemPropertiesProto_InitSvc& SystemPropertiesProto::init_svc() const {
  const ::android::os::SystemPropertiesProto_InitSvc* p = init_svc_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.init_svc)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_InitSvc*>(
      &::android::os::_SystemPropertiesProto_InitSvc_default_instance_);
}
inline ::android::os::SystemPropertiesProto_InitSvc* SystemPropertiesProto::release_init_svc() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.init_svc)
  _has_bits_[0] &= ~0x00000800u;
  ::android::os::SystemPropertiesProto_InitSvc* temp = init_svc_;
  init_svc_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_InitSvc* SystemPropertiesProto::mutable_init_svc() {
  _has_bits_[0] |= 0x00000800u;
  if (init_svc_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_InitSvc>(GetArenaNoVirtual());
    init_svc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.init_svc)
  return init_svc_;
}
inline void SystemPropertiesProto::set_allocated_init_svc(::android::os::SystemPropertiesProto_InitSvc* init_svc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete init_svc_;
  }
  if (init_svc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      init_svc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, init_svc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  init_svc_ = init_svc;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.init_svc)
}

// optional bool keyguard_no_require_sim = 13;
inline bool SystemPropertiesProto::has_keyguard_no_require_sim() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SystemPropertiesProto::clear_keyguard_no_require_sim() {
  keyguard_no_require_sim_ = false;
  _has_bits_[0] &= ~0x00400000u;
}
inline bool SystemPropertiesProto::keyguard_no_require_sim() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.keyguard_no_require_sim)
  return keyguard_no_require_sim_;
}
inline void SystemPropertiesProto::set_keyguard_no_require_sim(bool value) {
  _has_bits_[0] |= 0x00400000u;
  keyguard_no_require_sim_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.keyguard_no_require_sim)
}

// optional string libc_debug_malloc_options = 14;
inline bool SystemPropertiesProto::has_libc_debug_malloc_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemPropertiesProto::clear_libc_debug_malloc_options() {
  libc_debug_malloc_options_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SystemPropertiesProto::libc_debug_malloc_options() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.libc_debug_malloc_options)
  return libc_debug_malloc_options_.GetNoArena();
}
inline void SystemPropertiesProto::set_libc_debug_malloc_options(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  libc_debug_malloc_options_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.libc_debug_malloc_options)
}
inline void SystemPropertiesProto::set_libc_debug_malloc_options(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  libc_debug_malloc_options_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.libc_debug_malloc_options)
}
inline void SystemPropertiesProto::set_libc_debug_malloc_options(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  libc_debug_malloc_options_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.libc_debug_malloc_options)
}
inline void SystemPropertiesProto::set_libc_debug_malloc_options(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  libc_debug_malloc_options_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.libc_debug_malloc_options)
}
inline std::string* SystemPropertiesProto::mutable_libc_debug_malloc_options() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.libc_debug_malloc_options)
  return libc_debug_malloc_options_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_libc_debug_malloc_options() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.libc_debug_malloc_options)
  if (!has_libc_debug_malloc_options()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return libc_debug_malloc_options_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_libc_debug_malloc_options(std::string* libc_debug_malloc_options) {
  if (libc_debug_malloc_options != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  libc_debug_malloc_options_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), libc_debug_malloc_options);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.libc_debug_malloc_options)
}

// optional string libc_debug_malloc_program = 15;
inline bool SystemPropertiesProto::has_libc_debug_malloc_program() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemPropertiesProto::clear_libc_debug_malloc_program() {
  libc_debug_malloc_program_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SystemPropertiesProto::libc_debug_malloc_program() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.libc_debug_malloc_program)
  return libc_debug_malloc_program_.GetNoArena();
}
inline void SystemPropertiesProto::set_libc_debug_malloc_program(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  libc_debug_malloc_program_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.libc_debug_malloc_program)
}
inline void SystemPropertiesProto::set_libc_debug_malloc_program(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  libc_debug_malloc_program_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.libc_debug_malloc_program)
}
inline void SystemPropertiesProto::set_libc_debug_malloc_program(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  libc_debug_malloc_program_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.libc_debug_malloc_program)
}
inline void SystemPropertiesProto::set_libc_debug_malloc_program(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  libc_debug_malloc_program_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.libc_debug_malloc_program)
}
inline std::string* SystemPropertiesProto::mutable_libc_debug_malloc_program() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.libc_debug_malloc_program)
  return libc_debug_malloc_program_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_libc_debug_malloc_program() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.libc_debug_malloc_program)
  if (!has_libc_debug_malloc_program()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return libc_debug_malloc_program_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_libc_debug_malloc_program(std::string* libc_debug_malloc_program) {
  if (libc_debug_malloc_program != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  libc_debug_malloc_program_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), libc_debug_malloc_program);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.libc_debug_malloc_program)
}

// optional .android.os.SystemPropertiesProto.Log log = 16;
inline bool SystemPropertiesProto::has_log() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SystemPropertiesProto::clear_log() {
  if (log_ != nullptr) log_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::android::os::SystemPropertiesProto_Log& SystemPropertiesProto::log() const {
  const ::android::os::SystemPropertiesProto_Log* p = log_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.log)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Log*>(
      &::android::os::_SystemPropertiesProto_Log_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Log* SystemPropertiesProto::release_log() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.log)
  _has_bits_[0] &= ~0x00001000u;
  ::android::os::SystemPropertiesProto_Log* temp = log_;
  log_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Log* SystemPropertiesProto::mutable_log() {
  _has_bits_[0] |= 0x00001000u;
  if (log_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Log>(GetArenaNoVirtual());
    log_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.log)
  return log_;
}
inline void SystemPropertiesProto::set_allocated_log(::android::os::SystemPropertiesProto_Log* log) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete log_;
  }
  if (log) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      log = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, log, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  log_ = log;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.log)
}

// optional bool media_mediadrmservice_enable = 17;
inline bool SystemPropertiesProto::has_media_mediadrmservice_enable() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SystemPropertiesProto::clear_media_mediadrmservice_enable() {
  media_mediadrmservice_enable_ = false;
  _has_bits_[0] &= ~0x00800000u;
}
inline bool SystemPropertiesProto::media_mediadrmservice_enable() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.media_mediadrmservice_enable)
  return media_mediadrmservice_enable_;
}
inline void SystemPropertiesProto::set_media_mediadrmservice_enable(bool value) {
  _has_bits_[0] |= 0x00800000u;
  media_mediadrmservice_enable_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.media_mediadrmservice_enable)
}

// optional bool media_recorder_show_manufacturer_and_model = 18;
inline bool SystemPropertiesProto::has_media_recorder_show_manufacturer_and_model() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SystemPropertiesProto::clear_media_recorder_show_manufacturer_and_model() {
  media_recorder_show_manufacturer_and_model_ = false;
  _has_bits_[0] &= ~0x01000000u;
}
inline bool SystemPropertiesProto::media_recorder_show_manufacturer_and_model() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.media_recorder_show_manufacturer_and_model)
  return media_recorder_show_manufacturer_and_model_;
}
inline void SystemPropertiesProto::set_media_recorder_show_manufacturer_and_model(bool value) {
  _has_bits_[0] |= 0x01000000u;
  media_recorder_show_manufacturer_and_model_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.media_recorder_show_manufacturer_and_model)
}

// optional .android.os.SystemPropertiesProto.Persist persist = 19;
inline bool SystemPropertiesProto::has_persist() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SystemPropertiesProto::clear_persist() {
  if (persist_ != nullptr) persist_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
inline const ::android::os::SystemPropertiesProto_Persist& SystemPropertiesProto::persist() const {
  const ::android::os::SystemPropertiesProto_Persist* p = persist_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.persist)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Persist*>(
      &::android::os::_SystemPropertiesProto_Persist_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Persist* SystemPropertiesProto::release_persist() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.persist)
  _has_bits_[0] &= ~0x00002000u;
  ::android::os::SystemPropertiesProto_Persist* temp = persist_;
  persist_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Persist* SystemPropertiesProto::mutable_persist() {
  _has_bits_[0] |= 0x00002000u;
  if (persist_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Persist>(GetArenaNoVirtual());
    persist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.persist)
  return persist_;
}
inline void SystemPropertiesProto::set_allocated_persist(::android::os::SystemPropertiesProto_Persist* persist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete persist_;
  }
  if (persist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      persist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, persist, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  persist_ = persist;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.persist)
}

// optional .android.os.SystemPropertiesProto.PmDexopt pm_dexopt = 20;
inline bool SystemPropertiesProto::has_pm_dexopt() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SystemPropertiesProto::clear_pm_dexopt() {
  if (pm_dexopt_ != nullptr) pm_dexopt_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
inline const ::android::os::SystemPropertiesProto_PmDexopt& SystemPropertiesProto::pm_dexopt() const {
  const ::android::os::SystemPropertiesProto_PmDexopt* p = pm_dexopt_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.pm_dexopt)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_PmDexopt*>(
      &::android::os::_SystemPropertiesProto_PmDexopt_default_instance_);
}
inline ::android::os::SystemPropertiesProto_PmDexopt* SystemPropertiesProto::release_pm_dexopt() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.pm_dexopt)
  _has_bits_[0] &= ~0x00004000u;
  ::android::os::SystemPropertiesProto_PmDexopt* temp = pm_dexopt_;
  pm_dexopt_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_PmDexopt* SystemPropertiesProto::mutable_pm_dexopt() {
  _has_bits_[0] |= 0x00004000u;
  if (pm_dexopt_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_PmDexopt>(GetArenaNoVirtual());
    pm_dexopt_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.pm_dexopt)
  return pm_dexopt_;
}
inline void SystemPropertiesProto::set_allocated_pm_dexopt(::android::os::SystemPropertiesProto_PmDexopt* pm_dexopt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pm_dexopt_;
  }
  if (pm_dexopt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pm_dexopt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pm_dexopt, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  pm_dexopt_ = pm_dexopt;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.pm_dexopt)
}

// optional .android.os.SystemPropertiesProto.Ro ro = 21;
inline bool SystemPropertiesProto::has_ro() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SystemPropertiesProto::clear_ro() {
  if (ro_ != nullptr) ro_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
inline const ::android::os::SystemPropertiesProto_Ro& SystemPropertiesProto::ro() const {
  const ::android::os::SystemPropertiesProto_Ro* p = ro_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.ro)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Ro*>(
      &::android::os::_SystemPropertiesProto_Ro_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Ro* SystemPropertiesProto::release_ro() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.ro)
  _has_bits_[0] &= ~0x00008000u;
  ::android::os::SystemPropertiesProto_Ro* temp = ro_;
  ro_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Ro* SystemPropertiesProto::mutable_ro() {
  _has_bits_[0] |= 0x00008000u;
  if (ro_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Ro>(GetArenaNoVirtual());
    ro_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.ro)
  return ro_;
}
inline void SystemPropertiesProto::set_allocated_ro(::android::os::SystemPropertiesProto_Ro* ro) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ro_;
  }
  if (ro) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ro = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ro, submessage_arena);
    }
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  ro_ = ro;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.ro)
}

// optional string sendbug_preferred_domain = 22;
inline bool SystemPropertiesProto::has_sendbug_preferred_domain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemPropertiesProto::clear_sendbug_preferred_domain() {
  sendbug_preferred_domain_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SystemPropertiesProto::sendbug_preferred_domain() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.sendbug_preferred_domain)
  return sendbug_preferred_domain_.GetNoArena();
}
inline void SystemPropertiesProto::set_sendbug_preferred_domain(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  sendbug_preferred_domain_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.sendbug_preferred_domain)
}
inline void SystemPropertiesProto::set_sendbug_preferred_domain(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  sendbug_preferred_domain_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.sendbug_preferred_domain)
}
inline void SystemPropertiesProto::set_sendbug_preferred_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  sendbug_preferred_domain_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.sendbug_preferred_domain)
}
inline void SystemPropertiesProto::set_sendbug_preferred_domain(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  sendbug_preferred_domain_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.sendbug_preferred_domain)
}
inline std::string* SystemPropertiesProto::mutable_sendbug_preferred_domain() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.sendbug_preferred_domain)
  return sendbug_preferred_domain_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_sendbug_preferred_domain() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.sendbug_preferred_domain)
  if (!has_sendbug_preferred_domain()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return sendbug_preferred_domain_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_sendbug_preferred_domain(std::string* sendbug_preferred_domain) {
  if (sendbug_preferred_domain != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  sendbug_preferred_domain_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sendbug_preferred_domain);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.sendbug_preferred_domain)
}

// optional int32 service_bootanim_exit = 23;
inline bool SystemPropertiesProto::has_service_bootanim_exit() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SystemPropertiesProto::clear_service_bootanim_exit() {
  service_bootanim_exit_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto::service_bootanim_exit() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.service_bootanim_exit)
  return service_bootanim_exit_;
}
inline void SystemPropertiesProto::set_service_bootanim_exit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  service_bootanim_exit_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.service_bootanim_exit)
}

// optional .android.os.SystemPropertiesProto.Sys sys = 24;
inline bool SystemPropertiesProto::has_sys() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SystemPropertiesProto::clear_sys() {
  if (sys_ != nullptr) sys_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
inline const ::android::os::SystemPropertiesProto_Sys& SystemPropertiesProto::sys() const {
  const ::android::os::SystemPropertiesProto_Sys* p = sys_;
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.sys)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto_Sys*>(
      &::android::os::_SystemPropertiesProto_Sys_default_instance_);
}
inline ::android::os::SystemPropertiesProto_Sys* SystemPropertiesProto::release_sys() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.sys)
  _has_bits_[0] &= ~0x00010000u;
  ::android::os::SystemPropertiesProto_Sys* temp = sys_;
  sys_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto_Sys* SystemPropertiesProto::mutable_sys() {
  _has_bits_[0] |= 0x00010000u;
  if (sys_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto_Sys>(GetArenaNoVirtual());
    sys_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.sys)
  return sys_;
}
inline void SystemPropertiesProto::set_allocated_sys(::android::os::SystemPropertiesProto_Sys* sys) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete sys_;
  }
  if (sys) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sys = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sys, submessage_arena);
    }
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  sys_ = sys;
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.sys)
}

// optional int32 telephony_lte_on_cdma_device = 25;
inline bool SystemPropertiesProto::has_telephony_lte_on_cdma_device() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SystemPropertiesProto::clear_telephony_lte_on_cdma_device() {
  telephony_lte_on_cdma_device_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto::telephony_lte_on_cdma_device() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.telephony_lte_on_cdma_device)
  return telephony_lte_on_cdma_device_;
}
inline void SystemPropertiesProto::set_telephony_lte_on_cdma_device(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x04000000u;
  telephony_lte_on_cdma_device_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.telephony_lte_on_cdma_device)
}

// optional int32 tombstoned_max_tombstone_count = 26;
inline bool SystemPropertiesProto::has_tombstoned_max_tombstone_count() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SystemPropertiesProto::clear_tombstoned_max_tombstone_count() {
  tombstoned_max_tombstone_count_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto::tombstoned_max_tombstone_count() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.tombstoned_max_tombstone_count)
  return tombstoned_max_tombstone_count_;
}
inline void SystemPropertiesProto::set_tombstoned_max_tombstone_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x08000000u;
  tombstoned_max_tombstone_count_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.tombstoned_max_tombstone_count)
}

// optional string vold_decrypt = 27;
inline bool SystemPropertiesProto::has_vold_decrypt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemPropertiesProto::clear_vold_decrypt() {
  vold_decrypt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& SystemPropertiesProto::vold_decrypt() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.vold_decrypt)
  return vold_decrypt_.GetNoArena();
}
inline void SystemPropertiesProto::set_vold_decrypt(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  vold_decrypt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.vold_decrypt)
}
inline void SystemPropertiesProto::set_vold_decrypt(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  vold_decrypt_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.vold_decrypt)
}
inline void SystemPropertiesProto::set_vold_decrypt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  vold_decrypt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.vold_decrypt)
}
inline void SystemPropertiesProto::set_vold_decrypt(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  vold_decrypt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.vold_decrypt)
}
inline std::string* SystemPropertiesProto::mutable_vold_decrypt() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.vold_decrypt)
  return vold_decrypt_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_vold_decrypt() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.vold_decrypt)
  if (!has_vold_decrypt()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return vold_decrypt_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_vold_decrypt(std::string* vold_decrypt) {
  if (vold_decrypt != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  vold_decrypt_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vold_decrypt);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.vold_decrypt)
}

// optional int32 vold_post_fs_data_done = 28;
inline bool SystemPropertiesProto::has_vold_post_fs_data_done() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SystemPropertiesProto::clear_vold_post_fs_data_done() {
  vold_post_fs_data_done_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto::vold_post_fs_data_done() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.vold_post_fs_data_done)
  return vold_post_fs_data_done_;
}
inline void SystemPropertiesProto::set_vold_post_fs_data_done(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x10000000u;
  vold_post_fs_data_done_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.vold_post_fs_data_done)
}

// optional int32 vts_native_server_on = 29;
inline bool SystemPropertiesProto::has_vts_native_server_on() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SystemPropertiesProto::clear_vts_native_server_on() {
  vts_native_server_on_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SystemPropertiesProto::vts_native_server_on() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.vts_native_server_on)
  return vts_native_server_on_;
}
inline void SystemPropertiesProto::set_vts_native_server_on(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x20000000u;
  vts_native_server_on_ = value;
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.vts_native_server_on)
}

// optional string wifi_direct_interface = 30;
inline bool SystemPropertiesProto::has_wifi_direct_interface() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemPropertiesProto::clear_wifi_direct_interface() {
  wifi_direct_interface_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& SystemPropertiesProto::wifi_direct_interface() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.wifi_direct_interface)
  return wifi_direct_interface_.GetNoArena();
}
inline void SystemPropertiesProto::set_wifi_direct_interface(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  wifi_direct_interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.wifi_direct_interface)
}
inline void SystemPropertiesProto::set_wifi_direct_interface(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  wifi_direct_interface_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.wifi_direct_interface)
}
inline void SystemPropertiesProto::set_wifi_direct_interface(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  wifi_direct_interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.wifi_direct_interface)
}
inline void SystemPropertiesProto::set_wifi_direct_interface(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  wifi_direct_interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.wifi_direct_interface)
}
inline std::string* SystemPropertiesProto::mutable_wifi_direct_interface() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.wifi_direct_interface)
  return wifi_direct_interface_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_wifi_direct_interface() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.wifi_direct_interface)
  if (!has_wifi_direct_interface()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return wifi_direct_interface_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_wifi_direct_interface(std::string* wifi_direct_interface) {
  if (wifi_direct_interface != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  wifi_direct_interface_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wifi_direct_interface);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.wifi_direct_interface)
}

// optional string wifi_interface = 31;
inline bool SystemPropertiesProto::has_wifi_interface() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemPropertiesProto::clear_wifi_interface() {
  wifi_interface_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& SystemPropertiesProto::wifi_interface() const {
  // @@protoc_insertion_point(field_get:android.os.SystemPropertiesProto.wifi_interface)
  return wifi_interface_.GetNoArena();
}
inline void SystemPropertiesProto::set_wifi_interface(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  wifi_interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.SystemPropertiesProto.wifi_interface)
}
inline void SystemPropertiesProto::set_wifi_interface(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  wifi_interface_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.SystemPropertiesProto.wifi_interface)
}
inline void SystemPropertiesProto::set_wifi_interface(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  wifi_interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.SystemPropertiesProto.wifi_interface)
}
inline void SystemPropertiesProto::set_wifi_interface(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  wifi_interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.SystemPropertiesProto.wifi_interface)
}
inline std::string* SystemPropertiesProto::mutable_wifi_interface() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:android.os.SystemPropertiesProto.wifi_interface)
  return wifi_interface_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemPropertiesProto::release_wifi_interface() {
  // @@protoc_insertion_point(field_release:android.os.SystemPropertiesProto.wifi_interface)
  if (!has_wifi_interface()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return wifi_interface_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPropertiesProto::set_allocated_wifi_interface(std::string* wifi_interface) {
  if (wifi_interface != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  wifi_interface_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wifi_interface);
  // @@protoc_insertion_point(field_set_allocated:android.os.SystemPropertiesProto.wifi_interface)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::os::SystemPropertiesProto_InitSvc_Status> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fsystem_5fproperties_2eproto
