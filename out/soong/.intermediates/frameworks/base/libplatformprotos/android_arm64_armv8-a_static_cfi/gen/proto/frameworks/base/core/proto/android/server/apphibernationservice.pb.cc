// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/apphibernationservice.proto

#include "frameworks/base/core/proto/android/server/apphibernationservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto;
namespace com {
namespace android {
namespace server {
namespace apphibernation {
class UserLevelHibernationStatesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserLevelHibernationStatesProto> _instance;
} _UserLevelHibernationStatesProto_default_instance_;
class UserLevelHibernationStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserLevelHibernationStateProto> _instance;
} _UserLevelHibernationStateProto_default_instance_;
class GlobalLevelHibernationStatesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalLevelHibernationStatesProto> _instance;
} _GlobalLevelHibernationStatesProto_default_instance_;
class GlobalLevelHibernationStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GlobalLevelHibernationStateProto> _instance;
} _GlobalLevelHibernationStateProto_default_instance_;
}  // namespace apphibernation
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::apphibernation::_GlobalLevelHibernationStateProto_default_instance_;
    new (ptr) ::com::android::server::apphibernation::GlobalLevelHibernationStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::apphibernation::GlobalLevelHibernationStateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto}, {}};

static void InitDefaultsscc_info_GlobalLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::apphibernation::_GlobalLevelHibernationStatesProto_default_instance_;
    new (ptr) ::com::android::server::apphibernation::GlobalLevelHibernationStatesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::apphibernation::GlobalLevelHibernationStatesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GlobalLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GlobalLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto}, {
      &scc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base,}};

static void InitDefaultsscc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::apphibernation::_UserLevelHibernationStateProto_default_instance_;
    new (ptr) ::com::android::server::apphibernation::UserLevelHibernationStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::apphibernation::UserLevelHibernationStateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto}, {}};

static void InitDefaultsscc_info_UserLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::apphibernation::_UserLevelHibernationStatesProto_default_instance_;
    new (ptr) ::com::android::server::apphibernation::UserLevelHibernationStatesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::apphibernation::UserLevelHibernationStatesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UserLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UserLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto}, {
      &scc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base,}};

namespace com {
namespace android {
namespace server {
namespace apphibernation {

// ===================================================================

void UserLevelHibernationStatesProto::InitAsDefaultInstance() {
}
class UserLevelHibernationStatesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<UserLevelHibernationStatesProto>()._has_bits_);
};

UserLevelHibernationStatesProto::UserLevelHibernationStatesProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.apphibernation.UserLevelHibernationStatesProto)
}
UserLevelHibernationStatesProto::UserLevelHibernationStatesProto(const UserLevelHibernationStatesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      hibernation_state_(from.hibernation_state_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.apphibernation.UserLevelHibernationStatesProto)
}

void UserLevelHibernationStatesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
}

UserLevelHibernationStatesProto::~UserLevelHibernationStatesProto() {
  // @@protoc_insertion_point(destructor:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  SharedDtor();
}

void UserLevelHibernationStatesProto::SharedDtor() {
}

void UserLevelHibernationStatesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserLevelHibernationStatesProto& UserLevelHibernationStatesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
  return *internal_default_instance();
}


void UserLevelHibernationStatesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hibernation_state_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserLevelHibernationStatesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.apphibernation.UserLevelHibernationStateProto hibernation_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_hibernation_state(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserLevelHibernationStatesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.apphibernation.UserLevelHibernationStateProto hibernation_state = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_hibernation_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserLevelHibernationStatesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.apphibernation.UserLevelHibernationStateProto hibernation_state = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hibernation_state_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->hibernation_state(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.apphibernation.UserLevelHibernationStatesProto)
}

size_t UserLevelHibernationStatesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.apphibernation.UserLevelHibernationStateProto hibernation_state = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hibernation_state_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->hibernation_state(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLevelHibernationStatesProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const UserLevelHibernationStatesProto*>(
      &from));
}

void UserLevelHibernationStatesProto::MergeFrom(const UserLevelHibernationStatesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hibernation_state_.MergeFrom(from.hibernation_state_);
}

void UserLevelHibernationStatesProto::CopyFrom(const UserLevelHibernationStatesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.apphibernation.UserLevelHibernationStatesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLevelHibernationStatesProto::IsInitialized() const {
  return true;
}

void UserLevelHibernationStatesProto::InternalSwap(UserLevelHibernationStatesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&hibernation_state_)->InternalSwap(CastToBase(&other->hibernation_state_));
}

std::string UserLevelHibernationStatesProto::GetTypeName() const {
  return "com.android.server.apphibernation.UserLevelHibernationStatesProto";
}


// ===================================================================

void UserLevelHibernationStateProto::InitAsDefaultInstance() {
}
class UserLevelHibernationStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<UserLevelHibernationStateProto>()._has_bits_);
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hibernated(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UserLevelHibernationStateProto::UserLevelHibernationStateProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.apphibernation.UserLevelHibernationStateProto)
}
UserLevelHibernationStateProto::UserLevelHibernationStateProto(const UserLevelHibernationStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  hibernated_ = from.hibernated_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.apphibernation.UserLevelHibernationStateProto)
}

void UserLevelHibernationStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hibernated_ = false;
}

UserLevelHibernationStateProto::~UserLevelHibernationStateProto() {
  // @@protoc_insertion_point(destructor:com.android.server.apphibernation.UserLevelHibernationStateProto)
  SharedDtor();
}

void UserLevelHibernationStateProto::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserLevelHibernationStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserLevelHibernationStateProto& UserLevelHibernationStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
  return *internal_default_instance();
}


void UserLevelHibernationStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.apphibernation.UserLevelHibernationStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_name_.ClearNonDefaultToEmptyNoArena();
  }
  hibernated_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserLevelHibernationStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_package_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool hibernated = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_hibernated(&has_bits);
          hibernated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserLevelHibernationStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.apphibernation.UserLevelHibernationStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hibernated = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_hibernated(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hibernated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.apphibernation.UserLevelHibernationStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.apphibernation.UserLevelHibernationStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserLevelHibernationStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.apphibernation.UserLevelHibernationStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // optional bool hibernated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->hibernated(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.apphibernation.UserLevelHibernationStateProto)
}

size_t UserLevelHibernationStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.apphibernation.UserLevelHibernationStateProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string package_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional bool hibernated = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLevelHibernationStateProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const UserLevelHibernationStateProto*>(
      &from));
}

void UserLevelHibernationStateProto::MergeFrom(const UserLevelHibernationStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.apphibernation.UserLevelHibernationStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      hibernated_ = from.hibernated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserLevelHibernationStateProto::CopyFrom(const UserLevelHibernationStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.apphibernation.UserLevelHibernationStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLevelHibernationStateProto::IsInitialized() const {
  return true;
}

void UserLevelHibernationStateProto::InternalSwap(UserLevelHibernationStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hibernated_, other->hibernated_);
}

std::string UserLevelHibernationStateProto::GetTypeName() const {
  return "com.android.server.apphibernation.UserLevelHibernationStateProto";
}


// ===================================================================

void GlobalLevelHibernationStatesProto::InitAsDefaultInstance() {
}
class GlobalLevelHibernationStatesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GlobalLevelHibernationStatesProto>()._has_bits_);
};

GlobalLevelHibernationStatesProto::GlobalLevelHibernationStatesProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
}
GlobalLevelHibernationStatesProto::GlobalLevelHibernationStatesProto(const GlobalLevelHibernationStatesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      hibernation_state_(from.hibernation_state_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
}

void GlobalLevelHibernationStatesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GlobalLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
}

GlobalLevelHibernationStatesProto::~GlobalLevelHibernationStatesProto() {
  // @@protoc_insertion_point(destructor:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  SharedDtor();
}

void GlobalLevelHibernationStatesProto::SharedDtor() {
}

void GlobalLevelHibernationStatesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalLevelHibernationStatesProto& GlobalLevelHibernationStatesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalLevelHibernationStatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
  return *internal_default_instance();
}


void GlobalLevelHibernationStatesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hibernation_state_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GlobalLevelHibernationStatesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.apphibernation.GlobalLevelHibernationStateProto hibernation_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_hibernation_state(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GlobalLevelHibernationStatesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.apphibernation.GlobalLevelHibernationStateProto hibernation_state = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_hibernation_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GlobalLevelHibernationStatesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.apphibernation.GlobalLevelHibernationStateProto hibernation_state = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hibernation_state_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->hibernation_state(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
}

size_t GlobalLevelHibernationStatesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.apphibernation.GlobalLevelHibernationStateProto hibernation_state = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hibernation_state_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->hibernation_state(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalLevelHibernationStatesProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GlobalLevelHibernationStatesProto*>(
      &from));
}

void GlobalLevelHibernationStatesProto::MergeFrom(const GlobalLevelHibernationStatesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hibernation_state_.MergeFrom(from.hibernation_state_);
}

void GlobalLevelHibernationStatesProto::CopyFrom(const GlobalLevelHibernationStatesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.apphibernation.GlobalLevelHibernationStatesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalLevelHibernationStatesProto::IsInitialized() const {
  return true;
}

void GlobalLevelHibernationStatesProto::InternalSwap(GlobalLevelHibernationStatesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&hibernation_state_)->InternalSwap(CastToBase(&other->hibernation_state_));
}

std::string GlobalLevelHibernationStatesProto::GetTypeName() const {
  return "com.android.server.apphibernation.GlobalLevelHibernationStatesProto";
}


// ===================================================================

void GlobalLevelHibernationStateProto::InitAsDefaultInstance() {
}
class GlobalLevelHibernationStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GlobalLevelHibernationStateProto>()._has_bits_);
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hibernated(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_saved_byte(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GlobalLevelHibernationStateProto::GlobalLevelHibernationStateProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
}
GlobalLevelHibernationStateProto::GlobalLevelHibernationStateProto(const GlobalLevelHibernationStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  ::memcpy(&saved_byte_, &from.saved_byte_,
    static_cast<size_t>(reinterpret_cast<char*>(&hibernated_) -
    reinterpret_cast<char*>(&saved_byte_)) + sizeof(hibernated_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
}

void GlobalLevelHibernationStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&saved_byte_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hibernated_) -
      reinterpret_cast<char*>(&saved_byte_)) + sizeof(hibernated_));
}

GlobalLevelHibernationStateProto::~GlobalLevelHibernationStateProto() {
  // @@protoc_insertion_point(destructor:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  SharedDtor();
}

void GlobalLevelHibernationStateProto::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GlobalLevelHibernationStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GlobalLevelHibernationStateProto& GlobalLevelHibernationStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GlobalLevelHibernationStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fapphibernationservice_2eproto.base);
  return *internal_default_instance();
}


void GlobalLevelHibernationStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&saved_byte_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hibernated_) -
        reinterpret_cast<char*>(&saved_byte_)) + sizeof(hibernated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GlobalLevelHibernationStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_package_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool hibernated = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_hibernated(&has_bits);
          hibernated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 saved_byte = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_saved_byte(&has_bits);
          saved_byte_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GlobalLevelHibernationStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hibernated = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_hibernated(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hibernated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 saved_byte = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_saved_byte(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &saved_byte_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GlobalLevelHibernationStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // optional bool hibernated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->hibernated(), output);
  }

  // optional int64 saved_byte = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->saved_byte(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
}

size_t GlobalLevelHibernationStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string package_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional int64 saved_byte = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->saved_byte());
    }

    // optional bool hibernated = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalLevelHibernationStateProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GlobalLevelHibernationStateProto*>(
      &from));
}

void GlobalLevelHibernationStateProto::MergeFrom(const GlobalLevelHibernationStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      saved_byte_ = from.saved_byte_;
    }
    if (cached_has_bits & 0x00000004u) {
      hibernated_ = from.hibernated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GlobalLevelHibernationStateProto::CopyFrom(const GlobalLevelHibernationStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.apphibernation.GlobalLevelHibernationStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalLevelHibernationStateProto::IsInitialized() const {
  return true;
}

void GlobalLevelHibernationStateProto::InternalSwap(GlobalLevelHibernationStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(saved_byte_, other->saved_byte_);
  swap(hibernated_, other->hibernated_);
}

std::string GlobalLevelHibernationStateProto::GetTypeName() const {
  return "com.android.server.apphibernation.GlobalLevelHibernationStateProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace apphibernation
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::apphibernation::UserLevelHibernationStatesProto* Arena::CreateMaybeMessage< ::com::android::server::apphibernation::UserLevelHibernationStatesProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::apphibernation::UserLevelHibernationStatesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::apphibernation::UserLevelHibernationStateProto* Arena::CreateMaybeMessage< ::com::android::server::apphibernation::UserLevelHibernationStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::apphibernation::UserLevelHibernationStateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::apphibernation::GlobalLevelHibernationStatesProto* Arena::CreateMaybeMessage< ::com::android::server::apphibernation::GlobalLevelHibernationStatesProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::apphibernation::GlobalLevelHibernationStatesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::apphibernation::GlobalLevelHibernationStateProto* Arena::CreateMaybeMessage< ::com::android::server::apphibernation::GlobalLevelHibernationStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::apphibernation::GlobalLevelHibernationStateProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
