// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/messagequeue.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fmessagequeue_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fmessagequeue_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/os/message.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fmessagequeue_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fmessagequeue_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace os {
class MessageQueueProto;
class MessageQueueProtoDefaultTypeInternal;
extern MessageQueueProtoDefaultTypeInternal _MessageQueueProto_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::MessageQueueProto* Arena::CreateMaybeMessage<::android::os::MessageQueueProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class MessageQueueProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.MessageQueueProto) */ {
 public:
  MessageQueueProto();
  virtual ~MessageQueueProto();

  MessageQueueProto(const MessageQueueProto& from);
  MessageQueueProto(MessageQueueProto&& from) noexcept
    : MessageQueueProto() {
    *this = ::std::move(from);
  }

  inline MessageQueueProto& operator=(const MessageQueueProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageQueueProto& operator=(MessageQueueProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MessageQueueProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageQueueProto* internal_default_instance() {
    return reinterpret_cast<const MessageQueueProto*>(
               &_MessageQueueProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessageQueueProto& a, MessageQueueProto& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageQueueProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MessageQueueProto* New() const final {
    return CreateMaybeMessage<MessageQueueProto>(nullptr);
  }

  MessageQueueProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MessageQueueProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const MessageQueueProto& from);
  void MergeFrom(const MessageQueueProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageQueueProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.MessageQueueProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
    kIsPollingLockedFieldNumber = 2,
    kIsQuittingFieldNumber = 3,
  };
  // repeated .android.os.MessageProto messages = 1;
  int messages_size() const;
  void clear_messages();
  ::android::os::MessageProto* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::MessageProto >*
      mutable_messages();
  const ::android::os::MessageProto& messages(int index) const;
  ::android::os::MessageProto* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::MessageProto >&
      messages() const;

  // optional bool is_polling_locked = 2;
  bool has_is_polling_locked() const;
  void clear_is_polling_locked();
  bool is_polling_locked() const;
  void set_is_polling_locked(bool value);

  // optional bool is_quitting = 3;
  bool has_is_quitting() const;
  void clear_is_quitting();
  bool is_quitting() const;
  void set_is_quitting(bool value);

  // @@protoc_insertion_point(class_scope:android.os.MessageQueueProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::MessageProto > messages_;
  bool is_polling_locked_;
  bool is_quitting_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fmessagequeue_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageQueueProto

// repeated .android.os.MessageProto messages = 1;
inline int MessageQueueProto::messages_size() const {
  return messages_.size();
}
inline ::android::os::MessageProto* MessageQueueProto::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.MessageQueueProto.messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::MessageProto >*
MessageQueueProto::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:android.os.MessageQueueProto.messages)
  return &messages_;
}
inline const ::android::os::MessageProto& MessageQueueProto::messages(int index) const {
  // @@protoc_insertion_point(field_get:android.os.MessageQueueProto.messages)
  return messages_.Get(index);
}
inline ::android::os::MessageProto* MessageQueueProto::add_messages() {
  // @@protoc_insertion_point(field_add:android.os.MessageQueueProto.messages)
  return messages_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::MessageProto >&
MessageQueueProto::messages() const {
  // @@protoc_insertion_point(field_list:android.os.MessageQueueProto.messages)
  return messages_;
}

// optional bool is_polling_locked = 2;
inline bool MessageQueueProto::has_is_polling_locked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageQueueProto::clear_is_polling_locked() {
  is_polling_locked_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MessageQueueProto::is_polling_locked() const {
  // @@protoc_insertion_point(field_get:android.os.MessageQueueProto.is_polling_locked)
  return is_polling_locked_;
}
inline void MessageQueueProto::set_is_polling_locked(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_polling_locked_ = value;
  // @@protoc_insertion_point(field_set:android.os.MessageQueueProto.is_polling_locked)
}

// optional bool is_quitting = 3;
inline bool MessageQueueProto::has_is_quitting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageQueueProto::clear_is_quitting() {
  is_quitting_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MessageQueueProto::is_quitting() const {
  // @@protoc_insertion_point(field_get:android.os.MessageQueueProto.is_quitting)
  return is_quitting_;
}
inline void MessageQueueProto::set_is_quitting(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_quitting_ = value;
  // @@protoc_insertion_point(field_set:android.os.MessageQueueProto.is_quitting)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fmessagequeue_2eproto
