// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/windowlayoutparams.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "frameworks/base/core/proto/android/graphics/pixelformat.pb.h"
#include "frameworks/base/core/proto/android/view/display.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
#include "frameworks/base/core/proto/android/typedef.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace view {
class WindowLayoutParamsProto;
class WindowLayoutParamsProtoDefaultTypeInternal;
extern WindowLayoutParamsProtoDefaultTypeInternal _WindowLayoutParamsProto_default_instance_;
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::view::WindowLayoutParamsProto* Arena::CreateMaybeMessage<::android::view::WindowLayoutParamsProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace view {

enum WindowLayoutParamsProto_RotationAnimation : int {
  WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_UNSPECIFIED = -1,
  WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_CROSSFADE = 1,
  WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_JUMPCUT = 2,
  WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_SEAMLESS = 3
};
bool WindowLayoutParamsProto_RotationAnimation_IsValid(int value);
constexpr WindowLayoutParamsProto_RotationAnimation WindowLayoutParamsProto_RotationAnimation_RotationAnimation_MIN = WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_UNSPECIFIED;
constexpr WindowLayoutParamsProto_RotationAnimation WindowLayoutParamsProto_RotationAnimation_RotationAnimation_MAX = WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_SEAMLESS;
constexpr int WindowLayoutParamsProto_RotationAnimation_RotationAnimation_ARRAYSIZE = WindowLayoutParamsProto_RotationAnimation_RotationAnimation_MAX + 1;

const std::string& WindowLayoutParamsProto_RotationAnimation_Name(WindowLayoutParamsProto_RotationAnimation value);
template<typename T>
inline const std::string& WindowLayoutParamsProto_RotationAnimation_Name(T enum_t_value) {
  static_assert(::std::is_same<T, WindowLayoutParamsProto_RotationAnimation>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function WindowLayoutParamsProto_RotationAnimation_Name.");
  return WindowLayoutParamsProto_RotationAnimation_Name(static_cast<WindowLayoutParamsProto_RotationAnimation>(enum_t_value));
}
bool WindowLayoutParamsProto_RotationAnimation_Parse(
    const std::string& name, WindowLayoutParamsProto_RotationAnimation* value);
// ===================================================================

class WindowLayoutParamsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.WindowLayoutParamsProto) */ {
 public:
  WindowLayoutParamsProto();
  virtual ~WindowLayoutParamsProto();

  WindowLayoutParamsProto(const WindowLayoutParamsProto& from);
  WindowLayoutParamsProto(WindowLayoutParamsProto&& from) noexcept
    : WindowLayoutParamsProto() {
    *this = ::std::move(from);
  }

  inline WindowLayoutParamsProto& operator=(const WindowLayoutParamsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WindowLayoutParamsProto& operator=(WindowLayoutParamsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WindowLayoutParamsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WindowLayoutParamsProto* internal_default_instance() {
    return reinterpret_cast<const WindowLayoutParamsProto*>(
               &_WindowLayoutParamsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WindowLayoutParamsProto& a, WindowLayoutParamsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WindowLayoutParamsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WindowLayoutParamsProto* New() const final {
    return CreateMaybeMessage<WindowLayoutParamsProto>(nullptr);
  }

  WindowLayoutParamsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WindowLayoutParamsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WindowLayoutParamsProto& from);
  void MergeFrom(const WindowLayoutParamsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WindowLayoutParamsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.WindowLayoutParamsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef WindowLayoutParamsProto_RotationAnimation RotationAnimation;
  static constexpr RotationAnimation ROTATION_ANIMATION_UNSPECIFIED =
    WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_UNSPECIFIED;
  static constexpr RotationAnimation ROTATION_ANIMATION_CROSSFADE =
    WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_CROSSFADE;
  static constexpr RotationAnimation ROTATION_ANIMATION_JUMPCUT =
    WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_JUMPCUT;
  static constexpr RotationAnimation ROTATION_ANIMATION_SEAMLESS =
    WindowLayoutParamsProto_RotationAnimation_ROTATION_ANIMATION_SEAMLESS;
  static inline bool RotationAnimation_IsValid(int value) {
    return WindowLayoutParamsProto_RotationAnimation_IsValid(value);
  }
  static constexpr RotationAnimation RotationAnimation_MIN =
    WindowLayoutParamsProto_RotationAnimation_RotationAnimation_MIN;
  static constexpr RotationAnimation RotationAnimation_MAX =
    WindowLayoutParamsProto_RotationAnimation_RotationAnimation_MAX;
  static constexpr int RotationAnimation_ARRAYSIZE =
    WindowLayoutParamsProto_RotationAnimation_RotationAnimation_ARRAYSIZE;
  template<typename T>
  static inline const std::string& RotationAnimation_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RotationAnimation>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RotationAnimation_Name.");
    return WindowLayoutParamsProto_RotationAnimation_Name(enum_t_value);
  }
  static inline bool RotationAnimation_Parse(const std::string& name,
      RotationAnimation* value) {
    return WindowLayoutParamsProto_RotationAnimation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kWidthFieldNumber = 4,
    kHeightFieldNumber = 5,
    kHorizontalMarginFieldNumber = 6,
    kVerticalMarginFieldNumber = 7,
    kGravityFieldNumber = 8,
    kSoftInputModeFieldNumber = 9,
    kFormatFieldNumber = 10,
    kWindowAnimationsFieldNumber = 11,
    kAlphaFieldNumber = 12,
    kScreenBrightnessFieldNumber = 13,
    kButtonBrightnessFieldNumber = 14,
    kPreferredRefreshRateFieldNumber = 16,
    kPreferredDisplayModeIdFieldNumber = 17,
    kUserActivityTimeoutFieldNumber = 20,
    kInputFeatureFlagsFieldNumber = 19,
    kFlagsFieldNumber = 24,
    kHasSystemUiListenersFieldNumber = 18,
    kFitIgnoreVisibilityFieldNumber = 33,
    kPrivateFlagsFieldNumber = 26,
    kSystemUiVisibilityFlagsFieldNumber = 27,
    kSubtreeSystemUiVisibilityFlagsFieldNumber = 28,
    kAppearanceFieldNumber = 29,
    kBehaviorFieldNumber = 30,
    kFitInsetsTypesFieldNumber = 31,
    kFitInsetsSidesFieldNumber = 32,
    kRotationAnimationFieldNumber = 15,
    kColorModeFieldNumber = 23,
  };
  // optional int32 type = 1 [(.android.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];
  bool has_type() const;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 x = 2;
  bool has_x() const;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 y = 3;
  bool has_y() const;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 width = 4;
  bool has_width() const;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::int32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 height = 5;
  bool has_height() const;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::int32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional float horizontal_margin = 6;
  bool has_horizontal_margin() const;
  void clear_horizontal_margin();
  float horizontal_margin() const;
  void set_horizontal_margin(float value);

  // optional float vertical_margin = 7;
  bool has_vertical_margin() const;
  void clear_vertical_margin();
  float vertical_margin() const;
  void set_vertical_margin(float value);

  // optional int32 gravity = 8 [(.android.typedef) = "android.view.Gravity.GravityFlags"];
  bool has_gravity() const;
  void clear_gravity();
  ::PROTOBUF_NAMESPACE_ID::int32 gravity() const;
  void set_gravity(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 soft_input_mode = 9 [(.android.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];
  bool has_soft_input_mode() const;
  void clear_soft_input_mode();
  ::PROTOBUF_NAMESPACE_ID::int32 soft_input_mode() const;
  void set_soft_input_mode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .android.graphics.PixelFormatProto.Format format = 10;
  bool has_format() const;
  void clear_format();
  ::android::graphics::PixelFormatProto_Format format() const;
  void set_format(::android::graphics::PixelFormatProto_Format value);

  // optional int32 window_animations = 11;
  bool has_window_animations() const;
  void clear_window_animations();
  ::PROTOBUF_NAMESPACE_ID::int32 window_animations() const;
  void set_window_animations(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional float alpha = 12;
  bool has_alpha() const;
  void clear_alpha();
  float alpha() const;
  void set_alpha(float value);

  // optional float screen_brightness = 13;
  bool has_screen_brightness() const;
  void clear_screen_brightness();
  float screen_brightness() const;
  void set_screen_brightness(float value);

  // optional float button_brightness = 14;
  bool has_button_brightness() const;
  void clear_button_brightness();
  float button_brightness() const;
  void set_button_brightness(float value);

  // optional float preferred_refresh_rate = 16;
  bool has_preferred_refresh_rate() const;
  void clear_preferred_refresh_rate();
  float preferred_refresh_rate() const;
  void set_preferred_refresh_rate(float value);

  // optional int32 preferred_display_mode_id = 17;
  bool has_preferred_display_mode_id() const;
  void clear_preferred_display_mode_id();
  ::PROTOBUF_NAMESPACE_ID::int32 preferred_display_mode_id() const;
  void set_preferred_display_mode_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 user_activity_timeout = 20;
  bool has_user_activity_timeout() const;
  void clear_user_activity_timeout();
  ::PROTOBUF_NAMESPACE_ID::int64 user_activity_timeout() const;
  void set_user_activity_timeout(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional uint32 input_feature_flags = 19 [(.android.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];
  bool has_input_feature_flags() const;
  void clear_input_feature_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 input_feature_flags() const;
  void set_input_feature_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 flags = 24 [(.android.typedef) = "android.view.WindowManager.LayoutParams.Flags"];
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional bool has_system_ui_listeners = 18;
  bool has_has_system_ui_listeners() const;
  void clear_has_system_ui_listeners();
  bool has_system_ui_listeners() const;
  void set_has_system_ui_listeners(bool value);

  // optional bool fit_ignore_visibility = 33;
  bool has_fit_ignore_visibility() const;
  void clear_fit_ignore_visibility();
  bool fit_ignore_visibility() const;
  void set_fit_ignore_visibility(bool value);

  // optional uint32 private_flags = 26 [(.android.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];
  bool has_private_flags() const;
  void clear_private_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 private_flags() const;
  void set_private_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 system_ui_visibility_flags = 27 [(.android.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];
  bool has_system_ui_visibility_flags() const;
  void clear_system_ui_visibility_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 system_ui_visibility_flags() const;
  void set_system_ui_visibility_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 subtree_system_ui_visibility_flags = 28 [(.android.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];
  bool has_subtree_system_ui_visibility_flags() const;
  void clear_subtree_system_ui_visibility_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 subtree_system_ui_visibility_flags() const;
  void set_subtree_system_ui_visibility_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 appearance = 29 [(.android.typedef) = "android.view.WindowInsetsController.Appearance"];
  bool has_appearance() const;
  void clear_appearance();
  ::PROTOBUF_NAMESPACE_ID::uint32 appearance() const;
  void set_appearance(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 behavior = 30 [(.android.typedef) = "android.view.WindowInsetsController.Behavior"];
  bool has_behavior() const;
  void clear_behavior();
  ::PROTOBUF_NAMESPACE_ID::uint32 behavior() const;
  void set_behavior(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 fit_insets_types = 31 [(.android.typedef) = "android.view.WindowInsets.Type.InsetsType"];
  bool has_fit_insets_types() const;
  void clear_fit_insets_types();
  ::PROTOBUF_NAMESPACE_ID::uint32 fit_insets_types() const;
  void set_fit_insets_types(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 fit_insets_sides = 32 [(.android.typedef) = "android.view.WindowInsets.Side.InsetsSide"];
  bool has_fit_insets_sides() const;
  void clear_fit_insets_sides();
  ::PROTOBUF_NAMESPACE_ID::uint32 fit_insets_sides() const;
  void set_fit_insets_sides(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional .android.view.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;
  bool has_rotation_animation() const;
  void clear_rotation_animation();
  ::android::view::WindowLayoutParamsProto_RotationAnimation rotation_animation() const;
  void set_rotation_animation(::android::view::WindowLayoutParamsProto_RotationAnimation value);

  // optional .android.view.DisplayProto.ColorMode color_mode = 23;
  bool has_color_mode() const;
  void clear_color_mode();
  ::android::view::DisplayProto_ColorMode color_mode() const;
  void set_color_mode(::android::view::DisplayProto_ColorMode value);

  // @@protoc_insertion_point(class_scope:android.view.WindowLayoutParamsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 width_;
  ::PROTOBUF_NAMESPACE_ID::int32 height_;
  float horizontal_margin_;
  float vertical_margin_;
  ::PROTOBUF_NAMESPACE_ID::int32 gravity_;
  ::PROTOBUF_NAMESPACE_ID::int32 soft_input_mode_;
  int format_;
  ::PROTOBUF_NAMESPACE_ID::int32 window_animations_;
  float alpha_;
  float screen_brightness_;
  float button_brightness_;
  float preferred_refresh_rate_;
  ::PROTOBUF_NAMESPACE_ID::int32 preferred_display_mode_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 user_activity_timeout_;
  ::PROTOBUF_NAMESPACE_ID::uint32 input_feature_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  bool has_system_ui_listeners_;
  bool fit_ignore_visibility_;
  ::PROTOBUF_NAMESPACE_ID::uint32 private_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 system_ui_visibility_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subtree_system_ui_visibility_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appearance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 behavior_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fit_insets_types_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fit_insets_sides_;
  int rotation_animation_;
  int color_mode_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WindowLayoutParamsProto

// optional int32 type = 1 [(.android.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];
inline bool WindowLayoutParamsProto::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WindowLayoutParamsProto::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::type() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.type)
  return type_;
}
inline void WindowLayoutParamsProto::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.type)
}

// optional int32 x = 2;
inline bool WindowLayoutParamsProto::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WindowLayoutParamsProto::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::x() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.x)
  return x_;
}
inline void WindowLayoutParamsProto::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  x_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.x)
}

// optional int32 y = 3;
inline bool WindowLayoutParamsProto::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WindowLayoutParamsProto::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::y() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.y)
  return y_;
}
inline void WindowLayoutParamsProto::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  y_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.y)
}

// optional int32 width = 4;
inline bool WindowLayoutParamsProto::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WindowLayoutParamsProto::clear_width() {
  width_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::width() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.width)
  return width_;
}
inline void WindowLayoutParamsProto::set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  width_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.width)
}

// optional int32 height = 5;
inline bool WindowLayoutParamsProto::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WindowLayoutParamsProto::clear_height() {
  height_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::height() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.height)
  return height_;
}
inline void WindowLayoutParamsProto::set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  height_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.height)
}

// optional float horizontal_margin = 6;
inline bool WindowLayoutParamsProto::has_horizontal_margin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WindowLayoutParamsProto::clear_horizontal_margin() {
  horizontal_margin_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float WindowLayoutParamsProto::horizontal_margin() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.horizontal_margin)
  return horizontal_margin_;
}
inline void WindowLayoutParamsProto::set_horizontal_margin(float value) {
  _has_bits_[0] |= 0x00000020u;
  horizontal_margin_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.horizontal_margin)
}

// optional float vertical_margin = 7;
inline bool WindowLayoutParamsProto::has_vertical_margin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WindowLayoutParamsProto::clear_vertical_margin() {
  vertical_margin_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float WindowLayoutParamsProto::vertical_margin() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.vertical_margin)
  return vertical_margin_;
}
inline void WindowLayoutParamsProto::set_vertical_margin(float value) {
  _has_bits_[0] |= 0x00000040u;
  vertical_margin_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.vertical_margin)
}

// optional int32 gravity = 8 [(.android.typedef) = "android.view.Gravity.GravityFlags"];
inline bool WindowLayoutParamsProto::has_gravity() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WindowLayoutParamsProto::clear_gravity() {
  gravity_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::gravity() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.gravity)
  return gravity_;
}
inline void WindowLayoutParamsProto::set_gravity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  gravity_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.gravity)
}

// optional int32 soft_input_mode = 9 [(.android.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];
inline bool WindowLayoutParamsProto::has_soft_input_mode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WindowLayoutParamsProto::clear_soft_input_mode() {
  soft_input_mode_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::soft_input_mode() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.soft_input_mode)
  return soft_input_mode_;
}
inline void WindowLayoutParamsProto::set_soft_input_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  soft_input_mode_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.soft_input_mode)
}

// optional .android.graphics.PixelFormatProto.Format format = 10;
inline bool WindowLayoutParamsProto::has_format() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WindowLayoutParamsProto::clear_format() {
  format_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::android::graphics::PixelFormatProto_Format WindowLayoutParamsProto::format() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.format)
  return static_cast< ::android::graphics::PixelFormatProto_Format >(format_);
}
inline void WindowLayoutParamsProto::set_format(::android::graphics::PixelFormatProto_Format value) {
  assert(::android::graphics::PixelFormatProto_Format_IsValid(value));
  _has_bits_[0] |= 0x00000200u;
  format_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.format)
}

// optional int32 window_animations = 11;
inline bool WindowLayoutParamsProto::has_window_animations() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WindowLayoutParamsProto::clear_window_animations() {
  window_animations_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::window_animations() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.window_animations)
  return window_animations_;
}
inline void WindowLayoutParamsProto::set_window_animations(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  window_animations_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.window_animations)
}

// optional float alpha = 12;
inline bool WindowLayoutParamsProto::has_alpha() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WindowLayoutParamsProto::clear_alpha() {
  alpha_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float WindowLayoutParamsProto::alpha() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.alpha)
  return alpha_;
}
inline void WindowLayoutParamsProto::set_alpha(float value) {
  _has_bits_[0] |= 0x00000800u;
  alpha_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.alpha)
}

// optional float screen_brightness = 13;
inline bool WindowLayoutParamsProto::has_screen_brightness() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WindowLayoutParamsProto::clear_screen_brightness() {
  screen_brightness_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline float WindowLayoutParamsProto::screen_brightness() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.screen_brightness)
  return screen_brightness_;
}
inline void WindowLayoutParamsProto::set_screen_brightness(float value) {
  _has_bits_[0] |= 0x00001000u;
  screen_brightness_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.screen_brightness)
}

// optional float button_brightness = 14;
inline bool WindowLayoutParamsProto::has_button_brightness() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WindowLayoutParamsProto::clear_button_brightness() {
  button_brightness_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline float WindowLayoutParamsProto::button_brightness() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.button_brightness)
  return button_brightness_;
}
inline void WindowLayoutParamsProto::set_button_brightness(float value) {
  _has_bits_[0] |= 0x00002000u;
  button_brightness_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.button_brightness)
}

// optional .android.view.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;
inline bool WindowLayoutParamsProto::has_rotation_animation() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void WindowLayoutParamsProto::clear_rotation_animation() {
  rotation_animation_ = -1;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::android::view::WindowLayoutParamsProto_RotationAnimation WindowLayoutParamsProto::rotation_animation() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.rotation_animation)
  return static_cast< ::android::view::WindowLayoutParamsProto_RotationAnimation >(rotation_animation_);
}
inline void WindowLayoutParamsProto::set_rotation_animation(::android::view::WindowLayoutParamsProto_RotationAnimation value) {
  assert(::android::view::WindowLayoutParamsProto_RotationAnimation_IsValid(value));
  _has_bits_[0] |= 0x10000000u;
  rotation_animation_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.rotation_animation)
}

// optional float preferred_refresh_rate = 16;
inline bool WindowLayoutParamsProto::has_preferred_refresh_rate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void WindowLayoutParamsProto::clear_preferred_refresh_rate() {
  preferred_refresh_rate_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float WindowLayoutParamsProto::preferred_refresh_rate() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.preferred_refresh_rate)
  return preferred_refresh_rate_;
}
inline void WindowLayoutParamsProto::set_preferred_refresh_rate(float value) {
  _has_bits_[0] |= 0x00004000u;
  preferred_refresh_rate_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.preferred_refresh_rate)
}

// optional int32 preferred_display_mode_id = 17;
inline bool WindowLayoutParamsProto::has_preferred_display_mode_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void WindowLayoutParamsProto::clear_preferred_display_mode_id() {
  preferred_display_mode_id_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WindowLayoutParamsProto::preferred_display_mode_id() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.preferred_display_mode_id)
  return preferred_display_mode_id_;
}
inline void WindowLayoutParamsProto::set_preferred_display_mode_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  preferred_display_mode_id_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.preferred_display_mode_id)
}

// optional bool has_system_ui_listeners = 18;
inline bool WindowLayoutParamsProto::has_has_system_ui_listeners() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void WindowLayoutParamsProto::clear_has_system_ui_listeners() {
  has_system_ui_listeners_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool WindowLayoutParamsProto::has_system_ui_listeners() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.has_system_ui_listeners)
  return has_system_ui_listeners_;
}
inline void WindowLayoutParamsProto::set_has_system_ui_listeners(bool value) {
  _has_bits_[0] |= 0x00080000u;
  has_system_ui_listeners_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.has_system_ui_listeners)
}

// optional uint32 input_feature_flags = 19 [(.android.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];
inline bool WindowLayoutParamsProto::has_input_feature_flags() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void WindowLayoutParamsProto::clear_input_feature_flags() {
  input_feature_flags_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::input_feature_flags() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.input_feature_flags)
  return input_feature_flags_;
}
inline void WindowLayoutParamsProto::set_input_feature_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  input_feature_flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.input_feature_flags)
}

// optional int64 user_activity_timeout = 20;
inline bool WindowLayoutParamsProto::has_user_activity_timeout() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void WindowLayoutParamsProto::clear_user_activity_timeout() {
  user_activity_timeout_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WindowLayoutParamsProto::user_activity_timeout() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.user_activity_timeout)
  return user_activity_timeout_;
}
inline void WindowLayoutParamsProto::set_user_activity_timeout(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00010000u;
  user_activity_timeout_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.user_activity_timeout)
}

// optional .android.view.DisplayProto.ColorMode color_mode = 23;
inline bool WindowLayoutParamsProto::has_color_mode() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void WindowLayoutParamsProto::clear_color_mode() {
  color_mode_ = -1;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::android::view::DisplayProto_ColorMode WindowLayoutParamsProto::color_mode() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.color_mode)
  return static_cast< ::android::view::DisplayProto_ColorMode >(color_mode_);
}
inline void WindowLayoutParamsProto::set_color_mode(::android::view::DisplayProto_ColorMode value) {
  assert(::android::view::DisplayProto_ColorMode_IsValid(value));
  _has_bits_[0] |= 0x20000000u;
  color_mode_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.color_mode)
}

// optional uint32 flags = 24 [(.android.typedef) = "android.view.WindowManager.LayoutParams.Flags"];
inline bool WindowLayoutParamsProto::has_flags() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void WindowLayoutParamsProto::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::flags() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.flags)
  return flags_;
}
inline void WindowLayoutParamsProto::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.flags)
}

// optional uint32 private_flags = 26 [(.android.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];
inline bool WindowLayoutParamsProto::has_private_flags() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void WindowLayoutParamsProto::clear_private_flags() {
  private_flags_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::private_flags() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.private_flags)
  return private_flags_;
}
inline void WindowLayoutParamsProto::set_private_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  private_flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.private_flags)
}

// optional uint32 system_ui_visibility_flags = 27 [(.android.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];
inline bool WindowLayoutParamsProto::has_system_ui_visibility_flags() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void WindowLayoutParamsProto::clear_system_ui_visibility_flags() {
  system_ui_visibility_flags_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::system_ui_visibility_flags() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.system_ui_visibility_flags)
  return system_ui_visibility_flags_;
}
inline void WindowLayoutParamsProto::set_system_ui_visibility_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  system_ui_visibility_flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.system_ui_visibility_flags)
}

// optional uint32 subtree_system_ui_visibility_flags = 28 [(.android.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];
inline bool WindowLayoutParamsProto::has_subtree_system_ui_visibility_flags() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void WindowLayoutParamsProto::clear_subtree_system_ui_visibility_flags() {
  subtree_system_ui_visibility_flags_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::subtree_system_ui_visibility_flags() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.subtree_system_ui_visibility_flags)
  return subtree_system_ui_visibility_flags_;
}
inline void WindowLayoutParamsProto::set_subtree_system_ui_visibility_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  subtree_system_ui_visibility_flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.subtree_system_ui_visibility_flags)
}

// optional uint32 appearance = 29 [(.android.typedef) = "android.view.WindowInsetsController.Appearance"];
inline bool WindowLayoutParamsProto::has_appearance() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void WindowLayoutParamsProto::clear_appearance() {
  appearance_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::appearance() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.appearance)
  return appearance_;
}
inline void WindowLayoutParamsProto::set_appearance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  appearance_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.appearance)
}

// optional uint32 behavior = 30 [(.android.typedef) = "android.view.WindowInsetsController.Behavior"];
inline bool WindowLayoutParamsProto::has_behavior() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void WindowLayoutParamsProto::clear_behavior() {
  behavior_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::behavior() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.behavior)
  return behavior_;
}
inline void WindowLayoutParamsProto::set_behavior(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  behavior_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.behavior)
}

// optional uint32 fit_insets_types = 31 [(.android.typedef) = "android.view.WindowInsets.Type.InsetsType"];
inline bool WindowLayoutParamsProto::has_fit_insets_types() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void WindowLayoutParamsProto::clear_fit_insets_types() {
  fit_insets_types_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::fit_insets_types() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.fit_insets_types)
  return fit_insets_types_;
}
inline void WindowLayoutParamsProto::set_fit_insets_types(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  fit_insets_types_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.fit_insets_types)
}

// optional uint32 fit_insets_sides = 32 [(.android.typedef) = "android.view.WindowInsets.Side.InsetsSide"];
inline bool WindowLayoutParamsProto::has_fit_insets_sides() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void WindowLayoutParamsProto::clear_fit_insets_sides() {
  fit_insets_sides_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 WindowLayoutParamsProto::fit_insets_sides() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.fit_insets_sides)
  return fit_insets_sides_;
}
inline void WindowLayoutParamsProto::set_fit_insets_sides(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  fit_insets_sides_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.fit_insets_sides)
}

// optional bool fit_ignore_visibility = 33;
inline bool WindowLayoutParamsProto::has_fit_ignore_visibility() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void WindowLayoutParamsProto::clear_fit_ignore_visibility() {
  fit_ignore_visibility_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool WindowLayoutParamsProto::fit_ignore_visibility() const {
  // @@protoc_insertion_point(field_get:android.view.WindowLayoutParamsProto.fit_ignore_visibility)
  return fit_ignore_visibility_;
}
inline void WindowLayoutParamsProto::set_fit_ignore_visibility(bool value) {
  _has_bits_[0] |= 0x00100000u;
  fit_ignore_visibility_ = value;
  // @@protoc_insertion_point(field_set:android.view.WindowLayoutParamsProto.fit_ignore_visibility)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace view
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::view::WindowLayoutParamsProto_RotationAnimation> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto
