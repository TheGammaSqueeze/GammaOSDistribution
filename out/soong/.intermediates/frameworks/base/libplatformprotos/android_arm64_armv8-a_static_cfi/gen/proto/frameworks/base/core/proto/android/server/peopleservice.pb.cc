// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/peopleservice.proto

#include "frameworks/base/core/proto/android/server/peopleservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2flocusid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocusIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2flocusid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeopleEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto;
namespace com {
namespace android {
namespace server {
namespace people {
class ConversationInfosProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConversationInfosProto> _instance;
} _ConversationInfosProto_default_instance_;
class ConversationInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConversationInfoProto> _instance;
} _ConversationInfoProto_default_instance_;
class PeopleEventsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeopleEventsProto> _instance;
} _PeopleEventsProto_default_instance_;
class PeopleEventProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeopleEventProto> _instance;
} _PeopleEventProto_default_instance_;
class PeopleEventIndexesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeopleEventIndexesProto> _instance;
} _PeopleEventIndexesProto_default_instance_;
class TypedPeopleEventIndexProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TypedPeopleEventIndexProto> _instance;
} _TypedPeopleEventIndexProto_default_instance_;
class PeopleEventIndexProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PeopleEventIndexProto> _instance;
} _PeopleEventIndexProto_default_instance_;
}  // namespace people
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_ConversationInfoProto_default_instance_;
    new (ptr) ::com::android::server::people::ConversationInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::ConversationInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {
      &scc_info_LocusIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2flocusid_2eproto.base,}};

static void InitDefaultsscc_info_ConversationInfosProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_ConversationInfosProto_default_instance_;
    new (ptr) ::com::android::server::people::ConversationInfosProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::ConversationInfosProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConversationInfosProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ConversationInfosProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {
      &scc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base,}};

static void InitDefaultsscc_info_PeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_PeopleEventIndexProto_default_instance_;
    new (ptr) ::com::android::server::people::PeopleEventIndexProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::PeopleEventIndexProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {}};

static void InitDefaultsscc_info_PeopleEventIndexesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_PeopleEventIndexesProto_default_instance_;
    new (ptr) ::com::android::server::people::PeopleEventIndexesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::PeopleEventIndexesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PeopleEventIndexesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PeopleEventIndexesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {
      &scc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base,}};

static void InitDefaultsscc_info_PeopleEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_PeopleEventProto_default_instance_;
    new (ptr) ::com::android::server::people::PeopleEventProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::PeopleEventProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PeopleEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PeopleEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {}};

static void InitDefaultsscc_info_PeopleEventsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_PeopleEventsProto_default_instance_;
    new (ptr) ::com::android::server::people::PeopleEventsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::PeopleEventsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PeopleEventsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PeopleEventsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {
      &scc_info_PeopleEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base,}};

static void InitDefaultsscc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::people::_TypedPeopleEventIndexProto_default_instance_;
    new (ptr) ::com::android::server::people::TypedPeopleEventIndexProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::people::TypedPeopleEventIndexProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto}, {
      &scc_info_PeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base,}};

namespace com {
namespace android {
namespace server {
namespace people {

// ===================================================================

void ConversationInfosProto::InitAsDefaultInstance() {
}
class ConversationInfosProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ConversationInfosProto>()._has_bits_);
};

ConversationInfosProto::ConversationInfosProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.ConversationInfosProto)
}
ConversationInfosProto::ConversationInfosProto(const ConversationInfosProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      conversation_infos_(from.conversation_infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.ConversationInfosProto)
}

void ConversationInfosProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConversationInfosProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
}

ConversationInfosProto::~ConversationInfosProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.ConversationInfosProto)
  SharedDtor();
}

void ConversationInfosProto::SharedDtor() {
}

void ConversationInfosProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConversationInfosProto& ConversationInfosProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConversationInfosProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void ConversationInfosProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.ConversationInfosProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conversation_infos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConversationInfosProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.people.ConversationInfoProto conversation_infos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_conversation_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConversationInfosProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.ConversationInfosProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.people.ConversationInfoProto conversation_infos = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_conversation_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.ConversationInfosProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.ConversationInfosProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConversationInfosProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.ConversationInfosProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.people.ConversationInfoProto conversation_infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conversation_infos_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->conversation_infos(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.ConversationInfosProto)
}

size_t ConversationInfosProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.ConversationInfosProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.people.ConversationInfoProto conversation_infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->conversation_infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->conversation_infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConversationInfosProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ConversationInfosProto*>(
      &from));
}

void ConversationInfosProto::MergeFrom(const ConversationInfosProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.ConversationInfosProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conversation_infos_.MergeFrom(from.conversation_infos_);
}

void ConversationInfosProto::CopyFrom(const ConversationInfosProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.ConversationInfosProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConversationInfosProto::IsInitialized() const {
  return true;
}

void ConversationInfosProto::InternalSwap(ConversationInfosProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&conversation_infos_)->InternalSwap(CastToBase(&other->conversation_infos_));
}

std::string ConversationInfosProto::GetTypeName() const {
  return "com.android.server.people.ConversationInfosProto";
}


// ===================================================================

void ConversationInfoProto::InitAsDefaultInstance() {
  ::com::android::server::people::_ConversationInfoProto_default_instance_._instance.get_mutable()->locus_id_proto_ = const_cast< ::android::content::LocusIdProto*>(
      ::android::content::LocusIdProto::internal_default_instance());
}
class ConversationInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ConversationInfoProto>()._has_bits_);
  static void set_has_shortcut_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::content::LocusIdProto& locus_id_proto(const ConversationInfoProto* msg);
  static void set_has_locus_id_proto(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_contact_uri(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_notification_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_parent_notification_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_shortcut_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_conversation_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_contact_phone_number(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_event_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::android::content::LocusIdProto&
ConversationInfoProto::_Internal::locus_id_proto(const ConversationInfoProto* msg) {
  return *msg->locus_id_proto_;
}
void ConversationInfoProto::clear_locus_id_proto() {
  if (locus_id_proto_ != nullptr) locus_id_proto_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
ConversationInfoProto::ConversationInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.ConversationInfoProto)
}
ConversationInfoProto::ConversationInfoProto(const ConversationInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shortcut_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_shortcut_id()) {
    shortcut_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.shortcut_id_);
  }
  contact_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_contact_uri()) {
    contact_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contact_uri_);
  }
  notification_channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_notification_channel_id()) {
    notification_channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.notification_channel_id_);
  }
  contact_phone_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_contact_phone_number()) {
    contact_phone_number_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contact_phone_number_);
  }
  parent_notification_channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_parent_notification_channel_id()) {
    parent_notification_channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.parent_notification_channel_id_);
  }
  if (from.has_locus_id_proto()) {
    locus_id_proto_ = new ::android::content::LocusIdProto(*from.locus_id_proto_);
  } else {
    locus_id_proto_ = nullptr;
  }
  ::memcpy(&shortcut_flags_, &from.shortcut_flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_event_timestamp_) -
    reinterpret_cast<char*>(&shortcut_flags_)) + sizeof(last_event_timestamp_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.ConversationInfoProto)
}

void ConversationInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  shortcut_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contact_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notification_channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contact_phone_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parent_notification_channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&locus_id_proto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_event_timestamp_) -
      reinterpret_cast<char*>(&locus_id_proto_)) + sizeof(last_event_timestamp_));
}

ConversationInfoProto::~ConversationInfoProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.ConversationInfoProto)
  SharedDtor();
}

void ConversationInfoProto::SharedDtor() {
  shortcut_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contact_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notification_channel_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contact_phone_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parent_notification_channel_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete locus_id_proto_;
}

void ConversationInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConversationInfoProto& ConversationInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConversationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void ConversationInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.ConversationInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      shortcut_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      contact_uri_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      notification_channel_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      contact_phone_number_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      parent_notification_channel_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(locus_id_proto_ != nullptr);
      locus_id_proto_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&shortcut_flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&conversation_flags_) -
        reinterpret_cast<char*>(&shortcut_flags_)) + sizeof(conversation_flags_));
  }
  last_event_timestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConversationInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string shortcut_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_shortcut_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.LocusIdProto locus_id_proto = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_locus_id_proto(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string contact_uri = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contact_uri(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string notification_channel_id = 4 [(.android.privacy) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_notification_channel_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 shortcut_flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_shortcut_flags(&has_bits);
          shortcut_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 conversation_flags = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_conversation_flags(&has_bits);
          conversation_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string contact_phone_number = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_contact_phone_number(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string parent_notification_channel_id = 8 [(.android.privacy) = {
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_parent_notification_channel_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_event_timestamp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_last_event_timestamp(&has_bits);
          last_event_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConversationInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.ConversationInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string shortcut_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_shortcut_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.LocusIdProto locus_id_proto = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_locus_id_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string contact_uri = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string notification_channel_id = 4 [(.android.privacy) = {
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_notification_channel_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 shortcut_flags = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_shortcut_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &shortcut_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 conversation_flags = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_conversation_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &conversation_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string contact_phone_number = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_phone_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parent_notification_channel_id = 8 [(.android.privacy) = {
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_notification_channel_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_event_timestamp = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_last_event_timestamp(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_event_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.ConversationInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.ConversationInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConversationInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.ConversationInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string shortcut_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->shortcut_id(), output);
  }

  // optional .android.content.LocusIdProto locus_id_proto = 2;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::locus_id_proto(this), output);
  }

  // optional string contact_uri = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contact_uri(), output);
  }

  // optional string notification_channel_id = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->notification_channel_id(), output);
  }

  // optional int32 shortcut_flags = 5;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->shortcut_flags(), output);
  }

  // optional int32 conversation_flags = 6;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->conversation_flags(), output);
  }

  // optional string contact_phone_number = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contact_phone_number(), output);
  }

  // optional string parent_notification_channel_id = 8 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->parent_notification_channel_id(), output);
  }

  // optional int64 last_event_timestamp = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(9, this->last_event_timestamp(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.ConversationInfoProto)
}

size_t ConversationInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.ConversationInfoProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string shortcut_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->shortcut_id());
    }

    // optional string contact_uri = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->contact_uri());
    }

    // optional string notification_channel_id = 4 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->notification_channel_id());
    }

    // optional string contact_phone_number = 7 [(.android.privacy) = {
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->contact_phone_number());
    }

    // optional string parent_notification_channel_id = 8 [(.android.privacy) = {
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->parent_notification_channel_id());
    }

    // optional .android.content.LocusIdProto locus_id_proto = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *locus_id_proto_);
    }

    // optional int32 shortcut_flags = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->shortcut_flags());
    }

    // optional int32 conversation_flags = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->conversation_flags());
    }

  }
  // optional int64 last_event_timestamp = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->last_event_timestamp());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConversationInfoProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ConversationInfoProto*>(
      &from));
}

void ConversationInfoProto::MergeFrom(const ConversationInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.ConversationInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      shortcut_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.shortcut_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      contact_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contact_uri_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      notification_channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.notification_channel_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      contact_phone_number_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contact_phone_number_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      parent_notification_channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.parent_notification_channel_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_locus_id_proto()->::android::content::LocusIdProto::MergeFrom(from.locus_id_proto());
    }
    if (cached_has_bits & 0x00000040u) {
      shortcut_flags_ = from.shortcut_flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      conversation_flags_ = from.conversation_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_last_event_timestamp(from.last_event_timestamp());
  }
}

void ConversationInfoProto::CopyFrom(const ConversationInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.ConversationInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConversationInfoProto::IsInitialized() const {
  return true;
}

void ConversationInfoProto::InternalSwap(ConversationInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  shortcut_id_.Swap(&other->shortcut_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contact_uri_.Swap(&other->contact_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  notification_channel_id_.Swap(&other->notification_channel_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contact_phone_number_.Swap(&other->contact_phone_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_notification_channel_id_.Swap(&other->parent_notification_channel_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(locus_id_proto_, other->locus_id_proto_);
  swap(shortcut_flags_, other->shortcut_flags_);
  swap(conversation_flags_, other->conversation_flags_);
  swap(last_event_timestamp_, other->last_event_timestamp_);
}

std::string ConversationInfoProto::GetTypeName() const {
  return "com.android.server.people.ConversationInfoProto";
}


// ===================================================================

void PeopleEventsProto::InitAsDefaultInstance() {
}
class PeopleEventsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PeopleEventsProto>()._has_bits_);
};

PeopleEventsProto::PeopleEventsProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.PeopleEventsProto)
}
PeopleEventsProto::PeopleEventsProto(const PeopleEventsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.PeopleEventsProto)
}

void PeopleEventsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PeopleEventsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
}

PeopleEventsProto::~PeopleEventsProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.PeopleEventsProto)
  SharedDtor();
}

void PeopleEventsProto::SharedDtor() {
}

void PeopleEventsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeopleEventsProto& PeopleEventsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeopleEventsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void PeopleEventsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.PeopleEventsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PeopleEventsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.people.PeopleEventProto events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PeopleEventsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.PeopleEventsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.people.PeopleEventProto events = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.PeopleEventsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.PeopleEventsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PeopleEventsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.PeopleEventsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.people.PeopleEventProto events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->events(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.PeopleEventsProto)
}

size_t PeopleEventsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.PeopleEventsProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.people.PeopleEventProto events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeopleEventsProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PeopleEventsProto*>(
      &from));
}

void PeopleEventsProto::MergeFrom(const PeopleEventsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.PeopleEventsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void PeopleEventsProto::CopyFrom(const PeopleEventsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.PeopleEventsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeopleEventsProto::IsInitialized() const {
  return true;
}

void PeopleEventsProto::InternalSwap(PeopleEventsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
}

std::string PeopleEventsProto::GetTypeName() const {
  return "com.android.server.people.PeopleEventsProto";
}


// ===================================================================

void PeopleEventProto::InitAsDefaultInstance() {
}
class PeopleEventProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PeopleEventProto>()._has_bits_);
  static void set_has_event_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PeopleEventProto::PeopleEventProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.PeopleEventProto)
}
PeopleEventProto::PeopleEventProto(const PeopleEventProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&time_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.PeopleEventProto)
}

void PeopleEventProto::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&time_)) + sizeof(duration_));
}

PeopleEventProto::~PeopleEventProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.PeopleEventProto)
  SharedDtor();
}

void PeopleEventProto::SharedDtor() {
}

void PeopleEventProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeopleEventProto& PeopleEventProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeopleEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void PeopleEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.PeopleEventProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&time_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PeopleEventProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 event_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_event_type(&has_bits);
          event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_time(&has_bits);
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_duration(&has_bits);
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PeopleEventProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.PeopleEventProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 event_type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_event_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_duration(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.PeopleEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.PeopleEventProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PeopleEventProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.PeopleEventProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->event_type(), output);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  // optional int32 duration = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->duration(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.PeopleEventProto)
}

size_t PeopleEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.PeopleEventProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->time());
    }

    // optional int32 event_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->event_type());
    }

    // optional int32 duration = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->duration());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeopleEventProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PeopleEventProto*>(
      &from));
}

void PeopleEventProto::MergeFrom(const PeopleEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.PeopleEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PeopleEventProto::CopyFrom(const PeopleEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.PeopleEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeopleEventProto::IsInitialized() const {
  return true;
}

void PeopleEventProto::InternalSwap(PeopleEventProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(time_, other->time_);
  swap(event_type_, other->event_type_);
  swap(duration_, other->duration_);
}

std::string PeopleEventProto::GetTypeName() const {
  return "com.android.server.people.PeopleEventProto";
}


// ===================================================================

void PeopleEventIndexesProto::InitAsDefaultInstance() {
}
class PeopleEventIndexesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PeopleEventIndexesProto>()._has_bits_);
};

PeopleEventIndexesProto::PeopleEventIndexesProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.PeopleEventIndexesProto)
}
PeopleEventIndexesProto::PeopleEventIndexesProto(const PeopleEventIndexesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      typed_indexes_(from.typed_indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.PeopleEventIndexesProto)
}

void PeopleEventIndexesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PeopleEventIndexesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
}

PeopleEventIndexesProto::~PeopleEventIndexesProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.PeopleEventIndexesProto)
  SharedDtor();
}

void PeopleEventIndexesProto::SharedDtor() {
}

void PeopleEventIndexesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeopleEventIndexesProto& PeopleEventIndexesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeopleEventIndexesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void PeopleEventIndexesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.PeopleEventIndexesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typed_indexes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PeopleEventIndexesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.people.TypedPeopleEventIndexProto typed_indexes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_typed_indexes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PeopleEventIndexesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.PeopleEventIndexesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.people.TypedPeopleEventIndexProto typed_indexes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_typed_indexes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.PeopleEventIndexesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.PeopleEventIndexesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PeopleEventIndexesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.PeopleEventIndexesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.people.TypedPeopleEventIndexProto typed_indexes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typed_indexes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->typed_indexes(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.PeopleEventIndexesProto)
}

size_t PeopleEventIndexesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.PeopleEventIndexesProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.people.TypedPeopleEventIndexProto typed_indexes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->typed_indexes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->typed_indexes(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeopleEventIndexesProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PeopleEventIndexesProto*>(
      &from));
}

void PeopleEventIndexesProto::MergeFrom(const PeopleEventIndexesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.PeopleEventIndexesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typed_indexes_.MergeFrom(from.typed_indexes_);
}

void PeopleEventIndexesProto::CopyFrom(const PeopleEventIndexesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.PeopleEventIndexesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeopleEventIndexesProto::IsInitialized() const {
  return true;
}

void PeopleEventIndexesProto::InternalSwap(PeopleEventIndexesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&typed_indexes_)->InternalSwap(CastToBase(&other->typed_indexes_));
}

std::string PeopleEventIndexesProto::GetTypeName() const {
  return "com.android.server.people.PeopleEventIndexesProto";
}


// ===================================================================

void TypedPeopleEventIndexProto::InitAsDefaultInstance() {
  ::com::android::server::people::_TypedPeopleEventIndexProto_default_instance_._instance.get_mutable()->index_ = const_cast< ::com::android::server::people::PeopleEventIndexProto*>(
      ::com::android::server::people::PeopleEventIndexProto::internal_default_instance());
}
class TypedPeopleEventIndexProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TypedPeopleEventIndexProto>()._has_bits_);
  static void set_has_event_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::people::PeopleEventIndexProto& index(const TypedPeopleEventIndexProto* msg);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::android::server::people::PeopleEventIndexProto&
TypedPeopleEventIndexProto::_Internal::index(const TypedPeopleEventIndexProto* msg) {
  return *msg->index_;
}
TypedPeopleEventIndexProto::TypedPeopleEventIndexProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.TypedPeopleEventIndexProto)
}
TypedPeopleEventIndexProto::TypedPeopleEventIndexProto(const TypedPeopleEventIndexProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::com::android::server::people::PeopleEventIndexProto(*from.index_);
  } else {
    index_ = nullptr;
  }
  event_type_ = from.event_type_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.TypedPeopleEventIndexProto)
}

void TypedPeopleEventIndexProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_type_) -
      reinterpret_cast<char*>(&index_)) + sizeof(event_type_));
}

TypedPeopleEventIndexProto::~TypedPeopleEventIndexProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.TypedPeopleEventIndexProto)
  SharedDtor();
}

void TypedPeopleEventIndexProto::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void TypedPeopleEventIndexProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TypedPeopleEventIndexProto& TypedPeopleEventIndexProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TypedPeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void TypedPeopleEventIndexProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.TypedPeopleEventIndexProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(index_ != nullptr);
    index_->Clear();
  }
  event_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TypedPeopleEventIndexProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 event_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_event_type(&has_bits);
          event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.people.PeopleEventIndexProto index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_index(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TypedPeopleEventIndexProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.TypedPeopleEventIndexProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 event_type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_event_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.people.PeopleEventIndexProto index = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.TypedPeopleEventIndexProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.TypedPeopleEventIndexProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TypedPeopleEventIndexProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.TypedPeopleEventIndexProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->event_type(), output);
  }

  // optional .com.android.server.people.PeopleEventIndexProto index = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::index(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.TypedPeopleEventIndexProto)
}

size_t TypedPeopleEventIndexProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.TypedPeopleEventIndexProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .com.android.server.people.PeopleEventIndexProto index = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *index_);
    }

    // optional int32 event_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->event_type());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypedPeopleEventIndexProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const TypedPeopleEventIndexProto*>(
      &from));
}

void TypedPeopleEventIndexProto::MergeFrom(const TypedPeopleEventIndexProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.TypedPeopleEventIndexProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_index()->::com::android::server::people::PeopleEventIndexProto::MergeFrom(from.index());
    }
    if (cached_has_bits & 0x00000002u) {
      event_type_ = from.event_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TypedPeopleEventIndexProto::CopyFrom(const TypedPeopleEventIndexProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.TypedPeopleEventIndexProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedPeopleEventIndexProto::IsInitialized() const {
  return true;
}

void TypedPeopleEventIndexProto::InternalSwap(TypedPeopleEventIndexProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(index_, other->index_);
  swap(event_type_, other->event_type_);
}

std::string TypedPeopleEventIndexProto::GetTypeName() const {
  return "com.android.server.people.TypedPeopleEventIndexProto";
}


// ===================================================================

void PeopleEventIndexProto::InitAsDefaultInstance() {
}
class PeopleEventIndexProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PeopleEventIndexProto>()._has_bits_);
  static void set_has_last_updated_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PeopleEventIndexProto::PeopleEventIndexProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.people.PeopleEventIndexProto)
}
PeopleEventIndexProto::PeopleEventIndexProto(const PeopleEventIndexProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      event_bitmaps_(from.event_bitmaps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_updated_time_ = from.last_updated_time_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.people.PeopleEventIndexProto)
}

void PeopleEventIndexProto::SharedCtor() {
  last_updated_time_ = PROTOBUF_LONGLONG(0);
}

PeopleEventIndexProto::~PeopleEventIndexProto() {
  // @@protoc_insertion_point(destructor:com.android.server.people.PeopleEventIndexProto)
  SharedDtor();
}

void PeopleEventIndexProto::SharedDtor() {
}

void PeopleEventIndexProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PeopleEventIndexProto& PeopleEventIndexProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PeopleEventIndexProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fpeopleservice_2eproto.base);
  return *internal_default_instance();
}


void PeopleEventIndexProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.people.PeopleEventIndexProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_bitmaps_.Clear();
  last_updated_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PeopleEventIndexProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int64 event_bitmaps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_event_bitmaps(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 8);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(mutable_event_bitmaps(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_updated_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_last_updated_time(&has_bits);
          last_updated_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PeopleEventIndexProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.people.PeopleEventIndexProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 event_bitmaps = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 1, 8u, input, this->mutable_event_bitmaps())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_event_bitmaps())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_updated_time = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_last_updated_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_updated_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.people.PeopleEventIndexProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.people.PeopleEventIndexProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PeopleEventIndexProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.people.PeopleEventIndexProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 event_bitmaps = 1;
  for (int i = 0, n = this->event_bitmaps_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(
      1, this->event_bitmaps(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 last_updated_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->last_updated_time(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.people.PeopleEventIndexProto)
}

size_t PeopleEventIndexProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.people.PeopleEventIndexProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 event_bitmaps = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->event_bitmaps_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->event_bitmaps_size());
    total_size += data_size;
  }

  // optional int64 last_updated_time = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->last_updated_time());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PeopleEventIndexProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PeopleEventIndexProto*>(
      &from));
}

void PeopleEventIndexProto::MergeFrom(const PeopleEventIndexProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.people.PeopleEventIndexProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_bitmaps_.MergeFrom(from.event_bitmaps_);
  if (from.has_last_updated_time()) {
    set_last_updated_time(from.last_updated_time());
  }
}

void PeopleEventIndexProto::CopyFrom(const PeopleEventIndexProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.people.PeopleEventIndexProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeopleEventIndexProto::IsInitialized() const {
  return true;
}

void PeopleEventIndexProto::InternalSwap(PeopleEventIndexProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  event_bitmaps_.InternalSwap(&other->event_bitmaps_);
  swap(last_updated_time_, other->last_updated_time_);
}

std::string PeopleEventIndexProto::GetTypeName() const {
  return "com.android.server.people.PeopleEventIndexProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace people
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::people::ConversationInfosProto* Arena::CreateMaybeMessage< ::com::android::server::people::ConversationInfosProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::ConversationInfosProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::people::ConversationInfoProto* Arena::CreateMaybeMessage< ::com::android::server::people::ConversationInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::ConversationInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::people::PeopleEventsProto* Arena::CreateMaybeMessage< ::com::android::server::people::PeopleEventsProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::PeopleEventsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::people::PeopleEventProto* Arena::CreateMaybeMessage< ::com::android::server::people::PeopleEventProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::PeopleEventProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::people::PeopleEventIndexesProto* Arena::CreateMaybeMessage< ::com::android::server::people::PeopleEventIndexesProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::PeopleEventIndexesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::people::TypedPeopleEventIndexProto* Arena::CreateMaybeMessage< ::com::android::server::people::TypedPeopleEventIndexProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::TypedPeopleEventIndexProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::people::PeopleEventIndexProto* Arena::CreateMaybeMessage< ::com::android::server::people::PeopleEventIndexProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::people::PeopleEventIndexProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
