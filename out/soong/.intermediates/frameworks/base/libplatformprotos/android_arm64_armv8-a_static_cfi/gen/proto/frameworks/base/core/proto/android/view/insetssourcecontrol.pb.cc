// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/insetssourcecontrol.proto

#include "frameworks/base/core/proto/android/view/insetssourcecontrol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PointProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SurfaceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto;
namespace android {
namespace view {
class InsetsSourceControlProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsetsSourceControlProto> _instance;
} _InsetsSourceControlProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_InsetsSourceControlProto_default_instance_;
    new (ptr) ::android::view::InsetsSourceControlProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::InsetsSourceControlProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto}, {
      &scc_info_PointProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto.base,
      &scc_info_SurfaceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto.base,}};

namespace android {
namespace view {

// ===================================================================

void InsetsSourceControlProto::InitAsDefaultInstance() {
  ::android::view::_InsetsSourceControlProto_default_instance_._instance.get_mutable()->position_ = const_cast< ::android::graphics::PointProto*>(
      ::android::graphics::PointProto::internal_default_instance());
  ::android::view::_InsetsSourceControlProto_default_instance_._instance.get_mutable()->leash_ = const_cast< ::android::view::SurfaceControlProto*>(
      ::android::view::SurfaceControlProto::internal_default_instance());
}
class InsetsSourceControlProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InsetsSourceControlProto>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::graphics::PointProto& position(const InsetsSourceControlProto* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::view::SurfaceControlProto& leash(const InsetsSourceControlProto* msg);
  static void set_has_leash(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::android::graphics::PointProto&
InsetsSourceControlProto::_Internal::position(const InsetsSourceControlProto* msg) {
  return *msg->position_;
}
const ::android::view::SurfaceControlProto&
InsetsSourceControlProto::_Internal::leash(const InsetsSourceControlProto* msg) {
  return *msg->leash_;
}
void InsetsSourceControlProto::clear_position() {
  if (position_ != nullptr) position_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void InsetsSourceControlProto::clear_leash() {
  if (leash_ != nullptr) leash_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
InsetsSourceControlProto::InsetsSourceControlProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.InsetsSourceControlProto)
}
InsetsSourceControlProto::InsetsSourceControlProto(const InsetsSourceControlProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_position()) {
    position_ = new ::android::graphics::PointProto(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_leash()) {
    leash_ = new ::android::view::SurfaceControlProto(*from.leash_);
  } else {
    leash_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.view.InsetsSourceControlProto)
}

void InsetsSourceControlProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto.base);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leash_) -
      reinterpret_cast<char*>(&position_)) + sizeof(leash_));
}

InsetsSourceControlProto::~InsetsSourceControlProto() {
  // @@protoc_insertion_point(destructor:android.view.InsetsSourceControlProto)
  SharedDtor();
}

void InsetsSourceControlProto::SharedDtor() {
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete leash_;
}

void InsetsSourceControlProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsetsSourceControlProto& InsetsSourceControlProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto.base);
  return *internal_default_instance();
}


void InsetsSourceControlProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.InsetsSourceControlProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(position_ != nullptr);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(leash_ != nullptr);
      leash_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InsetsSourceControlProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_type(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.PointProto position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceControlProto leash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_leash(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InsetsSourceControlProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.view.InsetsSourceControlProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.PointProto position = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceControlProto leash = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_leash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.InsetsSourceControlProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.InsetsSourceControlProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InsetsSourceControlProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.InsetsSourceControlProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional .android.graphics.PointProto position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::position(this), output);
  }

  // optional .android.view.SurfaceControlProto leash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::leash(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.view.InsetsSourceControlProto)
}

size_t InsetsSourceControlProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.InsetsSourceControlProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional .android.graphics.PointProto position = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional .android.view.SurfaceControlProto leash = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *leash_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsetsSourceControlProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const InsetsSourceControlProto*>(
      &from));
}

void InsetsSourceControlProto::MergeFrom(const InsetsSourceControlProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.InsetsSourceControlProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_position()->::android::graphics::PointProto::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_leash()->::android::view::SurfaceControlProto::MergeFrom(from.leash());
    }
  }
}

void InsetsSourceControlProto::CopyFrom(const InsetsSourceControlProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.InsetsSourceControlProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsetsSourceControlProto::IsInitialized() const {
  return true;
}

void InsetsSourceControlProto::InternalSwap(InsetsSourceControlProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(leash_, other->leash_);
}

std::string InsetsSourceControlProto::GetTypeName() const {
  return "android.view.InsetsSourceControlProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::InsetsSourceControlProto* Arena::CreateMaybeMessage< ::android::view::InsetsSourceControlProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::InsetsSourceControlProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
