// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/inputmethod/inputconnection.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace view {
namespace inputmethod {
class InputConnectionCallProto;
class InputConnectionCallProtoDefaultTypeInternal;
extern InputConnectionCallProtoDefaultTypeInternal _InputConnectionCallProto_default_instance_;
class InputConnectionCallProto_GetCursorCapsMode;
class InputConnectionCallProto_GetCursorCapsModeDefaultTypeInternal;
extern InputConnectionCallProto_GetCursorCapsModeDefaultTypeInternal _InputConnectionCallProto_GetCursorCapsMode_default_instance_;
class InputConnectionCallProto_GetExtractedText;
class InputConnectionCallProto_GetExtractedTextDefaultTypeInternal;
extern InputConnectionCallProto_GetExtractedTextDefaultTypeInternal _InputConnectionCallProto_GetExtractedText_default_instance_;
class InputConnectionCallProto_GetExtractedText_ExtractedTextRequest;
class InputConnectionCallProto_GetExtractedText_ExtractedTextRequestDefaultTypeInternal;
extern InputConnectionCallProto_GetExtractedText_ExtractedTextRequestDefaultTypeInternal _InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_default_instance_;
class InputConnectionCallProto_GetSelectedText;
class InputConnectionCallProto_GetSelectedTextDefaultTypeInternal;
extern InputConnectionCallProto_GetSelectedTextDefaultTypeInternal _InputConnectionCallProto_GetSelectedText_default_instance_;
class InputConnectionCallProto_GetSurroundingText;
class InputConnectionCallProto_GetSurroundingTextDefaultTypeInternal;
extern InputConnectionCallProto_GetSurroundingTextDefaultTypeInternal _InputConnectionCallProto_GetSurroundingText_default_instance_;
class InputConnectionCallProto_GetSurroundingText_SurroundingText;
class InputConnectionCallProto_GetSurroundingText_SurroundingTextDefaultTypeInternal;
extern InputConnectionCallProto_GetSurroundingText_SurroundingTextDefaultTypeInternal _InputConnectionCallProto_GetSurroundingText_SurroundingText_default_instance_;
class InputConnectionCallProto_GetTextAfterCursor;
class InputConnectionCallProto_GetTextAfterCursorDefaultTypeInternal;
extern InputConnectionCallProto_GetTextAfterCursorDefaultTypeInternal _InputConnectionCallProto_GetTextAfterCursor_default_instance_;
class InputConnectionCallProto_GetTextBeforeCursor;
class InputConnectionCallProto_GetTextBeforeCursorDefaultTypeInternal;
extern InputConnectionCallProto_GetTextBeforeCursorDefaultTypeInternal _InputConnectionCallProto_GetTextBeforeCursor_default_instance_;
class InputConnectionProto;
class InputConnectionProtoDefaultTypeInternal;
extern InputConnectionProtoDefaultTypeInternal _InputConnectionProto_default_instance_;
}  // namespace inputmethod
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::view::inputmethod::InputConnectionCallProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetExtractedText>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetSelectedText>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor>(Arena*);
template<> ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor>(Arena*);
template<> ::android::view::inputmethod::InputConnectionProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputConnectionProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace view {
namespace inputmethod {

// ===================================================================

class InputConnectionProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionProto) */ {
 public:
  InputConnectionProto();
  virtual ~InputConnectionProto();

  InputConnectionProto(const InputConnectionProto& from);
  InputConnectionProto(InputConnectionProto&& from) noexcept
    : InputConnectionProto() {
    *this = ::std::move(from);
  }

  inline InputConnectionProto& operator=(const InputConnectionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionProto& operator=(InputConnectionProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionProto* internal_default_instance() {
    return reinterpret_cast<const InputConnectionProto*>(
               &_InputConnectionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InputConnectionProto& a, InputConnectionProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionProto* New() const final {
    return CreateMaybeMessage<InputConnectionProto>(nullptr);
  }

  InputConnectionProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionProto& from);
  void MergeFrom(const InputConnectionProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEditableTextFieldNumber = 1,
    kSelectedTextFieldNumber = 2,
    kSelectedTextStartFieldNumber = 3,
    kSelectedTextEndFieldNumber = 4,
    kCursorCapsModeFieldNumber = 5,
  };
  // optional string editable_text = 1 [(.android.privacy) = {
  bool has_editable_text() const;
  void clear_editable_text();
  const std::string& editable_text() const;
  void set_editable_text(const std::string& value);
  void set_editable_text(std::string&& value);
  void set_editable_text(const char* value);
  void set_editable_text(const char* value, size_t size);
  std::string* mutable_editable_text();
  std::string* release_editable_text();
  void set_allocated_editable_text(std::string* editable_text);

  // optional string selected_text = 2 [(.android.privacy) = {
  bool has_selected_text() const;
  void clear_selected_text();
  const std::string& selected_text() const;
  void set_selected_text(const std::string& value);
  void set_selected_text(std::string&& value);
  void set_selected_text(const char* value);
  void set_selected_text(const char* value, size_t size);
  std::string* mutable_selected_text();
  std::string* release_selected_text();
  void set_allocated_selected_text(std::string* selected_text);

  // optional int32 selected_text_start = 3;
  bool has_selected_text_start() const;
  void clear_selected_text_start();
  ::PROTOBUF_NAMESPACE_ID::int32 selected_text_start() const;
  void set_selected_text_start(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 selected_text_end = 4;
  bool has_selected_text_end() const;
  void clear_selected_text_end();
  ::PROTOBUF_NAMESPACE_ID::int32 selected_text_end() const;
  void set_selected_text_end(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 cursor_caps_mode = 5;
  bool has_cursor_caps_mode() const;
  void clear_cursor_caps_mode();
  ::PROTOBUF_NAMESPACE_ID::int32 cursor_caps_mode() const;
  void set_cursor_caps_mode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr editable_text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr selected_text_;
  ::PROTOBUF_NAMESPACE_ID::int32 selected_text_start_;
  ::PROTOBUF_NAMESPACE_ID::int32 selected_text_end_;
  ::PROTOBUF_NAMESPACE_ID::int32 cursor_caps_mode_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetTextBeforeCursor :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor) */ {
 public:
  InputConnectionCallProto_GetTextBeforeCursor();
  virtual ~InputConnectionCallProto_GetTextBeforeCursor();

  InputConnectionCallProto_GetTextBeforeCursor(const InputConnectionCallProto_GetTextBeforeCursor& from);
  InputConnectionCallProto_GetTextBeforeCursor(InputConnectionCallProto_GetTextBeforeCursor&& from) noexcept
    : InputConnectionCallProto_GetTextBeforeCursor() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetTextBeforeCursor& operator=(const InputConnectionCallProto_GetTextBeforeCursor& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetTextBeforeCursor& operator=(InputConnectionCallProto_GetTextBeforeCursor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetTextBeforeCursor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetTextBeforeCursor* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetTextBeforeCursor*>(
               &_InputConnectionCallProto_GetTextBeforeCursor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InputConnectionCallProto_GetTextBeforeCursor& a, InputConnectionCallProto_GetTextBeforeCursor& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetTextBeforeCursor* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetTextBeforeCursor* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetTextBeforeCursor>(nullptr);
  }

  InputConnectionCallProto_GetTextBeforeCursor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetTextBeforeCursor>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetTextBeforeCursor& from);
  void MergeFrom(const InputConnectionCallProto_GetTextBeforeCursor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetTextBeforeCursor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 3,
    kLengthFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // optional string result = 3 [(.android.privacy) = {
  bool has_result() const;
  void clear_result();
  const std::string& result() const;
  void set_result(const std::string& value);
  void set_result(std::string&& value);
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  std::string* mutable_result();
  std::string* release_result();
  void set_allocated_result(std::string* result);

  // optional int32 length = 1;
  bool has_length() const;
  void clear_length();
  ::PROTOBUF_NAMESPACE_ID::int32 length() const;
  void set_length(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_;
  ::PROTOBUF_NAMESPACE_ID::int32 length_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetTextAfterCursor :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor) */ {
 public:
  InputConnectionCallProto_GetTextAfterCursor();
  virtual ~InputConnectionCallProto_GetTextAfterCursor();

  InputConnectionCallProto_GetTextAfterCursor(const InputConnectionCallProto_GetTextAfterCursor& from);
  InputConnectionCallProto_GetTextAfterCursor(InputConnectionCallProto_GetTextAfterCursor&& from) noexcept
    : InputConnectionCallProto_GetTextAfterCursor() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetTextAfterCursor& operator=(const InputConnectionCallProto_GetTextAfterCursor& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetTextAfterCursor& operator=(InputConnectionCallProto_GetTextAfterCursor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetTextAfterCursor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetTextAfterCursor* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetTextAfterCursor*>(
               &_InputConnectionCallProto_GetTextAfterCursor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(InputConnectionCallProto_GetTextAfterCursor& a, InputConnectionCallProto_GetTextAfterCursor& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetTextAfterCursor* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetTextAfterCursor* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetTextAfterCursor>(nullptr);
  }

  InputConnectionCallProto_GetTextAfterCursor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetTextAfterCursor>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetTextAfterCursor& from);
  void MergeFrom(const InputConnectionCallProto_GetTextAfterCursor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetTextAfterCursor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 3,
    kLengthFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // optional string result = 3 [(.android.privacy) = {
  bool has_result() const;
  void clear_result();
  const std::string& result() const;
  void set_result(const std::string& value);
  void set_result(std::string&& value);
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  std::string* mutable_result();
  std::string* release_result();
  void set_allocated_result(std::string* result);

  // optional int32 length = 1;
  bool has_length() const;
  void clear_length();
  ::PROTOBUF_NAMESPACE_ID::int32 length() const;
  void set_length(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_;
  ::PROTOBUF_NAMESPACE_ID::int32 length_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetSelectedText :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetSelectedText) */ {
 public:
  InputConnectionCallProto_GetSelectedText();
  virtual ~InputConnectionCallProto_GetSelectedText();

  InputConnectionCallProto_GetSelectedText(const InputConnectionCallProto_GetSelectedText& from);
  InputConnectionCallProto_GetSelectedText(InputConnectionCallProto_GetSelectedText&& from) noexcept
    : InputConnectionCallProto_GetSelectedText() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetSelectedText& operator=(const InputConnectionCallProto_GetSelectedText& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetSelectedText& operator=(InputConnectionCallProto_GetSelectedText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetSelectedText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetSelectedText* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetSelectedText*>(
               &_InputConnectionCallProto_GetSelectedText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(InputConnectionCallProto_GetSelectedText& a, InputConnectionCallProto_GetSelectedText& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetSelectedText* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetSelectedText* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetSelectedText>(nullptr);
  }

  InputConnectionCallProto_GetSelectedText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetSelectedText>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetSelectedText& from);
  void MergeFrom(const InputConnectionCallProto_GetSelectedText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetSelectedText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetSelectedText";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 2,
    kFlagsFieldNumber = 1,
  };
  // optional string result = 2 [(.android.privacy) = {
  bool has_result() const;
  void clear_result();
  const std::string& result() const;
  void set_result(const std::string& value);
  void set_result(std::string&& value);
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  std::string* mutable_result();
  std::string* release_result();
  void set_allocated_result(std::string* result);

  // optional int32 flags = 1;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetSurroundingText_SurroundingText :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText) */ {
 public:
  InputConnectionCallProto_GetSurroundingText_SurroundingText();
  virtual ~InputConnectionCallProto_GetSurroundingText_SurroundingText();

  InputConnectionCallProto_GetSurroundingText_SurroundingText(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from);
  InputConnectionCallProto_GetSurroundingText_SurroundingText(InputConnectionCallProto_GetSurroundingText_SurroundingText&& from) noexcept
    : InputConnectionCallProto_GetSurroundingText_SurroundingText() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetSurroundingText_SurroundingText& operator=(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetSurroundingText_SurroundingText& operator=(InputConnectionCallProto_GetSurroundingText_SurroundingText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetSurroundingText_SurroundingText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetSurroundingText_SurroundingText* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetSurroundingText_SurroundingText*>(
               &_InputConnectionCallProto_GetSurroundingText_SurroundingText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(InputConnectionCallProto_GetSurroundingText_SurroundingText& a, InputConnectionCallProto_GetSurroundingText_SurroundingText& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetSurroundingText_SurroundingText* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetSurroundingText_SurroundingText* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetSurroundingText_SurroundingText>(nullptr);
  }

  InputConnectionCallProto_GetSurroundingText_SurroundingText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetSurroundingText_SurroundingText>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from);
  void MergeFrom(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetSurroundingText_SurroundingText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kSelectionStartFieldNumber = 2,
    kSelectionEndFieldNumber = 3,
    kOffsetFieldNumber = 4,
  };
  // optional string text = 1 [(.android.privacy) = {
  bool has_text() const;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);

  // optional int32 selection_start = 2;
  bool has_selection_start() const;
  void clear_selection_start();
  ::PROTOBUF_NAMESPACE_ID::int32 selection_start() const;
  void set_selection_start(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 selection_end = 3;
  bool has_selection_end() const;
  void clear_selection_end();
  ::PROTOBUF_NAMESPACE_ID::int32 selection_end() const;
  void set_selection_end(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 offset = 4;
  bool has_offset() const;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::int32 selection_start_;
  ::PROTOBUF_NAMESPACE_ID::int32 selection_end_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetSurroundingText :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText) */ {
 public:
  InputConnectionCallProto_GetSurroundingText();
  virtual ~InputConnectionCallProto_GetSurroundingText();

  InputConnectionCallProto_GetSurroundingText(const InputConnectionCallProto_GetSurroundingText& from);
  InputConnectionCallProto_GetSurroundingText(InputConnectionCallProto_GetSurroundingText&& from) noexcept
    : InputConnectionCallProto_GetSurroundingText() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetSurroundingText& operator=(const InputConnectionCallProto_GetSurroundingText& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetSurroundingText& operator=(InputConnectionCallProto_GetSurroundingText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetSurroundingText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetSurroundingText* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetSurroundingText*>(
               &_InputConnectionCallProto_GetSurroundingText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InputConnectionCallProto_GetSurroundingText& a, InputConnectionCallProto_GetSurroundingText& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetSurroundingText* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetSurroundingText* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetSurroundingText>(nullptr);
  }

  InputConnectionCallProto_GetSurroundingText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetSurroundingText>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetSurroundingText& from);
  void MergeFrom(const InputConnectionCallProto_GetSurroundingText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetSurroundingText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetSurroundingText";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef InputConnectionCallProto_GetSurroundingText_SurroundingText SurroundingText;

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 4,
    kBeforeLengthFieldNumber = 1,
    kAfterLengthFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
  bool has_result() const;
  void clear_result();
  const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText& result() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* release_result();
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* mutable_result();
  void set_allocated_result(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* result);

  // optional int32 before_length = 1;
  bool has_before_length() const;
  void clear_before_length();
  ::PROTOBUF_NAMESPACE_ID::int32 before_length() const;
  void set_before_length(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 after_length = 2;
  bool has_after_length() const;
  void clear_after_length();
  ::PROTOBUF_NAMESPACE_ID::int32 after_length() const;
  void set_after_length(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* result_;
  ::PROTOBUF_NAMESPACE_ID::int32 before_length_;
  ::PROTOBUF_NAMESPACE_ID::int32 after_length_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetCursorCapsMode :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode) */ {
 public:
  InputConnectionCallProto_GetCursorCapsMode();
  virtual ~InputConnectionCallProto_GetCursorCapsMode();

  InputConnectionCallProto_GetCursorCapsMode(const InputConnectionCallProto_GetCursorCapsMode& from);
  InputConnectionCallProto_GetCursorCapsMode(InputConnectionCallProto_GetCursorCapsMode&& from) noexcept
    : InputConnectionCallProto_GetCursorCapsMode() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetCursorCapsMode& operator=(const InputConnectionCallProto_GetCursorCapsMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetCursorCapsMode& operator=(InputConnectionCallProto_GetCursorCapsMode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetCursorCapsMode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetCursorCapsMode* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetCursorCapsMode*>(
               &_InputConnectionCallProto_GetCursorCapsMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InputConnectionCallProto_GetCursorCapsMode& a, InputConnectionCallProto_GetCursorCapsMode& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetCursorCapsMode* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetCursorCapsMode* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetCursorCapsMode>(nullptr);
  }

  InputConnectionCallProto_GetCursorCapsMode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetCursorCapsMode>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetCursorCapsMode& from);
  void MergeFrom(const InputConnectionCallProto_GetCursorCapsMode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetCursorCapsMode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqModesFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional int32 req_modes = 1;
  bool has_req_modes() const;
  void clear_req_modes();
  ::PROTOBUF_NAMESPACE_ID::int32 req_modes() const;
  void set_req_modes(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 req_modes_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetExtractedText_ExtractedTextRequest :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest) */ {
 public:
  InputConnectionCallProto_GetExtractedText_ExtractedTextRequest();
  virtual ~InputConnectionCallProto_GetExtractedText_ExtractedTextRequest();

  InputConnectionCallProto_GetExtractedText_ExtractedTextRequest(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from);
  InputConnectionCallProto_GetExtractedText_ExtractedTextRequest(InputConnectionCallProto_GetExtractedText_ExtractedTextRequest&& from) noexcept
    : InputConnectionCallProto_GetExtractedText_ExtractedTextRequest() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& operator=(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& operator=(InputConnectionCallProto_GetExtractedText_ExtractedTextRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest*>(
               &_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& a, InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetExtractedText_ExtractedTextRequest>(nullptr);
  }

  InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetExtractedText_ExtractedTextRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from);
  void MergeFrom(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
    kFlagsFieldNumber = 2,
    kHintMaxLinesFieldNumber = 3,
    kHintMaxCharsFieldNumber = 4,
  };
  // optional int32 token = 1;
  bool has_token() const;
  void clear_token();
  ::PROTOBUF_NAMESPACE_ID::int32 token() const;
  void set_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 hint_max_lines = 3;
  bool has_hint_max_lines() const;
  void clear_hint_max_lines();
  ::PROTOBUF_NAMESPACE_ID::int32 hint_max_lines() const;
  void set_hint_max_lines(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 hint_max_chars = 4;
  bool has_hint_max_chars() const;
  void clear_hint_max_chars();
  ::PROTOBUF_NAMESPACE_ID::int32 hint_max_chars() const;
  void set_hint_max_chars(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 token_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  ::PROTOBUF_NAMESPACE_ID::int32 hint_max_lines_;
  ::PROTOBUF_NAMESPACE_ID::int32 hint_max_chars_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto_GetExtractedText :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto.GetExtractedText) */ {
 public:
  InputConnectionCallProto_GetExtractedText();
  virtual ~InputConnectionCallProto_GetExtractedText();

  InputConnectionCallProto_GetExtractedText(const InputConnectionCallProto_GetExtractedText& from);
  InputConnectionCallProto_GetExtractedText(InputConnectionCallProto_GetExtractedText&& from) noexcept
    : InputConnectionCallProto_GetExtractedText() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto_GetExtractedText& operator=(const InputConnectionCallProto_GetExtractedText& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto_GetExtractedText& operator=(InputConnectionCallProto_GetExtractedText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto_GetExtractedText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto_GetExtractedText* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto_GetExtractedText*>(
               &_InputConnectionCallProto_GetExtractedText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(InputConnectionCallProto_GetExtractedText& a, InputConnectionCallProto_GetExtractedText& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto_GetExtractedText* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto_GetExtractedText* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetExtractedText>(nullptr);
  }

  InputConnectionCallProto_GetExtractedText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto_GetExtractedText>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto_GetExtractedText& from);
  void MergeFrom(const InputConnectionCallProto_GetExtractedText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto_GetExtractedText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto.GetExtractedText";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef InputConnectionCallProto_GetExtractedText_ExtractedTextRequest ExtractedTextRequest;

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 3,
    kRequestFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // optional string result = 3 [(.android.privacy) = {
  bool has_result() const;
  void clear_result();
  const std::string& result() const;
  void set_result(const std::string& value);
  void set_result(std::string&& value);
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  std::string* mutable_result();
  std::string* release_result();
  void set_allocated_result(std::string* result);

  // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
  bool has_request() const;
  void clear_request();
  const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& request() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* release_request();
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* mutable_request();
  void set_allocated_request(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* request);

  // optional int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_;
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* request_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// -------------------------------------------------------------------

class InputConnectionCallProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputConnectionCallProto) */ {
 public:
  InputConnectionCallProto();
  virtual ~InputConnectionCallProto();

  InputConnectionCallProto(const InputConnectionCallProto& from);
  InputConnectionCallProto(InputConnectionCallProto&& from) noexcept
    : InputConnectionCallProto() {
    *this = ::std::move(from);
  }

  inline InputConnectionCallProto& operator=(const InputConnectionCallProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputConnectionCallProto& operator=(InputConnectionCallProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const InputConnectionCallProto& default_instance();

  enum MethodCallCase {
    kGetTextBeforeCursor = 1,
    kGetTextAfterCursor = 2,
    kGetSelectedText = 3,
    kGetSurroundingText = 4,
    kGetCursorCapsMode = 5,
    kGetExtractedText = 6,
    METHOD_CALL_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputConnectionCallProto* internal_default_instance() {
    return reinterpret_cast<const InputConnectionCallProto*>(
               &_InputConnectionCallProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(InputConnectionCallProto& a, InputConnectionCallProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputConnectionCallProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputConnectionCallProto* New() const final {
    return CreateMaybeMessage<InputConnectionCallProto>(nullptr);
  }

  InputConnectionCallProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputConnectionCallProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const InputConnectionCallProto& from);
  void MergeFrom(const InputConnectionCallProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InputConnectionCallProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputConnectionCallProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef InputConnectionCallProto_GetTextBeforeCursor GetTextBeforeCursor;
  typedef InputConnectionCallProto_GetTextAfterCursor GetTextAfterCursor;
  typedef InputConnectionCallProto_GetSelectedText GetSelectedText;
  typedef InputConnectionCallProto_GetSurroundingText GetSurroundingText;
  typedef InputConnectionCallProto_GetCursorCapsMode GetCursorCapsMode;
  typedef InputConnectionCallProto_GetExtractedText GetExtractedText;

  // accessors -------------------------------------------------------

  enum : int {
    kGetTextBeforeCursorFieldNumber = 1,
    kGetTextAfterCursorFieldNumber = 2,
    kGetSelectedTextFieldNumber = 3,
    kGetSurroundingTextFieldNumber = 4,
    kGetCursorCapsModeFieldNumber = 5,
    kGetExtractedTextFieldNumber = 6,
  };
  // optional .android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor get_text_before_cursor = 1;
  bool has_get_text_before_cursor() const;
  void clear_get_text_before_cursor();
  const ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor& get_text_before_cursor() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* release_get_text_before_cursor();
  ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* mutable_get_text_before_cursor();
  void set_allocated_get_text_before_cursor(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* get_text_before_cursor);

  // optional .android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor get_text_after_cursor = 2;
  bool has_get_text_after_cursor() const;
  void clear_get_text_after_cursor();
  const ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor& get_text_after_cursor() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* release_get_text_after_cursor();
  ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* mutable_get_text_after_cursor();
  void set_allocated_get_text_after_cursor(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* get_text_after_cursor);

  // optional .android.view.inputmethod.InputConnectionCallProto.GetSelectedText get_selected_text = 3;
  bool has_get_selected_text() const;
  void clear_get_selected_text();
  const ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText& get_selected_text() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* release_get_selected_text();
  ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* mutable_get_selected_text();
  void set_allocated_get_selected_text(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* get_selected_text);

  // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText get_surrounding_text = 4;
  bool has_get_surrounding_text() const;
  void clear_get_surrounding_text();
  const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText& get_surrounding_text() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* release_get_surrounding_text();
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* mutable_get_surrounding_text();
  void set_allocated_get_surrounding_text(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* get_surrounding_text);

  // optional .android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode get_cursor_caps_mode = 5;
  bool has_get_cursor_caps_mode() const;
  void clear_get_cursor_caps_mode();
  const ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode& get_cursor_caps_mode() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* release_get_cursor_caps_mode();
  ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* mutable_get_cursor_caps_mode();
  void set_allocated_get_cursor_caps_mode(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* get_cursor_caps_mode);

  // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText get_extracted_text = 6;
  bool has_get_extracted_text() const;
  void clear_get_extracted_text();
  const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText& get_extracted_text() const;
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* release_get_extracted_text();
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* mutable_get_extracted_text();
  void set_allocated_get_extracted_text(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* get_extracted_text);

  void clear_method_call();
  MethodCallCase method_call_case() const;
  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputConnectionCallProto)
 private:
  class _Internal;
  void set_has_get_text_before_cursor();
  void set_has_get_text_after_cursor();
  void set_has_get_selected_text();
  void set_has_get_surrounding_text();
  void set_has_get_cursor_caps_mode();
  void set_has_get_extracted_text();

  inline bool has_method_call() const;
  inline void clear_has_method_call();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union MethodCallUnion {
    MethodCallUnion() {}
    ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* get_text_before_cursor_;
    ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* get_text_after_cursor_;
    ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* get_selected_text_;
    ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* get_surrounding_text_;
    ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* get_cursor_caps_mode_;
    ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* get_extracted_text_;
  } method_call_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputConnectionProto

// optional string editable_text = 1 [(.android.privacy) = {
inline bool InputConnectionProto::has_editable_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionProto::clear_editable_text() {
  editable_text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputConnectionProto::editable_text() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionProto.editable_text)
  return editable_text_.GetNoArena();
}
inline void InputConnectionProto::set_editable_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  editable_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionProto.editable_text)
}
inline void InputConnectionProto::set_editable_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  editable_text_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionProto.editable_text)
}
inline void InputConnectionProto::set_editable_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  editable_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionProto.editable_text)
}
inline void InputConnectionProto::set_editable_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  editable_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionProto.editable_text)
}
inline std::string* InputConnectionProto::mutable_editable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionProto.editable_text)
  return editable_text_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionProto::release_editable_text() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionProto.editable_text)
  if (!has_editable_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return editable_text_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionProto::set_allocated_editable_text(std::string* editable_text) {
  if (editable_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  editable_text_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), editable_text);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionProto.editable_text)
}

// optional string selected_text = 2 [(.android.privacy) = {
inline bool InputConnectionProto::has_selected_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionProto::clear_selected_text() {
  selected_text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& InputConnectionProto::selected_text() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionProto.selected_text)
  return selected_text_.GetNoArena();
}
inline void InputConnectionProto::set_selected_text(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  selected_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionProto.selected_text)
}
inline void InputConnectionProto::set_selected_text(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  selected_text_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionProto.selected_text)
}
inline void InputConnectionProto::set_selected_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  selected_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionProto.selected_text)
}
inline void InputConnectionProto::set_selected_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  selected_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionProto.selected_text)
}
inline std::string* InputConnectionProto::mutable_selected_text() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionProto.selected_text)
  return selected_text_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionProto::release_selected_text() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionProto.selected_text)
  if (!has_selected_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return selected_text_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionProto::set_allocated_selected_text(std::string* selected_text) {
  if (selected_text != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  selected_text_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), selected_text);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionProto.selected_text)
}

// optional int32 selected_text_start = 3;
inline bool InputConnectionProto::has_selected_text_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionProto::clear_selected_text_start() {
  selected_text_start_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionProto::selected_text_start() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionProto.selected_text_start)
  return selected_text_start_;
}
inline void InputConnectionProto::set_selected_text_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  selected_text_start_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionProto.selected_text_start)
}

// optional int32 selected_text_end = 4;
inline bool InputConnectionProto::has_selected_text_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InputConnectionProto::clear_selected_text_end() {
  selected_text_end_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionProto::selected_text_end() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionProto.selected_text_end)
  return selected_text_end_;
}
inline void InputConnectionProto::set_selected_text_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  selected_text_end_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionProto.selected_text_end)
}

// optional int32 cursor_caps_mode = 5;
inline bool InputConnectionProto::has_cursor_caps_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InputConnectionProto::clear_cursor_caps_mode() {
  cursor_caps_mode_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionProto::cursor_caps_mode() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionProto.cursor_caps_mode)
  return cursor_caps_mode_;
}
inline void InputConnectionProto::set_cursor_caps_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  cursor_caps_mode_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionProto.cursor_caps_mode)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetTextBeforeCursor

// optional int32 length = 1;
inline bool InputConnectionCallProto_GetTextBeforeCursor::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetTextBeforeCursor::clear_length() {
  length_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetTextBeforeCursor::length() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.length)
  return length_;
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  length_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.length)
}

// optional int32 flags = 2;
inline bool InputConnectionCallProto_GetTextBeforeCursor::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionCallProto_GetTextBeforeCursor::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetTextBeforeCursor::flags() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.flags)
  return flags_;
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.flags)
}

// optional string result = 3 [(.android.privacy) = {
inline bool InputConnectionCallProto_GetTextBeforeCursor::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetTextBeforeCursor::clear_result() {
  result_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputConnectionCallProto_GetTextBeforeCursor::result() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
  return result_.GetNoArena();
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_result(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_result(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_result(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
}
inline std::string* InputConnectionCallProto_GetTextBeforeCursor::mutable_result() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
  return result_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionCallProto_GetTextBeforeCursor::release_result() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
  if (!has_result()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return result_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionCallProto_GetTextBeforeCursor::set_allocated_result(std::string* result) {
  if (result != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetTextAfterCursor

// optional int32 length = 1;
inline bool InputConnectionCallProto_GetTextAfterCursor::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetTextAfterCursor::clear_length() {
  length_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetTextAfterCursor::length() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.length)
  return length_;
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  length_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.length)
}

// optional int32 flags = 2;
inline bool InputConnectionCallProto_GetTextAfterCursor::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionCallProto_GetTextAfterCursor::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetTextAfterCursor::flags() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.flags)
  return flags_;
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.flags)
}

// optional string result = 3 [(.android.privacy) = {
inline bool InputConnectionCallProto_GetTextAfterCursor::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetTextAfterCursor::clear_result() {
  result_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputConnectionCallProto_GetTextAfterCursor::result() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
  return result_.GetNoArena();
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_result(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_result(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_result(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
}
inline std::string* InputConnectionCallProto_GetTextAfterCursor::mutable_result() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
  return result_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionCallProto_GetTextAfterCursor::release_result() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
  if (!has_result()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return result_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionCallProto_GetTextAfterCursor::set_allocated_result(std::string* result) {
  if (result != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetSelectedText

// optional int32 flags = 1;
inline bool InputConnectionCallProto_GetSelectedText::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetSelectedText::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSelectedText::flags() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.flags)
  return flags_;
}
inline void InputConnectionCallProto_GetSelectedText::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.flags)
}

// optional string result = 2 [(.android.privacy) = {
inline bool InputConnectionCallProto_GetSelectedText::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetSelectedText::clear_result() {
  result_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputConnectionCallProto_GetSelectedText::result() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
  return result_.GetNoArena();
}
inline void InputConnectionCallProto_GetSelectedText::set_result(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
}
inline void InputConnectionCallProto_GetSelectedText::set_result(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
}
inline void InputConnectionCallProto_GetSelectedText::set_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
}
inline void InputConnectionCallProto_GetSelectedText::set_result(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
}
inline std::string* InputConnectionCallProto_GetSelectedText::mutable_result() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
  return result_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionCallProto_GetSelectedText::release_result() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
  if (!has_result()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return result_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionCallProto_GetSelectedText::set_allocated_result(std::string* result) {
  if (result != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetSurroundingText_SurroundingText

// optional string text = 1 [(.android.privacy) = {
inline bool InputConnectionCallProto_GetSurroundingText_SurroundingText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::clear_text() {
  text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputConnectionCallProto_GetSurroundingText_SurroundingText::text() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
  return text_.GetNoArena();
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
}
inline std::string* InputConnectionCallProto_GetSurroundingText_SurroundingText::mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
  return text_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionCallProto_GetSurroundingText_SurroundingText::release_text() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
  if (!has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text)
}

// optional int32 selection_start = 2;
inline bool InputConnectionCallProto_GetSurroundingText_SurroundingText::has_selection_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::clear_selection_start() {
  selection_start_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSurroundingText_SurroundingText::selection_start() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.selection_start)
  return selection_start_;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_selection_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  selection_start_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.selection_start)
}

// optional int32 selection_end = 3;
inline bool InputConnectionCallProto_GetSurroundingText_SurroundingText::has_selection_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::clear_selection_end() {
  selection_end_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSurroundingText_SurroundingText::selection_end() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.selection_end)
  return selection_end_;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_selection_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  selection_end_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.selection_end)
}

// optional int32 offset = 4;
inline bool InputConnectionCallProto_GetSurroundingText_SurroundingText::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::clear_offset() {
  offset_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSurroundingText_SurroundingText::offset() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.offset)
  return offset_;
}
inline void InputConnectionCallProto_GetSurroundingText_SurroundingText::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  offset_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.offset)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetSurroundingText

// optional int32 before_length = 1;
inline bool InputConnectionCallProto_GetSurroundingText::has_before_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText::clear_before_length() {
  before_length_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSurroundingText::before_length() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.before_length)
  return before_length_;
}
inline void InputConnectionCallProto_GetSurroundingText::set_before_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  before_length_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.before_length)
}

// optional int32 after_length = 2;
inline bool InputConnectionCallProto_GetSurroundingText::has_after_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText::clear_after_length() {
  after_length_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSurroundingText::after_length() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.after_length)
  return after_length_;
}
inline void InputConnectionCallProto_GetSurroundingText::set_after_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  after_length_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.after_length)
}

// optional int32 flags = 3;
inline bool InputConnectionCallProto_GetSurroundingText::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetSurroundingText::flags() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.flags)
  return flags_;
}
inline void InputConnectionCallProto_GetSurroundingText::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.flags)
}

// optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
inline bool InputConnectionCallProto_GetSurroundingText::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetSurroundingText::clear_result() {
  if (result_ != nullptr) result_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText& InputConnectionCallProto_GetSurroundingText::result() const {
  const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* p = result_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.result)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText*>(
      &::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_SurroundingText_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* InputConnectionCallProto_GetSurroundingText::release_result() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.result)
  _has_bits_[0] &= ~0x00000001u;
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* InputConnectionCallProto_GetSurroundingText::mutable_result() {
  _has_bits_[0] |= 0x00000001u;
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText>(GetArenaNoVirtual());
    result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.result)
  return result_;
}
inline void InputConnectionCallProto_GetSurroundingText::set_allocated_result(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.result)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetCursorCapsMode

// optional int32 req_modes = 1;
inline bool InputConnectionCallProto_GetCursorCapsMode::has_req_modes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetCursorCapsMode::clear_req_modes() {
  req_modes_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetCursorCapsMode::req_modes() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode.req_modes)
  return req_modes_;
}
inline void InputConnectionCallProto_GetCursorCapsMode::set_req_modes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  req_modes_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode.req_modes)
}

// optional int32 result = 2;
inline bool InputConnectionCallProto_GetCursorCapsMode::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetCursorCapsMode::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetCursorCapsMode::result() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode.result)
  return result_;
}
inline void InputConnectionCallProto_GetCursorCapsMode::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode.result)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetExtractedText_ExtractedTextRequest

// optional int32 token = 1;
inline bool InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::clear_token() {
  token_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::token() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.token)
  return token_;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::set_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  token_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.token)
}

// optional int32 flags = 2;
inline bool InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::flags() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.flags)
  return flags_;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.flags)
}

// optional int32 hint_max_lines = 3;
inline bool InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::has_hint_max_lines() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::clear_hint_max_lines() {
  hint_max_lines_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::hint_max_lines() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.hint_max_lines)
  return hint_max_lines_;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::set_hint_max_lines(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  hint_max_lines_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.hint_max_lines)
}

// optional int32 hint_max_chars = 4;
inline bool InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::has_hint_max_chars() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::clear_hint_max_chars() {
  hint_max_chars_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::hint_max_chars() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.hint_max_chars)
  return hint_max_chars_;
}
inline void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::set_hint_max_chars(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  hint_max_chars_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest.hint_max_chars)
}

// -------------------------------------------------------------------

// InputConnectionCallProto_GetExtractedText

// optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
inline bool InputConnectionCallProto_GetExtractedText::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText::clear_request() {
  if (request_ != nullptr) request_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& InputConnectionCallProto_GetExtractedText::request() const {
  const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* p = request_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.request)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest*>(
      &::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* InputConnectionCallProto_GetExtractedText::release_request() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.request)
  _has_bits_[0] &= ~0x00000002u;
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* temp = request_;
  request_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* InputConnectionCallProto_GetExtractedText::mutable_request() {
  _has_bits_[0] |= 0x00000002u;
  if (request_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.request)
  return request_;
}
inline void InputConnectionCallProto_GetExtractedText::set_allocated_request(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete request_;
  }
  if (request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.request)
}

// optional int32 flags = 2;
inline bool InputConnectionCallProto_GetExtractedText::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputConnectionCallProto_GetExtractedText::flags() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.flags)
  return flags_;
}
inline void InputConnectionCallProto_GetExtractedText::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.flags)
}

// optional string result = 3 [(.android.privacy) = {
inline bool InputConnectionCallProto_GetExtractedText::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputConnectionCallProto_GetExtractedText::clear_result() {
  result_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputConnectionCallProto_GetExtractedText::result() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
  return result_.GetNoArena();
}
inline void InputConnectionCallProto_GetExtractedText::set_result(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
}
inline void InputConnectionCallProto_GetExtractedText::set_result(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
}
inline void InputConnectionCallProto_GetExtractedText::set_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
}
inline void InputConnectionCallProto_GetExtractedText::set_result(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
}
inline std::string* InputConnectionCallProto_GetExtractedText::mutable_result() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
  return result_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputConnectionCallProto_GetExtractedText::release_result() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
  if (!has_result()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return result_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputConnectionCallProto_GetExtractedText::set_allocated_result(std::string* result) {
  if (result != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result)
}

// -------------------------------------------------------------------

// InputConnectionCallProto

// optional .android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor get_text_before_cursor = 1;
inline bool InputConnectionCallProto::has_get_text_before_cursor() const {
  return method_call_case() == kGetTextBeforeCursor;
}
inline void InputConnectionCallProto::set_has_get_text_before_cursor() {
  _oneof_case_[0] = kGetTextBeforeCursor;
}
inline void InputConnectionCallProto::clear_get_text_before_cursor() {
  if (has_get_text_before_cursor()) {
    delete method_call_.get_text_before_cursor_;
    clear_has_method_call();
  }
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* InputConnectionCallProto::release_get_text_before_cursor() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.get_text_before_cursor)
  if (has_get_text_before_cursor()) {
    clear_has_method_call();
      ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* temp = method_call_.get_text_before_cursor_;
    method_call_.get_text_before_cursor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor& InputConnectionCallProto::get_text_before_cursor() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.get_text_before_cursor)
  return has_get_text_before_cursor()
      ? *method_call_.get_text_before_cursor_
      : *reinterpret_cast< ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor*>(&::android::view::inputmethod::_InputConnectionCallProto_GetTextBeforeCursor_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* InputConnectionCallProto::mutable_get_text_before_cursor() {
  if (!has_get_text_before_cursor()) {
    clear_method_call();
    set_has_get_text_before_cursor();
    method_call_.get_text_before_cursor_ = CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.get_text_before_cursor)
  return method_call_.get_text_before_cursor_;
}

// optional .android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor get_text_after_cursor = 2;
inline bool InputConnectionCallProto::has_get_text_after_cursor() const {
  return method_call_case() == kGetTextAfterCursor;
}
inline void InputConnectionCallProto::set_has_get_text_after_cursor() {
  _oneof_case_[0] = kGetTextAfterCursor;
}
inline void InputConnectionCallProto::clear_get_text_after_cursor() {
  if (has_get_text_after_cursor()) {
    delete method_call_.get_text_after_cursor_;
    clear_has_method_call();
  }
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* InputConnectionCallProto::release_get_text_after_cursor() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.get_text_after_cursor)
  if (has_get_text_after_cursor()) {
    clear_has_method_call();
      ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* temp = method_call_.get_text_after_cursor_;
    method_call_.get_text_after_cursor_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor& InputConnectionCallProto::get_text_after_cursor() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.get_text_after_cursor)
  return has_get_text_after_cursor()
      ? *method_call_.get_text_after_cursor_
      : *reinterpret_cast< ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor*>(&::android::view::inputmethod::_InputConnectionCallProto_GetTextAfterCursor_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* InputConnectionCallProto::mutable_get_text_after_cursor() {
  if (!has_get_text_after_cursor()) {
    clear_method_call();
    set_has_get_text_after_cursor();
    method_call_.get_text_after_cursor_ = CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.get_text_after_cursor)
  return method_call_.get_text_after_cursor_;
}

// optional .android.view.inputmethod.InputConnectionCallProto.GetSelectedText get_selected_text = 3;
inline bool InputConnectionCallProto::has_get_selected_text() const {
  return method_call_case() == kGetSelectedText;
}
inline void InputConnectionCallProto::set_has_get_selected_text() {
  _oneof_case_[0] = kGetSelectedText;
}
inline void InputConnectionCallProto::clear_get_selected_text() {
  if (has_get_selected_text()) {
    delete method_call_.get_selected_text_;
    clear_has_method_call();
  }
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* InputConnectionCallProto::release_get_selected_text() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.get_selected_text)
  if (has_get_selected_text()) {
    clear_has_method_call();
      ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* temp = method_call_.get_selected_text_;
    method_call_.get_selected_text_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText& InputConnectionCallProto::get_selected_text() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.get_selected_text)
  return has_get_selected_text()
      ? *method_call_.get_selected_text_
      : *reinterpret_cast< ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText*>(&::android::view::inputmethod::_InputConnectionCallProto_GetSelectedText_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* InputConnectionCallProto::mutable_get_selected_text() {
  if (!has_get_selected_text()) {
    clear_method_call();
    set_has_get_selected_text();
    method_call_.get_selected_text_ = CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.get_selected_text)
  return method_call_.get_selected_text_;
}

// optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText get_surrounding_text = 4;
inline bool InputConnectionCallProto::has_get_surrounding_text() const {
  return method_call_case() == kGetSurroundingText;
}
inline void InputConnectionCallProto::set_has_get_surrounding_text() {
  _oneof_case_[0] = kGetSurroundingText;
}
inline void InputConnectionCallProto::clear_get_surrounding_text() {
  if (has_get_surrounding_text()) {
    delete method_call_.get_surrounding_text_;
    clear_has_method_call();
  }
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* InputConnectionCallProto::release_get_surrounding_text() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.get_surrounding_text)
  if (has_get_surrounding_text()) {
    clear_has_method_call();
      ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* temp = method_call_.get_surrounding_text_;
    method_call_.get_surrounding_text_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText& InputConnectionCallProto::get_surrounding_text() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.get_surrounding_text)
  return has_get_surrounding_text()
      ? *method_call_.get_surrounding_text_
      : *reinterpret_cast< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText*>(&::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* InputConnectionCallProto::mutable_get_surrounding_text() {
  if (!has_get_surrounding_text()) {
    clear_method_call();
    set_has_get_surrounding_text();
    method_call_.get_surrounding_text_ = CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.get_surrounding_text)
  return method_call_.get_surrounding_text_;
}

// optional .android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode get_cursor_caps_mode = 5;
inline bool InputConnectionCallProto::has_get_cursor_caps_mode() const {
  return method_call_case() == kGetCursorCapsMode;
}
inline void InputConnectionCallProto::set_has_get_cursor_caps_mode() {
  _oneof_case_[0] = kGetCursorCapsMode;
}
inline void InputConnectionCallProto::clear_get_cursor_caps_mode() {
  if (has_get_cursor_caps_mode()) {
    delete method_call_.get_cursor_caps_mode_;
    clear_has_method_call();
  }
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* InputConnectionCallProto::release_get_cursor_caps_mode() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.get_cursor_caps_mode)
  if (has_get_cursor_caps_mode()) {
    clear_has_method_call();
      ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* temp = method_call_.get_cursor_caps_mode_;
    method_call_.get_cursor_caps_mode_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode& InputConnectionCallProto::get_cursor_caps_mode() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.get_cursor_caps_mode)
  return has_get_cursor_caps_mode()
      ? *method_call_.get_cursor_caps_mode_
      : *reinterpret_cast< ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode*>(&::android::view::inputmethod::_InputConnectionCallProto_GetCursorCapsMode_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* InputConnectionCallProto::mutable_get_cursor_caps_mode() {
  if (!has_get_cursor_caps_mode()) {
    clear_method_call();
    set_has_get_cursor_caps_mode();
    method_call_.get_cursor_caps_mode_ = CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.get_cursor_caps_mode)
  return method_call_.get_cursor_caps_mode_;
}

// optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText get_extracted_text = 6;
inline bool InputConnectionCallProto::has_get_extracted_text() const {
  return method_call_case() == kGetExtractedText;
}
inline void InputConnectionCallProto::set_has_get_extracted_text() {
  _oneof_case_[0] = kGetExtractedText;
}
inline void InputConnectionCallProto::clear_get_extracted_text() {
  if (has_get_extracted_text()) {
    delete method_call_.get_extracted_text_;
    clear_has_method_call();
  }
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* InputConnectionCallProto::release_get_extracted_text() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputConnectionCallProto.get_extracted_text)
  if (has_get_extracted_text()) {
    clear_has_method_call();
      ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* temp = method_call_.get_extracted_text_;
    method_call_.get_extracted_text_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText& InputConnectionCallProto::get_extracted_text() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputConnectionCallProto.get_extracted_text)
  return has_get_extracted_text()
      ? *method_call_.get_extracted_text_
      : *reinterpret_cast< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText*>(&::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* InputConnectionCallProto::mutable_get_extracted_text() {
  if (!has_get_extracted_text()) {
    clear_method_call();
    set_has_get_extracted_text();
    method_call_.get_extracted_text_ = CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputConnectionCallProto.get_extracted_text)
  return method_call_.get_extracted_text_;
}

inline bool InputConnectionCallProto::has_method_call() const {
  return method_call_case() != METHOD_CALL_NOT_SET;
}
inline void InputConnectionCallProto::clear_has_method_call() {
  _oneof_case_[0] = METHOD_CALL_NOT_SET;
}
inline InputConnectionCallProto::MethodCallCase InputConnectionCallProto::method_call_case() const {
  return InputConnectionCallProto::MethodCallCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace inputmethod
}  // namespace view
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto
