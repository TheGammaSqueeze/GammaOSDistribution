// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/notificationhistory.proto

#include "frameworks/base/core/proto/android/server/notificationhistory.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto;
namespace com {
namespace android {
namespace server {
namespace notification {
class NotificationHistoryProto_StringPoolDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationHistoryProto_StringPool> _instance;
} _NotificationHistoryProto_StringPool_default_instance_;
class NotificationHistoryProto_Notification_IconDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationHistoryProto_Notification_Icon> _instance;
} _NotificationHistoryProto_Notification_Icon_default_instance_;
class NotificationHistoryProto_NotificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationHistoryProto_Notification> _instance;
} _NotificationHistoryProto_Notification_default_instance_;
class NotificationHistoryProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationHistoryProto> _instance;
} _NotificationHistoryProto_default_instance_;
}  // namespace notification
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_NotificationHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::notification::_NotificationHistoryProto_default_instance_;
    new (ptr) ::com::android::server::notification::NotificationHistoryProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::notification::NotificationHistoryProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_NotificationHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_NotificationHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto}, {
      &scc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base,
      &scc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base,}};

static void InitDefaultsscc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::notification::_NotificationHistoryProto_Notification_default_instance_;
    new (ptr) ::com::android::server::notification::NotificationHistoryProto_Notification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::notification::NotificationHistoryProto_Notification::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto}, {
      &scc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base,}};

static void InitDefaultsscc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::notification::_NotificationHistoryProto_Notification_Icon_default_instance_;
    new (ptr) ::com::android::server::notification::NotificationHistoryProto_Notification_Icon();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::notification::NotificationHistoryProto_Notification_Icon::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto}, {}};

static void InitDefaultsscc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::notification::_NotificationHistoryProto_StringPool_default_instance_;
    new (ptr) ::com::android::server::notification::NotificationHistoryProto_StringPool();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::notification::NotificationHistoryProto_StringPool::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto}, {}};

namespace com {
namespace android {
namespace server {
namespace notification {
bool NotificationHistoryProto_Notification_ImageTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> NotificationHistoryProto_Notification_ImageTypeEnum_strings[6] = {};

static const char NotificationHistoryProto_Notification_ImageTypeEnum_names[] =
  "TYPE_ADAPTIVE_BITMAP"
  "TYPE_BITMAP"
  "TYPE_DATA"
  "TYPE_RESOURCE"
  "TYPE_UNKNOWN"
  "TYPE_URI";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry NotificationHistoryProto_Notification_ImageTypeEnum_entries[] = {
  { {NotificationHistoryProto_Notification_ImageTypeEnum_names + 0, 20}, 5 },
  { {NotificationHistoryProto_Notification_ImageTypeEnum_names + 20, 11}, 1 },
  { {NotificationHistoryProto_Notification_ImageTypeEnum_names + 31, 9}, 3 },
  { {NotificationHistoryProto_Notification_ImageTypeEnum_names + 40, 13}, 2 },
  { {NotificationHistoryProto_Notification_ImageTypeEnum_names + 53, 12}, 0 },
  { {NotificationHistoryProto_Notification_ImageTypeEnum_names + 65, 8}, 4 },
};

static const int NotificationHistoryProto_Notification_ImageTypeEnum_entries_by_number[] = {
  4, // 0 -> TYPE_UNKNOWN
  1, // 1 -> TYPE_BITMAP
  3, // 2 -> TYPE_RESOURCE
  2, // 3 -> TYPE_DATA
  5, // 4 -> TYPE_URI
  0, // 5 -> TYPE_ADAPTIVE_BITMAP
};

const std::string& NotificationHistoryProto_Notification_ImageTypeEnum_Name(
    NotificationHistoryProto_Notification_ImageTypeEnum value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          NotificationHistoryProto_Notification_ImageTypeEnum_entries,
          NotificationHistoryProto_Notification_ImageTypeEnum_entries_by_number,
          6, NotificationHistoryProto_Notification_ImageTypeEnum_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      NotificationHistoryProto_Notification_ImageTypeEnum_entries,
      NotificationHistoryProto_Notification_ImageTypeEnum_entries_by_number,
      6, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     NotificationHistoryProto_Notification_ImageTypeEnum_strings[idx].get();
}
bool NotificationHistoryProto_Notification_ImageTypeEnum_Parse(
    const std::string& name, NotificationHistoryProto_Notification_ImageTypeEnum* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      NotificationHistoryProto_Notification_ImageTypeEnum_entries, 6, name, &int_value);
  if (success) {
    *value = static_cast<NotificationHistoryProto_Notification_ImageTypeEnum>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::TYPE_UNKNOWN;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::TYPE_BITMAP;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::TYPE_RESOURCE;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::TYPE_DATA;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::TYPE_URI;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::TYPE_ADAPTIVE_BITMAP;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::ImageTypeEnum_MIN;
constexpr NotificationHistoryProto_Notification_ImageTypeEnum NotificationHistoryProto_Notification::ImageTypeEnum_MAX;
constexpr int NotificationHistoryProto_Notification::ImageTypeEnum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void NotificationHistoryProto_StringPool::InitAsDefaultInstance() {
}
class NotificationHistoryProto_StringPool::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationHistoryProto_StringPool>()._has_bits_);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NotificationHistoryProto_StringPool::NotificationHistoryProto_StringPool()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.notification.NotificationHistoryProto.StringPool)
}
NotificationHistoryProto_StringPool::NotificationHistoryProto_StringPool(const NotificationHistoryProto_StringPool& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      strings_(from.strings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.notification.NotificationHistoryProto.StringPool)
}

void NotificationHistoryProto_StringPool::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  size_ = 0;
}

NotificationHistoryProto_StringPool::~NotificationHistoryProto_StringPool() {
  // @@protoc_insertion_point(destructor:com.android.server.notification.NotificationHistoryProto.StringPool)
  SharedDtor();
}

void NotificationHistoryProto_StringPool::SharedDtor() {
}

void NotificationHistoryProto_StringPool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationHistoryProto_StringPool& NotificationHistoryProto_StringPool::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationHistoryProto_StringPool_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  return *internal_default_instance();
}


void NotificationHistoryProto_StringPool::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.notification.NotificationHistoryProto.StringPool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strings_.Clear();
  size_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationHistoryProto_StringPool::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_size(&has_bits);
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string strings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_strings(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationHistoryProto_StringPool::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.notification.NotificationHistoryProto.StringPool)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 size = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_size(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strings = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.notification.NotificationHistoryProto.StringPool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.notification.NotificationHistoryProto.StringPool)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationHistoryProto_StringPool::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.notification.NotificationHistoryProto.StringPool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->size(), output);
  }

  // repeated string strings = 2;
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->strings(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.notification.NotificationHistoryProto.StringPool)
}

size_t NotificationHistoryProto_StringPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.notification.NotificationHistoryProto.StringPool)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string strings = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->strings_size());
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->strings(i));
  }

  // optional int32 size = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationHistoryProto_StringPool::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const NotificationHistoryProto_StringPool*>(
      &from));
}

void NotificationHistoryProto_StringPool::MergeFrom(const NotificationHistoryProto_StringPool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.notification.NotificationHistoryProto.StringPool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  strings_.MergeFrom(from.strings_);
  if (from.has_size()) {
    set_size(from.size());
  }
}

void NotificationHistoryProto_StringPool::CopyFrom(const NotificationHistoryProto_StringPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.notification.NotificationHistoryProto.StringPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationHistoryProto_StringPool::IsInitialized() const {
  return true;
}

void NotificationHistoryProto_StringPool::InternalSwap(NotificationHistoryProto_StringPool* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  strings_.InternalSwap(CastToBase(&other->strings_));
  swap(size_, other->size_);
}

std::string NotificationHistoryProto_StringPool::GetTypeName() const {
  return "com.android.server.notification.NotificationHistoryProto.StringPool";
}


// ===================================================================

void NotificationHistoryProto_Notification_Icon::InitAsDefaultInstance() {
}
class NotificationHistoryProto_Notification_Icon::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationHistoryProto_Notification_Icon>()._has_bits_);
  static void set_has_image_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_image_bitmap_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_image_resource_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_image_resource_id_package(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_image_data(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_image_data_length(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_image_data_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_image_uri(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

NotificationHistoryProto_Notification_Icon::NotificationHistoryProto_Notification_Icon()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
}
NotificationHistoryProto_Notification_Icon::NotificationHistoryProto_Notification_Icon(const NotificationHistoryProto_Notification_Icon& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_bitmap_filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_bitmap_filename()) {
    image_bitmap_filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_bitmap_filename_);
  }
  image_resource_id_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_resource_id_package()) {
    image_resource_id_package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_resource_id_package_);
  }
  image_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_data()) {
    image_data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  image_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_image_uri()) {
    image_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_uri_);
  }
  ::memcpy(&image_type_, &from.image_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_data_offset_) -
    reinterpret_cast<char*>(&image_type_)) + sizeof(image_data_offset_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
}

void NotificationHistoryProto_Notification_Icon::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  image_bitmap_filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_resource_id_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_data_offset_) -
      reinterpret_cast<char*>(&image_type_)) + sizeof(image_data_offset_));
}

NotificationHistoryProto_Notification_Icon::~NotificationHistoryProto_Notification_Icon() {
  // @@protoc_insertion_point(destructor:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  SharedDtor();
}

void NotificationHistoryProto_Notification_Icon::SharedDtor() {
  image_bitmap_filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_resource_id_package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NotificationHistoryProto_Notification_Icon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationHistoryProto_Notification_Icon& NotificationHistoryProto_Notification_Icon::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationHistoryProto_Notification_Icon_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  return *internal_default_instance();
}


void NotificationHistoryProto_Notification_Icon::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      image_bitmap_filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      image_resource_id_package_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      image_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      image_uri_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&image_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&image_data_offset_) -
        reinterpret_cast<char*>(&image_type_)) + sizeof(image_data_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationHistoryProto_Notification_Icon::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.notification.NotificationHistoryProto.Notification.ImageTypeEnum image_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::com::android::server::notification::NotificationHistoryProto_Notification_ImageTypeEnum_IsValid(val))) {
            set_image_type(static_cast<::com::android::server::notification::NotificationHistoryProto_Notification_ImageTypeEnum>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string image_bitmap_filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_image_bitmap_filename(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 image_resource_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_image_resource_id(&has_bits);
          image_resource_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string image_resource_id_package = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_image_resource_id_package(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes image_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_image_data(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 image_data_length = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_image_data_length(&has_bits);
          image_data_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 image_data_offset = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_image_data_offset(&has_bits);
          image_data_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string image_uri = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_image_uri(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationHistoryProto_Notification_Icon::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.notification.NotificationHistoryProto.Notification.ImageTypeEnum image_type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::server::notification::NotificationHistoryProto_Notification_ImageTypeEnum_IsValid(value)) {
            set_image_type(static_cast< ::com::android::server::notification::NotificationHistoryProto_Notification_ImageTypeEnum >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_bitmap_filename = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_image_bitmap_filename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 image_resource_id = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_image_resource_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_resource_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_resource_id_package = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_image_resource_id_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes image_data = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 image_data_length = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_image_data_length(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_data_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 image_data_offset = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_image_data_offset(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_data_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string image_uri = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_image_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationHistoryProto_Notification_Icon::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.notification.NotificationHistoryProto.Notification.ImageTypeEnum image_type = 1;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->image_type(), output);
  }

  // optional string image_bitmap_filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->image_bitmap_filename(), output);
  }

  // optional int32 image_resource_id = 3;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->image_resource_id(), output);
  }

  // optional string image_resource_id_package = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->image_resource_id_package(), output);
  }

  // optional bytes image_data = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->image_data(), output);
  }

  // optional int32 image_data_length = 6;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->image_data_length(), output);
  }

  // optional int32 image_data_offset = 7;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->image_data_offset(), output);
  }

  // optional string image_uri = 8;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->image_uri(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
}

size_t NotificationHistoryProto_Notification_Icon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string image_bitmap_filename = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->image_bitmap_filename());
    }

    // optional string image_resource_id_package = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->image_resource_id_package());
    }

    // optional bytes image_data = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->image_data());
    }

    // optional string image_uri = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->image_uri());
    }

    // optional .com.android.server.notification.NotificationHistoryProto.Notification.ImageTypeEnum image_type = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->image_type());
    }

    // optional int32 image_resource_id = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->image_resource_id());
    }

    // optional int32 image_data_length = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->image_data_length());
    }

    // optional int32 image_data_offset = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->image_data_offset());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationHistoryProto_Notification_Icon::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const NotificationHistoryProto_Notification_Icon*>(
      &from));
}

void NotificationHistoryProto_Notification_Icon::MergeFrom(const NotificationHistoryProto_Notification_Icon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      image_bitmap_filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_bitmap_filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      image_resource_id_package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_resource_id_package_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      image_data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_data_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      image_uri_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_uri_);
    }
    if (cached_has_bits & 0x00000010u) {
      image_type_ = from.image_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      image_resource_id_ = from.image_resource_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      image_data_length_ = from.image_data_length_;
    }
    if (cached_has_bits & 0x00000080u) {
      image_data_offset_ = from.image_data_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotificationHistoryProto_Notification_Icon::CopyFrom(const NotificationHistoryProto_Notification_Icon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.notification.NotificationHistoryProto.Notification.Icon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationHistoryProto_Notification_Icon::IsInitialized() const {
  return true;
}

void NotificationHistoryProto_Notification_Icon::InternalSwap(NotificationHistoryProto_Notification_Icon* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  image_bitmap_filename_.Swap(&other->image_bitmap_filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_resource_id_package_.Swap(&other->image_resource_id_package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_data_.Swap(&other->image_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_uri_.Swap(&other->image_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(image_type_, other->image_type_);
  swap(image_resource_id_, other->image_resource_id_);
  swap(image_data_length_, other->image_data_length_);
  swap(image_data_offset_, other->image_data_offset_);
}

std::string NotificationHistoryProto_Notification_Icon::GetTypeName() const {
  return "com.android.server.notification.NotificationHistoryProto.Notification.Icon";
}


// ===================================================================

void NotificationHistoryProto_Notification::InitAsDefaultInstance() {
  ::com::android::server::notification::_NotificationHistoryProto_Notification_default_instance_._instance.get_mutable()->icon_ = const_cast< ::com::android::server::notification::NotificationHistoryProto_Notification_Icon*>(
      ::com::android::server::notification::NotificationHistoryProto_Notification_Icon::internal_default_instance());
}
class NotificationHistoryProto_Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationHistoryProto_Notification>()._has_bits_);
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_package_index(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_channel_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_channel_name_index(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_channel_id_index(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_user_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_posted_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::com::android::server::notification::NotificationHistoryProto_Notification_Icon& icon(const NotificationHistoryProto_Notification* msg);
  static void set_has_icon(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_conversation_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_conversation_id_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
};

const ::com::android::server::notification::NotificationHistoryProto_Notification_Icon&
NotificationHistoryProto_Notification::_Internal::icon(const NotificationHistoryProto_Notification* msg) {
  return *msg->icon_;
}
NotificationHistoryProto_Notification::NotificationHistoryProto_Notification()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.notification.NotificationHistoryProto.Notification)
}
NotificationHistoryProto_Notification::NotificationHistoryProto_Notification(const NotificationHistoryProto_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package()) {
    package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  channel_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_name()) {
    channel_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
  }
  channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  conversation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_conversation_id()) {
    conversation_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.conversation_id_);
  }
  if (from.has_icon()) {
    icon_ = new ::com::android::server::notification::NotificationHistoryProto_Notification_Icon(*from.icon_);
  } else {
    icon_ = nullptr;
  }
  ::memcpy(&package_index_, &from.package_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&conversation_id_index_) -
    reinterpret_cast<char*>(&package_index_)) + sizeof(conversation_id_index_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.notification.NotificationHistoryProto.Notification)
}

void NotificationHistoryProto_Notification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  conversation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&icon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conversation_id_index_) -
      reinterpret_cast<char*>(&icon_)) + sizeof(conversation_id_index_));
}

NotificationHistoryProto_Notification::~NotificationHistoryProto_Notification() {
  // @@protoc_insertion_point(destructor:com.android.server.notification.NotificationHistoryProto.Notification)
  SharedDtor();
}

void NotificationHistoryProto_Notification::SharedDtor() {
  package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  conversation_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete icon_;
}

void NotificationHistoryProto_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationHistoryProto_Notification& NotificationHistoryProto_Notification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationHistoryProto_Notification_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  return *internal_default_instance();
}


void NotificationHistoryProto_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.notification.NotificationHistoryProto.Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      package_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      channel_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      channel_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      conversation_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(icon_ != nullptr);
      icon_->Clear();
    }
  }
  package_index_ = 0;
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&channel_name_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&conversation_id_index_) -
        reinterpret_cast<char*>(&channel_name_index_)) + sizeof(conversation_id_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationHistoryProto_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_package(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 package_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_package_index(&has_bits);
          package_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string channel_name = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_channel_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 channel_name_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_channel_name_index(&has_bits);
          channel_name_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string channel_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_channel_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 channel_id_index = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_channel_id_index(&has_bits);
          channel_id_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 user_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_user_id(&has_bits);
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 posted_time_ms = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_posted_time_ms(&has_bits);
          posted_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string title = 10 [(.android.privacy) = {
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_title(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string text = 11 [(.android.privacy) = {
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_text(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.notification.NotificationHistoryProto.Notification.Icon icon = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_icon(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string conversation_id = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_conversation_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 conversation_id_index = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_conversation_id_index(&has_bits);
          conversation_id_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationHistoryProto_Notification::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.notification.NotificationHistoryProto.Notification)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 package_index = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_package_index(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_name = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 channel_name_index = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_channel_name_index(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_name_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 channel_id_index = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_channel_id_index(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_id_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_user_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 posted_time_ms = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_posted_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &posted_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 10 [(.android.privacy) = {
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 11 [(.android.privacy) = {
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.notification.NotificationHistoryProto.Notification.Icon icon = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_icon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string conversation_id = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_conversation_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 conversation_id_index = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_conversation_id_index(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &conversation_id_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.notification.NotificationHistoryProto.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.notification.NotificationHistoryProto.Notification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationHistoryProto_Notification::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.notification.NotificationHistoryProto.Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package(), output);
  }

  // optional int32 package_index = 2;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->package_index(), output);
  }

  // optional string channel_name = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->channel_name(), output);
  }

  // optional int32 channel_name_index = 4;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->channel_name_index(), output);
  }

  // optional string channel_id = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->channel_id(), output);
  }

  // optional int32 channel_id_index = 6;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->channel_id_index(), output);
  }

  // optional int32 uid = 7;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->uid(), output);
  }

  // optional int32 user_id = 8;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->user_id(), output);
  }

  // optional int64 posted_time_ms = 9;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(9, this->posted_time_ms(), output);
  }

  // optional string title = 10 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->title(), output);
  }

  // optional string text = 11 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->text(), output);
  }

  // optional .com.android.server.notification.NotificationHistoryProto.Notification.Icon icon = 12;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      12, _Internal::icon(this), output);
  }

  // optional string conversation_id = 13;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->conversation_id(), output);
  }

  // optional int32 conversation_id_index = 14;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(14, this->conversation_id_index(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.notification.NotificationHistoryProto.Notification)
}

size_t NotificationHistoryProto_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.notification.NotificationHistoryProto.Notification)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string package = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional string channel_name = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->channel_name());
    }

    // optional string channel_id = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional string title = 10 [(.android.privacy) = {
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string text = 11 [(.android.privacy) = {
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional string conversation_id = 13;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->conversation_id());
    }

    // optional .com.android.server.notification.NotificationHistoryProto.Notification.Icon icon = 12;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *icon_);
    }

    // optional int32 package_index = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->package_index());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional int32 channel_name_index = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->channel_name_index());
    }

    // optional int32 channel_id_index = 6;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->channel_id_index());
    }

    // optional int32 uid = 7;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional int64 posted_time_ms = 9;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->posted_time_ms());
    }

    // optional int32 user_id = 8;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

    // optional int32 conversation_id_index = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->conversation_id_index());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationHistoryProto_Notification::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const NotificationHistoryProto_Notification*>(
      &from));
}

void NotificationHistoryProto_Notification::MergeFrom(const NotificationHistoryProto_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.notification.NotificationHistoryProto.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      channel_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      conversation_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.conversation_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_icon()->::com::android::server::notification::NotificationHistoryProto_Notification_Icon::MergeFrom(from.icon());
    }
    if (cached_has_bits & 0x00000080u) {
      package_index_ = from.package_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      channel_name_index_ = from.channel_name_index_;
    }
    if (cached_has_bits & 0x00000200u) {
      channel_id_index_ = from.channel_id_index_;
    }
    if (cached_has_bits & 0x00000400u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000800u) {
      posted_time_ms_ = from.posted_time_ms_;
    }
    if (cached_has_bits & 0x00001000u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00002000u) {
      conversation_id_index_ = from.conversation_id_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotificationHistoryProto_Notification::CopyFrom(const NotificationHistoryProto_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.notification.NotificationHistoryProto.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationHistoryProto_Notification::IsInitialized() const {
  return true;
}

void NotificationHistoryProto_Notification::InternalSwap(NotificationHistoryProto_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_.Swap(&other->package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_name_.Swap(&other->channel_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_id_.Swap(&other->channel_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  conversation_id_.Swap(&other->conversation_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(icon_, other->icon_);
  swap(package_index_, other->package_index_);
  swap(channel_name_index_, other->channel_name_index_);
  swap(channel_id_index_, other->channel_id_index_);
  swap(uid_, other->uid_);
  swap(posted_time_ms_, other->posted_time_ms_);
  swap(user_id_, other->user_id_);
  swap(conversation_id_index_, other->conversation_id_index_);
}

std::string NotificationHistoryProto_Notification::GetTypeName() const {
  return "com.android.server.notification.NotificationHistoryProto.Notification";
}


// ===================================================================

void NotificationHistoryProto::InitAsDefaultInstance() {
  ::com::android::server::notification::_NotificationHistoryProto_default_instance_._instance.get_mutable()->string_pool_ = const_cast< ::com::android::server::notification::NotificationHistoryProto_StringPool*>(
      ::com::android::server::notification::NotificationHistoryProto_StringPool::internal_default_instance());
}
class NotificationHistoryProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationHistoryProto>()._has_bits_);
  static const ::com::android::server::notification::NotificationHistoryProto_StringPool& string_pool(const NotificationHistoryProto* msg);
  static void set_has_string_pool(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_major_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::android::server::notification::NotificationHistoryProto_StringPool&
NotificationHistoryProto::_Internal::string_pool(const NotificationHistoryProto* msg) {
  return *msg->string_pool_;
}
NotificationHistoryProto::NotificationHistoryProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.notification.NotificationHistoryProto)
}
NotificationHistoryProto::NotificationHistoryProto(const NotificationHistoryProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      notification_(from.notification_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_string_pool()) {
    string_pool_ = new ::com::android::server::notification::NotificationHistoryProto_StringPool(*from.string_pool_);
  } else {
    string_pool_ = nullptr;
  }
  major_version_ = from.major_version_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.notification.NotificationHistoryProto)
}

void NotificationHistoryProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  ::memset(&string_pool_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&major_version_) -
      reinterpret_cast<char*>(&string_pool_)) + sizeof(major_version_));
}

NotificationHistoryProto::~NotificationHistoryProto() {
  // @@protoc_insertion_point(destructor:com.android.server.notification.NotificationHistoryProto)
  SharedDtor();
}

void NotificationHistoryProto::SharedDtor() {
  if (this != internal_default_instance()) delete string_pool_;
}

void NotificationHistoryProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationHistoryProto& NotificationHistoryProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fnotificationhistory_2eproto.base);
  return *internal_default_instance();
}


void NotificationHistoryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.notification.NotificationHistoryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notification_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(string_pool_ != nullptr);
    string_pool_->Clear();
  }
  major_version_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationHistoryProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.notification.NotificationHistoryProto.StringPool string_pool = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_string_pool(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 major_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_major_version(&has_bits);
          major_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.notification.NotificationHistoryProto.Notification notification = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_notification(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationHistoryProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.notification.NotificationHistoryProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.notification.NotificationHistoryProto.StringPool string_pool = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_string_pool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 major_version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_major_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.notification.NotificationHistoryProto.Notification notification = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_notification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.notification.NotificationHistoryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.notification.NotificationHistoryProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationHistoryProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.notification.NotificationHistoryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.notification.NotificationHistoryProto.StringPool string_pool = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::string_pool(this), output);
  }

  // optional int32 major_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->major_version(), output);
  }

  // repeated .com.android.server.notification.NotificationHistoryProto.Notification notification = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notification_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->notification(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.notification.NotificationHistoryProto)
}

size_t NotificationHistoryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.notification.NotificationHistoryProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.notification.NotificationHistoryProto.Notification notification = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->notification_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->notification(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .com.android.server.notification.NotificationHistoryProto.StringPool string_pool = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *string_pool_);
    }

    // optional int32 major_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->major_version());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationHistoryProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const NotificationHistoryProto*>(
      &from));
}

void NotificationHistoryProto::MergeFrom(const NotificationHistoryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.notification.NotificationHistoryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notification_.MergeFrom(from.notification_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_string_pool()->::com::android::server::notification::NotificationHistoryProto_StringPool::MergeFrom(from.string_pool());
    }
    if (cached_has_bits & 0x00000002u) {
      major_version_ = from.major_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotificationHistoryProto::CopyFrom(const NotificationHistoryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.notification.NotificationHistoryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationHistoryProto::IsInitialized() const {
  return true;
}

void NotificationHistoryProto::InternalSwap(NotificationHistoryProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&notification_)->InternalSwap(CastToBase(&other->notification_));
  swap(string_pool_, other->string_pool_);
  swap(major_version_, other->major_version_);
}

std::string NotificationHistoryProto::GetTypeName() const {
  return "com.android.server.notification.NotificationHistoryProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace notification
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::notification::NotificationHistoryProto_StringPool* Arena::CreateMaybeMessage< ::com::android::server::notification::NotificationHistoryProto_StringPool >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::notification::NotificationHistoryProto_StringPool >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::notification::NotificationHistoryProto_Notification_Icon* Arena::CreateMaybeMessage< ::com::android::server::notification::NotificationHistoryProto_Notification_Icon >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::notification::NotificationHistoryProto_Notification_Icon >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::notification::NotificationHistoryProto_Notification* Arena::CreateMaybeMessage< ::com::android::server::notification::NotificationHistoryProto_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::notification::NotificationHistoryProto_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::notification::NotificationHistoryProto* Arena::CreateMaybeMessage< ::com::android::server::notification::NotificationHistoryProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::notification::NotificationHistoryProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
