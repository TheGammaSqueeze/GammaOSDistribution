// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/dropbox.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace service {
namespace dropbox {
class DropBoxManagerServiceDumpProto;
class DropBoxManagerServiceDumpProtoDefaultTypeInternal;
extern DropBoxManagerServiceDumpProtoDefaultTypeInternal _DropBoxManagerServiceDumpProto_default_instance_;
class DropBoxManagerServiceDumpProto_Entry;
class DropBoxManagerServiceDumpProto_EntryDefaultTypeInternal;
extern DropBoxManagerServiceDumpProto_EntryDefaultTypeInternal _DropBoxManagerServiceDumpProto_Entry_default_instance_;
}  // namespace dropbox
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::service::dropbox::DropBoxManagerServiceDumpProto* Arena::CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(Arena*);
template<> ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry* Arena::CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace service {
namespace dropbox {

// ===================================================================

class DropBoxManagerServiceDumpProto_Entry :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry) */ {
 public:
  DropBoxManagerServiceDumpProto_Entry();
  virtual ~DropBoxManagerServiceDumpProto_Entry();

  DropBoxManagerServiceDumpProto_Entry(const DropBoxManagerServiceDumpProto_Entry& from);
  DropBoxManagerServiceDumpProto_Entry(DropBoxManagerServiceDumpProto_Entry&& from) noexcept
    : DropBoxManagerServiceDumpProto_Entry() {
    *this = ::std::move(from);
  }

  inline DropBoxManagerServiceDumpProto_Entry& operator=(const DropBoxManagerServiceDumpProto_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline DropBoxManagerServiceDumpProto_Entry& operator=(DropBoxManagerServiceDumpProto_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DropBoxManagerServiceDumpProto_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DropBoxManagerServiceDumpProto_Entry* internal_default_instance() {
    return reinterpret_cast<const DropBoxManagerServiceDumpProto_Entry*>(
               &_DropBoxManagerServiceDumpProto_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DropBoxManagerServiceDumpProto_Entry& a, DropBoxManagerServiceDumpProto_Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(DropBoxManagerServiceDumpProto_Entry* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DropBoxManagerServiceDumpProto_Entry* New() const final {
    return CreateMaybeMessage<DropBoxManagerServiceDumpProto_Entry>(nullptr);
  }

  DropBoxManagerServiceDumpProto_Entry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DropBoxManagerServiceDumpProto_Entry>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DropBoxManagerServiceDumpProto_Entry& from);
  void MergeFrom(const DropBoxManagerServiceDumpProto_Entry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DropBoxManagerServiceDumpProto_Entry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.dropbox.DropBoxManagerServiceDumpProto.Entry";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kTimeMsFieldNumber = 1,
  };
  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);

  // optional int64 time_ms = 1 [(.android.privacy) = {
  bool has_time_ms() const;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto;
};
// -------------------------------------------------------------------

class DropBoxManagerServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.dropbox.DropBoxManagerServiceDumpProto) */ {
 public:
  DropBoxManagerServiceDumpProto();
  virtual ~DropBoxManagerServiceDumpProto();

  DropBoxManagerServiceDumpProto(const DropBoxManagerServiceDumpProto& from);
  DropBoxManagerServiceDumpProto(DropBoxManagerServiceDumpProto&& from) noexcept
    : DropBoxManagerServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline DropBoxManagerServiceDumpProto& operator=(const DropBoxManagerServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline DropBoxManagerServiceDumpProto& operator=(DropBoxManagerServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DropBoxManagerServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DropBoxManagerServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const DropBoxManagerServiceDumpProto*>(
               &_DropBoxManagerServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DropBoxManagerServiceDumpProto& a, DropBoxManagerServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(DropBoxManagerServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DropBoxManagerServiceDumpProto* New() const final {
    return CreateMaybeMessage<DropBoxManagerServiceDumpProto>(nullptr);
  }

  DropBoxManagerServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DropBoxManagerServiceDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DropBoxManagerServiceDumpProto& from);
  void MergeFrom(const DropBoxManagerServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DropBoxManagerServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.dropbox.DropBoxManagerServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef DropBoxManagerServiceDumpProto_Entry Entry;

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .android.service.dropbox.DropBoxManagerServiceDumpProto.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry >*
      mutable_entries();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry& entries(int index) const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:android.service.dropbox.DropBoxManagerServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry > entries_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DropBoxManagerServiceDumpProto_Entry

// optional int64 time_ms = 1 [(.android.privacy) = {
inline bool DropBoxManagerServiceDumpProto_Entry::has_time_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropBoxManagerServiceDumpProto_Entry::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DropBoxManagerServiceDumpProto_Entry::time_ms() const {
  // @@protoc_insertion_point(field_get:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.time_ms)
  return time_ms_;
}
inline void DropBoxManagerServiceDumpProto_Entry::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.time_ms)
}

// optional bytes data = 2;
inline bool DropBoxManagerServiceDumpProto_Entry::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropBoxManagerServiceDumpProto_Entry::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DropBoxManagerServiceDumpProto_Entry::data() const {
  // @@protoc_insertion_point(field_get:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
  return data_.GetNoArena();
}
inline void DropBoxManagerServiceDumpProto_Entry::set_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
}
inline void DropBoxManagerServiceDumpProto_Entry::set_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
}
inline void DropBoxManagerServiceDumpProto_Entry::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
}
inline void DropBoxManagerServiceDumpProto_Entry::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
}
inline std::string* DropBoxManagerServiceDumpProto_Entry::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DropBoxManagerServiceDumpProto_Entry::release_data() {
  // @@protoc_insertion_point(field_release:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DropBoxManagerServiceDumpProto_Entry::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:android.service.dropbox.DropBoxManagerServiceDumpProto.Entry.data)
}

// -------------------------------------------------------------------

// DropBoxManagerServiceDumpProto

// repeated .android.service.dropbox.DropBoxManagerServiceDumpProto.Entry entries = 1;
inline int DropBoxManagerServiceDumpProto::entries_size() const {
  return entries_.size();
}
inline void DropBoxManagerServiceDumpProto::clear_entries() {
  entries_.Clear();
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry* DropBoxManagerServiceDumpProto::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.dropbox.DropBoxManagerServiceDumpProto.entries)
  return entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry >*
DropBoxManagerServiceDumpProto::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:android.service.dropbox.DropBoxManagerServiceDumpProto.entries)
  return &entries_;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry& DropBoxManagerServiceDumpProto::entries(int index) const {
  // @@protoc_insertion_point(field_get:android.service.dropbox.DropBoxManagerServiceDumpProto.entries)
  return entries_.Get(index);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry* DropBoxManagerServiceDumpProto::add_entries() {
  // @@protoc_insertion_point(field_add:android.service.dropbox.DropBoxManagerServiceDumpProto.entries)
  return entries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::dropbox::DropBoxManagerServiceDumpProto_Entry >&
DropBoxManagerServiceDumpProto::entries() const {
  // @@protoc_insertion_point(field_list:android.service.dropbox.DropBoxManagerServiceDumpProto.entries)
  return entries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dropbox
}  // namespace service
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fdropbox_2eproto
