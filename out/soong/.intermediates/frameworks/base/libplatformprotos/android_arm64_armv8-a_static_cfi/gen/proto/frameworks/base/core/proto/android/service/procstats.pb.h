// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/procstats.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "frameworks/base/core/proto/android/util/common.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
#include "frameworks/proto_logging/stats/enums/service/procstats_enum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace service {
namespace procstats {
class PackageAssociationProcessStatsProto;
class PackageAssociationProcessStatsProtoDefaultTypeInternal;
extern PackageAssociationProcessStatsProtoDefaultTypeInternal _PackageAssociationProcessStatsProto_default_instance_;
class PackageAssociationSourceProcessStatsProto;
class PackageAssociationSourceProcessStatsProtoDefaultTypeInternal;
extern PackageAssociationSourceProcessStatsProtoDefaultTypeInternal _PackageAssociationSourceProcessStatsProto_default_instance_;
class PackageAssociationSourceProcessStatsProto_StateStats;
class PackageAssociationSourceProcessStatsProto_StateStatsDefaultTypeInternal;
extern PackageAssociationSourceProcessStatsProto_StateStatsDefaultTypeInternal _PackageAssociationSourceProcessStatsProto_StateStats_default_instance_;
class PackageServiceOperationStatsProto;
class PackageServiceOperationStatsProtoDefaultTypeInternal;
extern PackageServiceOperationStatsProtoDefaultTypeInternal _PackageServiceOperationStatsProto_default_instance_;
class PackageServiceOperationStatsProto_StateStats;
class PackageServiceOperationStatsProto_StateStatsDefaultTypeInternal;
extern PackageServiceOperationStatsProto_StateStatsDefaultTypeInternal _PackageServiceOperationStatsProto_StateStats_default_instance_;
class PackageServiceStatsProto;
class PackageServiceStatsProtoDefaultTypeInternal;
extern PackageServiceStatsProtoDefaultTypeInternal _PackageServiceStatsProto_default_instance_;
class ProcessStatsAssociationProto;
class ProcessStatsAssociationProtoDefaultTypeInternal;
extern ProcessStatsAssociationProtoDefaultTypeInternal _ProcessStatsAssociationProto_default_instance_;
class ProcessStatsAvailablePagesProto;
class ProcessStatsAvailablePagesProtoDefaultTypeInternal;
extern ProcessStatsAvailablePagesProtoDefaultTypeInternal _ProcessStatsAvailablePagesProto_default_instance_;
class ProcessStatsPackageProto;
class ProcessStatsPackageProtoDefaultTypeInternal;
extern ProcessStatsPackageProtoDefaultTypeInternal _ProcessStatsPackageProto_default_instance_;
class ProcessStatsProto;
class ProcessStatsProtoDefaultTypeInternal;
extern ProcessStatsProtoDefaultTypeInternal _ProcessStatsProto_default_instance_;
class ProcessStatsProto_Kill;
class ProcessStatsProto_KillDefaultTypeInternal;
extern ProcessStatsProto_KillDefaultTypeInternal _ProcessStatsProto_Kill_default_instance_;
class ProcessStatsSectionProto;
class ProcessStatsSectionProtoDefaultTypeInternal;
extern ProcessStatsSectionProtoDefaultTypeInternal _ProcessStatsSectionProto_default_instance_;
class ProcessStatsServiceDumpProto;
class ProcessStatsServiceDumpProtoDefaultTypeInternal;
extern ProcessStatsServiceDumpProtoDefaultTypeInternal _ProcessStatsServiceDumpProto_default_instance_;
class ProcessStatsStateProto;
class ProcessStatsStateProtoDefaultTypeInternal;
extern ProcessStatsStateProtoDefaultTypeInternal _ProcessStatsStateProto_default_instance_;
}  // namespace procstats
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::service::procstats::PackageAssociationProcessStatsProto* Arena::CreateMaybeMessage<::android::service::procstats::PackageAssociationProcessStatsProto>(Arena*);
template<> ::android::service::procstats::PackageAssociationSourceProcessStatsProto* Arena::CreateMaybeMessage<::android::service::procstats::PackageAssociationSourceProcessStatsProto>(Arena*);
template<> ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats* Arena::CreateMaybeMessage<::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats>(Arena*);
template<> ::android::service::procstats::PackageServiceOperationStatsProto* Arena::CreateMaybeMessage<::android::service::procstats::PackageServiceOperationStatsProto>(Arena*);
template<> ::android::service::procstats::PackageServiceOperationStatsProto_StateStats* Arena::CreateMaybeMessage<::android::service::procstats::PackageServiceOperationStatsProto_StateStats>(Arena*);
template<> ::android::service::procstats::PackageServiceStatsProto* Arena::CreateMaybeMessage<::android::service::procstats::PackageServiceStatsProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsAssociationProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsAssociationProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsAvailablePagesProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsAvailablePagesProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsPackageProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsPackageProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsProto_Kill* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsProto_Kill>(Arena*);
template<> ::android::service::procstats::ProcessStatsSectionProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsSectionProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsServiceDumpProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsServiceDumpProto>(Arena*);
template<> ::android::service::procstats::ProcessStatsStateProto* Arena::CreateMaybeMessage<::android::service::procstats::ProcessStatsStateProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace service {
namespace procstats {

enum ProcessStatsSectionProto_Status : int {
  ProcessStatsSectionProto_Status_STATUS_UNKNOWN = 0,
  ProcessStatsSectionProto_Status_STATUS_COMPLETE = 1,
  ProcessStatsSectionProto_Status_STATUS_PARTIAL = 2,
  ProcessStatsSectionProto_Status_STATUS_SHUTDOWN = 3,
  ProcessStatsSectionProto_Status_STATUS_SYSPROPS = 4
};
bool ProcessStatsSectionProto_Status_IsValid(int value);
constexpr ProcessStatsSectionProto_Status ProcessStatsSectionProto_Status_Status_MIN = ProcessStatsSectionProto_Status_STATUS_UNKNOWN;
constexpr ProcessStatsSectionProto_Status ProcessStatsSectionProto_Status_Status_MAX = ProcessStatsSectionProto_Status_STATUS_SYSPROPS;
constexpr int ProcessStatsSectionProto_Status_Status_ARRAYSIZE = ProcessStatsSectionProto_Status_Status_MAX + 1;

const std::string& ProcessStatsSectionProto_Status_Name(ProcessStatsSectionProto_Status value);
template<typename T>
inline const std::string& ProcessStatsSectionProto_Status_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProcessStatsSectionProto_Status>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProcessStatsSectionProto_Status_Name.");
  return ProcessStatsSectionProto_Status_Name(static_cast<ProcessStatsSectionProto_Status>(enum_t_value));
}
bool ProcessStatsSectionProto_Status_Parse(
    const std::string& name, ProcessStatsSectionProto_Status* value);
// ===================================================================

class ProcessStatsServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsServiceDumpProto) */ {
 public:
  ProcessStatsServiceDumpProto();
  virtual ~ProcessStatsServiceDumpProto();

  ProcessStatsServiceDumpProto(const ProcessStatsServiceDumpProto& from);
  ProcessStatsServiceDumpProto(ProcessStatsServiceDumpProto&& from) noexcept
    : ProcessStatsServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsServiceDumpProto& operator=(const ProcessStatsServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsServiceDumpProto& operator=(ProcessStatsServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsServiceDumpProto*>(
               &_ProcessStatsServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProcessStatsServiceDumpProto& a, ProcessStatsServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsServiceDumpProto* New() const final {
    return CreateMaybeMessage<ProcessStatsServiceDumpProto>(nullptr);
  }

  ProcessStatsServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsServiceDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsServiceDumpProto& from);
  void MergeFrom(const ProcessStatsServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProcstatsNowFieldNumber = 1,
    kProcstatsOver3HrsFieldNumber = 2,
    kProcstatsOver24HrsFieldNumber = 3,
  };
  // optional .android.service.procstats.ProcessStatsSectionProto procstats_now = 1;
  bool has_procstats_now() const;
  void clear_procstats_now();
  const ::android::service::procstats::ProcessStatsSectionProto& procstats_now() const;
  ::android::service::procstats::ProcessStatsSectionProto* release_procstats_now();
  ::android::service::procstats::ProcessStatsSectionProto* mutable_procstats_now();
  void set_allocated_procstats_now(::android::service::procstats::ProcessStatsSectionProto* procstats_now);

  // optional .android.service.procstats.ProcessStatsSectionProto procstats_over_3hrs = 2;
  bool has_procstats_over_3hrs() const;
  void clear_procstats_over_3hrs();
  const ::android::service::procstats::ProcessStatsSectionProto& procstats_over_3hrs() const;
  ::android::service::procstats::ProcessStatsSectionProto* release_procstats_over_3hrs();
  ::android::service::procstats::ProcessStatsSectionProto* mutable_procstats_over_3hrs();
  void set_allocated_procstats_over_3hrs(::android::service::procstats::ProcessStatsSectionProto* procstats_over_3hrs);

  // optional .android.service.procstats.ProcessStatsSectionProto procstats_over_24hrs = 3;
  bool has_procstats_over_24hrs() const;
  void clear_procstats_over_24hrs();
  const ::android::service::procstats::ProcessStatsSectionProto& procstats_over_24hrs() const;
  ::android::service::procstats::ProcessStatsSectionProto* release_procstats_over_24hrs();
  ::android::service::procstats::ProcessStatsSectionProto* mutable_procstats_over_24hrs();
  void set_allocated_procstats_over_24hrs(::android::service::procstats::ProcessStatsSectionProto* procstats_over_24hrs);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::service::procstats::ProcessStatsSectionProto* procstats_now_;
  ::android::service::procstats::ProcessStatsSectionProto* procstats_over_3hrs_;
  ::android::service::procstats::ProcessStatsSectionProto* procstats_over_24hrs_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsSectionProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsSectionProto) */ {
 public:
  ProcessStatsSectionProto();
  virtual ~ProcessStatsSectionProto();

  ProcessStatsSectionProto(const ProcessStatsSectionProto& from);
  ProcessStatsSectionProto(ProcessStatsSectionProto&& from) noexcept
    : ProcessStatsSectionProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsSectionProto& operator=(const ProcessStatsSectionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsSectionProto& operator=(ProcessStatsSectionProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsSectionProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsSectionProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsSectionProto*>(
               &_ProcessStatsSectionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProcessStatsSectionProto& a, ProcessStatsSectionProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsSectionProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsSectionProto* New() const final {
    return CreateMaybeMessage<ProcessStatsSectionProto>(nullptr);
  }

  ProcessStatsSectionProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsSectionProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsSectionProto& from);
  void MergeFrom(const ProcessStatsSectionProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsSectionProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsSectionProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef ProcessStatsSectionProto_Status Status;
  static constexpr Status STATUS_UNKNOWN =
    ProcessStatsSectionProto_Status_STATUS_UNKNOWN;
  static constexpr Status STATUS_COMPLETE =
    ProcessStatsSectionProto_Status_STATUS_COMPLETE;
  static constexpr Status STATUS_PARTIAL =
    ProcessStatsSectionProto_Status_STATUS_PARTIAL;
  static constexpr Status STATUS_SHUTDOWN =
    ProcessStatsSectionProto_Status_STATUS_SHUTDOWN;
  static constexpr Status STATUS_SYSPROPS =
    ProcessStatsSectionProto_Status_STATUS_SYSPROPS;
  static inline bool Status_IsValid(int value) {
    return ProcessStatsSectionProto_Status_IsValid(value);
  }
  static constexpr Status Status_MIN =
    ProcessStatsSectionProto_Status_Status_MIN;
  static constexpr Status Status_MAX =
    ProcessStatsSectionProto_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE =
    ProcessStatsSectionProto_Status_Status_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Status_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Status>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Status_Name.");
    return ProcessStatsSectionProto_Status_Name(enum_t_value);
  }
  static inline bool Status_Parse(const std::string& name,
      Status* value) {
    return ProcessStatsSectionProto_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 7,
    kProcessStatsFieldNumber = 8,
    kPackageStatsFieldNumber = 9,
    kAvailablePagesFieldNumber = 10,
    kRuntimeFieldNumber = 5,
    kStartRealtimeMsFieldNumber = 1,
    kEndRealtimeMsFieldNumber = 2,
    kStartUptimeMsFieldNumber = 3,
    kEndUptimeMsFieldNumber = 4,
    kHasSwappedPssFieldNumber = 6,
  };
  // repeated .android.service.procstats.ProcessStatsSectionProto.Status status = 7;
  int status_size() const;
  void clear_status();
  ::android::service::procstats::ProcessStatsSectionProto_Status status(int index) const;
  void set_status(int index, ::android::service::procstats::ProcessStatsSectionProto_Status value);
  void add_status(::android::service::procstats::ProcessStatsSectionProto_Status value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& status() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_status();

  // repeated .android.service.procstats.ProcessStatsProto process_stats = 8;
  int process_stats_size() const;
  void clear_process_stats();
  ::android::service::procstats::ProcessStatsProto* mutable_process_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >*
      mutable_process_stats();
  const ::android::service::procstats::ProcessStatsProto& process_stats(int index) const;
  ::android::service::procstats::ProcessStatsProto* add_process_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >&
      process_stats() const;

  // repeated .android.service.procstats.ProcessStatsPackageProto package_stats = 9;
  int package_stats_size() const;
  void clear_package_stats();
  ::android::service::procstats::ProcessStatsPackageProto* mutable_package_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsPackageProto >*
      mutable_package_stats();
  const ::android::service::procstats::ProcessStatsPackageProto& package_stats(int index) const;
  ::android::service::procstats::ProcessStatsPackageProto* add_package_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsPackageProto >&
      package_stats() const;

  // repeated .android.service.procstats.ProcessStatsAvailablePagesProto available_pages = 10;
  int available_pages_size() const;
  void clear_available_pages();
  ::android::service::procstats::ProcessStatsAvailablePagesProto* mutable_available_pages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAvailablePagesProto >*
      mutable_available_pages();
  const ::android::service::procstats::ProcessStatsAvailablePagesProto& available_pages(int index) const;
  ::android::service::procstats::ProcessStatsAvailablePagesProto* add_available_pages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAvailablePagesProto >&
      available_pages() const;

  // optional string runtime = 5;
  bool has_runtime() const;
  void clear_runtime();
  const std::string& runtime() const;
  void set_runtime(const std::string& value);
  void set_runtime(std::string&& value);
  void set_runtime(const char* value);
  void set_runtime(const char* value, size_t size);
  std::string* mutable_runtime();
  std::string* release_runtime();
  void set_allocated_runtime(std::string* runtime);

  // optional int64 start_realtime_ms = 1;
  bool has_start_realtime_ms() const;
  void clear_start_realtime_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 start_realtime_ms() const;
  void set_start_realtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 end_realtime_ms = 2;
  bool has_end_realtime_ms() const;
  void clear_end_realtime_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 end_realtime_ms() const;
  void set_end_realtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 start_uptime_ms = 3;
  bool has_start_uptime_ms() const;
  void clear_start_uptime_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 start_uptime_ms() const;
  void set_start_uptime_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 end_uptime_ms = 4;
  bool has_end_uptime_ms() const;
  void clear_end_uptime_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 end_uptime_ms() const;
  void set_end_uptime_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool has_swapped_pss = 6;
  bool has_has_swapped_pss() const;
  void clear_has_swapped_pss();
  bool has_swapped_pss() const;
  void set_has_swapped_pss(bool value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsSectionProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto > process_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsPackageProto > package_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAvailablePagesProto > available_pages_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr runtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_realtime_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 end_realtime_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_uptime_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 end_uptime_ms_;
  bool has_swapped_pss_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsAvailablePagesProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsAvailablePagesProto) */ {
 public:
  ProcessStatsAvailablePagesProto();
  virtual ~ProcessStatsAvailablePagesProto();

  ProcessStatsAvailablePagesProto(const ProcessStatsAvailablePagesProto& from);
  ProcessStatsAvailablePagesProto(ProcessStatsAvailablePagesProto&& from) noexcept
    : ProcessStatsAvailablePagesProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsAvailablePagesProto& operator=(const ProcessStatsAvailablePagesProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsAvailablePagesProto& operator=(ProcessStatsAvailablePagesProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsAvailablePagesProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsAvailablePagesProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsAvailablePagesProto*>(
               &_ProcessStatsAvailablePagesProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProcessStatsAvailablePagesProto& a, ProcessStatsAvailablePagesProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsAvailablePagesProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsAvailablePagesProto* New() const final {
    return CreateMaybeMessage<ProcessStatsAvailablePagesProto>(nullptr);
  }

  ProcessStatsAvailablePagesProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsAvailablePagesProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsAvailablePagesProto& from);
  void MergeFrom(const ProcessStatsAvailablePagesProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsAvailablePagesProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsAvailablePagesProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagesPerOrderFieldNumber = 4,
    kZoneFieldNumber = 2,
    kLabelFieldNumber = 3,
    kNodeFieldNumber = 1,
  };
  // repeated int32 pages_per_order = 4;
  int pages_per_order_size() const;
  void clear_pages_per_order();
  ::PROTOBUF_NAMESPACE_ID::int32 pages_per_order(int index) const;
  void set_pages_per_order(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_pages_per_order(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      pages_per_order() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_pages_per_order();

  // optional string zone = 2;
  bool has_zone() const;
  void clear_zone();
  const std::string& zone() const;
  void set_zone(const std::string& value);
  void set_zone(std::string&& value);
  void set_zone(const char* value);
  void set_zone(const char* value, size_t size);
  std::string* mutable_zone();
  std::string* release_zone();
  void set_allocated_zone(std::string* zone);

  // optional string label = 3;
  bool has_label() const;
  void clear_label();
  const std::string& label() const;
  void set_label(const std::string& value);
  void set_label(std::string&& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  std::string* mutable_label();
  std::string* release_label();
  void set_allocated_label(std::string* label);

  // optional int32 node = 1;
  bool has_node() const;
  void clear_node();
  ::PROTOBUF_NAMESPACE_ID::int32 node() const;
  void set_node(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsAvailablePagesProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > pages_per_order_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr label_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsStateProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsStateProto) */ {
 public:
  ProcessStatsStateProto();
  virtual ~ProcessStatsStateProto();

  ProcessStatsStateProto(const ProcessStatsStateProto& from);
  ProcessStatsStateProto(ProcessStatsStateProto&& from) noexcept
    : ProcessStatsStateProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsStateProto& operator=(const ProcessStatsStateProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsStateProto& operator=(ProcessStatsStateProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsStateProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsStateProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsStateProto*>(
               &_ProcessStatsStateProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProcessStatsStateProto& a, ProcessStatsStateProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsStateProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsStateProto* New() const final {
    return CreateMaybeMessage<ProcessStatsStateProto>(nullptr);
  }

  ProcessStatsStateProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsStateProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsStateProto& from);
  void MergeFrom(const ProcessStatsStateProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsStateProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsStateProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPssFieldNumber = 6,
    kUssFieldNumber = 7,
    kRssFieldNumber = 8,
    kScreenStateFieldNumber = 1,
    kMemoryStateFieldNumber = 2,
    kDurationMsFieldNumber = 4,
    kProcessStateFieldNumber = 3,
    kSampleSizeFieldNumber = 5,
    kRealtimeDurationMsFieldNumber = 9,
    kProcessStateAggregatedFieldNumber = 10,
    kDurationMinutesFieldNumber = 11,
    kRealtimeDurationMinutesFieldNumber = 12,
  };
  // optional .android.util.AggStats pss = 6;
  bool has_pss() const;
  void clear_pss();
  const ::android::util::AggStats& pss() const;
  ::android::util::AggStats* release_pss();
  ::android::util::AggStats* mutable_pss();
  void set_allocated_pss(::android::util::AggStats* pss);

  // optional .android.util.AggStats uss = 7;
  bool has_uss() const;
  void clear_uss();
  const ::android::util::AggStats& uss() const;
  ::android::util::AggStats* release_uss();
  ::android::util::AggStats* mutable_uss();
  void set_allocated_uss(::android::util::AggStats* uss);

  // optional .android.util.AggStats rss = 8;
  bool has_rss() const;
  void clear_rss();
  const ::android::util::AggStats& rss() const;
  ::android::util::AggStats* release_rss();
  ::android::util::AggStats* mutable_rss();
  void set_allocated_rss(::android::util::AggStats* rss);

  // optional .android.service.procstats.ScreenState screen_state = 1;
  bool has_screen_state() const;
  void clear_screen_state();
  ::android::service::procstats::ScreenState screen_state() const;
  void set_screen_state(::android::service::procstats::ScreenState value);

  // optional .android.service.procstats.MemoryState memory_state = 2;
  bool has_memory_state() const;
  void clear_memory_state();
  ::android::service::procstats::MemoryState memory_state() const;
  void set_memory_state(::android::service::procstats::MemoryState value);

  // optional int64 duration_ms = 4 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_duration_ms() const;
  PROTOBUF_DEPRECATED void clear_duration_ms();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int64 duration_ms() const;
  PROTOBUF_DEPRECATED void set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .android.service.procstats.ProcessState process_state = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_process_state() const;
  PROTOBUF_DEPRECATED void clear_process_state();
  PROTOBUF_DEPRECATED ::android::service::procstats::ProcessState process_state() const;
  PROTOBUF_DEPRECATED void set_process_state(::android::service::procstats::ProcessState value);

  // optional int32 sample_size = 5;
  bool has_sample_size() const;
  void clear_sample_size();
  ::PROTOBUF_NAMESPACE_ID::int32 sample_size() const;
  void set_sample_size(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 realtime_duration_ms = 9 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_realtime_duration_ms() const;
  PROTOBUF_DEPRECATED void clear_realtime_duration_ms();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int64 realtime_duration_ms() const;
  PROTOBUF_DEPRECATED void set_realtime_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .android.service.procstats.AggregatedProcessState process_state_aggregated = 10;
  bool has_process_state_aggregated() const;
  void clear_process_state_aggregated();
  ::android::service::procstats::AggregatedProcessState process_state_aggregated() const;
  void set_process_state_aggregated(::android::service::procstats::AggregatedProcessState value);

  // optional int32 duration_minutes = 11;
  bool has_duration_minutes() const;
  void clear_duration_minutes();
  ::PROTOBUF_NAMESPACE_ID::int32 duration_minutes() const;
  void set_duration_minutes(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 realtime_duration_minutes = 12;
  bool has_realtime_duration_minutes() const;
  void clear_realtime_duration_minutes();
  ::PROTOBUF_NAMESPACE_ID::int32 realtime_duration_minutes() const;
  void set_realtime_duration_minutes(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsStateProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::util::AggStats* pss_;
  ::android::util::AggStats* uss_;
  ::android::util::AggStats* rss_;
  int screen_state_;
  int memory_state_;
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms_;
  int process_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 sample_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 realtime_duration_ms_;
  int process_state_aggregated_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_minutes_;
  ::PROTOBUF_NAMESPACE_ID::int32 realtime_duration_minutes_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsProto_Kill :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsProto.Kill) */ {
 public:
  ProcessStatsProto_Kill();
  virtual ~ProcessStatsProto_Kill();

  ProcessStatsProto_Kill(const ProcessStatsProto_Kill& from);
  ProcessStatsProto_Kill(ProcessStatsProto_Kill&& from) noexcept
    : ProcessStatsProto_Kill() {
    *this = ::std::move(from);
  }

  inline ProcessStatsProto_Kill& operator=(const ProcessStatsProto_Kill& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsProto_Kill& operator=(ProcessStatsProto_Kill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsProto_Kill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsProto_Kill* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsProto_Kill*>(
               &_ProcessStatsProto_Kill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ProcessStatsProto_Kill& a, ProcessStatsProto_Kill& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsProto_Kill* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsProto_Kill* New() const final {
    return CreateMaybeMessage<ProcessStatsProto_Kill>(nullptr);
  }

  ProcessStatsProto_Kill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsProto_Kill>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsProto_Kill& from);
  void MergeFrom(const ProcessStatsProto_Kill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsProto_Kill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsProto.Kill";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCachedPssFieldNumber = 3,
    kCpuFieldNumber = 1,
    kCachedFieldNumber = 2,
  };
  // optional .android.util.AggStats cached_pss = 3;
  bool has_cached_pss() const;
  void clear_cached_pss();
  const ::android::util::AggStats& cached_pss() const;
  ::android::util::AggStats* release_cached_pss();
  ::android::util::AggStats* mutable_cached_pss();
  void set_allocated_cached_pss(::android::util::AggStats* cached_pss);

  // optional int32 cpu = 1;
  bool has_cpu() const;
  void clear_cpu();
  ::PROTOBUF_NAMESPACE_ID::int32 cpu() const;
  void set_cpu(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 cached = 2;
  bool has_cached() const;
  void clear_cached();
  ::PROTOBUF_NAMESPACE_ID::int32 cached() const;
  void set_cached(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsProto.Kill)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::util::AggStats* cached_pss_;
  ::PROTOBUF_NAMESPACE_ID::int32 cpu_;
  ::PROTOBUF_NAMESPACE_ID::int32 cached_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsProto) */ {
 public:
  ProcessStatsProto();
  virtual ~ProcessStatsProto();

  ProcessStatsProto(const ProcessStatsProto& from);
  ProcessStatsProto(ProcessStatsProto&& from) noexcept
    : ProcessStatsProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsProto& operator=(const ProcessStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsProto& operator=(ProcessStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsProto*>(
               &_ProcessStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ProcessStatsProto& a, ProcessStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsProto* New() const final {
    return CreateMaybeMessage<ProcessStatsProto>(nullptr);
  }

  ProcessStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsProto& from);
  void MergeFrom(const ProcessStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef ProcessStatsProto_Kill Kill;

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 5,
    kAssocsFieldNumber = 7,
    kProcessFieldNumber = 1,
    kKillFieldNumber = 3,
    kTotalRunningStateFieldNumber = 6,
    kUidFieldNumber = 2,
  };
  // repeated .android.service.procstats.ProcessStatsStateProto states = 5;
  int states_size() const;
  void clear_states();
  ::android::service::procstats::ProcessStatsStateProto* mutable_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsStateProto >*
      mutable_states();
  const ::android::service::procstats::ProcessStatsStateProto& states(int index) const;
  ::android::service::procstats::ProcessStatsStateProto* add_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsStateProto >&
      states() const;

  // repeated .android.service.procstats.ProcessStatsAssociationProto assocs = 7;
  int assocs_size() const;
  void clear_assocs();
  ::android::service::procstats::ProcessStatsAssociationProto* mutable_assocs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAssociationProto >*
      mutable_assocs();
  const ::android::service::procstats::ProcessStatsAssociationProto& assocs(int index) const;
  ::android::service::procstats::ProcessStatsAssociationProto* add_assocs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAssociationProto >&
      assocs() const;

  // optional string process = 1;
  bool has_process() const;
  void clear_process();
  const std::string& process() const;
  void set_process(const std::string& value);
  void set_process(std::string&& value);
  void set_process(const char* value);
  void set_process(const char* value, size_t size);
  std::string* mutable_process();
  std::string* release_process();
  void set_allocated_process(std::string* process);

  // optional .android.service.procstats.ProcessStatsProto.Kill kill = 3;
  bool has_kill() const;
  void clear_kill();
  const ::android::service::procstats::ProcessStatsProto_Kill& kill() const;
  ::android::service::procstats::ProcessStatsProto_Kill* release_kill();
  ::android::service::procstats::ProcessStatsProto_Kill* mutable_kill();
  void set_allocated_kill(::android::service::procstats::ProcessStatsProto_Kill* kill);

  // optional .android.service.procstats.ProcessStatsStateProto total_running_state = 6;
  bool has_total_running_state() const;
  void clear_total_running_state();
  const ::android::service::procstats::ProcessStatsStateProto& total_running_state() const;
  ::android::service::procstats::ProcessStatsStateProto* release_total_running_state();
  ::android::service::procstats::ProcessStatsStateProto* mutable_total_running_state();
  void set_allocated_total_running_state(::android::service::procstats::ProcessStatsStateProto* total_running_state);

  // optional int32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsStateProto > states_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAssociationProto > assocs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr process_;
  ::android::service::procstats::ProcessStatsProto_Kill* kill_;
  ::android::service::procstats::ProcessStatsStateProto* total_running_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsAssociationProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsAssociationProto) */ {
 public:
  ProcessStatsAssociationProto();
  virtual ~ProcessStatsAssociationProto();

  ProcessStatsAssociationProto(const ProcessStatsAssociationProto& from);
  ProcessStatsAssociationProto(ProcessStatsAssociationProto&& from) noexcept
    : ProcessStatsAssociationProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsAssociationProto& operator=(const ProcessStatsAssociationProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsAssociationProto& operator=(ProcessStatsAssociationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsAssociationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsAssociationProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsAssociationProto*>(
               &_ProcessStatsAssociationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ProcessStatsAssociationProto& a, ProcessStatsAssociationProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsAssociationProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsAssociationProto* New() const final {
    return CreateMaybeMessage<ProcessStatsAssociationProto>(nullptr);
  }

  ProcessStatsAssociationProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsAssociationProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsAssociationProto& from);
  void MergeFrom(const ProcessStatsAssociationProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsAssociationProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsAssociationProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAssocProcessNameFieldNumber = 1,
    kAssocPackageNameFieldNumber = 2,
    kTotalCountFieldNumber = 3,
    kTotalDurationSecsFieldNumber = 4,
    kAssocUidFieldNumber = 5,
  };
  // optional string assoc_process_name = 1;
  bool has_assoc_process_name() const;
  void clear_assoc_process_name();
  const std::string& assoc_process_name() const;
  void set_assoc_process_name(const std::string& value);
  void set_assoc_process_name(std::string&& value);
  void set_assoc_process_name(const char* value);
  void set_assoc_process_name(const char* value, size_t size);
  std::string* mutable_assoc_process_name();
  std::string* release_assoc_process_name();
  void set_allocated_assoc_process_name(std::string* assoc_process_name);

  // optional string assoc_package_name = 2 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_assoc_package_name() const;
  PROTOBUF_DEPRECATED void clear_assoc_package_name();
  PROTOBUF_DEPRECATED const std::string& assoc_package_name() const;
  PROTOBUF_DEPRECATED void set_assoc_package_name(const std::string& value);
  PROTOBUF_DEPRECATED void set_assoc_package_name(std::string&& value);
  PROTOBUF_DEPRECATED void set_assoc_package_name(const char* value);
  PROTOBUF_DEPRECATED void set_assoc_package_name(const char* value, size_t size);
  PROTOBUF_DEPRECATED std::string* mutable_assoc_package_name();
  PROTOBUF_DEPRECATED std::string* release_assoc_package_name();
  PROTOBUF_DEPRECATED void set_allocated_assoc_package_name(std::string* assoc_package_name);

  // optional int32 total_count = 3;
  bool has_total_count() const;
  void clear_total_count();
  ::PROTOBUF_NAMESPACE_ID::int32 total_count() const;
  void set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_duration_secs = 4;
  bool has_total_duration_secs() const;
  void clear_total_duration_secs();
  ::PROTOBUF_NAMESPACE_ID::int32 total_duration_secs() const;
  void set_total_duration_secs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 assoc_uid = 5;
  bool has_assoc_uid() const;
  void clear_assoc_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 assoc_uid() const;
  void set_assoc_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsAssociationProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr assoc_process_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr assoc_package_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_duration_secs_;
  ::PROTOBUF_NAMESPACE_ID::int32 assoc_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class PackageServiceOperationStatsProto_StateStats :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.PackageServiceOperationStatsProto.StateStats) */ {
 public:
  PackageServiceOperationStatsProto_StateStats();
  virtual ~PackageServiceOperationStatsProto_StateStats();

  PackageServiceOperationStatsProto_StateStats(const PackageServiceOperationStatsProto_StateStats& from);
  PackageServiceOperationStatsProto_StateStats(PackageServiceOperationStatsProto_StateStats&& from) noexcept
    : PackageServiceOperationStatsProto_StateStats() {
    *this = ::std::move(from);
  }

  inline PackageServiceOperationStatsProto_StateStats& operator=(const PackageServiceOperationStatsProto_StateStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageServiceOperationStatsProto_StateStats& operator=(PackageServiceOperationStatsProto_StateStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackageServiceOperationStatsProto_StateStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageServiceOperationStatsProto_StateStats* internal_default_instance() {
    return reinterpret_cast<const PackageServiceOperationStatsProto_StateStats*>(
               &_PackageServiceOperationStatsProto_StateStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PackageServiceOperationStatsProto_StateStats& a, PackageServiceOperationStatsProto_StateStats& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageServiceOperationStatsProto_StateStats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackageServiceOperationStatsProto_StateStats* New() const final {
    return CreateMaybeMessage<PackageServiceOperationStatsProto_StateStats>(nullptr);
  }

  PackageServiceOperationStatsProto_StateStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackageServiceOperationStatsProto_StateStats>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackageServiceOperationStatsProto_StateStats& from);
  void MergeFrom(const PackageServiceOperationStatsProto_StateStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackageServiceOperationStatsProto_StateStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.PackageServiceOperationStatsProto.StateStats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScreenStateFieldNumber = 1,
    kMemoryStateFieldNumber = 2,
    kDurationMsFieldNumber = 3,
    kRealtimeDurationMsFieldNumber = 4,
  };
  // optional .android.service.procstats.ScreenState screen_state = 1;
  bool has_screen_state() const;
  void clear_screen_state();
  ::android::service::procstats::ScreenState screen_state() const;
  void set_screen_state(::android::service::procstats::ScreenState value);

  // optional .android.service.procstats.MemoryState memory_state = 2;
  bool has_memory_state() const;
  void clear_memory_state();
  ::android::service::procstats::MemoryState memory_state() const;
  void set_memory_state(::android::service::procstats::MemoryState value);

  // optional int64 duration_ms = 3;
  bool has_duration_ms() const;
  void clear_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms() const;
  void set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 realtime_duration_ms = 4;
  bool has_realtime_duration_ms() const;
  void clear_realtime_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 realtime_duration_ms() const;
  void set_realtime_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.PackageServiceOperationStatsProto.StateStats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int screen_state_;
  int memory_state_;
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 realtime_duration_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class PackageServiceOperationStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.PackageServiceOperationStatsProto) */ {
 public:
  PackageServiceOperationStatsProto();
  virtual ~PackageServiceOperationStatsProto();

  PackageServiceOperationStatsProto(const PackageServiceOperationStatsProto& from);
  PackageServiceOperationStatsProto(PackageServiceOperationStatsProto&& from) noexcept
    : PackageServiceOperationStatsProto() {
    *this = ::std::move(from);
  }

  inline PackageServiceOperationStatsProto& operator=(const PackageServiceOperationStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageServiceOperationStatsProto& operator=(PackageServiceOperationStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackageServiceOperationStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageServiceOperationStatsProto* internal_default_instance() {
    return reinterpret_cast<const PackageServiceOperationStatsProto*>(
               &_PackageServiceOperationStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PackageServiceOperationStatsProto& a, PackageServiceOperationStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageServiceOperationStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackageServiceOperationStatsProto* New() const final {
    return CreateMaybeMessage<PackageServiceOperationStatsProto>(nullptr);
  }

  PackageServiceOperationStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackageServiceOperationStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackageServiceOperationStatsProto& from);
  void MergeFrom(const PackageServiceOperationStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackageServiceOperationStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.PackageServiceOperationStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PackageServiceOperationStatsProto_StateStats StateStats;

  // accessors -------------------------------------------------------

  enum : int {
    kStateStatsFieldNumber = 3,
    kOperationFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // repeated .android.service.procstats.PackageServiceOperationStatsProto.StateStats state_stats = 3;
  int state_stats_size() const;
  void clear_state_stats();
  ::android::service::procstats::PackageServiceOperationStatsProto_StateStats* mutable_state_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto_StateStats >*
      mutable_state_stats();
  const ::android::service::procstats::PackageServiceOperationStatsProto_StateStats& state_stats(int index) const;
  ::android::service::procstats::PackageServiceOperationStatsProto_StateStats* add_state_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto_StateStats >&
      state_stats() const;

  // optional .android.service.procstats.ServiceOperationState operation = 1;
  bool has_operation() const;
  void clear_operation();
  ::android::service::procstats::ServiceOperationState operation() const;
  void set_operation(::android::service::procstats::ServiceOperationState value);

  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.PackageServiceOperationStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto_StateStats > state_stats_;
  int operation_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class PackageServiceStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.PackageServiceStatsProto) */ {
 public:
  PackageServiceStatsProto();
  virtual ~PackageServiceStatsProto();

  PackageServiceStatsProto(const PackageServiceStatsProto& from);
  PackageServiceStatsProto(PackageServiceStatsProto&& from) noexcept
    : PackageServiceStatsProto() {
    *this = ::std::move(from);
  }

  inline PackageServiceStatsProto& operator=(const PackageServiceStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageServiceStatsProto& operator=(PackageServiceStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackageServiceStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageServiceStatsProto* internal_default_instance() {
    return reinterpret_cast<const PackageServiceStatsProto*>(
               &_PackageServiceStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PackageServiceStatsProto& a, PackageServiceStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageServiceStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackageServiceStatsProto* New() const final {
    return CreateMaybeMessage<PackageServiceStatsProto>(nullptr);
  }

  PackageServiceStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackageServiceStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackageServiceStatsProto& from);
  void MergeFrom(const PackageServiceStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackageServiceStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.PackageServiceStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationStatsFieldNumber = 2,
    kServiceNameFieldNumber = 1,
  };
  // repeated .android.service.procstats.PackageServiceOperationStatsProto operation_stats = 2;
  int operation_stats_size() const;
  void clear_operation_stats();
  ::android::service::procstats::PackageServiceOperationStatsProto* mutable_operation_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto >*
      mutable_operation_stats();
  const ::android::service::procstats::PackageServiceOperationStatsProto& operation_stats(int index) const;
  ::android::service::procstats::PackageServiceOperationStatsProto* add_operation_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto >&
      operation_stats() const;

  // optional string service_name = 1;
  bool has_service_name() const;
  void clear_service_name();
  const std::string& service_name() const;
  void set_service_name(const std::string& value);
  void set_service_name(std::string&& value);
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  std::string* mutable_service_name();
  std::string* release_service_name();
  void set_allocated_service_name(std::string* service_name);

  // @@protoc_insertion_point(class_scope:android.service.procstats.PackageServiceStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto > operation_stats_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr service_name_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class PackageAssociationSourceProcessStatsProto_StateStats :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats) */ {
 public:
  PackageAssociationSourceProcessStatsProto_StateStats();
  virtual ~PackageAssociationSourceProcessStatsProto_StateStats();

  PackageAssociationSourceProcessStatsProto_StateStats(const PackageAssociationSourceProcessStatsProto_StateStats& from);
  PackageAssociationSourceProcessStatsProto_StateStats(PackageAssociationSourceProcessStatsProto_StateStats&& from) noexcept
    : PackageAssociationSourceProcessStatsProto_StateStats() {
    *this = ::std::move(from);
  }

  inline PackageAssociationSourceProcessStatsProto_StateStats& operator=(const PackageAssociationSourceProcessStatsProto_StateStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageAssociationSourceProcessStatsProto_StateStats& operator=(PackageAssociationSourceProcessStatsProto_StateStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackageAssociationSourceProcessStatsProto_StateStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageAssociationSourceProcessStatsProto_StateStats* internal_default_instance() {
    return reinterpret_cast<const PackageAssociationSourceProcessStatsProto_StateStats*>(
               &_PackageAssociationSourceProcessStatsProto_StateStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PackageAssociationSourceProcessStatsProto_StateStats& a, PackageAssociationSourceProcessStatsProto_StateStats& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageAssociationSourceProcessStatsProto_StateStats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackageAssociationSourceProcessStatsProto_StateStats* New() const final {
    return CreateMaybeMessage<PackageAssociationSourceProcessStatsProto_StateStats>(nullptr);
  }

  PackageAssociationSourceProcessStatsProto_StateStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackageAssociationSourceProcessStatsProto_StateStats>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackageAssociationSourceProcessStatsProto_StateStats& from);
  void MergeFrom(const PackageAssociationSourceProcessStatsProto_StateStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackageAssociationSourceProcessStatsProto_StateStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationMsFieldNumber = 2,
    kRealtimeDurationMsFieldNumber = 3,
    kProcessStateFieldNumber = 1,
  };
  // optional int64 duration_ms = 2;
  bool has_duration_ms() const;
  void clear_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms() const;
  void set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 realtime_duration_ms = 3;
  bool has_realtime_duration_ms() const;
  void clear_realtime_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 realtime_duration_ms() const;
  void set_realtime_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .android.service.procstats.ProcessState process_state = 1;
  bool has_process_state() const;
  void clear_process_state();
  ::android::service::procstats::ProcessState process_state() const;
  void set_process_state(::android::service::procstats::ProcessState value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 realtime_duration_ms_;
  int process_state_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class PackageAssociationSourceProcessStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.PackageAssociationSourceProcessStatsProto) */ {
 public:
  PackageAssociationSourceProcessStatsProto();
  virtual ~PackageAssociationSourceProcessStatsProto();

  PackageAssociationSourceProcessStatsProto(const PackageAssociationSourceProcessStatsProto& from);
  PackageAssociationSourceProcessStatsProto(PackageAssociationSourceProcessStatsProto&& from) noexcept
    : PackageAssociationSourceProcessStatsProto() {
    *this = ::std::move(from);
  }

  inline PackageAssociationSourceProcessStatsProto& operator=(const PackageAssociationSourceProcessStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageAssociationSourceProcessStatsProto& operator=(PackageAssociationSourceProcessStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackageAssociationSourceProcessStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageAssociationSourceProcessStatsProto* internal_default_instance() {
    return reinterpret_cast<const PackageAssociationSourceProcessStatsProto*>(
               &_PackageAssociationSourceProcessStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(PackageAssociationSourceProcessStatsProto& a, PackageAssociationSourceProcessStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageAssociationSourceProcessStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackageAssociationSourceProcessStatsProto* New() const final {
    return CreateMaybeMessage<PackageAssociationSourceProcessStatsProto>(nullptr);
  }

  PackageAssociationSourceProcessStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackageAssociationSourceProcessStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackageAssociationSourceProcessStatsProto& from);
  void MergeFrom(const PackageAssociationSourceProcessStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackageAssociationSourceProcessStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.PackageAssociationSourceProcessStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PackageAssociationSourceProcessStatsProto_StateStats StateStats;

  // accessors -------------------------------------------------------

  enum : int {
    kActiveStateStatsFieldNumber = 6,
    kProcessNameFieldNumber = 2,
    kPackageNameFieldNumber = 7,
    kProcessUidFieldNumber = 1,
    kTotalCountFieldNumber = 3,
    kTotalDurationMsFieldNumber = 4,
    kActiveCountFieldNumber = 5,
  };
  // repeated .android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats active_state_stats = 6;
  int active_state_stats_size() const;
  void clear_active_state_stats();
  ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats* mutable_active_state_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats >*
      mutable_active_state_stats();
  const ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats& active_state_stats(int index) const;
  ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats* add_active_state_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats >&
      active_state_stats() const;

  // optional string process_name = 2;
  bool has_process_name() const;
  void clear_process_name();
  const std::string& process_name() const;
  void set_process_name(const std::string& value);
  void set_process_name(std::string&& value);
  void set_process_name(const char* value);
  void set_process_name(const char* value, size_t size);
  std::string* mutable_process_name();
  std::string* release_process_name();
  void set_allocated_process_name(std::string* process_name);

  // optional string package_name = 7;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional int32 process_uid = 1;
  bool has_process_uid() const;
  void clear_process_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 process_uid() const;
  void set_process_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_count = 3;
  bool has_total_count() const;
  void clear_total_count();
  ::PROTOBUF_NAMESPACE_ID::int32 total_count() const;
  void set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 total_duration_ms = 4;
  bool has_total_duration_ms() const;
  void clear_total_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_duration_ms() const;
  void set_total_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 active_count = 5;
  bool has_active_count() const;
  void clear_active_count();
  ::PROTOBUF_NAMESPACE_ID::int32 active_count() const;
  void set_active_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.PackageAssociationSourceProcessStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats > active_state_stats_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr process_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 process_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_count_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 active_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class PackageAssociationProcessStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.PackageAssociationProcessStatsProto) */ {
 public:
  PackageAssociationProcessStatsProto();
  virtual ~PackageAssociationProcessStatsProto();

  PackageAssociationProcessStatsProto(const PackageAssociationProcessStatsProto& from);
  PackageAssociationProcessStatsProto(PackageAssociationProcessStatsProto&& from) noexcept
    : PackageAssociationProcessStatsProto() {
    *this = ::std::move(from);
  }

  inline PackageAssociationProcessStatsProto& operator=(const PackageAssociationProcessStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageAssociationProcessStatsProto& operator=(PackageAssociationProcessStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PackageAssociationProcessStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PackageAssociationProcessStatsProto* internal_default_instance() {
    return reinterpret_cast<const PackageAssociationProcessStatsProto*>(
               &_PackageAssociationProcessStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PackageAssociationProcessStatsProto& a, PackageAssociationProcessStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageAssociationProcessStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackageAssociationProcessStatsProto* New() const final {
    return CreateMaybeMessage<PackageAssociationProcessStatsProto>(nullptr);
  }

  PackageAssociationProcessStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackageAssociationProcessStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PackageAssociationProcessStatsProto& from);
  void MergeFrom(const PackageAssociationProcessStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackageAssociationProcessStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.PackageAssociationProcessStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcesFieldNumber = 2,
    kComponentNameFieldNumber = 1,
    kTotalDurationMsFieldNumber = 4,
    kTotalCountFieldNumber = 3,
    kActiveCountFieldNumber = 5,
    kActiveDurationMsFieldNumber = 6,
  };
  // repeated .android.service.procstats.PackageAssociationSourceProcessStatsProto sources = 2;
  int sources_size() const;
  void clear_sources();
  ::android::service::procstats::PackageAssociationSourceProcessStatsProto* mutable_sources(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto >*
      mutable_sources();
  const ::android::service::procstats::PackageAssociationSourceProcessStatsProto& sources(int index) const;
  ::android::service::procstats::PackageAssociationSourceProcessStatsProto* add_sources();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto >&
      sources() const;

  // optional string component_name = 1;
  bool has_component_name() const;
  void clear_component_name();
  const std::string& component_name() const;
  void set_component_name(const std::string& value);
  void set_component_name(std::string&& value);
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  std::string* mutable_component_name();
  std::string* release_component_name();
  void set_allocated_component_name(std::string* component_name);

  // optional int64 total_duration_ms = 4;
  bool has_total_duration_ms() const;
  void clear_total_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_duration_ms() const;
  void set_total_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 total_count = 3;
  bool has_total_count() const;
  void clear_total_count();
  ::PROTOBUF_NAMESPACE_ID::int32 total_count() const;
  void set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 active_count = 5;
  bool has_active_count() const;
  void clear_active_count();
  ::PROTOBUF_NAMESPACE_ID::int32 active_count() const;
  void set_active_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 active_duration_ms = 6;
  bool has_active_duration_ms() const;
  void clear_active_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 active_duration_ms() const;
  void set_active_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.PackageAssociationProcessStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto > sources_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr component_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 active_count_;
  ::PROTOBUF_NAMESPACE_ID::int64 active_duration_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// -------------------------------------------------------------------

class ProcessStatsPackageProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.procstats.ProcessStatsPackageProto) */ {
 public:
  ProcessStatsPackageProto();
  virtual ~ProcessStatsPackageProto();

  ProcessStatsPackageProto(const ProcessStatsPackageProto& from);
  ProcessStatsPackageProto(ProcessStatsPackageProto&& from) noexcept
    : ProcessStatsPackageProto() {
    *this = ::std::move(from);
  }

  inline ProcessStatsPackageProto& operator=(const ProcessStatsPackageProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessStatsPackageProto& operator=(ProcessStatsPackageProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ProcessStatsPackageProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessStatsPackageProto* internal_default_instance() {
    return reinterpret_cast<const ProcessStatsPackageProto*>(
               &_ProcessStatsPackageProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ProcessStatsPackageProto& a, ProcessStatsPackageProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessStatsPackageProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessStatsPackageProto* New() const final {
    return CreateMaybeMessage<ProcessStatsPackageProto>(nullptr);
  }

  ProcessStatsPackageProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessStatsPackageProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ProcessStatsPackageProto& from);
  void MergeFrom(const ProcessStatsPackageProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessStatsPackageProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.procstats.ProcessStatsPackageProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProcessStatsFieldNumber = 4,
    kServiceStatsFieldNumber = 5,
    kAssociationStatsFieldNumber = 6,
    kPackageFieldNumber = 1,
    kVersionFieldNumber = 3,
    kUidFieldNumber = 2,
  };
  // repeated .android.service.procstats.ProcessStatsProto process_stats = 4;
  int process_stats_size() const;
  void clear_process_stats();
  ::android::service::procstats::ProcessStatsProto* mutable_process_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >*
      mutable_process_stats();
  const ::android::service::procstats::ProcessStatsProto& process_stats(int index) const;
  ::android::service::procstats::ProcessStatsProto* add_process_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >&
      process_stats() const;

  // repeated .android.service.procstats.PackageServiceStatsProto service_stats = 5;
  int service_stats_size() const;
  void clear_service_stats();
  ::android::service::procstats::PackageServiceStatsProto* mutable_service_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceStatsProto >*
      mutable_service_stats();
  const ::android::service::procstats::PackageServiceStatsProto& service_stats(int index) const;
  ::android::service::procstats::PackageServiceStatsProto* add_service_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceStatsProto >&
      service_stats() const;

  // repeated .android.service.procstats.PackageAssociationProcessStatsProto association_stats = 6;
  int association_stats_size() const;
  void clear_association_stats();
  ::android::service::procstats::PackageAssociationProcessStatsProto* mutable_association_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationProcessStatsProto >*
      mutable_association_stats();
  const ::android::service::procstats::PackageAssociationProcessStatsProto& association_stats(int index) const;
  ::android::service::procstats::PackageAssociationProcessStatsProto* add_association_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationProcessStatsProto >&
      association_stats() const;

  // optional string package = 1;
  bool has_package() const;
  void clear_package();
  const std::string& package() const;
  void set_package(const std::string& value);
  void set_package(std::string&& value);
  void set_package(const char* value);
  void set_package(const char* value, size_t size);
  std::string* mutable_package();
  std::string* release_package();
  void set_allocated_package(std::string* package);

  // optional int64 version = 3;
  bool has_version() const;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.procstats.ProcessStatsPackageProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto > process_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceStatsProto > service_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationProcessStatsProto > association_stats_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_;
  ::PROTOBUF_NAMESPACE_ID::int64 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProcessStatsServiceDumpProto

// optional .android.service.procstats.ProcessStatsSectionProto procstats_now = 1;
inline bool ProcessStatsServiceDumpProto::has_procstats_now() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessStatsServiceDumpProto::clear_procstats_now() {
  if (procstats_now_ != nullptr) procstats_now_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::service::procstats::ProcessStatsSectionProto& ProcessStatsServiceDumpProto::procstats_now() const {
  const ::android::service::procstats::ProcessStatsSectionProto* p = procstats_now_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsServiceDumpProto.procstats_now)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::procstats::ProcessStatsSectionProto*>(
      &::android::service::procstats::_ProcessStatsSectionProto_default_instance_);
}
inline ::android::service::procstats::ProcessStatsSectionProto* ProcessStatsServiceDumpProto::release_procstats_now() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsServiceDumpProto.procstats_now)
  _has_bits_[0] &= ~0x00000001u;
  ::android::service::procstats::ProcessStatsSectionProto* temp = procstats_now_;
  procstats_now_ = nullptr;
  return temp;
}
inline ::android::service::procstats::ProcessStatsSectionProto* ProcessStatsServiceDumpProto::mutable_procstats_now() {
  _has_bits_[0] |= 0x00000001u;
  if (procstats_now_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::procstats::ProcessStatsSectionProto>(GetArenaNoVirtual());
    procstats_now_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsServiceDumpProto.procstats_now)
  return procstats_now_;
}
inline void ProcessStatsServiceDumpProto::set_allocated_procstats_now(::android::service::procstats::ProcessStatsSectionProto* procstats_now) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete procstats_now_;
  }
  if (procstats_now) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      procstats_now = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, procstats_now, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  procstats_now_ = procstats_now;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsServiceDumpProto.procstats_now)
}

// optional .android.service.procstats.ProcessStatsSectionProto procstats_over_3hrs = 2;
inline bool ProcessStatsServiceDumpProto::has_procstats_over_3hrs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsServiceDumpProto::clear_procstats_over_3hrs() {
  if (procstats_over_3hrs_ != nullptr) procstats_over_3hrs_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::service::procstats::ProcessStatsSectionProto& ProcessStatsServiceDumpProto::procstats_over_3hrs() const {
  const ::android::service::procstats::ProcessStatsSectionProto* p = procstats_over_3hrs_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_3hrs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::procstats::ProcessStatsSectionProto*>(
      &::android::service::procstats::_ProcessStatsSectionProto_default_instance_);
}
inline ::android::service::procstats::ProcessStatsSectionProto* ProcessStatsServiceDumpProto::release_procstats_over_3hrs() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_3hrs)
  _has_bits_[0] &= ~0x00000002u;
  ::android::service::procstats::ProcessStatsSectionProto* temp = procstats_over_3hrs_;
  procstats_over_3hrs_ = nullptr;
  return temp;
}
inline ::android::service::procstats::ProcessStatsSectionProto* ProcessStatsServiceDumpProto::mutable_procstats_over_3hrs() {
  _has_bits_[0] |= 0x00000002u;
  if (procstats_over_3hrs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::procstats::ProcessStatsSectionProto>(GetArenaNoVirtual());
    procstats_over_3hrs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_3hrs)
  return procstats_over_3hrs_;
}
inline void ProcessStatsServiceDumpProto::set_allocated_procstats_over_3hrs(::android::service::procstats::ProcessStatsSectionProto* procstats_over_3hrs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete procstats_over_3hrs_;
  }
  if (procstats_over_3hrs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      procstats_over_3hrs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, procstats_over_3hrs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  procstats_over_3hrs_ = procstats_over_3hrs;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_3hrs)
}

// optional .android.service.procstats.ProcessStatsSectionProto procstats_over_24hrs = 3;
inline bool ProcessStatsServiceDumpProto::has_procstats_over_24hrs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsServiceDumpProto::clear_procstats_over_24hrs() {
  if (procstats_over_24hrs_ != nullptr) procstats_over_24hrs_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::android::service::procstats::ProcessStatsSectionProto& ProcessStatsServiceDumpProto::procstats_over_24hrs() const {
  const ::android::service::procstats::ProcessStatsSectionProto* p = procstats_over_24hrs_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_24hrs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::procstats::ProcessStatsSectionProto*>(
      &::android::service::procstats::_ProcessStatsSectionProto_default_instance_);
}
inline ::android::service::procstats::ProcessStatsSectionProto* ProcessStatsServiceDumpProto::release_procstats_over_24hrs() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_24hrs)
  _has_bits_[0] &= ~0x00000004u;
  ::android::service::procstats::ProcessStatsSectionProto* temp = procstats_over_24hrs_;
  procstats_over_24hrs_ = nullptr;
  return temp;
}
inline ::android::service::procstats::ProcessStatsSectionProto* ProcessStatsServiceDumpProto::mutable_procstats_over_24hrs() {
  _has_bits_[0] |= 0x00000004u;
  if (procstats_over_24hrs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::procstats::ProcessStatsSectionProto>(GetArenaNoVirtual());
    procstats_over_24hrs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_24hrs)
  return procstats_over_24hrs_;
}
inline void ProcessStatsServiceDumpProto::set_allocated_procstats_over_24hrs(::android::service::procstats::ProcessStatsSectionProto* procstats_over_24hrs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete procstats_over_24hrs_;
  }
  if (procstats_over_24hrs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      procstats_over_24hrs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, procstats_over_24hrs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  procstats_over_24hrs_ = procstats_over_24hrs;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsServiceDumpProto.procstats_over_24hrs)
}

// -------------------------------------------------------------------

// ProcessStatsSectionProto

// optional int64 start_realtime_ms = 1;
inline bool ProcessStatsSectionProto::has_start_realtime_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsSectionProto::clear_start_realtime_ms() {
  start_realtime_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsSectionProto::start_realtime_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.start_realtime_ms)
  return start_realtime_ms_;
}
inline void ProcessStatsSectionProto::set_start_realtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  start_realtime_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.start_realtime_ms)
}

// optional int64 end_realtime_ms = 2;
inline bool ProcessStatsSectionProto::has_end_realtime_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsSectionProto::clear_end_realtime_ms() {
  end_realtime_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsSectionProto::end_realtime_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.end_realtime_ms)
  return end_realtime_ms_;
}
inline void ProcessStatsSectionProto::set_end_realtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  end_realtime_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.end_realtime_ms)
}

// optional int64 start_uptime_ms = 3;
inline bool ProcessStatsSectionProto::has_start_uptime_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessStatsSectionProto::clear_start_uptime_ms() {
  start_uptime_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsSectionProto::start_uptime_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.start_uptime_ms)
  return start_uptime_ms_;
}
inline void ProcessStatsSectionProto::set_start_uptime_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  start_uptime_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.start_uptime_ms)
}

// optional int64 end_uptime_ms = 4;
inline bool ProcessStatsSectionProto::has_end_uptime_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProcessStatsSectionProto::clear_end_uptime_ms() {
  end_uptime_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsSectionProto::end_uptime_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.end_uptime_ms)
  return end_uptime_ms_;
}
inline void ProcessStatsSectionProto::set_end_uptime_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  end_uptime_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.end_uptime_ms)
}

// optional string runtime = 5;
inline bool ProcessStatsSectionProto::has_runtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessStatsSectionProto::clear_runtime() {
  runtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcessStatsSectionProto::runtime() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.runtime)
  return runtime_.GetNoArena();
}
inline void ProcessStatsSectionProto::set_runtime(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  runtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.runtime)
}
inline void ProcessStatsSectionProto::set_runtime(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  runtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsSectionProto.runtime)
}
inline void ProcessStatsSectionProto::set_runtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  runtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsSectionProto.runtime)
}
inline void ProcessStatsSectionProto::set_runtime(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  runtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsSectionProto.runtime)
}
inline std::string* ProcessStatsSectionProto::mutable_runtime() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsSectionProto.runtime)
  return runtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsSectionProto::release_runtime() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsSectionProto.runtime)
  if (!has_runtime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return runtime_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsSectionProto::set_allocated_runtime(std::string* runtime) {
  if (runtime != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  runtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), runtime);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsSectionProto.runtime)
}

// optional bool has_swapped_pss = 6;
inline bool ProcessStatsSectionProto::has_has_swapped_pss() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProcessStatsSectionProto::clear_has_swapped_pss() {
  has_swapped_pss_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ProcessStatsSectionProto::has_swapped_pss() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.has_swapped_pss)
  return has_swapped_pss_;
}
inline void ProcessStatsSectionProto::set_has_swapped_pss(bool value) {
  _has_bits_[0] |= 0x00000020u;
  has_swapped_pss_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.has_swapped_pss)
}

// repeated .android.service.procstats.ProcessStatsSectionProto.Status status = 7;
inline int ProcessStatsSectionProto::status_size() const {
  return status_.size();
}
inline void ProcessStatsSectionProto::clear_status() {
  status_.Clear();
}
inline ::android::service::procstats::ProcessStatsSectionProto_Status ProcessStatsSectionProto::status(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.status)
  return static_cast< ::android::service::procstats::ProcessStatsSectionProto_Status >(status_.Get(index));
}
inline void ProcessStatsSectionProto::set_status(int index, ::android::service::procstats::ProcessStatsSectionProto_Status value) {
  assert(::android::service::procstats::ProcessStatsSectionProto_Status_IsValid(value));
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsSectionProto.status)
}
inline void ProcessStatsSectionProto::add_status(::android::service::procstats::ProcessStatsSectionProto_Status value) {
  assert(::android::service::procstats::ProcessStatsSectionProto_Status_IsValid(value));
  status_.Add(value);
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsSectionProto.status)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
ProcessStatsSectionProto::status() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsSectionProto.status)
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ProcessStatsSectionProto::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsSectionProto.status)
  return &status_;
}

// repeated .android.service.procstats.ProcessStatsAvailablePagesProto available_pages = 10;
inline int ProcessStatsSectionProto::available_pages_size() const {
  return available_pages_.size();
}
inline void ProcessStatsSectionProto::clear_available_pages() {
  available_pages_.Clear();
}
inline ::android::service::procstats::ProcessStatsAvailablePagesProto* ProcessStatsSectionProto::mutable_available_pages(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsSectionProto.available_pages)
  return available_pages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAvailablePagesProto >*
ProcessStatsSectionProto::mutable_available_pages() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsSectionProto.available_pages)
  return &available_pages_;
}
inline const ::android::service::procstats::ProcessStatsAvailablePagesProto& ProcessStatsSectionProto::available_pages(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.available_pages)
  return available_pages_.Get(index);
}
inline ::android::service::procstats::ProcessStatsAvailablePagesProto* ProcessStatsSectionProto::add_available_pages() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsSectionProto.available_pages)
  return available_pages_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAvailablePagesProto >&
ProcessStatsSectionProto::available_pages() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsSectionProto.available_pages)
  return available_pages_;
}

// repeated .android.service.procstats.ProcessStatsProto process_stats = 8;
inline int ProcessStatsSectionProto::process_stats_size() const {
  return process_stats_.size();
}
inline void ProcessStatsSectionProto::clear_process_stats() {
  process_stats_.Clear();
}
inline ::android::service::procstats::ProcessStatsProto* ProcessStatsSectionProto::mutable_process_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsSectionProto.process_stats)
  return process_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >*
ProcessStatsSectionProto::mutable_process_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsSectionProto.process_stats)
  return &process_stats_;
}
inline const ::android::service::procstats::ProcessStatsProto& ProcessStatsSectionProto::process_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.process_stats)
  return process_stats_.Get(index);
}
inline ::android::service::procstats::ProcessStatsProto* ProcessStatsSectionProto::add_process_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsSectionProto.process_stats)
  return process_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >&
ProcessStatsSectionProto::process_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsSectionProto.process_stats)
  return process_stats_;
}

// repeated .android.service.procstats.ProcessStatsPackageProto package_stats = 9;
inline int ProcessStatsSectionProto::package_stats_size() const {
  return package_stats_.size();
}
inline void ProcessStatsSectionProto::clear_package_stats() {
  package_stats_.Clear();
}
inline ::android::service::procstats::ProcessStatsPackageProto* ProcessStatsSectionProto::mutable_package_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsSectionProto.package_stats)
  return package_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsPackageProto >*
ProcessStatsSectionProto::mutable_package_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsSectionProto.package_stats)
  return &package_stats_;
}
inline const ::android::service::procstats::ProcessStatsPackageProto& ProcessStatsSectionProto::package_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsSectionProto.package_stats)
  return package_stats_.Get(index);
}
inline ::android::service::procstats::ProcessStatsPackageProto* ProcessStatsSectionProto::add_package_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsSectionProto.package_stats)
  return package_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsPackageProto >&
ProcessStatsSectionProto::package_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsSectionProto.package_stats)
  return package_stats_;
}

// -------------------------------------------------------------------

// ProcessStatsAvailablePagesProto

// optional int32 node = 1;
inline bool ProcessStatsAvailablePagesProto::has_node() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsAvailablePagesProto::clear_node() {
  node_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsAvailablePagesProto::node() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAvailablePagesProto.node)
  return node_;
}
inline void ProcessStatsAvailablePagesProto::set_node(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  node_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAvailablePagesProto.node)
}

// optional string zone = 2;
inline bool ProcessStatsAvailablePagesProto::has_zone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessStatsAvailablePagesProto::clear_zone() {
  zone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcessStatsAvailablePagesProto::zone() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
  return zone_.GetNoArena();
}
inline void ProcessStatsAvailablePagesProto::set_zone(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
}
inline void ProcessStatsAvailablePagesProto::set_zone(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
}
inline void ProcessStatsAvailablePagesProto::set_zone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
}
inline void ProcessStatsAvailablePagesProto::set_zone(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
}
inline std::string* ProcessStatsAvailablePagesProto::mutable_zone() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
  return zone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsAvailablePagesProto::release_zone() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
  if (!has_zone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return zone_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsAvailablePagesProto::set_allocated_zone(std::string* zone) {
  if (zone != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  zone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zone);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsAvailablePagesProto.zone)
}

// optional string label = 3;
inline bool ProcessStatsAvailablePagesProto::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsAvailablePagesProto::clear_label() {
  label_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProcessStatsAvailablePagesProto::label() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAvailablePagesProto.label)
  return label_.GetNoArena();
}
inline void ProcessStatsAvailablePagesProto::set_label(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  label_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAvailablePagesProto.label)
}
inline void ProcessStatsAvailablePagesProto::set_label(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  label_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsAvailablePagesProto.label)
}
inline void ProcessStatsAvailablePagesProto::set_label(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  label_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsAvailablePagesProto.label)
}
inline void ProcessStatsAvailablePagesProto::set_label(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  label_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsAvailablePagesProto.label)
}
inline std::string* ProcessStatsAvailablePagesProto::mutable_label() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsAvailablePagesProto.label)
  return label_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsAvailablePagesProto::release_label() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsAvailablePagesProto.label)
  if (!has_label()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return label_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsAvailablePagesProto::set_allocated_label(std::string* label) {
  if (label != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  label_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsAvailablePagesProto.label)
}

// repeated int32 pages_per_order = 4;
inline int ProcessStatsAvailablePagesProto::pages_per_order_size() const {
  return pages_per_order_.size();
}
inline void ProcessStatsAvailablePagesProto::clear_pages_per_order() {
  pages_per_order_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsAvailablePagesProto::pages_per_order(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAvailablePagesProto.pages_per_order)
  return pages_per_order_.Get(index);
}
inline void ProcessStatsAvailablePagesProto::set_pages_per_order(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  pages_per_order_.Set(index, value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAvailablePagesProto.pages_per_order)
}
inline void ProcessStatsAvailablePagesProto::add_pages_per_order(::PROTOBUF_NAMESPACE_ID::int32 value) {
  pages_per_order_.Add(value);
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsAvailablePagesProto.pages_per_order)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ProcessStatsAvailablePagesProto::pages_per_order() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsAvailablePagesProto.pages_per_order)
  return pages_per_order_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ProcessStatsAvailablePagesProto::mutable_pages_per_order() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsAvailablePagesProto.pages_per_order)
  return &pages_per_order_;
}

// -------------------------------------------------------------------

// ProcessStatsStateProto

// optional .android.service.procstats.ScreenState screen_state = 1;
inline bool ProcessStatsStateProto::has_screen_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessStatsStateProto::clear_screen_state() {
  screen_state_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::android::service::procstats::ScreenState ProcessStatsStateProto::screen_state() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.screen_state)
  return static_cast< ::android::service::procstats::ScreenState >(screen_state_);
}
inline void ProcessStatsStateProto::set_screen_state(::android::service::procstats::ScreenState value) {
  assert(::android::service::procstats::ScreenState_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  screen_state_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.screen_state)
}

// optional .android.service.procstats.MemoryState memory_state = 2;
inline bool ProcessStatsStateProto::has_memory_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProcessStatsStateProto::clear_memory_state() {
  memory_state_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::android::service::procstats::MemoryState ProcessStatsStateProto::memory_state() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.memory_state)
  return static_cast< ::android::service::procstats::MemoryState >(memory_state_);
}
inline void ProcessStatsStateProto::set_memory_state(::android::service::procstats::MemoryState value) {
  assert(::android::service::procstats::MemoryState_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  memory_state_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.memory_state)
}

// optional .android.service.procstats.ProcessState process_state = 3 [deprecated = true];
inline bool ProcessStatsStateProto::has_process_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProcessStatsStateProto::clear_process_state() {
  process_state_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::android::service::procstats::ProcessState ProcessStatsStateProto::process_state() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.process_state)
  return static_cast< ::android::service::procstats::ProcessState >(process_state_);
}
inline void ProcessStatsStateProto::set_process_state(::android::service::procstats::ProcessState value) {
  assert(::android::service::procstats::ProcessState_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  process_state_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.process_state)
}

// optional .android.service.procstats.AggregatedProcessState process_state_aggregated = 10;
inline bool ProcessStatsStateProto::has_process_state_aggregated() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProcessStatsStateProto::clear_process_state_aggregated() {
  process_state_aggregated_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::android::service::procstats::AggregatedProcessState ProcessStatsStateProto::process_state_aggregated() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.process_state_aggregated)
  return static_cast< ::android::service::procstats::AggregatedProcessState >(process_state_aggregated_);
}
inline void ProcessStatsStateProto::set_process_state_aggregated(::android::service::procstats::AggregatedProcessState value) {
  assert(::android::service::procstats::AggregatedProcessState_IsValid(value));
  _has_bits_[0] |= 0x00000200u;
  process_state_aggregated_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.process_state_aggregated)
}

// optional int64 duration_ms = 4 [deprecated = true];
inline bool ProcessStatsStateProto::has_duration_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProcessStatsStateProto::clear_duration_ms() {
  duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsStateProto::duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.duration_ms)
  return duration_ms_;
}
inline void ProcessStatsStateProto::set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.duration_ms)
}

// optional int32 duration_minutes = 11;
inline bool ProcessStatsStateProto::has_duration_minutes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProcessStatsStateProto::clear_duration_minutes() {
  duration_minutes_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsStateProto::duration_minutes() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.duration_minutes)
  return duration_minutes_;
}
inline void ProcessStatsStateProto::set_duration_minutes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  duration_minutes_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.duration_minutes)
}

// optional int64 realtime_duration_ms = 9 [deprecated = true];
inline bool ProcessStatsStateProto::has_realtime_duration_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProcessStatsStateProto::clear_realtime_duration_ms() {
  realtime_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsStateProto::realtime_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.realtime_duration_ms)
  return realtime_duration_ms_;
}
inline void ProcessStatsStateProto::set_realtime_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  realtime_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.realtime_duration_ms)
}

// optional int32 realtime_duration_minutes = 12;
inline bool ProcessStatsStateProto::has_realtime_duration_minutes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProcessStatsStateProto::clear_realtime_duration_minutes() {
  realtime_duration_minutes_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsStateProto::realtime_duration_minutes() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.realtime_duration_minutes)
  return realtime_duration_minutes_;
}
inline void ProcessStatsStateProto::set_realtime_duration_minutes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  realtime_duration_minutes_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.realtime_duration_minutes)
}

// optional int32 sample_size = 5;
inline bool ProcessStatsStateProto::has_sample_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProcessStatsStateProto::clear_sample_size() {
  sample_size_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsStateProto::sample_size() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.sample_size)
  return sample_size_;
}
inline void ProcessStatsStateProto::set_sample_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  sample_size_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsStateProto.sample_size)
}

// optional .android.util.AggStats pss = 6;
inline bool ProcessStatsStateProto::has_pss() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::util::AggStats& ProcessStatsStateProto::pss() const {
  const ::android::util::AggStats* p = pss_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.pss)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::AggStats*>(
      &::android::util::_AggStats_default_instance_);
}
inline ::android::util::AggStats* ProcessStatsStateProto::release_pss() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsStateProto.pss)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::AggStats* temp = pss_;
  pss_ = nullptr;
  return temp;
}
inline ::android::util::AggStats* ProcessStatsStateProto::mutable_pss() {
  _has_bits_[0] |= 0x00000001u;
  if (pss_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::AggStats>(GetArenaNoVirtual());
    pss_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsStateProto.pss)
  return pss_;
}
inline void ProcessStatsStateProto::set_allocated_pss(::android::util::AggStats* pss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pss_);
  }
  if (pss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pss, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pss_ = pss;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsStateProto.pss)
}

// optional .android.util.AggStats uss = 7;
inline bool ProcessStatsStateProto::has_uss() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::util::AggStats& ProcessStatsStateProto::uss() const {
  const ::android::util::AggStats* p = uss_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.uss)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::AggStats*>(
      &::android::util::_AggStats_default_instance_);
}
inline ::android::util::AggStats* ProcessStatsStateProto::release_uss() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsStateProto.uss)
  _has_bits_[0] &= ~0x00000002u;
  ::android::util::AggStats* temp = uss_;
  uss_ = nullptr;
  return temp;
}
inline ::android::util::AggStats* ProcessStatsStateProto::mutable_uss() {
  _has_bits_[0] |= 0x00000002u;
  if (uss_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::AggStats>(GetArenaNoVirtual());
    uss_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsStateProto.uss)
  return uss_;
}
inline void ProcessStatsStateProto::set_allocated_uss(::android::util::AggStats* uss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(uss_);
  }
  if (uss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uss, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  uss_ = uss;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsStateProto.uss)
}

// optional .android.util.AggStats rss = 8;
inline bool ProcessStatsStateProto::has_rss() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::android::util::AggStats& ProcessStatsStateProto::rss() const {
  const ::android::util::AggStats* p = rss_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsStateProto.rss)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::AggStats*>(
      &::android::util::_AggStats_default_instance_);
}
inline ::android::util::AggStats* ProcessStatsStateProto::release_rss() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsStateProto.rss)
  _has_bits_[0] &= ~0x00000004u;
  ::android::util::AggStats* temp = rss_;
  rss_ = nullptr;
  return temp;
}
inline ::android::util::AggStats* ProcessStatsStateProto::mutable_rss() {
  _has_bits_[0] |= 0x00000004u;
  if (rss_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::AggStats>(GetArenaNoVirtual());
    rss_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsStateProto.rss)
  return rss_;
}
inline void ProcessStatsStateProto::set_allocated_rss(::android::util::AggStats* rss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rss_);
  }
  if (rss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rss, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  rss_ = rss;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsStateProto.rss)
}

// -------------------------------------------------------------------

// ProcessStatsProto_Kill

// optional int32 cpu = 1;
inline bool ProcessStatsProto_Kill::has_cpu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsProto_Kill::clear_cpu() {
  cpu_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsProto_Kill::cpu() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.Kill.cpu)
  return cpu_;
}
inline void ProcessStatsProto_Kill::set_cpu(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cpu_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsProto.Kill.cpu)
}

// optional int32 cached = 2;
inline bool ProcessStatsProto_Kill::has_cached() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsProto_Kill::clear_cached() {
  cached_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsProto_Kill::cached() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.Kill.cached)
  return cached_;
}
inline void ProcessStatsProto_Kill::set_cached(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  cached_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsProto.Kill.cached)
}

// optional .android.util.AggStats cached_pss = 3;
inline bool ProcessStatsProto_Kill::has_cached_pss() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::util::AggStats& ProcessStatsProto_Kill::cached_pss() const {
  const ::android::util::AggStats* p = cached_pss_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.Kill.cached_pss)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::AggStats*>(
      &::android::util::_AggStats_default_instance_);
}
inline ::android::util::AggStats* ProcessStatsProto_Kill::release_cached_pss() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsProto.Kill.cached_pss)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::AggStats* temp = cached_pss_;
  cached_pss_ = nullptr;
  return temp;
}
inline ::android::util::AggStats* ProcessStatsProto_Kill::mutable_cached_pss() {
  _has_bits_[0] |= 0x00000001u;
  if (cached_pss_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::AggStats>(GetArenaNoVirtual());
    cached_pss_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsProto.Kill.cached_pss)
  return cached_pss_;
}
inline void ProcessStatsProto_Kill::set_allocated_cached_pss(::android::util::AggStats* cached_pss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cached_pss_);
  }
  if (cached_pss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cached_pss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cached_pss, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cached_pss_ = cached_pss;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsProto.Kill.cached_pss)
}

// -------------------------------------------------------------------

// ProcessStatsProto

// optional string process = 1;
inline bool ProcessStatsProto::has_process() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessStatsProto::clear_process() {
  process_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcessStatsProto::process() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.process)
  return process_.GetNoArena();
}
inline void ProcessStatsProto::set_process(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  process_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsProto.process)
}
inline void ProcessStatsProto::set_process(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  process_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsProto.process)
}
inline void ProcessStatsProto::set_process(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  process_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsProto.process)
}
inline void ProcessStatsProto::set_process(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  process_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsProto.process)
}
inline std::string* ProcessStatsProto::mutable_process() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsProto.process)
  return process_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsProto::release_process() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsProto.process)
  if (!has_process()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return process_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsProto::set_allocated_process(std::string* process) {
  if (process != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  process_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), process);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsProto.process)
}

// optional int32 uid = 2;
inline bool ProcessStatsProto::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessStatsProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsProto::uid() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.uid)
  return uid_;
}
inline void ProcessStatsProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsProto.uid)
}

// optional .android.service.procstats.ProcessStatsProto.Kill kill = 3;
inline bool ProcessStatsProto::has_kill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsProto::clear_kill() {
  if (kill_ != nullptr) kill_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::service::procstats::ProcessStatsProto_Kill& ProcessStatsProto::kill() const {
  const ::android::service::procstats::ProcessStatsProto_Kill* p = kill_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.kill)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::procstats::ProcessStatsProto_Kill*>(
      &::android::service::procstats::_ProcessStatsProto_Kill_default_instance_);
}
inline ::android::service::procstats::ProcessStatsProto_Kill* ProcessStatsProto::release_kill() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsProto.kill)
  _has_bits_[0] &= ~0x00000002u;
  ::android::service::procstats::ProcessStatsProto_Kill* temp = kill_;
  kill_ = nullptr;
  return temp;
}
inline ::android::service::procstats::ProcessStatsProto_Kill* ProcessStatsProto::mutable_kill() {
  _has_bits_[0] |= 0x00000002u;
  if (kill_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::procstats::ProcessStatsProto_Kill>(GetArenaNoVirtual());
    kill_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsProto.kill)
  return kill_;
}
inline void ProcessStatsProto::set_allocated_kill(::android::service::procstats::ProcessStatsProto_Kill* kill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete kill_;
  }
  if (kill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      kill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kill, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  kill_ = kill;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsProto.kill)
}

// repeated .android.service.procstats.ProcessStatsStateProto states = 5;
inline int ProcessStatsProto::states_size() const {
  return states_.size();
}
inline void ProcessStatsProto::clear_states() {
  states_.Clear();
}
inline ::android::service::procstats::ProcessStatsStateProto* ProcessStatsProto::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsProto.states)
  return states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsStateProto >*
ProcessStatsProto::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsProto.states)
  return &states_;
}
inline const ::android::service::procstats::ProcessStatsStateProto& ProcessStatsProto::states(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.states)
  return states_.Get(index);
}
inline ::android::service::procstats::ProcessStatsStateProto* ProcessStatsProto::add_states() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsProto.states)
  return states_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsStateProto >&
ProcessStatsProto::states() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsProto.states)
  return states_;
}

// optional .android.service.procstats.ProcessStatsStateProto total_running_state = 6;
inline bool ProcessStatsProto::has_total_running_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsProto::clear_total_running_state() {
  if (total_running_state_ != nullptr) total_running_state_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::android::service::procstats::ProcessStatsStateProto& ProcessStatsProto::total_running_state() const {
  const ::android::service::procstats::ProcessStatsStateProto* p = total_running_state_;
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.total_running_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::procstats::ProcessStatsStateProto*>(
      &::android::service::procstats::_ProcessStatsStateProto_default_instance_);
}
inline ::android::service::procstats::ProcessStatsStateProto* ProcessStatsProto::release_total_running_state() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsProto.total_running_state)
  _has_bits_[0] &= ~0x00000004u;
  ::android::service::procstats::ProcessStatsStateProto* temp = total_running_state_;
  total_running_state_ = nullptr;
  return temp;
}
inline ::android::service::procstats::ProcessStatsStateProto* ProcessStatsProto::mutable_total_running_state() {
  _has_bits_[0] |= 0x00000004u;
  if (total_running_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::procstats::ProcessStatsStateProto>(GetArenaNoVirtual());
    total_running_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsProto.total_running_state)
  return total_running_state_;
}
inline void ProcessStatsProto::set_allocated_total_running_state(::android::service::procstats::ProcessStatsStateProto* total_running_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete total_running_state_;
  }
  if (total_running_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      total_running_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, total_running_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  total_running_state_ = total_running_state;
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsProto.total_running_state)
}

// repeated .android.service.procstats.ProcessStatsAssociationProto assocs = 7;
inline int ProcessStatsProto::assocs_size() const {
  return assocs_.size();
}
inline void ProcessStatsProto::clear_assocs() {
  assocs_.Clear();
}
inline ::android::service::procstats::ProcessStatsAssociationProto* ProcessStatsProto::mutable_assocs(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsProto.assocs)
  return assocs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAssociationProto >*
ProcessStatsProto::mutable_assocs() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsProto.assocs)
  return &assocs_;
}
inline const ::android::service::procstats::ProcessStatsAssociationProto& ProcessStatsProto::assocs(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsProto.assocs)
  return assocs_.Get(index);
}
inline ::android::service::procstats::ProcessStatsAssociationProto* ProcessStatsProto::add_assocs() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsProto.assocs)
  return assocs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsAssociationProto >&
ProcessStatsProto::assocs() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsProto.assocs)
  return assocs_;
}

// -------------------------------------------------------------------

// ProcessStatsAssociationProto

// optional string assoc_process_name = 1;
inline bool ProcessStatsAssociationProto::has_assoc_process_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessStatsAssociationProto::clear_assoc_process_name() {
  assoc_process_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcessStatsAssociationProto::assoc_process_name() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
  return assoc_process_name_.GetNoArena();
}
inline void ProcessStatsAssociationProto::set_assoc_process_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  assoc_process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
}
inline void ProcessStatsAssociationProto::set_assoc_process_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  assoc_process_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
}
inline void ProcessStatsAssociationProto::set_assoc_process_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  assoc_process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
}
inline void ProcessStatsAssociationProto::set_assoc_process_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  assoc_process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
}
inline std::string* ProcessStatsAssociationProto::mutable_assoc_process_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
  return assoc_process_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsAssociationProto::release_assoc_process_name() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
  if (!has_assoc_process_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return assoc_process_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsAssociationProto::set_allocated_assoc_process_name(std::string* assoc_process_name) {
  if (assoc_process_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  assoc_process_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), assoc_process_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsAssociationProto.assoc_process_name)
}

// optional string assoc_package_name = 2 [deprecated = true];
inline bool ProcessStatsAssociationProto::has_assoc_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsAssociationProto::clear_assoc_package_name() {
  assoc_package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProcessStatsAssociationProto::assoc_package_name() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
  return assoc_package_name_.GetNoArena();
}
inline void ProcessStatsAssociationProto::set_assoc_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  assoc_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
}
inline void ProcessStatsAssociationProto::set_assoc_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  assoc_package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
}
inline void ProcessStatsAssociationProto::set_assoc_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  assoc_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
}
inline void ProcessStatsAssociationProto::set_assoc_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  assoc_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
}
inline std::string* ProcessStatsAssociationProto::mutable_assoc_package_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
  return assoc_package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsAssociationProto::release_assoc_package_name() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
  if (!has_assoc_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return assoc_package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsAssociationProto::set_allocated_assoc_package_name(std::string* assoc_package_name) {
  if (assoc_package_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  assoc_package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), assoc_package_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsAssociationProto.assoc_package_name)
}

// optional int32 assoc_uid = 5;
inline bool ProcessStatsAssociationProto::has_assoc_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProcessStatsAssociationProto::clear_assoc_uid() {
  assoc_uid_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsAssociationProto::assoc_uid() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAssociationProto.assoc_uid)
  return assoc_uid_;
}
inline void ProcessStatsAssociationProto::set_assoc_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  assoc_uid_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAssociationProto.assoc_uid)
}

// optional int32 total_count = 3;
inline bool ProcessStatsAssociationProto::has_total_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsAssociationProto::clear_total_count() {
  total_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsAssociationProto::total_count() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAssociationProto.total_count)
  return total_count_;
}
inline void ProcessStatsAssociationProto::set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  total_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAssociationProto.total_count)
}

// optional int32 total_duration_secs = 4;
inline bool ProcessStatsAssociationProto::has_total_duration_secs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessStatsAssociationProto::clear_total_duration_secs() {
  total_duration_secs_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsAssociationProto::total_duration_secs() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsAssociationProto.total_duration_secs)
  return total_duration_secs_;
}
inline void ProcessStatsAssociationProto::set_total_duration_secs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  total_duration_secs_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsAssociationProto.total_duration_secs)
}

// -------------------------------------------------------------------

// PackageServiceOperationStatsProto_StateStats

// optional .android.service.procstats.ScreenState screen_state = 1;
inline bool PackageServiceOperationStatsProto_StateStats::has_screen_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageServiceOperationStatsProto_StateStats::clear_screen_state() {
  screen_state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::android::service::procstats::ScreenState PackageServiceOperationStatsProto_StateStats::screen_state() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.StateStats.screen_state)
  return static_cast< ::android::service::procstats::ScreenState >(screen_state_);
}
inline void PackageServiceOperationStatsProto_StateStats::set_screen_state(::android::service::procstats::ScreenState value) {
  assert(::android::service::procstats::ScreenState_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  screen_state_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceOperationStatsProto.StateStats.screen_state)
}

// optional .android.service.procstats.MemoryState memory_state = 2;
inline bool PackageServiceOperationStatsProto_StateStats::has_memory_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageServiceOperationStatsProto_StateStats::clear_memory_state() {
  memory_state_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::android::service::procstats::MemoryState PackageServiceOperationStatsProto_StateStats::memory_state() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.StateStats.memory_state)
  return static_cast< ::android::service::procstats::MemoryState >(memory_state_);
}
inline void PackageServiceOperationStatsProto_StateStats::set_memory_state(::android::service::procstats::MemoryState value) {
  assert(::android::service::procstats::MemoryState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  memory_state_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceOperationStatsProto.StateStats.memory_state)
}

// optional int64 duration_ms = 3;
inline bool PackageServiceOperationStatsProto_StateStats::has_duration_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PackageServiceOperationStatsProto_StateStats::clear_duration_ms() {
  duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageServiceOperationStatsProto_StateStats::duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.StateStats.duration_ms)
  return duration_ms_;
}
inline void PackageServiceOperationStatsProto_StateStats::set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceOperationStatsProto.StateStats.duration_ms)
}

// optional int64 realtime_duration_ms = 4;
inline bool PackageServiceOperationStatsProto_StateStats::has_realtime_duration_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PackageServiceOperationStatsProto_StateStats::clear_realtime_duration_ms() {
  realtime_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageServiceOperationStatsProto_StateStats::realtime_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.StateStats.realtime_duration_ms)
  return realtime_duration_ms_;
}
inline void PackageServiceOperationStatsProto_StateStats::set_realtime_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  realtime_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceOperationStatsProto.StateStats.realtime_duration_ms)
}

// -------------------------------------------------------------------

// PackageServiceOperationStatsProto

// optional .android.service.procstats.ServiceOperationState operation = 1;
inline bool PackageServiceOperationStatsProto::has_operation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageServiceOperationStatsProto::clear_operation() {
  operation_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::android::service::procstats::ServiceOperationState PackageServiceOperationStatsProto::operation() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.operation)
  return static_cast< ::android::service::procstats::ServiceOperationState >(operation_);
}
inline void PackageServiceOperationStatsProto::set_operation(::android::service::procstats::ServiceOperationState value) {
  assert(::android::service::procstats::ServiceOperationState_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  operation_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceOperationStatsProto.operation)
}

// optional int32 count = 2;
inline bool PackageServiceOperationStatsProto::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageServiceOperationStatsProto::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PackageServiceOperationStatsProto::count() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.count)
  return count_;
}
inline void PackageServiceOperationStatsProto::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceOperationStatsProto.count)
}

// repeated .android.service.procstats.PackageServiceOperationStatsProto.StateStats state_stats = 3;
inline int PackageServiceOperationStatsProto::state_stats_size() const {
  return state_stats_.size();
}
inline void PackageServiceOperationStatsProto::clear_state_stats() {
  state_stats_.Clear();
}
inline ::android::service::procstats::PackageServiceOperationStatsProto_StateStats* PackageServiceOperationStatsProto::mutable_state_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageServiceOperationStatsProto.state_stats)
  return state_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto_StateStats >*
PackageServiceOperationStatsProto::mutable_state_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.PackageServiceOperationStatsProto.state_stats)
  return &state_stats_;
}
inline const ::android::service::procstats::PackageServiceOperationStatsProto_StateStats& PackageServiceOperationStatsProto::state_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceOperationStatsProto.state_stats)
  return state_stats_.Get(index);
}
inline ::android::service::procstats::PackageServiceOperationStatsProto_StateStats* PackageServiceOperationStatsProto::add_state_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.PackageServiceOperationStatsProto.state_stats)
  return state_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto_StateStats >&
PackageServiceOperationStatsProto::state_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.PackageServiceOperationStatsProto.state_stats)
  return state_stats_;
}

// -------------------------------------------------------------------

// PackageServiceStatsProto

// optional string service_name = 1;
inline bool PackageServiceStatsProto::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageServiceStatsProto::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PackageServiceStatsProto::service_name() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceStatsProto.service_name)
  return service_name_.GetNoArena();
}
inline void PackageServiceStatsProto::set_service_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageServiceStatsProto.service_name)
}
inline void PackageServiceStatsProto::set_service_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.PackageServiceStatsProto.service_name)
}
inline void PackageServiceStatsProto::set_service_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.PackageServiceStatsProto.service_name)
}
inline void PackageServiceStatsProto::set_service_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.PackageServiceStatsProto.service_name)
}
inline std::string* PackageServiceStatsProto::mutable_service_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageServiceStatsProto.service_name)
  return service_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PackageServiceStatsProto::release_service_name() {
  // @@protoc_insertion_point(field_release:android.service.procstats.PackageServiceStatsProto.service_name)
  if (!has_service_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return service_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PackageServiceStatsProto::set_allocated_service_name(std::string* service_name) {
  if (service_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  service_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.PackageServiceStatsProto.service_name)
}

// repeated .android.service.procstats.PackageServiceOperationStatsProto operation_stats = 2;
inline int PackageServiceStatsProto::operation_stats_size() const {
  return operation_stats_.size();
}
inline void PackageServiceStatsProto::clear_operation_stats() {
  operation_stats_.Clear();
}
inline ::android::service::procstats::PackageServiceOperationStatsProto* PackageServiceStatsProto::mutable_operation_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageServiceStatsProto.operation_stats)
  return operation_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto >*
PackageServiceStatsProto::mutable_operation_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.PackageServiceStatsProto.operation_stats)
  return &operation_stats_;
}
inline const ::android::service::procstats::PackageServiceOperationStatsProto& PackageServiceStatsProto::operation_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageServiceStatsProto.operation_stats)
  return operation_stats_.Get(index);
}
inline ::android::service::procstats::PackageServiceOperationStatsProto* PackageServiceStatsProto::add_operation_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.PackageServiceStatsProto.operation_stats)
  return operation_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceOperationStatsProto >&
PackageServiceStatsProto::operation_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.PackageServiceStatsProto.operation_stats)
  return operation_stats_;
}

// -------------------------------------------------------------------

// PackageAssociationSourceProcessStatsProto_StateStats

// optional .android.service.procstats.ProcessState process_state = 1;
inline bool PackageAssociationSourceProcessStatsProto_StateStats::has_process_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto_StateStats::clear_process_state() {
  process_state_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::android::service::procstats::ProcessState PackageAssociationSourceProcessStatsProto_StateStats::process_state() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.process_state)
  return static_cast< ::android::service::procstats::ProcessState >(process_state_);
}
inline void PackageAssociationSourceProcessStatsProto_StateStats::set_process_state(::android::service::procstats::ProcessState value) {
  assert(::android::service::procstats::ProcessState_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  process_state_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.process_state)
}

// optional int64 duration_ms = 2;
inline bool PackageAssociationSourceProcessStatsProto_StateStats::has_duration_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto_StateStats::clear_duration_ms() {
  duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageAssociationSourceProcessStatsProto_StateStats::duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.duration_ms)
  return duration_ms_;
}
inline void PackageAssociationSourceProcessStatsProto_StateStats::set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.duration_ms)
}

// optional int64 realtime_duration_ms = 3;
inline bool PackageAssociationSourceProcessStatsProto_StateStats::has_realtime_duration_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto_StateStats::clear_realtime_duration_ms() {
  realtime_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageAssociationSourceProcessStatsProto_StateStats::realtime_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.realtime_duration_ms)
  return realtime_duration_ms_;
}
inline void PackageAssociationSourceProcessStatsProto_StateStats::set_realtime_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  realtime_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats.realtime_duration_ms)
}

// -------------------------------------------------------------------

// PackageAssociationSourceProcessStatsProto

// optional int32 process_uid = 1;
inline bool PackageAssociationSourceProcessStatsProto::has_process_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto::clear_process_uid() {
  process_uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PackageAssociationSourceProcessStatsProto::process_uid() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_uid)
  return process_uid_;
}
inline void PackageAssociationSourceProcessStatsProto::set_process_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  process_uid_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_uid)
}

// optional string process_name = 2;
inline bool PackageAssociationSourceProcessStatsProto::has_process_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto::clear_process_name() {
  process_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PackageAssociationSourceProcessStatsProto::process_name() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
  return process_name_.GetNoArena();
}
inline void PackageAssociationSourceProcessStatsProto::set_process_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
}
inline void PackageAssociationSourceProcessStatsProto::set_process_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
}
inline void PackageAssociationSourceProcessStatsProto::set_process_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
}
inline void PackageAssociationSourceProcessStatsProto::set_process_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
}
inline std::string* PackageAssociationSourceProcessStatsProto::mutable_process_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
  return process_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PackageAssociationSourceProcessStatsProto::release_process_name() {
  // @@protoc_insertion_point(field_release:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
  if (!has_process_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return process_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PackageAssociationSourceProcessStatsProto::set_allocated_process_name(std::string* process_name) {
  if (process_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  process_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), process_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.PackageAssociationSourceProcessStatsProto.process_name)
}

// optional string package_name = 7;
inline bool PackageAssociationSourceProcessStatsProto::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PackageAssociationSourceProcessStatsProto::package_name() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
  return package_name_.GetNoArena();
}
inline void PackageAssociationSourceProcessStatsProto::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
}
inline void PackageAssociationSourceProcessStatsProto::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
}
inline void PackageAssociationSourceProcessStatsProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
}
inline void PackageAssociationSourceProcessStatsProto::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
}
inline std::string* PackageAssociationSourceProcessStatsProto::mutable_package_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PackageAssociationSourceProcessStatsProto::release_package_name() {
  // @@protoc_insertion_point(field_release:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PackageAssociationSourceProcessStatsProto::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.PackageAssociationSourceProcessStatsProto.package_name)
}

// optional int32 total_count = 3;
inline bool PackageAssociationSourceProcessStatsProto::has_total_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto::clear_total_count() {
  total_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PackageAssociationSourceProcessStatsProto::total_count() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.total_count)
  return total_count_;
}
inline void PackageAssociationSourceProcessStatsProto::set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  total_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.total_count)
}

// optional int64 total_duration_ms = 4;
inline bool PackageAssociationSourceProcessStatsProto::has_total_duration_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto::clear_total_duration_ms() {
  total_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageAssociationSourceProcessStatsProto::total_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.total_duration_ms)
  return total_duration_ms_;
}
inline void PackageAssociationSourceProcessStatsProto::set_total_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  total_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.total_duration_ms)
}

// optional int32 active_count = 5;
inline bool PackageAssociationSourceProcessStatsProto::has_active_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PackageAssociationSourceProcessStatsProto::clear_active_count() {
  active_count_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PackageAssociationSourceProcessStatsProto::active_count() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_count)
  return active_count_;
}
inline void PackageAssociationSourceProcessStatsProto::set_active_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  active_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_count)
}

// repeated .android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats active_state_stats = 6;
inline int PackageAssociationSourceProcessStatsProto::active_state_stats_size() const {
  return active_state_stats_.size();
}
inline void PackageAssociationSourceProcessStatsProto::clear_active_state_stats() {
  active_state_stats_.Clear();
}
inline ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats* PackageAssociationSourceProcessStatsProto::mutable_active_state_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_state_stats)
  return active_state_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats >*
PackageAssociationSourceProcessStatsProto::mutable_active_state_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_state_stats)
  return &active_state_stats_;
}
inline const ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats& PackageAssociationSourceProcessStatsProto::active_state_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_state_stats)
  return active_state_stats_.Get(index);
}
inline ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats* PackageAssociationSourceProcessStatsProto::add_active_state_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_state_stats)
  return active_state_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto_StateStats >&
PackageAssociationSourceProcessStatsProto::active_state_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.PackageAssociationSourceProcessStatsProto.active_state_stats)
  return active_state_stats_;
}

// -------------------------------------------------------------------

// PackageAssociationProcessStatsProto

// optional string component_name = 1;
inline bool PackageAssociationProcessStatsProto::has_component_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PackageAssociationProcessStatsProto::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PackageAssociationProcessStatsProto::component_name() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
  return component_name_.GetNoArena();
}
inline void PackageAssociationProcessStatsProto::set_component_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  component_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
}
inline void PackageAssociationProcessStatsProto::set_component_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  component_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
}
inline void PackageAssociationProcessStatsProto::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  component_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
}
inline void PackageAssociationProcessStatsProto::set_component_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  component_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
}
inline std::string* PackageAssociationProcessStatsProto::mutable_component_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
  return component_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PackageAssociationProcessStatsProto::release_component_name() {
  // @@protoc_insertion_point(field_release:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
  if (!has_component_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return component_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PackageAssociationProcessStatsProto::set_allocated_component_name(std::string* component_name) {
  if (component_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  component_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.PackageAssociationProcessStatsProto.component_name)
}

// optional int32 total_count = 3;
inline bool PackageAssociationProcessStatsProto::has_total_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PackageAssociationProcessStatsProto::clear_total_count() {
  total_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PackageAssociationProcessStatsProto::total_count() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationProcessStatsProto.total_count)
  return total_count_;
}
inline void PackageAssociationProcessStatsProto::set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  total_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationProcessStatsProto.total_count)
}

// optional int64 total_duration_ms = 4;
inline bool PackageAssociationProcessStatsProto::has_total_duration_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PackageAssociationProcessStatsProto::clear_total_duration_ms() {
  total_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageAssociationProcessStatsProto::total_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationProcessStatsProto.total_duration_ms)
  return total_duration_ms_;
}
inline void PackageAssociationProcessStatsProto::set_total_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  total_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationProcessStatsProto.total_duration_ms)
}

// optional int32 active_count = 5;
inline bool PackageAssociationProcessStatsProto::has_active_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PackageAssociationProcessStatsProto::clear_active_count() {
  active_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PackageAssociationProcessStatsProto::active_count() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationProcessStatsProto.active_count)
  return active_count_;
}
inline void PackageAssociationProcessStatsProto::set_active_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  active_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationProcessStatsProto.active_count)
}

// optional int64 active_duration_ms = 6;
inline bool PackageAssociationProcessStatsProto::has_active_duration_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PackageAssociationProcessStatsProto::clear_active_duration_ms() {
  active_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PackageAssociationProcessStatsProto::active_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationProcessStatsProto.active_duration_ms)
  return active_duration_ms_;
}
inline void PackageAssociationProcessStatsProto::set_active_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  active_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.PackageAssociationProcessStatsProto.active_duration_ms)
}

// repeated .android.service.procstats.PackageAssociationSourceProcessStatsProto sources = 2;
inline int PackageAssociationProcessStatsProto::sources_size() const {
  return sources_.size();
}
inline void PackageAssociationProcessStatsProto::clear_sources() {
  sources_.Clear();
}
inline ::android::service::procstats::PackageAssociationSourceProcessStatsProto* PackageAssociationProcessStatsProto::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.PackageAssociationProcessStatsProto.sources)
  return sources_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto >*
PackageAssociationProcessStatsProto::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.PackageAssociationProcessStatsProto.sources)
  return &sources_;
}
inline const ::android::service::procstats::PackageAssociationSourceProcessStatsProto& PackageAssociationProcessStatsProto::sources(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.PackageAssociationProcessStatsProto.sources)
  return sources_.Get(index);
}
inline ::android::service::procstats::PackageAssociationSourceProcessStatsProto* PackageAssociationProcessStatsProto::add_sources() {
  // @@protoc_insertion_point(field_add:android.service.procstats.PackageAssociationProcessStatsProto.sources)
  return sources_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationSourceProcessStatsProto >&
PackageAssociationProcessStatsProto::sources() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.PackageAssociationProcessStatsProto.sources)
  return sources_;
}

// -------------------------------------------------------------------

// ProcessStatsPackageProto

// optional string package = 1;
inline bool ProcessStatsPackageProto::has_package() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessStatsPackageProto::clear_package() {
  package_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcessStatsPackageProto::package() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsPackageProto.package)
  return package_.GetNoArena();
}
inline void ProcessStatsPackageProto::set_package(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsPackageProto.package)
}
inline void ProcessStatsPackageProto::set_package(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.procstats.ProcessStatsPackageProto.package)
}
inline void ProcessStatsPackageProto::set_package(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.procstats.ProcessStatsPackageProto.package)
}
inline void ProcessStatsPackageProto::set_package(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.procstats.ProcessStatsPackageProto.package)
}
inline std::string* ProcessStatsPackageProto::mutable_package() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsPackageProto.package)
  return package_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcessStatsPackageProto::release_package() {
  // @@protoc_insertion_point(field_release:android.service.procstats.ProcessStatsPackageProto.package)
  if (!has_package()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessStatsPackageProto::set_allocated_package(std::string* package) {
  if (package != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package);
  // @@protoc_insertion_point(field_set_allocated:android.service.procstats.ProcessStatsPackageProto.package)
}

// optional int32 uid = 2;
inline bool ProcessStatsPackageProto::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessStatsPackageProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcessStatsPackageProto::uid() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsPackageProto.uid)
  return uid_;
}
inline void ProcessStatsPackageProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsPackageProto.uid)
}

// optional int64 version = 3;
inline bool ProcessStatsPackageProto::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessStatsPackageProto::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcessStatsPackageProto::version() const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsPackageProto.version)
  return version_;
}
inline void ProcessStatsPackageProto::set_version(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
  // @@protoc_insertion_point(field_set:android.service.procstats.ProcessStatsPackageProto.version)
}

// repeated .android.service.procstats.ProcessStatsProto process_stats = 4;
inline int ProcessStatsPackageProto::process_stats_size() const {
  return process_stats_.size();
}
inline void ProcessStatsPackageProto::clear_process_stats() {
  process_stats_.Clear();
}
inline ::android::service::procstats::ProcessStatsProto* ProcessStatsPackageProto::mutable_process_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsPackageProto.process_stats)
  return process_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >*
ProcessStatsPackageProto::mutable_process_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsPackageProto.process_stats)
  return &process_stats_;
}
inline const ::android::service::procstats::ProcessStatsProto& ProcessStatsPackageProto::process_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsPackageProto.process_stats)
  return process_stats_.Get(index);
}
inline ::android::service::procstats::ProcessStatsProto* ProcessStatsPackageProto::add_process_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsPackageProto.process_stats)
  return process_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::ProcessStatsProto >&
ProcessStatsPackageProto::process_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsPackageProto.process_stats)
  return process_stats_;
}

// repeated .android.service.procstats.PackageServiceStatsProto service_stats = 5;
inline int ProcessStatsPackageProto::service_stats_size() const {
  return service_stats_.size();
}
inline void ProcessStatsPackageProto::clear_service_stats() {
  service_stats_.Clear();
}
inline ::android::service::procstats::PackageServiceStatsProto* ProcessStatsPackageProto::mutable_service_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsPackageProto.service_stats)
  return service_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceStatsProto >*
ProcessStatsPackageProto::mutable_service_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsPackageProto.service_stats)
  return &service_stats_;
}
inline const ::android::service::procstats::PackageServiceStatsProto& ProcessStatsPackageProto::service_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsPackageProto.service_stats)
  return service_stats_.Get(index);
}
inline ::android::service::procstats::PackageServiceStatsProto* ProcessStatsPackageProto::add_service_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsPackageProto.service_stats)
  return service_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageServiceStatsProto >&
ProcessStatsPackageProto::service_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsPackageProto.service_stats)
  return service_stats_;
}

// repeated .android.service.procstats.PackageAssociationProcessStatsProto association_stats = 6;
inline int ProcessStatsPackageProto::association_stats_size() const {
  return association_stats_.size();
}
inline void ProcessStatsPackageProto::clear_association_stats() {
  association_stats_.Clear();
}
inline ::android::service::procstats::PackageAssociationProcessStatsProto* ProcessStatsPackageProto::mutable_association_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.procstats.ProcessStatsPackageProto.association_stats)
  return association_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationProcessStatsProto >*
ProcessStatsPackageProto::mutable_association_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.procstats.ProcessStatsPackageProto.association_stats)
  return &association_stats_;
}
inline const ::android::service::procstats::PackageAssociationProcessStatsProto& ProcessStatsPackageProto::association_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.procstats.ProcessStatsPackageProto.association_stats)
  return association_stats_.Get(index);
}
inline ::android::service::procstats::PackageAssociationProcessStatsProto* ProcessStatsPackageProto::add_association_stats() {
  // @@protoc_insertion_point(field_add:android.service.procstats.ProcessStatsPackageProto.association_stats)
  return association_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::procstats::PackageAssociationProcessStatsProto >&
ProcessStatsPackageProto::association_stats() const {
  // @@protoc_insertion_point(field_list:android.service.procstats.ProcessStatsPackageProto.association_stats)
  return association_stats_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace procstats
}  // namespace service
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::service::procstats::ProcessStatsSectionProto_Status> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprocstats_2eproto
