// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/nfc/ndef.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace nfc {
class NdefMessageProto;
class NdefMessageProtoDefaultTypeInternal;
extern NdefMessageProtoDefaultTypeInternal _NdefMessageProto_default_instance_;
class NdefRecordProto;
class NdefRecordProtoDefaultTypeInternal;
extern NdefRecordProtoDefaultTypeInternal _NdefRecordProto_default_instance_;
}  // namespace nfc
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::nfc::NdefMessageProto* Arena::CreateMaybeMessage<::android::nfc::NdefMessageProto>(Arena*);
template<> ::android::nfc::NdefRecordProto* Arena::CreateMaybeMessage<::android::nfc::NdefRecordProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace nfc {

// ===================================================================

class NdefMessageProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.nfc.NdefMessageProto) */ {
 public:
  NdefMessageProto();
  virtual ~NdefMessageProto();

  NdefMessageProto(const NdefMessageProto& from);
  NdefMessageProto(NdefMessageProto&& from) noexcept
    : NdefMessageProto() {
    *this = ::std::move(from);
  }

  inline NdefMessageProto& operator=(const NdefMessageProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NdefMessageProto& operator=(NdefMessageProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const NdefMessageProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NdefMessageProto* internal_default_instance() {
    return reinterpret_cast<const NdefMessageProto*>(
               &_NdefMessageProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NdefMessageProto& a, NdefMessageProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NdefMessageProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NdefMessageProto* New() const final {
    return CreateMaybeMessage<NdefMessageProto>(nullptr);
  }

  NdefMessageProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NdefMessageProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const NdefMessageProto& from);
  void MergeFrom(const NdefMessageProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NdefMessageProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.nfc.NdefMessageProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNdefRecordsFieldNumber = 1,
  };
  // repeated .android.nfc.NdefRecordProto ndef_records = 1;
  int ndef_records_size() const;
  void clear_ndef_records();
  ::android::nfc::NdefRecordProto* mutable_ndef_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::NdefRecordProto >*
      mutable_ndef_records();
  const ::android::nfc::NdefRecordProto& ndef_records(int index) const;
  ::android::nfc::NdefRecordProto* add_ndef_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::NdefRecordProto >&
      ndef_records() const;

  // @@protoc_insertion_point(class_scope:android.nfc.NdefMessageProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::NdefRecordProto > ndef_records_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto;
};
// -------------------------------------------------------------------

class NdefRecordProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.nfc.NdefRecordProto) */ {
 public:
  NdefRecordProto();
  virtual ~NdefRecordProto();

  NdefRecordProto(const NdefRecordProto& from);
  NdefRecordProto(NdefRecordProto&& from) noexcept
    : NdefRecordProto() {
    *this = ::std::move(from);
  }

  inline NdefRecordProto& operator=(const NdefRecordProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NdefRecordProto& operator=(NdefRecordProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const NdefRecordProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NdefRecordProto* internal_default_instance() {
    return reinterpret_cast<const NdefRecordProto*>(
               &_NdefRecordProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NdefRecordProto& a, NdefRecordProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NdefRecordProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NdefRecordProto* New() const final {
    return CreateMaybeMessage<NdefRecordProto>(nullptr);
  }

  NdefRecordProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NdefRecordProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const NdefRecordProto& from);
  void MergeFrom(const NdefRecordProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NdefRecordProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.nfc.NdefRecordProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
    kPayloadBytesFieldNumber = 3,
  };
  // optional bytes type = 1 [(.android.privacy) = {
  bool has_type() const;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);

  // optional bytes id = 2 [(.android.privacy) = {
  bool has_id() const;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);

  // optional int32 payload_bytes = 3;
  bool has_payload_bytes() const;
  void clear_payload_bytes();
  ::PROTOBUF_NAMESPACE_ID::int32 payload_bytes() const;
  void set_payload_bytes(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.nfc.NdefRecordProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::int32 payload_bytes_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NdefMessageProto

// repeated .android.nfc.NdefRecordProto ndef_records = 1;
inline int NdefMessageProto::ndef_records_size() const {
  return ndef_records_.size();
}
inline void NdefMessageProto::clear_ndef_records() {
  ndef_records_.Clear();
}
inline ::android::nfc::NdefRecordProto* NdefMessageProto::mutable_ndef_records(int index) {
  // @@protoc_insertion_point(field_mutable:android.nfc.NdefMessageProto.ndef_records)
  return ndef_records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::NdefRecordProto >*
NdefMessageProto::mutable_ndef_records() {
  // @@protoc_insertion_point(field_mutable_list:android.nfc.NdefMessageProto.ndef_records)
  return &ndef_records_;
}
inline const ::android::nfc::NdefRecordProto& NdefMessageProto::ndef_records(int index) const {
  // @@protoc_insertion_point(field_get:android.nfc.NdefMessageProto.ndef_records)
  return ndef_records_.Get(index);
}
inline ::android::nfc::NdefRecordProto* NdefMessageProto::add_ndef_records() {
  // @@protoc_insertion_point(field_add:android.nfc.NdefMessageProto.ndef_records)
  return ndef_records_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::NdefRecordProto >&
NdefMessageProto::ndef_records() const {
  // @@protoc_insertion_point(field_list:android.nfc.NdefMessageProto.ndef_records)
  return ndef_records_;
}

// -------------------------------------------------------------------

// NdefRecordProto

// optional bytes type = 1 [(.android.privacy) = {
inline bool NdefRecordProto::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NdefRecordProto::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NdefRecordProto::type() const {
  // @@protoc_insertion_point(field_get:android.nfc.NdefRecordProto.type)
  return type_.GetNoArena();
}
inline void NdefRecordProto::set_type(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.NdefRecordProto.type)
}
inline void NdefRecordProto::set_type(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.NdefRecordProto.type)
}
inline void NdefRecordProto::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.NdefRecordProto.type)
}
inline void NdefRecordProto::set_type(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.NdefRecordProto.type)
}
inline std::string* NdefRecordProto::mutable_type() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.nfc.NdefRecordProto.type)
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NdefRecordProto::release_type() {
  // @@protoc_insertion_point(field_release:android.nfc.NdefRecordProto.type)
  if (!has_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return type_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NdefRecordProto::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.NdefRecordProto.type)
}

// optional bytes id = 2 [(.android.privacy) = {
inline bool NdefRecordProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NdefRecordProto::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NdefRecordProto::id() const {
  // @@protoc_insertion_point(field_get:android.nfc.NdefRecordProto.id)
  return id_.GetNoArena();
}
inline void NdefRecordProto::set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.NdefRecordProto.id)
}
inline void NdefRecordProto::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.NdefRecordProto.id)
}
inline void NdefRecordProto::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.NdefRecordProto.id)
}
inline void NdefRecordProto::set_id(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.NdefRecordProto.id)
}
inline std::string* NdefRecordProto::mutable_id() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.nfc.NdefRecordProto.id)
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NdefRecordProto::release_id() {
  // @@protoc_insertion_point(field_release:android.nfc.NdefRecordProto.id)
  if (!has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NdefRecordProto::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.NdefRecordProto.id)
}

// optional int32 payload_bytes = 3;
inline bool NdefRecordProto::has_payload_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NdefRecordProto::clear_payload_bytes() {
  payload_bytes_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NdefRecordProto::payload_bytes() const {
  // @@protoc_insertion_point(field_get:android.nfc.NdefRecordProto.payload_bytes)
  return payload_bytes_;
}
inline void NdefRecordProto::set_payload_bytes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  payload_bytes_ = value;
  // @@protoc_insertion_point(field_set:android.nfc.NdefRecordProto.payload_bytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nfc
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fndef_2eproto
