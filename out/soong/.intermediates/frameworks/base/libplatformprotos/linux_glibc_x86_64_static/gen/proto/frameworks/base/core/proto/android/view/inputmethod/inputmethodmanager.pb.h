// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/inputmethod/inputmethodmanager.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto;
namespace android {
namespace view {
namespace inputmethod {
class InputMethodManagerProto;
class InputMethodManagerProtoDefaultTypeInternal;
extern InputMethodManagerProtoDefaultTypeInternal _InputMethodManagerProto_default_instance_;
}  // namespace inputmethod
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::view::inputmethod::InputMethodManagerProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodManagerProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace view {
namespace inputmethod {

// ===================================================================

class InputMethodManagerProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodManagerProto) */ {
 public:
  InputMethodManagerProto();
  virtual ~InputMethodManagerProto();

  InputMethodManagerProto(const InputMethodManagerProto& from);
  InputMethodManagerProto(InputMethodManagerProto&& from) noexcept
    : InputMethodManagerProto() {
    *this = ::std::move(from);
  }

  inline InputMethodManagerProto& operator=(const InputMethodManagerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodManagerProto& operator=(InputMethodManagerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodManagerProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodManagerProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodManagerProto*>(
               &_InputMethodManagerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InputMethodManagerProto& a, InputMethodManagerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodManagerProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodManagerProto* New() const final {
    return CreateMaybeMessage<InputMethodManagerProto>(nullptr);
  }

  InputMethodManagerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodManagerProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodManagerProto& from);
  void MergeFrom(const InputMethodManagerProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodManagerProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodManagerProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurIdFieldNumber = 1,
    kDisplayIdFieldNumber = 3,
    kFullscreenModeFieldNumber = 2,
    kActiveFieldNumber = 4,
    kServedConnectingFieldNumber = 5,
  };
  // optional string cur_id = 1;
  bool has_cur_id() const;
  void clear_cur_id();
  const std::string& cur_id() const;
  void set_cur_id(const std::string& value);
  void set_cur_id(std::string&& value);
  void set_cur_id(const char* value);
  void set_cur_id(const char* value, size_t size);
  std::string* mutable_cur_id();
  std::string* release_cur_id();
  void set_allocated_cur_id(std::string* cur_id);

  // optional int32 display_id = 3;
  bool has_display_id() const;
  void clear_display_id();
  ::PROTOBUF_NAMESPACE_ID::int32 display_id() const;
  void set_display_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool fullscreen_mode = 2;
  bool has_fullscreen_mode() const;
  void clear_fullscreen_mode();
  bool fullscreen_mode() const;
  void set_fullscreen_mode(bool value);

  // optional bool active = 4;
  bool has_active() const;
  void clear_active();
  bool active() const;
  void set_active(bool value);

  // optional bool served_connecting = 5;
  bool has_served_connecting() const;
  void clear_served_connecting();
  bool served_connecting() const;
  void set_served_connecting(bool value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodManagerProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cur_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 display_id_;
  bool fullscreen_mode_;
  bool active_;
  bool served_connecting_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputMethodManagerProto

// optional string cur_id = 1;
inline bool InputMethodManagerProto::has_cur_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodManagerProto::clear_cur_id() {
  cur_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputMethodManagerProto::cur_id() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerProto.cur_id)
  return cur_id_.GetNoArena();
}
inline void InputMethodManagerProto::set_cur_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cur_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerProto.cur_id)
}
inline void InputMethodManagerProto::set_cur_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cur_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputMethodManagerProto.cur_id)
}
inline void InputMethodManagerProto::set_cur_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cur_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputMethodManagerProto.cur_id)
}
inline void InputMethodManagerProto::set_cur_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cur_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputMethodManagerProto.cur_id)
}
inline std::string* InputMethodManagerProto::mutable_cur_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodManagerProto.cur_id)
  return cur_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputMethodManagerProto::release_cur_id() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodManagerProto.cur_id)
  if (!has_cur_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cur_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputMethodManagerProto::set_allocated_cur_id(std::string* cur_id) {
  if (cur_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cur_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cur_id);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodManagerProto.cur_id)
}

// optional bool fullscreen_mode = 2;
inline bool InputMethodManagerProto::has_fullscreen_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputMethodManagerProto::clear_fullscreen_mode() {
  fullscreen_mode_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool InputMethodManagerProto::fullscreen_mode() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerProto.fullscreen_mode)
  return fullscreen_mode_;
}
inline void InputMethodManagerProto::set_fullscreen_mode(bool value) {
  _has_bits_[0] |= 0x00000004u;
  fullscreen_mode_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerProto.fullscreen_mode)
}

// optional int32 display_id = 3;
inline bool InputMethodManagerProto::has_display_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputMethodManagerProto::clear_display_id() {
  display_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputMethodManagerProto::display_id() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerProto.display_id)
  return display_id_;
}
inline void InputMethodManagerProto::set_display_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  display_id_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerProto.display_id)
}

// optional bool active = 4;
inline bool InputMethodManagerProto::has_active() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InputMethodManagerProto::clear_active() {
  active_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool InputMethodManagerProto::active() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerProto.active)
  return active_;
}
inline void InputMethodManagerProto::set_active(bool value) {
  _has_bits_[0] |= 0x00000008u;
  active_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerProto.active)
}

// optional bool served_connecting = 5;
inline bool InputMethodManagerProto::has_served_connecting() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InputMethodManagerProto::clear_served_connecting() {
  served_connecting_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool InputMethodManagerProto::served_connecting() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerProto.served_connecting)
  return served_connecting_;
}
inline void InputMethodManagerProto::set_served_connecting(bool value) {
  _has_bits_[0] |= 0x00000010u;
  served_connecting_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerProto.served_connecting)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace inputmethod
}  // namespace view
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodmanager_2eproto
