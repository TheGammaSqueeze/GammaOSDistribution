// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/internal/protolog.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto;
namespace com {
namespace android {
namespace internal {
namespace protolog {
class ProtoLogFileProto;
class ProtoLogFileProtoDefaultTypeInternal;
extern ProtoLogFileProtoDefaultTypeInternal _ProtoLogFileProto_default_instance_;
class ProtoLogMessage;
class ProtoLogMessageDefaultTypeInternal;
extern ProtoLogMessageDefaultTypeInternal _ProtoLogMessage_default_instance_;
}  // namespace protolog
}  // namespace internal
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::internal::protolog::ProtoLogFileProto* Arena::CreateMaybeMessage<::com::android::internal::protolog::ProtoLogFileProto>(Arena*);
template<> ::com::android::internal::protolog::ProtoLogMessage* Arena::CreateMaybeMessage<::com::android::internal::protolog::ProtoLogMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace internal {
namespace protolog {

enum ProtoLogFileProto_MagicNumber : int {
  ProtoLogFileProto_MagicNumber_INVALID = 0,
  ProtoLogFileProto_MagicNumber_MAGIC_NUMBER_L = 1414484560,
  ProtoLogFileProto_MagicNumber_MAGIC_NUMBER_H = 1196379215
};
bool ProtoLogFileProto_MagicNumber_IsValid(int value);
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto_MagicNumber_MagicNumber_MIN = ProtoLogFileProto_MagicNumber_INVALID;
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto_MagicNumber_MagicNumber_MAX = ProtoLogFileProto_MagicNumber_MAGIC_NUMBER_L;
constexpr int ProtoLogFileProto_MagicNumber_MagicNumber_ARRAYSIZE = ProtoLogFileProto_MagicNumber_MagicNumber_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoLogFileProto_MagicNumber_descriptor();
template<typename T>
inline const std::string& ProtoLogFileProto_MagicNumber_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoLogFileProto_MagicNumber>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoLogFileProto_MagicNumber_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoLogFileProto_MagicNumber_descriptor(), enum_t_value);
}
inline bool ProtoLogFileProto_MagicNumber_Parse(
    const std::string& name, ProtoLogFileProto_MagicNumber* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoLogFileProto_MagicNumber>(
    ProtoLogFileProto_MagicNumber_descriptor(), name, value);
}
// ===================================================================

class ProtoLogMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.internal.protolog.ProtoLogMessage) */ {
 public:
  ProtoLogMessage();
  virtual ~ProtoLogMessage();

  ProtoLogMessage(const ProtoLogMessage& from);
  ProtoLogMessage(ProtoLogMessage&& from) noexcept
    : ProtoLogMessage() {
    *this = ::std::move(from);
  }

  inline ProtoLogMessage& operator=(const ProtoLogMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoLogMessage& operator=(ProtoLogMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoLogMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoLogMessage* internal_default_instance() {
    return reinterpret_cast<const ProtoLogMessage*>(
               &_ProtoLogMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoLogMessage& a, ProtoLogMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoLogMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoLogMessage* New() const final {
    return CreateMaybeMessage<ProtoLogMessage>(nullptr);
  }

  ProtoLogMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoLogMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoLogMessage& from);
  void MergeFrom(const ProtoLogMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoLogMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.internal.protolog.ProtoLogMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrParamsFieldNumber = 3,
    kSint64ParamsFieldNumber = 4,
    kDoubleParamsFieldNumber = 5,
    kBooleanParamsFieldNumber = 6,
    kElapsedRealtimeNanosFieldNumber = 2,
    kMessageHashFieldNumber = 1,
  };
  // repeated string str_params = 3;
  int str_params_size() const;
  void clear_str_params();
  const std::string& str_params(int index) const;
  std::string* mutable_str_params(int index);
  void set_str_params(int index, const std::string& value);
  void set_str_params(int index, std::string&& value);
  void set_str_params(int index, const char* value);
  void set_str_params(int index, const char* value, size_t size);
  std::string* add_str_params();
  void add_str_params(const std::string& value);
  void add_str_params(std::string&& value);
  void add_str_params(const char* value);
  void add_str_params(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& str_params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_str_params();

  // repeated sint64 sint64_params = 4 [packed = true];
  int sint64_params_size() const;
  void clear_sint64_params();
  ::PROTOBUF_NAMESPACE_ID::int64 sint64_params(int index) const;
  void set_sint64_params(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_sint64_params(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      sint64_params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_sint64_params();

  // repeated double double_params = 5 [packed = true];
  int double_params_size() const;
  void clear_double_params();
  double double_params(int index) const;
  void set_double_params(int index, double value);
  void add_double_params(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      double_params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_double_params();

  // repeated bool boolean_params = 6 [packed = true];
  int boolean_params_size() const;
  void clear_boolean_params();
  bool boolean_params(int index) const;
  void set_boolean_params(int index, bool value);
  void add_boolean_params(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      boolean_params() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_boolean_params();

  // optional fixed64 elapsed_realtime_nanos = 2;
  bool has_elapsed_realtime_nanos() const;
  void clear_elapsed_realtime_nanos();
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos() const;
  void set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional sfixed32 message_hash = 1;
  bool has_message_hash() const;
  void clear_message_hash();
  ::PROTOBUF_NAMESPACE_ID::int32 message_hash() const;
  void set_message_hash(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.internal.protolog.ProtoLogMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> str_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > sint64_params_;
  mutable std::atomic<int> _sint64_params_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > double_params_;
  mutable std::atomic<int> _double_params_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > boolean_params_;
  mutable std::atomic<int> _boolean_params_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos_;
  ::PROTOBUF_NAMESPACE_ID::int32 message_hash_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto;
};
// -------------------------------------------------------------------

class ProtoLogFileProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.internal.protolog.ProtoLogFileProto) */ {
 public:
  ProtoLogFileProto();
  virtual ~ProtoLogFileProto();

  ProtoLogFileProto(const ProtoLogFileProto& from);
  ProtoLogFileProto(ProtoLogFileProto&& from) noexcept
    : ProtoLogFileProto() {
    *this = ::std::move(from);
  }

  inline ProtoLogFileProto& operator=(const ProtoLogFileProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoLogFileProto& operator=(ProtoLogFileProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoLogFileProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoLogFileProto* internal_default_instance() {
    return reinterpret_cast<const ProtoLogFileProto*>(
               &_ProtoLogFileProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtoLogFileProto& a, ProtoLogFileProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoLogFileProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoLogFileProto* New() const final {
    return CreateMaybeMessage<ProtoLogFileProto>(nullptr);
  }

  ProtoLogFileProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoLogFileProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoLogFileProto& from);
  void MergeFrom(const ProtoLogFileProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoLogFileProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.internal.protolog.ProtoLogFileProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ProtoLogFileProto_MagicNumber MagicNumber;
  static constexpr MagicNumber INVALID =
    ProtoLogFileProto_MagicNumber_INVALID;
  static constexpr MagicNumber MAGIC_NUMBER_L =
    ProtoLogFileProto_MagicNumber_MAGIC_NUMBER_L;
  static constexpr MagicNumber MAGIC_NUMBER_H =
    ProtoLogFileProto_MagicNumber_MAGIC_NUMBER_H;
  static inline bool MagicNumber_IsValid(int value) {
    return ProtoLogFileProto_MagicNumber_IsValid(value);
  }
  static constexpr MagicNumber MagicNumber_MIN =
    ProtoLogFileProto_MagicNumber_MagicNumber_MIN;
  static constexpr MagicNumber MagicNumber_MAX =
    ProtoLogFileProto_MagicNumber_MagicNumber_MAX;
  static constexpr int MagicNumber_ARRAYSIZE =
    ProtoLogFileProto_MagicNumber_MagicNumber_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MagicNumber_descriptor() {
    return ProtoLogFileProto_MagicNumber_descriptor();
  }
  template<typename T>
  static inline const std::string& MagicNumber_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MagicNumber>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MagicNumber_Name.");
    return ProtoLogFileProto_MagicNumber_Name(enum_t_value);
  }
  static inline bool MagicNumber_Parse(const std::string& name,
      MagicNumber* value) {
    return ProtoLogFileProto_MagicNumber_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kLogFieldNumber = 4,
    kVersionFieldNumber = 2,
    kMagicNumberFieldNumber = 1,
    kRealTimeToElapsedTimeOffsetMillisFieldNumber = 3,
  };
  // repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
  int log_size() const;
  void clear_log();
  ::com::android::internal::protolog::ProtoLogMessage* mutable_log(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::protolog::ProtoLogMessage >*
      mutable_log();
  const ::com::android::internal::protolog::ProtoLogMessage& log(int index) const;
  ::com::android::internal::protolog::ProtoLogMessage* add_log();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::protolog::ProtoLogMessage >&
      log() const;

  // optional string version = 2;
  bool has_version() const;
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);

  // optional fixed64 magic_number = 1;
  bool has_magic_number() const;
  void clear_magic_number();
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number() const;
  void set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
  bool has_realtimetoelapsedtimeoffsetmillis() const;
  void clear_realtimetoelapsedtimeoffsetmillis();
  ::PROTOBUF_NAMESPACE_ID::uint64 realtimetoelapsedtimeoffsetmillis() const;
  void set_realtimetoelapsedtimeoffsetmillis(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:com.android.internal.protolog.ProtoLogFileProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::protolog::ProtoLogMessage > log_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number_;
  ::PROTOBUF_NAMESPACE_ID::uint64 realtimetoelapsedtimeoffsetmillis_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoLogMessage

// optional sfixed32 message_hash = 1;
inline bool ProtoLogMessage::has_message_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoLogMessage::clear_message_hash() {
  message_hash_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoLogMessage::message_hash() const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogMessage.message_hash)
  return message_hash_;
}
inline void ProtoLogMessage::set_message_hash(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  message_hash_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.message_hash)
}

// optional fixed64 elapsed_realtime_nanos = 2;
inline bool ProtoLogMessage::has_elapsed_realtime_nanos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoLogMessage::clear_elapsed_realtime_nanos() {
  elapsed_realtime_nanos_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoLogMessage::elapsed_realtime_nanos() const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogMessage.elapsed_realtime_nanos)
  return elapsed_realtime_nanos_;
}
inline void ProtoLogMessage::set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  elapsed_realtime_nanos_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.elapsed_realtime_nanos)
}

// repeated string str_params = 3;
inline int ProtoLogMessage::str_params_size() const {
  return str_params_.size();
}
inline void ProtoLogMessage::clear_str_params() {
  str_params_.Clear();
}
inline const std::string& ProtoLogMessage::str_params(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogMessage.str_params)
  return str_params_.Get(index);
}
inline std::string* ProtoLogMessage::mutable_str_params(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.internal.protolog.ProtoLogMessage.str_params)
  return str_params_.Mutable(index);
}
inline void ProtoLogMessage::set_str_params(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.str_params)
  str_params_.Mutable(index)->assign(value);
}
inline void ProtoLogMessage::set_str_params(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.str_params)
  str_params_.Mutable(index)->assign(std::move(value));
}
inline void ProtoLogMessage::set_str_params(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  str_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.internal.protolog.ProtoLogMessage.str_params)
}
inline void ProtoLogMessage::set_str_params(int index, const char* value, size_t size) {
  str_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.internal.protolog.ProtoLogMessage.str_params)
}
inline std::string* ProtoLogMessage::add_str_params() {
  // @@protoc_insertion_point(field_add_mutable:com.android.internal.protolog.ProtoLogMessage.str_params)
  return str_params_.Add();
}
inline void ProtoLogMessage::add_str_params(const std::string& value) {
  str_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.internal.protolog.ProtoLogMessage.str_params)
}
inline void ProtoLogMessage::add_str_params(std::string&& value) {
  str_params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.internal.protolog.ProtoLogMessage.str_params)
}
inline void ProtoLogMessage::add_str_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  str_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.internal.protolog.ProtoLogMessage.str_params)
}
inline void ProtoLogMessage::add_str_params(const char* value, size_t size) {
  str_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.internal.protolog.ProtoLogMessage.str_params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ProtoLogMessage::str_params() const {
  // @@protoc_insertion_point(field_list:com.android.internal.protolog.ProtoLogMessage.str_params)
  return str_params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ProtoLogMessage::mutable_str_params() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.protolog.ProtoLogMessage.str_params)
  return &str_params_;
}

// repeated sint64 sint64_params = 4 [packed = true];
inline int ProtoLogMessage::sint64_params_size() const {
  return sint64_params_.size();
}
inline void ProtoLogMessage::clear_sint64_params() {
  sint64_params_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoLogMessage::sint64_params(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogMessage.sint64_params)
  return sint64_params_.Get(index);
}
inline void ProtoLogMessage::set_sint64_params(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  sint64_params_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.sint64_params)
}
inline void ProtoLogMessage::add_sint64_params(::PROTOBUF_NAMESPACE_ID::int64 value) {
  sint64_params_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.protolog.ProtoLogMessage.sint64_params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ProtoLogMessage::sint64_params() const {
  // @@protoc_insertion_point(field_list:com.android.internal.protolog.ProtoLogMessage.sint64_params)
  return sint64_params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ProtoLogMessage::mutable_sint64_params() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.protolog.ProtoLogMessage.sint64_params)
  return &sint64_params_;
}

// repeated double double_params = 5 [packed = true];
inline int ProtoLogMessage::double_params_size() const {
  return double_params_.size();
}
inline void ProtoLogMessage::clear_double_params() {
  double_params_.Clear();
}
inline double ProtoLogMessage::double_params(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogMessage.double_params)
  return double_params_.Get(index);
}
inline void ProtoLogMessage::set_double_params(int index, double value) {
  double_params_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.double_params)
}
inline void ProtoLogMessage::add_double_params(double value) {
  double_params_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.protolog.ProtoLogMessage.double_params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProtoLogMessage::double_params() const {
  // @@protoc_insertion_point(field_list:com.android.internal.protolog.ProtoLogMessage.double_params)
  return double_params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProtoLogMessage::mutable_double_params() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.protolog.ProtoLogMessage.double_params)
  return &double_params_;
}

// repeated bool boolean_params = 6 [packed = true];
inline int ProtoLogMessage::boolean_params_size() const {
  return boolean_params_.size();
}
inline void ProtoLogMessage::clear_boolean_params() {
  boolean_params_.Clear();
}
inline bool ProtoLogMessage::boolean_params(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogMessage.boolean_params)
  return boolean_params_.Get(index);
}
inline void ProtoLogMessage::set_boolean_params(int index, bool value) {
  boolean_params_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogMessage.boolean_params)
}
inline void ProtoLogMessage::add_boolean_params(bool value) {
  boolean_params_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.protolog.ProtoLogMessage.boolean_params)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
ProtoLogMessage::boolean_params() const {
  // @@protoc_insertion_point(field_list:com.android.internal.protolog.ProtoLogMessage.boolean_params)
  return boolean_params_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
ProtoLogMessage::mutable_boolean_params() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.protolog.ProtoLogMessage.boolean_params)
  return &boolean_params_;
}

// -------------------------------------------------------------------

// ProtoLogFileProto

// optional fixed64 magic_number = 1;
inline bool ProtoLogFileProto::has_magic_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoLogFileProto::clear_magic_number() {
  magic_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoLogFileProto::magic_number() const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogFileProto.magic_number)
  return magic_number_;
}
inline void ProtoLogFileProto::set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  magic_number_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogFileProto.magic_number)
}

// optional string version = 2;
inline bool ProtoLogFileProto::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoLogFileProto::clear_version() {
  version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoLogFileProto::version() const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogFileProto.version)
  return version_.GetNoArena();
}
inline void ProtoLogFileProto::set_version(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogFileProto.version)
}
inline void ProtoLogFileProto::set_version(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.internal.protolog.ProtoLogFileProto.version)
}
inline void ProtoLogFileProto::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.internal.protolog.ProtoLogFileProto.version)
}
inline void ProtoLogFileProto::set_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.internal.protolog.ProtoLogFileProto.version)
}
inline std::string* ProtoLogFileProto::mutable_version() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.internal.protolog.ProtoLogFileProto.version)
  return version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProtoLogFileProto::release_version() {
  // @@protoc_insertion_point(field_release:com.android.internal.protolog.ProtoLogFileProto.version)
  if (!has_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoLogFileProto::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:com.android.internal.protolog.ProtoLogFileProto.version)
}

// optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
inline bool ProtoLogFileProto::has_realtimetoelapsedtimeoffsetmillis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoLogFileProto::clear_realtimetoelapsedtimeoffsetmillis() {
  realtimetoelapsedtimeoffsetmillis_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoLogFileProto::realtimetoelapsedtimeoffsetmillis() const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogFileProto.realTimeToElapsedTimeOffsetMillis)
  return realtimetoelapsedtimeoffsetmillis_;
}
inline void ProtoLogFileProto::set_realtimetoelapsedtimeoffsetmillis(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  realtimetoelapsedtimeoffsetmillis_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.protolog.ProtoLogFileProto.realTimeToElapsedTimeOffsetMillis)
}

// repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
inline int ProtoLogFileProto::log_size() const {
  return log_.size();
}
inline void ProtoLogFileProto::clear_log() {
  log_.Clear();
}
inline ::com::android::internal::protolog::ProtoLogMessage* ProtoLogFileProto::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.internal.protolog.ProtoLogFileProto.log)
  return log_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::protolog::ProtoLogMessage >*
ProtoLogFileProto::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.protolog.ProtoLogFileProto.log)
  return &log_;
}
inline const ::com::android::internal::protolog::ProtoLogMessage& ProtoLogFileProto::log(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.protolog.ProtoLogFileProto.log)
  return log_.Get(index);
}
inline ::com::android::internal::protolog::ProtoLogMessage* ProtoLogFileProto::add_log() {
  // @@protoc_insertion_point(field_add:com.android.internal.protolog.ProtoLogFileProto.log)
  return log_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::protolog::ProtoLogMessage >&
ProtoLogFileProto::log() const {
  // @@protoc_insertion_point(field_list:com.android.internal.protolog.ProtoLogFileProto.log)
  return log_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protolog
}  // namespace internal
}  // namespace android
}  // namespace com

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::com::android::internal::protolog::ProtoLogFileProto_MagicNumber> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::android::internal::protolog::ProtoLogFileProto_MagicNumber>() {
  return ::com::android::internal::protolog::ProtoLogFileProto_MagicNumber_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto
