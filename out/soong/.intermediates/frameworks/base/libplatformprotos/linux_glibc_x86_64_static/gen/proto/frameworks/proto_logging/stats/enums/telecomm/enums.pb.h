// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/telecomm/enums.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelecomm_2fenums_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelecomm_2fenums_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelecomm_2fenums_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelecomm_2fenums_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelecomm_2fenums_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace telecom {

enum CallStateEnum : int {
  NEW = 0,
  CONNECTING = 1,
  SELECT_PHONE_ACCOUNT = 2,
  DIALING = 3,
  RINGING = 4,
  ACTIVE = 5,
  ON_HOLD = 6,
  DISCONNECTED = 7,
  ABORTED = 8,
  DISCONNECTING = 9,
  PULLING = 10,
  ANSWERED = 11,
  AUDIO_PROCESSING = 12,
  SIMULATED_RINGING = 13
};
bool CallStateEnum_IsValid(int value);
constexpr CallStateEnum CallStateEnum_MIN = NEW;
constexpr CallStateEnum CallStateEnum_MAX = SIMULATED_RINGING;
constexpr int CallStateEnum_ARRAYSIZE = CallStateEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CallStateEnum_descriptor();
template<typename T>
inline const std::string& CallStateEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CallStateEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CallStateEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CallStateEnum_descriptor(), enum_t_value);
}
inline bool CallStateEnum_Parse(
    const std::string& name, CallStateEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CallStateEnum>(
    CallStateEnum_descriptor(), name, value);
}
enum DisconnectCauseEnum : int {
  UNKNOWN = 0,
  ERROR = 1,
  LOCAL = 2,
  REMOTE = 3,
  CANCELED = 4,
  MISSED = 5,
  REJECTED = 6,
  BUSY = 7,
  RESTRICTED = 8,
  OTHER = 9,
  CONNECTION_MANAGER_NOT_SUPPORTED = 10,
  ANSWERED_ELSEWHERE = 11,
  CALL_PULLED = 12
};
bool DisconnectCauseEnum_IsValid(int value);
constexpr DisconnectCauseEnum DisconnectCauseEnum_MIN = UNKNOWN;
constexpr DisconnectCauseEnum DisconnectCauseEnum_MAX = CALL_PULLED;
constexpr int DisconnectCauseEnum_ARRAYSIZE = DisconnectCauseEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DisconnectCauseEnum_descriptor();
template<typename T>
inline const std::string& DisconnectCauseEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DisconnectCauseEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DisconnectCauseEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DisconnectCauseEnum_descriptor(), enum_t_value);
}
inline bool DisconnectCauseEnum_Parse(
    const std::string& name, DisconnectCauseEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DisconnectCauseEnum>(
    DisconnectCauseEnum_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace telecom
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::telecom::CallStateEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::android::telecom::CallStateEnum>() {
  return ::android::telecom::CallStateEnum_descriptor();
}
template <> struct is_proto_enum< ::android::telecom::DisconnectCauseEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::android::telecom::DisconnectCauseEnum>() {
  return ::android::telecom::DisconnectCauseEnum_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelecomm_2fenums_2eproto
