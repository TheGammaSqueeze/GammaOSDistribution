// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/netstats.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
namespace android {
namespace service {
class NetworkIdentityProto;
class NetworkIdentityProtoDefaultTypeInternal;
extern NetworkIdentityProtoDefaultTypeInternal _NetworkIdentityProto_default_instance_;
class NetworkIdentitySetProto;
class NetworkIdentitySetProtoDefaultTypeInternal;
extern NetworkIdentitySetProtoDefaultTypeInternal _NetworkIdentitySetProto_default_instance_;
class NetworkInterfaceProto;
class NetworkInterfaceProtoDefaultTypeInternal;
extern NetworkInterfaceProtoDefaultTypeInternal _NetworkInterfaceProto_default_instance_;
class NetworkStatsCollectionKeyProto;
class NetworkStatsCollectionKeyProtoDefaultTypeInternal;
extern NetworkStatsCollectionKeyProtoDefaultTypeInternal _NetworkStatsCollectionKeyProto_default_instance_;
class NetworkStatsCollectionProto;
class NetworkStatsCollectionProtoDefaultTypeInternal;
extern NetworkStatsCollectionProtoDefaultTypeInternal _NetworkStatsCollectionProto_default_instance_;
class NetworkStatsCollectionStatsProto;
class NetworkStatsCollectionStatsProtoDefaultTypeInternal;
extern NetworkStatsCollectionStatsProtoDefaultTypeInternal _NetworkStatsCollectionStatsProto_default_instance_;
class NetworkStatsHistoryBucketProto;
class NetworkStatsHistoryBucketProtoDefaultTypeInternal;
extern NetworkStatsHistoryBucketProtoDefaultTypeInternal _NetworkStatsHistoryBucketProto_default_instance_;
class NetworkStatsHistoryProto;
class NetworkStatsHistoryProtoDefaultTypeInternal;
extern NetworkStatsHistoryProtoDefaultTypeInternal _NetworkStatsHistoryProto_default_instance_;
class NetworkStatsRecorderProto;
class NetworkStatsRecorderProtoDefaultTypeInternal;
extern NetworkStatsRecorderProtoDefaultTypeInternal _NetworkStatsRecorderProto_default_instance_;
class NetworkStatsServiceDumpProto;
class NetworkStatsServiceDumpProtoDefaultTypeInternal;
extern NetworkStatsServiceDumpProtoDefaultTypeInternal _NetworkStatsServiceDumpProto_default_instance_;
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::service::NetworkIdentityProto* Arena::CreateMaybeMessage<::android::service::NetworkIdentityProto>(Arena*);
template<> ::android::service::NetworkIdentitySetProto* Arena::CreateMaybeMessage<::android::service::NetworkIdentitySetProto>(Arena*);
template<> ::android::service::NetworkInterfaceProto* Arena::CreateMaybeMessage<::android::service::NetworkInterfaceProto>(Arena*);
template<> ::android::service::NetworkStatsCollectionKeyProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsCollectionKeyProto>(Arena*);
template<> ::android::service::NetworkStatsCollectionProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsCollectionProto>(Arena*);
template<> ::android::service::NetworkStatsCollectionStatsProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsCollectionStatsProto>(Arena*);
template<> ::android::service::NetworkStatsHistoryBucketProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsHistoryBucketProto>(Arena*);
template<> ::android::service::NetworkStatsHistoryProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsHistoryProto>(Arena*);
template<> ::android::service::NetworkStatsRecorderProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsRecorderProto>(Arena*);
template<> ::android::service::NetworkStatsServiceDumpProto* Arena::CreateMaybeMessage<::android::service::NetworkStatsServiceDumpProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace service {

// ===================================================================

class NetworkStatsServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsServiceDumpProto) */ {
 public:
  NetworkStatsServiceDumpProto();
  virtual ~NetworkStatsServiceDumpProto();

  NetworkStatsServiceDumpProto(const NetworkStatsServiceDumpProto& from);
  NetworkStatsServiceDumpProto(NetworkStatsServiceDumpProto&& from) noexcept
    : NetworkStatsServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsServiceDumpProto& operator=(const NetworkStatsServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsServiceDumpProto& operator=(NetworkStatsServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsServiceDumpProto*>(
               &_NetworkStatsServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NetworkStatsServiceDumpProto& a, NetworkStatsServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsServiceDumpProto* New() const final {
    return CreateMaybeMessage<NetworkStatsServiceDumpProto>(nullptr);
  }

  NetworkStatsServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsServiceDumpProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsServiceDumpProto& from);
  void MergeFrom(const NetworkStatsServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveInterfacesFieldNumber = 1,
    kActiveUidInterfacesFieldNumber = 2,
    kDevStatsFieldNumber = 3,
    kXtStatsFieldNumber = 4,
    kUidStatsFieldNumber = 5,
    kUidTagStatsFieldNumber = 6,
  };
  // repeated .android.service.NetworkInterfaceProto active_interfaces = 1;
  int active_interfaces_size() const;
  void clear_active_interfaces();
  ::android::service::NetworkInterfaceProto* mutable_active_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >*
      mutable_active_interfaces();
  const ::android::service::NetworkInterfaceProto& active_interfaces(int index) const;
  ::android::service::NetworkInterfaceProto* add_active_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >&
      active_interfaces() const;

  // repeated .android.service.NetworkInterfaceProto active_uid_interfaces = 2;
  int active_uid_interfaces_size() const;
  void clear_active_uid_interfaces();
  ::android::service::NetworkInterfaceProto* mutable_active_uid_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >*
      mutable_active_uid_interfaces();
  const ::android::service::NetworkInterfaceProto& active_uid_interfaces(int index) const;
  ::android::service::NetworkInterfaceProto* add_active_uid_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >&
      active_uid_interfaces() const;

  // optional .android.service.NetworkStatsRecorderProto dev_stats = 3;
  bool has_dev_stats() const;
  void clear_dev_stats();
  const ::android::service::NetworkStatsRecorderProto& dev_stats() const;
  ::android::service::NetworkStatsRecorderProto* release_dev_stats();
  ::android::service::NetworkStatsRecorderProto* mutable_dev_stats();
  void set_allocated_dev_stats(::android::service::NetworkStatsRecorderProto* dev_stats);

  // optional .android.service.NetworkStatsRecorderProto xt_stats = 4;
  bool has_xt_stats() const;
  void clear_xt_stats();
  const ::android::service::NetworkStatsRecorderProto& xt_stats() const;
  ::android::service::NetworkStatsRecorderProto* release_xt_stats();
  ::android::service::NetworkStatsRecorderProto* mutable_xt_stats();
  void set_allocated_xt_stats(::android::service::NetworkStatsRecorderProto* xt_stats);

  // optional .android.service.NetworkStatsRecorderProto uid_stats = 5;
  bool has_uid_stats() const;
  void clear_uid_stats();
  const ::android::service::NetworkStatsRecorderProto& uid_stats() const;
  ::android::service::NetworkStatsRecorderProto* release_uid_stats();
  ::android::service::NetworkStatsRecorderProto* mutable_uid_stats();
  void set_allocated_uid_stats(::android::service::NetworkStatsRecorderProto* uid_stats);

  // optional .android.service.NetworkStatsRecorderProto uid_tag_stats = 6;
  bool has_uid_tag_stats() const;
  void clear_uid_tag_stats();
  const ::android::service::NetworkStatsRecorderProto& uid_tag_stats() const;
  ::android::service::NetworkStatsRecorderProto* release_uid_tag_stats();
  ::android::service::NetworkStatsRecorderProto* mutable_uid_tag_stats();
  void set_allocated_uid_tag_stats(::android::service::NetworkStatsRecorderProto* uid_tag_stats);

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto > active_interfaces_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto > active_uid_interfaces_;
  ::android::service::NetworkStatsRecorderProto* dev_stats_;
  ::android::service::NetworkStatsRecorderProto* xt_stats_;
  ::android::service::NetworkStatsRecorderProto* uid_stats_;
  ::android::service::NetworkStatsRecorderProto* uid_tag_stats_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkInterfaceProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkInterfaceProto) */ {
 public:
  NetworkInterfaceProto();
  virtual ~NetworkInterfaceProto();

  NetworkInterfaceProto(const NetworkInterfaceProto& from);
  NetworkInterfaceProto(NetworkInterfaceProto&& from) noexcept
    : NetworkInterfaceProto() {
    *this = ::std::move(from);
  }

  inline NetworkInterfaceProto& operator=(const NetworkInterfaceProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkInterfaceProto& operator=(NetworkInterfaceProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkInterfaceProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkInterfaceProto* internal_default_instance() {
    return reinterpret_cast<const NetworkInterfaceProto*>(
               &_NetworkInterfaceProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NetworkInterfaceProto& a, NetworkInterfaceProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkInterfaceProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkInterfaceProto* New() const final {
    return CreateMaybeMessage<NetworkInterfaceProto>(nullptr);
  }

  NetworkInterfaceProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkInterfaceProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkInterfaceProto& from);
  void MergeFrom(const NetworkInterfaceProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkInterfaceProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkInterfaceProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInterfaceFieldNumber = 1,
    kIdentitiesFieldNumber = 2,
  };
  // optional string interface = 1;
  bool has_interface() const;
  void clear_interface();
  const std::string& interface() const;
  void set_interface(const std::string& value);
  void set_interface(std::string&& value);
  void set_interface(const char* value);
  void set_interface(const char* value, size_t size);
  std::string* mutable_interface();
  std::string* release_interface();
  void set_allocated_interface(std::string* interface);

  // optional .android.service.NetworkIdentitySetProto identities = 2;
  bool has_identities() const;
  void clear_identities();
  const ::android::service::NetworkIdentitySetProto& identities() const;
  ::android::service::NetworkIdentitySetProto* release_identities();
  ::android::service::NetworkIdentitySetProto* mutable_identities();
  void set_allocated_identities(::android::service::NetworkIdentitySetProto* identities);

  // @@protoc_insertion_point(class_scope:android.service.NetworkInterfaceProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr interface_;
  ::android::service::NetworkIdentitySetProto* identities_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkIdentitySetProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkIdentitySetProto) */ {
 public:
  NetworkIdentitySetProto();
  virtual ~NetworkIdentitySetProto();

  NetworkIdentitySetProto(const NetworkIdentitySetProto& from);
  NetworkIdentitySetProto(NetworkIdentitySetProto&& from) noexcept
    : NetworkIdentitySetProto() {
    *this = ::std::move(from);
  }

  inline NetworkIdentitySetProto& operator=(const NetworkIdentitySetProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkIdentitySetProto& operator=(NetworkIdentitySetProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkIdentitySetProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkIdentitySetProto* internal_default_instance() {
    return reinterpret_cast<const NetworkIdentitySetProto*>(
               &_NetworkIdentitySetProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NetworkIdentitySetProto& a, NetworkIdentitySetProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkIdentitySetProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkIdentitySetProto* New() const final {
    return CreateMaybeMessage<NetworkIdentitySetProto>(nullptr);
  }

  NetworkIdentitySetProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkIdentitySetProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkIdentitySetProto& from);
  void MergeFrom(const NetworkIdentitySetProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkIdentitySetProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkIdentitySetProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentitiesFieldNumber = 1,
  };
  // repeated .android.service.NetworkIdentityProto identities = 1;
  int identities_size() const;
  void clear_identities();
  ::android::service::NetworkIdentityProto* mutable_identities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkIdentityProto >*
      mutable_identities();
  const ::android::service::NetworkIdentityProto& identities(int index) const;
  ::android::service::NetworkIdentityProto* add_identities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkIdentityProto >&
      identities() const;

  // @@protoc_insertion_point(class_scope:android.service.NetworkIdentitySetProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkIdentityProto > identities_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkIdentityProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkIdentityProto) */ {
 public:
  NetworkIdentityProto();
  virtual ~NetworkIdentityProto();

  NetworkIdentityProto(const NetworkIdentityProto& from);
  NetworkIdentityProto(NetworkIdentityProto&& from) noexcept
    : NetworkIdentityProto() {
    *this = ::std::move(from);
  }

  inline NetworkIdentityProto& operator=(const NetworkIdentityProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkIdentityProto& operator=(NetworkIdentityProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkIdentityProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkIdentityProto* internal_default_instance() {
    return reinterpret_cast<const NetworkIdentityProto*>(
               &_NetworkIdentityProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(NetworkIdentityProto& a, NetworkIdentityProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkIdentityProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkIdentityProto* New() const final {
    return CreateMaybeMessage<NetworkIdentityProto>(nullptr);
  }

  NetworkIdentityProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkIdentityProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkIdentityProto& from);
  void MergeFrom(const NetworkIdentityProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkIdentityProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkIdentityProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriberIdFieldNumber = 2,
    kNetworkIdFieldNumber = 3,
    kTypeFieldNumber = 1,
    kRoamingFieldNumber = 4,
    kMeteredFieldNumber = 5,
    kDefaultNetworkFieldNumber = 6,
    kOemManagedNetworkFieldNumber = 7,
  };
  // optional string subscriber_id = 2 [(.android.privacy) = {
  bool has_subscriber_id() const;
  void clear_subscriber_id();
  const std::string& subscriber_id() const;
  void set_subscriber_id(const std::string& value);
  void set_subscriber_id(std::string&& value);
  void set_subscriber_id(const char* value);
  void set_subscriber_id(const char* value, size_t size);
  std::string* mutable_subscriber_id();
  std::string* release_subscriber_id();
  void set_allocated_subscriber_id(std::string* subscriber_id);

  // optional string network_id = 3 [(.android.privacy) = {
  bool has_network_id() const;
  void clear_network_id();
  const std::string& network_id() const;
  void set_network_id(const std::string& value);
  void set_network_id(std::string&& value);
  void set_network_id(const char* value);
  void set_network_id(const char* value, size_t size);
  std::string* mutable_network_id();
  std::string* release_network_id();
  void set_allocated_network_id(std::string* network_id);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool roaming = 4;
  bool has_roaming() const;
  void clear_roaming();
  bool roaming() const;
  void set_roaming(bool value);

  // optional bool metered = 5;
  bool has_metered() const;
  void clear_metered();
  bool metered() const;
  void set_metered(bool value);

  // optional bool default_network = 6;
  bool has_default_network() const;
  void clear_default_network();
  bool default_network() const;
  void set_default_network(bool value);

  // optional int32 oem_managed_network = 7;
  bool has_oem_managed_network() const;
  void clear_oem_managed_network();
  ::PROTOBUF_NAMESPACE_ID::int32 oem_managed_network() const;
  void set_oem_managed_network(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.NetworkIdentityProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr subscriber_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr network_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  bool roaming_;
  bool metered_;
  bool default_network_;
  ::PROTOBUF_NAMESPACE_ID::int32 oem_managed_network_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatsRecorderProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsRecorderProto) */ {
 public:
  NetworkStatsRecorderProto();
  virtual ~NetworkStatsRecorderProto();

  NetworkStatsRecorderProto(const NetworkStatsRecorderProto& from);
  NetworkStatsRecorderProto(NetworkStatsRecorderProto&& from) noexcept
    : NetworkStatsRecorderProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsRecorderProto& operator=(const NetworkStatsRecorderProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsRecorderProto& operator=(NetworkStatsRecorderProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsRecorderProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsRecorderProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsRecorderProto*>(
               &_NetworkStatsRecorderProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(NetworkStatsRecorderProto& a, NetworkStatsRecorderProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsRecorderProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsRecorderProto* New() const final {
    return CreateMaybeMessage<NetworkStatsRecorderProto>(nullptr);
  }

  NetworkStatsRecorderProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsRecorderProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsRecorderProto& from);
  void MergeFrom(const NetworkStatsRecorderProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsRecorderProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsRecorderProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCompleteHistoryFieldNumber = 2,
    kPendingTotalBytesFieldNumber = 1,
  };
  // optional .android.service.NetworkStatsCollectionProto complete_history = 2;
  bool has_complete_history() const;
  void clear_complete_history();
  const ::android::service::NetworkStatsCollectionProto& complete_history() const;
  ::android::service::NetworkStatsCollectionProto* release_complete_history();
  ::android::service::NetworkStatsCollectionProto* mutable_complete_history();
  void set_allocated_complete_history(::android::service::NetworkStatsCollectionProto* complete_history);

  // optional int64 pending_total_bytes = 1;
  bool has_pending_total_bytes() const;
  void clear_pending_total_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 pending_total_bytes() const;
  void set_pending_total_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsRecorderProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::service::NetworkStatsCollectionProto* complete_history_;
  ::PROTOBUF_NAMESPACE_ID::int64 pending_total_bytes_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatsCollectionProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsCollectionProto) */ {
 public:
  NetworkStatsCollectionProto();
  virtual ~NetworkStatsCollectionProto();

  NetworkStatsCollectionProto(const NetworkStatsCollectionProto& from);
  NetworkStatsCollectionProto(NetworkStatsCollectionProto&& from) noexcept
    : NetworkStatsCollectionProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsCollectionProto& operator=(const NetworkStatsCollectionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsCollectionProto& operator=(NetworkStatsCollectionProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsCollectionProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsCollectionProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsCollectionProto*>(
               &_NetworkStatsCollectionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(NetworkStatsCollectionProto& a, NetworkStatsCollectionProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsCollectionProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsCollectionProto* New() const final {
    return CreateMaybeMessage<NetworkStatsCollectionProto>(nullptr);
  }

  NetworkStatsCollectionProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsCollectionProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsCollectionProto& from);
  void MergeFrom(const NetworkStatsCollectionProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsCollectionProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsCollectionProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 1,
  };
  // repeated .android.service.NetworkStatsCollectionStatsProto stats = 1;
  int stats_size() const;
  void clear_stats();
  ::android::service::NetworkStatsCollectionStatsProto* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsCollectionStatsProto >*
      mutable_stats();
  const ::android::service::NetworkStatsCollectionStatsProto& stats(int index) const;
  ::android::service::NetworkStatsCollectionStatsProto* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsCollectionStatsProto >&
      stats() const;

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsCollectionProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsCollectionStatsProto > stats_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatsCollectionStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsCollectionStatsProto) */ {
 public:
  NetworkStatsCollectionStatsProto();
  virtual ~NetworkStatsCollectionStatsProto();

  NetworkStatsCollectionStatsProto(const NetworkStatsCollectionStatsProto& from);
  NetworkStatsCollectionStatsProto(NetworkStatsCollectionStatsProto&& from) noexcept
    : NetworkStatsCollectionStatsProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsCollectionStatsProto& operator=(const NetworkStatsCollectionStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsCollectionStatsProto& operator=(NetworkStatsCollectionStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsCollectionStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsCollectionStatsProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsCollectionStatsProto*>(
               &_NetworkStatsCollectionStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(NetworkStatsCollectionStatsProto& a, NetworkStatsCollectionStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsCollectionStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsCollectionStatsProto* New() const final {
    return CreateMaybeMessage<NetworkStatsCollectionStatsProto>(nullptr);
  }

  NetworkStatsCollectionStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsCollectionStatsProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsCollectionStatsProto& from);
  void MergeFrom(const NetworkStatsCollectionStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsCollectionStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsCollectionStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kHistoryFieldNumber = 2,
  };
  // optional .android.service.NetworkStatsCollectionKeyProto key = 1;
  bool has_key() const;
  void clear_key();
  const ::android::service::NetworkStatsCollectionKeyProto& key() const;
  ::android::service::NetworkStatsCollectionKeyProto* release_key();
  ::android::service::NetworkStatsCollectionKeyProto* mutable_key();
  void set_allocated_key(::android::service::NetworkStatsCollectionKeyProto* key);

  // optional .android.service.NetworkStatsHistoryProto history = 2;
  bool has_history() const;
  void clear_history();
  const ::android::service::NetworkStatsHistoryProto& history() const;
  ::android::service::NetworkStatsHistoryProto* release_history();
  ::android::service::NetworkStatsHistoryProto* mutable_history();
  void set_allocated_history(::android::service::NetworkStatsHistoryProto* history);

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsCollectionStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::service::NetworkStatsCollectionKeyProto* key_;
  ::android::service::NetworkStatsHistoryProto* history_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatsCollectionKeyProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsCollectionKeyProto) */ {
 public:
  NetworkStatsCollectionKeyProto();
  virtual ~NetworkStatsCollectionKeyProto();

  NetworkStatsCollectionKeyProto(const NetworkStatsCollectionKeyProto& from);
  NetworkStatsCollectionKeyProto(NetworkStatsCollectionKeyProto&& from) noexcept
    : NetworkStatsCollectionKeyProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsCollectionKeyProto& operator=(const NetworkStatsCollectionKeyProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsCollectionKeyProto& operator=(NetworkStatsCollectionKeyProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsCollectionKeyProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsCollectionKeyProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsCollectionKeyProto*>(
               &_NetworkStatsCollectionKeyProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(NetworkStatsCollectionKeyProto& a, NetworkStatsCollectionKeyProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsCollectionKeyProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsCollectionKeyProto* New() const final {
    return CreateMaybeMessage<NetworkStatsCollectionKeyProto>(nullptr);
  }

  NetworkStatsCollectionKeyProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsCollectionKeyProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsCollectionKeyProto& from);
  void MergeFrom(const NetworkStatsCollectionKeyProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsCollectionKeyProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsCollectionKeyProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentityFieldNumber = 1,
    kUidFieldNumber = 2,
    kSetFieldNumber = 3,
    kTagFieldNumber = 4,
  };
  // optional .android.service.NetworkIdentitySetProto identity = 1;
  bool has_identity() const;
  void clear_identity();
  const ::android::service::NetworkIdentitySetProto& identity() const;
  ::android::service::NetworkIdentitySetProto* release_identity();
  ::android::service::NetworkIdentitySetProto* mutable_identity();
  void set_allocated_identity(::android::service::NetworkIdentitySetProto* identity);

  // optional int32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 set = 3;
  bool has_set() const;
  void clear_set();
  ::PROTOBUF_NAMESPACE_ID::int32 set() const;
  void set_set(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 tag = 4;
  bool has_tag() const;
  void clear_tag();
  ::PROTOBUF_NAMESPACE_ID::int32 tag() const;
  void set_tag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsCollectionKeyProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::service::NetworkIdentitySetProto* identity_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 set_;
  ::PROTOBUF_NAMESPACE_ID::int32 tag_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatsHistoryProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsHistoryProto) */ {
 public:
  NetworkStatsHistoryProto();
  virtual ~NetworkStatsHistoryProto();

  NetworkStatsHistoryProto(const NetworkStatsHistoryProto& from);
  NetworkStatsHistoryProto(NetworkStatsHistoryProto&& from) noexcept
    : NetworkStatsHistoryProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsHistoryProto& operator=(const NetworkStatsHistoryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsHistoryProto& operator=(NetworkStatsHistoryProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsHistoryProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsHistoryProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsHistoryProto*>(
               &_NetworkStatsHistoryProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(NetworkStatsHistoryProto& a, NetworkStatsHistoryProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsHistoryProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsHistoryProto* New() const final {
    return CreateMaybeMessage<NetworkStatsHistoryProto>(nullptr);
  }

  NetworkStatsHistoryProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsHistoryProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsHistoryProto& from);
  void MergeFrom(const NetworkStatsHistoryProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsHistoryProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsHistoryProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketsFieldNumber = 2,
    kBucketDurationMsFieldNumber = 1,
  };
  // repeated .android.service.NetworkStatsHistoryBucketProto buckets = 2;
  int buckets_size() const;
  void clear_buckets();
  ::android::service::NetworkStatsHistoryBucketProto* mutable_buckets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsHistoryBucketProto >*
      mutable_buckets();
  const ::android::service::NetworkStatsHistoryBucketProto& buckets(int index) const;
  ::android::service::NetworkStatsHistoryBucketProto* add_buckets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsHistoryBucketProto >&
      buckets() const;

  // optional int64 bucket_duration_ms = 1;
  bool has_bucket_duration_ms() const;
  void clear_bucket_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 bucket_duration_ms() const;
  void set_bucket_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsHistoryProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsHistoryBucketProto > buckets_;
  ::PROTOBUF_NAMESPACE_ID::int64 bucket_duration_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// -------------------------------------------------------------------

class NetworkStatsHistoryBucketProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.service.NetworkStatsHistoryBucketProto) */ {
 public:
  NetworkStatsHistoryBucketProto();
  virtual ~NetworkStatsHistoryBucketProto();

  NetworkStatsHistoryBucketProto(const NetworkStatsHistoryBucketProto& from);
  NetworkStatsHistoryBucketProto(NetworkStatsHistoryBucketProto&& from) noexcept
    : NetworkStatsHistoryBucketProto() {
    *this = ::std::move(from);
  }

  inline NetworkStatsHistoryBucketProto& operator=(const NetworkStatsHistoryBucketProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkStatsHistoryBucketProto& operator=(NetworkStatsHistoryBucketProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NetworkStatsHistoryBucketProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkStatsHistoryBucketProto* internal_default_instance() {
    return reinterpret_cast<const NetworkStatsHistoryBucketProto*>(
               &_NetworkStatsHistoryBucketProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(NetworkStatsHistoryBucketProto& a, NetworkStatsHistoryBucketProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkStatsHistoryBucketProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkStatsHistoryBucketProto* New() const final {
    return CreateMaybeMessage<NetworkStatsHistoryBucketProto>(nullptr);
  }

  NetworkStatsHistoryBucketProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkStatsHistoryBucketProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NetworkStatsHistoryBucketProto& from);
  void MergeFrom(const NetworkStatsHistoryBucketProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkStatsHistoryBucketProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.NetworkStatsHistoryBucketProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketStartMsFieldNumber = 1,
    kRxBytesFieldNumber = 2,
    kRxPacketsFieldNumber = 3,
    kTxBytesFieldNumber = 4,
    kTxPacketsFieldNumber = 5,
    kOperationsFieldNumber = 6,
  };
  // optional int64 bucket_start_ms = 1;
  bool has_bucket_start_ms() const;
  void clear_bucket_start_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 bucket_start_ms() const;
  void set_bucket_start_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 rx_bytes = 2;
  bool has_rx_bytes() const;
  void clear_rx_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 rx_bytes() const;
  void set_rx_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 rx_packets = 3;
  bool has_rx_packets() const;
  void clear_rx_packets();
  ::PROTOBUF_NAMESPACE_ID::int64 rx_packets() const;
  void set_rx_packets(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 tx_bytes = 4;
  bool has_tx_bytes() const;
  void clear_tx_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 tx_bytes() const;
  void set_tx_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 tx_packets = 5;
  bool has_tx_packets() const;
  void clear_tx_packets();
  ::PROTOBUF_NAMESPACE_ID::int64 tx_packets() const;
  void set_tx_packets(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 operations = 6;
  bool has_operations() const;
  void clear_operations();
  ::PROTOBUF_NAMESPACE_ID::int64 operations() const;
  void set_operations(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.service.NetworkStatsHistoryBucketProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 bucket_start_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 rx_bytes_;
  ::PROTOBUF_NAMESPACE_ID::int64 rx_packets_;
  ::PROTOBUF_NAMESPACE_ID::int64 tx_bytes_;
  ::PROTOBUF_NAMESPACE_ID::int64 tx_packets_;
  ::PROTOBUF_NAMESPACE_ID::int64 operations_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetworkStatsServiceDumpProto

// repeated .android.service.NetworkInterfaceProto active_interfaces = 1;
inline int NetworkStatsServiceDumpProto::active_interfaces_size() const {
  return active_interfaces_.size();
}
inline void NetworkStatsServiceDumpProto::clear_active_interfaces() {
  active_interfaces_.Clear();
}
inline ::android::service::NetworkInterfaceProto* NetworkStatsServiceDumpProto::mutable_active_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsServiceDumpProto.active_interfaces)
  return active_interfaces_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >*
NetworkStatsServiceDumpProto::mutable_active_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:android.service.NetworkStatsServiceDumpProto.active_interfaces)
  return &active_interfaces_;
}
inline const ::android::service::NetworkInterfaceProto& NetworkStatsServiceDumpProto::active_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsServiceDumpProto.active_interfaces)
  return active_interfaces_.Get(index);
}
inline ::android::service::NetworkInterfaceProto* NetworkStatsServiceDumpProto::add_active_interfaces() {
  // @@protoc_insertion_point(field_add:android.service.NetworkStatsServiceDumpProto.active_interfaces)
  return active_interfaces_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >&
NetworkStatsServiceDumpProto::active_interfaces() const {
  // @@protoc_insertion_point(field_list:android.service.NetworkStatsServiceDumpProto.active_interfaces)
  return active_interfaces_;
}

// repeated .android.service.NetworkInterfaceProto active_uid_interfaces = 2;
inline int NetworkStatsServiceDumpProto::active_uid_interfaces_size() const {
  return active_uid_interfaces_.size();
}
inline void NetworkStatsServiceDumpProto::clear_active_uid_interfaces() {
  active_uid_interfaces_.Clear();
}
inline ::android::service::NetworkInterfaceProto* NetworkStatsServiceDumpProto::mutable_active_uid_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsServiceDumpProto.active_uid_interfaces)
  return active_uid_interfaces_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >*
NetworkStatsServiceDumpProto::mutable_active_uid_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:android.service.NetworkStatsServiceDumpProto.active_uid_interfaces)
  return &active_uid_interfaces_;
}
inline const ::android::service::NetworkInterfaceProto& NetworkStatsServiceDumpProto::active_uid_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsServiceDumpProto.active_uid_interfaces)
  return active_uid_interfaces_.Get(index);
}
inline ::android::service::NetworkInterfaceProto* NetworkStatsServiceDumpProto::add_active_uid_interfaces() {
  // @@protoc_insertion_point(field_add:android.service.NetworkStatsServiceDumpProto.active_uid_interfaces)
  return active_uid_interfaces_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkInterfaceProto >&
NetworkStatsServiceDumpProto::active_uid_interfaces() const {
  // @@protoc_insertion_point(field_list:android.service.NetworkStatsServiceDumpProto.active_uid_interfaces)
  return active_uid_interfaces_;
}

// optional .android.service.NetworkStatsRecorderProto dev_stats = 3;
inline bool NetworkStatsServiceDumpProto::has_dev_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatsServiceDumpProto::clear_dev_stats() {
  if (dev_stats_ != nullptr) dev_stats_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::service::NetworkStatsRecorderProto& NetworkStatsServiceDumpProto::dev_stats() const {
  const ::android::service::NetworkStatsRecorderProto* p = dev_stats_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsServiceDumpProto.dev_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsRecorderProto*>(
      &::android::service::_NetworkStatsRecorderProto_default_instance_);
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::release_dev_stats() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsServiceDumpProto.dev_stats)
  _has_bits_[0] &= ~0x00000001u;
  ::android::service::NetworkStatsRecorderProto* temp = dev_stats_;
  dev_stats_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::mutable_dev_stats() {
  _has_bits_[0] |= 0x00000001u;
  if (dev_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsRecorderProto>(GetArenaNoVirtual());
    dev_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsServiceDumpProto.dev_stats)
  return dev_stats_;
}
inline void NetworkStatsServiceDumpProto::set_allocated_dev_stats(::android::service::NetworkStatsRecorderProto* dev_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dev_stats_;
  }
  if (dev_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dev_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dev_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dev_stats_ = dev_stats;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsServiceDumpProto.dev_stats)
}

// optional .android.service.NetworkStatsRecorderProto xt_stats = 4;
inline bool NetworkStatsServiceDumpProto::has_xt_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkStatsServiceDumpProto::clear_xt_stats() {
  if (xt_stats_ != nullptr) xt_stats_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::service::NetworkStatsRecorderProto& NetworkStatsServiceDumpProto::xt_stats() const {
  const ::android::service::NetworkStatsRecorderProto* p = xt_stats_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsServiceDumpProto.xt_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsRecorderProto*>(
      &::android::service::_NetworkStatsRecorderProto_default_instance_);
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::release_xt_stats() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsServiceDumpProto.xt_stats)
  _has_bits_[0] &= ~0x00000002u;
  ::android::service::NetworkStatsRecorderProto* temp = xt_stats_;
  xt_stats_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::mutable_xt_stats() {
  _has_bits_[0] |= 0x00000002u;
  if (xt_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsRecorderProto>(GetArenaNoVirtual());
    xt_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsServiceDumpProto.xt_stats)
  return xt_stats_;
}
inline void NetworkStatsServiceDumpProto::set_allocated_xt_stats(::android::service::NetworkStatsRecorderProto* xt_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete xt_stats_;
  }
  if (xt_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      xt_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, xt_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  xt_stats_ = xt_stats;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsServiceDumpProto.xt_stats)
}

// optional .android.service.NetworkStatsRecorderProto uid_stats = 5;
inline bool NetworkStatsServiceDumpProto::has_uid_stats() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetworkStatsServiceDumpProto::clear_uid_stats() {
  if (uid_stats_ != nullptr) uid_stats_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::android::service::NetworkStatsRecorderProto& NetworkStatsServiceDumpProto::uid_stats() const {
  const ::android::service::NetworkStatsRecorderProto* p = uid_stats_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsServiceDumpProto.uid_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsRecorderProto*>(
      &::android::service::_NetworkStatsRecorderProto_default_instance_);
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::release_uid_stats() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsServiceDumpProto.uid_stats)
  _has_bits_[0] &= ~0x00000004u;
  ::android::service::NetworkStatsRecorderProto* temp = uid_stats_;
  uid_stats_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::mutable_uid_stats() {
  _has_bits_[0] |= 0x00000004u;
  if (uid_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsRecorderProto>(GetArenaNoVirtual());
    uid_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsServiceDumpProto.uid_stats)
  return uid_stats_;
}
inline void NetworkStatsServiceDumpProto::set_allocated_uid_stats(::android::service::NetworkStatsRecorderProto* uid_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete uid_stats_;
  }
  if (uid_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uid_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uid_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  uid_stats_ = uid_stats;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsServiceDumpProto.uid_stats)
}

// optional .android.service.NetworkStatsRecorderProto uid_tag_stats = 6;
inline bool NetworkStatsServiceDumpProto::has_uid_tag_stats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetworkStatsServiceDumpProto::clear_uid_tag_stats() {
  if (uid_tag_stats_ != nullptr) uid_tag_stats_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::android::service::NetworkStatsRecorderProto& NetworkStatsServiceDumpProto::uid_tag_stats() const {
  const ::android::service::NetworkStatsRecorderProto* p = uid_tag_stats_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsServiceDumpProto.uid_tag_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsRecorderProto*>(
      &::android::service::_NetworkStatsRecorderProto_default_instance_);
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::release_uid_tag_stats() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsServiceDumpProto.uid_tag_stats)
  _has_bits_[0] &= ~0x00000008u;
  ::android::service::NetworkStatsRecorderProto* temp = uid_tag_stats_;
  uid_tag_stats_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsRecorderProto* NetworkStatsServiceDumpProto::mutable_uid_tag_stats() {
  _has_bits_[0] |= 0x00000008u;
  if (uid_tag_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsRecorderProto>(GetArenaNoVirtual());
    uid_tag_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsServiceDumpProto.uid_tag_stats)
  return uid_tag_stats_;
}
inline void NetworkStatsServiceDumpProto::set_allocated_uid_tag_stats(::android::service::NetworkStatsRecorderProto* uid_tag_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete uid_tag_stats_;
  }
  if (uid_tag_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uid_tag_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uid_tag_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  uid_tag_stats_ = uid_tag_stats;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsServiceDumpProto.uid_tag_stats)
}

// -------------------------------------------------------------------

// NetworkInterfaceProto

// optional string interface = 1;
inline bool NetworkInterfaceProto::has_interface() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkInterfaceProto::clear_interface() {
  interface_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetworkInterfaceProto::interface() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkInterfaceProto.interface)
  return interface_.GetNoArena();
}
inline void NetworkInterfaceProto::set_interface(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.NetworkInterfaceProto.interface)
}
inline void NetworkInterfaceProto::set_interface(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  interface_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.NetworkInterfaceProto.interface)
}
inline void NetworkInterfaceProto::set_interface(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.NetworkInterfaceProto.interface)
}
inline void NetworkInterfaceProto::set_interface(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  interface_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.NetworkInterfaceProto.interface)
}
inline std::string* NetworkInterfaceProto::mutable_interface() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.NetworkInterfaceProto.interface)
  return interface_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NetworkInterfaceProto::release_interface() {
  // @@protoc_insertion_point(field_release:android.service.NetworkInterfaceProto.interface)
  if (!has_interface()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return interface_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkInterfaceProto::set_allocated_interface(std::string* interface) {
  if (interface != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  interface_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkInterfaceProto.interface)
}

// optional .android.service.NetworkIdentitySetProto identities = 2;
inline bool NetworkInterfaceProto::has_identities() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkInterfaceProto::clear_identities() {
  if (identities_ != nullptr) identities_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::service::NetworkIdentitySetProto& NetworkInterfaceProto::identities() const {
  const ::android::service::NetworkIdentitySetProto* p = identities_;
  // @@protoc_insertion_point(field_get:android.service.NetworkInterfaceProto.identities)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkIdentitySetProto*>(
      &::android::service::_NetworkIdentitySetProto_default_instance_);
}
inline ::android::service::NetworkIdentitySetProto* NetworkInterfaceProto::release_identities() {
  // @@protoc_insertion_point(field_release:android.service.NetworkInterfaceProto.identities)
  _has_bits_[0] &= ~0x00000002u;
  ::android::service::NetworkIdentitySetProto* temp = identities_;
  identities_ = nullptr;
  return temp;
}
inline ::android::service::NetworkIdentitySetProto* NetworkInterfaceProto::mutable_identities() {
  _has_bits_[0] |= 0x00000002u;
  if (identities_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkIdentitySetProto>(GetArenaNoVirtual());
    identities_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkInterfaceProto.identities)
  return identities_;
}
inline void NetworkInterfaceProto::set_allocated_identities(::android::service::NetworkIdentitySetProto* identities) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete identities_;
  }
  if (identities) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      identities = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, identities, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  identities_ = identities;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkInterfaceProto.identities)
}

// -------------------------------------------------------------------

// NetworkIdentitySetProto

// repeated .android.service.NetworkIdentityProto identities = 1;
inline int NetworkIdentitySetProto::identities_size() const {
  return identities_.size();
}
inline void NetworkIdentitySetProto::clear_identities() {
  identities_.Clear();
}
inline ::android::service::NetworkIdentityProto* NetworkIdentitySetProto::mutable_identities(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.NetworkIdentitySetProto.identities)
  return identities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkIdentityProto >*
NetworkIdentitySetProto::mutable_identities() {
  // @@protoc_insertion_point(field_mutable_list:android.service.NetworkIdentitySetProto.identities)
  return &identities_;
}
inline const ::android::service::NetworkIdentityProto& NetworkIdentitySetProto::identities(int index) const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentitySetProto.identities)
  return identities_.Get(index);
}
inline ::android::service::NetworkIdentityProto* NetworkIdentitySetProto::add_identities() {
  // @@protoc_insertion_point(field_add:android.service.NetworkIdentitySetProto.identities)
  return identities_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkIdentityProto >&
NetworkIdentitySetProto::identities() const {
  // @@protoc_insertion_point(field_list:android.service.NetworkIdentitySetProto.identities)
  return identities_;
}

// -------------------------------------------------------------------

// NetworkIdentityProto

// optional int32 type = 1;
inline bool NetworkIdentityProto::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetworkIdentityProto::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetworkIdentityProto::type() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.type)
  return type_;
}
inline void NetworkIdentityProto::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.type)
}

// optional string subscriber_id = 2 [(.android.privacy) = {
inline bool NetworkIdentityProto::has_subscriber_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkIdentityProto::clear_subscriber_id() {
  subscriber_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetworkIdentityProto::subscriber_id() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.subscriber_id)
  return subscriber_id_.GetNoArena();
}
inline void NetworkIdentityProto::set_subscriber_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  subscriber_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.subscriber_id)
}
inline void NetworkIdentityProto::set_subscriber_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  subscriber_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.NetworkIdentityProto.subscriber_id)
}
inline void NetworkIdentityProto::set_subscriber_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  subscriber_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.NetworkIdentityProto.subscriber_id)
}
inline void NetworkIdentityProto::set_subscriber_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  subscriber_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.NetworkIdentityProto.subscriber_id)
}
inline std::string* NetworkIdentityProto::mutable_subscriber_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.NetworkIdentityProto.subscriber_id)
  return subscriber_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NetworkIdentityProto::release_subscriber_id() {
  // @@protoc_insertion_point(field_release:android.service.NetworkIdentityProto.subscriber_id)
  if (!has_subscriber_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return subscriber_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkIdentityProto::set_allocated_subscriber_id(std::string* subscriber_id) {
  if (subscriber_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  subscriber_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subscriber_id);
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkIdentityProto.subscriber_id)
}

// optional string network_id = 3 [(.android.privacy) = {
inline bool NetworkIdentityProto::has_network_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkIdentityProto::clear_network_id() {
  network_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NetworkIdentityProto::network_id() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.network_id)
  return network_id_.GetNoArena();
}
inline void NetworkIdentityProto::set_network_id(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  network_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.network_id)
}
inline void NetworkIdentityProto::set_network_id(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  network_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.NetworkIdentityProto.network_id)
}
inline void NetworkIdentityProto::set_network_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  network_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.NetworkIdentityProto.network_id)
}
inline void NetworkIdentityProto::set_network_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  network_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.NetworkIdentityProto.network_id)
}
inline std::string* NetworkIdentityProto::mutable_network_id() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.service.NetworkIdentityProto.network_id)
  return network_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NetworkIdentityProto::release_network_id() {
  // @@protoc_insertion_point(field_release:android.service.NetworkIdentityProto.network_id)
  if (!has_network_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return network_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkIdentityProto::set_allocated_network_id(std::string* network_id) {
  if (network_id != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  network_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), network_id);
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkIdentityProto.network_id)
}

// optional bool roaming = 4;
inline bool NetworkIdentityProto::has_roaming() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetworkIdentityProto::clear_roaming() {
  roaming_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool NetworkIdentityProto::roaming() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.roaming)
  return roaming_;
}
inline void NetworkIdentityProto::set_roaming(bool value) {
  _has_bits_[0] |= 0x00000008u;
  roaming_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.roaming)
}

// optional bool metered = 5;
inline bool NetworkIdentityProto::has_metered() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NetworkIdentityProto::clear_metered() {
  metered_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool NetworkIdentityProto::metered() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.metered)
  return metered_;
}
inline void NetworkIdentityProto::set_metered(bool value) {
  _has_bits_[0] |= 0x00000010u;
  metered_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.metered)
}

// optional bool default_network = 6;
inline bool NetworkIdentityProto::has_default_network() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NetworkIdentityProto::clear_default_network() {
  default_network_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool NetworkIdentityProto::default_network() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.default_network)
  return default_network_;
}
inline void NetworkIdentityProto::set_default_network(bool value) {
  _has_bits_[0] |= 0x00000020u;
  default_network_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.default_network)
}

// optional int32 oem_managed_network = 7;
inline bool NetworkIdentityProto::has_oem_managed_network() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NetworkIdentityProto::clear_oem_managed_network() {
  oem_managed_network_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetworkIdentityProto::oem_managed_network() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkIdentityProto.oem_managed_network)
  return oem_managed_network_;
}
inline void NetworkIdentityProto::set_oem_managed_network(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  oem_managed_network_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkIdentityProto.oem_managed_network)
}

// -------------------------------------------------------------------

// NetworkStatsRecorderProto

// optional int64 pending_total_bytes = 1;
inline bool NetworkStatsRecorderProto::has_pending_total_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkStatsRecorderProto::clear_pending_total_bytes() {
  pending_total_bytes_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsRecorderProto::pending_total_bytes() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsRecorderProto.pending_total_bytes)
  return pending_total_bytes_;
}
inline void NetworkStatsRecorderProto::set_pending_total_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  pending_total_bytes_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsRecorderProto.pending_total_bytes)
}

// optional .android.service.NetworkStatsCollectionProto complete_history = 2;
inline bool NetworkStatsRecorderProto::has_complete_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatsRecorderProto::clear_complete_history() {
  if (complete_history_ != nullptr) complete_history_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::service::NetworkStatsCollectionProto& NetworkStatsRecorderProto::complete_history() const {
  const ::android::service::NetworkStatsCollectionProto* p = complete_history_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsRecorderProto.complete_history)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsCollectionProto*>(
      &::android::service::_NetworkStatsCollectionProto_default_instance_);
}
inline ::android::service::NetworkStatsCollectionProto* NetworkStatsRecorderProto::release_complete_history() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsRecorderProto.complete_history)
  _has_bits_[0] &= ~0x00000001u;
  ::android::service::NetworkStatsCollectionProto* temp = complete_history_;
  complete_history_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsCollectionProto* NetworkStatsRecorderProto::mutable_complete_history() {
  _has_bits_[0] |= 0x00000001u;
  if (complete_history_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsCollectionProto>(GetArenaNoVirtual());
    complete_history_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsRecorderProto.complete_history)
  return complete_history_;
}
inline void NetworkStatsRecorderProto::set_allocated_complete_history(::android::service::NetworkStatsCollectionProto* complete_history) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete complete_history_;
  }
  if (complete_history) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      complete_history = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, complete_history, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  complete_history_ = complete_history;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsRecorderProto.complete_history)
}

// -------------------------------------------------------------------

// NetworkStatsCollectionProto

// repeated .android.service.NetworkStatsCollectionStatsProto stats = 1;
inline int NetworkStatsCollectionProto::stats_size() const {
  return stats_.size();
}
inline void NetworkStatsCollectionProto::clear_stats() {
  stats_.Clear();
}
inline ::android::service::NetworkStatsCollectionStatsProto* NetworkStatsCollectionProto::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsCollectionProto.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsCollectionStatsProto >*
NetworkStatsCollectionProto::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.NetworkStatsCollectionProto.stats)
  return &stats_;
}
inline const ::android::service::NetworkStatsCollectionStatsProto& NetworkStatsCollectionProto::stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionProto.stats)
  return stats_.Get(index);
}
inline ::android::service::NetworkStatsCollectionStatsProto* NetworkStatsCollectionProto::add_stats() {
  // @@protoc_insertion_point(field_add:android.service.NetworkStatsCollectionProto.stats)
  return stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsCollectionStatsProto >&
NetworkStatsCollectionProto::stats() const {
  // @@protoc_insertion_point(field_list:android.service.NetworkStatsCollectionProto.stats)
  return stats_;
}

// -------------------------------------------------------------------

// NetworkStatsCollectionStatsProto

// optional .android.service.NetworkStatsCollectionKeyProto key = 1;
inline bool NetworkStatsCollectionStatsProto::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatsCollectionStatsProto::clear_key() {
  if (key_ != nullptr) key_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::service::NetworkStatsCollectionKeyProto& NetworkStatsCollectionStatsProto::key() const {
  const ::android::service::NetworkStatsCollectionKeyProto* p = key_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionStatsProto.key)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsCollectionKeyProto*>(
      &::android::service::_NetworkStatsCollectionKeyProto_default_instance_);
}
inline ::android::service::NetworkStatsCollectionKeyProto* NetworkStatsCollectionStatsProto::release_key() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsCollectionStatsProto.key)
  _has_bits_[0] &= ~0x00000001u;
  ::android::service::NetworkStatsCollectionKeyProto* temp = key_;
  key_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsCollectionKeyProto* NetworkStatsCollectionStatsProto::mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  if (key_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsCollectionKeyProto>(GetArenaNoVirtual());
    key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsCollectionStatsProto.key)
  return key_;
}
inline void NetworkStatsCollectionStatsProto::set_allocated_key(::android::service::NetworkStatsCollectionKeyProto* key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete key_;
  }
  if (key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsCollectionStatsProto.key)
}

// optional .android.service.NetworkStatsHistoryProto history = 2;
inline bool NetworkStatsCollectionStatsProto::has_history() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkStatsCollectionStatsProto::clear_history() {
  if (history_ != nullptr) history_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::service::NetworkStatsHistoryProto& NetworkStatsCollectionStatsProto::history() const {
  const ::android::service::NetworkStatsHistoryProto* p = history_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionStatsProto.history)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsHistoryProto*>(
      &::android::service::_NetworkStatsHistoryProto_default_instance_);
}
inline ::android::service::NetworkStatsHistoryProto* NetworkStatsCollectionStatsProto::release_history() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsCollectionStatsProto.history)
  _has_bits_[0] &= ~0x00000002u;
  ::android::service::NetworkStatsHistoryProto* temp = history_;
  history_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsHistoryProto* NetworkStatsCollectionStatsProto::mutable_history() {
  _has_bits_[0] |= 0x00000002u;
  if (history_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsHistoryProto>(GetArenaNoVirtual());
    history_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsCollectionStatsProto.history)
  return history_;
}
inline void NetworkStatsCollectionStatsProto::set_allocated_history(::android::service::NetworkStatsHistoryProto* history) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete history_;
  }
  if (history) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      history = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, history, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  history_ = history;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsCollectionStatsProto.history)
}

// -------------------------------------------------------------------

// NetworkStatsCollectionKeyProto

// optional .android.service.NetworkIdentitySetProto identity = 1;
inline bool NetworkStatsCollectionKeyProto::has_identity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatsCollectionKeyProto::clear_identity() {
  if (identity_ != nullptr) identity_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::service::NetworkIdentitySetProto& NetworkStatsCollectionKeyProto::identity() const {
  const ::android::service::NetworkIdentitySetProto* p = identity_;
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionKeyProto.identity)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkIdentitySetProto*>(
      &::android::service::_NetworkIdentitySetProto_default_instance_);
}
inline ::android::service::NetworkIdentitySetProto* NetworkStatsCollectionKeyProto::release_identity() {
  // @@protoc_insertion_point(field_release:android.service.NetworkStatsCollectionKeyProto.identity)
  _has_bits_[0] &= ~0x00000001u;
  ::android::service::NetworkIdentitySetProto* temp = identity_;
  identity_ = nullptr;
  return temp;
}
inline ::android::service::NetworkIdentitySetProto* NetworkStatsCollectionKeyProto::mutable_identity() {
  _has_bits_[0] |= 0x00000001u;
  if (identity_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkIdentitySetProto>(GetArenaNoVirtual());
    identity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsCollectionKeyProto.identity)
  return identity_;
}
inline void NetworkStatsCollectionKeyProto::set_allocated_identity(::android::service::NetworkIdentitySetProto* identity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete identity_;
  }
  if (identity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      identity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, identity, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  identity_ = identity;
  // @@protoc_insertion_point(field_set_allocated:android.service.NetworkStatsCollectionKeyProto.identity)
}

// optional int32 uid = 2;
inline bool NetworkStatsCollectionKeyProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkStatsCollectionKeyProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetworkStatsCollectionKeyProto::uid() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionKeyProto.uid)
  return uid_;
}
inline void NetworkStatsCollectionKeyProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsCollectionKeyProto.uid)
}

// optional int32 set = 3;
inline bool NetworkStatsCollectionKeyProto::has_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetworkStatsCollectionKeyProto::clear_set() {
  set_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetworkStatsCollectionKeyProto::set() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionKeyProto.set)
  return set_;
}
inline void NetworkStatsCollectionKeyProto::set_set(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  set_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsCollectionKeyProto.set)
}

// optional int32 tag = 4;
inline bool NetworkStatsCollectionKeyProto::has_tag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetworkStatsCollectionKeyProto::clear_tag() {
  tag_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetworkStatsCollectionKeyProto::tag() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsCollectionKeyProto.tag)
  return tag_;
}
inline void NetworkStatsCollectionKeyProto::set_tag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  tag_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsCollectionKeyProto.tag)
}

// -------------------------------------------------------------------

// NetworkStatsHistoryProto

// optional int64 bucket_duration_ms = 1;
inline bool NetworkStatsHistoryProto::has_bucket_duration_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatsHistoryProto::clear_bucket_duration_ms() {
  bucket_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryProto::bucket_duration_ms() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryProto.bucket_duration_ms)
  return bucket_duration_ms_;
}
inline void NetworkStatsHistoryProto::set_bucket_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  bucket_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryProto.bucket_duration_ms)
}

// repeated .android.service.NetworkStatsHistoryBucketProto buckets = 2;
inline int NetworkStatsHistoryProto::buckets_size() const {
  return buckets_.size();
}
inline void NetworkStatsHistoryProto::clear_buckets() {
  buckets_.Clear();
}
inline ::android::service::NetworkStatsHistoryBucketProto* NetworkStatsHistoryProto::mutable_buckets(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.NetworkStatsHistoryProto.buckets)
  return buckets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsHistoryBucketProto >*
NetworkStatsHistoryProto::mutable_buckets() {
  // @@protoc_insertion_point(field_mutable_list:android.service.NetworkStatsHistoryProto.buckets)
  return &buckets_;
}
inline const ::android::service::NetworkStatsHistoryBucketProto& NetworkStatsHistoryProto::buckets(int index) const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryProto.buckets)
  return buckets_.Get(index);
}
inline ::android::service::NetworkStatsHistoryBucketProto* NetworkStatsHistoryProto::add_buckets() {
  // @@protoc_insertion_point(field_add:android.service.NetworkStatsHistoryProto.buckets)
  return buckets_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::NetworkStatsHistoryBucketProto >&
NetworkStatsHistoryProto::buckets() const {
  // @@protoc_insertion_point(field_list:android.service.NetworkStatsHistoryProto.buckets)
  return buckets_;
}

// -------------------------------------------------------------------

// NetworkStatsHistoryBucketProto

// optional int64 bucket_start_ms = 1;
inline bool NetworkStatsHistoryBucketProto::has_bucket_start_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkStatsHistoryBucketProto::clear_bucket_start_ms() {
  bucket_start_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryBucketProto::bucket_start_ms() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryBucketProto.bucket_start_ms)
  return bucket_start_ms_;
}
inline void NetworkStatsHistoryBucketProto::set_bucket_start_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  bucket_start_ms_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryBucketProto.bucket_start_ms)
}

// optional int64 rx_bytes = 2;
inline bool NetworkStatsHistoryBucketProto::has_rx_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkStatsHistoryBucketProto::clear_rx_bytes() {
  rx_bytes_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryBucketProto::rx_bytes() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryBucketProto.rx_bytes)
  return rx_bytes_;
}
inline void NetworkStatsHistoryBucketProto::set_rx_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  rx_bytes_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryBucketProto.rx_bytes)
}

// optional int64 rx_packets = 3;
inline bool NetworkStatsHistoryBucketProto::has_rx_packets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetworkStatsHistoryBucketProto::clear_rx_packets() {
  rx_packets_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryBucketProto::rx_packets() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryBucketProto.rx_packets)
  return rx_packets_;
}
inline void NetworkStatsHistoryBucketProto::set_rx_packets(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  rx_packets_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryBucketProto.rx_packets)
}

// optional int64 tx_bytes = 4;
inline bool NetworkStatsHistoryBucketProto::has_tx_bytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NetworkStatsHistoryBucketProto::clear_tx_bytes() {
  tx_bytes_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryBucketProto::tx_bytes() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryBucketProto.tx_bytes)
  return tx_bytes_;
}
inline void NetworkStatsHistoryBucketProto::set_tx_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  tx_bytes_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryBucketProto.tx_bytes)
}

// optional int64 tx_packets = 5;
inline bool NetworkStatsHistoryBucketProto::has_tx_packets() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NetworkStatsHistoryBucketProto::clear_tx_packets() {
  tx_packets_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryBucketProto::tx_packets() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryBucketProto.tx_packets)
  return tx_packets_;
}
inline void NetworkStatsHistoryBucketProto::set_tx_packets(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  tx_packets_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryBucketProto.tx_packets)
}

// optional int64 operations = 6;
inline bool NetworkStatsHistoryBucketProto::has_operations() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NetworkStatsHistoryBucketProto::clear_operations() {
  operations_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 NetworkStatsHistoryBucketProto::operations() const {
  // @@protoc_insertion_point(field_get:android.service.NetworkStatsHistoryBucketProto.operations)
  return operations_;
}
inline void NetworkStatsHistoryBucketProto::set_operations(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  operations_ = value;
  // @@protoc_insertion_point(field_set:android.service.NetworkStatsHistoryBucketProto.operations)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetstats_2eproto
